; ModuleID = 'c-decl.bc'
source_filename = "c-decl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type { i8 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type { %struct.c_language_function, %union.tree_node*, %union.tree_node*, %struct.c_switch*, %struct.c_arg_info*, i32, i32, i32, i32 }
%struct.c_language_function = type { %struct.stmt_tree_s }
%struct.stmt_tree_s = type { %union.tree_node*, i32 }
%struct.c_switch = type opaque
%struct.c_arg_info = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.c_inline_static = type { i32, %union.tree_node*, %union.tree_node*, i32, %struct.c_inline_static* }
%struct.c_scope = type { %struct.c_scope*, %struct.c_scope*, %struct.c_binding*, %union.tree_node*, %union.tree_node*, i40 }
%struct.c_binding = type { %union.anon.0, %union.tree_node*, %union.tree_node*, %struct.c_binding*, %struct.c_binding*, i32, i32 }
%union.anon.0 = type { %union.tree_node* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.c_struct_parse_info = type { %struct.VEC_tree_heap*, %struct.VEC_c_binding_ptr_heap*, %struct.VEC_tree_heap* }
%struct.VEC_c_binding_ptr_heap = type { %struct.VEC_c_binding_ptr_base }
%struct.VEC_c_binding_ptr_base = type { i32, i32, [1 x %struct.c_binding*] }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.cpp_hashnode = type { %struct.ht_identifier, i8, i8, i16, %union._cpp_hashnode_value }
%struct.ht_identifier = type { i8*, i32, i32 }
%union._cpp_hashnode_value = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.lang_identifier = type { %struct.c_common_identifier, %struct.c_binding*, %struct.c_binding*, %struct.c_binding* }
%struct.c_common_identifier = type { %struct.tree_common, %struct.cpp_hashnode }
%struct.c_label_vars = type { %struct.c_label_vars*, %struct.c_spot_bindings, %struct.VEC_tree_gc*, %struct.VEC_c_goto_bindings_p_gc* }
%struct.c_spot_bindings = type { %struct.c_scope*, %struct.c_binding*, i32, i8 }
%struct.VEC_c_goto_bindings_p_gc = type { %struct.VEC_c_goto_bindings_p_base }
%struct.VEC_c_goto_bindings_p_base = type { i32, i32, [1 x %struct.c_goto_bindings*] }
%struct.c_goto_bindings = type { i32, %struct.c_spot_bindings }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type { %struct.sorted_fields_type*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.sorted_fields_type = type { i32, [1 x %union.tree_node*] }
%struct.c_declspecs = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i8, i32, i16, i8 }
%struct.c_declarator = type { i32, %struct.c_declarator*, i32, %union.anon.1 }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { %union.tree_node*, i32, %union.tree_node*, i8 }
%struct.c_type_name = type { %struct.c_declspecs*, %struct.c_declarator* }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.c_parm = type { %struct.c_declspecs*, %union.tree_node*, %struct.c_declarator* }
%struct.c_typespec = type { i32, %union.tree_node*, %union.tree_node*, i8 }
%struct.pointer_set_t = type opaque
%struct.c_enum_contents = type { %union.tree_node*, i32 }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.tree_block = type { %struct.tree_common, i32, i32, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%union.lang_tree_node = type { %union.tree_node }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.var_ann_d = type opaque
%struct.die_struct = type opaque
%struct.ptr_info_def = type opaque
%struct.tree_statement_list_node = type { %struct.tree_statement_list_node*, %struct.tree_statement_list_node*, %union.tree_node* }
%struct.answer = type opaque
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@input_location = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@ridpointers = external dso_local local_unnamed_addr global %union.tree_node**, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"rid %p \22%s\22\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.4 = private unnamed_addr constant [39 x i8] c"array %q+D assumed to have one element\00", align 1
@c_inline_statics = internal global %struct.c_inline_static* null, align 8, !dbg !0
@current_scope = internal global %struct.c_scope* null, align 8, !dbg !2336
@file_scope = internal global %struct.c_scope* null, align 8, !dbg !2340
@c_override_global_bindings_to_false = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2334
@keep_next_level_flag = internal unnamed_addr global i1 false, align 1, !dbg !2356
@next_is_function_body = internal unnamed_addr global i1 false, align 1, !dbg !2357
@current_function_scope = internal global %struct.c_scope* null, align 8, !dbg !2338
@scope_freelist = internal global %struct.c_scope* null, align 8, !dbg !2344
@.str.5 = private unnamed_addr constant [35 x i8] c"GCC supports only %u nested scopes\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@all_translation_units = internal global %union.tree_node* null, align 8, !dbg !2320
@.str.6 = private unnamed_addr constant [32 x i8] c"label %q+D used but not defined\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"c-decl.c\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@external_scope = internal global %struct.c_scope* null, align 8, !dbg !2342
@.str.9 = private unnamed_addr constant [48 x i8] c"nested function %q+D declared but never defined\00", align 1
@undef_nested_function = internal unnamed_addr global i1 false, align 1, !dbg !2358
@flag_gnu89_inline = external dso_local local_unnamed_addr global i32, align 4
@.str.10 = private unnamed_addr constant [48 x i8] c"inline function %q+D declared but never defined\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"unused variable %q+D\00", align 1
@.str.12 = private unnamed_addr constant [71 x i8] c"type of array %q+D completed incompatibly with implicit initialization\00", align 1
@num_in_fnames = external dso_local local_unnamed_addr global i32, align 4
@visible_builtins = internal global %union.tree_node* null, align 8, !dbg !2322
@pch_file = external dso_local local_unnamed_addr global i8*, align 8
@.str.13 = private unnamed_addr constant [33 x i8] c"nested extern declaration of %qD\00", align 1
@c_global_trees = external dso_local local_unnamed_addr global [55 x %union.tree_node*], align 16
@.str.14 = private unnamed_addr constant [59 x i8] c"incompatible implicit declaration of built-in function %qD\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"incompatible implicit declaration of function %qD\00", align 1
@undeclared_variable.already = internal unnamed_addr global i1 false, align 1, !dbg !2359
@.str.16 = private unnamed_addr constant [40 x i8] c"%qE undeclared here (not in a function)\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"%qE undeclared (first use in this function)\00", align 1
@.str.18 = private unnamed_addr constant [81 x i8] c"each undeclared identifier is reported only once for each function it appears in\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"label %qE referenced outside of any function\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"jump into statement expression\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"label %qD defined here\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"duplicate label declaration %qE\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"duplicate label %qD\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"traditional C lacks a separate namespace for labels, identifier %qE conflicts\00", align 1
@.str.25 = private unnamed_addr constant [66 x i8] c"switch jumps into scope of identifier with variably modified type\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"switch jumps over variable initialization\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"switch starts here\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"%qD declared here\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"switch jumps into statement expression\00", align 1
@pending_invalid_xref = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !2300
@pending_invalid_xref_location = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2302
@.str.30 = private unnamed_addr constant [33 x i8] c"%qE defined as wrong kind of tag\00", align 1
@parser_obstack = common dso_local global %struct.obstack zeroinitializer, align 8, !dbg !2312
@flag_signed_char = external dso_local local_unnamed_addr global i32, align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.31 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@pedantic_lvalues = external dso_local local_unnamed_addr global i32, align 4
@make_fname_decl = external dso_local local_unnamed_addr global %union.tree_node* (i32, %union.tree_node*, i32)*, align 8
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@.str.32 = private unnamed_addr constant [28 x i8] c"invalid use of %<restrict%>\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"unnamed struct/union that defines no instances\00", align 1
@.str.34 = private unnamed_addr constant [70 x i8] c"empty declaration with storage class specifier does not redeclare tag\00", align 1
@.str.35 = private unnamed_addr constant [61 x i8] c"empty declaration with type qualifier does not redeclare tag\00", align 1
@.str.36 = private unnamed_addr constant [39 x i8] c"useless type name in empty declaration\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%<inline%> in empty declaration\00", align 1
@.str.38 = private unnamed_addr constant [41 x i8] c"%<auto%> in file-scope empty declaration\00", align 1
@.str.39 = private unnamed_addr constant [45 x i8] c"%<register%> in file-scope empty declaration\00", align 1
@.str.40 = private unnamed_addr constant [53 x i8] c"useless storage class specifier in empty declaration\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"useless %<__thread%> in empty declaration\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"useless type qualifier in empty declaration\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"empty declaration\00", align 1
@flag_isoc99 = external dso_local local_unnamed_addr global i32, align 4
@.str.44 = private unnamed_addr constant [86 x i8] c"ISO C90 does not support %<static%> or type qualifiers in parameter array declarators\00", align 1
@.str.45 = private unnamed_addr constant [51 x i8] c"ISO C90 does not support %<[*]%> array declarators\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"%<[*]%> not allowed in other than function prototype scope\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"%q+D is usually a function\00", align 1
@.str.49 = private unnamed_addr constant [52 x i8] c"typedef %qD is initialized (use __typeof__ instead)\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"function %qD is initialized like a variable\00", align 1
@.str.51 = private unnamed_addr constant [29 x i8] c"parameter %qD is initialized\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str.53 = private unnamed_addr constant [49 x i8] c"variable %qD has initializer but incomplete type\00", align 1
@flag_no_common = external dso_local local_unnamed_addr global i32, align 4
@.str.54 = private unnamed_addr constant [11 x i8] c"gnu_inline\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.55 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.56 = private unnamed_addr constant [46 x i8] c"inline function %q+D given attribute noinline\00", align 1
@c_language = external dso_local local_unnamed_addr global i32, align 4
@pedantic = external dso_local local_unnamed_addr global i32, align 4
@.str.57 = private unnamed_addr constant [44 x i8] c"initializer fails to determine size of %q+D\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"array size missing in %q+D\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"zero or negative size array %q+D\00", align 1
@.str.60 = private unnamed_addr constant [34 x i8] c"storage size of %q+D isn%'t known\00", align 1
@.str.61 = private unnamed_addr constant [37 x i8] c"storage size of %q+D isn%'t constant\00", align 1
@.str.62 = private unnamed_addr constant [58 x i8] c"ignoring asm-specifier for non-static local variable %q+D\00", align 1
@.str.63 = private unnamed_addr constant [52 x i8] c"cannot put object with volatile field into register\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@warn_cxx_compat = external dso_local local_unnamed_addr global i32, align 4
@.str.65 = private unnamed_addr constant [42 x i8] c"uninitialized const %qD is invalid in C++\00", align 1
@.str.66 = private unnamed_addr constant [45 x i8] c"ISO C forbids forward parameter declarations\00", align 1
@.str.67 = private unnamed_addr constant [56 x i8] c"defining a type in a compound literal is invalid in C++\00", align 1
@get_parm_info.explained_incomplete_types = internal unnamed_addr global i1 false, align 1, !dbg !2360
@.str.68 = private unnamed_addr constant [48 x i8] c"%<void%> as only parameter may not be qualified\00", align 1
@.str.69 = private unnamed_addr constant [36 x i8] c"%<void%> must be the only parameter\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"parameter %q+D has just a forward declaration\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.74 = private unnamed_addr constant [41 x i8] c"%<%s %E%> declared inside parameter list\00", align 1
@.str.75 = private unnamed_addr constant [44 x i8] c"anonymous %s declared inside parameter list\00", align 1
@.str.76 = private unnamed_addr constant [86 x i8] c"its scope is only this definition or declaration, which is probably not what you want\00", align 1
@.str.77 = private unnamed_addr constant [59 x i8] c"enum type defined in struct or union is not visible in C++\00", align 1
@.str.78 = private unnamed_addr constant [23 x i8] c"enum type defined here\00", align 1
@.str.79 = private unnamed_addr constant [56 x i8] c"struct defined in struct or union is not visible in C++\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"struct defined here\00", align 1
@.str.81 = private unnamed_addr constant [55 x i8] c"union defined in struct or union is not visible in C++\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"union defined here\00", align 1
@.str.83 = private unnamed_addr constant [29 x i8] c"redefinition of %<union %E%>\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"redefinition of %<struct %E%>\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"originally defined here\00", align 1
@.str.86 = private unnamed_addr constant [36 x i8] c"nested redefinition of %<union %E%>\00", align 1
@.str.87 = private unnamed_addr constant [37 x i8] c"nested redefinition of %<struct %E%>\00", align 1
@flag_pack_struct = external dso_local local_unnamed_addr global i32, align 4
@struct_parse_info = internal unnamed_addr global %struct.c_struct_parse_info* null, align 8, !dbg !2352
@in_sizeof = external dso_local local_unnamed_addr global i32, align 4
@in_typeof = external dso_local local_unnamed_addr global i32, align 4
@in_alignof = external dso_local local_unnamed_addr global i32, align 4
@.str.88 = private unnamed_addr constant [50 x i8] c"defining type in %qs expression is invalid in C++\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"alignof\00", align 1
@flag_ms_extensions = external dso_local local_unnamed_addr global i32, align 4
@flag_iso = external dso_local local_unnamed_addr global i32, align 4
@.str.92 = private unnamed_addr constant [38 x i8] c"declaration does not declare anything\00", align 1
@.str.93 = private unnamed_addr constant [46 x i8] c"ISO C doesn%'t support unnamed structs/unions\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"union has no named members\00", align 1
@.str.95 = private unnamed_addr constant [21 x i8] c"union has no members\00", align 1
@.str.96 = private unnamed_addr constant [28 x i8] c"struct has no named members\00", align 1
@.str.97 = private unnamed_addr constant [22 x i8] c"struct has no members\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"flexible array member in union\00", align 1
@.str.99 = private unnamed_addr constant [43 x i8] c"flexible array member not at end of struct\00", align 1
@.str.100 = private unnamed_addr constant [48 x i8] c"flexible array member in otherwise empty struct\00", align 1
@.str.101 = private unnamed_addr constant [52 x i8] c"invalid use of structure with flexible array member\00", align 1
@.str.102 = private unnamed_addr constant [33 x i8] c"union cannot be made transparent\00", align 1
@.str.103 = private unnamed_addr constant [35 x i8] c"nested redefinition of %<enum %E%>\00", align 1
@.str.104 = private unnamed_addr constant [29 x i8] c"redeclaration of %<enum %E%>\00", align 1
@flag_short_enums = external dso_local local_unnamed_addr global i32, align 4
@.str.105 = private unnamed_addr constant [51 x i8] c"enumeration values exceed range of largest integer\00", align 1
@.str.106 = private unnamed_addr constant [45 x i8] c"specified mode too small for enumeral values\00", align 1
@.str.107 = private unnamed_addr constant [52 x i8] c"enumerator value for %qE is not an integer constant\00", align 1
@.str.108 = private unnamed_addr constant [63 x i8] c"enumerator value for %qE is not an integer constant expression\00", align 1
@.str.109 = private unnamed_addr constant [31 x i8] c"overflow in enumeration values\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"ISO C restricts enumerator values to range of %<int%>\00", align 1
@current_function_returns_value = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2324
@current_function_returns_null = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2326
@current_function_returns_abnormally = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2328
@warn_about_return_type = internal unnamed_addr global i32 0, align 4, !dbg !2330
@c_switch_stack = external dso_local local_unnamed_addr global %struct.c_switch*, align 8
@c_cont_label = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !2318
@c_break_label = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !2316
@.str.111 = private unnamed_addr constant [45 x i8] c"inline function %qD given attribute noinline\00", align 1
@.str.112 = private unnamed_addr constant [34 x i8] c"return type is an incomplete type\00", align 1
@warn_return_type = external dso_local local_unnamed_addr global i32, align 4
@.str.113 = private unnamed_addr constant [32 x i8] c"return type defaults to %<int%>\00", align 1
@current_function_prototype_locus = internal unnamed_addr global i32 0, align 4, !dbg !2304
@current_function_prototype_built_in = internal unnamed_addr global i8 0, align 1, !dbg !2306
@current_function_prototype_arg_types = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2308
@warn_strict_prototypes = external dso_local local_unnamed_addr global i32, align 4
@.str.114 = private unnamed_addr constant [40 x i8] c"function declaration isn%'t a prototype\00", align 1
@warn_missing_prototypes = external dso_local local_unnamed_addr global i32, align 4
@.str.115 = private unnamed_addr constant [30 x i8] c"no previous prototype for %qD\00", align 1
@.str.116 = private unnamed_addr constant [53 x i8] c"%qD was used with no prototype before its definition\00", align 1
@warn_missing_declarations = external dso_local local_unnamed_addr global i32, align 4
@.str.117 = private unnamed_addr constant [32 x i8] c"no previous declaration for %qD\00", align 1
@.str.118 = private unnamed_addr constant [55 x i8] c"%qD was used with no declaration before its definition\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@warn_main = external dso_local local_unnamed_addr global i32, align 4
@.str.119 = private unnamed_addr constant [34 x i8] c"return type of %qD is not %<int%>\00", align 1
@.str.120 = private unnamed_addr constant [38 x i8] c"%qD is normally a non-static function\00", align 1
@current_function_arg_info = internal unnamed_addr global %struct.c_arg_info* null, align 8, !dbg !2310
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@flag_hosted = external dso_local local_unnamed_addr global i32, align 4
@.str.121 = private unnamed_addr constant [51 x i8] c"no return statement in function returning non-void\00", align 1
@cgraph_global_info_ready = external dso_local local_unnamed_addr global i8, align 1
@check_for_loop_decls.hint = internal unnamed_addr global i1 false, align 1, !dbg !2361
@.str.122 = private unnamed_addr constant [63 x i8] c"%<for%> loop initial declarations are only allowed in C99 mode\00", align 1
@.str.123 = private unnamed_addr constant [55 x i8] c"use option -std=c99 or -std=gnu99 to compile your code\00", align 1
@.str.124 = private unnamed_addr constant [71 x i8] c"declaration of static variable %qD in %<for%> loop initial declaration\00", align 1
@.str.125 = private unnamed_addr constant [75 x i8] c"declaration of %<extern%> variable %qD in %<for%> loop initial declaration\00", align 1
@.str.126 = private unnamed_addr constant [59 x i8] c"%<struct %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.127 = private unnamed_addr constant [58 x i8] c"%<union %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.128 = private unnamed_addr constant [57 x i8] c"%<enum %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.129 = private unnamed_addr constant [68 x i8] c"declaration of non-variable %qD in %<for%> loop initial declaration\00", align 1
@c_stmt_tree = internal global %struct.stmt_tree_s zeroinitializer, align 8, !dbg !2314
@debug_hooks = external dso_local local_unnamed_addr global %struct.gcc_debug_hooks*, align 8
@.str.130 = private unnamed_addr constant [50 x i8] c"incompatible address space qualifiers %qs and %qs\00", align 1
@.str.131 = private unnamed_addr constant [14 x i8] c"duplicate %qE\00", align 1
@.str.132 = private unnamed_addr constant [49 x i8] c"two or more data types in declaration specifiers\00", align 1
@.str.133 = private unnamed_addr constant [39 x i8] c"%<long long long%> is too long for GCC\00", align 1
@.str.134 = private unnamed_addr constant [60 x i8] c"both %<long long%> and %<double%> in declaration specifiers\00", align 1
@.str.135 = private unnamed_addr constant [39 x i8] c"ISO C90 does not support %<long long%>\00", align 1
@.str.136 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<short%> in declaration specifiers\00", align 1
@.str.137 = private unnamed_addr constant [53 x i8] c"both %<long%> and %<void%> in declaration specifiers\00", align 1
@.str.138 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.139 = private unnamed_addr constant [53 x i8] c"both %<long%> and %<char%> in declaration specifiers\00", align 1
@.str.140 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<float%> in declaration specifiers\00", align 1
@.str.141 = private unnamed_addr constant [59 x i8] c"both %<long%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.142 = private unnamed_addr constant [59 x i8] c"both %<long%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.143 = private unnamed_addr constant [60 x i8] c"both %<long%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.144 = private unnamed_addr constant [54 x i8] c"both %<short%> and %<void%> in declaration specifiers\00", align 1
@.str.145 = private unnamed_addr constant [55 x i8] c"both %<short%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.146 = private unnamed_addr constant [54 x i8] c"both %<short%> and %<char%> in declaration specifiers\00", align 1
@.str.147 = private unnamed_addr constant [55 x i8] c"both %<short%> and %<float%> in declaration specifiers\00", align 1
@.str.148 = private unnamed_addr constant [56 x i8] c"both %<short%> and %<double%> in declaration specifiers\00", align 1
@.str.149 = private unnamed_addr constant [60 x i8] c"both %<short%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.150 = private unnamed_addr constant [60 x i8] c"both %<short%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.151 = private unnamed_addr constant [61 x i8] c"both %<short%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.152 = private unnamed_addr constant [59 x i8] c"both %<signed%> and %<unsigned%> in declaration specifiers\00", align 1
@.str.153 = private unnamed_addr constant [55 x i8] c"both %<signed%> and %<void%> in declaration specifiers\00", align 1
@.str.154 = private unnamed_addr constant [56 x i8] c"both %<signed%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.155 = private unnamed_addr constant [56 x i8] c"both %<signed%> and %<float%> in declaration specifiers\00", align 1
@.str.156 = private unnamed_addr constant [57 x i8] c"both %<signed%> and %<double%> in declaration specifiers\00", align 1
@.str.157 = private unnamed_addr constant [61 x i8] c"both %<signed%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.158 = private unnamed_addr constant [61 x i8] c"both %<signed%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.159 = private unnamed_addr constant [62 x i8] c"both %<signed%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.160 = private unnamed_addr constant [57 x i8] c"both %<unsigned%> and %<void%> in declaration specifiers\00", align 1
@.str.161 = private unnamed_addr constant [58 x i8] c"both %<unsigned%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.162 = private unnamed_addr constant [58 x i8] c"both %<unsigned%> and %<float%> in declaration specifiers\00", align 1
@.str.163 = private unnamed_addr constant [59 x i8] c"both %<unsigned%> and %<double%> in declaration specifiers\00", align 1
@.str.164 = private unnamed_addr constant [63 x i8] c"both %<unsigned%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.165 = private unnamed_addr constant [63 x i8] c"both %<unsigned%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.166 = private unnamed_addr constant [64 x i8] c"both %<unsigned%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.167 = private unnamed_addr constant [39 x i8] c"ISO C90 does not support complex types\00", align 1
@.str.168 = private unnamed_addr constant [56 x i8] c"both %<complex%> and %<void%> in declaration specifiers\00", align 1
@.str.169 = private unnamed_addr constant [57 x i8] c"both %<complex%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.170 = private unnamed_addr constant [62 x i8] c"both %<complex%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.171 = private unnamed_addr constant [62 x i8] c"both %<complex%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.172 = private unnamed_addr constant [63 x i8] c"both %<complex%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.173 = private unnamed_addr constant [58 x i8] c"both %<complex%> and %<_Fract%> in declaration specifiers\00", align 1
@.str.174 = private unnamed_addr constant [58 x i8] c"both %<complex%> and %<_Accum%> in declaration specifiers\00", align 1
@.str.175 = private unnamed_addr constant [56 x i8] c"both %<complex%> and %<_Sat%> in declaration specifiers\00", align 1
@.str.176 = private unnamed_addr constant [40 x i8] c"ISO C does not support saturating types\00", align 1
@.str.177 = private unnamed_addr constant [53 x i8] c"both %<_Sat%> and %<void%> in declaration specifiers\00", align 1
@.str.178 = private unnamed_addr constant [54 x i8] c"both %<_Sat%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.179 = private unnamed_addr constant [53 x i8] c"both %<_Sat%> and %<char%> in declaration specifiers\00", align 1
@.str.180 = private unnamed_addr constant [52 x i8] c"both %<_Sat%> and %<int%> in declaration specifiers\00", align 1
@.str.181 = private unnamed_addr constant [54 x i8] c"both %<_Sat%> and %<float%> in declaration specifiers\00", align 1
@.str.182 = private unnamed_addr constant [55 x i8] c"both %<_Sat%> and %<double%> in declaration specifiers\00", align 1
@.str.183 = private unnamed_addr constant [59 x i8] c"both %<_Sat%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.184 = private unnamed_addr constant [59 x i8] c"both %<_Sat%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.185 = private unnamed_addr constant [60 x i8] c"both %<_Sat%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.186 = private unnamed_addr constant [56 x i8] c"both %<_Sat%> and %<complex%> in declaration specifiers\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"_Decimal32\00", align 1
@.str.188 = private unnamed_addr constant [11 x i8] c"_Decimal64\00", align 1
@.str.189 = private unnamed_addr constant [12 x i8] c"_Decimal128\00", align 1
@.str.190 = private unnamed_addr constant [56 x i8] c"both %<long long%> and %<%s%> in declaration specifiers\00", align 1
@.str.191 = private unnamed_addr constant [51 x i8] c"both %<long%> and %<%s%> in declaration specifiers\00", align 1
@.str.192 = private unnamed_addr constant [52 x i8] c"both %<short%> and %<%s%> in declaration specifiers\00", align 1
@.str.193 = private unnamed_addr constant [53 x i8] c"both %<signed%> and %<%s%> in declaration specifiers\00", align 1
@.str.194 = private unnamed_addr constant [55 x i8] c"both %<unsigned%> and %<%s%> in declaration specifiers\00", align 1
@.str.195 = private unnamed_addr constant [54 x i8] c"both %<complex%> and %<%s%> in declaration specifiers\00", align 1
@.str.196 = private unnamed_addr constant [51 x i8] c"both %<_Sat%> and %<%s%> in declaration specifiers\00", align 1
@.str.197 = private unnamed_addr constant [53 x i8] c"decimal floating point not supported for this target\00", align 1
@.str.198 = private unnamed_addr constant [46 x i8] c"ISO C does not support decimal floating point\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"_Fract\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"_Accum\00", align 1
@.str.201 = private unnamed_addr constant [48 x i8] c"fixed-point types not supported for this target\00", align 1
@.str.202 = private unnamed_addr constant [41 x i8] c"ISO C does not support fixed-point types\00", align 1
@.str.203 = private unnamed_addr constant [51 x i8] c"C++ lookup of %qD would return a field, not a type\00", align 1
@.str.204 = private unnamed_addr constant [43 x i8] c"%qE fails to be a typedef or built in type\00", align 1
@.str.205 = private unnamed_addr constant [39 x i8] c"%qE is not at beginning of declaration\00", align 1
@.str.206 = private unnamed_addr constant [32 x i8] c"%<__thread%> used with %<auto%>\00", align 1
@.str.207 = private unnamed_addr constant [36 x i8] c"%<__thread%> used with %<register%>\00", align 1
@.str.208 = private unnamed_addr constant [35 x i8] c"%<__thread%> used with %<typedef%>\00", align 1
@.str.209 = private unnamed_addr constant [31 x i8] c"%<__thread%> before %<extern%>\00", align 1
@.str.210 = private unnamed_addr constant [31 x i8] c"%<__thread%> before %<static%>\00", align 1
@.str.211 = private unnamed_addr constant [51 x i8] c"multiple storage classes in declaration specifiers\00", align 1
@.str.212 = private unnamed_addr constant [27 x i8] c"%<__thread%> used with %qE\00", align 1
@.str.213 = private unnamed_addr constant [50 x i8] c"%<_Sat%> is used without %<_Fract%> or %<_Accum%>\00", align 1
@.str.214 = private unnamed_addr constant [68 x i8] c"ISO C does not support plain %<complex%> meaning %<double complex%>\00", align 1
@.str.215 = private unnamed_addr constant [45 x i8] c"ISO C does not support complex integer types\00", align 1
@flag_syntax_only = external dso_local local_unnamed_addr global i32, align 4
@ext_block = internal global %union.tree_node* null, align 8, !dbg !2354
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@sdb_debug_hooks = external dso_local constant %struct.gcc_debug_hooks, align 8
@dwarf2_debug_hooks = external dso_local constant %struct.gcc_debug_hooks, align 8
@omp_clause_num_ops = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gt_ggc_r_gt_c_decl_h = dso_local local_unnamed_addr constant [10 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @ext_block to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.c_inline_static** @c_inline_statics to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_inline_static, void (i8*)* @gt_pch_nx_c_inline_static }, %struct.ggc_root_tab { i8* bitcast (%struct.c_scope** @external_scope to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_scope, void (i8*)* @gt_pch_nx_c_scope }, %struct.ggc_root_tab { i8* bitcast (%struct.c_scope** @file_scope to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_scope, void (i8*)* @gt_pch_nx_c_scope }, %struct.ggc_root_tab { i8* bitcast (%struct.c_scope** @current_function_scope to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_scope, void (i8*)* @gt_pch_nx_c_scope }, %struct.ggc_root_tab { i8* bitcast (%struct.c_scope** @current_scope to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_scope, void (i8*)* @gt_pch_nx_c_scope }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @visible_builtins to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @all_translation_units to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i64 1, i64 16, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2278
@binding_freelist = internal global %struct.c_binding* null, align 8, !dbg !2346
@gt_ggc_rd_gt_c_decl_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.c_binding** @binding_freelist to i8*), i64 1, i64 8, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (%struct.c_scope** @scope_freelist to i8*), i64 1, i64 8, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2294
@gt_pch_rs_gt_c_decl_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i64 1, i64 16, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2297
@.str.216 = private unnamed_addr constant [66 x i8] c"%qD is static but used in inline function %qD which is not static\00", align 1
@.str.217 = private unnamed_addr constant [71 x i8] c"%q+D is static but declared in inline function %qD which is not static\00", align 1
@.str.218 = private unnamed_addr constant [44 x i8] c"%q+D redeclared as different kind of symbol\00", align 1
@.str.219 = private unnamed_addr constant [48 x i8] c"built-in function %q+D declared as non-function\00", align 1
@.str.220 = private unnamed_addr constant [48 x i8] c"declaration of %q+D shadows a built-in function\00", align 1
@.str.221 = private unnamed_addr constant [33 x i8] c"redeclaration of enumerator %q+D\00", align 1
@.str.222 = private unnamed_addr constant [45 x i8] c"conflicting types for built-in function %q+D\00", align 1
@.str.223 = private unnamed_addr constant [27 x i8] c"conflicting types for %q+D\00", align 1
@.str.224 = private unnamed_addr constant [58 x i8] c"conflicting named address spaces (generic vs %s) for %q+D\00", align 1
@.str.225 = private unnamed_addr constant [58 x i8] c"conflicting named address spaces (%s vs generic) for %q+D\00", align 1
@.str.226 = private unnamed_addr constant [53 x i8] c"conflicting named address spaces (%s vs %s) for %q+D\00", align 1
@.str.227 = private unnamed_addr constant [37 x i8] c"conflicting type qualifiers for %q+D\00", align 1
@.str.228 = private unnamed_addr constant [29 x i8] c"redefinition of typedef %q+D\00", align 1
@.str.229 = private unnamed_addr constant [21 x i8] c"redefinition of %q+D\00", align 1
@.str.230 = private unnamed_addr constant [58 x i8] c"static declaration of %q+D follows non-static declaration\00", align 1
@.str.231 = private unnamed_addr constant [58 x i8] c"non-static declaration of %q+D follows static declaration\00", align 1
@warn_traditional = external dso_local local_unnamed_addr global i32, align 4
@.str.232 = private unnamed_addr constant [41 x i8] c"%<gnu_inline%> attribute present on %q+D\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"but not here\00", align 1
@.str.234 = private unnamed_addr constant [70 x i8] c"thread-local declaration of %q+D follows non-thread-local declaration\00", align 1
@.str.235 = private unnamed_addr constant [70 x i8] c"non-thread-local declaration of %q+D follows thread-local declaration\00", align 1
@.str.236 = private unnamed_addr constant [63 x i8] c"extern declaration of %q+D follows declaration with no linkage\00", align 1
@.str.237 = private unnamed_addr constant [63 x i8] c"declaration of %q+D with no linkage follows extern declaration\00", align 1
@.str.238 = private unnamed_addr constant [38 x i8] c"redeclaration of %q+D with no linkage\00", align 1
@.str.239 = private unnamed_addr constant [47 x i8] c"duplicate declaration of %qD is invalid in C++\00", align 1
@.str.240 = private unnamed_addr constant [75 x i8] c"redeclaration of %q+D with different visibility (old visibility preserved)\00", align 1
@.str.241 = private unnamed_addr constant [70 x i8] c"inline declaration of %qD follows declaration with attribute noinline\00", align 1
@.str.242 = private unnamed_addr constant [72 x i8] c"declaration of %q+D with attribute noinline follows inline declaration \00", align 1
@.str.243 = private unnamed_addr constant [31 x i8] c"redefinition of parameter %q+D\00", align 1
@warn_redundant_decls = external dso_local local_unnamed_addr global i32, align 4
@.str.244 = private unnamed_addr constant [32 x i8] c"redundant redeclaration of %q+D\00", align 1
@.str.245 = private unnamed_addr constant [88 x i8] c"a parameter list with an ellipsis can%'t match an empty parameter name list declaration\00", align 1
@.str.246 = private unnamed_addr constant [100 x i8] c"an argument type that has a default promotion can%'t match an empty parameter name list declaration\00", align 1
@.str.247 = private unnamed_addr constant [78 x i8] c"prototype for %q+D declares more arguments than previous old-style definition\00", align 1
@.str.248 = private unnamed_addr constant [79 x i8] c"prototype for %q+D declares fewer arguments than previous old-style definition\00", align 1
@.str.249 = private unnamed_addr constant [63 x i8] c"prototype for %q+D declares argument %d with incompatible type\00", align 1
@.str.250 = private unnamed_addr constant [52 x i8] c"prototype for %q+D follows non-prototype definition\00", align 1
@warn_shadow = external dso_local local_unnamed_addr global i32, align 4
@.str.251 = private unnamed_addr constant [50 x i8] c"declaration of %q+D shadows previous non-variable\00", align 1
@.str.252 = private unnamed_addr constant [40 x i8] c"declaration of %q+D shadows a parameter\00", align 1
@.str.253 = private unnamed_addr constant [49 x i8] c"declaration of %q+D shadows a global declaration\00", align 1
@.str.254 = private unnamed_addr constant [45 x i8] c"declaration of %q+D shadows a previous local\00", align 1
@.str.255 = private unnamed_addr constant [29 x i8] c"shadowed declaration is here\00", align 1
@warn_implicit_function_declaration = external dso_local local_unnamed_addr global i32, align 4
@.str.256 = private unnamed_addr constant [37 x i8] c"implicit declaration of function %qE\00", align 1
@.str.257 = private unnamed_addr constant [37 x i8] c"previous definition of %q+D was here\00", align 1
@.str.258 = private unnamed_addr constant [47 x i8] c"previous implicit declaration of %q+D was here\00", align 1
@.str.259 = private unnamed_addr constant [38 x i8] c"previous declaration of %q+D was here\00", align 1
@.str.260 = private unnamed_addr constant [58 x i8] c"jump into scope of identifier with variably modified type\00", align 1
@.str.261 = private unnamed_addr constant [35 x i8] c"jump skips variable initialization\00", align 1
@warn_jump_misses_init = external dso_local local_unnamed_addr global i32, align 4
@.str.262 = private unnamed_addr constant [56 x i8] c"using %qD as both a typedef and a tag is invalid in C++\00", align 1
@.str.263 = private unnamed_addr constant [36 x i8] c"variably modified %qE at file scope\00", align 1
@.str.264 = private unnamed_addr constant [38 x i8] c"variably modified field at file scope\00", align 1
@warn_implicit_int = external dso_local local_unnamed_addr global i32, align 4
@.str.265 = private unnamed_addr constant [47 x i8] c"type defaults to %<int%> in declaration of %qE\00", align 1
@.str.266 = private unnamed_addr constant [38 x i8] c"type defaults to %<int%> in type name\00", align 1
@flag_signed_bitfields = external dso_local local_unnamed_addr global i32, align 4
@.str.267 = private unnamed_addr constant [20 x i8] c"duplicate %<const%>\00", align 1
@.str.268 = private unnamed_addr constant [23 x i8] c"duplicate %<restrict%>\00", align 1
@.str.269 = private unnamed_addr constant [23 x i8] c"duplicate %<volatile%>\00", align 1
@.str.270 = private unnamed_addr constant [44 x i8] c"conflicting named address spaces (%s vs %s)\00", align 1
@flag_gen_aux_info = external dso_local local_unnamed_addr global i32, align 4
@.str.271 = private unnamed_addr constant [38 x i8] c"function definition declared %<auto%>\00", align 1
@.str.272 = private unnamed_addr constant [42 x i8] c"function definition declared %<register%>\00", align 1
@.str.273 = private unnamed_addr constant [41 x i8] c"function definition declared %<typedef%>\00", align 1
@.str.274 = private unnamed_addr constant [42 x i8] c"function definition declared %<__thread%>\00", align 1
@.str.275 = private unnamed_addr constant [48 x i8] c"storage class specified for structure field %qE\00", align 1
@.str.276 = private unnamed_addr constant [44 x i8] c"storage class specified for structure field\00", align 1
@.str.277 = private unnamed_addr constant [42 x i8] c"storage class specified for parameter %qE\00", align 1
@.str.278 = private unnamed_addr constant [46 x i8] c"storage class specified for unnamed parameter\00", align 1
@.str.279 = private unnamed_addr constant [37 x i8] c"storage class specified for typename\00", align 1
@.str.280 = private unnamed_addr constant [40 x i8] c"%qE initialized and declared %<extern%>\00", align 1
@.str.281 = private unnamed_addr constant [40 x i8] c"%qE has both %<extern%> and initializer\00", align 1
@.str.282 = private unnamed_addr constant [49 x i8] c"file-scope declaration of %qE specifies %<auto%>\00", align 1
@.str.283 = private unnamed_addr constant [53 x i8] c"file-scope declaration of %qE specifies %<register%>\00", align 1
@.str.284 = private unnamed_addr constant [40 x i8] c"nested function %qE declared %<extern%>\00", align 1
@.str.285 = private unnamed_addr constant [61 x i8] c"function-scope %qE implicitly auto and declared %<__thread%>\00", align 1
@.str.286 = private unnamed_addr constant [60 x i8] c"static or type qualifiers in non-parameter array declarator\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.287 = private unnamed_addr constant [37 x i8] c"declaration of %qE as array of voids\00", align 1
@.str.288 = private unnamed_addr constant [43 x i8] c"declaration of type name as array of voids\00", align 1
@.str.289 = private unnamed_addr constant [41 x i8] c"declaration of %qE as array of functions\00", align 1
@.str.290 = private unnamed_addr constant [47 x i8] c"declaration of type name as array of functions\00", align 1
@.str.291 = private unnamed_addr constant [39 x i8] c"size of array %qE has non-integer type\00", align 1
@.str.292 = private unnamed_addr constant [43 x i8] c"size of unnamed array has non-integer type\00", align 1
@.str.293 = private unnamed_addr constant [34 x i8] c"ISO C forbids zero-size array %qE\00", align 1
@.str.294 = private unnamed_addr constant [30 x i8] c"ISO C forbids zero-size array\00", align 1
@.str.295 = private unnamed_addr constant [30 x i8] c"size of array %qE is negative\00", align 1
@.str.296 = private unnamed_addr constant [34 x i8] c"size of unnamed array is negative\00", align 1
@.str.297 = private unnamed_addr constant [31 x i8] c"size of array %qE is too large\00", align 1
@.str.298 = private unnamed_addr constant [35 x i8] c"size of unnamed array is too large\00", align 1
@.str.299 = private unnamed_addr constant [48 x i8] c"ISO C90 does not support flexible array members\00", align 1
@.str.300 = private unnamed_addr constant [29 x i8] c"%<[*]%> not in a declaration\00", align 1
@.str.301 = private unnamed_addr constant [39 x i8] c"array type has incomplete element type\00", align 1
@.str.302 = private unnamed_addr constant [46 x i8] c"%qE declared as function returning a function\00", align 1
@.str.303 = private unnamed_addr constant [52 x i8] c"type name declared as function returning a function\00", align 1
@.str.304 = private unnamed_addr constant [44 x i8] c"%qE declared as function returning an array\00", align 1
@.str.305 = private unnamed_addr constant [50 x i8] c"type name declared as function returning an array\00", align 1
@.str.306 = private unnamed_addr constant [51 x i8] c"function definition has qualified void return type\00", align 1
@.str.307 = private unnamed_addr constant [48 x i8] c"type qualifiers ignored on function return type\00", align 1
@.str.308 = private unnamed_addr constant [39 x i8] c"ISO C forbids qualified function types\00", align 1
@.str.309 = private unnamed_addr constant [45 x i8] c"%qs combined with %<auto%> qualifier for %qE\00", align 1
@.str.310 = private unnamed_addr constant [49 x i8] c"%qs combined with %<register%> qualifier for %qE\00", align 1
@.str.311 = private unnamed_addr constant [36 x i8] c"%qs specified for auto variable %qE\00", align 1
@.str.312 = private unnamed_addr constant [32 x i8] c"%qs specified for parameter %qE\00", align 1
@.str.313 = private unnamed_addr constant [36 x i8] c"%qs specified for unnamed parameter\00", align 1
@.str.314 = private unnamed_addr constant [38 x i8] c"%qs specified for structure field %qE\00", align 1
@.str.315 = private unnamed_addr constant [34 x i8] c"%qs specified for structure field\00", align 1
@.str.316 = private unnamed_addr constant [33 x i8] c"typedef %q+D declared %<inline%>\00", align 1
@.str.317 = private unnamed_addr constant [47 x i8] c"ISO C forbids const or volatile function types\00", align 1
@.str.318 = private unnamed_addr constant [70 x i8] c"a member of a structure or union cannot have a variably modified type\00", align 1
@.str.319 = private unnamed_addr constant [36 x i8] c"variable or field %qE declared void\00", align 1
@.str.320 = private unnamed_addr constant [49 x i8] c"attributes in parameter array declarator ignored\00", align 1
@.str.321 = private unnamed_addr constant [35 x i8] c"parameter %q+D declared %<inline%>\00", align 1
@.str.322 = private unnamed_addr constant [33 x i8] c"field %qE declared as a function\00", align 1
@.str.323 = private unnamed_addr constant [30 x i8] c"field %qE has incomplete type\00", align 1
@.str.324 = private unnamed_addr constant [34 x i8] c"unnamed field has incomplete type\00", align 1
@.str.325 = private unnamed_addr constant [39 x i8] c"invalid storage class for function %qE\00", align 1
@.str.326 = private unnamed_addr constant [45 x i8] c"%<noreturn%> function returns non-void value\00", align 1
@.str.327 = private unnamed_addr constant [32 x i8] c"cannot inline function %<main%>\00", align 1
@.str.328 = private unnamed_addr constant [62 x i8] c"variable previously declared %<static%> redeclared %<extern%>\00", align 1
@.str.329 = private unnamed_addr constant [34 x i8] c"variable %q+D declared %<inline%>\00", align 1
@.str.330 = private unnamed_addr constant [48 x i8] c"non-nested function with variably modified type\00", align 1
@.str.331 = private unnamed_addr constant [56 x i8] c"object with variably modified type must have no linkage\00", align 1
@.str.332 = private unnamed_addr constant [66 x i8] c"non-local variable %qD with anonymous type is questionable in C++\00", align 1
@warn_vla = external dso_local local_unnamed_addr global i32, align 4
@.str.333 = private unnamed_addr constant [57 x i8] c"ISO C90 forbids array %qE whose size can%'t be evaluated\00", align 1
@.str.334 = private unnamed_addr constant [53 x i8] c"ISO C90 forbids array whose size can%'t be evaluated\00", align 1
@.str.335 = private unnamed_addr constant [42 x i8] c"ISO C90 forbids variable length array %qE\00", align 1
@.str.336 = private unnamed_addr constant [38 x i8] c"ISO C90 forbids variable length array\00", align 1
@.str.337 = private unnamed_addr constant [42 x i8] c"the size of array %qE can%'t be evaluated\00", align 1
@.str.338 = private unnamed_addr constant [39 x i8] c"the size of array can %'t be evaluated\00", align 1
@.str.339 = private unnamed_addr constant [34 x i8] c"variable length array %qE is used\00", align 1
@.str.340 = private unnamed_addr constant [30 x i8] c"variable length array is used\00", align 1
@.str.341 = private unnamed_addr constant [56 x i8] c"parameter names (without types) in function declaration\00", align 1
@.str.342 = private unnamed_addr constant [40 x i8] c"parameter %u (%q+D) has incomplete type\00", align 1
@.str.343 = private unnamed_addr constant [33 x i8] c"parameter %u has incomplete type\00", align 1
@.str.344 = private unnamed_addr constant [34 x i8] c"parameter %u (%q+D) has void type\00", align 1
@.str.345 = private unnamed_addr constant [27 x i8] c"parameter %u has void type\00", align 1
@.str.346 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@.str.347 = private unnamed_addr constant [44 x i8] c"bit-field %qs width not an integer constant\00", align 1
@.str.348 = private unnamed_addr constant [55 x i8] c"bit-field %qs width not an integer constant expression\00", align 1
@.str.349 = private unnamed_addr constant [32 x i8] c"negative width in bit-field %qs\00", align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"zero width for bit-field %qs\00", align 1
@.str.351 = private unnamed_addr constant [31 x i8] c"bit-field %qs has invalid type\00", align 1
@.str.352 = private unnamed_addr constant [41 x i8] c"type of bit-field %qs is a GCC extension\00", align 1
@.str.353 = private unnamed_addr constant [30 x i8] c"width of %qs exceeds its type\00", align 1
@.str.354 = private unnamed_addr constant [40 x i8] c"%qs is narrower than values of its type\00", align 1
@.str.355 = private unnamed_addr constant [22 x i8] c"duplicate member %q+D\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@htab_eq_pointer = external dso_local local_unnamed_addr global i32 (i8*, i8*)*, align 8
@.str.356 = private unnamed_addr constant [59 x i8] c"using %qD as both field and typedef name is invalid in C++\00", align 1
@.str.357 = private unnamed_addr constant [67 x i8] c"old-style parameter declarations in prototyped function definition\00", align 1
@.str.358 = private unnamed_addr constant [55 x i8] c"traditional C rejects ISO C style function definitions\00", align 1
@.str.359 = private unnamed_addr constant [23 x i8] c"parameter name omitted\00", align 1
@.str.360 = private unnamed_addr constant [30 x i8] c"old-style function definition\00", align 1
@.str.361 = private unnamed_addr constant [43 x i8] c"parameter name missing from parameter list\00", align 1
@.str.362 = private unnamed_addr constant [32 x i8] c"%qD declared as a non-parameter\00", align 1
@.str.363 = private unnamed_addr constant [30 x i8] c"multiple parameters named %qD\00", align 1
@.str.364 = private unnamed_addr constant [38 x i8] c"parameter %qD declared with void type\00", align 1
@.str.365 = private unnamed_addr constant [32 x i8] c"type of %qD defaults to %<int%>\00", align 1
@.str.366 = private unnamed_addr constant [34 x i8] c"parameter %qD has incomplete type\00", align 1
@.str.367 = private unnamed_addr constant [52 x i8] c"declaration for parameter %qD but no such parameter\00", align 1
@.str.368 = private unnamed_addr constant [54 x i8] c"number of arguments doesn%'t match built-in prototype\00", align 1
@.str.369 = private unnamed_addr constant [45 x i8] c"number of arguments doesn%'t match prototype\00", align 1
@.str.370 = private unnamed_addr constant [22 x i8] c"prototype declaration\00", align 1
@.str.371 = private unnamed_addr constant [56 x i8] c"promoted argument %qD doesn%'t match built-in prototype\00", align 1
@.str.372 = private unnamed_addr constant [47 x i8] c"promoted argument %qD doesn%'t match prototype\00", align 1
@.str.373 = private unnamed_addr constant [47 x i8] c"argument %qD doesn%'t match built-in prototype\00", align 1
@.str.374 = private unnamed_addr constant [38 x i8] c"argument %qD doesn%'t match prototype\00", align 1
@.str.375 = private unnamed_addr constant [28 x i8] c"%q+F used but never defined\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2366 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2379, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2380, metadata !DIExpression()), !dbg !2381
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2382
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2383
  ret i32 %call, !dbg !2384
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2385 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2389
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2390
  ret i32 %call, !dbg !2391
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2392 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2446, metadata !DIExpression()), !dbg !2447
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2448
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2448
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2448
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2448
  %cmp = icmp uge i8* %0, %1, !dbg !2448
  %conv1 = zext i1 %cmp to i64, !dbg !2448
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2448
  %tobool = icmp eq i64 %expval, 0, !dbg !2448
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2448

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2448
  br label %cond.end, !dbg !2448

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2448
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2448
  %2 = load i8, i8* %0, align 1, !dbg !2448
  %conv3 = zext i8 %2 to i32, !dbg !2448
  br label %cond.end, !dbg !2448

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2448
  ret i32 %cond, !dbg !2449
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2450 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2452, metadata !DIExpression()), !dbg !2453
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2454
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2454
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2454
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2454
  %cmp = icmp uge i8* %0, %1, !dbg !2454
  %conv1 = zext i1 %cmp to i64, !dbg !2454
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2454
  %tobool = icmp eq i64 %expval, 0, !dbg !2454
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2454

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2454
  br label %cond.end, !dbg !2454

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2454
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2454
  %2 = load i8, i8* %0, align 1, !dbg !2454
  %conv3 = zext i8 %2 to i32, !dbg !2454
  br label %cond.end, !dbg !2454

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2454
  ret i32 %cond, !dbg !2455
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2456 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2457
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2457
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2457
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2457
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2457
  %cmp = icmp uge i8* %1, %2, !dbg !2457
  %conv1 = zext i1 %cmp to i64, !dbg !2457
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2457
  %tobool = icmp eq i64 %expval, 0, !dbg !2457
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2457

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2457
  br label %cond.end, !dbg !2457

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2457
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2457
  %3 = load i8, i8* %1, align 1, !dbg !2457
  %conv3 = zext i8 %3 to i32, !dbg !2457
  br label %cond.end, !dbg !2457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2457
  ret i32 %cond, !dbg !2458
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2459 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2463, metadata !DIExpression()), !dbg !2464
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2465
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2466
  ret i32 %call, !dbg !2467
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2468 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2472, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2473, metadata !DIExpression()), !dbg !2474
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2475
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2475
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2475
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2475
  %cmp = icmp uge i8* %0, %1, !dbg !2475
  %conv1 = zext i1 %cmp to i64, !dbg !2475
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2475
  %tobool = icmp eq i64 %expval, 0, !dbg !2475
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2475

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2475
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2475
  br label %cond.end, !dbg !2475

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2475
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2475
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2475
  store i8 %conv2, i8* %0, align 1, !dbg !2475
  %conv6 = and i32 %__c, 255, !dbg !2475
  br label %cond.end, !dbg !2475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2475
  ret i32 %cond, !dbg !2476
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2477 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2479, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2480, metadata !DIExpression()), !dbg !2481
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2482
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2482
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2482
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2482
  %cmp = icmp uge i8* %0, %1, !dbg !2482
  %conv1 = zext i1 %cmp to i64, !dbg !2482
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2482
  %tobool = icmp eq i64 %expval, 0, !dbg !2482
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2482

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2482
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2482
  br label %cond.end, !dbg !2482

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2482
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2482
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2482
  store i8 %conv2, i8* %0, align 1, !dbg !2482
  %conv6 = and i32 %__c, 255, !dbg !2482
  br label %cond.end, !dbg !2482

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2482
  ret i32 %cond, !dbg !2483
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2484 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2486, metadata !DIExpression()), !dbg !2487
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2488
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2488
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2488
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2488
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2488
  %cmp = icmp uge i8* %1, %2, !dbg !2488
  %conv1 = zext i1 %cmp to i64, !dbg !2488
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2488
  %tobool = icmp eq i64 %expval, 0, !dbg !2488
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2488

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2488
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2488
  br label %cond.end, !dbg !2488

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2488
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2488
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2488
  store i8 %conv4, i8* %1, align 1, !dbg !2488
  %conv6 = and i32 %__c, 255, !dbg !2488
  br label %cond.end, !dbg !2488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2488
  ret i32 %cond, !dbg !2489
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2496, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2497, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2498, metadata !DIExpression()), !dbg !2499
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2500
  ret i64 %call, !dbg !2501
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2502 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2504, metadata !DIExpression()), !dbg !2505
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2506
  %0 = load i32, i32* %_flags, align 8, !dbg !2506
  %and = lshr i32 %0, 4, !dbg !2506
  %and.lobit = and i32 %and, 1, !dbg !2506
  ret i32 %and.lobit, !dbg !2507
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2508 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2510, metadata !DIExpression()), !dbg !2511
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2512
  %0 = load i32, i32* %_flags, align 8, !dbg !2512
  %and = lshr i32 %0, 5, !dbg !2512
  %and.lobit = and i32 %and, 1, !dbg !2512
  ret i32 %and.lobit, !dbg !2513
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2514 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2517, metadata !DIExpression()), !dbg !2518
  %__c.off = add i32 %__c, 128, !dbg !2519
  %0 = icmp ult i32 %__c.off, 384, !dbg !2519
  br i1 %0, label %cond.true, label %cond.end, !dbg !2519

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2520
  %1 = load i32*, i32** %call, align 8, !dbg !2521
  %idxprom = sext i32 %__c to i64, !dbg !2522
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2522
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2522
  br label %cond.end, !dbg !2523

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2523
  ret i32 %cond, !dbg !2524
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2525 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2527, metadata !DIExpression()), !dbg !2528
  %__c.off = add i32 %__c, 128, !dbg !2529
  %0 = icmp ult i32 %__c.off, 384, !dbg !2529
  br i1 %0, label %cond.true, label %cond.end, !dbg !2529

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2530
  %1 = load i32*, i32** %call, align 8, !dbg !2531
  %idxprom = sext i32 %__c to i64, !dbg !2532
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2532
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2532
  br label %cond.end, !dbg !2533

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2533
  ret i32 %cond, !dbg !2534
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2540, metadata !DIExpression()), !dbg !2541
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2542
  %conv = trunc i64 %call to i32, !dbg !2543
  ret i32 %conv, !dbg !2544
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2545 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2549, metadata !DIExpression()), !dbg !2550
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2551
  ret i64 %call, !dbg !2552
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2553 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2558, metadata !DIExpression()), !dbg !2559
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2560
  ret i64 %call, !dbg !2561
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2562 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2568, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2569, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2570, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2571, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2572, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 0, metadata !2573, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2574, metadata !DIExpression()), !dbg !2578
  br label %while.cond, !dbg !2579

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2580
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2574, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2573, metadata !DIExpression()), !dbg !2578
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2581
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2579

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2582
  %div = lshr i64 %add, 1, !dbg !2584
  call void @llvm.dbg.value(metadata i64 %div, metadata !2575, metadata !DIExpression()), !dbg !2578
  %mul = mul i64 %div, %__size, !dbg !2585
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2586
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2576, metadata !DIExpression()), !dbg !2578
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2587
  call void @llvm.dbg.value(metadata i32 %call, metadata !2577, metadata !DIExpression()), !dbg !2578
  %cmp1 = icmp slt i32 %call, 0, !dbg !2588
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2590

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2591
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2593

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2594
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2573, metadata !DIExpression()), !dbg !2578
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2578
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2574, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2573, metadata !DIExpression()), !dbg !2578
  br label %while.cond, !dbg !2579, !llvm.loop !2595

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2578
  ret i8* %retval.0, !dbg !2597
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2598 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2604, metadata !DIExpression()), !dbg !2605
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2606
  ret double %call, !dbg !2607
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2617, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2618, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.value(metadata i32 %base, metadata !2619, metadata !DIExpression()), !dbg !2620
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2621
  ret i64 %call, !dbg !2622
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2623 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2629, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2630, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i32 %base, metadata !2631, metadata !DIExpression()), !dbg !2632
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2633
  ret i64 %call, !dbg !2634
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2635 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2646, metadata !DIExpression()), !dbg !2649
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2647, metadata !DIExpression()), !dbg !2649
  call void @llvm.dbg.value(metadata i32 %base, metadata !2648, metadata !DIExpression()), !dbg !2649
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2650
  ret i64 %call, !dbg !2651
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2652 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2656, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2657, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata i32 %base, metadata !2658, metadata !DIExpression()), !dbg !2659
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2660
  ret i64 %call, !dbg !2661
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2662 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2702, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2703, metadata !DIExpression()), !dbg !2704
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2705
  ret i32 %call, !dbg !2706
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2707 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2709, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2710, metadata !DIExpression()), !dbg !2711
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2712
  ret i32 %call, !dbg !2713
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2714 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2718, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2719, metadata !DIExpression()), !dbg !2720
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2721
  ret i32 %call, !dbg !2722
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2723 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2727, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2728, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2729, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2730, metadata !DIExpression()), !dbg !2731
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2732
  ret i32 %call, !dbg !2733
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2734 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2738, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2739, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2740, metadata !DIExpression()), !dbg !2741
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2740, metadata !DIExpression(DW_OP_deref)), !dbg !2741
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2742
  ret i32 %call, !dbg !2743
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2744 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2748, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2749, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2750, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2751, metadata !DIExpression()), !dbg !2752
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2751, metadata !DIExpression(DW_OP_deref)), !dbg !2752
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2753
  ret i32 %call, !dbg !2754
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2755 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2779, metadata !DIExpression()), !dbg !2781
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2780, metadata !DIExpression()), !dbg !2781
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2782
  ret i32 %call, !dbg !2783
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2784 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2786, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2787, metadata !DIExpression()), !dbg !2788
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2789
  ret i32 %call, !dbg !2790
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2791 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2795, metadata !DIExpression()), !dbg !2797
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2796, metadata !DIExpression()), !dbg !2797
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2798
  ret i32 %call, !dbg !2799
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2800 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2804, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2805, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2806, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2807, metadata !DIExpression()), !dbg !2808
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2809
  ret i32 %call, !dbg !2810
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @add_stmt(%union.tree_node* %t) local_unnamed_addr #5 !dbg !2811 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2815, metadata !DIExpression()), !dbg !2817
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2818
  %bf.load = load i64, i64* %0, align 8, !dbg !2818
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !2819
  br i1 %tobool, label %if.end34, label %land.lhs.true, !dbg !2819

land.lhs.true:                                    ; preds = %entry
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !2819
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !2819
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2819
  %cmp = icmp ugt i32 %1, 3, !dbg !2819
  br i1 %cmp, label %land.lhs.true5, label %if.end34, !dbg !2819

land.lhs.true5:                                   ; preds = %land.lhs.true
  %cmp12 = icmp ult i32 %1, 11, !dbg !2819
  %cmp14 = icmp ne i64 %bf.cast4, 133, !dbg !2821
  %or.cond = and i1 %cmp12, %cmp14, !dbg !2822
  br i1 %or.cond, label %if.then, label %if.end34, !dbg !2822

if.then:                                          ; preds = %land.lhs.true5
  br i1 true, label %land.lhs.true22, label %if.then.cond.end_crit_edge, !dbg !2823

if.then.cond.end_crit_edge:                       ; preds = %if.then
  br label %cond.end, !dbg !2823

land.lhs.true22:                                  ; preds = %if.then
  br i1 true, label %cond.true, label %land.lhs.true22.cond.end_crit_edge, !dbg !2823

land.lhs.true22.cond.end_crit_edge:               ; preds = %land.lhs.true22
  br label %cond.end, !dbg !2823

cond.true:                                        ; preds = %land.lhs.true22
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2823
  %3 = load i32, i32* %2, align 8, !dbg !2823
  %phitmp = icmp ne i32 %3, 0, !dbg !2823
  br label %cond.end, !dbg !2823

cond.end:                                         ; preds = %land.lhs.true22.cond.end_crit_edge, %if.then.cond.end_crit_edge, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ undef, %land.lhs.true22.cond.end_crit_edge ], [ undef, %if.then.cond.end_crit_edge ]
  br i1 %cond, label %if.end34, label %if.then31, !dbg !2826

if.then31:                                        ; preds = %cond.end
  %4 = load i32, i32* @input_location, align 4, !dbg !2827
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2827
  store i32 %4, i32* %5, align 8, !dbg !2827
  br label %if.end34, !dbg !2827

if.end34:                                         ; preds = %entry, %cond.end, %if.then31, %land.lhs.true5, %land.lhs.true
  %trunc = trunc i64 %bf.load to i16, !dbg !2828
  switch i16 %trunc, label %if.end41 [
    i16 133, label %if.then37
    i16 139, label %if.then37
  ], !dbg !2828

if.then37:                                        ; preds = %if.end34, %if.end34
  %call = tail call %struct.stmt_tree_s* @current_stmt_tree() #7, !dbg !2830
  %6 = load i64*, i64** bitcast (%struct.stmt_tree_s* @c_stmt_tree to i64**), align 8, !dbg !2830
  %bf.load39 = load i64, i64* %6, align 8, !dbg !2831
  %bf.set = or i64 %bf.load39, 68719476736, !dbg !2831
  store i64 %bf.set, i64* %6, align 8, !dbg !2831
  br label %if.end41, !dbg !2830

if.end41:                                         ; preds = %if.end34, %if.then37
  %call42 = tail call %struct.stmt_tree_s* @current_stmt_tree() #7, !dbg !2832
  tail call void @append_to_statement_list_force(%union.tree_node* %t, %union.tree_node** getelementptr inbounds (%struct.stmt_tree_s, %struct.stmt_tree_s* @c_stmt_tree, i64 0, i32 0)) #6, !dbg !2833
  ret %union.tree_node* %t, !dbg !2834
}

; Function Attrs: nounwind uwtable
define dso_local %struct.stmt_tree_s* @current_stmt_tree() local_unnamed_addr #5 !dbg !2835 {
entry:
  ret %struct.stmt_tree_s* @c_stmt_tree, !dbg !2840
}

declare dso_local void @append_to_statement_list_force(%union.tree_node*, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_print_identifier(%struct._IO_FILE* %file, %union.tree_node* %node, i32 %indent) local_unnamed_addr #5 !dbg !2841 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2845, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !2846, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata i32 %indent, metadata !2847, metadata !DIExpression()), !dbg !2851
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2852
  %0 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !2852
  %1 = load %struct.c_binding*, %struct.c_binding** %0, align 8, !dbg !2852
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !2852
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2852

cond.true:                                        ; preds = %entry
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !2852
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2852
  br label %cond.end, !dbg !2852

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ null, %entry ], !dbg !2852
  %add = add nsw i32 %indent, 4, !dbg !2853
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), %union.tree_node* %cond, i32 %add) #6, !dbg !2854
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2855
  %3 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !2855
  %4 = load %struct.c_binding*, %struct.c_binding** %3, align 8, !dbg !2855
  %tobool2 = icmp eq %struct.c_binding* %4, null, !dbg !2855
  br i1 %tobool2, label %cond.end7, label %cond.true3, !dbg !2855

cond.true3:                                       ; preds = %cond.end
  %decl5 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %4, i64 0, i32 1, !dbg !2855
  %5 = load %union.tree_node*, %union.tree_node** %decl5, align 8, !dbg !2855
  br label %cond.end7, !dbg !2855

cond.end7:                                        ; preds = %cond.end, %cond.true3
  %cond8 = phi %union.tree_node* [ %5, %cond.true3 ], [ null, %cond.end ], !dbg !2855
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %union.tree_node* %cond8, i32 %add) #6, !dbg !2856
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2857
  %6 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !2857
  %7 = load %struct.c_binding*, %struct.c_binding** %6, align 8, !dbg !2857
  %tobool10 = icmp eq %struct.c_binding* %7, null, !dbg !2857
  br i1 %tobool10, label %cond.end15, label %cond.true11, !dbg !2857

cond.true11:                                      ; preds = %cond.end7
  %decl13 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %7, i64 0, i32 1, !dbg !2857
  %8 = load %union.tree_node*, %union.tree_node** %decl13, align 8, !dbg !2857
  br label %cond.end15, !dbg !2857

cond.end15:                                       ; preds = %cond.end7, %cond.true11
  %cond16 = phi %union.tree_node* [ %8, %cond.true11 ], [ null, %cond.end7 ], !dbg !2857
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %union.tree_node* %cond16, i32 %add) #6, !dbg !2858
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2859
  %bf.load = load i64, i64* %9, align 8, !dbg !2859
  %bf.cast1 = and i64 %bf.load, 8589934592, !dbg !2859
  %tobool18 = icmp eq i64 %bf.cast1, 0, !dbg !2859
  br i1 %tobool18, label %if.end, label %land.lhs.true, !dbg !2860

land.lhs.true:                                    ; preds = %cond.end15
  %node19 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2861
  %10 = bitcast i32* %node19 to %struct.cpp_hashnode*, !dbg !2861
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %10, i64 0, i32 2, !dbg !2861
  %11 = load i8, i8* %rid_code, align 1, !dbg !2861
  %cmp = icmp eq i8 %11, 65, !dbg !2862
  br i1 %cmp, label %if.end, label %if.then, !dbg !2863

if.then:                                          ; preds = %land.lhs.true
  %12 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !2864
  %idxprom = zext i8 %11 to i64, !dbg !2864
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %12, i64 %idxprom, !dbg !2864
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2864
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !2848, metadata !DIExpression()), !dbg !2865
  tail call void @indent_to(%struct._IO_FILE* %file, i32 %add) #6, !dbg !2866
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2867
  %str = bitcast i32* %id to i8**, !dbg !2867
  %14 = load i8*, i8** %str, align 8, !dbg !2867
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), %union.tree_node* %13, i8* %14) #6, !dbg !2868
  br label %if.end, !dbg !2869

if.end:                                           ; preds = %land.lhs.true, %cond.end15, %if.then
  ret void, !dbg !2870
}

declare dso_local void @print_node(%struct._IO_FILE*, i8*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @indent_to(%struct._IO_FILE*, i32) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_finish_incomplete_decl(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !2871 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2875, metadata !DIExpression()), !dbg !2879
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2880
  %bf.load = load i64, i64* %0, align 8, !dbg !2880
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2881
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2881
  br i1 %cmp, label %if.then, label %if.end19, !dbg !2882

if.then:                                          ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2883
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !2883
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !2876, metadata !DIExpression()), !dbg !2884
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2885
  %cmp2 = icmp eq %union.tree_node* %1, %2, !dbg !2887
  br i1 %cmp2, label %if.end19, label %land.lhs.true, !dbg !2888

land.lhs.true:                                    ; preds = %if.then
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2889
  %bf.load4 = load i64, i64* %3, align 8, !dbg !2889
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !2890
  %cmp7 = icmp eq i64 %bf.cast62, 15, !dbg !2890
  br i1 %cmp7, label %land.lhs.true8, label %if.end19, !dbg !2891

land.lhs.true8:                                   ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2892
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !2892
  %bf.load9 = load i64, i64* %4, align 8, !dbg !2892
  %bf.cast113 = and i64 %bf.load9, 33554432, !dbg !2892
  %tobool = icmp eq i64 %bf.cast113, 0, !dbg !2892
  br i1 %tobool, label %land.lhs.true12, label %if.end19, !dbg !2893

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2894
  %5 = bitcast i32* %values to %union.tree_node**, !dbg !2894
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !2894
  %cmp14 = icmp eq %union.tree_node* %6, null, !dbg !2895
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !2896

if.then15:                                        ; preds = %land.lhs.true12
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2897
  %7 = load i32, i32* %locus, align 8, !dbg !2897
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %7, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !2899
  %call18 = tail call i32 @complete_array_type(%union.tree_node** nonnull %type1, %union.tree_node* null, i8 zeroext 1) #6, !dbg !2900
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #6, !dbg !2901
  br label %if.end19, !dbg !2902

if.end19:                                         ; preds = %land.lhs.true8, %if.then, %land.lhs.true, %land.lhs.true12, %if.then15, %entry
  ret void, !dbg !2903
}

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @complete_array_type(%union.tree_node**, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @record_inline_static(i32 %loc, %union.tree_node* %func, %union.tree_node* %decl, i32 %type) local_unnamed_addr #5 !dbg !2904 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !2908, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %union.tree_node* %func, metadata !2909, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2910, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata i32 %type, metadata !2911, metadata !DIExpression()), !dbg !2913
  %call = tail call i8* @ggc_alloc_stat(i64 40) #6, !dbg !2914
  call void @llvm.dbg.value(metadata i8* %call, metadata !2912, metadata !DIExpression()), !dbg !2913
  %location = bitcast i8* %call to i32*, !dbg !2915
  store i32 %loc, i32* %location, align 8, !dbg !2916
  %function = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2917
  %0 = bitcast i8* %function to %union.tree_node**, !dbg !2917
  store %union.tree_node* %func, %union.tree_node** %0, align 8, !dbg !2918
  %static_decl = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2919
  %1 = bitcast i8* %static_decl to %union.tree_node**, !dbg !2919
  store %union.tree_node* %decl, %union.tree_node** %1, align 8, !dbg !2920
  %type1 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2921
  %2 = bitcast i8* %type1 to i32*, !dbg !2921
  store i32 %type, i32* %2, align 8, !dbg !2922
  %3 = load i64, i64* bitcast (%struct.c_inline_static** @c_inline_statics to i64*), align 8, !dbg !2923
  %next = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2924
  %4 = bitcast i8* %next to i64*, !dbg !2925
  store i64 %3, i64* %4, align 8, !dbg !2925
  store i8* %call, i8** bitcast (%struct.c_inline_static** @c_inline_statics to i8**), align 8, !dbg !2926
  ret void, !dbg !2927
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @objc_get_current_scope() local_unnamed_addr #5 !dbg !2928 {
entry:
  %0 = load i8*, i8** bitcast (%struct.c_scope** @current_scope to i8**), align 8, !dbg !2931
  ret i8* %0, !dbg !2932
}

; Function Attrs: nounwind uwtable
define dso_local void @objc_mark_locals_volatile(i8* %enclosing_blk) local_unnamed_addr #5 !dbg !2933 {
entry:
  call void @llvm.dbg.value(metadata i8* %enclosing_blk, metadata !2935, metadata !DIExpression()), !dbg !2938
  %0 = bitcast i8* %enclosing_blk to %struct.c_scope*, !dbg !2939
  br label %for.cond, !dbg !2942

for.cond:                                         ; preds = %for.inc5, %entry
  %scope.0.in = phi %struct.c_scope** [ @current_scope, %entry ], [ %outer, %for.inc5 ]
  %scope.0 = load %struct.c_scope*, %struct.c_scope** %scope.0.in, align 8, !dbg !2943
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !2936, metadata !DIExpression()), !dbg !2938
  %tobool = icmp ne %struct.c_scope* %scope.0, null, !dbg !2944
  %cmp = icmp ne %struct.c_scope* %scope.0, %0, !dbg !2945
  %1 = and i1 %cmp, %tobool, !dbg !2945
  br i1 %1, label %for.body, label %for.end6, !dbg !2946

for.body:                                         ; preds = %for.cond
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 2, !dbg !2947
  br label %for.cond1, !dbg !2950

for.cond1:                                        ; preds = %for.body3, %for.body
  %b.0.in = phi %struct.c_binding** [ %bindings, %for.body ], [ %prev, %for.body3 ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !2951
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !2937, metadata !DIExpression()), !dbg !2938
  %tobool2 = icmp eq %struct.c_binding* %b.0, null, !dbg !2952
  br i1 %tobool2, label %for.end, label %for.body3, !dbg !2952

for.body3:                                        ; preds = %for.cond1
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !2953
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2953
  tail call void @objc_volatilize_decl(%union.tree_node* %2) #6, !dbg !2955
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !2956
  br label %for.cond1, !dbg !2957, !llvm.loop !2958

for.end:                                          ; preds = %for.cond1
  %function_body = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 5, !dbg !2960
  %3 = bitcast i40* %function_body to i64*, !dbg !2960
  %bf.load = load i64, i64* %3, align 8, !dbg !2960
  %4 = trunc i64 %bf.load to i32, !dbg !2962
  %tobool4 = icmp slt i32 %4, 0, !dbg !2962
  br i1 %tobool4, label %for.end6, label %for.inc5, !dbg !2963

for.inc5:                                         ; preds = %for.end
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 0, !dbg !2964
  br label %for.cond, !dbg !2965, !llvm.loop !2966

for.end6:                                         ; preds = %for.end, %for.cond
  ret void, !dbg !2968
}

declare dso_local void @objc_volatilize_decl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @global_bindings_p() local_unnamed_addr #5 !dbg !2969 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !2970
  %1 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !2971
  %cmp = icmp eq %struct.c_scope* %0, %1, !dbg !2972
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2973

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @c_override_global_bindings_to_false, align 1, !dbg !2974
  %tobool = icmp eq i8 %2, 0, !dbg !2975
  %phitmp = sext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %3, !dbg !2976
}

; Function Attrs: nounwind uwtable
define dso_local void @keep_next_level() local_unnamed_addr #5 !dbg !2977 {
entry:
  store i1 true, i1* @keep_next_level_flag, align 1, !dbg !2980
  ret void, !dbg !2981
}

; Function Attrs: nounwind uwtable
define dso_local void @set_float_const_decimal64() local_unnamed_addr #5 !dbg !2982 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !2983
  %float_const_decimal64 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !2984
  %1 = bitcast i40* %float_const_decimal64 to i64*, !dbg !2984
  %bf.load = load i64, i64* %1, align 8, !dbg !2985
  %bf.set = or i64 %bf.load, 8589934592, !dbg !2985
  store i64 %bf.set, i64* %1, align 8, !dbg !2985
  ret void, !dbg !2986
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_float_const_decimal64() local_unnamed_addr #5 !dbg !2987 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !2988
  %float_const_decimal64 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !2989
  %1 = bitcast i40* %float_const_decimal64 to i64*, !dbg !2989
  %bf.load = load i64, i64* %1, align 8, !dbg !2990
  %bf.clear = and i64 %bf.load, -8589934593, !dbg !2990
  store i64 %bf.clear, i64* %1, align 8, !dbg !2990
  ret void, !dbg !2991
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @float_const_decimal64_p() local_unnamed_addr #5 !dbg !2992 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !2995
  %float_const_decimal64 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !2996
  %1 = bitcast i40* %float_const_decimal64 to i64*, !dbg !2996
  %bf.load = load i64, i64* %1, align 8, !dbg !2996
  %bf.lshr = lshr i64 %bf.load, 33, !dbg !2996
  %2 = trunc i64 %bf.lshr to i8, !dbg !2996
  %bf.cast = and i8 %2, 1, !dbg !2996
  ret i8 %bf.cast, !dbg !2997
}

; Function Attrs: nounwind uwtable
define dso_local void @declare_parm_level() local_unnamed_addr #5 !dbg !2998 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !2999
  %parm_flag = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !3000
  %1 = bitcast i40* %parm_flag to i64*, !dbg !3000
  %bf.load = load i64, i64* %1, align 8, !dbg !3001
  %bf.set = or i64 %bf.load, 268435456, !dbg !3001
  store i64 %bf.set, i64* %1, align 8, !dbg !3001
  ret void, !dbg !3002
}

; Function Attrs: nounwind uwtable
define dso_local void @push_scope() local_unnamed_addr #5 !dbg !3003 {
entry:
  %.b2 = load i1, i1* @next_is_function_body, align 1, !dbg !3008
  br i1 %.b2, label %if.then, label %if.else18, !dbg !3009

if.then:                                          ; preds = %entry
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3010
  %parm_flag = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !3012
  %1 = bitcast i40* %parm_flag to i64*, !dbg !3012
  %bf.load = load i64, i64* %1, align 8, !dbg !3013
  %bf.clear2 = and i64 %bf.load, -6710886401, !dbg !3014
  %bf.set5 = or i64 %bf.clear2, 6442450944, !dbg !3015
  store i64 %bf.set5, i64* %1, align 8, !dbg !3015
  %2 = load i64, i64* bitcast (%struct.c_scope** @current_function_scope to i64*), align 8, !dbg !3016
  %outer_function = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 1, !dbg !3017
  %3 = bitcast %struct.c_scope** %outer_function to i64*, !dbg !3018
  store i64 %2, i64* %3, align 8, !dbg !3018
  %.cast = ptrtoint %struct.c_scope* %0 to i64, !dbg !3019
  store i64 %.cast, i64* bitcast (%struct.c_scope** @current_function_scope to i64*), align 8, !dbg !3020
  store i1 false, i1* @keep_next_level_flag, align 1, !dbg !3021
  store i1 false, i1* @next_is_function_body, align 1, !dbg !3022
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 0, !dbg !3023
  %4 = load %struct.c_scope*, %struct.c_scope** %outer, align 8, !dbg !3023
  %tobool6 = icmp eq %struct.c_scope* %4, null, !dbg !3025
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !3026

if.then7:                                         ; preds = %if.then
  %float_const_decimal64 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %4, i64 0, i32 5, !dbg !3027
  %5 = bitcast i40* %float_const_decimal64 to i64*, !dbg !3027
  %bf.load9 = load i64, i64* %5, align 8, !dbg !3027
  %bf.cast = and i64 %bf.load9, 8589934592, !dbg !3027
  %bf.clear13 = and i64 %bf.set5, -8858370049, !dbg !3028
  %bf.set14 = or i64 %bf.clear13, %bf.cast, !dbg !3028
  store i64 %bf.set14, i64* %1, align 8, !dbg !3028
  br label %if.end82, !dbg !3029

if.else:                                          ; preds = %if.then
  %bf.clear17 = and i64 %bf.set5, -8858370049, !dbg !3030
  store i64 %bf.clear17, i64* %1, align 8, !dbg !3030
  br label %if.end82

if.else18:                                        ; preds = %entry
  %6 = load %struct.c_scope*, %struct.c_scope** @scope_freelist, align 8, !dbg !3031
  %tobool19 = icmp eq %struct.c_scope* %6, null, !dbg !3031
  br i1 %tobool19, label %if.else22, label %if.then20, !dbg !3033

if.then20:                                        ; preds = %if.else18
  call void @llvm.dbg.value(metadata %struct.c_scope* %6, metadata !3005, metadata !DIExpression()), !dbg !3034
  %7 = bitcast %struct.c_scope* %6 to i64*, !dbg !3035
  %8 = load i64, i64* %7, align 8, !dbg !3035
  store i64 %8, i64* bitcast (%struct.c_scope** @scope_freelist to i64*), align 8, !dbg !3037
  br label %if.end23, !dbg !3038

if.else22:                                        ; preds = %if.else18
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 48) #6, !dbg !3039
  %9 = bitcast i8* %call to %struct.c_scope*, !dbg !3039
  call void @llvm.dbg.value(metadata %struct.c_scope* %9, metadata !3005, metadata !DIExpression()), !dbg !3034
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then20
  %scope.0 = phi %struct.c_scope* [ %6, %if.then20 ], [ %9, %if.else22 ], !dbg !3040
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !3005, metadata !DIExpression()), !dbg !3034
  %10 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3041
  %tobool24 = icmp eq %struct.c_scope* %10, null, !dbg !3041
  %11 = ptrtoint %struct.c_scope* %10 to i64, !dbg !3043
  br i1 %tobool24, label %if.else38, label %if.then25, !dbg !3043

if.then25:                                        ; preds = %if.end23
  %float_const_decimal6426 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %10, i64 0, i32 5, !dbg !3044
  %12 = bitcast i40* %float_const_decimal6426 to i64*, !dbg !3044
  %bf.load27 = load i64, i64* %12, align 8, !dbg !3044
  %bf.cast30 = and i64 %bf.load27, 8589934592, !dbg !3044
  %float_const_decimal6431 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 5, !dbg !3045
  %13 = bitcast i40* %float_const_decimal6431 to i64*, !dbg !3045
  %bf.load32 = load i64, i64* %13, align 8, !dbg !3046
  %bf.clear35 = and i64 %bf.load32, -8589934593, !dbg !3046
  %bf.set36 = or i64 %bf.clear35, %bf.cast30, !dbg !3046
  store i64 %bf.set36, i64* %13, align 8, !dbg !3046
  br label %if.end42, !dbg !3047

if.else38:                                        ; preds = %if.end23
  %float_const_decimal6439 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 5, !dbg !3048
  %14 = bitcast i40* %float_const_decimal6439 to i64*, !dbg !3048
  %bf.load40 = load i64, i64* %14, align 8, !dbg !3049
  %bf.clear41 = and i64 %bf.load40, -8589934593, !dbg !3049
  store i64 %bf.clear41, i64* %14, align 8, !dbg !3049
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.then25
  %.pre-phi = phi i64* [ %14, %if.else38 ], [ %13, %if.then25 ], !dbg !3050
  %bf.load44 = phi i64 [ %bf.clear41, %if.else38 ], [ %bf.set36, %if.then25 ], !dbg !3051
  %.b = load i1, i1* @keep_next_level_flag, align 1, !dbg !3052
  %bf.value45 = zext i1 %.b to i64, !dbg !3051
  %bf.shl46 = shl nuw nsw i64 %bf.value45, 32, !dbg !3051
  %bf.clear47 = and i64 %bf.load44, -4294967297, !dbg !3051
  %bf.set48 = or i64 %bf.clear47, %bf.shl46, !dbg !3051
  store i64 %bf.set48, i64* %.pre-phi, align 8, !dbg !3051
  %15 = bitcast %struct.c_scope* %scope.0 to i64*, !dbg !3053
  store i64 %11, i64* %15, align 8, !dbg !3053
  %16 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3054
  %tobool51 = icmp eq %struct.c_scope* %16, null, !dbg !3054
  br i1 %tobool51, label %cond.end, label %cond.true, !dbg !3054

cond.true:                                        ; preds = %if.end42
  %depth = getelementptr inbounds %struct.c_scope, %struct.c_scope* %16, i64 0, i32 5, !dbg !3055
  %17 = bitcast i40* %depth to i64*, !dbg !3055
  %bf.load52 = load i64, i64* %17, align 8, !dbg !3055
  %add = add i64 %bf.load52, 1, !dbg !3056
  %phitmp = and i64 %add, 268435455, !dbg !3054
  br label %cond.end, !dbg !3054

cond.end:                                         ; preds = %if.end42, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %if.end42 ]
  %bf.clear58 = and i64 %bf.set48, -268435456, !dbg !3057
  %bf.set59 = or i64 %bf.clear58, %cond, !dbg !3057
  store i64 %bf.set59, i64* %.pre-phi, align 8, !dbg !3057
  br i1 %tobool51, label %if.end81, label %land.lhs.true, !dbg !3058

land.lhs.true:                                    ; preds = %cond.end
  %cmp = icmp eq i64 %cond, 0, !dbg !3060
  br i1 %cmp, label %if.then67, label %if.end81, !dbg !3061

if.then67:                                        ; preds = %land.lhs.true
  %dec = add nuw nsw i64 %cond, 268435455, !dbg !3062
  %bf.value73 = and i64 %dec, 268435455, !dbg !3062
  %bf.set75 = or i64 %bf.clear58, %bf.value73, !dbg !3062
  store i64 %bf.set75, i64* %.pre-phi, align 8, !dbg !3062
  %bf.cast80 = trunc i64 %bf.value73 to i32, !dbg !3064
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %bf.cast80) #6, !dbg !3065
  br label %if.end81, !dbg !3066

if.end81:                                         ; preds = %cond.end, %if.then67, %land.lhs.true
  store %struct.c_scope* %scope.0, %struct.c_scope** @current_scope, align 8, !dbg !3067
  store i1 false, i1* @keep_next_level_flag, align 1, !dbg !3068
  br label %if.end82

if.end82:                                         ; preds = %if.then7, %if.else, %if.end81
  ret void, !dbg !3069
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local void @sorry(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @pop_scope() local_unnamed_addr #5 !dbg !3070 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3105
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !3074, metadata !DIExpression()), !dbg !3106
  %function_body = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 5, !dbg !3107
  %1 = bitcast i40* %function_body to i64*, !dbg !3107
  %bf.load = load i64, i64* %1, align 8, !dbg !3107
  %2 = trunc i64 %bf.load to i32, !dbg !3108
  %tobool = icmp slt i32 %2, 0, !dbg !3108
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !3109

lor.lhs.false:                                    ; preds = %entry
  %bf.cast68 = and i64 %bf.load, 4294967296, !dbg !3110
  %tobool7 = icmp eq i64 %bf.cast68, 0, !dbg !3110
  br i1 %tobool7, label %lor.rhs, label %lor.end, !dbg !3111

lor.rhs:                                          ; preds = %lor.lhs.false
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 2, !dbg !3112
  %3 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !3112
  %tobool8 = icmp ne %struct.c_binding* %3, null, !dbg !3111
  br label %lor.end, !dbg !3111

lor.end:                                          ; preds = %lor.lhs.false, %lor.rhs, %entry
  %4 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool8, %lor.rhs ]
  tail call fastcc void @update_label_decls(%struct.c_scope* %0) #7, !dbg !3113
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3075, metadata !DIExpression()), !dbg !3106
  br i1 %4, label %if.then, label %if.end, !dbg !3114

if.then:                                          ; preds = %lor.end
  %call = tail call %union.tree_node* @make_node_stat(i32 4) #6, !dbg !3115
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3075, metadata !DIExpression()), !dbg !3106
  %blocks = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 3, !dbg !3118
  %5 = bitcast %union.tree_node** %blocks to i64*, !dbg !3118
  %6 = load i64, i64* %5, align 8, !dbg !3118
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3119
  %8 = bitcast %union.tree_node** %7 to i64*, !dbg !3120
  store i64 %6, i64* %8, align 8, !dbg !3120
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3121
  %bf.load12 = load i64, i64* %9, align 8, !dbg !3122
  %bf.set = or i64 %bf.load12, 16777216, !dbg !3122
  store i64 %bf.set, i64* %9, align 8, !dbg !3122
  br label %for.cond, !dbg !3123

for.cond:                                         ; preds = %for.body, %if.then
  %p.0.in = phi %union.tree_node** [ %blocks, %if.then ], [ %chain, %for.body ]
  %p.0 = load %union.tree_node*, %union.tree_node** %p.0.in, align 8, !dbg !3125
  call void @llvm.dbg.value(metadata %union.tree_node* %p.0, metadata !3077, metadata !DIExpression()), !dbg !3106
  %tobool15 = icmp eq %union.tree_node* %p.0, null, !dbg !3126
  br i1 %tobool15, label %for.end, label %for.body, !dbg !3126

for.body:                                         ; preds = %for.cond
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3127
  %10 = bitcast i40* %supercontext to %union.tree_node**, !dbg !3127
  store %union.tree_node* %call, %union.tree_node** %10, align 8, !dbg !3129
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3130
  br label %for.cond, !dbg !3131, !llvm.loop !3132

for.end:                                          ; preds = %for.cond
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3134
  store %union.tree_node* null, %union.tree_node** %11, align 8, !dbg !3135
  br label %if.end, !dbg !3136

if.end:                                           ; preds = %for.end, %lor.end
  %block.0 = phi %union.tree_node* [ %call, %for.end ], [ null, %lor.end ], !dbg !3106
  call void @llvm.dbg.value(metadata %union.tree_node* %block.0, metadata !3075, metadata !DIExpression()), !dbg !3106
  %bf.load19 = load i64, i64* %1, align 8, !dbg !3137
  %12 = trunc i64 %bf.load19 to i32, !dbg !3138
  %tobool23 = icmp slt i32 %12, 0, !dbg !3138
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !3139

if.then24:                                        ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3140
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3076, metadata !DIExpression()), !dbg !3106
  br label %if.end32, !dbg !3141

if.else:                                          ; preds = %if.end
  %14 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3142
  %cmp = icmp eq %struct.c_scope* %0, %14, !dbg !3143
  br i1 %cmp, label %if.then26, label %if.end32, !dbg !3144

if.then26:                                        ; preds = %if.else
  %call27 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 40, %union.tree_node* null, %union.tree_node* null) #6, !dbg !3145
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3081, metadata !DIExpression()), !dbg !3146
  %15 = load i64, i64* bitcast (%union.tree_node** @all_translation_units to i64*), align 8, !dbg !3147
  %chain29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3148
  %16 = bitcast %union.tree_node** %chain29 to i64*, !dbg !3149
  store i64 %15, i64* %16, align 8, !dbg !3149
  store %union.tree_node* %call27, %union.tree_node** @all_translation_units, align 8, !dbg !3150
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3076, metadata !DIExpression()), !dbg !3106
  br label %if.end32, !dbg !3151

if.end32:                                         ; preds = %if.then26, %if.else, %if.then24
  %context.1 = phi %union.tree_node* [ %13, %if.then24 ], [ %call27, %if.then26 ], [ %block.0, %if.else ], !dbg !3152
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1, metadata !3076, metadata !DIExpression()), !dbg !3106
  %bindings33 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 2, !dbg !3153
  %17 = load %struct.c_binding*, %struct.c_binding** %bindings33, align 8, !dbg !3153
  call void @llvm.dbg.value(metadata %struct.c_binding* %17, metadata !3078, metadata !DIExpression()), !dbg !3106
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !3154
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3156
  %19 = bitcast %union.tree_node** %18 to i64*, !dbg !3156
  br label %for.cond34, !dbg !3157

for.cond34:                                       ; preds = %for.inc327, %if.end32
  %b.0 = phi %struct.c_binding* [ %17, %if.end32 ], [ %call328, %for.inc327 ], !dbg !3158
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3078, metadata !DIExpression()), !dbg !3106
  %tobool35 = icmp eq %struct.c_binding* %b.0, null, !dbg !3159
  br i1 %tobool35, label %for.end329, label %for.body36, !dbg !3159

for.body36:                                       ; preds = %for.cond34
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3160
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3160
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !3077, metadata !DIExpression()), !dbg !3106
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3161
  %bf.load38 = load i64, i64* %21, align 8, !dbg !3161
  %22 = trunc i64 %bf.load38 to i16, !dbg !3161
  switch i16 %22, label %sw.default [
    i16 30, label %sw.bb
    i16 6, label %sw.bb68
    i16 17, label %sw.bb68
    i16 16, label %sw.bb68
    i16 29, label %sw.bb83
    i16 32, label %sw.bb164
    i16 35, label %common_symbol
    i16 33, label %common_symbol
    i16 34, label %sw.bb296
    i16 0, label %sw.bb296
  ], !dbg !3162

sw.bb:                                            ; preds = %for.body36
  %bf.cast4524 = and i64 %bf.load38, 16777216, !dbg !3163
  %tobool46 = icmp eq i64 %bf.cast4524, 0, !dbg !3163
  br i1 %tobool46, label %if.else51, label %land.lhs.true, !dbg !3165

land.lhs.true:                                    ; preds = %sw.bb
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3166
  %23 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3166
  %tobool47 = icmp eq %union.tree_node* %23, null, !dbg !3166
  br i1 %tobool47, label %if.then48, label %if.else51, !dbg !3167

if.then48:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !3168
  %24 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !3170
  %25 = bitcast %union.tree_node** %initial to i64*, !dbg !3171
  store i64 %24, i64* %25, align 8, !dbg !3171
  br label %if.end52, !dbg !3172

if.else51:                                        ; preds = %land.lhs.true, %sw.bb
  call void @warn_for_unused_label(%union.tree_node* %20) #6, !dbg !3173
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then48
  %26 = load i64, i64* %19, align 8, !dbg !3174
  %chain56 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3175
  %27 = bitcast %union.tree_node** %chain56 to i64*, !dbg !3176
  store i64 %26, i64* %27, align 8, !dbg !3176
  store %union.tree_node* %20, %union.tree_node** %18, align 8, !dbg !3177
  %id = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !3178
  %28 = bitcast %union.tree_node** %id to %struct.lang_identifier**, !dbg !3178
  %29 = load %struct.lang_identifier*, %struct.lang_identifier** %28, align 8, !dbg !3178
  %label_binding = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %29, i64 0, i32 3, !dbg !3178
  %30 = load %struct.c_binding*, %struct.c_binding** %label_binding, align 8, !dbg !3178
  %cmp59 = icmp eq %struct.c_binding* %30, %b.0, !dbg !3178
  br i1 %cmp59, label %cond.end, label %cond.true, !dbg !3178

cond.true:                                        ; preds = %if.end52
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3178
  %.pre27 = load %struct.lang_identifier*, %struct.lang_identifier** %28, align 8, !dbg !3179
  br label %cond.end, !dbg !3178

cond.end:                                         ; preds = %if.end52, %cond.true
  %31 = phi %struct.lang_identifier* [ %29, %if.end52 ], [ %.pre27, %cond.true ], !dbg !3179
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !3180
  %32 = bitcast %struct.c_binding** %shadowed to i64*, !dbg !3180
  %33 = load i64, i64* %32, align 8, !dbg !3180
  %label_binding62 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %31, i64 0, i32 3, !dbg !3179
  %34 = bitcast %struct.c_binding** %label_binding62 to i64*, !dbg !3181
  store i64 %33, i64* %34, align 8, !dbg !3181
  %label = bitcast %struct.c_binding* %b.0 to %struct.c_label_vars**, !dbg !3182
  %35 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !3182
  %decls_in_scope = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %35, i64 0, i32 2, !dbg !3183
  %36 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %decls_in_scope, align 8, !dbg !3183
  call void @release_tree_vector(%struct.VEC_tree_gc* %36) #6, !dbg !3184
  %37 = bitcast %struct.c_binding* %b.0 to i64**, !dbg !3185
  %38 = load i64*, i64** %37, align 8, !dbg !3185
  %39 = load i64, i64* %38, align 8, !dbg !3186
  %40 = bitcast %struct.c_binding* %b.0 to i64*, !dbg !3187
  store i64 %39, i64* %40, align 8, !dbg !3187
  br label %for.inc327, !dbg !3188

sw.bb68:                                          ; preds = %for.body36, %for.body36, %for.body36
  call fastcc void @set_type_context(%union.tree_node* %20, %union.tree_node* %context.1) #7, !dbg !3189
  %id69 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !3190
  %41 = load %union.tree_node*, %union.tree_node** %id69, align 8, !dbg !3190
  %tobool70 = icmp eq %union.tree_node* %41, null, !dbg !3192
  br i1 %tobool70, label %for.inc327, label %if.then71, !dbg !3193

if.then71:                                        ; preds = %sw.bb68
  %42 = bitcast %union.tree_node* %41 to %struct.lang_identifier*, !dbg !3193
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3194
  %43 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !3194
  %44 = load %struct.c_binding*, %struct.c_binding** %43, align 8, !dbg !3194
  %cmp73 = icmp eq %struct.c_binding* %44, %b.0, !dbg !3194
  br i1 %cmp73, label %cond.end77, label %cond.true75, !dbg !3194

cond.true75:                                      ; preds = %if.then71
  %45 = bitcast %union.tree_node** %id69 to %struct.lang_identifier**, !dbg !3194
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3194
  %.pre26 = load %struct.lang_identifier*, %struct.lang_identifier** %45, align 8, !dbg !3196
  br label %cond.end77, !dbg !3194

cond.end77:                                       ; preds = %if.then71, %cond.true75
  %46 = phi %struct.lang_identifier* [ %42, %if.then71 ], [ %.pre26, %cond.true75 ], !dbg !3196
  %shadowed79 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !3197
  %47 = bitcast %struct.c_binding** %shadowed79 to i64*, !dbg !3197
  %48 = load i64, i64* %47, align 8, !dbg !3197
  %tag_binding81 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %46, i64 0, i32 2, !dbg !3196
  %49 = bitcast %struct.c_binding** %tag_binding81 to i64*, !dbg !3198
  store i64 %48, i64* %49, align 8, !dbg !3198
  br label %for.inc327, !dbg !3199

sw.bb83:                                          ; preds = %for.body36
  %bf.cast8820 = and i64 %bf.load38, 4194304, !dbg !3200
  %tobool89 = icmp eq i64 %bf.cast8820, 0, !dbg !3200
  br i1 %tobool89, label %land.lhs.true90, label %if.end118, !dbg !3202

land.lhs.true90:                                  ; preds = %sw.bb83
  %initial92 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3203
  %50 = load %union.tree_node*, %union.tree_node** %initial92, align 8, !dbg !3203
  %cmp93 = icmp eq %union.tree_node* %50, null, !dbg !3204
  br i1 %cmp93, label %if.end118, label %land.lhs.true95, !dbg !3205

land.lhs.true95:                                  ; preds = %land.lhs.true90
  %bf.cast10023 = and i64 %bf.load38, 262144, !dbg !3206
  %tobool101 = icmp eq i64 %bf.cast10023, 0, !dbg !3206
  br i1 %tobool101, label %if.end118, label %land.lhs.true102, !dbg !3207

land.lhs.true102:                                 ; preds = %land.lhs.true95
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3208
  %51 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !3208
  %cmp104 = icmp eq %union.tree_node* %51, null, !dbg !3209
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3210
  br i1 %cmp104, label %if.end118, label %land.lhs.true106, !dbg !3210

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %cmp109 = icmp eq %union.tree_node* %51, %20, !dbg !3211
  br i1 %cmp109, label %if.end118, label %if.then111, !dbg !3212

if.then111:                                       ; preds = %land.lhs.true106
  %bf.load115 = load i64, i64* %52, align 8, !dbg !3213
  %bf.set117 = or i64 %bf.load115, 262144, !dbg !3213
  store i64 %bf.set117, i64* %52, align 8, !dbg !3213
  br label %if.end118, !dbg !3214

if.end118:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true95, %land.lhs.true90, %sw.bb83, %if.then111
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3215
  %53 = bitcast i40* %decl_flag_1 to i64*, !dbg !3215
  %bf.load120 = load i64, i64* %53, align 8, !dbg !3215
  %bf.cast12321 = and i64 %bf.load120, 33554432, !dbg !3215
  %tobool124 = icmp eq i64 %bf.cast12321, 0, !dbg !3215
  br i1 %tobool124, label %land.lhs.true125, label %if.else136, !dbg !3217

land.lhs.true125:                                 ; preds = %if.end118
  %initial127 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3218
  %54 = load %union.tree_node*, %union.tree_node** %initial127, align 8, !dbg !3218
  %tobool128 = icmp eq %union.tree_node* %54, null, !dbg !3218
  %55 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3219
  %cmp130 = icmp ne %struct.c_scope* %0, %55, !dbg !3220
  %or.cond = and i1 %tobool128, %cmp130, !dbg !3221
  %56 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !3222
  %cmp133 = icmp ne %struct.c_scope* %0, %56, !dbg !3223
  %or.cond1 = and i1 %or.cond, %cmp133, !dbg !3221
  br i1 %or.cond1, label %if.then135, label %if.else136, !dbg !3221

if.then135:                                       ; preds = %land.lhs.true125
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !3224
  store i1 true, i1* @undef_nested_function, align 1, !dbg !3226
  br label %common_symbol, !dbg !3227

if.else136:                                       ; preds = %if.end118, %land.lhs.true125
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 5, !dbg !3228
  %bf.load137 = load i32, i32* %declared_inline_flag, align 8, !dbg !3228
  %bf.clear139 = and i32 %bf.load137, 2097152, !dbg !3228
  %tobool140 = icmp eq i32 %bf.clear139, 0, !dbg !3228
  br i1 %tobool140, label %common_symbol, label %land.lhs.true141, !dbg !3230

land.lhs.true141:                                 ; preds = %if.else136
  %bf.load143 = load i64, i64* %21, align 8, !dbg !3231
  %bf.cast14622 = and i64 %bf.load143, 134217728, !dbg !3231
  %tobool147 = icmp eq i64 %bf.cast14622, 0, !dbg !3231
  br i1 %tobool147, label %common_symbol, label %land.lhs.true148, !dbg !3232

land.lhs.true148:                                 ; preds = %land.lhs.true141
  %initial150 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3233
  %57 = load %union.tree_node*, %union.tree_node** %initial150, align 8, !dbg !3233
  %tobool151 = icmp eq %union.tree_node* %57, null, !dbg !3233
  br i1 %tobool151, label %if.then152, label %common_symbol, !dbg !3234

if.then152:                                       ; preds = %land.lhs.true148
  %58 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !3235
  %tobool153 = icmp eq i32 %58, 0, !dbg !3235
  br i1 %tobool153, label %if.then154, label %if.end156, !dbg !3238

if.then154:                                       ; preds = %if.then152
  %59 = load i32, i32* @input_location, align 4, !dbg !3239
  %call155 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %59, i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !3240
  %bf.load159.pre = load i64, i64* %53, align 8, !dbg !3241
  br label %if.end156, !dbg !3240

if.end156:                                        ; preds = %if.then152, %if.then154
  %bf.load159 = phi i64 [ %bf.load120, %if.then152 ], [ %bf.load159.pre, %if.then154 ], !dbg !3241
  %bf.set161 = or i64 %bf.load159, 33554432, !dbg !3241
  store i64 %bf.set161, i64* %53, align 8, !dbg !3241
  br label %common_symbol, !dbg !3242

sw.bb164:                                         ; preds = %for.body36
  %bf.cast16917 = and i64 %bf.load38, 16777216, !dbg !3243
  %tobool170 = icmp eq i64 %bf.cast16917, 0, !dbg !3243
  br i1 %tobool170, label %land.lhs.true171, label %if.end200, !dbg !3244

land.lhs.true171:                                 ; preds = %sw.bb164
  %bf.cast17618 = and i64 %bf.load38, 8388608, !dbg !3245
  %tobool177 = icmp eq i64 %bf.cast17618, 0, !dbg !3245
  br i1 %tobool177, label %land.lhs.true178, label %if.end200, !dbg !3246

land.lhs.true178:                                 ; preds = %land.lhs.true171
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3247
  %60 = load i32, i32* %locus, align 8, !dbg !3247
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %60) #6, !dbg !3247
  %61 = load i8, i8* %sysp, align 8, !dbg !3247
  %cmp180 = icmp eq i8 %61, 0, !dbg !3247
  br i1 %cmp180, label %land.lhs.true182, label %if.end200, !dbg !3248

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3249
  %62 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3249
  %tobool184 = icmp eq %union.tree_node* %62, null, !dbg !3249
  br i1 %tobool184, label %if.end200, label %land.lhs.true185, !dbg !3250

land.lhs.true185:                                 ; preds = %land.lhs.true182
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3251
  %63 = bitcast i40* %artificial_flag to i64*, !dbg !3251
  %bf.load187 = load i64, i64* %63, align 8, !dbg !3251
  %bf.cast19019 = and i64 %bf.load187, 4096, !dbg !3251
  %tobool191 = icmp eq i64 %bf.cast19019, 0, !dbg !3251
  %64 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3252
  %cmp193 = icmp ne %struct.c_scope* %0, %64, !dbg !3253
  %or.cond2 = and i1 %tobool191, %cmp193, !dbg !3254
  %65 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !3255
  %cmp196 = icmp ne %struct.c_scope* %0, %65, !dbg !3256
  %or.cond3 = and i1 %or.cond2, %cmp196, !dbg !3254
  br i1 %or.cond3, label %if.then198, label %if.end200, !dbg !3254

if.then198:                                       ; preds = %land.lhs.true185
  %call199 = call zeroext i8 (i32, i8*, ...) @warning(i32 230, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !3257
  br label %if.end200, !dbg !3257

if.end200:                                        ; preds = %land.lhs.true182, %land.lhs.true178, %land.lhs.true171, %sw.bb164, %land.lhs.true185, %if.then198
  %inner_comp = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !3258
  %bf.load201 = load i32, i32* %inner_comp, align 8, !dbg !3258
  %bf.clear203 = and i32 %bf.load201, 1073741824, !dbg !3258
  %tobool204 = icmp eq i32 %bf.clear203, 0, !dbg !3260
  br i1 %tobool204, label %common_symbol, label %if.then205, !dbg !3261

if.then205:                                       ; preds = %if.end200
  call void (i8*, ...) @error(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.12, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !3262
  br label %common_symbol, !dbg !3264

common_symbol:                                    ; preds = %land.lhs.true148, %land.lhs.true141, %if.else136, %if.end200, %for.body36, %for.body36, %if.then205, %if.then135, %if.end156
  call void @llvm.dbg.label(metadata !3104), !dbg !3265
  %nested = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !3266
  %bf.load208 = load i32, i32* %nested, align 8, !dbg !3266
  %bf.clear210 = and i32 %bf.load208, 536870912, !dbg !3266
  %tobool211 = icmp eq i32 %bf.clear210, 0, !dbg !3267
  br i1 %tobool211, label %if.then212, label %if.else219, !dbg !3268

if.then212:                                       ; preds = %common_symbol
  %66 = load i64, i64* %19, align 8, !dbg !3269
  %chain216 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3271
  %67 = bitcast %union.tree_node** %chain216 to i64*, !dbg !3272
  store i64 %66, i64* %67, align 8, !dbg !3272
  store %union.tree_node* %20, %union.tree_node** %18, align 8, !dbg !3273
  br label %if.end277, !dbg !3274

if.else219:                                       ; preds = %common_symbol
  %bf.load221 = load i64, i64* %21, align 8, !dbg !3275
  %bf.cast22314 = and i64 %bf.load221, 65535, !dbg !3275
  %cmp224 = icmp eq i64 %bf.cast22314, 32, !dbg !3275
  br i1 %cmp224, label %if.then233, label %lor.lhs.false226, !dbg !3275

lor.lhs.false226:                                 ; preds = %if.else219
  %cmp231 = icmp eq i64 %bf.cast22314, 29, !dbg !3275
  br i1 %cmp231, label %if.then233, label %if.end277, !dbg !3276

if.then233:                                       ; preds = %lor.lhs.false226, %if.else219
  %call234 = call %union.tree_node* @copy_node_stat(%union.tree_node* %20) #6, !dbg !3277
  call void @llvm.dbg.value(metadata %union.tree_node* %call234, metadata !3085, metadata !DIExpression()), !dbg !3156
  %decl_flag_1236 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3278
  %68 = bitcast i40* %decl_flag_1236 to i64*, !dbg !3278
  %bf.load237 = load i64, i64* %68, align 8, !dbg !3279
  %bf.set239 = or i64 %bf.load237, 33554432, !dbg !3279
  store i64 %bf.set239, i64* %68, align 8, !dbg !3279
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3280
  %bf.load241 = load i64, i64* %69, align 8, !dbg !3281
  %bf.clear245 = and i64 %bf.load241, -201326593, !dbg !3282
  %bf.set246 = or i64 %bf.clear245, 134217728, !dbg !3282
  store i64 %bf.set246, i64* %69, align 8, !dbg !3282
  %initial248 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3283
  store %union.tree_node* null, %union.tree_node** %initial248, align 8, !dbg !3284
  %lang_specific = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3285
  store %struct.lang_decl* null, %struct.lang_decl** %lang_specific, align 8, !dbg !3286
  %70 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3287
  %context251 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3288
  %71 = bitcast %union.tree_node** %context251 to i64*, !dbg !3289
  store i64 %70, i64* %71, align 8, !dbg !3289
  %bf.load253 = load i64, i64* %21, align 8, !dbg !3290
  %bf.cast25516 = and i64 %bf.load253, 65535, !dbg !3292
  %cmp256 = icmp eq i64 %bf.cast25516, 29, !dbg !3292
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !3293

if.then258:                                       ; preds = %if.then233
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 3, !dbg !3294
  store %union.tree_node* null, %union.tree_node** %result, align 8, !dbg !3296
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 1, !dbg !3297
  store %union.tree_node* null, %union.tree_node** %saved_tree, align 8, !dbg !3298
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 1, !dbg !3299
  store %struct.function* null, %struct.function** %f, align 8, !dbg !3300
  br label %if.end261, !dbg !3301

if.end261:                                        ; preds = %if.then258, %if.then233
  %locus262 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 6, !dbg !3302
  %72 = load i32, i32* %locus262, align 4, !dbg !3302
  %cmp263 = icmp eq i32 %72, 0, !dbg !3304
  br i1 %cmp263, label %if.end269, label %if.then265, !dbg !3305

if.then265:                                       ; preds = %if.end261
  %locus268 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3306
  store i32 %72, i32* %locus268, align 8, !dbg !3307
  br label %if.end269, !dbg !3306

if.end269:                                        ; preds = %if.end261, %if.then265
  %73 = load i64, i64* %19, align 8, !dbg !3308
  %chain273 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3309
  %74 = bitcast %union.tree_node** %chain273 to i64*, !dbg !3310
  store i64 %73, i64* %74, align 8, !dbg !3310
  store %union.tree_node* %call234, %union.tree_node** %18, align 8, !dbg !3311
  br label %if.end277, !dbg !3312

if.end277:                                        ; preds = %lor.lhs.false226, %if.end269, %if.then212
  %75 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3313
  %cmp278 = icmp eq %struct.c_scope* %0, %75, !dbg !3315
  %76 = load i32, i32* @num_in_fnames, align 4, !dbg !3316
  %cmp281 = icmp ugt i32 %76, 1, !dbg !3317
  %or.cond4 = and i1 %cmp278, %cmp281, !dbg !3318
  br i1 %or.cond4, label %if.then283, label %sw.bb296, !dbg !3318

if.then283:                                       ; preds = %if.end277
  %context285 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3319
  store %union.tree_node* %context.1, %union.tree_node** %context285, align 8, !dbg !3321
  %bf.load287 = load i64, i64* %21, align 8, !dbg !3322
  %bf.cast28913 = and i64 %bf.load287, 65535, !dbg !3324
  %cmp290 = icmp eq i64 %bf.cast28913, 35, !dbg !3324
  br i1 %cmp290, label %if.then292, label %sw.bb296, !dbg !3325

if.then292:                                       ; preds = %if.then283
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3326
  %77 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3326
  call fastcc void @set_type_context(%union.tree_node* %77, %union.tree_node* %context.1) #7, !dbg !3327
  br label %sw.bb296, !dbg !3327

sw.bb296:                                         ; preds = %if.end277, %if.then292, %if.then283, %for.body36, %for.body36
  %id297 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !3328
  %78 = load %union.tree_node*, %union.tree_node** %id297, align 8, !dbg !3328
  %tobool298 = icmp eq %union.tree_node* %78, null, !dbg !3330
  br i1 %tobool298, label %for.inc327, label %if.then299, !dbg !3331

if.then299:                                       ; preds = %sw.bb296
  %79 = bitcast %union.tree_node* %78 to %struct.lang_identifier*, !dbg !3331
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3332
  %80 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !3332
  %81 = load %struct.c_binding*, %struct.c_binding** %80, align 8, !dbg !3332
  %cmp301 = icmp eq %struct.c_binding* %81, %b.0, !dbg !3332
  br i1 %cmp301, label %cond.end305, label %cond.true303, !dbg !3332

cond.true303:                                     ; preds = %if.then299
  %82 = bitcast %union.tree_node** %id297 to %struct.lang_identifier**, !dbg !3332
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1240, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3332
  %.pre = load %struct.lang_identifier*, %struct.lang_identifier** %82, align 8, !dbg !3334
  br label %cond.end305, !dbg !3332

cond.end305:                                      ; preds = %if.then299, %cond.true303
  %83 = phi %struct.lang_identifier* [ %79, %if.then299 ], [ %.pre, %cond.true303 ], !dbg !3334
  %shadowed307 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !3335
  %84 = bitcast %struct.c_binding** %shadowed307 to i64*, !dbg !3335
  %85 = load i64, i64* %84, align 8, !dbg !3335
  %symbol_binding309 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %83, i64 0, i32 1, !dbg !3334
  %86 = bitcast %struct.c_binding** %symbol_binding309 to i64*, !dbg !3336
  store i64 %85, i64* %86, align 8, !dbg !3336
  %87 = load %struct.c_binding*, %struct.c_binding** %shadowed307, align 8, !dbg !3337
  %tobool311 = icmp eq %struct.c_binding* %87, null, !dbg !3339
  br i1 %tobool311, label %for.inc327, label %land.lhs.true312, !dbg !3340

land.lhs.true312:                                 ; preds = %cond.end305
  %type315 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %87, i64 0, i32 0, i32 0, !dbg !3341
  %88 = load %union.tree_node*, %union.tree_node** %type315, align 8, !dbg !3341
  %tobool316 = icmp eq %union.tree_node* %88, null, !dbg !3342
  br i1 %tobool316, label %for.inc327, label %if.then317, !dbg !3343

if.then317:                                       ; preds = %land.lhs.true312
  %89 = ptrtoint %union.tree_node* %88 to i64, !dbg !3343
  %decl322 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %87, i64 0, i32 1, !dbg !3344
  %90 = bitcast %union.tree_node** %decl322 to %struct.tree_common**, !dbg !3344
  %91 = load %struct.tree_common*, %struct.tree_common** %90, align 8, !dbg !3344
  %type324 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %91, i64 0, i32 2, !dbg !3344
  %92 = bitcast %union.tree_node** %type324 to i64*, !dbg !3345
  store i64 %89, i64* %92, align 8, !dbg !3345
  br label %for.inc327, !dbg !3344

sw.default:                                       ; preds = %for.body36
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3346
  br label %for.inc327, !dbg !3347

for.inc327:                                       ; preds = %sw.bb68, %land.lhs.true312, %cond.end305, %sw.bb296, %cond.end, %sw.default, %cond.end77, %if.then317
  %call328 = call fastcc %struct.c_binding* @free_binding_and_advance(%struct.c_binding* nonnull %b.0) #7, !dbg !3348
  call void @llvm.dbg.value(metadata %struct.c_binding* %call328, metadata !3078, metadata !DIExpression()), !dbg !3106
  br label %for.cond34, !dbg !3349, !llvm.loop !3350

for.end329:                                       ; preds = %for.cond34
  %bf.load331 = load i64, i64* %1, align 8, !dbg !3352
  %93 = trunc i64 %bf.load331 to i32, !dbg !3353
  %tobool335 = icmp slt i32 %93, 0, !dbg !3353
  %94 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3354
  %cmp337 = icmp eq %struct.c_scope* %0, %94, !dbg !3355
  %or.cond5 = or i1 %tobool335, %cmp337, !dbg !3356
  %tobool340 = icmp ne %union.tree_node* %context.1, null, !dbg !3357
  %or.cond6 = and i1 %or.cond5, %tobool340, !dbg !3356
  br i1 %or.cond6, label %if.then341, label %if.else346, !dbg !3356

if.then341:                                       ; preds = %for.end329
  %initial343 = getelementptr inbounds %union.tree_node, %union.tree_node* %context.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3358
  store %union.tree_node* %block.0, %union.tree_node** %initial343, align 8, !dbg !3360
  %supercontext345 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3361
  %95 = bitcast i40* %supercontext345 to %union.tree_node**, !dbg !3361
  store %union.tree_node* %context.1, %union.tree_node** %95, align 8, !dbg !3362
  br label %if.end385, !dbg !3363

if.else346:                                       ; preds = %for.end329
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 0, !dbg !3364
  %96 = load %struct.c_scope*, %struct.c_scope** %outer, align 8, !dbg !3364
  %tobool347 = icmp eq %struct.c_scope* %96, null, !dbg !3365
  br i1 %tobool347, label %if.end385, label %if.then348, !dbg !3366

if.then348:                                       ; preds = %if.else346
  %tobool349 = icmp eq %union.tree_node* %block.0, null, !dbg !3367
  br i1 %tobool349, label %if.else361, label %do.body, !dbg !3368

do.body:                                          ; preds = %if.then348
  call void @llvm.dbg.value(metadata %struct.c_scope* %96, metadata !3093, metadata !DIExpression()), !dbg !3369
  call void @llvm.dbg.value(metadata %union.tree_node* %block.0, metadata !3099, metadata !DIExpression()), !dbg !3369
  %blocks_last = getelementptr inbounds %struct.c_scope, %struct.c_scope* %96, i64 0, i32 4, !dbg !3370
  %97 = load %union.tree_node*, %union.tree_node** %blocks_last, align 8, !dbg !3370
  %tobool352 = icmp eq %union.tree_node* %97, null, !dbg !3370
  br i1 %tobool352, label %if.else357, label %if.then353, !dbg !3372

if.then353:                                       ; preds = %do.body
  %chain356 = getelementptr inbounds %union.tree_node, %union.tree_node* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3370
  store %union.tree_node* %block.0, %union.tree_node** %chain356, align 8, !dbg !3370
  br label %if.end359, !dbg !3370

if.else357:                                       ; preds = %do.body
  %blocks358 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %96, i64 0, i32 3, !dbg !3370
  store %union.tree_node* %block.0, %union.tree_node** %blocks358, align 8, !dbg !3370
  br label %if.end359

if.end359:                                        ; preds = %if.else357, %if.then353
  store %union.tree_node* %block.0, %union.tree_node** %blocks_last, align 8, !dbg !3372
  br label %if.end385, !dbg !3372

if.else361:                                       ; preds = %if.then348
  %blocks362 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 3, !dbg !3373
  %98 = load %union.tree_node*, %union.tree_node** %blocks362, align 8, !dbg !3373
  %tobool363 = icmp eq %union.tree_node* %98, null, !dbg !3374
  %99 = ptrtoint %union.tree_node* %98 to i64, !dbg !3375
  br i1 %tobool363, label %if.end385, label %do.body365, !dbg !3375

do.body365:                                       ; preds = %if.else361
  call void @llvm.dbg.value(metadata %struct.c_scope* %96, metadata !3100, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !3103, metadata !DIExpression()), !dbg !3376
  %blocks_last367 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %96, i64 0, i32 4, !dbg !3377
  %100 = load %union.tree_node*, %union.tree_node** %blocks_last367, align 8, !dbg !3377
  %tobool368 = icmp eq %union.tree_node* %100, null, !dbg !3377
  br i1 %tobool368, label %if.else374, label %if.then369, !dbg !3379

if.then369:                                       ; preds = %do.body365
  %chain373 = getelementptr inbounds %union.tree_node, %union.tree_node* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3377
  %101 = bitcast %union.tree_node** %chain373 to i64*, !dbg !3377
  store i64 %99, i64* %101, align 8, !dbg !3377
  br label %if.end377, !dbg !3377

if.else374:                                       ; preds = %do.body365
  %blocks376 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %96, i64 0, i32 3, !dbg !3377
  %102 = bitcast %union.tree_node** %blocks376 to i64*, !dbg !3377
  store i64 %99, i64* %102, align 8, !dbg !3377
  br label %if.end377

if.end377:                                        ; preds = %if.else374, %if.then369
  %blocks_last378 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 4, !dbg !3379
  %103 = bitcast %union.tree_node** %blocks_last378 to i64*, !dbg !3379
  %104 = load i64, i64* %103, align 8, !dbg !3379
  %105 = bitcast %union.tree_node** %blocks_last367 to i64*, !dbg !3379
  store i64 %104, i64* %105, align 8, !dbg !3379
  br label %if.end385, !dbg !3379

if.end385:                                        ; preds = %if.else361, %if.else346, %if.end377, %if.end359, %if.then341
  %106 = bitcast %struct.c_scope* %0 to i64*, !dbg !3380
  %107 = load i64, i64* %106, align 8, !dbg !3380
  store i64 %107, i64* bitcast (%struct.c_scope** @current_scope to i64*), align 8, !dbg !3381
  %bf.load388 = load i64, i64* %1, align 8, !dbg !3382
  %108 = trunc i64 %bf.load388 to i32, !dbg !3384
  %tobool392 = icmp slt i32 %108, 0, !dbg !3384
  br i1 %tobool392, label %if.then393, label %if.end394, !dbg !3385

if.then393:                                       ; preds = %if.end385
  %outer_function = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 1, !dbg !3386
  %109 = bitcast %struct.c_scope** %outer_function to i64*, !dbg !3386
  %110 = load i64, i64* %109, align 8, !dbg !3386
  store i64 %110, i64* bitcast (%struct.c_scope** @current_function_scope to i64*), align 8, !dbg !3387
  br label %if.end394, !dbg !3388

if.end394:                                        ; preds = %if.then393, %if.end385
  %111 = bitcast %struct.c_scope* %0 to i8*, !dbg !3389
  %call395 = call i8* @memset(i8* %111, i32 0, i64 48) #6, !dbg !3390
  %112 = load i64, i64* bitcast (%struct.c_scope** @scope_freelist to i64*), align 8, !dbg !3391
  store i64 %112, i64* %106, align 8, !dbg !3392
  store %struct.c_scope* %0, %struct.c_scope** @scope_freelist, align 8, !dbg !3393
  ret %union.tree_node* %block.0, !dbg !3394
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_label_decls(%struct.c_scope* %scope) unnamed_addr #5 !dbg !3395 {
entry:
  %g = alloca %struct.c_goto_bindings*, align 8
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !3399, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !3400, metadata !DIExpression()), !dbg !3412
  %0 = bitcast %struct.c_goto_bindings** %g to i8*, !dbg !3413
  br label %while.cond, !dbg !3414

while.cond:                                       ; preds = %if.end40, %entry
  %s.0 = phi %struct.c_scope* [ %scope, %entry ], [ %12, %if.end40 ], !dbg !3412
  call void @llvm.dbg.value(metadata %struct.c_scope* %s.0, metadata !3400, metadata !DIExpression()), !dbg !3412
  %cmp = icmp eq %struct.c_scope* %s.0, null, !dbg !3415
  br i1 %cmp, label %while.end, label %while.body, !dbg !3414

while.body:                                       ; preds = %while.cond
  %has_label_bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %s.0, i64 0, i32 5, !dbg !3416
  %1 = bitcast i40* %has_label_bindings to i64*, !dbg !3416
  %bf.load = load i64, i64* %1, align 8, !dbg !3416
  %bf.cast1 = and i64 %bf.load, 17179869184, !dbg !3417
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !3417
  br i1 %tobool, label %if.end37, label %if.then, !dbg !3418

if.then:                                          ; preds = %while.body
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %s.0, i64 0, i32 2, !dbg !3419
  br label %for.cond, !dbg !3420

for.cond:                                         ; preds = %cleanup, %if.then
  %b.0.in = phi %struct.c_binding** [ %bindings, %if.then ], [ %prev35, %cleanup ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !3421
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3401, metadata !DIExpression()), !dbg !3422
  %cmp1 = icmp eq %struct.c_binding* %b.0, null, !dbg !3423
  br i1 %cmp1, label %if.end37.loopexit, label %for.body, !dbg !3424

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3425
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3426
  %2 = bitcast %union.tree_node** %decl to i64**, !dbg !3426
  %3 = load i64*, i64** %2, align 8, !dbg !3426
  %bf.load2 = load i64, i64* %3, align 8, !dbg !3426
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !3428
  %cmp5 = icmp eq i64 %bf.cast42, 30, !dbg !3428
  br i1 %cmp5, label %if.end, label %cleanup, !dbg !3429

if.end:                                           ; preds = %for.body
  %label = bitcast %struct.c_binding* %b.0 to %struct.c_label_vars**, !dbg !3430
  %4 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %4, metadata !3405, metadata !DIExpression()), !dbg !3413
  %bindings_in_scope = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 1, i32 1, !dbg !3431
  %5 = load %struct.c_binding*, %struct.c_binding** %bindings_in_scope, align 8, !dbg !3431
  call void @llvm.dbg.value(metadata %struct.c_binding* %5, metadata !3409, metadata !DIExpression()), !dbg !3413
  %label_bindings7 = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 1, !dbg !3432
  %call = call fastcc zeroext i8 @update_spot_bindings(%struct.c_scope* %scope, %struct.c_spot_bindings* nonnull %label_bindings7) #7, !dbg !3434
  %tobool8 = icmp eq i8 %call, 0, !dbg !3434
  br i1 %tobool8, label %if.end20, label %for.cond10.preheader, !dbg !3435

for.cond10.preheader:                             ; preds = %if.end
  %decls_in_scope = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 2, !dbg !3436
  br label %for.cond10, !dbg !3442

for.cond10:                                       ; preds = %for.cond10.preheader, %for.inc
  %b1.0 = phi %struct.c_binding* [ %8, %for.inc ], [ %5, %for.cond10.preheader ], !dbg !3413
  call void @llvm.dbg.value(metadata %struct.c_binding* %b1.0, metadata !3409, metadata !DIExpression()), !dbg !3413
  %cmp11 = icmp eq %struct.c_binding* %b1.0, null, !dbg !3443
  br i1 %cmp11, label %if.end20.loopexit, label %for.body12, !dbg !3442

for.body12:                                       ; preds = %for.cond10
  %decl13 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b1.0, i64 0, i32 1, !dbg !3444
  %6 = load %union.tree_node*, %union.tree_node** %decl13, align 8, !dbg !3444
  %call14 = call fastcc zeroext i8 @decl_jump_unsafe(%union.tree_node* %6) #7, !dbg !3445
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3445
  br i1 %tobool15, label %for.inc, label %if.then16, !dbg !3446

if.then16:                                        ; preds = %for.body12
  %7 = load %union.tree_node*, %union.tree_node** %decl13, align 8, !dbg !3447
  %call18 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %decls_in_scope, %union.tree_node* %7) #7, !dbg !3447
  br label %for.inc, !dbg !3447

for.inc:                                          ; preds = %for.body12, %if.then16
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b1.0, i64 0, i32 3, !dbg !3448
  %8 = load %struct.c_binding*, %struct.c_binding** %prev, align 8, !dbg !3448
  call void @llvm.dbg.value(metadata %struct.c_binding* %8, metadata !3409, metadata !DIExpression()), !dbg !3413
  br label %for.cond10, !dbg !3449, !llvm.loop !3450

if.end20.loopexit:                                ; preds = %for.cond10
  br label %if.end20, !dbg !3452

if.end20:                                         ; preds = %if.end20.loopexit, %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !3410, metadata !DIExpression()), !dbg !3413
  %gotos = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 3, !dbg !3454
  br label %for.cond21, !dbg !3452

for.cond21:                                       ; preds = %for.body27, %if.end20
  %ix.0 = phi i32 [ 0, %if.end20 ], [ %inc, %for.body27 ], !dbg !3456
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !3410, metadata !DIExpression()), !dbg !3413
  %9 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !3457
  %tobool22 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %9, null, !dbg !3457
  br i1 %tobool22, label %cond.end, label %cond.true, !dbg !3457

cond.true:                                        ; preds = %for.cond21
  %base24 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %9, i64 0, i32 0, !dbg !3457
  br label %cond.end, !dbg !3457

cond.end:                                         ; preds = %for.cond21, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base24, %cond.true ], [ null, %for.cond21 ], !dbg !3457
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %g, metadata !3411, metadata !DIExpression(DW_OP_deref)), !dbg !3413
  %call25 = call fastcc i32 @VEC_c_goto_bindings_p_base_iterate(%struct.VEC_c_goto_bindings_p_base* %cond, i32 %ix.0, %struct.c_goto_bindings** nonnull %g) #7, !dbg !3457
  %tobool26 = icmp eq i32 %call25, 0, !dbg !3458
  br i1 %tobool26, label %cleanup.loopexit, label %for.body27, !dbg !3458

for.body27:                                       ; preds = %cond.end
  %10 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !3459
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %10, metadata !3411, metadata !DIExpression()), !dbg !3413
  %goto_bindings = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %10, i64 0, i32 1, !dbg !3460
  %call28 = call fastcc zeroext i8 @update_spot_bindings(%struct.c_scope* %scope, %struct.c_spot_bindings* nonnull %goto_bindings) #7, !dbg !3461
  %inc = add i32 %ix.0, 1, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3410, metadata !DIExpression()), !dbg !3413
  br label %for.cond21, !dbg !3463, !llvm.loop !3464

cleanup.loopexit:                                 ; preds = %cond.end
  br label %cleanup, !dbg !3466

cleanup:                                          ; preds = %cleanup.loopexit, %for.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3466
  %prev35 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !3467
  br label %for.cond, !dbg !3468, !llvm.loop !3469

if.end37.loopexit:                                ; preds = %for.cond
  br label %if.end37, !dbg !3471

if.end37:                                         ; preds = %if.end37.loopexit, %while.body
  %11 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !3471
  %cmp38 = icmp eq %struct.c_scope* %s.0, %11, !dbg !3473
  br i1 %cmp38, label %while.end, label %if.end40, !dbg !3474

if.end40:                                         ; preds = %if.end37
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %s.0, i64 0, i32 0, !dbg !3475
  %12 = load %struct.c_scope*, %struct.c_scope** %outer, align 8, !dbg !3475
  call void @llvm.dbg.value(metadata %struct.c_scope* %12, metadata !3400, metadata !DIExpression()), !dbg !3412
  br label %while.cond, !dbg !3414, !llvm.loop !3476

while.end:                                        ; preds = %while.cond, %if.end37
  ret void, !dbg !3478
}

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local void @warn_for_unused_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @release_tree_vector(%struct.VEC_tree_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_type_context(%union.tree_node* %type, %union.tree_node* %context) unnamed_addr #5 !dbg !3479 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3483, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata %union.tree_node* %context, metadata !3484, metadata !DIExpression()), !dbg !3485
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3486
  br label %for.cond, !dbg !3488

for.cond:                                         ; preds = %for.body, %entry
  %type.addr.0.in = phi %union.tree_node** [ %0, %entry ], [ %2, %for.body ]
  %type.addr.0 = load %union.tree_node*, %union.tree_node** %type.addr.0.in, align 8, !dbg !3489
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !3483, metadata !DIExpression()), !dbg !3485
  %tobool = icmp eq %union.tree_node* %type.addr.0, null, !dbg !3490
  br i1 %tobool, label %for.end, label %for.body, !dbg !3490

for.body:                                         ; preds = %for.cond
  %context3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3491
  %1 = bitcast i24* %context3 to %union.tree_node**, !dbg !3491
  store %union.tree_node* %context, %union.tree_node** %1, align 8, !dbg !3493
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3494
  br label %for.cond, !dbg !3495, !llvm.loop !3496

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3498
}

declare dso_local zeroext i8 @pedwarn(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_binding* @free_binding_and_advance(%struct.c_binding* %b) unnamed_addr #5 !dbg !3499 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_binding* %b, metadata !3503, metadata !DIExpression()), !dbg !3505
  %prev1 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b, i64 0, i32 3, !dbg !3506
  %0 = load %struct.c_binding*, %struct.c_binding** %prev1, align 8, !dbg !3506
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !3504, metadata !DIExpression()), !dbg !3505
  %1 = bitcast %struct.c_binding* %b to i8*, !dbg !3507
  %call = tail call i8* @memset(i8* %1, i32 0, i64 48) #6, !dbg !3508
  %2 = load i64, i64* bitcast (%struct.c_binding** @binding_freelist to i64*), align 8, !dbg !3509
  %3 = bitcast %struct.c_binding** %prev1 to i64*, !dbg !3510
  store i64 %2, i64* %3, align 8, !dbg !3510
  store %struct.c_binding* %b, %struct.c_binding** @binding_freelist, align 8, !dbg !3511
  ret %struct.c_binding* %0, !dbg !3512
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @push_file_scope() local_unnamed_addr #5 !dbg !3513 {
entry:
  %0 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3516
  %tobool = icmp eq %struct.c_scope* %0, null, !dbg !3516
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !3518

if.end:                                           ; preds = %entry
  tail call void @push_scope() #7, !dbg !3519
  %1 = load i64, i64* bitcast (%struct.c_scope** @current_scope to i64*), align 8, !dbg !3520
  store i64 %1, i64* bitcast (%struct.c_scope** @file_scope to i64*), align 8, !dbg !3521
  tail call void @start_fname_decls() #6, !dbg !3522
  br label %for.cond, !dbg !3523

for.cond:                                         ; preds = %for.body, %if.end
  %decl.0.in = phi %union.tree_node** [ @visible_builtins, %if.end ], [ %chain, %for.body ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !3525
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !3515, metadata !DIExpression()), !dbg !3526
  %tobool1 = icmp eq %union.tree_node* %decl.0, null, !dbg !3527
  br i1 %tobool1, label %cleanup.cont.loopexit, label %for.body, !dbg !3527

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3528
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3528
  %3 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3530
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3531
  %4 = load i32, i32* %locus, align 8, !dbg !3531
  tail call fastcc void @bind(%union.tree_node* %2, %union.tree_node* nonnull %decl.0, %struct.c_scope* %3, i8 zeroext 0, i8 zeroext 1, i32 %4) #7, !dbg !3532
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3533
  br label %for.cond, !dbg !3534, !llvm.loop !3535

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3537

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !3537
}

declare dso_local void @start_fname_decls() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @bind(%union.tree_node* %name, %union.tree_node* %decl, %struct.c_scope* %scope, i8 zeroext %invisible, i8 zeroext %nested, i32 %locus) unnamed_addr #5 !dbg !3538 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3542, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3543, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !3544, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i8 %invisible, metadata !3545, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i8 %nested, metadata !3546, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %locus, metadata !3547, metadata !DIExpression()), !dbg !3551
  %0 = load %struct.c_binding*, %struct.c_binding** @binding_freelist, align 8, !dbg !3552
  %tobool = icmp eq %struct.c_binding* %0, null, !dbg !3552
  br i1 %tobool, label %if.else, label %if.then, !dbg !3554

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !3548, metadata !DIExpression()), !dbg !3551
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %0, i64 0, i32 3, !dbg !3555
  %1 = bitcast %struct.c_binding** %prev to i64*, !dbg !3555
  %2 = load i64, i64* %1, align 8, !dbg !3555
  store i64 %2, i64* bitcast (%struct.c_binding** @binding_freelist to i64*), align 8, !dbg !3557
  br label %if.end, !dbg !3558

if.else:                                          ; preds = %entry
  %call = tail call i8* @ggc_alloc_stat(i64 48) #6, !dbg !3559
  %3 = bitcast i8* %call to %struct.c_binding*, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.c_binding* %3, metadata !3548, metadata !DIExpression()), !dbg !3551
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %b.0 = phi %struct.c_binding* [ %0, %if.then ], [ %3, %if.else ], !dbg !3560
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3548, metadata !DIExpression()), !dbg !3551
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !3561
  store %struct.c_binding* null, %struct.c_binding** %shadowed, align 8, !dbg !3562
  %decl1 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3563
  store %union.tree_node* %decl, %union.tree_node** %decl1, align 8, !dbg !3564
  %id = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !3565
  store %union.tree_node* %name, %union.tree_node** %id, align 8, !dbg !3566
  %depth = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope, i64 0, i32 5, !dbg !3567
  %4 = bitcast i40* %depth to i64*, !dbg !3567
  %bf.load = load i64, i64* %4, align 8, !dbg !3567
  %5 = trunc i64 %bf.load to i32, !dbg !3567
  %bf.cast = and i32 %5, 268435455, !dbg !3567
  %depth2 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !3568
  %6 = and i8 %invisible, 1, !dbg !3569
  %bf.value7 = zext i8 %6 to i32, !dbg !3569
  %bf.shl = shl nuw nsw i32 %bf.value7, 28, !dbg !3569
  %bf.set9 = or i32 %bf.cast, %bf.shl, !dbg !3569
  %7 = and i8 %nested, 1, !dbg !3570
  %bf.value13 = zext i8 %7 to i32, !dbg !3570
  %bf.shl14 = shl nuw nsw i32 %bf.value13, 29, !dbg !3570
  %bf.set16 = or i32 %bf.set9, %bf.shl14, !dbg !3570
  store i32 %bf.set16, i32* %depth2, align 8, !dbg !3571
  %locus21 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 6, !dbg !3572
  store i32 %locus, i32* %locus21, align 4, !dbg !3573
  %type = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 0, i32 0, !dbg !3574
  store %union.tree_node* null, %union.tree_node** %type, align 8, !dbg !3575
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope, i64 0, i32 2, !dbg !3576
  %8 = bitcast %struct.c_binding** %bindings to i64*, !dbg !3576
  %9 = load i64, i64* %8, align 8, !dbg !3576
  %prev22 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !3577
  %10 = bitcast %struct.c_binding** %prev22 to i64*, !dbg !3578
  store i64 %9, i64* %10, align 8, !dbg !3578
  store %struct.c_binding* %b.0, %struct.c_binding** %bindings, align 8, !dbg !3579
  %tobool24 = icmp eq %union.tree_node* %name, null, !dbg !3580
  br i1 %tobool24, label %cleanup.cont, label %if.end26, !dbg !3582

if.end26:                                         ; preds = %if.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3583
  %bf.load27 = load i64, i64* %11, align 8, !dbg !3583
  %12 = trunc i64 %bf.load27 to i16, !dbg !3583
  switch i16 %12, label %sw.default [
    i16 30, label %sw.bb
    i16 6, label %sw.bb30
    i16 17, label %sw.bb30
    i16 16, label %sw.bb30
    i16 32, label %sw.bb31
    i16 29, label %sw.bb31
    i16 35, label %sw.bb31
    i16 33, label %sw.bb31
    i16 34, label %sw.bb31
    i16 0, label %sw.bb31
  ], !dbg !3584

sw.bb:                                            ; preds = %if.end26
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3585
  %13 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !3585
  call void @llvm.dbg.value(metadata %struct.c_binding** %13, metadata !3549, metadata !DIExpression()), !dbg !3551
  br label %sw.epilog, !dbg !3587

sw.bb30:                                          ; preds = %if.end26, %if.end26, %if.end26
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3588
  %14 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !3588
  call void @llvm.dbg.value(metadata %struct.c_binding** %14, metadata !3549, metadata !DIExpression()), !dbg !3551
  br label %sw.epilog, !dbg !3589

sw.bb31:                                          ; preds = %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3590
  %15 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !3590
  call void @llvm.dbg.value(metadata %struct.c_binding** %15, metadata !3549, metadata !DIExpression()), !dbg !3551
  br label %sw.epilog, !dbg !3591

sw.default:                                       ; preds = %if.end26
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3592
  br label %sw.epilog, !dbg !3593

sw.epilog:                                        ; preds = %sw.default, %sw.bb31, %sw.bb30, %sw.bb
  %here.0 = phi %struct.c_binding** [ undef, %sw.default ], [ %15, %sw.bb31 ], [ %14, %sw.bb30 ], [ %13, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0, metadata !3549, metadata !DIExpression()), !dbg !3551
  br label %while.cond, !dbg !3594

while.cond:                                       ; preds = %while.body, %sw.epilog
  %here.1 = phi %struct.c_binding** [ %here.0, %sw.epilog ], [ %shadowed41, %while.body ]
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.1, metadata !3549, metadata !DIExpression()), !dbg !3551
  %16 = load %struct.c_binding*, %struct.c_binding** %here.1, align 8, !dbg !3595
  %tobool32 = icmp eq %struct.c_binding* %16, null, !dbg !3595
  br i1 %tobool32, label %land.end, label %land.rhs, !dbg !3596

land.rhs:                                         ; preds = %while.cond
  %depth33 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %16, i64 0, i32 5, !dbg !3597
  %bf.load34 = load i32, i32* %depth33, align 8, !dbg !3597
  %bf.clear35 = and i32 %bf.load34, 268435455, !dbg !3597
  %bf.load37 = load i64, i64* %4, align 8, !dbg !3598
  %17 = trunc i64 %bf.load37 to i32, !dbg !3598
  %bf.cast39 = and i32 %17, 268435455, !dbg !3598
  %cmp = icmp ugt i32 %bf.clear35, %bf.cast39, !dbg !3599
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %18 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !3551
  br i1 %18, label %while.body, label %while.end, !dbg !3594

while.body:                                       ; preds = %land.end
  %shadowed41 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %16, i64 0, i32 4, !dbg !3600
  call void @llvm.dbg.value(metadata %struct.c_binding** %shadowed41, metadata !3549, metadata !DIExpression()), !dbg !3551
  br label %while.cond, !dbg !3594, !llvm.loop !3601

while.end:                                        ; preds = %land.end
  %here.1.lcssa = phi %struct.c_binding** [ %here.1, %land.end ]
  %.lcssa = phi %struct.c_binding* [ %16, %land.end ], !dbg !3595
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.1.lcssa, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.1.lcssa, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.1.lcssa, metadata !3549, metadata !DIExpression()), !dbg !3551
  store %struct.c_binding* %.lcssa, %struct.c_binding** %shadowed, align 8, !dbg !3602
  store %struct.c_binding* %b.0, %struct.c_binding** %here.1.lcssa, align 8, !dbg !3603
  br label %cleanup.cont, !dbg !3604

cleanup.cont:                                     ; preds = %if.end, %while.end
  ret void, !dbg !3604
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_file_scope() local_unnamed_addr #5 !dbg !3605 {
entry:
  br label %while.cond, !dbg !3606

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3607
  %1 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3608
  %cmp = icmp eq %struct.c_scope* %0, %1, !dbg !3609
  br i1 %cmp, label %while.end, label %while.body, !dbg !3606

while.body:                                       ; preds = %while.cond
  %call = tail call %union.tree_node* @pop_scope() #7, !dbg !3610
  br label %while.cond, !dbg !3606, !llvm.loop !3611

while.end:                                        ; preds = %while.cond
  tail call void @finish_fname_decls() #6, !dbg !3613
  tail call fastcc void @check_inline_statics() #7, !dbg !3614
  %2 = load i8*, i8** @pch_file, align 8, !dbg !3615
  %tobool = icmp eq i8* %2, null, !dbg !3615
  br i1 %tobool, label %if.end, label %if.then, !dbg !3617

if.then:                                          ; preds = %while.end
  tail call void @c_common_write_pch() #6, !dbg !3618
  br label %return, !dbg !3620

if.end:                                           ; preds = %while.end
  %call1 = tail call %union.tree_node* @pop_scope() #7, !dbg !3621
  store %struct.c_scope* null, %struct.c_scope** @file_scope, align 8, !dbg !3622
  tail call void @maybe_apply_pending_pragma_weaks() #6, !dbg !3623
  br label %return, !dbg !3624

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3624
}

declare dso_local void @finish_fname_decls() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_inline_statics() unnamed_addr #5 !dbg !3625 {
entry:
  br label %for.cond, !dbg !3628

for.cond:                                         ; preds = %for.inc, %entry
  %csi.0.in = phi %struct.c_inline_static** [ @c_inline_statics, %entry ], [ %next, %for.inc ]
  %csi.0 = load %struct.c_inline_static*, %struct.c_inline_static** %csi.0.in, align 8, !dbg !3630
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %csi.0, metadata !3627, metadata !DIExpression()), !dbg !3631
  %tobool = icmp eq %struct.c_inline_static* %csi.0, null, !dbg !3632
  br i1 %tobool, label %for.end, label %for.body, !dbg !3632

for.body:                                         ; preds = %for.cond
  %function = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 1, !dbg !3633
  %0 = bitcast %union.tree_node** %function to %struct.tree_decl_common**, !dbg !3633
  %1 = load %struct.tree_decl_common*, %struct.tree_decl_common** %0, align 8, !dbg !3633
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %1, i64 0, i32 2, !dbg !3633
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !3633
  %bf.load = load i64, i64* %2, align 8, !dbg !3633
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !3633
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !3633
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !3637

if.then:                                          ; preds = %for.body
  %type = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 3, !dbg !3638
  %3 = load i32, i32* %type, align 8, !dbg !3638
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !3639

sw.bb:                                            ; preds = %if.then
  %location = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 0, !dbg !3640
  %4 = load i32, i32* %location, align 8, !dbg !3640
  %static_decl = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 2, !dbg !3642
  %5 = load %union.tree_node*, %union.tree_node** %static_decl, align 8, !dbg !3642
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %4, i32 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.216, i64 0, i64 0), %union.tree_node* %5, %struct.tree_decl_common* %1) #6, !dbg !3643
  br label %for.inc, !dbg !3644

sw.bb3:                                           ; preds = %if.then
  %location4 = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 0, !dbg !3645
  %6 = load i32, i32* %location4, align 8, !dbg !3645
  %static_decl5 = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 2, !dbg !3646
  %7 = load %union.tree_node*, %union.tree_node** %static_decl5, align 8, !dbg !3646
  %call7 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %6, i32 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.217, i64 0, i64 0), %union.tree_node* %7, %struct.tree_decl_common* %1) #6, !dbg !3647
  br label %for.inc, !dbg !3648

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 746, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3649
  br label %for.inc, !dbg !3650

for.inc:                                          ; preds = %for.body, %sw.default, %sw.bb3, %sw.bb
  %next = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %csi.0, i64 0, i32 4, !dbg !3651
  br label %for.cond, !dbg !3652, !llvm.loop !3653

for.end:                                          ; preds = %for.cond
  store %struct.c_inline_static* null, %struct.c_inline_static** @c_inline_statics, align 8, !dbg !3655
  ret void, !dbg !3656
}

declare dso_local void @c_common_write_pch() local_unnamed_addr #2

declare dso_local void @maybe_apply_pending_pragma_weaks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_bindings_start_stmt_expr(%struct.c_spot_bindings* %switch_bindings) local_unnamed_addr #5 !dbg !3657 {
entry:
  %g = alloca %struct.c_goto_bindings*, align 8
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %switch_bindings, metadata !3661, metadata !DIExpression()), !dbg !3673
  %0 = bitcast %struct.c_goto_bindings** %g to i8*, !dbg !3674
  br label %for.cond, !dbg !3675

for.cond:                                         ; preds = %cleanup23, %entry
  %scope.0.in = phi %struct.c_scope** [ @current_scope, %entry ], [ %outer, %cleanup23 ]
  %scope.0 = load %struct.c_scope*, %struct.c_scope** %scope.0.in, align 8, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !3662, metadata !DIExpression()), !dbg !3673
  %cmp = icmp eq %struct.c_scope* %scope.0, null, !dbg !3677
  br i1 %cmp, label %for.end27, label %for.body, !dbg !3678

for.body:                                         ; preds = %for.cond
  %has_label_bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 5, !dbg !3679
  %1 = bitcast i40* %has_label_bindings to i64*, !dbg !3679
  %bf.load = load i64, i64* %1, align 8, !dbg !3679
  %bf.cast2 = and i64 %bf.load, 17179869184, !dbg !3681
  %tobool = icmp eq i64 %bf.cast2, 0, !dbg !3681
  br i1 %tobool, label %cleanup23, label %if.end, !dbg !3682

if.end:                                           ; preds = %for.body
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 2, !dbg !3683
  br label %for.cond1, !dbg !3684

for.cond1:                                        ; preds = %cleanup, %if.end
  %b.0.in = phi %struct.c_binding** [ %bindings, %if.end ], [ %prev, %cleanup ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !3685
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3663, metadata !DIExpression()), !dbg !3686
  %cmp2 = icmp eq %struct.c_binding* %b.0, null, !dbg !3687
  br i1 %cmp2, label %cleanup23.loopexit, label %for.body3, !dbg !3688

for.body3:                                        ; preds = %for.cond1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3689
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3690
  %2 = bitcast %union.tree_node** %decl to i64**, !dbg !3690
  %3 = load i64*, i64** %2, align 8, !dbg !3690
  %bf.load4 = load i64, i64* %3, align 8, !dbg !3690
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !3692
  %cmp7 = icmp eq i64 %bf.cast63, 30, !dbg !3692
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !3693

if.end9:                                          ; preds = %for.body3
  %label = bitcast %struct.c_binding* %b.0 to %struct.c_label_vars**, !dbg !3694
  %4 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !3694
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %4, metadata !3667, metadata !DIExpression()), !dbg !3674
  %stmt_exprs = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 1, i32 2, !dbg !3695
  %5 = load i32, i32* %stmt_exprs, align 8, !dbg !3696
  %inc = add nsw i32 %5, 1, !dbg !3696
  store i32 %inc, i32* %stmt_exprs, align 8, !dbg !3696
  call void @llvm.dbg.value(metadata i32 0, metadata !3671, metadata !DIExpression()), !dbg !3674
  %gotos = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 3, !dbg !3697
  br label %for.cond10, !dbg !3700

for.cond10:                                       ; preds = %for.body15, %if.end9
  %ix.0 = phi i32 [ 0, %if.end9 ], [ %inc18, %for.body15 ], !dbg !3701
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !3671, metadata !DIExpression()), !dbg !3674
  %6 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !3702
  %tobool11 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %6, null, !dbg !3702
  br i1 %tobool11, label %cond.end, label %cond.true, !dbg !3702

cond.true:                                        ; preds = %for.cond10
  %base13 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %6, i64 0, i32 0, !dbg !3702
  br label %cond.end, !dbg !3702

cond.end:                                         ; preds = %for.cond10, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base13, %cond.true ], [ null, %for.cond10 ], !dbg !3702
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %g, metadata !3672, metadata !DIExpression(DW_OP_deref)), !dbg !3674
  %call = call fastcc i32 @VEC_c_goto_bindings_p_base_iterate(%struct.VEC_c_goto_bindings_p_base* %cond, i32 %ix.0, %struct.c_goto_bindings** nonnull %g) #7, !dbg !3702
  %tobool14 = icmp eq i32 %call, 0, !dbg !3703
  br i1 %tobool14, label %cleanup.loopexit, label %for.body15, !dbg !3703

for.body15:                                       ; preds = %cond.end
  %7 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !3704
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !3672, metadata !DIExpression()), !dbg !3674
  %stmt_exprs16 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %7, i64 0, i32 1, i32 2, !dbg !3705
  %8 = load i32, i32* %stmt_exprs16, align 8, !dbg !3706
  %inc17 = add nsw i32 %8, 1, !dbg !3706
  store i32 %inc17, i32* %stmt_exprs16, align 8, !dbg !3706
  %inc18 = add i32 %ix.0, 1, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %inc18, metadata !3671, metadata !DIExpression()), !dbg !3674
  br label %for.cond10, !dbg !3708, !llvm.loop !3709

cleanup.loopexit:                                 ; preds = %cond.end
  br label %cleanup, !dbg !3711

cleanup:                                          ; preds = %cleanup.loopexit, %for.body3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3711
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !3712
  br label %for.cond1, !dbg !3713, !llvm.loop !3714

cleanup23.loopexit:                               ; preds = %for.cond1
  br label %cleanup23, !dbg !3716

cleanup23:                                        ; preds = %cleanup23.loopexit, %for.body
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 0, !dbg !3716
  br label %for.cond, !dbg !3717, !llvm.loop !3718

for.end27:                                        ; preds = %for.cond
  %cmp28 = icmp eq %struct.c_spot_bindings* %switch_bindings, null, !dbg !3720
  br i1 %cmp28, label %if.end32, label %if.then29, !dbg !3722

if.then29:                                        ; preds = %for.end27
  %stmt_exprs30 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %switch_bindings, i64 0, i32 2, !dbg !3723
  %9 = load i32, i32* %stmt_exprs30, align 8, !dbg !3724
  %inc31 = add nsw i32 %9, 1, !dbg !3724
  store i32 %inc31, i32* %stmt_exprs30, align 8, !dbg !3724
  br label %if.end32, !dbg !3724

if.end32:                                         ; preds = %for.end27, %if.then29
  ret void, !dbg !3725
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_goto_bindings_p_base_iterate(%struct.VEC_c_goto_bindings_p_base* %vec_, i32 %ix_, %struct.c_goto_bindings** %ptr) unnamed_addr #0 !dbg !3726 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_base* %vec_, metadata !3733, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3734, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %ptr, metadata !3735, metadata !DIExpression()), !dbg !3736
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_base* %vec_, null, !dbg !3737
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3737

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 0, !dbg !3737
  %0 = load i32, i32* %num, align 8, !dbg !3737
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3737
  br i1 %cmp, label %if.then, label %if.else, !dbg !3739

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3740
  %arrayidx = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3740
  %1 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %arrayidx, align 8, !dbg !3740
  br label %return, !dbg !3740

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3742

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.c_goto_bindings* [ null, %if.else ], [ %1, %if.then ], !dbg !3744
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3744
  store %struct.c_goto_bindings* %storemerge, %struct.c_goto_bindings** %ptr, align 8, !dbg !3744
  ret i32 %retval.0, !dbg !3739
}

; Function Attrs: nounwind uwtable
define dso_local void @c_bindings_end_stmt_expr(%struct.c_spot_bindings* %switch_bindings) local_unnamed_addr #5 !dbg !3745 {
entry:
  %g = alloca %struct.c_goto_bindings*, align 8
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %switch_bindings, metadata !3747, metadata !DIExpression()), !dbg !3759
  %0 = bitcast %struct.c_goto_bindings** %g to i8*, !dbg !3760
  br label %for.cond, !dbg !3761

for.cond:                                         ; preds = %cleanup39, %entry
  %scope.0.in = phi %struct.c_scope** [ @current_scope, %entry ], [ %outer, %cleanup39 ]
  %scope.0 = load %struct.c_scope*, %struct.c_scope** %scope.0.in, align 8, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !3748, metadata !DIExpression()), !dbg !3759
  %cmp = icmp eq %struct.c_scope* %scope.0, null, !dbg !3763
  br i1 %cmp, label %for.end43, label %for.body, !dbg !3764

for.body:                                         ; preds = %for.cond
  %has_label_bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 5, !dbg !3765
  %1 = bitcast i40* %has_label_bindings to i64*, !dbg !3765
  %bf.load = load i64, i64* %1, align 8, !dbg !3765
  %bf.cast2 = and i64 %bf.load, 17179869184, !dbg !3767
  %tobool = icmp eq i64 %bf.cast2, 0, !dbg !3767
  br i1 %tobool, label %cleanup39, label %if.end, !dbg !3768

if.end:                                           ; preds = %for.body
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 2, !dbg !3769
  br label %for.cond1, !dbg !3770

for.cond1:                                        ; preds = %cleanup, %if.end
  %b.0.in = phi %struct.c_binding** [ %bindings, %if.end ], [ %prev, %cleanup ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3749, metadata !DIExpression()), !dbg !3772
  %cmp2 = icmp eq %struct.c_binding* %b.0, null, !dbg !3773
  br i1 %cmp2, label %cleanup39.loopexit, label %for.body3, !dbg !3774

for.body3:                                        ; preds = %for.cond1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3775
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3776
  %2 = bitcast %union.tree_node** %decl to i64**, !dbg !3776
  %3 = load i64*, i64** %2, align 8, !dbg !3776
  %bf.load4 = load i64, i64* %3, align 8, !dbg !3776
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !3778
  %cmp7 = icmp eq i64 %bf.cast63, 30, !dbg !3778
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !3779

if.end9:                                          ; preds = %for.body3
  %label = bitcast %struct.c_binding* %b.0 to %struct.c_label_vars**, !dbg !3780
  %4 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !3780
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %4, metadata !3753, metadata !DIExpression()), !dbg !3760
  %stmt_exprs = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 1, i32 2, !dbg !3781
  %5 = load i32, i32* %stmt_exprs, align 8, !dbg !3782
  %dec = add nsw i32 %5, -1, !dbg !3782
  store i32 %dec, i32* %stmt_exprs, align 8, !dbg !3782
  %cmp12 = icmp slt i32 %5, 1, !dbg !3783
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !3785

if.then13:                                        ; preds = %if.end9
  %left_stmt_expr = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 1, i32 3, !dbg !3786
  store i8 1, i8* %left_stmt_expr, align 4, !dbg !3788
  store i32 0, i32* %stmt_exprs, align 8, !dbg !3789
  br label %if.end17, !dbg !3790

if.end17:                                         ; preds = %if.then13, %if.end9
  call void @llvm.dbg.value(metadata i32 0, metadata !3757, metadata !DIExpression()), !dbg !3760
  %gotos = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %4, i64 0, i32 3, !dbg !3791
  br label %for.cond18, !dbg !3794

for.cond18:                                       ; preds = %for.inc, %if.end17
  %ix.0 = phi i32 [ 0, %if.end17 ], [ %inc, %for.inc ], !dbg !3795
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !3757, metadata !DIExpression()), !dbg !3760
  %6 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !3796
  %tobool19 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %6, null, !dbg !3796
  br i1 %tobool19, label %cond.end, label %cond.true, !dbg !3796

cond.true:                                        ; preds = %for.cond18
  %base21 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %6, i64 0, i32 0, !dbg !3796
  br label %cond.end, !dbg !3796

cond.end:                                         ; preds = %for.cond18, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base21, %cond.true ], [ null, %for.cond18 ], !dbg !3796
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %g, metadata !3758, metadata !DIExpression(DW_OP_deref)), !dbg !3760
  %call = call fastcc i32 @VEC_c_goto_bindings_p_base_iterate(%struct.VEC_c_goto_bindings_p_base* %cond, i32 %ix.0, %struct.c_goto_bindings** nonnull %g) #7, !dbg !3796
  %tobool22 = icmp eq i32 %call, 0, !dbg !3797
  br i1 %tobool22, label %cleanup.loopexit, label %for.body23, !dbg !3797

for.body23:                                       ; preds = %cond.end
  %7 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !3798
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !3758, metadata !DIExpression()), !dbg !3760
  %stmt_exprs24 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %7, i64 0, i32 1, i32 2, !dbg !3800
  %8 = load i32, i32* %stmt_exprs24, align 8, !dbg !3801
  %dec25 = add nsw i32 %8, -1, !dbg !3801
  store i32 %dec25, i32* %stmt_exprs24, align 8, !dbg !3801
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !3758, metadata !DIExpression()), !dbg !3760
  %cmp28 = icmp slt i32 %8, 1, !dbg !3802
  br i1 %cmp28, label %if.then29, label %for.inc, !dbg !3804

if.then29:                                        ; preds = %for.body23
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !3758, metadata !DIExpression()), !dbg !3760
  %left_stmt_expr31 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %7, i64 0, i32 1, i32 3, !dbg !3805
  store i8 1, i8* %left_stmt_expr31, align 4, !dbg !3807
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !3758, metadata !DIExpression()), !dbg !3760
  store i32 0, i32* %stmt_exprs24, align 8, !dbg !3808
  br label %for.inc, !dbg !3809

for.inc:                                          ; preds = %for.body23, %if.then29
  %inc = add i32 %ix.0, 1, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3757, metadata !DIExpression()), !dbg !3760
  br label %for.cond18, !dbg !3811, !llvm.loop !3812

cleanup.loopexit:                                 ; preds = %cond.end
  br label %cleanup, !dbg !3814

cleanup:                                          ; preds = %cleanup.loopexit, %for.body3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3814
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !3815
  br label %for.cond1, !dbg !3816, !llvm.loop !3817

cleanup39.loopexit:                               ; preds = %for.cond1
  br label %cleanup39, !dbg !3819

cleanup39:                                        ; preds = %cleanup39.loopexit, %for.body
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 0, !dbg !3819
  br label %for.cond, !dbg !3820, !llvm.loop !3821

for.end43:                                        ; preds = %for.cond
  %cmp44 = icmp eq %struct.c_spot_bindings* %switch_bindings, null, !dbg !3823
  br i1 %cmp44, label %if.end54, label %if.then45, !dbg !3825

if.then45:                                        ; preds = %for.end43
  %stmt_exprs46 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %switch_bindings, i64 0, i32 2, !dbg !3826
  %9 = load i32, i32* %stmt_exprs46, align 8, !dbg !3828
  %dec47 = add nsw i32 %9, -1, !dbg !3828
  store i32 %dec47, i32* %stmt_exprs46, align 8, !dbg !3828
  %cmp49 = icmp sgt i32 %9, 0, !dbg !3829
  br i1 %cmp49, label %if.end54, label %cond.true50, !dbg !3829

cond.true50:                                      ; preds = %if.then45
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3829
  br label %if.end54, !dbg !3829

if.end54:                                         ; preds = %for.end43, %cond.true50, %if.then45
  ret void, !dbg !3830
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @pushdecl(%union.tree_node* %x) local_unnamed_addr #5 !dbg !3831 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !3833, metadata !DIExpression()), !dbg !3864
  %name1 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3865
  %0 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !3865
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3834, metadata !DIExpression()), !dbg !3864
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.c_scope* %1, metadata !3835, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 0, metadata !3837, metadata !DIExpression()), !dbg !3864
  %locus3 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3867
  %2 = load i32, i32* %locus3, align 8, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %2, metadata !3838, metadata !DIExpression()), !dbg !3864
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3868
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !3868
  %4 = ptrtoint %union.tree_node* %3 to i64, !dbg !3870
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3870

land.lhs.true:                                    ; preds = %entry
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3871
  %bf.load = load i64, i64* %5, align 8, !dbg !3871
  %bf.cast34 = and i64 %bf.load, 65535, !dbg !3872
  %cmp = icmp eq i64 %bf.cast34, 29, !dbg !3872
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true4, !dbg !3873

land.lhs.true4:                                   ; preds = %land.lhs.true
  %cmp9 = icmp eq i64 %bf.cast34, 32, !dbg !3874
  br i1 %cmp9, label %lor.lhs.false, label %if.then, !dbg !3875

lor.lhs.false:                                    ; preds = %land.lhs.true4, %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3876
  %6 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3876
  %tobool10 = icmp eq %union.tree_node* %6, null, !dbg !3876
  br i1 %tobool10, label %lor.lhs.false11, label %if.then, !dbg !3877

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3878
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !3878
  %bf.load13 = load i64, i64* %7, align 8, !dbg !3878
  %bf.cast1535 = and i64 %bf.load13, 33554432, !dbg !3878
  %tobool16 = icmp eq i64 %bf.cast1535, 0, !dbg !3878
  br i1 %tobool16, label %if.then, label %if.end, !dbg !3879

if.then:                                          ; preds = %land.lhs.true4, %lor.lhs.false11, %lor.lhs.false
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3880
  %8 = bitcast %union.tree_node** %context to i64*, !dbg !3881
  store i64 %4, i64* %8, align 8, !dbg !3881
  br label %if.end, !dbg !3880

if.end:                                           ; preds = %lor.lhs.false11, %entry, %if.then
  %tobool18 = icmp eq %union.tree_node* %0, null, !dbg !3882
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !3884

if.then19:                                        ; preds = %if.end
  tail call fastcc void @bind(%union.tree_node* null, %union.tree_node* %x, %struct.c_scope* %1, i8 zeroext 0, i8 zeroext 0, i32 %2) #7, !dbg !3885
  br label %cleanup499, !dbg !3887

if.end20:                                         ; preds = %if.end
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3888
  %9 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !3888
  %10 = load %struct.c_binding*, %struct.c_binding** %9, align 8, !dbg !3888
  call void @llvm.dbg.value(metadata %struct.c_binding* %10, metadata !3836, metadata !DIExpression()), !dbg !3864
  %tobool21 = icmp eq %struct.c_binding* %10, null, !dbg !3889
  br i1 %tobool21, label %if.end128, label %land.lhs.true22, !dbg !3890

land.lhs.true22:                                  ; preds = %if.end20
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %10, i64 0, i32 5, !dbg !3891
  %bf.load23 = load i32, i32* %depth, align 8, !dbg !3891
  %depth25 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %1, i64 0, i32 5, !dbg !3891
  %11 = bitcast i40* %depth25 to i64*, !dbg !3891
  %bf.load26 = load i64, i64* %11, align 8, !dbg !3891
  %12 = trunc i64 %bf.load26 to i32, !dbg !3891
  %13 = xor i32 %bf.load23, %12, !dbg !3891
  %14 = and i32 %13, 268435455, !dbg !3891
  %cmp29 = icmp eq i32 %14, 0, !dbg !3891
  br i1 %cmp29, label %if.then30, label %if.end128, !dbg !3892

if.then30:                                        ; preds = %land.lhs.true22
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3893
  %15 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !3893
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3843, metadata !DIExpression()), !dbg !3894
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %10, i64 0, i32 1, !dbg !3895
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3844, metadata !DIExpression()), !dbg !3894
  %type33 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3896
  %17 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !3896
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3845, metadata !DIExpression()), !dbg !3894
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3897
  %bf.load37 = load i64, i64* %18, align 8, !dbg !3897
  %bf.cast3930 = and i64 %bf.load37, 65535, !dbg !3899
  %cmp40 = icmp eq i64 %bf.cast3930, 15, !dbg !3899
  br i1 %cmp40, label %land.lhs.true41, label %if.end49, !dbg !3900

land.lhs.true41:                                  ; preds = %if.then30
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3901
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !3901
  %cmp45 = icmp eq %union.tree_node* %20, null, !dbg !3901
  br i1 %cmp45, label %if.end49, label %if.then46, !dbg !3902

if.then46:                                        ; preds = %land.lhs.true41
  %bf.clear48 = and i32 %bf.load23, -1073741825, !dbg !3903
  store i32 %bf.clear48, i32* %depth, align 8, !dbg !3903
  br label %if.end49, !dbg !3904

if.end49:                                         ; preds = %land.lhs.true41, %if.then46, %if.then30
  call void @llvm.dbg.value(metadata %struct.c_binding* %10, metadata !3842, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %10, metadata !3839, metadata !DIExpression()), !dbg !3894
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3905
  %bf.load51 = load i64, i64* %21, align 8, !dbg !3905
  %bf.cast5431 = and i64 %bf.load51, 134217728, !dbg !3905
  %tobool55 = icmp eq i64 %bf.cast5431, 0, !dbg !3905
  br i1 %tobool55, label %if.end81, label %land.lhs.true56, !dbg !3907

land.lhs.true56:                                  ; preds = %if.end49
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3908
  %bf.load58 = load i64, i64* %22, align 8, !dbg !3908
  %bf.cast6133 = and i64 %bf.load58, 134217728, !dbg !3908
  %tobool62 = icmp eq i64 %bf.cast6133, 0, !dbg !3908
  br i1 %tobool62, label %if.end81, label %while.cond.preheader, !dbg !3909

while.cond.preheader:                             ; preds = %land.lhs.true56
  br label %while.cond, !dbg !3910

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %b_ext.0 = phi %struct.c_binding* [ %23, %while.body ], [ %10, %while.cond.preheader ], !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0, metadata !3839, metadata !DIExpression()), !dbg !3894
  %cond7 = icmp eq %struct.c_binding* %b_ext.0, null, !dbg !3912
  br i1 %cond7, label %if.end81.loopexit, label %land.rhs, !dbg !3912

land.rhs:                                         ; preds = %while.cond
  %depth65 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0, i64 0, i32 5, !dbg !3913
  %bf.load66 = load i32, i32* %depth65, align 8, !dbg !3913
  %bf.clear67 = and i32 %bf.load66, 268435455, !dbg !3913
  %cmp68 = icmp eq i32 %bf.clear67, 0, !dbg !3913
  br i1 %cmp68, label %while.end, label %while.body, !dbg !3910

while.body:                                       ; preds = %land.rhs
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0, i64 0, i32 4, !dbg !3914
  %23 = load %struct.c_binding*, %struct.c_binding** %shadowed, align 8, !dbg !3914
  call void @llvm.dbg.value(metadata %struct.c_binding* %23, metadata !3839, metadata !DIExpression()), !dbg !3894
  br label %while.cond, !dbg !3910, !llvm.loop !3915

while.end:                                        ; preds = %land.rhs
  %b_ext.0.lcssa55 = phi %struct.c_binding* [ %b_ext.0, %land.rhs ], !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0.lcssa55, metadata !3839, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0.lcssa55, metadata !3839, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0.lcssa55, metadata !3839, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0.lcssa55, metadata !3842, metadata !DIExpression()), !dbg !3894
  %type71 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0.lcssa55, i64 0, i32 0, i32 0, !dbg !3916
  %24 = load %union.tree_node*, %union.tree_node** %type71, align 8, !dbg !3916
  %tobool72 = icmp eq %union.tree_node* %24, null, !dbg !3920
  br i1 %tobool72, label %if.end81, label %if.then73, !dbg !3921

if.then73:                                        ; preds = %while.end
  %25 = ptrtoint %union.tree_node* %24 to i64, !dbg !3921
  %decl76 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0.lcssa55, i64 0, i32 1, !dbg !3922
  %26 = bitcast %union.tree_node** %decl76 to %struct.tree_common**, !dbg !3922
  %27 = load %struct.tree_common*, %struct.tree_common** %26, align 8, !dbg !3922
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %27, i64 0, i32 2, !dbg !3922
  %28 = bitcast %union.tree_node** %type78 to i64*, !dbg !3923
  store i64 %25, i64* %28, align 8, !dbg !3923
  br label %if.end81, !dbg !3922

if.end81.loopexit:                                ; preds = %while.cond
  br label %if.end81, !dbg !3924

if.end81:                                         ; preds = %if.end81.loopexit, %while.end, %land.lhs.true56, %if.end49, %if.then73
  %b_use.1 = phi %struct.c_binding* [ %10, %land.lhs.true56 ], [ %10, %if.end49 ], [ %b_ext.0.lcssa55, %if.then73 ], [ %b_ext.0.lcssa55, %while.end ], [ %10, %if.end81.loopexit ], !dbg !3894
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_use.1, metadata !3842, metadata !DIExpression()), !dbg !3894
  %decl82 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_use.1, i64 0, i32 1, !dbg !3924
  %29 = load %union.tree_node*, %union.tree_node** %decl82, align 8, !dbg !3924
  %call = tail call fastcc zeroext i8 @duplicate_decls(%union.tree_node* %x, %union.tree_node* %29) #7, !dbg !3925
  %tobool83 = icmp eq i8 %call, 0, !dbg !3925
  br i1 %tobool83, label %cleanup, label %if.then84, !dbg !3926

if.then84:                                        ; preds = %if.end81
  %cmp85 = icmp eq %struct.c_binding* %b_use.1, %10, !dbg !3927
  br i1 %cmp85, label %if.end121, label %if.then86, !dbg !3928

if.then86:                                        ; preds = %if.then84
  %call87 = tail call i32 @comptypes(%union.tree_node* %17, %union.tree_node* %15) #6, !dbg !3929
  %tobool88 = icmp eq i32 %call87, 0, !dbg !3929
  br i1 %tobool88, label %if.else, label %if.then89, !dbg !3931

if.then89:                                        ; preds = %if.then86
  %call90 = tail call %union.tree_node* @composite_type(%union.tree_node* %17, %union.tree_node* %15) #6, !dbg !3932
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !3846, metadata !DIExpression()), !dbg !3933
  %.phi.trans.insert = bitcast %union.tree_node** %decl82 to %struct.tree_common**, !dbg !3933
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !3934
  br label %if.end94, !dbg !3935

if.else:                                          ; preds = %if.then86
  %30 = bitcast %union.tree_node** %decl82 to %struct.tree_common**, !dbg !3936
  %31 = load %struct.tree_common*, %struct.tree_common** %30, align 8, !dbg !3936
  %type93 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !3936
  %32 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !3936
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !3846, metadata !DIExpression()), !dbg !3933
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then89
  %.pre-phi = phi %struct.tree_common** [ %30, %if.else ], [ %.phi.trans.insert, %if.then89 ], !dbg !3934
  %.in = phi %struct.tree_common* [ %31, %if.else ], [ %.pre, %if.then89 ]
  %.pn = phi %struct.tree_common* [ %31, %if.else ], [ %.pre, %if.then89 ]
  %33 = phi %struct.tree_common* [ %31, %if.else ], [ %.pre, %if.then89 ], !dbg !3934
  %thistype.0 = phi %union.tree_node* [ %32, %if.else ], [ %call90, %if.then89 ], !dbg !3937
  %34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.pn, i64 0, i32 0, i32 0, !dbg !3938
  call void @llvm.dbg.value(metadata %union.tree_node* %thistype.0, metadata !3846, metadata !DIExpression()), !dbg !3933
  %type97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i64 0, i32 2, !dbg !3934
  %35 = bitcast %union.tree_node** %type97 to i64*, !dbg !3934
  %36 = load i64, i64* %35, align 8, !dbg !3934
  %37 = bitcast %struct.c_binding* %b_use.1 to i64*, !dbg !3940
  store i64 %36, i64* %37, align 8, !dbg !3940
  %bf.load102 = load i64, i64* %34, align 8, !dbg !3938
  %bf.cast10432 = and i64 %bf.load102, 65535, !dbg !3941
  %cmp105 = icmp eq i64 %bf.cast10432, 29, !dbg !3941
  %38 = inttoptr i64 %36 to %struct.tree_type*, !dbg !3942
  br i1 %cmp105, label %land.lhs.true106, label %if.end117, !dbg !3942

land.lhs.true106:                                 ; preds = %if.end94
  %built_in_class = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.in, i64 9, !dbg !3943
  %39 = bitcast %struct.tree_common* %built_in_class to i32*, !dbg !3943
  %bf.load108 = load i32, i32* %39, align 8, !dbg !3943
  %bf.clear110 = and i32 %bf.load108, 6144, !dbg !3943
  %cmp111 = icmp eq i32 %bf.clear110, 0, !dbg !3943
  br i1 %cmp111, label %if.end117, label %if.then112, !dbg !3944

if.then112:                                       ; preds = %land.lhs.true106
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %38, i64 0, i32 4, !dbg !3945
  %40 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !3945
  %call116 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %thistype.0, %union.tree_node* %40) #6, !dbg !3946
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !3846, metadata !DIExpression()), !dbg !3933
  %.pre44 = load %struct.tree_common*, %struct.tree_common** %.pre-phi, align 8, !dbg !3947
  br label %if.end117, !dbg !3948

if.end117:                                        ; preds = %land.lhs.true106, %if.then112, %if.end94
  %41 = phi %struct.tree_common* [ %.pre44, %if.then112 ], [ %33, %land.lhs.true106 ], [ %33, %if.end94 ], !dbg !3947
  %thistype.1 = phi %union.tree_node* [ %call116, %if.then112 ], [ %thistype.0, %land.lhs.true106 ], [ %thistype.0, %if.end94 ], !dbg !3933
  call void @llvm.dbg.value(metadata %union.tree_node* %thistype.1, metadata !3846, metadata !DIExpression()), !dbg !3933
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %41, i64 0, i32 2, !dbg !3947
  store %union.tree_node* %thistype.1, %union.tree_node** %type120, align 8, !dbg !3949
  br label %if.end121, !dbg !3950

if.end121:                                        ; preds = %if.then84, %if.end117
  %42 = load %union.tree_node*, %union.tree_node** %decl82, align 8, !dbg !3951
  br label %cleanup, !dbg !3952

cleanup:                                          ; preds = %if.end81, %if.end121
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end121 ], [ true, %if.end81 ]
  %retval.0 = phi %union.tree_node* [ %42, %if.end121 ], [ undef, %if.end81 ]
  br i1 %cleanup.dest.slot.0, label %skip_external_and_shadow_checks, label %cleanup499

if.end128:                                        ; preds = %if.end20, %land.lhs.true22
  %decl_flag_1130 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3953
  %43 = bitcast i40* %decl_flag_1130 to i64*, !dbg !3953
  %bf.load131 = load i64, i64* %43, align 8, !dbg !3953
  %bf.cast13410 = and i64 %bf.load131, 33554432, !dbg !3953
  %tobool135 = icmp ne i64 %bf.cast13410, 0, !dbg !3953
  %44 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !3954
  %cmp137 = icmp eq %struct.c_scope* %1, %44, !dbg !3955
  %or.cond = or i1 %tobool135, %cmp137, !dbg !3956
  br i1 %or.cond, label %if.then138, label %if.end414, !dbg !3956

if.then138:                                       ; preds = %if.end128
  %type141 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3957
  %45 = load %union.tree_node*, %union.tree_node** %type141, align 8, !dbg !3957
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !3851, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3854, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3855, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i8 0, metadata !3856, metadata !DIExpression()), !dbg !3958
  br i1 %tobool21, label %if.end182, label %land.lhs.true145, !dbg !3959

land.lhs.true145:                                 ; preds = %if.then138
  %depth146 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %10, i64 0, i32 5, !dbg !3961
  %bf.load147 = load i32, i32* %depth146, align 8, !dbg !3961
  %bf.clear148 = and i32 %bf.load147, 268435455, !dbg !3961
  %cmp149 = icmp eq i32 %bf.clear148, 0, !dbg !3961
  br i1 %cmp149, label %if.end182, label %land.lhs.true150, !dbg !3962

land.lhs.true150:                                 ; preds = %land.lhs.true145
  %decl151 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %10, i64 0, i32 1, !dbg !3963
  %46 = bitcast %union.tree_node** %decl151 to i64**, !dbg !3963
  %47 = load i64*, i64** %46, align 8, !dbg !3963
  %bf.load153 = load i64, i64* %47, align 8, !dbg !3963
  %bf.cast15527 = and i64 %bf.load153, 65535, !dbg !3964
  %cmp156 = icmp eq i64 %bf.cast15527, 29, !dbg !3964
  %48 = bitcast i64* %47 to %union.tree_node*, !dbg !3965
  br i1 %cmp156, label %land.lhs.true164, label %lor.lhs.false157, !dbg !3965

lor.lhs.false157:                                 ; preds = %land.lhs.true150
  %cmp163 = icmp eq i64 %bf.cast15527, 32, !dbg !3966
  br i1 %cmp163, label %land.lhs.true164, label %if.end182, !dbg !3967

land.lhs.true164:                                 ; preds = %lor.lhs.false157, %land.lhs.true150
  %context167 = getelementptr inbounds i64, i64* %47, i64 5, !dbg !3968
  %49 = bitcast i64* %context167 to %union.tree_node**, !dbg !3968
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !3968
  %tobool168 = icmp eq %union.tree_node* %50, null, !dbg !3968
  br i1 %tobool168, label %if.then178, label %lor.lhs.false169, !dbg !3968

lor.lhs.false169:                                 ; preds = %land.lhs.true164
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3968
  %bf.load174 = load i64, i64* %51, align 8, !dbg !3968
  %bf.cast17629 = and i64 %bf.load174, 65535, !dbg !3968
  %cmp177 = icmp eq i64 %bf.cast17629, 40, !dbg !3968
  br i1 %cmp177, label %if.then178, label %if.end182, !dbg !3969

if.then178:                                       ; preds = %land.lhs.true164, %lor.lhs.false169
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !3855, metadata !DIExpression()), !dbg !3958
  %type181 = getelementptr inbounds i64, i64* %47, i64 2, !dbg !3970
  %52 = bitcast i64* %type181 to %union.tree_node**, !dbg !3970
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !3970
  call void @llvm.dbg.value(metadata %union.tree_node* %53, metadata !3854, metadata !DIExpression()), !dbg !3958
  br label %if.end182, !dbg !3972

if.end182:                                        ; preds = %if.then138, %if.then178, %lor.lhs.false169, %lor.lhs.false157, %land.lhs.true145
  %vistype142.0 = phi %union.tree_node* [ null, %land.lhs.true145 ], [ %53, %if.then178 ], [ null, %lor.lhs.false169 ], [ null, %lor.lhs.false157 ], [ null, %if.then138 ], !dbg !3958
  %visdecl143.0 = phi %union.tree_node* [ null, %land.lhs.true145 ], [ %48, %if.then178 ], [ null, %lor.lhs.false169 ], [ null, %lor.lhs.false157 ], [ null, %if.then138 ], !dbg !3958
  call void @llvm.dbg.value(metadata %union.tree_node* %visdecl143.0, metadata !3855, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %union.tree_node* %vistype142.0, metadata !3854, metadata !DIExpression()), !dbg !3958
  br i1 %cmp137, label %if.end191, label %land.lhs.true184, !dbg !3973

land.lhs.true184:                                 ; preds = %if.end182
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %2) #6, !dbg !3975
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !3975
  %54 = load i8, i8* %sysp, align 8, !dbg !3975
  %cmp187 = icmp eq i8 %54, 0, !dbg !3975
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !3976

if.then189:                                       ; preds = %land.lhs.true184
  %call190 = call zeroext i8 (i32, i8*, ...) @warning(i32 138, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), %union.tree_node* %x) #6, !dbg !3977
  br label %if.end191, !dbg !3977

if.end191:                                        ; preds = %land.lhs.true184, %if.end182, %if.then189
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3978
  %values280 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3978
  %56 = bitcast i32* %values280 to %union.tree_node**, !dbg !3978
  br label %while.cond192, !dbg !3981

while.cond192:                                    ; preds = %if.end298, %if.end191
  %type_saved.0 = phi i8 [ 0, %if.end191 ], [ %type_saved.1, %if.end298 ], !dbg !3982
  %b.0 = phi %struct.c_binding* [ %10, %if.end191 ], [ %72, %if.end298 ], !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !3836, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 %type_saved.0, metadata !3856, metadata !DIExpression()), !dbg !3958
  %cond8 = icmp eq %struct.c_binding* %b.0, null, !dbg !3983
  br i1 %cond8, label %if.else390.loopexit, label %land.rhs194, !dbg !3983

land.rhs194:                                      ; preds = %while.cond192
  %depth195 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !3984
  %bf.load196 = load i32, i32* %depth195, align 8, !dbg !3984
  %bf.clear197 = and i32 %bf.load196, 268435455, !dbg !3984
  %cmp198 = icmp eq i32 %bf.clear197, 0, !dbg !3984
  br i1 %cmp198, label %while.end300, label %while.body202, !dbg !3981

while.body202:                                    ; preds = %land.rhs194
  %decl203 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !3985
  %57 = bitcast %union.tree_node** %decl203 to i64**, !dbg !3985
  %58 = load i64*, i64** %57, align 8, !dbg !3985
  %bf.load205 = load i64, i64* %58, align 8, !dbg !3985
  %bf.cast207 = and i64 %bf.load205, 65535, !dbg !3985
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast207, !dbg !3985
  %59 = load i32, i32* %arrayidx, align 4, !dbg !3985
  %cmp208 = icmp eq i32 %59, 3, !dbg !3985
  br i1 %cmp208, label %land.lhs.true210, label %if.end233, !dbg !3987

land.lhs.true210:                                 ; preds = %while.body202
  %context213 = getelementptr inbounds i64, i64* %58, i64 5, !dbg !3988
  %60 = bitcast i64* %context213 to %union.tree_node**, !dbg !3988
  %61 = load %union.tree_node*, %union.tree_node** %60, align 8, !dbg !3988
  %tobool214 = icmp eq %union.tree_node* %61, null, !dbg !3988
  br i1 %tobool214, label %land.lhs.true225, label %lor.lhs.false215, !dbg !3988

lor.lhs.false215:                                 ; preds = %land.lhs.true210
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3988
  %bf.load220 = load i64, i64* %62, align 8, !dbg !3988
  %bf.cast22226 = and i64 %bf.load220, 65535, !dbg !3988
  %cmp223 = icmp ne i64 %bf.cast22226, 40, !dbg !3988
  %tobool226 = icmp ne i8 %type_saved.0, 0, !dbg !3989
  %or.cond2 = or i1 %cmp223, %tobool226, !dbg !3990
  br i1 %or.cond2, label %if.end233, label %if.then227, !dbg !3990

land.lhs.true225:                                 ; preds = %land.lhs.true210
  %tobool226.old = icmp eq i8 %type_saved.0, 0, !dbg !3989
  br i1 %tobool226.old, label %if.then227, label %if.end233, !dbg !3991

if.then227:                                       ; preds = %land.lhs.true225, %lor.lhs.false215
  %type230 = getelementptr inbounds i64, i64* %58, i64 2, !dbg !3992
  %63 = load i64, i64* %type230, align 8, !dbg !3992
  %64 = bitcast %struct.c_binding* %b.0 to i64*, !dbg !3994
  store i64 %63, i64* %64, align 8, !dbg !3994
  call void @llvm.dbg.value(metadata i8 1, metadata !3856, metadata !DIExpression()), !dbg !3958
  br label %if.end233, !dbg !3995

if.end233:                                        ; preds = %land.lhs.true225, %lor.lhs.false215, %if.then227, %while.body202
  %type_saved.1 = phi i8 [ %type_saved.0, %land.lhs.true225 ], [ 1, %if.then227 ], [ %type_saved.0, %lor.lhs.false215 ], [ %type_saved.0, %while.body202 ], !dbg !3958
  call void @llvm.dbg.value(metadata i8 %type_saved.1, metadata !3856, metadata !DIExpression()), !dbg !3958
  %cmp237 = icmp eq i32 %bf.clear197, 1, !dbg !3996
  br i1 %cmp237, label %land.lhs.true239, label %if.end298, !dbg !3997

land.lhs.true239:                                 ; preds = %if.end233
  %bf.load242 = load i64, i64* %58, align 8, !dbg !3998
  %bf.cast24422 = and i64 %bf.load242, 65535, !dbg !3999
  %cmp245 = icmp eq i64 %bf.cast24422, 32, !dbg !3999
  br i1 %cmp245, label %land.lhs.true247, label %if.end298, !dbg !4000

land.lhs.true247:                                 ; preds = %land.lhs.true239
  %bf.cast25323 = and i64 %bf.load242, 67108864, !dbg !4001
  %tobool254 = icmp eq i64 %bf.cast25323, 0, !dbg !4001
  br i1 %tobool254, label %if.end298, label %land.lhs.true255, !dbg !4002

land.lhs.true255:                                 ; preds = %land.lhs.true247
  %type258 = getelementptr inbounds i64, i64* %58, i64 2, !dbg !4003
  %65 = bitcast i64* %type258 to i64**, !dbg !4003
  %66 = load i64*, i64** %65, align 8, !dbg !4003
  %bf.load260 = load i64, i64* %66, align 8, !dbg !4003
  %bf.cast26224 = and i64 %bf.load260, 65535, !dbg !4004
  %cmp263 = icmp eq i64 %bf.cast26224, 15, !dbg !4004
  br i1 %cmp263, label %land.lhs.true265, label %if.end298, !dbg !4005

land.lhs.true265:                                 ; preds = %land.lhs.true255
  %values = getelementptr inbounds i64, i64* %66, i64 3, !dbg !4006
  %67 = bitcast i64* %values to %union.tree_node**, !dbg !4006
  %68 = load %union.tree_node*, %union.tree_node** %67, align 8, !dbg !4006
  %tobool270 = icmp eq %union.tree_node* %68, null, !dbg !4006
  br i1 %tobool270, label %land.lhs.true271, label %if.end298, !dbg !4007

land.lhs.true271:                                 ; preds = %land.lhs.true265
  %bf.load273 = load i64, i64* %55, align 8, !dbg !4008
  %bf.cast27525 = and i64 %bf.load273, 65535, !dbg !4009
  %cmp276 = icmp eq i64 %bf.cast27525, 15, !dbg !4009
  br i1 %cmp276, label %land.lhs.true278, label %if.end298, !dbg !4010

land.lhs.true278:                                 ; preds = %land.lhs.true271
  %69 = load %union.tree_node*, %union.tree_node** %56, align 8, !dbg !4011
  %tobool281 = icmp eq %union.tree_node* %69, null, !dbg !4011
  br i1 %tobool281, label %if.end298, label %land.lhs.true282, !dbg !4012

land.lhs.true282:                                 ; preds = %land.lhs.true278
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4013
  %70 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !4013
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8, !dbg !4013
  %tobool286 = icmp eq %union.tree_node* %71, null, !dbg !4013
  br i1 %tobool286, label %if.end298, label %land.lhs.true287, !dbg !4014

land.lhs.true287:                                 ; preds = %land.lhs.true282
  %call292 = call i32 @integer_zerop(%union.tree_node* nonnull %71) #6, !dbg !4015
  %tobool293 = icmp eq i32 %call292, 0, !dbg !4015
  br i1 %tobool293, label %if.then294, label %if.end298, !dbg !4016

if.then294:                                       ; preds = %land.lhs.true287
  %bf.load296 = load i32, i32* %depth195, align 8, !dbg !4017
  %bf.set = or i32 %bf.load296, 1073741824, !dbg !4017
  store i32 %bf.set, i32* %depth195, align 8, !dbg !4017
  br label %if.end298, !dbg !4019

if.end298:                                        ; preds = %land.lhs.true287, %land.lhs.true282, %land.lhs.true278, %land.lhs.true265, %land.lhs.true247, %if.then294, %land.lhs.true271, %land.lhs.true255, %land.lhs.true239, %if.end233
  %shadowed299 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !4020
  %72 = load %struct.c_binding*, %struct.c_binding** %shadowed299, align 8, !dbg !4020
  call void @llvm.dbg.value(metadata %struct.c_binding* %72, metadata !3836, metadata !DIExpression()), !dbg !3864
  br label %while.cond192, !dbg !3981, !llvm.loop !4021

while.end300:                                     ; preds = %land.rhs194
  %b.0.lcssa53 = phi %struct.c_binding* [ %b.0, %land.rhs194 ], !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa53, metadata !3836, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa53, metadata !3836, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa53, metadata !3836, metadata !DIExpression()), !dbg !3864
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4023
  %bf.load304 = load i64, i64* %73, align 8, !dbg !4023
  %bf.cast30718 = and i64 %bf.load304, 134217728, !dbg !4023
  %tobool308 = icmp eq i64 %bf.cast30718, 0, !dbg !4023
  br i1 %tobool308, label %lor.lhs.false309, label %land.lhs.true313, !dbg !4025

lor.lhs.false309:                                 ; preds = %while.end300
  %decl310 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa53, i64 0, i32 1, !dbg !4026
  %74 = load %union.tree_node*, %union.tree_node** %decl310, align 8, !dbg !4026
  %call311 = call i32 @same_translation_unit_p(%union.tree_node* %x, %union.tree_node* %74) #6, !dbg !4027
  %tobool312 = icmp eq i32 %call311, 0, !dbg !4027
  br i1 %tobool312, label %if.end323, label %land.lhs.true313, !dbg !4028

land.lhs.true313:                                 ; preds = %lor.lhs.false309, %while.end300
  %type315 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa53, i64 0, i32 0, i32 0, !dbg !4029
  %75 = load %union.tree_node*, %union.tree_node** %type315, align 8, !dbg !4029
  %tobool316 = icmp eq %union.tree_node* %75, null, !dbg !4030
  br i1 %tobool316, label %if.end323, label %if.then317, !dbg !4031

if.then317:                                       ; preds = %land.lhs.true313
  %76 = ptrtoint %union.tree_node* %75 to i64, !dbg !4031
  %decl320 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa53, i64 0, i32 1, !dbg !4032
  %77 = bitcast %union.tree_node** %decl320 to %struct.tree_common**, !dbg !4032
  %78 = load %struct.tree_common*, %struct.tree_common** %77, align 8, !dbg !4032
  %type322 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %78, i64 0, i32 2, !dbg !4032
  %79 = bitcast %union.tree_node** %type322 to i64*, !dbg !4033
  store i64 %76, i64* %79, align 8, !dbg !4033
  br label %if.end323, !dbg !4032

if.end323:                                        ; preds = %land.lhs.true313, %lor.lhs.false309, %if.then317
  %bf.load327 = load i64, i64* %73, align 8, !dbg !4034
  %bf.cast33020 = and i64 %bf.load327, 134217728, !dbg !4034
  %tobool331 = icmp eq i64 %bf.cast33020, 0, !dbg !4034
  br i1 %tobool331, label %lor.lhs.false332, label %land.lhs.true336, !dbg !4035

lor.lhs.false332:                                 ; preds = %if.end323
  %decl333 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa53, i64 0, i32 1, !dbg !4036
  %80 = load %union.tree_node*, %union.tree_node** %decl333, align 8, !dbg !4036
  %call334 = call i32 @same_translation_unit_p(%union.tree_node* %x, %union.tree_node* %80) #6, !dbg !4037
  %tobool335 = icmp eq i32 %call334, 0, !dbg !4037
  br i1 %tobool335, label %if.else390, label %land.lhs.true336, !dbg !4038

land.lhs.true336:                                 ; preds = %lor.lhs.false332, %if.end323
  %decl337 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa53, i64 0, i32 1, !dbg !4039
  %81 = load %union.tree_node*, %union.tree_node** %decl337, align 8, !dbg !4039
  %call338 = call fastcc zeroext i8 @duplicate_decls(%union.tree_node* %x, %union.tree_node* %81) #7, !dbg !4040
  %tobool340 = icmp eq i8 %call338, 0, !dbg !4040
  br i1 %tobool340, label %if.else390, label %if.then341, !dbg !4041

if.then341:                                       ; preds = %land.lhs.true336
  %tobool343 = icmp eq %union.tree_node* %vistype142.0, null, !dbg !4042
  br i1 %tobool343, label %if.end355, label %if.then344, !dbg !4044

if.then344:                                       ; preds = %if.then341
  %call345 = call i32 @comptypes(%union.tree_node* nonnull %vistype142.0, %union.tree_node* %45) #6, !dbg !4045
  %tobool346 = icmp eq i32 %call345, 0, !dbg !4045
  br i1 %tobool346, label %if.else349, label %if.then347, !dbg !4048

if.then347:                                       ; preds = %if.then344
  %call348 = call %union.tree_node* @composite_type(%union.tree_node* nonnull %vistype142.0, %union.tree_node* %45) #6, !dbg !4049
  call void @llvm.dbg.value(metadata %union.tree_node* %call348, metadata !3857, metadata !DIExpression()), !dbg !4050
  br label %if.end355, !dbg !4051

if.else349:                                       ; preds = %if.then344
  %82 = bitcast %union.tree_node** %decl337 to %struct.tree_common**, !dbg !4052
  %83 = load %struct.tree_common*, %struct.tree_common** %82, align 8, !dbg !4052
  %type352 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %83, i64 0, i32 2, !dbg !4052
  %84 = load %union.tree_node*, %union.tree_node** %type352, align 8, !dbg !4052
  call void @llvm.dbg.value(metadata %union.tree_node* %84, metadata !3857, metadata !DIExpression()), !dbg !4050
  br label %if.end355

if.end355:                                        ; preds = %if.then341, %if.then347, %if.else349
  %thistype342.1 = phi %union.tree_node* [ %call348, %if.then347 ], [ %84, %if.else349 ], [ %45, %if.then341 ], !dbg !4053
  call void @llvm.dbg.value(metadata %union.tree_node* %thistype342.1, metadata !3857, metadata !DIExpression()), !dbg !4050
  %85 = bitcast %union.tree_node** %decl337 to %struct.tree_common**, !dbg !4054
  %86 = load %struct.tree_common*, %struct.tree_common** %85, align 8, !dbg !4054
  %type358 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %86, i64 0, i32 2, !dbg !4054
  %87 = bitcast %union.tree_node** %type358 to i64*, !dbg !4054
  %88 = load i64, i64* %87, align 8, !dbg !4054
  %89 = bitcast %struct.c_binding* %b.0.lcssa53 to i64*, !dbg !4055
  store i64 %88, i64* %89, align 8, !dbg !4055
  %90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %86, i64 0, i32 0, i32 0, !dbg !4056
  %bf.load363 = load i64, i64* %90, align 8, !dbg !4056
  %bf.cast36521 = and i64 %bf.load363, 65535, !dbg !4058
  %cmp366 = icmp eq i64 %bf.cast36521, 29, !dbg !4058
  %91 = inttoptr i64 %88 to %struct.tree_type*, !dbg !4059
  br i1 %cmp366, label %land.lhs.true368, label %if.end383, !dbg !4059

land.lhs.true368:                                 ; preds = %if.end355
  %built_in_class371 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %86, i64 9, !dbg !4060
  %92 = bitcast %struct.tree_common* %built_in_class371 to i32*, !dbg !4060
  %bf.load372 = load i32, i32* %92, align 8, !dbg !4060
  %bf.clear374 = and i32 %bf.load372, 6144, !dbg !4060
  %cmp375 = icmp eq i32 %bf.clear374, 0, !dbg !4060
  br i1 %cmp375, label %if.end383, label %if.then377, !dbg !4061

if.then377:                                       ; preds = %land.lhs.true368
  %attributes381 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %91, i64 0, i32 4, !dbg !4062
  %93 = load %union.tree_node*, %union.tree_node** %attributes381, align 8, !dbg !4062
  %call382 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %thistype342.1, %union.tree_node* %93) #6, !dbg !4063
  call void @llvm.dbg.value(metadata %union.tree_node* %call382, metadata !3857, metadata !DIExpression()), !dbg !4050
  %.pre45 = load %struct.tree_common*, %struct.tree_common** %85, align 8, !dbg !4064
  br label %if.end383, !dbg !4065

if.end383:                                        ; preds = %land.lhs.true368, %if.then377, %if.end355
  %94 = phi %struct.tree_common* [ %.pre45, %if.then377 ], [ %86, %land.lhs.true368 ], [ %86, %if.end355 ], !dbg !4064
  %thistype342.2 = phi %union.tree_node* [ %call382, %if.then377 ], [ %thistype342.1, %land.lhs.true368 ], [ %thistype342.1, %if.end355 ], !dbg !4050
  call void @llvm.dbg.value(metadata %union.tree_node* %thistype342.2, metadata !3857, metadata !DIExpression()), !dbg !4050
  %type386 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %94, i64 0, i32 2, !dbg !4064
  store %union.tree_node* %thistype342.2, %union.tree_node** %type386, align 8, !dbg !4066
  %95 = load %union.tree_node*, %union.tree_node** %decl337, align 8, !dbg !4067
  call fastcc void @bind(%union.tree_node* nonnull %0, %union.tree_node* %95, %struct.c_scope* %1, i8 zeroext 0, i8 zeroext 1, i32 %2) #7, !dbg !4068
  %96 = load %union.tree_node*, %union.tree_node** %decl337, align 8, !dbg !4069
  br label %cleanup410

if.else390.loopexit:                              ; preds = %while.cond192
  %b.0.lcssa = phi %struct.c_binding* [ %b.0, %while.cond192 ], !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa, metadata !3836, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa, metadata !3836, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0.lcssa, metadata !3836, metadata !DIExpression()), !dbg !3864
  br label %if.else390, !dbg !4070

if.else390:                                       ; preds = %if.else390.loopexit, %land.lhs.true336, %lor.lhs.false332
  %b.054 = phi %struct.c_binding* [ %b.0.lcssa, %if.else390.loopexit ], [ %b.0.lcssa53, %land.lhs.true336 ], [ %b.0.lcssa53, %lor.lhs.false332 ]
  %97 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4070
  %bf.load392 = load i64, i64* %97, align 8, !dbg !4070
  %bf.cast39519 = and i64 %bf.load392, 134217728, !dbg !4070
  %tobool396 = icmp eq i64 %bf.cast39519, 0, !dbg !4070
  br i1 %tobool396, label %cleanup410, label %if.then397, !dbg !4072

if.then397:                                       ; preds = %if.else390
  %tobool398 = icmp eq %union.tree_node* %visdecl143.0, null, !dbg !4073
  %tobool400 = icmp ne %struct.c_binding* %b.054, null, !dbg !4076
  %or.cond6 = or i1 %tobool398, %tobool400, !dbg !4077
  br i1 %or.cond6, label %if.else406, label %land.lhs.true401, !dbg !4077

land.lhs.true401:                                 ; preds = %if.then397
  %call402 = call fastcc zeroext i8 @duplicate_decls(%union.tree_node* %x, %union.tree_node* %visdecl143.0) #7, !dbg !4078
  %tobool404 = icmp eq i8 %call402, 0, !dbg !4078
  br i1 %tobool404, label %if.else406, label %cleanup410, !dbg !4079

if.else406:                                       ; preds = %land.lhs.true401, %if.then397
  %98 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !4080
  call fastcc void @bind(%union.tree_node* nonnull %0, %union.tree_node* %x, %struct.c_scope* %98, i8 zeroext 1, i8 zeroext 0, i32 %2) #7, !dbg !4082
  call void @llvm.dbg.value(metadata i8 1, metadata !3837, metadata !DIExpression()), !dbg !3864
  br label %cleanup410

cleanup410:                                       ; preds = %land.lhs.true401, %if.else390, %if.else406, %if.end383
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end383 ], [ true, %if.else390 ], [ true, %land.lhs.true401 ], [ true, %if.else406 ]
  %nested.2 = phi i8 [ 0, %if.end383 ], [ 0, %if.else390 ], [ 1, %land.lhs.true401 ], [ 1, %if.else406 ], !dbg !3864
  %x.addr.2 = phi %union.tree_node* [ %x, %if.end383 ], [ %x, %if.else390 ], [ %visdecl143.0, %land.lhs.true401 ], [ %x, %if.else406 ]
  %retval.1 = phi %union.tree_node* [ %96, %if.end383 ], [ undef, %if.else390 ], [ undef, %land.lhs.true401 ], [ undef, %if.else406 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.2, metadata !3833, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 %nested.2, metadata !3837, metadata !DIExpression()), !dbg !3864
  br i1 %cleanup.dest.slot.1, label %if.end414, label %cleanup499

if.end414:                                        ; preds = %cleanup410, %if.end128
  %nested.3 = phi i8 [ 0, %if.end128 ], [ %nested.2, %cleanup410 ], !dbg !4083
  %x.addr.3 = phi %union.tree_node* [ %x, %if.end128 ], [ %x.addr.2, %cleanup410 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.3, metadata !3833, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 %nested.3, metadata !3837, metadata !DIExpression()), !dbg !3864
  %99 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4084
  %bf.load416 = load i64, i64* %99, align 8, !dbg !4084
  %bf.cast41811 = and i64 %bf.load416, 65535, !dbg !4086
  %cmp419 = icmp eq i64 %bf.cast41811, 34, !dbg !4086
  br i1 %cmp419, label %skip_external_and_shadow_checks, label %if.then421, !dbg !4087

if.then421:                                       ; preds = %if.end414
  call fastcc void @warn_if_shadowing(%union.tree_node* %x.addr.3) #7, !dbg !4088
  br label %skip_external_and_shadow_checks, !dbg !4088

skip_external_and_shadow_checks:                  ; preds = %if.end414, %if.then421, %cleanup
  %nested.4 = phi i8 [ 0, %cleanup ], [ %nested.3, %if.then421 ], [ %nested.3, %if.end414 ], !dbg !4083
  %x.addr.4 = phi %union.tree_node* [ %x, %cleanup ], [ %x.addr.3, %if.then421 ], [ %x.addr.3, %if.end414 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.4, metadata !3833, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 %nested.4, metadata !3837, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.label(metadata !3863), !dbg !4089
  %100 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4090
  %bf.load425 = load i64, i64* %100, align 8, !dbg !4090
  %bf.cast42712 = and i64 %bf.load425, 65535, !dbg !4092
  %cmp428 = icmp eq i64 %bf.cast42712, 35, !dbg !4092
  br i1 %cmp428, label %if.then430, label %if.end431, !dbg !4093

if.then430:                                       ; preds = %skip_external_and_shadow_checks
  call void @set_underlying_type(%union.tree_node* %x.addr.4) #6, !dbg !4094
  br label %if.end431, !dbg !4094

if.end431:                                        ; preds = %if.then430, %skip_external_and_shadow_checks
  call fastcc void @bind(%union.tree_node* nonnull %0, %union.tree_node* %x.addr.4, %struct.c_scope* %1, i8 zeroext 0, i8 zeroext %nested.4, i32 %2) #7, !dbg !4095
  %type433 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4096
  %101 = load %union.tree_node*, %union.tree_node** %type433, align 8, !dbg !4096
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4097
  %cmp434 = icmp eq %union.tree_node* %101, %102, !dbg !4098
  %103 = getelementptr inbounds %union.tree_node, %union.tree_node* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4099
  br i1 %cmp434, label %cleanup499, label %land.lhs.true436, !dbg !4099

land.lhs.true436:                                 ; preds = %if.end431
  %104 = getelementptr inbounds %union.tree_node, %union.tree_node* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4100
  %105 = load %union.tree_node*, %union.tree_node** %104, align 8, !dbg !4100
  %cmp441 = icmp eq %union.tree_node* %105, null, !dbg !4100
  br i1 %cmp441, label %if.then443, label %cleanup499, !dbg !4101

if.then443:                                       ; preds = %land.lhs.true436
  br label %while.cond446, !dbg !4102

while.cond446:                                    ; preds = %while.body453, %if.then443
  %element.0 = phi %union.tree_node* [ %101, %if.then443 ], [ %element.0.pre, %while.body453 ], !dbg !4103
  call void @llvm.dbg.value(metadata %union.tree_node* %element.0, metadata !3860, metadata !DIExpression()), !dbg !4103
  %106 = getelementptr inbounds %union.tree_node, %union.tree_node* %element.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4104
  %bf.load448 = load i64, i64* %106, align 8, !dbg !4104
  %bf.cast45013 = and i64 %bf.load448, 65535, !dbg !4105
  %cmp451 = icmp eq i64 %bf.cast45013, 15, !dbg !4105
  br i1 %cmp451, label %while.body453, label %while.end456, !dbg !4102

while.body453:                                    ; preds = %while.cond446
  %element.0.in.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %element.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4103
  %element.0.pre = load %union.tree_node*, %union.tree_node** %element.0.in.phi.trans.insert, align 8, !dbg !4103
  br label %while.cond446, !dbg !4102, !llvm.loop !4106

while.end456:                                     ; preds = %while.cond446
  %element.0.lcssa = phi %union.tree_node* [ %element.0, %while.cond446 ], !dbg !4103
  call void @llvm.dbg.value(metadata %union.tree_node* %element.0.lcssa, metadata !3860, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata %union.tree_node* %element.0.lcssa, metadata !3860, metadata !DIExpression()), !dbg !4103
  %107 = getelementptr inbounds %union.tree_node, %union.tree_node* %element.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4108
  %108 = load %union.tree_node*, %union.tree_node** %107, align 8, !dbg !4108
  call void @llvm.dbg.value(metadata %union.tree_node* %108, metadata !3860, metadata !DIExpression()), !dbg !4103
  %109 = getelementptr inbounds %union.tree_node, %union.tree_node* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4109
  %bf.load459 = load i64, i64* %109, align 8, !dbg !4109
  %bf.cast46114 = and i64 %bf.load459, 65535, !dbg !4111
  %cmp462 = icmp eq i64 %bf.cast46114, 16, !dbg !4111
  br i1 %cmp462, label %land.lhs.true471, label %lor.lhs.false464, !dbg !4112

lor.lhs.false464:                                 ; preds = %while.end456
  %cmp469 = icmp eq i64 %bf.cast46114, 17, !dbg !4113
  br i1 %cmp469, label %land.lhs.true471, label %cleanup499, !dbg !4114

land.lhs.true471:                                 ; preds = %lor.lhs.false464, %while.end456
  %bf.load473 = load i64, i64* %100, align 8, !dbg !4115
  %bf.cast47516 = and i64 %bf.load473, 65535, !dbg !4116
  %cmp476 = icmp eq i64 %bf.cast47516, 35, !dbg !4116
  br i1 %cmp476, label %lor.lhs.false478, label %land.lhs.true487, !dbg !4117

lor.lhs.false478:                                 ; preds = %land.lhs.true471
  %bf.load482 = load i64, i64* %103, align 8, !dbg !4118
  %bf.cast48417 = and i64 %bf.load482, 65535, !dbg !4119
  %cmp485 = icmp eq i64 %bf.cast48417, 15, !dbg !4119
  br i1 %cmp485, label %land.lhs.true487, label %cleanup499, !dbg !4120

land.lhs.true487:                                 ; preds = %land.lhs.true471, %lor.lhs.false478
  %110 = getelementptr inbounds %union.tree_node, %union.tree_node* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4121
  %111 = load %union.tree_node*, %union.tree_node** %110, align 8, !dbg !4121
  %cmp490 = icmp eq %union.tree_node* %111, null, !dbg !4121
  br i1 %cmp490, label %if.then492, label %cleanup499, !dbg !4122

if.then492:                                       ; preds = %land.lhs.true487
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !4123
  %112 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !4123
  %113 = load %union.tree_node*, %union.tree_node** %112, align 8, !dbg !4123
  %call494 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %x.addr.4, %union.tree_node* %113) #6, !dbg !4123
  store %union.tree_node* %call494, %union.tree_node** %112, align 8, !dbg !4124
  br label %cleanup499, !dbg !4125

cleanup499:                                       ; preds = %land.lhs.true487, %land.lhs.true436, %if.end431, %if.then492, %lor.lhs.false478, %lor.lhs.false464, %cleanup, %cleanup410, %if.then19
  %retval.2 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %retval.1, %cleanup410 ], [ %x, %if.then19 ], [ %x.addr.4, %lor.lhs.false464 ], [ %x.addr.4, %lor.lhs.false478 ], [ %x.addr.4, %land.lhs.true487 ], [ %x.addr.4, %if.then492 ], [ %x.addr.4, %land.lhs.true436 ], [ %x.addr.4, %if.end431 ], !dbg !3864
  ret %union.tree_node* %retval.2, !dbg !4126
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @duplicate_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl) unnamed_addr #5 !dbg !4127 {
entry:
  %newtype = alloca %union.tree_node*, align 8
  %oldtype = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !4131, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !4132, metadata !DIExpression()), !dbg !4135
  %0 = bitcast %union.tree_node** %newtype to i8*, !dbg !4136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4136
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4133, metadata !DIExpression()), !dbg !4135
  store %union.tree_node* null, %union.tree_node** %newtype, align 8, !dbg !4137
  %1 = bitcast %union.tree_node** %oldtype to i8*, !dbg !4136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4136
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4134, metadata !DIExpression()), !dbg !4135
  store %union.tree_node* null, %union.tree_node** %oldtype, align 8, !dbg !4138
  call void @llvm.dbg.value(metadata %union.tree_node** %newtype, metadata !4133, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  call void @llvm.dbg.value(metadata %union.tree_node** %oldtype, metadata !4134, metadata !DIExpression(DW_OP_deref)), !dbg !4135
  %call = call fastcc zeroext i8 @diagnose_mismatched_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node** nonnull %newtype, %union.tree_node** nonnull %oldtype) #7, !dbg !4139
  %tobool = icmp eq i8 %call, 0, !dbg !4139
  br i1 %tobool, label %if.then, label %if.end, !dbg !4141

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4142
  %bf.load = load i64, i64* %2, align 8, !dbg !4144
  %bf.set = or i64 %bf.load, 8388608, !dbg !4144
  store i64 %bf.set, i64* %2, align 8, !dbg !4144
  br label %cleanup, !dbg !4145

if.end:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %newtype, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4133, metadata !DIExpression()), !dbg !4135
  %4 = load %union.tree_node*, %union.tree_node** %oldtype, align 8, !dbg !4147
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4134, metadata !DIExpression()), !dbg !4135
  call fastcc void @merge_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node* %3, %union.tree_node* %4) #7, !dbg !4148
  br label %cleanup, !dbg !4149

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %if.then ], !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4150
  ret i8 %retval.0, !dbg !4150
}

declare dso_local i32 @comptypes(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @composite_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_type_attribute_variant(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @same_translation_unit_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_if_shadowing(%union.tree_node* %new_decl) unnamed_addr #5 !dbg !4151 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_decl, metadata !4153, metadata !DIExpression()), !dbg !4160
  %0 = load i32, i32* @warn_shadow, align 4, !dbg !4161
  %tobool = icmp eq i32 %0, 0, !dbg !4161
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !4163

lor.lhs.false:                                    ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4164
  %1 = load i32, i32* %locus, align 8, !dbg !4164
  %cmp = icmp ult i32 %1, 2, !dbg !4164
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false1, !dbg !4165

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4166
  %2 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !4166
  %cmp2 = icmp eq %union.tree_node* %2, null, !dbg !4166
  br i1 %cmp2, label %if.end, label %land.lhs.true, !dbg !4166

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %cmp5 = icmp eq %union.tree_node* %2, %new_decl, !dbg !4166
  br i1 %cmp5, label %if.end, label %cleanup.cont, !dbg !4167

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false1
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4168
  %3 = bitcast %union.tree_node** %name to %struct.lang_identifier**, !dbg !4168
  %4 = load %struct.lang_identifier*, %struct.lang_identifier** %3, align 8, !dbg !4168
  %symbol_binding = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %4, i64 0, i32 1, !dbg !4168
  br label %for.cond, !dbg !4169

for.cond:                                         ; preds = %for.inc, %if.end
  %b.0.in = phi %struct.c_binding** [ %symbol_binding, %if.end ], [ %shadowed, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !4154, metadata !DIExpression()), !dbg !4160
  %tobool7 = icmp eq %struct.c_binding* %b.0, null, !dbg !4171
  br i1 %tobool7, label %cleanup.cont.loopexit, label %for.body, !dbg !4171

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !4172
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4172
  %tobool8 = icmp eq %union.tree_node* %5, null, !dbg !4173
  br i1 %tobool8, label %for.inc, label %land.lhs.true9, !dbg !4174

land.lhs.true9:                                   ; preds = %for.body
  %cmp11 = icmp eq %union.tree_node* %5, %new_decl, !dbg !4175
  br i1 %cmp11, label %for.inc, label %land.lhs.true12, !dbg !4176

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %invisible = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !4177
  %bf.load = load i32, i32* %invisible, align 8, !dbg !4177
  %bf.clear = and i32 %bf.load, 268435456, !dbg !4177
  %tobool13 = icmp eq i32 %bf.clear, 0, !dbg !4178
  br i1 %tobool13, label %if.then14, label %for.inc, !dbg !4179

if.then14:                                        ; preds = %land.lhs.true12
  %.lcssa = phi %union.tree_node* [ %5, %land.lhs.true12 ], !dbg !4172
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !4155, metadata !DIExpression()), !dbg !4180
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4181
  %cmp16 = icmp eq %union.tree_node* %.lcssa, %6, !dbg !4183
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !4184

if.then17:                                        ; preds = %if.then14
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.251, i64 0, i64 0), %union.tree_node* %new_decl) #6, !dbg !4185
  br label %cleanup.cont, !dbg !4187

if.else:                                          ; preds = %if.then14
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4188
  %bf.load18 = load i64, i64* %7, align 8, !dbg !4188
  %bf.cast1 = and i64 %bf.load18, 65535, !dbg !4190
  %cmp20 = icmp eq i64 %bf.cast1, 34, !dbg !4190
  br i1 %cmp20, label %if.then21, label %if.else23, !dbg !4191

if.then21:                                        ; preds = %if.else
  %call22 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.252, i64 0, i64 0), %union.tree_node* %new_decl) #6, !dbg !4192
  br label %if.end54, !dbg !4192

if.else23:                                        ; preds = %if.else
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4193
  %8 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4193
  %tobool25 = icmp eq %union.tree_node* %8, null, !dbg !4193
  br i1 %tobool25, label %if.then34, label %lor.lhs.false26, !dbg !4193

lor.lhs.false26:                                  ; preds = %if.else23
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4193
  %bf.load30 = load i64, i64* %9, align 8, !dbg !4193
  %bf.cast322 = and i64 %bf.load30, 65535, !dbg !4193
  %cmp33 = icmp eq i64 %bf.cast322, 40, !dbg !4193
  br i1 %cmp33, label %if.then34, label %if.else36, !dbg !4195

if.then34:                                        ; preds = %if.else23, %lor.lhs.false26
  %call35 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.253, i64 0, i64 0), %union.tree_node* %new_decl) #6, !dbg !4196
  br label %if.end54, !dbg !4196

if.else36:                                        ; preds = %lor.lhs.false26
  %cmp41 = icmp eq i64 %bf.cast1, 29, !dbg !4197
  br i1 %cmp41, label %land.lhs.true42, label %if.else49, !dbg !4199

land.lhs.true42:                                  ; preds = %if.else36
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 5, !dbg !4200
  %bf.load43 = load i32, i32* %built_in_class, align 8, !dbg !4200
  %bf.clear45 = and i32 %bf.load43, 6144, !dbg !4200
  %cmp46 = icmp eq i32 %bf.clear45, 0, !dbg !4200
  br i1 %cmp46, label %if.else49, label %if.then47, !dbg !4201

if.then47:                                        ; preds = %land.lhs.true42
  %call48 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.220, i64 0, i64 0), %union.tree_node* %new_decl) #6, !dbg !4202
  br label %cleanup.cont, !dbg !4204

if.else49:                                        ; preds = %land.lhs.true42, %if.else36
  %call50 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.254, i64 0, i64 0), %union.tree_node* %new_decl) #6, !dbg !4205
  br label %if.end54

if.end54:                                         ; preds = %if.then21, %if.else49, %if.then34
  %locus56 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4206
  %10 = load i32, i32* %locus56, align 8, !dbg !4206
  %call57 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %10, i32 176, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i64 0, i64 0)) #6, !dbg !4207
  br label %cleanup.cont, !dbg !4208

for.inc:                                          ; preds = %land.lhs.true12, %land.lhs.true9, %for.body
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !4209
  br label %for.cond, !dbg !4210, !llvm.loop !4211

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !4213

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %land.lhs.true, %entry, %lor.lhs.false, %if.then17, %if.then47, %if.end54
  ret void, !dbg !4213
}

declare dso_local void @set_underlying_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @pushdecl_top_level(%union.tree_node* %x) local_unnamed_addr #5 !dbg !4214 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !4216, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8 0, metadata !4218, metadata !DIExpression()), !dbg !4219
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4220
  %bf.load = load i64, i64* %0, align 8, !dbg !4220
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4220
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4220
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !4220

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 33, !dbg !4220
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !4220

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 2791, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4220
  %bf.load8.pre = load i64, i64* %0, align 8, !dbg !4221
  %.pre = and i64 %bf.load8.pre, 65535, !dbg !4221
  br label %cond.end, !dbg !4220

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %bf.cast103.pre-phi = phi i64 [ %bf.cast1, %entry ], [ %bf.cast1, %lor.lhs.false ], [ %.pre, %cond.true ], !dbg !4221
  %bf.load8 = phi i64 [ %bf.load, %entry ], [ %bf.load, %lor.lhs.false ], [ %bf.load8.pre, %cond.true ], !dbg !4221
  %name6 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4222
  %1 = load %union.tree_node*, %union.tree_node** %name6, align 8, !dbg !4222
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4217, metadata !DIExpression()), !dbg !4219
  %cmp11 = icmp eq i64 %bf.cast103.pre-phi, 33, !dbg !4221
  br i1 %cmp11, label %cond.end15, label %lor.lhs.false12, !dbg !4221

lor.lhs.false12:                                  ; preds = %cond.end
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4221
  %2 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !4221
  %3 = load %struct.c_binding*, %struct.c_binding** %2, align 8, !dbg !4221
  %tobool = icmp eq %struct.c_binding* %3, null, !dbg !4221
  br i1 %tobool, label %cond.end15, label %cond.true13, !dbg !4221

cond.true13:                                      ; preds = %lor.lhs.false12
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 2795, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4221
  %bf.load18.pre = load i64, i64* %0, align 8, !dbg !4223
  br label %cond.end15, !dbg !4221

cond.end15:                                       ; preds = %lor.lhs.false12, %cond.end, %cond.true13
  %bf.load18 = phi i64 [ %bf.load8, %lor.lhs.false12 ], [ %bf.load8, %cond.end ], [ %bf.load18.pre, %cond.true13 ], !dbg !4223
  %bf.cast204 = and i64 %bf.load18, 134217728, !dbg !4223
  %tobool21 = icmp eq i64 %bf.cast204, 0, !dbg !4223
  br i1 %tobool21, label %if.end, label %if.then, !dbg !4225

if.then:                                          ; preds = %cond.end15
  %4 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !4226
  tail call fastcc void @bind(%union.tree_node* %1, %union.tree_node* %x, %struct.c_scope* %4, i8 zeroext 1, i8 zeroext 0, i32 0) #7, !dbg !4228
  call void @llvm.dbg.value(metadata i8 1, metadata !4218, metadata !DIExpression()), !dbg !4219
  br label %if.end, !dbg !4229

if.end:                                           ; preds = %cond.end15, %if.then
  %nested.0 = phi i8 [ 1, %if.then ], [ 0, %cond.end15 ], !dbg !4219
  call void @llvm.dbg.value(metadata i8 %nested.0, metadata !4218, metadata !DIExpression()), !dbg !4219
  %5 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !4230
  %tobool22 = icmp eq %struct.c_scope* %5, null, !dbg !4230
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4232

if.then23:                                        ; preds = %if.end
  tail call fastcc void @bind(%union.tree_node* %1, %union.tree_node* %x, %struct.c_scope* nonnull %5, i8 zeroext 0, i8 zeroext %nested.0, i32 0) #7, !dbg !4233
  br label %if.end24, !dbg !4233

if.end24:                                         ; preds = %if.end, %if.then23
  ret %union.tree_node* %x, !dbg !4234
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @implicitly_declare(i32 %loc, %union.tree_node* %functionid) local_unnamed_addr #5 !dbg !4235 {
entry:
  %decl = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4239, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata %union.tree_node* %functionid, metadata !4240, metadata !DIExpression()), !dbg !4249
  %0 = bitcast %union.tree_node** %decl to i8*, !dbg !4250
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4250
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4242, metadata !DIExpression()), !dbg !4249
  store %union.tree_node* null, %union.tree_node** %decl, align 8, !dbg !4251
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %functionid, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4252
  %1 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !4252
  %2 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !4254
  %depth1 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %2, i64 0, i32 5, !dbg !4254
  %3 = bitcast i40* %depth1 to i64*, !dbg !4254
  br label %for.cond, !dbg !4258

for.cond:                                         ; preds = %for.inc, %entry
  %b.0.in = phi %struct.c_binding** [ %1, %entry ], [ %shadowed, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !4259
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !4241, metadata !DIExpression()), !dbg !4249
  %tobool = icmp eq %struct.c_binding* %b.0, null, !dbg !4260
  br i1 %tobool, label %for.end.loopexit, label %for.body, !dbg !4260

for.body:                                         ; preds = %for.cond
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !4261
  %bf.load = load i32, i32* %depth, align 8, !dbg !4261
  %bf.load2 = load i64, i64* %3, align 8, !dbg !4261
  %4 = trunc i64 %bf.load2 to i32, !dbg !4261
  %5 = xor i32 %bf.load, %4, !dbg !4261
  %6 = and i32 %5, 268435455, !dbg !4261
  %cmp = icmp eq i32 %6, 0, !dbg !4261
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4262

if.then:                                          ; preds = %for.body
  %b.0.lcssa11 = phi %struct.c_binding* [ %b.0, %for.body ], !dbg !4259
  %decl4 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa11, i64 0, i32 1, !dbg !4263
  %7 = bitcast %union.tree_node** %decl4 to i64*, !dbg !4263
  %8 = load i64, i64* %7, align 8, !dbg !4263
  %9 = bitcast %union.tree_node** %decl to i64*, !dbg !4265
  store i64 %8, i64* %9, align 8, !dbg !4265
  %10 = inttoptr i64 %8 to %union.tree_node*, !dbg !4266
  %11 = inttoptr i64 %8 to %struct.tree_decl_minimal*, !dbg !4266
  %12 = inttoptr i64 %8 to %struct.tree_common*, !dbg !4266
  %13 = inttoptr i64 %8 to %struct.tree_decl_common*, !dbg !4266
  %14 = inttoptr i64 %8 to %struct.tree_function_decl*, !dbg !4266
  %phitmp = icmp eq i64 %8, 0, !dbg !4266
  br label %for.end, !dbg !4266

for.inc:                                          ; preds = %for.body
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !4267
  br label %for.cond, !dbg !4268, !llvm.loop !4269

for.end.loopexit:                                 ; preds = %for.cond
  %b.0.lcssa = phi %struct.c_binding* [ %b.0, %for.cond ], !dbg !4259
  br label %for.end, !dbg !4271

for.end:                                          ; preds = %for.end.loopexit, %if.then
  %b.012 = phi %struct.c_binding* [ %b.0.lcssa, %for.end.loopexit ], [ %b.0.lcssa11, %if.then ]
  %15 = phi %union.tree_node* [ null, %for.end.loopexit ], [ %10, %if.then ]
  %16 = phi %struct.tree_common* [ null, %for.end.loopexit ], [ %12, %if.then ]
  %17 = phi %union.tree_node* [ null, %for.end.loopexit ], [ %10, %if.then ]
  %18 = phi %union.tree_node* [ null, %for.end.loopexit ], [ %10, %if.then ]
  %19 = phi %struct.tree_common* [ null, %for.end.loopexit ], [ %12, %if.then ]
  %20 = phi %struct.tree_function_decl* [ null, %for.end.loopexit ], [ %14, %if.then ]
  %21 = phi %union.tree_node* [ null, %for.end.loopexit ], [ %10, %if.then ]
  %22 = phi %struct.tree_decl_common* [ null, %for.end.loopexit ], [ %13, %if.then ]
  %23 = phi %struct.tree_common* [ null, %for.end.loopexit ], [ %12, %if.then ]
  %24 = phi %struct.tree_decl_minimal* [ null, %for.end.loopexit ], [ %11, %if.then ]
  %25 = phi %union.tree_node* [ null, %for.end.loopexit ], [ %10, %if.then ]
  %26 = phi i1 [ true, %for.end.loopexit ], [ %phitmp, %if.then ]
  br i1 %26, label %if.end69, label %if.then6, !dbg !4272

if.then6:                                         ; preds = %for.end
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !4242, metadata !DIExpression()), !dbg !4249
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4273
  %cmp7 = icmp eq %union.tree_node* %25, %27, !dbg !4275
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !4242, metadata !DIExpression()), !dbg !4249
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !4276

if.end9:                                          ; preds = %if.then6
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 5, !dbg !4277
  %bf.load10 = load i32, i32* %built_in_class, align 8, !dbg !4277
  %bf.clear11 = and i32 %bf.load10, 6144, !dbg !4277
  %cmp12 = icmp eq i32 %bf.clear11, 0, !dbg !4277
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !4278

land.lhs.true:                                    ; preds = %if.end9
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %24, i64 0, i32 1, !dbg !4279
  %28 = load i32, i32* %locus, align 8, !dbg !4279
  %cmp13 = icmp ult i32 %28, 2, !dbg !4279
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !4280

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4242, metadata !DIExpression()), !dbg !4249
  %29 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !4281
  %locus16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4283
  %30 = load i32, i32* %locus16, align 8, !dbg !4283
  tail call fastcc void @bind(%union.tree_node* %functionid, %union.tree_node* %15, %struct.c_scope* %29, i8 zeroext 0, i8 zeroext 1, i32 %30) #7, !dbg !4284
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4242, metadata !DIExpression()), !dbg !4249
  br label %cleanup, !dbg !4285

if.else:                                          ; preds = %if.end9, %land.lhs.true
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 48), align 16, !dbg !4286
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !4244, metadata !DIExpression()), !dbg !4287
  %type = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.012, i64 0, i32 0, i32 0, !dbg !4288
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4288
  %tobool17 = icmp eq %union.tree_node* %32, null, !dbg !4290
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !4291

if.then18:                                        ; preds = %if.else
  %33 = ptrtoint %union.tree_node* %32 to i64, !dbg !4291
  %type21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !4292
  %34 = bitcast %union.tree_node** %type21 to i64*, !dbg !4293
  store i64 %33, i64* %34, align 8, !dbg !4293
  br label %if.end22, !dbg !4292

if.end22:                                         ; preds = %if.else, %if.then18
  %lang_flag_2 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %22, i64 0, i32 2, !dbg !4294
  %35 = bitcast i40* %lang_flag_2 to i64*, !dbg !4294
  %bf.load23 = load i64, i64* %35, align 8, !dbg !4294
  %bf.cast261 = and i64 %bf.load23, 131072, !dbg !4294
  %tobool27 = icmp eq i64 %bf.cast261, 0, !dbg !4294
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !4296

if.then28:                                        ; preds = %if.end22
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !4242, metadata !DIExpression()), !dbg !4249
  tail call fastcc void @implicit_decl_warning(%union.tree_node* %functionid, %union.tree_node* %21) #7, !dbg !4297
  %lang_flag_230 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4299
  %36 = bitcast i40* %lang_flag_230 to i64*, !dbg !4299
  %bf.load31 = load i64, i64* %36, align 8, !dbg !4300
  %bf.set = or i64 %bf.load31, 131072, !dbg !4300
  store i64 %bf.set, i64* %36, align 8, !dbg !4300
  br label %if.end33, !dbg !4301

if.end33:                                         ; preds = %if.end22, %if.then28
  %built_in_class35 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %20, i64 0, i32 5, !dbg !4302
  %bf.load36 = load i32, i32* %built_in_class35, align 8, !dbg !4302
  %bf.clear38 = and i32 %bf.load36, 6144, !dbg !4302
  %cmp39 = icmp eq i32 %bf.clear38, 0, !dbg !4302
  %type42 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4304
  %37 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !4304
  br i1 %cmp39, label %if.else53, label %if.then40, !dbg !4305

if.then40:                                        ; preds = %if.end33
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4306
  %39 = load %union.tree_node*, %union.tree_node** %38, align 8, !dbg !4306
  %call = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %31, %union.tree_node* %39) #6, !dbg !4308
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4244, metadata !DIExpression()), !dbg !4287
  %type45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !4309
  %40 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !4309
  %call46 = tail call i32 @comptypes(%union.tree_node* %call, %union.tree_node* %40) #6, !dbg !4311
  %tobool47 = icmp eq i32 %call46, 0, !dbg !4311
  br i1 %tobool47, label %if.then48, label %if.end60, !dbg !4312

if.then48:                                        ; preds = %if.then40
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4242, metadata !DIExpression()), !dbg !4249
  %call49 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), %union.tree_node* %18) #6, !dbg !4313
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4315
  %41 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !4315
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !4244, metadata !DIExpression()), !dbg !4287
  br label %if.end60, !dbg !4316

if.else53:                                        ; preds = %if.end33
  %call56 = tail call i32 @comptypes(%union.tree_node* %31, %union.tree_node* %37) #6, !dbg !4317
  %tobool57 = icmp eq i32 %call56, 0, !dbg !4317
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !4320

if.then58:                                        ; preds = %if.else53
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4242, metadata !DIExpression()), !dbg !4249
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), %union.tree_node* %17) #6, !dbg !4321
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4242, metadata !DIExpression()), !dbg !4249
  tail call fastcc void @locate_old_decl(%union.tree_node* %17) #7, !dbg !4323
  br label %if.end60, !dbg !4324

if.end60:                                         ; preds = %if.then40, %if.else53, %if.then58, %if.then48
  %newtype.1 = phi %union.tree_node* [ %call, %if.then40 ], [ %41, %if.then48 ], [ %31, %if.then58 ], [ %31, %if.else53 ], !dbg !4287
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype.1, metadata !4244, metadata !DIExpression()), !dbg !4287
  %42 = bitcast %union.tree_node** %decl to %struct.tree_common**, !dbg !4325
  %type62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !4325
  %43 = bitcast %union.tree_node** %type62 to i64*, !dbg !4325
  %44 = load i64, i64* %43, align 8, !dbg !4325
  %45 = bitcast %struct.c_binding* %b.012 to i64*, !dbg !4326
  store i64 %44, i64* %45, align 8, !dbg !4326
  %46 = load %struct.tree_common*, %struct.tree_common** %42, align 8, !dbg !4327
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %46, i64 0, i32 2, !dbg !4327
  store %union.tree_node* %newtype.1, %union.tree_node** %type66, align 8, !dbg !4328
  %.cast = bitcast %struct.tree_common* %46 to %union.tree_node*, !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4242, metadata !DIExpression()), !dbg !4249
  %47 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4330
  %locus68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %46, i64 1, !dbg !4331
  %48 = bitcast %struct.tree_common* %locus68 to i32*, !dbg !4331
  %49 = load i32, i32* %48, align 8, !dbg !4331
  tail call fastcc void @bind(%union.tree_node* %functionid, %union.tree_node* %.cast, %struct.c_scope* %47, i8 zeroext 0, i8 zeroext 1, i32 %49) #7, !dbg !4332
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !4242, metadata !DIExpression()), !dbg !4249
  br label %cleanup

if.end69:                                         ; preds = %for.end
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 48), align 16, !dbg !4333
  %call70 = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 29, %union.tree_node* %functionid, %union.tree_node* %50) #6, !dbg !4333
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !4242, metadata !DIExpression()), !dbg !4249
  store %union.tree_node* %call70, %union.tree_node** %decl, align 8, !dbg !4334
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4335
  %51 = bitcast i40* %decl_flag_1 to i64*, !dbg !4335
  %bf.load72 = load i64, i64* %51, align 8, !dbg !4336
  %bf.set74 = or i64 %bf.load72, 33554432, !dbg !4336
  store i64 %bf.set74, i64* %51, align 8, !dbg !4336
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4337
  %bf.load75 = load i64, i64* %52, align 8, !dbg !4338
  %bf.set77 = or i64 %bf.load75, 134217728, !dbg !4338
  store i64 %bf.set77, i64* %52, align 8, !dbg !4338
  %53 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !4339
  %54 = load %struct.tree_decl_common*, %struct.tree_decl_common** %53, align 8, !dbg !4339
  %lang_flag_279 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %54, i64 0, i32 2, !dbg !4339
  %55 = bitcast i40* %lang_flag_279 to i64*, !dbg !4339
  %bf.load80 = load i64, i64* %55, align 8, !dbg !4340
  %bf.set82 = or i64 %bf.load80, 131072, !dbg !4340
  store i64 %bf.set82, i64* %55, align 8, !dbg !4340
  tail call fastcc void @implicit_decl_warning(%union.tree_node* %functionid, %union.tree_node* null) #7, !dbg !4341
  %56 = bitcast %struct.tree_decl_common* %54 to %union.tree_node*, !dbg !4342
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !4242, metadata !DIExpression()), !dbg !4249
  %call83 = tail call %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node* %56, %union.tree_node* null) #6, !dbg !4343
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !4243, metadata !DIExpression()), !dbg !4249
  %tobool84 = icmp eq %union.tree_node* %call83, null, !dbg !4344
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !4346

if.then85:                                        ; preds = %if.end69
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !4242, metadata !DIExpression()), !dbg !4249
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %call83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4347
  %arraydecay = bitcast i32* %str to i8*, !dbg !4347
  tail call void @set_user_assembler_name(%union.tree_node* %56, i8* nonnull %arraydecay) #6, !dbg !4348
  br label %if.end86, !dbg !4348

if.end86:                                         ; preds = %if.end69, %if.then85
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !4242, metadata !DIExpression()), !dbg !4249
  %call87 = tail call %union.tree_node* @pushdecl(%union.tree_node* %56) #7, !dbg !4349
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !4242, metadata !DIExpression()), !dbg !4249
  store %union.tree_node* %call87, %union.tree_node** %decl, align 8, !dbg !4350
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !4242, metadata !DIExpression()), !dbg !4249
  tail call void @rest_of_decl_compilation(%union.tree_node* %call87, i32 0, i32 0) #6, !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !4242, metadata !DIExpression()), !dbg !4249
  tail call void @gen_aux_info_record(%union.tree_node* %call87, i32 0, i32 1, i32 0) #6, !dbg !4352
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !4242, metadata !DIExpression(DW_OP_deref)), !dbg !4249
  %call88 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %decl, %union.tree_node* null, i32 0) #6, !dbg !4353
  %57 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4354
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !4242, metadata !DIExpression()), !dbg !4249
  br label %cleanup, !dbg !4355

cleanup:                                          ; preds = %if.then6, %if.end86, %if.end60, %if.then14
  %retval.0 = phi %union.tree_node* [ %.cast, %if.end60 ], [ %15, %if.then14 ], [ %57, %if.end86 ], [ %25, %if.then6 ], !dbg !4249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4356
  ret %union.tree_node* %retval.0, !dbg !4356
}

; Function Attrs: nounwind uwtable
define internal fastcc void @implicit_decl_warning(%union.tree_node* %id, %union.tree_node* %olddecl) unnamed_addr #5 !dbg !4357 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !4359, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !4360, metadata !DIExpression()), !dbg !4364
  %0 = load i32, i32* @warn_implicit_function_declaration, align 4, !dbg !4365
  %tobool = icmp eq i32 %0, 0, !dbg !4365
  br i1 %tobool, label %if.end8, label %if.then, !dbg !4366

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @flag_isoc99, align 4, !dbg !4367
  %tobool1 = icmp eq i32 %1, 0, !dbg !4367
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !4369

if.then2:                                         ; preds = %if.then
  %2 = load i32, i32* @input_location, align 4, !dbg !4370
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %2, i32 103, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.256, i64 0, i64 0), %union.tree_node* %id) #6, !dbg !4371
  call void @llvm.dbg.value(metadata i8 %call, metadata !4361, metadata !DIExpression()), !dbg !4372
  br label %if.end, !dbg !4373

if.else:                                          ; preds = %if.then
  %call3 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 103, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.256, i64 0, i64 0), %union.tree_node* %id) #6, !dbg !4374
  call void @llvm.dbg.value(metadata i8 %call3, metadata !4361, metadata !DIExpression()), !dbg !4372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %warned.0 = phi i8 [ %call, %if.then2 ], [ %call3, %if.else ], !dbg !4375
  call void @llvm.dbg.value(metadata i8 %warned.0, metadata !4361, metadata !DIExpression()), !dbg !4372
  %tobool4 = icmp ne %union.tree_node* %olddecl, null, !dbg !4376
  %tobool5 = icmp ne i8 %warned.0, 0, !dbg !4378
  %or.cond = and i1 %tobool4, %tobool5, !dbg !4379
  br i1 %or.cond, label %if.then6, label %if.end8, !dbg !4379

if.then6:                                         ; preds = %if.end
  tail call fastcc void @locate_old_decl(%union.tree_node* nonnull %olddecl) #7, !dbg !4380
  br label %if.end8, !dbg !4380

if.end8:                                          ; preds = %entry, %if.end, %if.then6
  ret void, !dbg !4381
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @locate_old_decl(%union.tree_node* %decl) unnamed_addr #5 !dbg !4382 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4384, metadata !DIExpression()), !dbg !4385
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4386
  %bf.load = load i64, i64* %0, align 8, !dbg !4386
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4388
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4388
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4389

land.lhs.true:                                    ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !4390
  %bf.load1 = load i32, i32* %built_in_class, align 8, !dbg !4390
  %bf.clear2 = and i32 %bf.load1, 6144, !dbg !4390
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !4390
  br i1 %cmp3, label %if.else, label %if.end15, !dbg !4391

if.else:                                          ; preds = %land.lhs.true, %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4392
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4392
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !4392
  br i1 %tobool, label %if.else5, label %if.then4, !dbg !4394

if.then4:                                         ; preds = %if.else
  %2 = load i32, i32* @input_location, align 4, !dbg !4395
  tail call void (i32, i8*, ...) @inform(i32 %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.257, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !4396
  br label %if.end15, !dbg !4396

if.else5:                                         ; preds = %if.else
  %lang_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4397
  %3 = bitcast i40* %lang_flag_2 to i64*, !dbg !4397
  %bf.load7 = load i64, i64* %3, align 8, !dbg !4397
  %bf.cast102 = and i64 %bf.load7, 131072, !dbg !4397
  %tobool11 = icmp eq i64 %bf.cast102, 0, !dbg !4397
  %4 = load i32, i32* @input_location, align 4, !dbg !4399
  br i1 %tobool11, label %if.else13, label %if.then12, !dbg !4400

if.then12:                                        ; preds = %if.else5
  tail call void (i32, i8*, ...) @inform(i32 %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.258, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !4401
  br label %if.end15, !dbg !4401

if.else13:                                        ; preds = %if.else5
  tail call void (i32, i8*, ...) @inform(i32 %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.259, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !4402
  br label %if.end15

if.end15:                                         ; preds = %land.lhs.true, %if.then4, %if.else13, %if.then12
  ret void, !dbg !4403
}

declare dso_local %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local void @rest_of_decl_compilation(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local void @gen_aux_info_record(%union.tree_node*, i32, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @undeclared_variable(i32 %loc, %union.tree_node* %id) local_unnamed_addr #5 !dbg !2233 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !2237, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !2238, metadata !DIExpression()), !dbg !4404
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4405
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !4407
  br i1 %cmp, label %if.then, label %if.else, !dbg !4408

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i64 0, i64 0), %union.tree_node* %id) #6, !dbg !4409
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4411
  call void @llvm.dbg.value(metadata %struct.c_scope* %1, metadata !2239, metadata !DIExpression()), !dbg !4404
  br label %if.end3, !dbg !4412

if.else:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), %union.tree_node* %id) #6, !dbg !4413
  %.b = load i1, i1* @undeclared_variable.already, align 1, !dbg !4415
  br i1 %.b, label %if.end, label %if.then1, !dbg !4417

if.then1:                                         ; preds = %if.else
  tail call void (i32, i8*, ...) @inform(i32 %loc, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4418
  store i1 true, i1* @undeclared_variable.already, align 1, !dbg !4420
  br label %if.end, !dbg !4421

if.end:                                           ; preds = %if.else, %if.then1
  %2 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !4422
  %tobool2 = icmp eq %struct.c_scope* %2, null, !dbg !4422
  %3 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4422
  %cond = select i1 %tobool2, %struct.c_scope* %3, %struct.c_scope* %2, !dbg !4422
  br label %if.end3, !dbg !4422

if.end3:                                          ; preds = %if.end, %if.then
  %scope.0 = phi %struct.c_scope* [ %1, %if.then ], [ %cond, %if.end ], !dbg !4423
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !2239, metadata !DIExpression()), !dbg !4404
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4424
  tail call fastcc void @bind(%union.tree_node* %id, %union.tree_node* %4, %struct.c_scope* %scope.0, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !4425
  ret void, !dbg !4426
}

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lookup_label(%union.tree_node* %name) local_unnamed_addr #5 !dbg !4427 {
entry:
  %label_vars = alloca %struct.c_label_vars*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4429, metadata !DIExpression()), !dbg !4432
  %0 = bitcast %struct.c_label_vars** %label_vars to i8*, !dbg !4433
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4433
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4434
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !4436
  br i1 %cmp, label %if.then, label %if.end, !dbg !4437

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !4438
  br label %cleanup, !dbg !4440

if.end:                                           ; preds = %entry
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4441
  %2 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !4441
  %3 = load %struct.c_binding*, %struct.c_binding** %2, align 8, !dbg !4441
  %tobool = icmp eq %struct.c_binding* %3, null, !dbg !4441
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4441

cond.true:                                        ; preds = %if.end
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %3, i64 0, i32 1, !dbg !4441
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4441
  br label %cond.end, !dbg !4441

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %union.tree_node* [ %4, %cond.true ], [ null, %if.end ], !dbg !4441
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4430, metadata !DIExpression()), !dbg !4432
  %tobool2 = icmp eq %union.tree_node* %cond, null, !dbg !4442
  br i1 %tobool2, label %if.end10, label %land.lhs.true, !dbg !4444

land.lhs.true:                                    ; preds = %cond.end
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4445
  %5 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4445
  %cmp3 = icmp eq %union.tree_node* %5, %1, !dbg !4446
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !4447

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4448
  %bf.load = load i64, i64* %6, align 8, !dbg !4448
  %bf.cast1 = and i64 %bf.load, 17179869184, !dbg !4448
  %tobool4 = icmp eq i64 %bf.cast1, 0, !dbg !4448
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !4449

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4450
  %7 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4450
  %cmp6 = icmp eq %union.tree_node* %7, null, !dbg !4453
  br i1 %cmp6, label %if.then7, label %cleanup, !dbg !4454

if.then7:                                         ; preds = %if.then5
  %8 = load i32, i32* @input_location, align 4, !dbg !4455
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4456
  store i32 %8, i32* %locus, align 8, !dbg !4457
  br label %cleanup, !dbg !4456

if.end10:                                         ; preds = %lor.lhs.false, %cond.end
  %9 = load i32, i32* @input_location, align 4, !dbg !4458
  call void @llvm.dbg.value(metadata %struct.c_label_vars** %label_vars, metadata !4431, metadata !DIExpression(DW_OP_deref)), !dbg !4432
  %call = call fastcc %union.tree_node* @make_label(i32 %9, %union.tree_node* %name, i8 zeroext 0, %struct.c_label_vars** nonnull %label_vars) #7, !dbg !4459
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4430, metadata !DIExpression()), !dbg !4432
  %10 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !4460
  %11 = load %struct.c_label_vars*, %struct.c_label_vars** %label_vars, align 8, !dbg !4461
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %11, metadata !4431, metadata !DIExpression()), !dbg !4432
  call fastcc void @bind_label(%union.tree_node* %name, %union.tree_node* %call, %struct.c_scope* %10, %struct.c_label_vars* %11) #7, !dbg !4462
  br label %cleanup, !dbg !4463

cleanup:                                          ; preds = %if.then5, %if.then7, %if.end10, %if.then
  %retval.0 = phi %union.tree_node* [ null, %if.then ], [ %call, %if.end10 ], [ %cond, %if.then7 ], [ %cond, %if.then5 ], !dbg !4432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4464
  ret %union.tree_node* %retval.0, !dbg !4464
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_label(i32 %location, %union.tree_node* %name, i8 zeroext %defining, %struct.c_label_vars** %p_label_vars) unnamed_addr #5 !dbg !4465 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !4470, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4471, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata i8 %defining, metadata !4472, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.value(metadata %struct.c_label_vars** %p_label_vars, metadata !4473, metadata !DIExpression()), !dbg !4476
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4477
  %call = tail call %union.tree_node* @build_decl_stat(i32 %location, i32 30, %union.tree_node* %name, %union.tree_node* %0) #6, !dbg !4477
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4474, metadata !DIExpression()), !dbg !4476
  %1 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !4478
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4479
  %2 = bitcast %union.tree_node** %context to i64*, !dbg !4480
  store i64 %1, i64* %2, align 8, !dbg !4480
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4481
  %3 = bitcast i40* %mode to i64*, !dbg !4481
  %bf.load = load i64, i64* %3, align 8, !dbg !4482
  %bf.clear = and i64 %bf.load, -256, !dbg !4482
  store i64 %bf.clear, i64* %3, align 8, !dbg !4482
  %call1 = tail call i8* @ggc_alloc_stat(i64 48) #6, !dbg !4483
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4475, metadata !DIExpression()), !dbg !4476
  %shadowed = bitcast i8* %call1 to %struct.c_label_vars**, !dbg !4484
  store %struct.c_label_vars* null, %struct.c_label_vars** %shadowed, align 8, !dbg !4485
  %label_bindings = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !4486
  %4 = bitcast i8* %label_bindings to %struct.c_spot_bindings*, !dbg !4486
  tail call fastcc void @set_spot_bindings(%struct.c_spot_bindings* nonnull %4, i8 zeroext %defining) #7, !dbg !4487
  %call2 = tail call %struct.VEC_tree_gc* @make_tree_vector() #6, !dbg !4488
  %decls_in_scope = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !4489
  %5 = bitcast i8* %decls_in_scope to %struct.VEC_tree_gc**, !dbg !4489
  store %struct.VEC_tree_gc* %call2, %struct.VEC_tree_gc** %5, align 8, !dbg !4490
  %call3 = tail call fastcc %struct.VEC_c_goto_bindings_p_gc* @VEC_c_goto_bindings_p_gc_alloc(i32 0) #7, !dbg !4491
  %gotos = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !4492
  %6 = bitcast i8* %gotos to %struct.VEC_c_goto_bindings_p_gc**, !dbg !4492
  store %struct.VEC_c_goto_bindings_p_gc* %call3, %struct.VEC_c_goto_bindings_p_gc** %6, align 8, !dbg !4493
  %7 = bitcast %struct.c_label_vars** %p_label_vars to i8**, !dbg !4494
  store i8* %call1, i8** %7, align 8, !dbg !4494
  ret %union.tree_node* %call, !dbg !4495
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bind_label(%union.tree_node* %name, %union.tree_node* %label, %struct.c_scope* %scope, %struct.c_label_vars* %label_vars) unnamed_addr #5 !dbg !4496 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4500, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !4501, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !4502, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %label_vars, metadata !4503, metadata !DIExpression()), !dbg !4505
  tail call fastcc void @bind(%union.tree_node* %name, %union.tree_node* %label, %struct.c_scope* %scope, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !4506
  %has_label_bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope, i64 0, i32 5, !dbg !4507
  %0 = bitcast i40* %has_label_bindings to i64*, !dbg !4507
  %bf.load = load i64, i64* %0, align 8, !dbg !4508
  %bf.set = or i64 %bf.load, 17179869184, !dbg !4508
  store i64 %bf.set, i64* %0, align 8, !dbg !4508
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope, i64 0, i32 2, !dbg !4509
  %1 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !4509
  call void @llvm.dbg.value(metadata %struct.c_binding* %1, metadata !4504, metadata !DIExpression()), !dbg !4505
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !4510
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4510
  %cmp = icmp eq %union.tree_node* %2, %label, !dbg !4510
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4510

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 676, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4510
  br label %cond.end, !dbg !4510

cond.end:                                         ; preds = %entry, %cond.true
  %3 = bitcast %struct.c_binding* %1 to i64*, !dbg !4511
  %4 = load i64, i64* %3, align 8, !dbg !4511
  %5 = bitcast %struct.c_label_vars* %label_vars to i64*, !dbg !4512
  store i64 %4, i64* %5, align 8, !dbg !4512
  %label3 = bitcast %struct.c_binding* %1 to %struct.c_label_vars**, !dbg !4513
  store %struct.c_label_vars* %label_vars, %struct.c_label_vars** %label3, align 8, !dbg !4514
  ret void, !dbg !4515
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lookup_label_for_goto(i32 %loc, %union.tree_node* %name) local_unnamed_addr #5 !dbg !4516 {
entry:
  %decl = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4518, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4519, metadata !DIExpression()), !dbg !4527
  %0 = bitcast %union.tree_node** %decl to i8*, !dbg !4528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4528
  %call = tail call %union.tree_node* @lookup_label(%union.tree_node* %name) #7, !dbg !4529
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4520, metadata !DIExpression()), !dbg !4527
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !4530
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4532

if.end:                                           ; preds = %entry
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4533
  %1 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4533
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4535
  %cmp1 = icmp eq %union.tree_node* %1, %2, !dbg !4536
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !4537

if.then2:                                         ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4538
  %bf.load = load i64, i64* %3, align 8, !dbg !4538
  %bf.cast1 = and i64 %bf.load, 17179869184, !dbg !4538
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4538
  br i1 %tobool, label %cond.true, label %cleanup, !dbg !4538

cond.true:                                        ; preds = %if.then2
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4538
  br label %cleanup, !dbg !4538

if.end3:                                          ; preds = %if.end
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4540
  %4 = bitcast %union.tree_node** %label_binding to %struct.c_label_vars***, !dbg !4540
  %5 = load %struct.c_label_vars**, %struct.c_label_vars*** %4, align 8, !dbg !4540
  %6 = load %struct.c_label_vars*, %struct.c_label_vars** %5, align 8, !dbg !4541
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %6, metadata !4521, metadata !DIExpression()), !dbg !4527
  %scope = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %6, i64 0, i32 1, i32 0, !dbg !4542
  %7 = load %struct.c_scope*, %struct.c_scope** %scope, align 8, !dbg !4542
  %cmp5 = icmp eq %struct.c_scope* %7, null, !dbg !4543
  br i1 %cmp5, label %if.then6, label %for.cond.preheader, !dbg !4544

for.cond.preheader:                               ; preds = %if.end3
  %decls_in_scope = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %6, i64 0, i32 2, !dbg !4545
  br label %for.cond, !dbg !4548

if.then6:                                         ; preds = %if.end3
  %call7 = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !4549
  %8 = bitcast i8* %call7 to %struct.c_goto_bindings*, !dbg !4549
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %8, metadata !4524, metadata !DIExpression()), !dbg !4550
  %loc8 = bitcast i8* %call7 to i32*, !dbg !4551
  store i32 %loc, i32* %loc8, align 8, !dbg !4552
  %goto_bindings = getelementptr inbounds i8, i8* %call7, i64 8, !dbg !4553
  %9 = bitcast i8* %goto_bindings to %struct.c_spot_bindings*, !dbg !4553
  tail call fastcc void @set_spot_bindings(%struct.c_spot_bindings* nonnull %9, i8 zeroext 1) #7, !dbg !4554
  %gotos = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %6, i64 0, i32 3, !dbg !4555
  %call9 = tail call fastcc %struct.c_goto_bindings** @VEC_c_goto_bindings_p_gc_safe_push(%struct.VEC_c_goto_bindings_p_gc** nonnull %gotos, %struct.c_goto_bindings* %8) #7, !dbg !4555
  br label %cleanup

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %ix.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !4522, metadata !DIExpression()), !dbg !4527
  %10 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %decls_in_scope, align 8, !dbg !4557
  %tobool11 = icmp eq %struct.VEC_tree_gc* %10, null, !dbg !4557
  br i1 %tobool11, label %cond.end16, label %cond.true12, !dbg !4557

cond.true12:                                      ; preds = %for.cond
  %base14 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %10, i64 0, i32 0, !dbg !4557
  br label %cond.end16, !dbg !4557

cond.end16:                                       ; preds = %for.cond, %cond.true12
  %cond17 = phi %struct.VEC_tree_base* [ %base14, %cond.true12 ], [ null, %for.cond ], !dbg !4557
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !4523, metadata !DIExpression(DW_OP_deref)), !dbg !4527
  %call18 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond17, i32 %ix.0, %union.tree_node** nonnull %decl) #7, !dbg !4557
  %tobool19 = icmp eq i32 %call18, 0, !dbg !4548
  br i1 %tobool19, label %for.end, label %for.body, !dbg !4548

for.body:                                         ; preds = %cond.end16
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4558
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4523, metadata !DIExpression()), !dbg !4527
  call fastcc void @warn_about_goto(i32 %loc, %union.tree_node* nonnull %call, %union.tree_node* %11) #7, !dbg !4559
  %inc = add i32 %ix.0, 1, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4522, metadata !DIExpression()), !dbg !4527
  br label %for.cond, !dbg !4561, !llvm.loop !4562

for.end:                                          ; preds = %cond.end16
  %left_stmt_expr = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %6, i64 0, i32 1, i32 3, !dbg !4564
  %12 = load i8, i8* %left_stmt_expr, align 4, !dbg !4564
  %tobool21 = icmp eq i8 %12, 0, !dbg !4566
  br i1 %tobool21, label %cleanup, label %if.then22, !dbg !4567

if.then22:                                        ; preds = %for.end
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4568
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4570
  %13 = load i32, i32* %locus, align 8, !dbg !4570
  call void (i32, i8*, ...) @inform(i32 %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), %union.tree_node* nonnull %call) #6, !dbg !4571
  br label %cleanup, !dbg !4572

cleanup:                                          ; preds = %if.then2, %for.end, %if.then22, %cond.true, %entry, %if.then6
  %retval.0 = phi %union.tree_node* [ %call, %if.then6 ], [ null, %entry ], [ %call, %if.then2 ], [ %call, %cond.true ], [ %call, %if.then22 ], [ %call, %for.end ], !dbg !4527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4573
  ret %union.tree_node* %retval.0, !dbg !4573
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_spot_bindings(%struct.c_spot_bindings* %p, i8 zeroext %defining) unnamed_addr #5 !dbg !4574 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %p, metadata !4578, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %defining, metadata !4579, metadata !DIExpression()), !dbg !4580
  %tobool = icmp eq i8 %defining, 0, !dbg !4581
  br i1 %tobool, label %if.else, label %if.then, !dbg !4583

if.then:                                          ; preds = %entry
  %0 = load i64, i64* bitcast (%struct.c_scope** @current_scope to i64*), align 8, !dbg !4584
  %1 = bitcast %struct.c_spot_bindings* %p to i64*, !dbg !4586
  store i64 %0, i64* %1, align 8, !dbg !4586
  %2 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4587
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %2, i64 0, i32 2, !dbg !4588
  %3 = bitcast %struct.c_binding** %bindings to i64*, !dbg !4588
  %4 = load i64, i64* %3, align 8, !dbg !4588
  %bindings_in_scope = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 1, !dbg !4589
  %5 = bitcast %struct.c_binding** %bindings_in_scope to i64*, !dbg !4590
  store i64 %4, i64* %5, align 8, !dbg !4590
  br label %if.end, !dbg !4591

if.else:                                          ; preds = %entry
  %scope1 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 0, !dbg !4592
  store %struct.c_scope* null, %struct.c_scope** %scope1, align 8, !dbg !4594
  %bindings_in_scope2 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 1, !dbg !4595
  store %struct.c_binding* null, %struct.c_binding** %bindings_in_scope2, align 8, !dbg !4596
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %stmt_exprs = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 2, !dbg !4597
  store i32 0, i32* %stmt_exprs, align 8, !dbg !4598
  %left_stmt_expr = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 3, !dbg !4599
  store i8 0, i8* %left_stmt_expr, align 4, !dbg !4600
  ret void, !dbg !4601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.c_goto_bindings** @VEC_c_goto_bindings_p_gc_safe_push(%struct.VEC_c_goto_bindings_p_gc** %vec_, %struct.c_goto_bindings* %obj_) unnamed_addr #0 !dbg !4602 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_gc** %vec_, metadata !4607, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %obj_, metadata !4608, metadata !DIExpression()), !dbg !4609
  %call = tail call fastcc i32 @VEC_c_goto_bindings_p_gc_reserve(%struct.VEC_c_goto_bindings_p_gc** %vec_, i32 1) #7, !dbg !4610
  %0 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %vec_, align 8, !dbg !4610
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_gc* %0, null, !dbg !4610
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4610

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %0, i64 0, i32 0, !dbg !4610
  br label %cond.end, !dbg !4610

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4610
  %call1 = tail call fastcc %struct.c_goto_bindings** @VEC_c_goto_bindings_p_base_quick_push(%struct.VEC_c_goto_bindings_p_base* %cond, %struct.c_goto_bindings* %obj_) #7, !dbg !4610
  ret %struct.c_goto_bindings** %call1, !dbg !4610
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !4611 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4617, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4618, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !4619, metadata !DIExpression()), !dbg !4620
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4621
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4621

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4621
  %0 = load i32, i32* %num, align 8, !dbg !4621
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4621
  br i1 %cmp, label %if.then, label %if.else, !dbg !4623

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4624
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4624
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4624
  br label %return, !dbg !4624

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4626

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !4628
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4628
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !4628
  ret i32 %retval.0, !dbg !4623
}

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_about_goto(i32 %goto_loc, %union.tree_node* %label, %union.tree_node* %decl) unnamed_addr #5 !dbg !4629 {
entry:
  call void @llvm.dbg.value(metadata i32 %goto_loc, metadata !4633, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4635, metadata !DIExpression()), !dbg !4636
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4637
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4637
  %call = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %0, %union.tree_node* null) #6, !dbg !4639
  %tobool = icmp eq i8 %call, 0, !dbg !4639
  br i1 %tobool, label %if.else, label %if.then, !dbg !4640

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %goto_loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.260, i64 0, i64 0)) #6, !dbg !4641
  br label %if.end, !dbg !4641

if.else:                                          ; preds = %entry
  %call1 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %goto_loc, i32 119, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.261, i64 0, i64 0)) #6, !dbg !4642
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4643
  %1 = load i32, i32* %locus, align 8, !dbg !4643
  tail call void (i32, i8*, ...) @inform(i32 %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), %union.tree_node* %label) #6, !dbg !4644
  %locus3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4645
  %2 = load i32, i32* %locus3, align 8, !dbg !4645
  tail call void (i32, i8*, ...) @inform(i32 %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !4646
  ret void, !dbg !4647
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @declare_label(%union.tree_node* %name) local_unnamed_addr #5 !dbg !4648 {
entry:
  %label_vars = alloca %struct.c_label_vars*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4650, metadata !DIExpression()), !dbg !4654
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4655
  %0 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !4655
  %1 = load %struct.c_binding*, %struct.c_binding** %0, align 8, !dbg !4655
  call void @llvm.dbg.value(metadata %struct.c_binding* %1, metadata !4651, metadata !DIExpression()), !dbg !4654
  %2 = bitcast %struct.c_label_vars** %label_vars to i8*, !dbg !4656
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4656
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !4657
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4659

land.lhs.true:                                    ; preds = %entry
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 5, !dbg !4660
  %bf.load = load i32, i32* %depth, align 8, !dbg !4660
  %3 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4660
  %depth1 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %3, i64 0, i32 5, !dbg !4660
  %4 = bitcast i40* %depth1 to i64*, !dbg !4660
  %bf.load2 = load i64, i64* %4, align 8, !dbg !4660
  %5 = trunc i64 %bf.load2 to i32, !dbg !4660
  %6 = xor i32 %bf.load, %5, !dbg !4660
  %7 = and i32 %6, 268435455, !dbg !4660
  %cmp = icmp eq i32 %7, 0, !dbg !4660
  br i1 %cmp, label %if.then, label %if.end, !dbg !4661

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !4662
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !4664
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4664
  tail call fastcc void @locate_old_decl(%union.tree_node* %8) #7, !dbg !4665
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4666
  br label %cleanup, !dbg !4667

if.end:                                           ; preds = %entry, %land.lhs.true
  %10 = load i32, i32* @input_location, align 4, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.c_label_vars** %label_vars, metadata !4653, metadata !DIExpression(DW_OP_deref)), !dbg !4654
  %call = call fastcc %union.tree_node* @make_label(i32 %10, %union.tree_node* %name, i8 zeroext 0, %struct.c_label_vars** nonnull %label_vars) #7, !dbg !4669
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4652, metadata !DIExpression()), !dbg !4654
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4670
  %bf.load5 = load i64, i64* %11, align 8, !dbg !4671
  %bf.set = or i64 %bf.load5, 17179869184, !dbg !4671
  store i64 %bf.set, i64* %11, align 8, !dbg !4671
  %12 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !4672
  %13 = load %struct.c_label_vars*, %struct.c_label_vars** %label_vars, align 8, !dbg !4673
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %13, metadata !4653, metadata !DIExpression()), !dbg !4654
  call fastcc void @bind_label(%union.tree_node* %name, %union.tree_node* %call, %struct.c_scope* %12, %struct.c_label_vars* %13) #7, !dbg !4674
  br label %cleanup, !dbg !4675

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %9, %if.then ], [ %call, %if.end ], !dbg !4654
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4676
  ret %union.tree_node* %retval.0, !dbg !4676
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @define_label(i32 %location, %union.tree_node* %name) local_unnamed_addr #5 !dbg !4677 {
entry:
  %label_vars20 = alloca %struct.c_label_vars*, align 8
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %location, metadata !4679, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4680, metadata !DIExpression()), !dbg !4688
  %label_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4689
  %0 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !4689
  %1 = load %struct.c_binding*, %struct.c_binding** %0, align 8, !dbg !4689
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !4689
  %2 = bitcast %struct.c_binding* %1 to %struct.c_label_vars**, !dbg !4689
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4689

cond.true:                                        ; preds = %entry
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !4689
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4689
  br label %cond.end, !dbg !4689

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %3, %cond.true ], [ null, %entry ], !dbg !4689
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4681, metadata !DIExpression()), !dbg !4688
  %cond1 = icmp eq %union.tree_node* %cond, null, !dbg !4690
  br i1 %cond1, label %if.else19, label %land.lhs.true, !dbg !4690

land.lhs.true:                                    ; preds = %cond.end
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4691
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !4691
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4692
  %cmp = icmp eq %union.tree_node* %4, %5, !dbg !4693
  br i1 %cmp, label %land.lhs.true3, label %lor.lhs.false, !dbg !4694

land.lhs.true3:                                   ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4695
  %6 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4695
  %cmp4 = icmp eq %union.tree_node* %6, null, !dbg !4696
  br i1 %cmp4, label %lor.lhs.false, label %if.then, !dbg !4697

lor.lhs.false:                                    ; preds = %land.lhs.true3, %land.lhs.true
  br i1 %cmp, label %if.else, label %land.lhs.true8, !dbg !4698

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4699
  %bf.load = load i64, i64* %7, align 8, !dbg !4699
  %bf.cast2 = and i64 %bf.load, 17179869184, !dbg !4699
  %tobool9 = icmp eq i64 %bf.cast2, 0, !dbg !4699
  br i1 %tobool9, label %if.else, label %if.then, !dbg !4700

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true8
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), %union.tree_node* nonnull %cond) #6, !dbg !4701
  tail call fastcc void @locate_old_decl(%union.tree_node* nonnull %cond) #7, !dbg !4703
  br label %cleanup, !dbg !4704

if.else:                                          ; preds = %land.lhs.true8, %lor.lhs.false
  br i1 %cmp, label %if.then15, label %if.else19, !dbg !4705

if.then15:                                        ; preds = %if.else
  %8 = load %struct.c_label_vars*, %struct.c_label_vars** %2, align 8, !dbg !4706
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %8, metadata !4682, metadata !DIExpression()), !dbg !4707
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4708
  store i32 %location, i32* %locus, align 8, !dbg !4709
  %label_bindings = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %8, i64 0, i32 1, !dbg !4710
  tail call fastcc void @set_spot_bindings(%struct.c_spot_bindings* nonnull %label_bindings, i8 zeroext 1) #7, !dbg !4711
  tail call fastcc void @check_earlier_gotos(%union.tree_node* nonnull %cond, %struct.c_label_vars* %8) #7, !dbg !4712
  br label %if.end21, !dbg !4713

if.else19:                                        ; preds = %cond.end, %if.else
  %9 = bitcast %struct.c_label_vars** %label_vars20 to i8*, !dbg !4714
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4714
  call void @llvm.dbg.value(metadata %struct.c_label_vars** %label_vars20, metadata !4686, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  %call = call fastcc %union.tree_node* @make_label(i32 %location, %union.tree_node* %name, i8 zeroext 1, %struct.c_label_vars** nonnull %label_vars20) #7, !dbg !4716
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4681, metadata !DIExpression()), !dbg !4688
  %10 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !4717
  %11 = load %struct.c_label_vars*, %struct.c_label_vars** %label_vars20, align 8, !dbg !4718
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %11, metadata !4686, metadata !DIExpression()), !dbg !4715
  call fastcc void @bind_label(%union.tree_node* %name, %union.tree_node* %call, %struct.c_scope* %10, %struct.c_label_vars* %11) #7, !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4720
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %if.else19
  %label.0 = phi %union.tree_node* [ %cond, %if.then15 ], [ %call, %if.else19 ], !dbg !4688
  call void @llvm.dbg.value(metadata %union.tree_node* %label.0, metadata !4681, metadata !DIExpression()), !dbg !4688
  %12 = load i32, i32* @input_location, align 4, !dbg !4721
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %12) #6, !dbg !4721
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !4721
  %13 = load i8, i8* %sysp, align 8, !dbg !4721
  %cmp22 = icmp eq i8 %13, 0, !dbg !4721
  br i1 %cmp22, label %land.lhs.true24, label %if.end29, !dbg !4723

land.lhs.true24:                                  ; preds = %if.end21
  %call25 = call %union.tree_node* @lookup_name(%union.tree_node* %name) #7, !dbg !4724
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !4724
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !4725

if.then27:                                        ; preds = %land.lhs.true24
  %call28 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 202, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !4726
  br label %if.end29, !dbg !4726

if.end29:                                         ; preds = %land.lhs.true24, %if.end21, %if.then27
  %14 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4727
  %initial31 = getelementptr inbounds %union.tree_node, %union.tree_node* %label.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4728
  %15 = bitcast %union.tree_node** %initial31 to i64*, !dbg !4729
  store i64 %14, i64* %15, align 8, !dbg !4729
  br label %cleanup, !dbg !4730

cleanup:                                          ; preds = %if.end29, %if.then
  %retval.0 = phi %union.tree_node* [ null, %if.then ], [ %label.0, %if.end29 ], !dbg !4688
  ret %union.tree_node* %retval.0, !dbg !4731
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_earlier_gotos(%union.tree_node* %label, %struct.c_label_vars* %label_vars) unnamed_addr #5 !dbg !4732 {
entry:
  %g = alloca %struct.c_goto_bindings*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !4736, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata %struct.c_label_vars* %label_vars, metadata !4737, metadata !DIExpression()), !dbg !4745
  %0 = bitcast %struct.c_goto_bindings** %g to i8*, !dbg !4746
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4746
  call void @llvm.dbg.value(metadata i32 0, metadata !4738, metadata !DIExpression()), !dbg !4745
  %gotos = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %label_vars, i64 0, i32 3, !dbg !4747
  %scope10 = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %label_vars, i64 0, i32 1, i32 0, !dbg !4748
  %bindings_in_scope26 = getelementptr inbounds %struct.c_label_vars, %struct.c_label_vars* %label_vars, i64 0, i32 1, i32 1, !dbg !4750
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4754
  br label %for.cond, !dbg !4757

for.cond:                                         ; preds = %for.inc49, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc49 ], !dbg !4758
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !4738, metadata !DIExpression()), !dbg !4745
  %1 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !4759
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_gc* %1, null, !dbg !4759
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4759

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %1, i64 0, i32 0, !dbg !4759
  br label %cond.end, !dbg !4759

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4759
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %g, metadata !4739, metadata !DIExpression(DW_OP_deref)), !dbg !4745
  %call = call fastcc i32 @VEC_c_goto_bindings_p_base_iterate(%struct.VEC_c_goto_bindings_p_base* %cond, i32 %ix.0, %struct.c_goto_bindings** nonnull %g) #7, !dbg !4759
  %tobool2 = icmp eq i32 %call, 0, !dbg !4760
  br i1 %tobool2, label %for.end50, label %for.body, !dbg !4760

for.body:                                         ; preds = %cond.end
  %2 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !4761
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %2, metadata !4739, metadata !DIExpression()), !dbg !4745
  %scope3 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %2, i64 0, i32 1, i32 0, !dbg !4763
  %3 = load %struct.c_scope*, %struct.c_scope** %scope3, align 8, !dbg !4763
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %3, i64 0, i32 2, !dbg !4764
  br label %for.cond4, !dbg !4765

for.cond4:                                        ; preds = %for.inc, %for.body
  %4 = phi %struct.c_goto_bindings* [ %2, %for.body ], [ %.pre, %for.inc ], !dbg !4766
  %b.0.in = phi %struct.c_binding** [ %bindings, %for.body ], [ %prev, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !4768
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !4740, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %4, metadata !4739, metadata !DIExpression()), !dbg !4745
  %bindings_in_scope = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %4, i64 0, i32 1, i32 1, !dbg !4770
  %5 = load %struct.c_binding*, %struct.c_binding** %bindings_in_scope, align 8, !dbg !4770
  %cmp = icmp eq %struct.c_binding* %b.0, %5, !dbg !4771
  br i1 %cmp, label %for.end, label %for.body6, !dbg !4772

for.body6:                                        ; preds = %for.cond4
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !4773
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4773
  %call7 = call fastcc zeroext i8 @decl_jump_unsafe(%union.tree_node* %6) #7, !dbg !4776
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4776
  br i1 %tobool8, label %for.inc, label %if.then, !dbg !4777

if.then:                                          ; preds = %for.body6
  %7 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !4778
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %7, metadata !4739, metadata !DIExpression()), !dbg !4745
  %loc = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %7, i64 0, i32 0, !dbg !4779
  %8 = load i32, i32* %loc, align 8, !dbg !4779
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4780
  call fastcc void @warn_about_goto(i32 %8, %union.tree_node* %label, %union.tree_node* %9) #7, !dbg !4781
  br label %for.inc, !dbg !4781

for.inc:                                          ; preds = %for.body6, %if.then
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !4782
  %.pre = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !4766
  br label %for.cond4, !dbg !4783, !llvm.loop !4784

for.end:                                          ; preds = %for.cond4
  %.lcssa = phi %struct.c_goto_bindings* [ %4, %for.cond4 ], !dbg !4766
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa, metadata !4739, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa, metadata !4739, metadata !DIExpression()), !dbg !4745
  br label %for.cond11, !dbg !4786

for.cond11:                                       ; preds = %for.inc42, %for.end
  %10 = phi %struct.c_goto_bindings* [ %.lcssa, %for.end ], [ %.pre1, %for.inc42 ], !dbg !4787
  %scope.0.in = phi %struct.c_scope** [ %scope10, %for.end ], [ %outer, %for.inc42 ]
  %scope.0 = load %struct.c_scope*, %struct.c_scope** %scope.0.in, align 8, !dbg !4748
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !4744, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %10, metadata !4739, metadata !DIExpression()), !dbg !4745
  %scope13 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %10, i64 0, i32 1, i32 0, !dbg !4788
  %11 = load %struct.c_scope*, %struct.c_scope** %scope13, align 8, !dbg !4788
  %cmp14 = icmp eq %struct.c_scope* %scope.0, %11, !dbg !4789
  br i1 %cmp14, label %for.end43, label %for.body15, !dbg !4790

for.body15:                                       ; preds = %for.cond11
  %cmp16 = icmp eq %struct.c_scope* %scope.0, null, !dbg !4791
  br i1 %cmp16, label %cond.true17, label %cond.end19, !dbg !4791

cond.true17:                                      ; preds = %for.body15
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3170, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4791
  br label %cond.end19, !dbg !4791

cond.end19:                                       ; preds = %for.body15, %cond.true17
  %12 = load %struct.c_scope*, %struct.c_scope** %scope10, align 8, !dbg !4792
  %cmp23 = icmp eq %struct.c_scope* %scope.0, %12, !dbg !4793
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !4794

if.then24:                                        ; preds = %cond.end19
  br label %if.end28, !dbg !4795

if.else:                                          ; preds = %cond.end19
  %bindings27 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 2, !dbg !4796
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then24
  %b.1.in = phi %struct.c_binding** [ %bindings_in_scope26, %if.then24 ], [ %bindings27, %if.else ]
  br label %for.cond29, !dbg !4797

for.cond29:                                       ; preds = %for.inc39, %if.end28
  %b.2.in = phi %struct.c_binding** [ %b.1.in, %if.end28 ], [ %prev40, %for.inc39 ]
  %b.2 = load %struct.c_binding*, %struct.c_binding** %b.2.in, align 8, !dbg !4798
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.2, metadata !4740, metadata !DIExpression()), !dbg !4769
  %cmp30 = icmp eq %struct.c_binding* %b.2, null, !dbg !4799
  br i1 %cmp30, label %for.inc42, label %for.body31, !dbg !4802

for.body31:                                       ; preds = %for.cond29
  %decl32 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.2, i64 0, i32 1, !dbg !4803
  %13 = load %union.tree_node*, %union.tree_node** %decl32, align 8, !dbg !4803
  %call33 = call fastcc zeroext i8 @decl_jump_unsafe(%union.tree_node* %13) #7, !dbg !4806
  %tobool34 = icmp eq i8 %call33, 0, !dbg !4806
  br i1 %tobool34, label %for.inc39, label %if.then35, !dbg !4807

if.then35:                                        ; preds = %for.body31
  %14 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %14, metadata !4739, metadata !DIExpression()), !dbg !4745
  %loc36 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %14, i64 0, i32 0, !dbg !4809
  %15 = load i32, i32* %loc36, align 8, !dbg !4809
  %16 = load %union.tree_node*, %union.tree_node** %decl32, align 8, !dbg !4810
  call fastcc void @warn_about_goto(i32 %15, %union.tree_node* %label, %union.tree_node* %16) #7, !dbg !4811
  br label %for.inc39, !dbg !4811

for.inc39:                                        ; preds = %for.body31, %if.then35
  %prev40 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.2, i64 0, i32 3, !dbg !4812
  br label %for.cond29, !dbg !4813, !llvm.loop !4814

for.inc42:                                        ; preds = %for.cond29
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 0, !dbg !4816
  %.pre1 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %g, align 8, !dbg !4787
  br label %for.cond11, !dbg !4817, !llvm.loop !4818

for.end43:                                        ; preds = %for.cond11
  %.lcssa3 = phi %struct.c_goto_bindings* [ %10, %for.cond11 ], !dbg !4787
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa3, metadata !4739, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa3, metadata !4739, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa3, metadata !4739, metadata !DIExpression()), !dbg !4745
  %stmt_exprs = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %.lcssa3, i64 0, i32 1, i32 2, !dbg !4820
  %17 = load i32, i32* %stmt_exprs, align 8, !dbg !4820
  %cmp45 = icmp sgt i32 %17, 0, !dbg !4821
  br i1 %cmp45, label %if.then46, label %for.inc49, !dbg !4822

if.then46:                                        ; preds = %for.end43
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %.lcssa3, metadata !4739, metadata !DIExpression()), !dbg !4745
  %loc47 = getelementptr inbounds %struct.c_goto_bindings, %struct.c_goto_bindings* %.lcssa3, i64 0, i32 0, !dbg !4823
  %18 = load i32, i32* %loc47, align 8, !dbg !4823
  call void (i32, i8*, ...) @error_at(i32 %18, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4824
  %19 = load i32, i32* %locus, align 8, !dbg !4825
  call void (i32, i8*, ...) @inform(i32 %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), %union.tree_node* %label) #6, !dbg !4826
  br label %for.inc49, !dbg !4827

for.inc49:                                        ; preds = %for.end43, %if.then46
  %inc = add i32 %ix.0, 1, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4738, metadata !DIExpression()), !dbg !4745
  br label %for.cond, !dbg !4829, !llvm.loop !4830

for.end50:                                        ; preds = %cond.end
  %20 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !4832
  %tobool52 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %20, null, !dbg !4832
  br i1 %tobool52, label %cond.end57, label %cond.true53, !dbg !4832

cond.true53:                                      ; preds = %for.end50
  %base55 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %20, i64 0, i32 0, !dbg !4832
  br label %cond.end57, !dbg !4832

cond.end57:                                       ; preds = %for.end50, %cond.true53
  %cond58 = phi %struct.VEC_c_goto_bindings_p_base* [ %base55, %cond.true53 ], [ null, %for.end50 ], !dbg !4832
  call fastcc void @VEC_c_goto_bindings_p_base_truncate(%struct.VEC_c_goto_bindings_p_base* %cond58, i32 0) #7, !dbg !4832
  store %struct.VEC_c_goto_bindings_p_gc* null, %struct.VEC_c_goto_bindings_p_gc** %gotos, align 8, !dbg !4833
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4834
  ret void, !dbg !4834
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lookup_name(%union.tree_node* %name) local_unnamed_addr #5 !dbg !4835 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4837, metadata !DIExpression()), !dbg !4839
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4840
  %0 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !4840
  %1 = load %struct.c_binding*, %struct.c_binding** %0, align 8, !dbg !4840
  call void @llvm.dbg.value(metadata %struct.c_binding* %1, metadata !4838, metadata !DIExpression()), !dbg !4839
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !4841
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !4843

land.lhs.true:                                    ; preds = %entry
  %invisible = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 5, !dbg !4844
  %bf.load = load i32, i32* %invisible, align 8, !dbg !4844
  %bf.clear = and i32 %bf.load, 268435456, !dbg !4844
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !4845
  br i1 %tobool1, label %if.then, label %cleanup, !dbg !4846

if.then:                                          ; preds = %land.lhs.true
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !4847
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4847
  br label %cleanup, !dbg !4848

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4839
  ret %union.tree_node* %retval.0, !dbg !4849
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_spot_bindings* @c_get_switch_bindings() local_unnamed_addr #5 !dbg !4850 {
entry:
  %call = tail call i8* @xmalloc(i64 24) #6, !dbg !4855
  %0 = bitcast i8* %call to %struct.c_spot_bindings*, !dbg !4855
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %0, metadata !4854, metadata !DIExpression()), !dbg !4856
  tail call fastcc void @set_spot_bindings(%struct.c_spot_bindings* %0, i8 zeroext 1) #7, !dbg !4857
  ret %struct.c_spot_bindings* %0, !dbg !4858
}

declare dso_local i8* @xmalloc(i64) #2

; Function Attrs: nounwind uwtable
define dso_local void @c_release_switch_bindings(%struct.c_spot_bindings* %bindings) local_unnamed_addr #5 !dbg !4859 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %bindings, metadata !4861, metadata !DIExpression()), !dbg !4862
  %stmt_exprs = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %bindings, i64 0, i32 2, !dbg !4863
  %0 = load i32, i32* %stmt_exprs, align 8, !dbg !4863
  %cmp = icmp eq i32 %0, 0, !dbg !4863
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !4863

land.lhs.true:                                    ; preds = %entry
  %left_stmt_expr = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %bindings, i64 0, i32 3, !dbg !4863
  %1 = load i8, i8* %left_stmt_expr, align 4, !dbg !4863
  %tobool = icmp eq i8 %1, 0, !dbg !4863
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4863

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3271, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4863
  br label %cond.end, !dbg !4863

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %2 = bitcast %struct.c_spot_bindings* %bindings to i8*, !dbg !4864
  tail call void @free(i8* %2) #6, !dbg !4864
  ret void, !dbg !4865
}

declare dso_local void @free(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_check_switch_jump_warnings(%struct.c_spot_bindings* %switch_bindings, i32 %switch_loc, i32 %case_loc) local_unnamed_addr #5 !dbg !4866 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %switch_bindings, metadata !4870, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i32 %switch_loc, metadata !4871, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i32 %case_loc, metadata !4872, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 0, metadata !4873, metadata !DIExpression()), !dbg !4879
  %scope1 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %switch_bindings, i64 0, i32 0, !dbg !4880
  br label %for.cond, !dbg !4881

for.cond:                                         ; preds = %for.inc14, %entry
  %saw_error.0 = phi i8 [ 0, %entry ], [ %saw_error.1.lcssa, %for.inc14 ], !dbg !4882
  %scope.0.in = phi %struct.c_scope** [ @current_scope, %entry ], [ %outer, %for.inc14 ]
  %scope.0 = load %struct.c_scope*, %struct.c_scope** %scope.0.in, align 8, !dbg !4883
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope.0, metadata !4874, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.0, metadata !4873, metadata !DIExpression()), !dbg !4879
  %0 = load %struct.c_scope*, %struct.c_scope** %scope1, align 8, !dbg !4884
  %cmp = icmp eq %struct.c_scope* %scope.0, %0, !dbg !4885
  br i1 %cmp, label %for.end15, label %for.body, !dbg !4886

for.body:                                         ; preds = %for.cond
  %cmp2 = icmp eq %struct.c_scope* %scope.0, null, !dbg !4887
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !4887

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3293, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4887
  br label %cond.end, !dbg !4887

cond.end:                                         ; preds = %for.body, %cond.true
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 2, !dbg !4888
  br label %for.cond3, !dbg !4890

for.cond3:                                        ; preds = %for.inc, %cond.end
  %saw_error.1 = phi i8 [ %saw_error.0, %cond.end ], [ %saw_error.3, %for.inc ], !dbg !4879
  %b.0.in = phi %struct.c_binding** [ %bindings, %cond.end ], [ %prev, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !4875, metadata !DIExpression()), !dbg !4892
  call void @llvm.dbg.value(metadata i8 %saw_error.1, metadata !4873, metadata !DIExpression()), !dbg !4879
  %cmp4 = icmp eq %struct.c_binding* %b.0, null, !dbg !4893
  br i1 %cmp4, label %for.inc14, label %for.body5, !dbg !4895

for.body5:                                        ; preds = %for.cond3
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !4896
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4896
  %call = tail call fastcc zeroext i8 @decl_jump_unsafe(%union.tree_node* %1) #7, !dbg !4899
  %tobool = icmp eq i8 %call, 0, !dbg !4899
  br i1 %tobool, label %for.inc, label %if.then, !dbg !4900

if.then:                                          ; preds = %for.body5
  %2 = bitcast %union.tree_node** %decl to %struct.tree_common**, !dbg !4901
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !4901
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !4901
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4901
  %call7 = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %4, %union.tree_node* null) #6, !dbg !4904
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4904
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !4905

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata i8 1, metadata !4873, metadata !DIExpression()), !dbg !4879
  tail call void (i32, i8*, ...) @error_at(i32 %case_loc, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4906
  br label %if.end, !dbg !4908

if.else:                                          ; preds = %if.then
  %call10 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %case_loc, i32 119, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4909
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %saw_error.2 = phi i8 [ 1, %if.then9 ], [ %saw_error.1, %if.else ], !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.2, metadata !4873, metadata !DIExpression()), !dbg !4879
  tail call void (i32, i8*, ...) @inform(i32 %switch_loc, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4910
  %5 = bitcast %union.tree_node** %decl to %struct.tree_decl_minimal**, !dbg !4911
  %6 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %5, align 8, !dbg !4911
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %6, i64 0, i32 1, !dbg !4911
  %7 = load i32, i32* %locus, align 8, !dbg !4911
  tail call void (i32, i8*, ...) @inform(i32 %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), %struct.tree_decl_minimal* %6) #6, !dbg !4912
  br label %for.inc, !dbg !4913

for.inc:                                          ; preds = %for.body5, %if.end
  %saw_error.3 = phi i8 [ %saw_error.2, %if.end ], [ %saw_error.1, %for.body5 ], !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.3, metadata !4873, metadata !DIExpression()), !dbg !4879
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !4914
  br label %for.cond3, !dbg !4915, !llvm.loop !4916

for.inc14:                                        ; preds = %for.cond3
  %saw_error.1.lcssa = phi i8 [ %saw_error.1, %for.cond3 ], !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.1.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.1.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.1.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope.0, i64 0, i32 0, !dbg !4918
  br label %for.cond, !dbg !4919, !llvm.loop !4920

for.end15:                                        ; preds = %for.cond
  %saw_error.0.lcssa = phi i8 [ %saw_error.0, %for.cond ], !dbg !4882
  call void @llvm.dbg.value(metadata i8 %saw_error.0.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.0.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.0.lcssa, metadata !4873, metadata !DIExpression()), !dbg !4879
  %stmt_exprs = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %switch_bindings, i64 0, i32 2, !dbg !4922
  %8 = load i32, i32* %stmt_exprs, align 8, !dbg !4922
  %cmp16 = icmp sgt i32 %8, 0, !dbg !4924
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4925

if.then17:                                        ; preds = %for.end15
  call void @llvm.dbg.value(metadata i8 1, metadata !4873, metadata !DIExpression()), !dbg !4879
  tail call void (i32, i8*, ...) @error_at(i32 %case_loc, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4926
  tail call void (i32, i8*, ...) @inform(i32 %switch_loc, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4928
  br label %if.end18, !dbg !4929

if.end18:                                         ; preds = %if.then17, %for.end15
  %saw_error.4 = phi i8 [ 1, %if.then17 ], [ %saw_error.0.lcssa, %for.end15 ], !dbg !4879
  call void @llvm.dbg.value(metadata i8 %saw_error.4, metadata !4873, metadata !DIExpression()), !dbg !4879
  ret i8 %saw_error.4, !dbg !4930
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @decl_jump_unsafe(%union.tree_node* %decl) unnamed_addr #5 !dbg !4931 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4935, metadata !DIExpression()), !dbg !4936
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4937
  %cmp = icmp eq %union.tree_node* %0, %decl, !dbg !4939
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !4940

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4941
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4941
  %cmp1 = icmp eq %union.tree_node* %1, %0, !dbg !4942
  br i1 %cmp1, label %return, label %if.end, !dbg !4943

if.end:                                           ; preds = %lor.lhs.false
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4944
  %bf.load = load i64, i64* %2, align 8, !dbg !4944
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4946
  %cmp2 = icmp eq i64 %bf.cast1, 32, !dbg !4946
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false3, !dbg !4947

lor.lhs.false3:                                   ; preds = %if.end
  %cmp8 = icmp eq i64 %bf.cast1, 35, !dbg !4948
  br i1 %cmp8, label %land.lhs.true, label %if.end12, !dbg !4949

land.lhs.true:                                    ; preds = %lor.lhs.false3, %if.end
  %call = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %1, %union.tree_node* null) #6, !dbg !4950
  %tobool = icmp eq i8 %call, 0, !dbg !4950
  br i1 %tobool, label %if.end12, label %return, !dbg !4951

if.end12:                                         ; preds = %land.lhs.true, %lor.lhs.false3
  %3 = load i32, i32* @warn_jump_misses_init, align 4, !dbg !4952
  %tobool13 = icmp eq i32 %3, 0, !dbg !4952
  br i1 %tobool13, label %if.end31, label %land.lhs.true14, !dbg !4954

land.lhs.true14:                                  ; preds = %if.end12
  %bf.load16 = load i64, i64* %2, align 8, !dbg !4955
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !4956
  %cmp19 = icmp eq i64 %bf.cast183, 32, !dbg !4956
  br i1 %cmp19, label %land.lhs.true21, label %if.end31, !dbg !4957

land.lhs.true21:                                  ; preds = %land.lhs.true14
  %bf.cast254 = and i64 %bf.load16, 67108864, !dbg !4958
  %tobool26 = icmp eq i64 %bf.cast254, 0, !dbg !4958
  br i1 %tobool26, label %land.lhs.true27, label %if.end31, !dbg !4959

land.lhs.true27:                                  ; preds = %land.lhs.true21
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4960
  %4 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4960
  %cmp28 = icmp eq %union.tree_node* %4, null, !dbg !4961
  br i1 %cmp28, label %if.end31, label %return, !dbg !4962

if.end31:                                         ; preds = %land.lhs.true27, %land.lhs.true21, %if.end12, %land.lhs.true14
  br label %return, !dbg !4963

return:                                           ; preds = %land.lhs.true, %land.lhs.true27, %entry, %lor.lhs.false, %if.end31
  %retval.0 = phi i8 [ 0, %if.end31 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true27 ], !dbg !4936
  ret i8 %retval.0, !dbg !4964
}

declare dso_local zeroext i8 @variably_modified_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @pending_xref_error() local_unnamed_addr #5 !dbg !4965 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @pending_invalid_xref, align 8, !dbg !4966
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !4968
  br i1 %cmp, label %if.end, label %if.then, !dbg !4969

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @pending_invalid_xref_location, align 4, !dbg !4970
  tail call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), %union.tree_node* nonnull %0) #6, !dbg !4971
  br label %if.end, !dbg !4971

if.end:                                           ; preds = %entry, %if.then
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !dbg !4972
  ret void, !dbg !4973
}

; Function Attrs: nounwind uwtable
define dso_local void @c_init_decl_processing() local_unnamed_addr #5 !dbg !4974 {
entry:
  %0 = load i32, i32* @input_location, align 4, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %0, metadata !4976, metadata !DIExpression()), !dbg !4978
  tail call void @c_parse_init() #6, !dbg !4979
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !4980
  %call = tail call i32 @_obstack_begin(%struct.obstack* nonnull @parser_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !4981
  tail call void @push_scope() #7, !dbg !4982
  %1 = load i64, i64* bitcast (%struct.c_scope** @current_scope to i64*), align 8, !dbg !4983
  store i64 %1, i64* bitcast (%struct.c_scope** @external_scope to i64*), align 8, !dbg !4984
  store i32 1, i32* @input_location, align 4, !dbg !4985
  %2 = load i32, i32* @flag_signed_char, align 4, !dbg !4986
  %conv = trunc i32 %2 to i8, !dbg !4986
  tail call void @build_common_tree_nodes(i8 zeroext %conv, i8 zeroext 0) #6, !dbg !4987
  tail call void @c_common_nodes_and_builtins() #6, !dbg !4988
  %3 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !4989
  store i64 %3, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 45) to i64*), align 8, !dbg !4990
  %4 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !4991
  store i64 %4, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46) to i64*), align 16, !dbg !4992
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !4993
  store i64 %5, i64* bitcast (%union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47) to i64*), align 8, !dbg !4994
  %call1 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4995
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4995
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call1, %union.tree_node* %6) #6, !dbg !4995
  %call3 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call2) #7, !dbg !4996
  store i32 %0, i32* @input_location, align 4, !dbg !4997
  store i32 1, i32* @pedantic_lvalues, align 4, !dbg !4998
  store %union.tree_node* (i32, %union.tree_node*, i32)* @c_make_fname_decl, %union.tree_node* (i32, %union.tree_node*, i32)** @make_fname_decl, align 8, !dbg !4999
  tail call void @start_fname_decls() #6, !dbg !5000
  ret void, !dbg !5001
}

declare dso_local void @c_parse_init() local_unnamed_addr #2

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local void @build_common_tree_nodes(i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare dso_local void @c_common_nodes_and_builtins() local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @c_make_fname_decl(i32 %loc, %union.tree_node* %id, i32 %type_dep) #5 !dbg !5002 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5006, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !5007, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 %type_dep, metadata !5008, metadata !DIExpression()), !dbg !5014
  %call = tail call i8* @fname_as_string(i32 %type_dep) #6, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %call, metadata !5009, metadata !DIExpression()), !dbg !5014
  %call1 = tail call i64 @strlen(i8* %call) #6, !dbg !5016
  call void @llvm.dbg.value(metadata i64 %call1, metadata !5013, metadata !DIExpression()), !dbg !5014
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !5017
  %call2 = tail call %union.tree_node* @size_int_kind(i64 %call1, i32 0) #6, !dbg !5018
  %call3 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call2) #6, !dbg !5019
  %call4 = tail call %union.tree_node* @build_array_type(%union.tree_node* %0, %union.tree_node* %call3) #6, !dbg !5020
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5011, metadata !DIExpression()), !dbg !5014
  %call5 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call4, i32 1) #6, !dbg !5021
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5011, metadata !DIExpression()), !dbg !5014
  %call6 = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 32, %union.tree_node* %id, %union.tree_node* %call5) #6, !dbg !5022
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5010, metadata !DIExpression()), !dbg !5014
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5023
  %bf.load = load i64, i64* %1, align 8, !dbg !5024
  %bf.set10 = or i64 %bf.load, 68157440, !dbg !5025
  store i64 %bf.set10, i64* %1, align 8, !dbg !5025
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5026
  %2 = bitcast i40* %artificial_flag to i64*, !dbg !5026
  %bf.load11 = load i64, i64* %2, align 8, !dbg !5027
  %bf.set13 = or i64 %bf.load11, 4096, !dbg !5027
  store i64 %bf.set13, i64* %2, align 8, !dbg !5027
  %3 = trunc i64 %call1 to i32, !dbg !5028
  %conv = add i32 %3, 1, !dbg !5028
  %call14 = tail call %union.tree_node* @build_string(i32 %conv, i8* %call) #6, !dbg !5029
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5012, metadata !DIExpression()), !dbg !5014
  tail call void @free(i8* %call) #6, !dbg !5030
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5031
  store %union.tree_node* %call5, %union.tree_node** %type15, align 8, !dbg !5032
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5033
  store %union.tree_node* %call14, %union.tree_node** %initial, align 8, !dbg !5034
  %bf.load18 = load i64, i64* %1, align 8, !dbg !5035
  %bf.set20 = or i64 %bf.load18, 16777216, !dbg !5035
  store i64 %bf.set20, i64* %1, align 8, !dbg !5035
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5036
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !5036
  %5 = ptrtoint %union.tree_node* %4 to i64, !dbg !5038
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5038

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !5039
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %6, i64 0, i32 1, i64 4, !dbg !5039
  %7 = load i32, i32* %arrayidx, align 8, !dbg !5039
  %tobool21 = icmp eq i32 %7, 0, !dbg !5039
  %8 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !5040
  %tobool22 = icmp ne %struct.c_scope* %8, null, !dbg !5040
  %or.cond = or i1 %tobool21, %tobool22, !dbg !5041
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5041

if.then:                                          ; preds = %land.lhs.true
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5042
  %9 = bitcast %union.tree_node** %context to i64*, !dbg !5044
  store i64 %5, i64* %9, align 8, !dbg !5044
  tail call fastcc void @bind(%union.tree_node* %id, %union.tree_node* %call6, %struct.c_scope* %8, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !5045
  br label %if.end, !dbg !5046

if.end:                                           ; preds = %entry, %land.lhs.true, %if.then
  tail call void @finish_decl(%union.tree_node* %call6, i32 %loc, %union.tree_node* %call14, %union.tree_node* null, %union.tree_node* null) #7, !dbg !5047
  ret %union.tree_node* %call6, !dbg !5048
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_builtin_function(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !5049 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5051, metadata !DIExpression()), !dbg !5055
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5056
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !5056
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !5056
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5057
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5057
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5053, metadata !DIExpression()), !dbg !5055
  %id3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5058
  %str = bitcast i32* %id3 to i8**, !dbg !5058
  %3 = load i8*, i8** %str, align 8, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %3, metadata !5054, metadata !DIExpression()), !dbg !5055
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !5059
  %4 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !5059
  %cmp = icmp ne %union.tree_node* %4, null, !dbg !5060
  %lang_flag_6 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5061
  %5 = bitcast i40* %lang_flag_6 to i64*, !dbg !5061
  %6 = zext i1 %cmp to i64, !dbg !5062
  %bf.load = load i64, i64* %5, align 8, !dbg !5062
  %bf.shl = shl nuw nsw i64 %6, 21, !dbg !5062
  %bf.clear = and i64 %bf.load, -2097153, !dbg !5062
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !5062
  store i64 %bf.set, i64* %5, align 8, !dbg !5062
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5063
  %7 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !5063
  %8 = load %struct.c_binding*, %struct.c_binding** %7, align 8, !dbg !5063
  %tobool = icmp eq %struct.c_binding* %8, null, !dbg !5063
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5063

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5063
  br label %cond.end, !dbg !5063

cond.end:                                         ; preds = %entry, %cond.true
  %9 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !5064
  tail call fastcc void @bind(%union.tree_node* %2, %union.tree_node* %decl, %struct.c_scope* %9, i8 zeroext 1, i8 zeroext 0, i32 0) #7, !dbg !5065
  %10 = load i8, i8* %3, align 1, !dbg !5066
  %cmp6 = icmp eq i8 %10, 95, !dbg !5068
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !5069

land.lhs.true:                                    ; preds = %cond.end
  %arrayidx8 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5070
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !5070
  %cmp10 = icmp eq i8 %11, 95, !dbg !5071
  br i1 %cmp10, label %if.then, label %lor.lhs.false, !dbg !5072

lor.lhs.false:                                    ; preds = %land.lhs.true
  %idxprom = zext i8 %11 to i64, !dbg !5073
  %arrayidx14 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !5073
  %12 = load i16, i16* %arrayidx14, align 2, !dbg !5073
  %13 = trunc i16 %12 to i8, !dbg !5073
  %tobool17 = icmp slt i8 %13, 0, !dbg !5073
  br i1 %tobool17, label %if.then, label %if.end, !dbg !5074

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %14 = load i64, i64* bitcast (%union.tree_node** @visible_builtins to i64*), align 8, !dbg !5075
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5077
  %15 = bitcast %union.tree_node** %chain to i64*, !dbg !5078
  store i64 %14, i64* %15, align 8, !dbg !5078
  store %union.tree_node* %decl, %union.tree_node** @visible_builtins, align 8, !dbg !5079
  br label %if.end, !dbg !5080

if.end:                                           ; preds = %if.then, %lor.lhs.false, %cond.end
  ret %union.tree_node* %decl, !dbg !5081
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_builtin_function_ext_scope(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !5082 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5084, metadata !DIExpression()), !dbg !5088
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5089
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !5089
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !5089
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5090
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5090
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5086, metadata !DIExpression()), !dbg !5088
  %id3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5091
  %str = bitcast i32* %id3 to i8**, !dbg !5091
  %3 = load i8*, i8** %str, align 8, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %3, metadata !5087, metadata !DIExpression()), !dbg !5088
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !5092
  %4 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !5092
  %cmp = icmp ne %union.tree_node* %4, null, !dbg !5093
  %lang_flag_6 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5094
  %5 = bitcast i40* %lang_flag_6 to i64*, !dbg !5094
  %6 = zext i1 %cmp to i64, !dbg !5095
  %bf.load = load i64, i64* %5, align 8, !dbg !5095
  %bf.shl = shl nuw nsw i64 %6, 21, !dbg !5095
  %bf.clear = and i64 %bf.load, -2097153, !dbg !5095
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !5095
  store i64 %bf.set, i64* %5, align 8, !dbg !5095
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5096
  %7 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !5096
  %8 = load %struct.c_binding*, %struct.c_binding** %7, align 8, !dbg !5096
  %tobool = icmp eq %struct.c_binding* %8, null, !dbg !5096
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5096

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3558, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5096
  br label %cond.end, !dbg !5096

cond.end:                                         ; preds = %entry, %cond.true
  %9 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !5097
  tail call fastcc void @bind(%union.tree_node* %2, %union.tree_node* %decl, %struct.c_scope* %9, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !5098
  %10 = load i8, i8* %3, align 1, !dbg !5099
  %cmp6 = icmp eq i8 %10, 95, !dbg !5101
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !5102

land.lhs.true:                                    ; preds = %cond.end
  %arrayidx8 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5103
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !5103
  %cmp10 = icmp eq i8 %11, 95, !dbg !5104
  br i1 %cmp10, label %if.then, label %lor.lhs.false, !dbg !5105

lor.lhs.false:                                    ; preds = %land.lhs.true
  %idxprom = zext i8 %11 to i64, !dbg !5106
  %arrayidx14 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !5106
  %12 = load i16, i16* %arrayidx14, align 2, !dbg !5106
  %13 = trunc i16 %12 to i8, !dbg !5106
  %tobool17 = icmp slt i8 %13, 0, !dbg !5106
  br i1 %tobool17, label %if.then, label %if.end, !dbg !5107

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %14 = load i64, i64* bitcast (%union.tree_node** @visible_builtins to i64*), align 8, !dbg !5108
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5110
  %15 = bitcast %union.tree_node** %chain to i64*, !dbg !5111
  store i64 %14, i64* %15, align 8, !dbg !5111
  store %union.tree_node* %decl, %union.tree_node** @visible_builtins, align 8, !dbg !5112
  br label %if.end, !dbg !5113

if.end:                                           ; preds = %if.then, %lor.lhs.false, %cond.end
  ret %union.tree_node* %decl, !dbg !5114
}

; Function Attrs: nounwind uwtable
define dso_local void @shadow_tag(%struct.c_declspecs* %declspecs) local_unnamed_addr #5 !dbg !5115 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !5121, metadata !DIExpression()), !dbg !5122
  tail call void @shadow_tag_warned(%struct.c_declspecs* %declspecs, i32 0) #7, !dbg !5123
  ret void, !dbg !5124
}

; Function Attrs: nounwind uwtable
define dso_local void @shadow_tag_warned(%struct.c_declspecs* %declspecs, i32 %warned) local_unnamed_addr #5 !dbg !5125 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  %tmp98 = alloca %struct.expanded_location, align 8
  %tmp139 = alloca %struct.expanded_location, align 8
  %tmp153 = alloca %struct.expanded_location, align 8
  %tmp169 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !5129, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned, metadata !5130, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8 0, metadata !5131, metadata !DIExpression()), !dbg !5140
  %type = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 0, !dbg !5141
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5141
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5142
  br i1 %tobool, label %if.else94, label %land.lhs.true, !dbg !5143

land.lhs.true:                                    ; preds = %entry
  %default_int_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 7, !dbg !5144
  %1 = load i32, i32* %default_int_p, align 4, !dbg !5144
  %tobool1 = icmp eq i32 %1, 0, !dbg !5145
  br i1 %tobool1, label %land.lhs.true2, label %if.else94, !dbg !5146

land.lhs.true2:                                   ; preds = %land.lhs.true
  %typedef_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 6, !dbg !5147
  %bf.load = load i8, i8* %typedef_p, align 8, !dbg !5147
  %bf.clear = and i8 %bf.load, 16, !dbg !5147
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !5148
  br i1 %tobool3, label %if.then, label %if.else94, !dbg !5149

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5132, metadata !DIExpression()), !dbg !5150
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5151
  %bf.load5 = load i64, i64* %2, align 8, !dbg !5151
  %3 = trunc i64 %bf.load5 to i32, !dbg !5151
  %bf.cast7 = and i32 %3, 65535, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %bf.cast7, metadata !5135, metadata !DIExpression()), !dbg !5150
  %trunc = trunc i64 %bf.load5 to i16, !dbg !5152
  switch i16 %trunc, label %if.else83 [
    i16 16, label %if.then11
    i16 17, label %if.then11
    i16 6, label %if.then11
  ], !dbg !5152

if.then11:                                        ; preds = %if.then, %if.then, %if.then
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5153
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5153
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5136, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.value(metadata i8 1, metadata !5131, metadata !DIExpression()), !dbg !5140
  %restrict_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 8, !dbg !5155
  %bf.load14 = load i16, i16* %restrict_p, align 8, !dbg !5155
  %bf.clear16 = and i16 %bf.load14, 1024, !dbg !5155
  %tobool18 = icmp eq i16 %bf.clear16, 0, !dbg !5157
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !5158

if.then19:                                        ; preds = %if.then11
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5159
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end, !dbg !5161

if.end:                                           ; preds = %if.then11, %if.then19
  %warned.addr.0 = phi i32 [ 1, %if.then19 ], [ %warned, %if.then11 ]
  call void @llvm.dbg.value(metadata i32 %warned.addr.0, metadata !5130, metadata !DIExpression()), !dbg !5140
  %cmp20 = icmp eq %union.tree_node* %5, null, !dbg !5162
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !5164

if.then21:                                        ; preds = %if.end
  %cmp22 = icmp ne i32 %warned.addr.0, 1, !dbg !5165
  %cmp24 = icmp ne i32 %bf.cast7, 6, !dbg !5168
  %or.cond = and i1 %cmp22, %cmp24, !dbg !5169
  br i1 %or.cond, label %if.then25, label %if.end113, !dbg !5169

if.then25:                                        ; preds = %if.then21
  %6 = load i32, i32* @input_location, align 4, !dbg !5170
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %6, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !5172
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end113, !dbg !5173

if.else:                                          ; preds = %if.end
  %bf.load27 = load i8, i8* %typedef_p, align 8, !dbg !5174
  %bf.clear29 = and i8 %bf.load27, 32, !dbg !5174
  %tobool31 = icmp eq i8 %bf.clear29, 0, !dbg !5176
  br i1 %tobool31, label %land.lhs.true32, label %if.else39, !dbg !5177

land.lhs.true32:                                  ; preds = %if.else
  %storage_class = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !5178
  %7 = load i32, i32* %storage_class, align 4, !dbg !5178
  %cmp33 = icmp eq i32 %7, 0, !dbg !5179
  br i1 %cmp33, label %if.else39, label %if.then34, !dbg !5180

if.then34:                                        ; preds = %land.lhs.true32
  %cmp35 = icmp eq i32 %warned.addr.0, 1, !dbg !5181
  br i1 %cmp35, label %if.end38, label %if.then36, !dbg !5184

if.then36:                                        ; preds = %if.then34
  %8 = load i32, i32* @input_location, align 4, !dbg !5185
  %call37 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %8, i32 0, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !5186
  br label %if.end38, !dbg !5186

if.end38:                                         ; preds = %if.then34, %if.then36
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  tail call void @pending_xref_error() #7, !dbg !5187
  br label %if.end113, !dbg !5188

if.else39:                                        ; preds = %land.lhs.true32, %if.else
  br i1 %tobool31, label %land.lhs.true46, label %if.else73, !dbg !5189

land.lhs.true46:                                  ; preds = %if.else39
  %bf.load47 = load i16, i16* %restrict_p, align 8, !dbg !5191
  %bf.clear49 = and i16 %bf.load47, 256, !dbg !5191
  %tobool51 = icmp eq i16 %bf.clear49, 0, !dbg !5192
  br i1 %tobool51, label %lor.lhs.false52, label %if.then67, !dbg !5193

lor.lhs.false52:                                  ; preds = %land.lhs.true46
  %bf.clear55 = and i16 %bf.load47, 512, !dbg !5194
  %tobool57 = icmp eq i16 %bf.clear55, 0, !dbg !5195
  br i1 %tobool57, label %lor.lhs.false58, label %if.then67, !dbg !5196

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %bf.clear62 = and i16 %bf.load47, 1024, !dbg !5197
  %tobool64 = icmp eq i16 %bf.clear62, 0, !dbg !5198
  br i1 %tobool64, label %lor.lhs.false65, label %if.then67, !dbg !5199

lor.lhs.false65:                                  ; preds = %lor.lhs.false58
  %address_space = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 9, !dbg !5200
  %9 = load i8, i8* %address_space, align 2, !dbg !5200
  %tobool66 = icmp eq i8 %9, 0, !dbg !5201
  br i1 %tobool66, label %if.else73, label %if.then67, !dbg !5202

if.then67:                                        ; preds = %lor.lhs.false65, %lor.lhs.false58, %lor.lhs.false52, %land.lhs.true46
  %cmp68 = icmp eq i32 %warned.addr.0, 1, !dbg !5203
  br i1 %cmp68, label %if.end72, label %if.then70, !dbg !5206

if.then70:                                        ; preds = %if.then67
  %10 = load i32, i32* @input_location, align 4, !dbg !5207
  %call71 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %10, i32 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5208
  br label %if.end72, !dbg !5208

if.end72:                                         ; preds = %if.then67, %if.then70
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  tail call void @pending_xref_error() #7, !dbg !5209
  br label %if.end113, !dbg !5210

if.else73:                                        ; preds = %lor.lhs.false65, %if.else39
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !dbg !5211
  %call74 = tail call fastcc %union.tree_node* @lookup_tag(i32 %bf.cast7, %union.tree_node* nonnull %5, i32 1, i32* null) #7, !dbg !5213
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !5139, metadata !DIExpression()), !dbg !5154
  %cmp75 = icmp eq %union.tree_node* %call74, null, !dbg !5214
  br i1 %cmp75, label %if.then77, label %if.end113, !dbg !5216

if.then77:                                        ; preds = %if.else73
  %call78 = tail call %union.tree_node* @make_node_stat(i32 %bf.cast7) #6, !dbg !5217
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !5139, metadata !DIExpression()), !dbg !5154
  %11 = load i32, i32* @input_location, align 4, !dbg !5219
  tail call fastcc void @pushtag(i32 %11, %union.tree_node* nonnull %5, %union.tree_node* %call78) #7, !dbg !5220
  br label %if.end113, !dbg !5221

if.else83:                                        ; preds = %if.then
  %cmp84 = icmp eq i32 %warned, 1, !dbg !5222
  br i1 %cmp84, label %if.end113, label %land.lhs.true86, !dbg !5225

land.lhs.true86:                                  ; preds = %if.else83
  %12 = load i32, i32* @input_location, align 4, !dbg !5226
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %12) #6, !dbg !5226
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !5226
  %13 = load i8, i8* %sysp, align 8, !dbg !5226
  %cmp88 = icmp eq i8 %13, 0, !dbg !5226
  br i1 %cmp88, label %if.then90, label %if.end113, !dbg !5227

if.then90:                                        ; preds = %land.lhs.true86
  %14 = load i32, i32* @input_location, align 4, !dbg !5228
  %call91 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %14, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5230
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end113, !dbg !5231

if.else94:                                        ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %cmp95 = icmp eq i32 %warned, 1, !dbg !5232
  br i1 %cmp95, label %if.end113, label %land.lhs.true97, !dbg !5234

land.lhs.true97:                                  ; preds = %if.else94
  %15 = load i32, i32* @input_location, align 4, !dbg !5235
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp98, i32 %15) #6, !dbg !5235
  %sysp99 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp98, i64 0, i32 3, !dbg !5235
  %16 = load i8, i8* %sysp99, align 8, !dbg !5235
  %cmp101 = icmp eq i8 %16, 0, !dbg !5235
  br i1 %cmp101, label %land.lhs.true103, label %if.end113, !dbg !5236

land.lhs.true103:                                 ; preds = %land.lhs.true97
  %typedef_p104 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 6, !dbg !5237
  %bf.load105 = load i8, i8* %typedef_p104, align 8, !dbg !5237
  %bf.clear107 = and i8 %bf.load105, 16, !dbg !5237
  %tobool109 = icmp eq i8 %bf.clear107, 0, !dbg !5238
  br i1 %tobool109, label %if.end113, label %if.then110, !dbg !5239

if.then110:                                       ; preds = %land.lhs.true103
  %17 = load i32, i32* @input_location, align 4, !dbg !5240
  %call111 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %17, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5242
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end113, !dbg !5243

if.end113:                                        ; preds = %land.lhs.true86, %if.else83, %land.lhs.true103, %land.lhs.true97, %if.else94, %if.then110, %if.end38, %if.else73, %if.then77, %if.end72, %if.then21, %if.then25, %if.then90
  %found_tag.1 = phi i8 [ 1, %if.end38 ], [ 1, %if.else73 ], [ 1, %if.then77 ], [ 1, %if.end72 ], [ 1, %if.then21 ], [ 1, %if.then25 ], [ 0, %if.then90 ], [ 0, %land.lhs.true86 ], [ 0, %if.else83 ], [ 0, %if.then110 ], [ 0, %land.lhs.true103 ], [ 0, %land.lhs.true97 ], [ 0, %if.else94 ], !dbg !5140
  %warned.addr.8 = phi i32 [ 1, %if.end38 ], [ %warned.addr.0, %if.else73 ], [ %warned.addr.0, %if.then77 ], [ 1, %if.end72 ], [ %warned.addr.0, %if.then21 ], [ 1, %if.then25 ], [ 1, %if.then90 ], [ %warned, %land.lhs.true86 ], [ 1, %if.else83 ], [ 1, %if.then110 ], [ %warned, %land.lhs.true103 ], [ %warned, %land.lhs.true97 ], [ 1, %if.else94 ]
  call void @llvm.dbg.value(metadata i32 %warned.addr.8, metadata !5130, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8 %found_tag.1, metadata !5131, metadata !DIExpression()), !dbg !5140
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !dbg !5244
  %inline_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 8, !dbg !5245
  %bf.load114 = load i16, i16* %inline_p, align 8, !dbg !5245
  %bf.clear116 = and i16 %bf.load114, 64, !dbg !5245
  %tobool118 = icmp eq i16 %bf.clear116, 0, !dbg !5247
  br i1 %tobool118, label %if.end120, label %if.then119, !dbg !5248

if.then119:                                       ; preds = %if.end113
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !5249
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end120, !dbg !5251

if.end120:                                        ; preds = %if.end113, %if.then119
  %warned.addr.9 = phi i32 [ 1, %if.then119 ], [ %warned.addr.8, %if.end113 ]
  call void @llvm.dbg.value(metadata i32 %warned.addr.9, metadata !5130, metadata !DIExpression()), !dbg !5140
  %18 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5252
  %19 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5254
  %cmp121 = icmp eq %struct.c_scope* %18, %19, !dbg !5255
  br i1 %cmp121, label %land.lhs.true123, label %if.end128, !dbg !5256

land.lhs.true123:                                 ; preds = %if.end120
  %storage_class124 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !5257
  %20 = load i32, i32* %storage_class124, align 4, !dbg !5257
  %cmp125 = icmp eq i32 %20, 1, !dbg !5258
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !5259

if.then127:                                       ; preds = %land.lhs.true123
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !5260
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  %.pre = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5262
  %.pre2 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5264
  br label %if.end128, !dbg !5265

if.end128:                                        ; preds = %if.then127, %land.lhs.true123, %if.end120
  %21 = phi %struct.c_scope* [ %.pre2, %if.then127 ], [ %18, %land.lhs.true123 ], [ %19, %if.end120 ], !dbg !5264
  %22 = phi %struct.c_scope* [ %.pre, %if.then127 ], [ %18, %land.lhs.true123 ], [ %18, %if.end120 ], !dbg !5262
  %warned.addr.10 = phi i32 [ 1, %if.then127 ], [ %warned.addr.9, %land.lhs.true123 ], [ %warned.addr.9, %if.end120 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned.addr.10, metadata !5130, metadata !DIExpression()), !dbg !5140
  %cmp129 = icmp eq %struct.c_scope* %22, %21, !dbg !5266
  br i1 %cmp129, label %land.lhs.true131, label %if.end136, !dbg !5267

land.lhs.true131:                                 ; preds = %if.end128
  %storage_class132 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !5268
  %23 = load i32, i32* %storage_class132, align 4, !dbg !5268
  %cmp133 = icmp eq i32 %23, 3, !dbg !5269
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !5270

if.then135:                                       ; preds = %land.lhs.true131
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5271
  call void @llvm.dbg.value(metadata i32 1, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end136, !dbg !5273

if.end136:                                        ; preds = %if.then135, %land.lhs.true131, %if.end128
  %warned.addr.11 = phi i32 [ 1, %if.then135 ], [ %warned.addr.10, %land.lhs.true131 ], [ %warned.addr.10, %if.end128 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned.addr.11, metadata !5130, metadata !DIExpression()), !dbg !5140
  %tobool137 = icmp eq i32 %warned.addr.11, 0, !dbg !5274
  br i1 %tobool137, label %land.lhs.true138, label %if.end150, !dbg !5276

land.lhs.true138:                                 ; preds = %if.end136
  %24 = load i32, i32* @input_location, align 4, !dbg !5277
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp139, i32 %24) #6, !dbg !5277
  %sysp140 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp139, i64 0, i32 3, !dbg !5277
  %25 = load i8, i8* %sysp140, align 8, !dbg !5277
  %cmp142 = icmp eq i8 %25, 0, !dbg !5277
  br i1 %cmp142, label %land.lhs.true144, label %if.end150, !dbg !5278

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %storage_class145 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !5279
  %26 = load i32, i32* %storage_class145, align 4, !dbg !5279
  %cmp146 = icmp eq i32 %26, 0, !dbg !5280
  br i1 %cmp146, label %if.end150, label %if.then148, !dbg !5281

if.then148:                                       ; preds = %land.lhs.true144
  %call149 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !5282
  call void @llvm.dbg.value(metadata i32 2, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end150, !dbg !5284

if.end150:                                        ; preds = %land.lhs.true144, %land.lhs.true138, %if.end136, %if.then148
  %warned.addr.12 = phi i32 [ %warned.addr.11, %if.end136 ], [ 0, %land.lhs.true138 ], [ 2, %if.then148 ], [ 0, %land.lhs.true144 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned.addr.12, metadata !5130, metadata !DIExpression()), !dbg !5140
  %tobool151 = icmp eq i32 %warned.addr.12, 0, !dbg !5285
  br i1 %tobool151, label %land.lhs.true152, label %if.end166, !dbg !5287

land.lhs.true152:                                 ; preds = %if.end150
  %27 = load i32, i32* @input_location, align 4, !dbg !5288
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp153, i32 %27) #6, !dbg !5288
  %sysp154 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp153, i64 0, i32 3, !dbg !5288
  %28 = load i8, i8* %sysp154, align 8, !dbg !5288
  %cmp156 = icmp eq i8 %28, 0, !dbg !5288
  br i1 %cmp156, label %land.lhs.true158, label %if.end166, !dbg !5289

land.lhs.true158:                                 ; preds = %land.lhs.true152
  %bf.load159 = load i16, i16* %inline_p, align 8, !dbg !5290
  %29 = trunc i16 %bf.load159 to i8, !dbg !5291
  %tobool163 = icmp slt i8 %29, 0, !dbg !5291
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !5292

if.then164:                                       ; preds = %land.lhs.true158
  %call165 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !5293
  call void @llvm.dbg.value(metadata i32 2, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end166, !dbg !5295

if.end166:                                        ; preds = %land.lhs.true152, %if.end150, %if.then164, %land.lhs.true158
  %warned.addr.13 = phi i32 [ %warned.addr.12, %if.end150 ], [ 0, %land.lhs.true152 ], [ 2, %if.then164 ], [ 0, %land.lhs.true158 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned.addr.13, metadata !5130, metadata !DIExpression()), !dbg !5140
  %tobool167 = icmp eq i32 %warned.addr.13, 0, !dbg !5296
  br i1 %tobool167, label %land.lhs.true168, label %if.end201, !dbg !5298

land.lhs.true168:                                 ; preds = %if.end166
  %30 = load i32, i32* @input_location, align 4, !dbg !5299
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp169, i32 %30) #6, !dbg !5299
  %sysp170 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp169, i64 0, i32 3, !dbg !5299
  %31 = load i8, i8* %sysp170, align 8, !dbg !5299
  %cmp172 = icmp eq i8 %31, 0, !dbg !5299
  br i1 %cmp172, label %land.lhs.true174, label %if.end201, !dbg !5300

land.lhs.true174:                                 ; preds = %land.lhs.true168
  %bf.load176 = load i16, i16* %inline_p, align 8, !dbg !5301
  %bf.clear178 = and i16 %bf.load176, 256, !dbg !5301
  %tobool180 = icmp eq i16 %bf.clear178, 0, !dbg !5302
  br i1 %tobool180, label %lor.lhs.false181, label %if.then199, !dbg !5303

lor.lhs.false181:                                 ; preds = %land.lhs.true174
  %bf.clear185 = and i16 %bf.load176, 512, !dbg !5304
  %tobool187 = icmp eq i16 %bf.clear185, 0, !dbg !5305
  br i1 %tobool187, label %lor.lhs.false188, label %if.then199, !dbg !5306

lor.lhs.false188:                                 ; preds = %lor.lhs.false181
  %bf.clear192 = and i16 %bf.load176, 1024, !dbg !5307
  %tobool194 = icmp eq i16 %bf.clear192, 0, !dbg !5308
  br i1 %tobool194, label %lor.lhs.false195, label %if.then199, !dbg !5309

lor.lhs.false195:                                 ; preds = %lor.lhs.false188
  %address_space196 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 9, !dbg !5310
  %32 = load i8, i8* %address_space196, align 2, !dbg !5310
  %tobool198 = icmp eq i8 %32, 0, !dbg !5311
  br i1 %tobool198, label %if.end201, label %if.then199, !dbg !5312

if.then199:                                       ; preds = %lor.lhs.false195, %lor.lhs.false188, %lor.lhs.false181, %land.lhs.true174
  %call200 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !5313
  call void @llvm.dbg.value(metadata i32 2, metadata !5130, metadata !DIExpression()), !dbg !5140
  br label %if.end201, !dbg !5315

if.end201:                                        ; preds = %lor.lhs.false195, %land.lhs.true168, %if.end166, %if.then199
  %warned.addr.14 = phi i32 [ %warned.addr.13, %if.end166 ], [ 0, %land.lhs.true168 ], [ 2, %if.then199 ], [ 0, %lor.lhs.false195 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %warned.addr.14, metadata !5130, metadata !DIExpression()), !dbg !5140
  %cmp202 = icmp eq i32 %warned.addr.14, 1, !dbg !5316
  %tobool205 = icmp ne i8 %found_tag.1, 0, !dbg !5318
  %or.cond1 = or i1 %cmp202, %tobool205, !dbg !5321
  br i1 %or.cond1, label %if.end209, label %if.then206, !dbg !5321

if.then206:                                       ; preds = %if.end201
  %33 = load i32, i32* @input_location, align 4, !dbg !5322
  %call207 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %33, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !5323
  br label %if.end209, !dbg !5323

if.end209:                                        ; preds = %if.end201, %if.then206
  ret void, !dbg !5324
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_tag(i32 %code, %union.tree_node* %name, i32 %thislevel_only, i32* %ploc) unnamed_addr #5 !dbg !5325 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5330, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5331, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %thislevel_only, metadata !5332, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32* %ploc, metadata !5333, metadata !DIExpression()), !dbg !5336
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5337
  %0 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !5337
  %1 = load %struct.c_binding*, %struct.c_binding** %0, align 8, !dbg !5337
  call void @llvm.dbg.value(metadata %struct.c_binding* %1, metadata !5334, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5335, metadata !DIExpression()), !dbg !5336
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !5338
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5340

lor.lhs.false:                                    ; preds = %entry
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !5341
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5341
  %tobool1 = icmp eq %union.tree_node* %2, null, !dbg !5342
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5343
  br i1 %tobool1, label %cleanup, label %if.end, !dbg !5343

if.end:                                           ; preds = %lor.lhs.false
  %tobool2 = icmp eq i32 %thislevel_only, 0, !dbg !5344
  br i1 %tobool2, label %lor.lhs.false3, label %if.then5, !dbg !5346

lor.lhs.false3:                                   ; preds = %if.end
  %bf.load = load i64, i64* %3, align 8, !dbg !5347
  %4 = trunc i64 %bf.load to i32, !dbg !5347
  %bf.cast = and i32 %4, 65535, !dbg !5347
  %cmp = icmp eq i32 %bf.cast, %code, !dbg !5348
  br i1 %cmp, label %if.end21, label %if.then5, !dbg !5349

if.then5:                                         ; preds = %lor.lhs.false3, %if.end
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 5, !dbg !5350
  %bf.load6 = load i32, i32* %depth, align 8, !dbg !5350
  %5 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5350
  %depth8 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %5, i64 0, i32 5, !dbg !5350
  %6 = bitcast i40* %depth8 to i64*, !dbg !5350
  %bf.load9 = load i64, i64* %6, align 8, !dbg !5350
  %7 = trunc i64 %bf.load9 to i32, !dbg !5350
  %8 = xor i32 %bf.load6, %7, !dbg !5350
  %9 = and i32 %8, 268435455, !dbg !5350
  %cmp12 = icmp eq i32 %9, 0, !dbg !5350
  br i1 %cmp12, label %if.then19, label %lor.lhs.false13, !dbg !5353

lor.lhs.false13:                                  ; preds = %if.then5
  %10 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5354
  %cmp14 = icmp eq %struct.c_scope* %5, %10, !dbg !5355
  br i1 %cmp14, label %land.lhs.true, label %if.end21, !dbg !5356

land.lhs.true:                                    ; preds = %lor.lhs.false13
  %bf.clear17 = and i32 %bf.load6, 268435455, !dbg !5357
  %cmp18 = icmp eq i32 %bf.clear17, 0, !dbg !5357
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !5358

if.then19:                                        ; preds = %land.lhs.true, %if.then5
  call void @llvm.dbg.value(metadata i32 1, metadata !5335, metadata !DIExpression()), !dbg !5336
  br label %if.end21, !dbg !5359

if.end21:                                         ; preds = %lor.lhs.false3, %lor.lhs.false13, %land.lhs.true, %if.then19
  %thislevel.1 = phi i1 [ false, %lor.lhs.false3 ], [ true, %if.then19 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false13 ]
  %or.cond = or i1 %tobool2, %thislevel.1, !dbg !5360
  br i1 %or.cond, label %if.end26, label %cleanup, !dbg !5360

if.end26:                                         ; preds = %if.end21
  %bf.load29 = load i64, i64* %3, align 8, !dbg !5362
  %11 = trunc i64 %bf.load29 to i32, !dbg !5362
  %bf.cast31 = and i32 %11, 65535, !dbg !5362
  %cmp32 = icmp eq i32 %bf.cast31, %code, !dbg !5364
  br i1 %cmp32, label %if.end37, label %if.then33, !dbg !5365

if.then33:                                        ; preds = %if.end26
  store %union.tree_node* %name, %union.tree_node** @pending_invalid_xref, align 8, !dbg !5366
  %12 = load i32, i32* @input_location, align 4, !dbg !5368
  store i32 %12, i32* @pending_invalid_xref_location, align 4, !dbg !5369
  br i1 %thislevel.1, label %if.then35, label %if.end37, !dbg !5370

if.then35:                                        ; preds = %if.then33
  tail call void @pending_xref_error() #7, !dbg !5371
  br label %if.end37, !dbg !5371

if.end37:                                         ; preds = %if.end26, %if.then33, %if.then35
  %cmp38 = icmp eq i32* %ploc, null, !dbg !5373
  br i1 %cmp38, label %if.end40, label %if.then39, !dbg !5375

if.then39:                                        ; preds = %if.end37
  %locus = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 6, !dbg !5376
  %13 = load i32, i32* %locus, align 4, !dbg !5376
  store i32 %13, i32* %ploc, align 4, !dbg !5377
  br label %if.end40, !dbg !5378

if.end40:                                         ; preds = %if.end37, %if.then39
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5379
  br label %cleanup, !dbg !5380

cleanup:                                          ; preds = %lor.lhs.false, %entry, %if.end21, %if.end40
  %retval.0 = phi %union.tree_node* [ %14, %if.end40 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end21 ], !dbg !5336
  ret %union.tree_node* %retval.0, !dbg !5381
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pushtag(i32 %loc, %union.tree_node* %name, %union.tree_node* %type) unnamed_addr #5 !dbg !5382 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5384, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5385, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5386, metadata !DIExpression()), !dbg !5390
  %tobool = icmp eq %union.tree_node* %name, null, !dbg !5391
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5393

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5394
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5394
  %tobool3 = icmp eq %union.tree_node* %1, null, !dbg !5394
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5395

if.then:                                          ; preds = %land.lhs.true
  store %union.tree_node* %name, %union.tree_node** %0, align 8, !dbg !5396
  br label %if.end, !dbg !5397

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %2 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5398
  tail call fastcc void @bind(%union.tree_node* %name, %union.tree_node* %type, %struct.c_scope* %2, i8 zeroext 0, i8 zeroext 0, i32 %loc) #7, !dbg !5399
  %call = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 35, %union.tree_node* null, %union.tree_node* %type) #6, !dbg !5400
  %call6 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call) #7, !dbg !5401
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5402
  store %union.tree_node* %call6, %union.tree_node** %chain, align 8, !dbg !5403
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5404
  %3 = bitcast %union.tree_node** %context to i64*, !dbg !5404
  %4 = load i64, i64* %3, align 8, !dbg !5404
  %context10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5405
  %5 = bitcast i24* %context10 to i64*, !dbg !5406
  store i64 %4, i64* %5, align 8, !dbg !5406
  %6 = load i32, i32* @warn_cxx_compat, align 4, !dbg !5407
  %tobool11 = icmp ne i32 %6, 0, !dbg !5407
  %cmp = icmp ne %union.tree_node* %name, null, !dbg !5408
  %or.cond = and i1 %tobool11, %cmp, !dbg !5409
  br i1 %or.cond, label %if.then13, label %if.end50, !dbg !5409

if.then13:                                        ; preds = %if.end
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5410
  %7 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !5410
  %8 = load %struct.c_binding*, %struct.c_binding** %7, align 8, !dbg !5410
  call void @llvm.dbg.value(metadata %struct.c_binding* %8, metadata !5387, metadata !DIExpression()), !dbg !5411
  %cmp14 = icmp eq %struct.c_binding* %8, null, !dbg !5412
  br i1 %cmp14, label %if.end50, label %land.lhs.true15, !dbg !5414

land.lhs.true15:                                  ; preds = %if.then13
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %8, i64 0, i32 1, !dbg !5415
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5415
  %cmp16 = icmp eq %union.tree_node* %9, null, !dbg !5416
  br i1 %cmp16, label %if.end50, label %land.lhs.true17, !dbg !5417

land.lhs.true17:                                  ; preds = %land.lhs.true15
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5417
  %bf.load = load i64, i64* %10, align 8, !dbg !5418
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5419
  %cmp19 = icmp eq i64 %bf.cast1, 35, !dbg !5419
  br i1 %cmp19, label %land.lhs.true20, label %if.end50, !dbg !5420

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %8, i64 0, i32 5, !dbg !5421
  %bf.load21 = load i32, i32* %depth, align 8, !dbg !5421
  %11 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5421
  %depth23 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %11, i64 0, i32 5, !dbg !5421
  %12 = bitcast i40* %depth23 to i64*, !dbg !5421
  %bf.load24 = load i64, i64* %12, align 8, !dbg !5421
  %13 = trunc i64 %bf.load24 to i32, !dbg !5421
  %14 = xor i32 %bf.load21, %13, !dbg !5421
  %15 = and i32 %14, 268435455, !dbg !5421
  %cmp27 = icmp eq i32 %15, 0, !dbg !5421
  br i1 %cmp27, label %land.lhs.true34, label %lor.lhs.false, !dbg !5422

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %16 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5423
  %cmp28 = icmp eq %struct.c_scope* %11, %16, !dbg !5424
  br i1 %cmp28, label %land.lhs.true29, label %if.end50, !dbg !5425

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %bf.clear32 = and i32 %bf.load21, 268435455, !dbg !5426
  %cmp33 = icmp eq i32 %bf.clear32, 0, !dbg !5426
  br i1 %cmp33, label %land.lhs.true34, label %if.end50, !dbg !5427

land.lhs.true34:                                  ; preds = %land.lhs.true29, %land.lhs.true20
  %type37 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5428
  %17 = bitcast %union.tree_node** %type37 to %struct.tree_type**, !dbg !5428
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !5428
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 16, !dbg !5428
  %19 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !5428
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5429
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !5429
  %cmp41 = icmp eq %union.tree_node* %19, %21, !dbg !5430
  br i1 %cmp41, label %if.end50, label %if.then42, !dbg !5431

if.then42:                                        ; preds = %land.lhs.true34
  %call44 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.262, i64 0, i64 0), %union.tree_node* nonnull %9) #6, !dbg !5432
  %locus = getelementptr inbounds %struct.c_binding, %struct.c_binding* %8, i64 0, i32 6, !dbg !5434
  %22 = load i32, i32* %locus, align 4, !dbg !5434
  %cmp45 = icmp eq i32 %22, 0, !dbg !5436
  br i1 %cmp45, label %if.end50, label %if.then46, !dbg !5437

if.then46:                                        ; preds = %if.then42
  tail call void (i32, i8*, ...) @inform(i32 %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !5438
  br label %if.end50, !dbg !5438

if.end50:                                         ; preds = %if.then42, %land.lhs.true34, %land.lhs.true15, %if.then13, %land.lhs.true17, %lor.lhs.false, %land.lhs.true29, %if.then46, %if.end
  ret void, !dbg !5439
}

; Function Attrs: nounwind uwtable
define dso_local i32 @quals_from_declspecs(%struct.c_declspecs* %specs) local_unnamed_addr #5 !dbg !5440 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !5444, metadata !DIExpression()), !dbg !5446
  %const_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !5447
  %bf.load = load i16, i16* %const_p, align 8, !dbg !5447
  %bf.clear = lshr i16 %bf.load, 8, !dbg !5448
  %or132 = and i16 %bf.clear, 7, !dbg !5449
  %or13 = zext i16 %or132 to i32, !dbg !5449
  %address_space = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 9, !dbg !5450
  %0 = load i8, i8* %address_space, align 2, !dbg !5450
  %conv = zext i8 %0 to i32, !dbg !5450
  %shl = shl nuw nsw i32 %conv, 8, !dbg !5450
  %or14 = or i32 %shl, %or13, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %or14, metadata !5445, metadata !DIExpression()), !dbg !5446
  %type = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 0, !dbg !5452
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5452
  %tobool15 = icmp eq %union.tree_node* %1, null, !dbg !5452
  br i1 %tobool15, label %land.lhs.true, label %cond.true, !dbg !5452

land.lhs.true:                                    ; preds = %entry
  %decl_attr = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 2, !dbg !5452
  %2 = load %union.tree_node*, %union.tree_node** %decl_attr, align 8, !dbg !5452
  %tobool16 = icmp eq %union.tree_node* %2, null, !dbg !5452
  br i1 %tobool16, label %land.lhs.true17, label %cond.true, !dbg !5452

land.lhs.true17:                                  ; preds = %land.lhs.true
  %typespec_word = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !5452
  %3 = load i32, i32* %typespec_word, align 8, !dbg !5452
  %cmp = icmp eq i32 %3, 0, !dbg !5452
  br i1 %cmp, label %land.lhs.true19, label %cond.true, !dbg !5452

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %storage_class = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 5, !dbg !5452
  %4 = load i32, i32* %storage_class, align 4, !dbg !5452
  %cmp20 = icmp eq i32 %4, 0, !dbg !5452
  br i1 %cmp20, label %land.lhs.true22, label %cond.true, !dbg !5452

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %typedef_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !5452
  %bf.load23 = load i8, i8* %typedef_p, align 8, !dbg !5452
  %bf.clear25 = and i8 %bf.load23, 16, !dbg !5452
  %tobool27 = icmp eq i8 %bf.clear25, 0, !dbg !5452
  br i1 %tobool27, label %land.lhs.true28, label %cond.true, !dbg !5452

land.lhs.true28:                                  ; preds = %land.lhs.true22
  %bf.clear31 = and i8 %bf.load23, 64, !dbg !5452
  %tobool33 = icmp eq i8 %bf.clear31, 0, !dbg !5452
  br i1 %tobool33, label %land.lhs.true34, label %cond.true, !dbg !5452

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %tobool38 = icmp slt i8 %bf.load23, 0, !dbg !5452
  br i1 %tobool38, label %cond.true, label %land.lhs.true39, !dbg !5452

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %bf.clear41 = and i16 %bf.load, 1, !dbg !5452
  %tobool43 = icmp eq i16 %bf.clear41, 0, !dbg !5452
  br i1 %tobool43, label %land.lhs.true44, label %cond.true, !dbg !5452

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %bf.clear47 = and i16 %bf.load, 2, !dbg !5452
  %tobool49 = icmp eq i16 %bf.clear47, 0, !dbg !5452
  br i1 %tobool49, label %land.lhs.true50, label %cond.true, !dbg !5452

land.lhs.true50:                                  ; preds = %land.lhs.true44
  %bf.clear53 = and i16 %bf.load, 4, !dbg !5452
  %tobool55 = icmp eq i16 %bf.clear53, 0, !dbg !5452
  br i1 %tobool55, label %land.lhs.true56, label %cond.true, !dbg !5452

land.lhs.true56:                                  ; preds = %land.lhs.true50
  %bf.clear59 = and i16 %bf.load, 8, !dbg !5452
  %tobool61 = icmp eq i16 %bf.clear59, 0, !dbg !5452
  br i1 %tobool61, label %land.lhs.true62, label %cond.true, !dbg !5452

land.lhs.true62:                                  ; preds = %land.lhs.true56
  %bf.clear65 = and i16 %bf.load, 16, !dbg !5452
  %tobool67 = icmp eq i16 %bf.clear65, 0, !dbg !5452
  br i1 %tobool67, label %land.lhs.true68, label %cond.true, !dbg !5452

land.lhs.true68:                                  ; preds = %land.lhs.true62
  %bf.clear71 = and i16 %bf.load, 32, !dbg !5452
  %tobool73 = icmp eq i16 %bf.clear71, 0, !dbg !5452
  br i1 %tobool73, label %land.lhs.true74, label %cond.true, !dbg !5452

land.lhs.true74:                                  ; preds = %land.lhs.true68
  %bf.clear77 = and i16 %bf.load, 64, !dbg !5452
  %tobool79 = icmp eq i16 %bf.clear77, 0, !dbg !5452
  br i1 %tobool79, label %land.lhs.true80, label %cond.true, !dbg !5452

land.lhs.true80:                                  ; preds = %land.lhs.true74
  %5 = trunc i16 %bf.load to i8, !dbg !5452
  %tobool85 = icmp slt i8 %5, 0, !dbg !5452
  br i1 %tobool85, label %cond.true, label %cond.end, !dbg !5452

cond.true:                                        ; preds = %land.lhs.true74, %land.lhs.true68, %land.lhs.true62, %land.lhs.true56, %land.lhs.true50, %land.lhs.true44, %land.lhs.true39, %land.lhs.true28, %land.lhs.true22, %land.lhs.true, %entry, %land.lhs.true80, %land.lhs.true34, %land.lhs.true19, %land.lhs.true17
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 3750, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5452
  br label %cond.end, !dbg !5452

cond.end:                                         ; preds = %land.lhs.true80, %cond.true
  ret i32 %or14, !dbg !5453
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @build_array_declarator(i32 %loc, %union.tree_node* %expr, %struct.c_declspecs* %quals, i8 zeroext %static_p, i8 zeroext %vla_unspec_p) local_unnamed_addr #5 !dbg !5454 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5458, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5459, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %quals, metadata !5460, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i8 %static_p, metadata !5461, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i8 %vla_unspec_p, metadata !5462, metadata !DIExpression()), !dbg !5464
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5465
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5465
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5465
  %sub.ptr.sub = sub i64 %0, %1, !dbg !5465
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !5465
  %2 = inttoptr i64 %1 to i8*, !dbg !5465
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5465

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !5465
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5465
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5465
  br label %cond.end, !dbg !5465

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre2, %cond.true ], !dbg !5465
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !5465
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !5465
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5465
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !5465
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !5465
  %6 = ptrtoint i8* %5 to i64, !dbg !5465
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !5465
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !5465

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !5465
  %bf.set = or i8 %bf.load, 2, !dbg !5465
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !5465
  br label %cond.end5, !dbg !5465

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5465
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !5465
  %conv11 = sext i32 %8 to i64, !dbg !5465
  %add = add nsw i64 %7, %conv11, !dbg !5465
  %neg = xor i32 %8, -1, !dbg !5465
  %conv12 = sext i32 %neg to i64, !dbg !5465
  %and = and i64 %add, %conv12, !dbg !5465
  %9 = inttoptr i64 %and to i8*, !dbg !5465
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5465
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !5465
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !5465
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5465
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !5465
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !5465
  %12 = bitcast i8* %5 to %struct.c_declarator*, !dbg !5465
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !5465

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5465
  br label %cond.end23, !dbg !5465

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !5465
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !5465
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !5463, metadata !DIExpression()), !dbg !5464
  %id_loc = getelementptr inbounds i8, i8* %5, i64 16, !dbg !5466
  %14 = bitcast i8* %id_loc to i32*, !dbg !5466
  store i32 %loc, i32* %14, align 8, !dbg !5467
  %kind = bitcast i8* %5 to i32*, !dbg !5468
  store i32 2, i32* %kind, align 8, !dbg !5469
  %declarator25 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5470
  %15 = bitcast i8* %declarator25 to %struct.c_declarator**, !dbg !5470
  store %struct.c_declarator* null, %struct.c_declarator** %15, align 8, !dbg !5471
  %dimen = getelementptr inbounds i8, i8* %5, i64 24, !dbg !5472
  %16 = bitcast i8* %dimen to %union.tree_node**, !dbg !5472
  store %union.tree_node* %expr, %union.tree_node** %16, align 8, !dbg !5473
  %tobool = icmp eq %struct.c_declspecs* %quals, null, !dbg !5474
  br i1 %tobool, label %if.else, label %if.then, !dbg !5476

if.then:                                          ; preds = %cond.end23
  %attrs = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %quals, i64 0, i32 3, !dbg !5477
  %17 = bitcast %union.tree_node** %attrs to i64*, !dbg !5477
  %18 = load i64, i64* %17, align 8, !dbg !5477
  %attrs28 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !5479
  %19 = bitcast i8* %attrs28 to i64*, !dbg !5480
  store i64 %18, i64* %19, align 8, !dbg !5480
  %call = tail call i32 @quals_from_declspecs(%struct.c_declspecs* nonnull %quals) #7, !dbg !5481
  %quals31 = getelementptr inbounds i8, i8* %5, i64 32, !dbg !5482
  %20 = bitcast i8* %quals31 to i32*, !dbg !5482
  store i32 %call, i32* %20, align 8, !dbg !5483
  br label %if.end, !dbg !5484

if.else:                                          ; preds = %cond.end23
  %attrs34 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !5485
  %21 = bitcast i8* %attrs34 to %union.tree_node**, !dbg !5485
  store %union.tree_node* null, %union.tree_node** %21, align 8, !dbg !5487
  %quals37 = getelementptr inbounds i8, i8* %5, i64 32, !dbg !5488
  %22 = bitcast i8* %quals37 to i32*, !dbg !5488
  store i32 0, i32* %22, align 8, !dbg !5489
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = getelementptr inbounds i8, i8* %5, i64 48, !dbg !5490
  %bf.load42 = load i8, i8* %23, align 8, !dbg !5491
  %bf.value = and i8 %static_p, 1, !dbg !5491
  %bf.clear43 = and i8 %bf.load42, -4, !dbg !5491
  %bf.set44 = or i8 %bf.clear43, %bf.value, !dbg !5491
  %bf.value50 = shl i8 %vla_unspec_p, 1, !dbg !5492
  %bf.shl = and i8 %bf.value50, 2, !dbg !5492
  %bf.set52 = or i8 %bf.set44, %bf.shl, !dbg !5492
  store i8 %bf.set52, i8* %23, align 8, !dbg !5492
  %24 = load i32, i32* @flag_isoc99, align 4, !dbg !5493
  %tobool54 = icmp eq i32 %24, 0, !dbg !5493
  br i1 %tobool54, label %if.then55, label %if.end67, !dbg !5495

if.then55:                                        ; preds = %if.end
  %tobool57 = icmp ne i8 %static_p, 0, !dbg !5496
  %cmp58 = icmp ne %struct.c_declspecs* %quals, null, !dbg !5499
  %or.cond = or i1 %tobool57, %cmp58, !dbg !5500
  br i1 %or.cond, label %if.then60, label %if.end62, !dbg !5500

if.then60:                                        ; preds = %if.then55
  %call61 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !5501
  br label %if.end62, !dbg !5501

if.end62:                                         ; preds = %if.then55, %if.then60
  %cond = icmp eq i8 %vla_unspec_p, 0, !dbg !5502
  br i1 %cond, label %cleanup, label %if.then64, !dbg !5502

if.then64:                                        ; preds = %if.end62
  %call65 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !5503
  br label %if.end67, !dbg !5503

if.end67:                                         ; preds = %if.end, %if.then64
  %tobool68 = icmp eq i8 %vla_unspec_p, 0, !dbg !5505
  br i1 %tobool68, label %cleanup, label %if.then69, !dbg !5507

if.then69:                                        ; preds = %if.end67
  %25 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5508
  %parm_flag = getelementptr inbounds %struct.c_scope, %struct.c_scope* %25, i64 0, i32 5, !dbg !5511
  %26 = bitcast i40* %parm_flag to i64*, !dbg !5511
  %bf.load70 = load i64, i64* %26, align 8, !dbg !5511
  %bf.cast1 = and i64 %bf.load70, 268435456, !dbg !5508
  %tobool72 = icmp eq i64 %bf.cast1, 0, !dbg !5508
  br i1 %tobool72, label %if.then73, label %if.end79, !dbg !5512

if.then73:                                        ; preds = %if.then69
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !5513
  %bf.load77 = load i8, i8* %23, align 8, !dbg !5515
  %bf.clear78 = and i8 %bf.load77, -3, !dbg !5515
  store i8 %bf.clear78, i8* %23, align 8, !dbg !5515
  br label %cleanup, !dbg !5516

if.end79:                                         ; preds = %if.then69
  %bf.set82 = or i64 %bf.load70, 536870912, !dbg !5517
  store i64 %bf.set82, i64* %26, align 8, !dbg !5517
  br label %cleanup, !dbg !5518

cleanup:                                          ; preds = %if.end67, %if.end62, %if.end79, %if.then73
  %retval.0 = phi %struct.c_declarator* [ null, %if.then73 ], [ %12, %if.end62 ], [ %12, %if.end79 ], [ %12, %if.end67 ], !dbg !5464
  ret %struct.c_declarator* %retval.0, !dbg !5519
}

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @set_array_declarator_inner(%struct.c_declarator* %decl, %struct.c_declarator* %inner) local_unnamed_addr #5 !dbg !5520 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declarator* %decl, metadata !5524, metadata !DIExpression()), !dbg !5526
  call void @llvm.dbg.value(metadata %struct.c_declarator* %inner, metadata !5525, metadata !DIExpression()), !dbg !5526
  %declarator = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl, i64 0, i32 1, !dbg !5527
  store %struct.c_declarator* %inner, %struct.c_declarator** %declarator, align 8, !dbg !5528
  ret %struct.c_declarator* %decl, !dbg !5529
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @groktypename(%struct.c_type_name* %type_name, %union.tree_node** %expr, i8* %expr_const_operands) local_unnamed_addr #5 !dbg !5530 {
entry:
  %type = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_type_name* %type_name, metadata !5539, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5540, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i8* %expr_const_operands, metadata !5541, metadata !DIExpression()), !dbg !5544
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !5545
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5545
  %1 = bitcast %union.tree_node** %attrs to i8*, !dbg !5546
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5546
  %specs = getelementptr inbounds %struct.c_type_name, %struct.c_type_name* %type_name, i64 0, i32 0, !dbg !5547
  %2 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !5547
  %attrs1 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %2, i64 0, i32 3, !dbg !5548
  %3 = bitcast %union.tree_node** %attrs1 to i64*, !dbg !5548
  %4 = load i64, i64* %3, align 8, !dbg !5548
  %5 = bitcast %union.tree_node** %attrs to i64*, !dbg !5549
  store i64 %4, i64* %5, align 8, !dbg !5549
  store %union.tree_node* null, %union.tree_node** %attrs1, align 8, !dbg !5550
  %declarator = getelementptr inbounds %struct.c_type_name, %struct.c_type_name* %type_name, i64 0, i32 1, !dbg !5551
  %6 = load %struct.c_declarator*, %struct.c_declarator** %declarator, align 8, !dbg !5551
  %7 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata %union.tree_node** %attrs, metadata !5543, metadata !DIExpression(DW_OP_deref)), !dbg !5544
  %call = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %6, %struct.c_declspecs* %7, i32 4, i8 zeroext 0, %union.tree_node** null, %union.tree_node** nonnull %attrs, %union.tree_node** %expr, i8* %expr_const_operands, i32 0) #7, !dbg !5553
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5542, metadata !DIExpression()), !dbg !5544
  store %union.tree_node* %call, %union.tree_node** %type, align 8, !dbg !5554
  %8 = load %union.tree_node*, %union.tree_node** %attrs, align 8, !dbg !5555
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5543, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5542, metadata !DIExpression(DW_OP_deref)), !dbg !5544
  %call5 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %type, %union.tree_node* %8, i32 0) #6, !dbg !5556
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5557
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5542, metadata !DIExpression()), !dbg !5544
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5558
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5558
  ret %union.tree_node* %9, !dbg !5559
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, i32 %decl_context, i8 zeroext %initialized, %union.tree_node** %width, %union.tree_node** %decl_attrs, %union.tree_node** %expr, i8* %expr_const_operands, i32 %deprecated_state) unnamed_addr #5 !dbg !5560 {
entry:
  %type = alloca %union.tree_node*, align 8
  %expr_dummy = alloca %union.tree_node*, align 8
  %expr_const_operands_dummy = alloca i8, align 1
  %tmp = alloca %struct.expanded_location, align 8
  %tmp505 = alloca %struct.expanded_location, align 8
  %size_maybe_const = alloca i8, align 1
  %tmp768 = alloca %struct.expanded_location, align 8
  %tmp1511 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !5567, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %decl_context, metadata !5568, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %initialized, metadata !5569, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node** %width, metadata !5570, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node** %decl_attrs, metadata !5571, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !5572, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8* %expr_const_operands, metadata !5573, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %deprecated_state, metadata !5574, metadata !DIExpression()), !dbg !5662
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !5663
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5663
  %1 = bitcast %struct.c_declspecs* %declspecs to i64*, !dbg !5664
  %2 = load i64, i64* %1, align 8, !dbg !5664
  %3 = bitcast %union.tree_node** %type to i64*, !dbg !5665
  store i64 %2, i64* %3, align 8, !dbg !5665
  %thread_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 8, !dbg !5666
  %bf.load = load i16, i16* %thread_p, align 8, !dbg !5666
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !5666
  call void @llvm.dbg.value(metadata i8 %conv, metadata !5576, metadata !DIExpression()), !dbg !5662
  %storage_class2 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !5667
  %4 = load i32, i32* %storage_class2, align 4, !dbg !5667
  call void @llvm.dbg.value(metadata i32 %4, metadata !5577, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5582, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 0, metadata !5583, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 0, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 0, metadata !5585, metadata !DIExpression()), !dbg !5662
  %decl_attr3 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 2, !dbg !5668
  %5 = load %union.tree_node*, %union.tree_node** %decl_attr3, align 8, !dbg !5668
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5586, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 0, metadata !5590, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5591, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !5592, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* null, metadata !5594, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5598, metadata !DIExpression()), !dbg !5662
  %6 = bitcast %union.tree_node** %expr_dummy to i8*, !dbg !5669
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !5669
  call void @llvm.dbg.value(metadata i8* %expr_const_operands_dummy, metadata !5601, metadata !DIExpression(DW_OP_deref)), !dbg !5662
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %expr_const_operands_dummy) #8, !dbg !5670
  %cmp6 = icmp eq %union.tree_node** %expr, null, !dbg !5671
  %spec.select = select i1 %cmp6, %union.tree_node** %expr_dummy, %union.tree_node** %expr, !dbg !5673
  call void @llvm.dbg.value(metadata %union.tree_node** %spec.select, metadata !5572, metadata !DIExpression()), !dbg !5662
  %cmp8 = icmp eq i8* %expr_const_operands, null, !dbg !5674
  %expr_const_operands.addr.0 = select i1 %cmp8, i8* %expr_const_operands_dummy, i8* %expr_const_operands, !dbg !5676
  call void @llvm.dbg.value(metadata i8* %expr_const_operands.addr.0, metadata !5573, metadata !DIExpression()), !dbg !5662
  %expr12 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 1, !dbg !5677
  %7 = bitcast %union.tree_node** %expr12 to i64*, !dbg !5677
  %8 = load i64, i64* %7, align 8, !dbg !5677
  %9 = bitcast %union.tree_node** %spec.select to i64*, !dbg !5678
  store i64 %8, i64* %9, align 8, !dbg !5678
  %expr_const_operands13 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 6, !dbg !5679
  %bf.load14 = load i8, i8* %expr_const_operands13, align 8, !dbg !5679
  %bf.clear15 = and i8 %bf.load14, 1, !dbg !5679
  store i8 %bf.clear15, i8* %expr_const_operands.addr.0, align 1, !dbg !5680
  %cmp18 = icmp eq i32 %decl_context, 1, !dbg !5681
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !5568, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i1 %cmp18, metadata !5583, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !5602, metadata !DIExpression()), !dbg !5683
  br label %while.cond, !dbg !5684

while.cond:                                       ; preds = %sw.epilog, %entry
  %decl.0 = phi %struct.c_declarator* [ %declarator, %entry ], [ %decl.1, %sw.epilog ], !dbg !5685
  %loc.0 = phi i32 [ 0, %entry ], [ %loc.2, %sw.epilog ], !dbg !5686
  %funcdef_syntax.0 = phi i8 [ 0, %entry ], [ %funcdef_syntax.1, %sw.epilog ], !dbg !5687
  %name.0 = phi %union.tree_node* [ null, %entry ], [ %name.2, %sw.epilog ], !dbg !5688
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !5582, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %funcdef_syntax.0, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %loc.0, metadata !5598, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %decl.0, metadata !5602, metadata !DIExpression()), !dbg !5683
  %tobool = icmp eq %struct.c_declarator* %decl.0, null, !dbg !5684
  br i1 %tobool, label %while.end, label %while.body, !dbg !5684

while.body:                                       ; preds = %while.cond
  %kind = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 0, !dbg !5689
  %10 = load i32, i32* %kind, align 8, !dbg !5689
  switch i32 %10, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb22
    i32 3, label %sw.bb22
    i32 4, label %sw.bb28
    i32 0, label %sw.bb30
  ], !dbg !5690

sw.bb:                                            ; preds = %while.body
  %id_loc = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 2, !dbg !5691
  %11 = load i32, i32* %id_loc, align 8, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %11, metadata !5598, metadata !DIExpression()), !dbg !5662
  br label %sw.bb22, !dbg !5693

sw.bb22:                                          ; preds = %while.body, %while.body, %sw.bb
  %loc.1 = phi i32 [ %loc.0, %while.body ], [ %loc.0, %while.body ], [ %11, %sw.bb ], !dbg !5662
  call void @llvm.dbg.value(metadata i32 %loc.1, metadata !5598, metadata !DIExpression()), !dbg !5662
  %cmp24 = icmp eq i32 %10, 1, !dbg !5694
  %conv26 = zext i1 %cmp24 to i8, !dbg !5695
  call void @llvm.dbg.value(metadata i8 %conv26, metadata !5584, metadata !DIExpression()), !dbg !5662
  %declarator27 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 1, !dbg !5696
  %12 = load %struct.c_declarator*, %struct.c_declarator** %declarator27, align 8, !dbg !5696
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !5602, metadata !DIExpression()), !dbg !5683
  br label %sw.epilog, !dbg !5697

sw.bb28:                                          ; preds = %while.body
  %declarator29 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 1, !dbg !5698
  %13 = load %struct.c_declarator*, %struct.c_declarator** %declarator29, align 8, !dbg !5698
  call void @llvm.dbg.value(metadata %struct.c_declarator* %13, metadata !5602, metadata !DIExpression()), !dbg !5683
  br label %sw.epilog, !dbg !5699

sw.bb30:                                          ; preds = %while.body
  %id_loc31 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 2, !dbg !5700
  %14 = load i32, i32* %id_loc31, align 8, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %14, metadata !5598, metadata !DIExpression()), !dbg !5662
  %id = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %decl.0, i64 0, i32 3, i32 0, i32 0, !dbg !5701
  %15 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !5701
  %tobool32 = icmp eq %union.tree_node* %15, null, !dbg !5703
  br i1 %tobool32, label %sw.epilog, label %if.then33, !dbg !5704

if.then33:                                        ; preds = %sw.bb30
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5582, metadata !DIExpression()), !dbg !5662
  br label %sw.epilog, !dbg !5705

sw.default:                                       ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 4846, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5706
  br label %sw.epilog, !dbg !5707

sw.epilog:                                        ; preds = %sw.bb30, %if.then33, %sw.default, %sw.bb28, %sw.bb22
  %decl.1 = phi %struct.c_declarator* [ %decl.0, %sw.default ], [ %13, %sw.bb28 ], [ %12, %sw.bb22 ], [ null, %if.then33 ], [ null, %sw.bb30 ], !dbg !5683
  %loc.2 = phi i32 [ %loc.0, %sw.default ], [ %loc.0, %sw.bb28 ], [ %loc.1, %sw.bb22 ], [ %14, %if.then33 ], [ %14, %sw.bb30 ], !dbg !5662
  %funcdef_syntax.1 = phi i8 [ %funcdef_syntax.0, %sw.default ], [ %funcdef_syntax.0, %sw.bb28 ], [ %conv26, %sw.bb22 ], [ %funcdef_syntax.0, %if.then33 ], [ %funcdef_syntax.0, %sw.bb30 ], !dbg !5662
  %name.2 = phi %union.tree_node* [ %name.0, %sw.default ], [ %name.0, %sw.bb28 ], [ %name.0, %sw.bb22 ], [ %15, %if.then33 ], [ %name.0, %sw.bb30 ], !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %name.2, metadata !5582, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %funcdef_syntax.1, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %loc.2, metadata !5598, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %decl.1, metadata !5602, metadata !DIExpression()), !dbg !5683
  br label %while.cond, !dbg !5684, !llvm.loop !5708

while.end:                                        ; preds = %while.cond
  %loc.0.lcssa = phi i32 [ %loc.0, %while.cond ], !dbg !5686
  %funcdef_syntax.0.lcssa = phi i8 [ %funcdef_syntax.0, %while.cond ], !dbg !5687
  %name.0.lcssa = phi %union.tree_node* [ %name.0, %while.cond ], !dbg !5688
  %16 = trunc i16 %bf.lshr to i8, !dbg !5710
  %17 = inttoptr i64 %2 to %union.tree_node*, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !5598, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %funcdef_syntax.0.lcssa, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5662
  %conv = and i8 %16, 1, !dbg !5710
  %cmp = icmp ne %union.tree_node** %width, null, !dbg !5711
  %spec.select3 = select i1 %cmp18, i32 0, i32 %decl_context, !dbg !5712
  %18 = inttoptr i64 %2 to %struct.tree_type*, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !5598, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %funcdef_syntax.0.lcssa, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !5598, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %funcdef_syntax.0.lcssa, metadata !5584, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5662
  %cmp37 = icmp eq %union.tree_node* %name.0.lcssa, null, !dbg !5713
  br i1 %cmp37, label %if.then39, label %if.end55, !dbg !5715

if.then39:                                        ; preds = %while.end
  switch i32 %spec.select3, label %cond.true [
    i32 2, label %cond.end
    i32 4, label %cond.end
    i32 3, label %land.lhs.true
  ], !dbg !5716

land.lhs.true:                                    ; preds = %if.then39
  %kind47 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator, i64 0, i32 0, !dbg !5716
  %19 = load i32, i32* %kind47, align 8, !dbg !5716
  %cmp48 = icmp eq i32 %19, 0, !dbg !5716
  br i1 %cmp48, label %cond.end, label %cond.true, !dbg !5716

cond.true:                                        ; preds = %if.then39, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 4853, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5716
  br label %cond.end, !dbg !5716

cond.end:                                         ; preds = %land.lhs.true, %if.then39, %if.then39, %cond.true
  %tobool50 = icmp eq i8 %initialized, 0, !dbg !5718
  br i1 %tobool50, label %if.end55, label %cond.true51, !dbg !5718

cond.true51:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 4854, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5718
  br label %if.end55, !dbg !5718

if.end55:                                         ; preds = %cond.end, %cond.true51, %while.end
  %tobool57 = xor i1 %cmp18, true, !dbg !5719
  %tobool59 = icmp ne i8 %funcdef_syntax.0.lcssa, 0, !dbg !5721
  %or.cond = or i1 %tobool59, %tobool57, !dbg !5722
  br i1 %or.cond, label %if.end61, label %cleanup1930, !dbg !5722

if.end61:                                         ; preds = %if.end55
  %cmp62 = icmp ne i32 %spec.select3, 0, !dbg !5723
  %or.cond4 = or i1 %cmp62, %cmp18, !dbg !5725
  br i1 %or.cond4, label %if.end73, label %land.lhs.true66, !dbg !5725

land.lhs.true66:                                  ; preds = %if.end61
  %20 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5726
  %parm_flag = getelementptr inbounds %struct.c_scope, %struct.c_scope* %20, i64 0, i32 5, !dbg !5727
  %21 = bitcast i40* %parm_flag to i64*, !dbg !5727
  %bf.load67 = load i64, i64* %21, align 8, !dbg !5727
  %bf.cast7055 = lshr i64 %bf.load67, 27, !dbg !5728
  %22 = trunc i64 %bf.cast7055 to i32, !dbg !5728
  %23 = and i32 %22, 2, !dbg !5728
  br label %if.end73, !dbg !5728

if.end73:                                         ; preds = %land.lhs.true66, %if.end61
  %decl_context.addr.1 = phi i32 [ %spec.select3, %if.end61 ], [ %23, %land.lhs.true66 ], !dbg !5662
  call void @llvm.dbg.value(metadata i32 %decl_context.addr.1, metadata !5568, metadata !DIExpression()), !dbg !5662
  %bf.load74 = load i8, i8* %expr_const_operands13, align 8, !dbg !5729
  %tobool77 = icmp slt i8 %bf.load74, 0, !dbg !5731
  %cmp79 = icmp ne i32 %deprecated_state, 1, !dbg !5732
  %or.cond6 = and i1 %tobool77, %cmp79, !dbg !5733
  br i1 %or.cond6, label %if.then81, label %if.end84, !dbg !5733

if.then81:                                        ; preds = %if.end73
  %type82 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 0, !dbg !5734
  %24 = load %union.tree_node*, %union.tree_node** %type82, align 8, !dbg !5734
  %25 = load %union.tree_node*, %union.tree_node** %decl_attr3, align 8, !dbg !5735
  tail call void @warn_deprecated_use(%union.tree_node* %24, %union.tree_node* %25) #6, !dbg !5736
  br label %if.end84, !dbg !5736

if.end84:                                         ; preds = %if.then81, %if.end73
  switch i32 %decl_context.addr.1, label %if.end100 [
    i32 0, label %land.lhs.true90
    i32 3, label %land.lhs.true90
  ], !dbg !5737

land.lhs.true90:                                  ; preds = %if.end84, %if.end84
  %26 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5739
  %27 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5740
  %cmp91 = icmp eq %struct.c_scope* %26, %27, !dbg !5741
  br i1 %cmp91, label %land.lhs.true93, label %if.end100, !dbg !5742

land.lhs.true93:                                  ; preds = %land.lhs.true90
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %17, %union.tree_node* null) #6, !dbg !5743
  %tobool95 = icmp eq i8 %call, 0, !dbg !5743
  br i1 %tobool95, label %if.end100, label %if.then96, !dbg !5744

if.then96:                                        ; preds = %land.lhs.true93
  br i1 %cmp37, label %if.else, label %if.then98, !dbg !5745

if.then98:                                        ; preds = %if.then96
  tail call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.263, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5747
  br label %if.end99, !dbg !5747

if.else:                                          ; preds = %if.then96
  tail call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.264, i64 0, i64 0)) #6, !dbg !5749
  br label %if.end99

if.end99:                                         ; preds = %if.else, %if.then98
  %28 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !5750
  store i64 %28, i64* %3, align 8, !dbg !5751
  %29 = inttoptr i64 %28 to %struct.tree_type*, !dbg !5752
  br label %if.end100, !dbg !5752

if.end100:                                        ; preds = %land.lhs.true93, %if.end84, %if.end99, %land.lhs.true90
  %30 = phi %struct.tree_type* [ %18, %land.lhs.true93 ], [ %18, %if.end84 ], [ %29, %if.end99 ], [ %18, %land.lhs.true90 ], !dbg !5753
  %31 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5753
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 6, !dbg !5753
  %bf.load102 = load i32, i32* %lang_flag_1, align 4, !dbg !5753
  %bf.clear104 = lshr i32 %bf.load102, 26, !dbg !5753
  %32 = trunc i32 %bf.clear104 to i8, !dbg !5753
  %33 = and i8 %32, 1, !dbg !5753
  call void @llvm.dbg.value(metadata i8 %33, metadata !5585, metadata !DIExpression()), !dbg !5662
  %default_int_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 7, !dbg !5754
  %34 = load i32, i32* %default_int_p, align 4, !dbg !5754
  %tobool108 = icmp eq i32 %34, 0, !dbg !5756
  br i1 %tobool108, label %if.end133, label %land.lhs.true109, !dbg !5757

land.lhs.true109:                                 ; preds = %if.end100
  %35 = load i32, i32* @input_location, align 4, !dbg !5758
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %35) #6, !dbg !5758
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !5758
  %36 = load i8, i8* %sysp, align 8, !dbg !5758
  %cmp111 = icmp eq i8 %36, 0, !dbg !5758
  br i1 %cmp111, label %if.then113, label %if.end133, !dbg !5759

if.then113:                                       ; preds = %land.lhs.true109
  %37 = load i32, i32* @warn_implicit_int, align 4, !dbg !5760
  %38 = load i32, i32* @warn_return_type, align 4, !dbg !5763
  %39 = or i32 %37, %38, !dbg !5764
  %40 = load i32, i32* @flag_isoc99, align 4, !dbg !5765
  %41 = or i32 %39, %40, !dbg !5764
  %42 = icmp ne i32 %41, 0, !dbg !5764
  %or.cond9 = and i1 %42, %cmp18, !dbg !5764
  br i1 %or.cond9, label %if.then122, label %if.else123, !dbg !5764

if.then122:                                       ; preds = %if.then113
  store i32 1, i32* @warn_about_return_type, align 4, !dbg !5766
  br label %if.end133, !dbg !5767

if.else123:                                       ; preds = %if.then113
  br i1 %cmp37, label %if.else128, label %if.then125, !dbg !5768

if.then125:                                       ; preds = %if.else123
  %tobool126 = icmp eq i32 %40, 0, !dbg !5770
  %cond127 = select i1 %tobool126, i32 104, i32 0, !dbg !5770
  call void (i32, i32, i8*, ...) @pedwarn_c99(i32 %loc.0.lcssa, i32 %cond127, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.265, i64 0, i64 0), %union.tree_node* nonnull %name.0.lcssa) #6, !dbg !5772
  br label %if.end133, !dbg !5772

if.else128:                                       ; preds = %if.else123
  %43 = load i32, i32* @input_location, align 4, !dbg !5773
  %tobool129 = icmp eq i32 %40, 0, !dbg !5774
  %cond130 = select i1 %tobool129, i32 104, i32 0, !dbg !5774
  call void (i32, i32, i8*, ...) @pedwarn_c99(i32 %43, i32 %cond130, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.266, i64 0, i64 0)) #6, !dbg !5775
  br label %if.end133

if.end133:                                        ; preds = %land.lhs.true109, %if.end100, %if.then122, %if.else128, %if.then125
  %tobool135 = xor i1 %cmp, true, !dbg !5776
  %44 = load i32, i32* @flag_signed_bitfields, align 4, !dbg !5778
  %tobool137 = icmp ne i32 %44, 0, !dbg !5778
  %or.cond10 = or i1 %tobool137, %tobool135, !dbg !5779
  br i1 %or.cond10, label %if.end152, label %land.lhs.true138, !dbg !5779

land.lhs.true138:                                 ; preds = %if.end133
  %bf.load139 = load i8, i8* %expr_const_operands13, align 8, !dbg !5780
  %bf.clear141 = and i8 %bf.load139, 64, !dbg !5780
  %tobool143 = icmp eq i8 %bf.clear141, 0, !dbg !5781
  br i1 %tobool143, label %land.lhs.true144, label %if.end152, !dbg !5782

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %45 = bitcast %union.tree_node** %type to i64**, !dbg !5783
  %46 = load i64*, i64** %45, align 8, !dbg !5783
  %bf.load145 = load i64, i64* %46, align 8, !dbg !5783
  %bf.cast14756 = and i64 %bf.load145, 65535, !dbg !5784
  %cmp148 = icmp eq i64 %bf.cast14756, 8, !dbg !5784
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !5785

if.then150:                                       ; preds = %land.lhs.true144
  %47 = bitcast i64* %46 to %union.tree_node*, !dbg !5785
  call void @llvm.dbg.value(metadata %union.tree_node* %47, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call151 = call %union.tree_node* @unsigned_type_for(%union.tree_node* %47) #6, !dbg !5786
  call void @llvm.dbg.value(metadata %union.tree_node* %call151, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call151, %union.tree_node** %type, align 8, !dbg !5787
  br label %if.end152, !dbg !5788

if.end152:                                        ; preds = %land.lhs.true138, %if.end133, %if.then150, %land.lhs.true144
  %48 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5789
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call153 = call %union.tree_node* @strip_array_types(%union.tree_node* %48) #6, !dbg !5790
  call void @llvm.dbg.value(metadata %union.tree_node* %call153, metadata !5593, metadata !DIExpression()), !dbg !5662
  %bf.load154 = load i16, i16* %thread_p, align 8, !dbg !5791
  %bf.lshr155 = lshr i16 %bf.load154, 8, !dbg !5791
  %bf.clear156 = and i16 %bf.lshr155, 1, !dbg !5791
  %bf.cast157 = zext i16 %bf.clear156 to i32, !dbg !5791
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %call153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5792
  %bf.load159 = load i64, i64* %49, align 8, !dbg !5792
  %bf.lshr160 = lshr i64 %bf.load159, 20, !dbg !5792
  %50 = trunc i64 %bf.lshr160 to i32, !dbg !5792
  %bf.cast162 = and i32 %50, 1, !dbg !5792
  %add = add nuw nsw i32 %bf.cast162, %bf.cast157, !dbg !5793
  call void @llvm.dbg.value(metadata i32 %add, metadata !5578, metadata !DIExpression()), !dbg !5662
  %bf.lshr164 = lshr i16 %bf.load154, 10, !dbg !5794
  %bf.clear165 = and i16 %bf.lshr164, 1, !dbg !5794
  %bf.cast166 = zext i16 %bf.clear165 to i32, !dbg !5794
  %type167 = bitcast %union.tree_node* %call153 to %struct.tree_type*, !dbg !5795
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type167, i64 0, i32 6, !dbg !5795
  %bf.load168 = load i32, i32* %restrict_flag, align 4, !dbg !5795
  %bf.lshr169 = lshr i32 %bf.load168, 13, !dbg !5795
  %bf.clear170 = and i32 %bf.lshr169, 1, !dbg !5795
  %add171 = add nuw nsw i32 %bf.clear170, %bf.cast166, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %add171, metadata !5579, metadata !DIExpression()), !dbg !5662
  %bf.lshr173 = lshr i16 %bf.load154, 9, !dbg !5797
  %bf.clear174 = and i16 %bf.lshr173, 1, !dbg !5797
  %bf.cast175 = zext i16 %bf.clear174 to i32, !dbg !5797
  %bf.lshr178 = lshr i64 %bf.load159, 19, !dbg !5798
  %51 = trunc i64 %bf.lshr178 to i32, !dbg !5798
  %bf.cast180 = and i32 %51, 1, !dbg !5798
  %add181 = add nuw nsw i32 %bf.cast180, %bf.cast175, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %add181, metadata !5580, metadata !DIExpression()), !dbg !5662
  %address_space182 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 9, !dbg !5800
  %52 = load i8, i8* %address_space182, align 2, !dbg !5800
  call void @llvm.dbg.value(metadata i8 %52, metadata !5595, metadata !DIExpression()), !dbg !5662
  %bf.lshr185 = lshr i64 %bf.load159, 56, !dbg !5801
  %conv187 = trunc i64 %bf.lshr185 to i8, !dbg !5801
  call void @llvm.dbg.value(metadata i8 %conv187, metadata !5596, metadata !DIExpression()), !dbg !5662
  %cmp189 = icmp eq i8 %52, 0, !dbg !5802
  %cond196 = select i1 %cmp189, i8 %conv187, i8 %52, !dbg !5802
  call void @llvm.dbg.value(metadata i8 %cond196, metadata !5597, metadata !DIExpression()), !dbg !5662
  %53 = load i32, i32* @pedantic, align 4, !dbg !5803
  %tobool198 = icmp eq i32 %53, 0, !dbg !5803
  %54 = load i32, i32* @flag_isoc99, align 4, !dbg !5805
  %tobool200 = icmp ne i32 %54, 0, !dbg !5805
  %or.cond11 = or i1 %tobool198, %tobool200, !dbg !5806
  br i1 %or.cond11, label %if.end217, label %if.then201, !dbg !5806

if.then201:                                       ; preds = %if.end152
  %cmp202 = icmp ugt i32 %add, 1, !dbg !5807
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !5810

if.then204:                                       ; preds = %if.then201
  %call205 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.267, i64 0, i64 0)) #6, !dbg !5811
  br label %if.end206, !dbg !5811

if.end206:                                        ; preds = %if.then204, %if.then201
  %cmp207 = icmp ugt i32 %add171, 1, !dbg !5812
  br i1 %cmp207, label %if.then209, label %if.end211, !dbg !5814

if.then209:                                       ; preds = %if.end206
  %call210 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.268, i64 0, i64 0)) #6, !dbg !5815
  br label %if.end211, !dbg !5815

if.end211:                                        ; preds = %if.then209, %if.end206
  %cmp212 = icmp ugt i32 %add181, 1, !dbg !5816
  br i1 %cmp212, label %if.then214, label %if.end217, !dbg !5818

if.then214:                                       ; preds = %if.end211
  %call215 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.269, i64 0, i64 0)) #6, !dbg !5819
  br label %if.end217, !dbg !5819

if.end217:                                        ; preds = %if.end211, %if.then214, %if.end152
  %cmp223 = icmp eq i64 %bf.lshr185, 0, !dbg !5820
  %or.cond12 = or i1 %cmp189, %cmp223, !dbg !5822
  br i1 %or.cond12, label %if.end233, label %land.lhs.true225, !dbg !5822

land.lhs.true225:                                 ; preds = %if.end217
  %conv226 = zext i8 %52 to i32, !dbg !5823
  %55 = trunc i64 %bf.lshr185 to i32, !dbg !5824
  %cmp228 = icmp eq i32 %conv226, %55, !dbg !5825
  br i1 %cmp228, label %if.end233, label %if.then230, !dbg !5826

if.then230:                                       ; preds = %land.lhs.true225
  %call231 = call i8* @c_addr_space_name(i8 zeroext %52) #6, !dbg !5827
  %call232 = call i8* @c_addr_space_name(i8 zeroext %conv187) #6, !dbg !5828
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.270, i64 0, i64 0), i8* %call231, i8* %call232) #6, !dbg !5829
  br label %if.end233, !dbg !5829

if.end233:                                        ; preds = %land.lhs.true225, %if.then230, %if.end217
  %56 = load i32, i32* @flag_gen_aux_info, align 4, !dbg !5830
  %tobool234 = icmp eq i32 %56, 0, !dbg !5830
  br i1 %tobool234, label %land.lhs.true235, label %if.end262, !dbg !5832

land.lhs.true235:                                 ; preds = %if.end233
  %bf.load237 = load i64, i64* %49, align 8, !dbg !5833
  %bf.lshr238 = lshr i64 %bf.load237, 20, !dbg !5833
  %57 = trunc i64 %bf.lshr238 to i32, !dbg !5833
  %bf.cast240 = and i32 %57, 1, !dbg !5833
  %58 = lshr i64 %bf.load237, 18, !dbg !5833
  %59 = trunc i64 %58 to i32, !dbg !5833
  %mul246 = and i32 %59, 2, !dbg !5833
  %or = or i32 %bf.cast240, %mul246, !dbg !5833
  %bf.load249 = load i32, i32* %restrict_flag, align 4, !dbg !5833
  %60 = lshr i32 %bf.load249, 11, !dbg !5833
  %mul252 = and i32 %60, 4, !dbg !5833
  %or253 = or i32 %or, %mul252, !dbg !5833
  %61 = lshr i64 %bf.load237, 48, !dbg !5833
  %62 = trunc i64 %61 to i32, !dbg !5833
  %shl = and i32 %62, 65280, !dbg !5833
  %or258 = or i32 %or253, %shl, !dbg !5833
  %tobool259 = icmp eq i32 %or258, 0, !dbg !5833
  br i1 %tobool259, label %if.end262, label %if.then260, !dbg !5834

if.then260:                                       ; preds = %land.lhs.true235
  %63 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !5835
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %63, i64 0, i32 16, !dbg !5835
  %64 = bitcast %union.tree_node** %main_variant to i64*, !dbg !5835
  %65 = load i64, i64* %64, align 8, !dbg !5835
  store i64 %65, i64* %3, align 8, !dbg !5836
  br label %if.end262, !dbg !5837

if.end262:                                        ; preds = %land.lhs.true235, %if.end233, %if.then260
  %tobool263 = icmp ne i32 %add, 0, !dbg !5838
  %cond264 = zext i1 %tobool263 to i32, !dbg !5838
  %tobool265 = icmp eq i32 %add171, 0, !dbg !5839
  %cond266 = select i1 %tobool265, i32 0, i32 4, !dbg !5839
  %or267 = or i32 %cond266, %cond264, !dbg !5840
  %tobool268 = icmp eq i32 %add181, 0, !dbg !5841
  %cond269 = select i1 %tobool268, i32 0, i32 2, !dbg !5841
  %or270 = or i32 %or267, %cond269, !dbg !5842
  %conv271 = zext i8 %cond196 to i32, !dbg !5843
  %shl273 = shl nuw nsw i32 %conv271, 8, !dbg !5843
  %or274 = or i32 %or270, %shl273, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %or274, metadata !5581, metadata !DIExpression()), !dbg !5662
  br i1 %cmp18, label %land.lhs.true277, label %if.else319, !dbg !5845

land.lhs.true277:                                 ; preds = %if.end262
  %tobool279 = icmp eq i8 %conv, 0, !dbg !5847
  br i1 %tobool279, label %switch.early.test, label %if.then289, !dbg !5848

switch.early.test:                                ; preds = %land.lhs.true277
  switch i32 %4, label %if.else319 [
    i32 1, label %if.then292
    i32 3, label %if.then300
    i32 5, label %if.then304
  ], !dbg !5848

if.then289:                                       ; preds = %land.lhs.true277
  switch i32 %4, label %if.end305 [
    i32 1, label %if.then292
    i32 3, label %if.then300
    i32 5, label %if.then304
  ], !dbg !5849

if.then292:                                       ; preds = %switch.early.test, %if.then289
  %66 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5851
  %67 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5853
  %cmp293 = icmp eq %struct.c_scope* %66, %67, !dbg !5854
  %cond295 = select i1 %cmp293, i32 0, i32 834, !dbg !5855
  %call296 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 %cond295, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.271, i64 0, i64 0)) #6, !dbg !5856
  switch i32 %4, label %if.end305 [
    i32 3, label %if.then300
    i32 5, label %if.then304
  ], !dbg !5857

if.then300:                                       ; preds = %switch.early.test, %if.then289, %if.then292
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.272, i64 0, i64 0)) #6, !dbg !5858
  %cmp302 = icmp eq i32 %4, 5, !dbg !5860
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !5862

if.then304:                                       ; preds = %switch.early.test, %if.then289, %if.then292, %if.then300
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.273, i64 0, i64 0)) #6, !dbg !5863
  br label %if.end305, !dbg !5863

if.end305:                                        ; preds = %if.then289, %if.then292, %if.then304, %if.then300
  br i1 %tobool279, label %if.end308, label %if.then307, !dbg !5864

if.then307:                                       ; preds = %if.end305
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.274, i64 0, i64 0)) #6, !dbg !5865
  br label %if.end308, !dbg !5865

if.end308:                                        ; preds = %if.end305, %if.then307
  call void @llvm.dbg.value(metadata i8 0, metadata !5576, metadata !DIExpression()), !dbg !5662
  switch i32 %4, label %if.end403 [
    i32 1, label %if.then317
    i32 3, label %if.then317
    i32 5, label %if.then317
  ], !dbg !5867

if.then317:                                       ; preds = %if.end308, %if.end308, %if.end308
  call void @llvm.dbg.value(metadata i32 0, metadata !5577, metadata !DIExpression()), !dbg !5662
  br label %if.end403, !dbg !5869

if.else319:                                       ; preds = %switch.early.test, %if.end262
  %cmp320 = icmp eq i32 %decl_context.addr.1, 0, !dbg !5870
  br i1 %cmp320, label %if.else349, label %land.lhs.true322, !dbg !5872

land.lhs.true322:                                 ; preds = %if.else319
  %cmp323 = icmp ne i32 %4, 0, !dbg !5873
  %tobool327 = icmp ne i8 %conv, 0, !dbg !5874
  %or.cond16 = or i1 %cmp323, %tobool327, !dbg !5875
  br i1 %or.cond16, label %if.then328, label %if.else349, !dbg !5875

if.then328:                                       ; preds = %land.lhs.true322
  %cmp329 = icmp eq i32 %decl_context.addr.1, 2, !dbg !5876
  %cmp332 = icmp eq i32 %4, 3, !dbg !5879
  %or.cond17 = and i1 %cmp329, %cmp332, !dbg !5880
  br i1 %or.cond17, label %if.end403, label %if.else335, !dbg !5880

if.else335:                                       ; preds = %if.then328
  switch i32 %decl_context.addr.1, label %sw.default346 [
    i32 3, label %sw.bb336
    i32 2, label %sw.bb341
  ], !dbg !5881

sw.bb336:                                         ; preds = %if.else335
  br i1 %cmp37, label %if.else339, label %if.then338, !dbg !5883

if.then338:                                       ; preds = %sw.bb336
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.275, i64 0, i64 0), %union.tree_node* nonnull %name.0.lcssa) #6, !dbg !5885
  br label %if.end403, !dbg !5885

if.else339:                                       ; preds = %sw.bb336
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.276, i64 0, i64 0)) #6, !dbg !5887
  br label %if.end403

sw.bb341:                                         ; preds = %if.else335
  br i1 %cmp37, label %if.else344, label %if.then343, !dbg !5888

if.then343:                                       ; preds = %sw.bb341
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.277, i64 0, i64 0), %union.tree_node* nonnull %name.0.lcssa) #6, !dbg !5889
  br label %if.end403, !dbg !5889

if.else344:                                       ; preds = %sw.bb341
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.278, i64 0, i64 0)) #6, !dbg !5891
  br label %if.end403

sw.default346:                                    ; preds = %if.else335
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.279, i64 0, i64 0)) #6, !dbg !5892
  br label %if.end403, !dbg !5893

if.else349:                                       ; preds = %if.else319, %land.lhs.true322
  %cmp350 = icmp ne i32 %4, 2, !dbg !5894
  %tobool354 = icmp eq i8 %initialized, 0, !dbg !5896
  %or.cond18.not = or i1 %tobool354, %cmp350, !dbg !5897
  %or.cond19 = or i1 %or.cond18.not, %cmp18, !dbg !5897
  %68 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !5898
  %69 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !5898
  %cmp370 = icmp eq %struct.c_scope* %68, %69, !dbg !5898
  br i1 %or.cond19, label %if.else369, label %if.then357, !dbg !5897

if.then357:                                       ; preds = %if.else349
  br i1 %cmp370, label %if.then360, label %if.else367, !dbg !5899

if.then360:                                       ; preds = %if.then357
  %70 = load i32, i32* @warn_cxx_compat, align 4, !dbg !5901
  %tobool361 = icmp ne i32 %70, 0, !dbg !5901
  %or.cond20 = and i1 %tobool361, %tobool263, !dbg !5905
  br i1 %or.cond20, label %if.end403, label %if.then364, !dbg !5905

if.then364:                                       ; preds = %if.then360
  %call365 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.280, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5906
  br label %if.end403, !dbg !5906

if.else367:                                       ; preds = %if.then357
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.281, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5907
  br label %if.end403

if.else369:                                       ; preds = %if.else349
  br i1 %cmp370, label %if.then372, label %if.else384, !dbg !5908

if.then372:                                       ; preds = %if.else369
  %cmp373 = icmp eq i32 %4, 1, !dbg !5909
  br i1 %cmp373, label %if.then375, label %if.end376, !dbg !5913

if.then375:                                       ; preds = %if.then372
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.282, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5914
  br label %if.end376, !dbg !5914

if.end376:                                        ; preds = %if.then375, %if.then372
  %71 = load i32, i32* @pedantic, align 4, !dbg !5915
  %tobool377 = icmp ne i32 %71, 0, !dbg !5915
  %cmp379 = icmp eq i32 %4, 3, !dbg !5917
  %or.cond21 = and i1 %tobool377, %cmp379, !dbg !5918
  br i1 %or.cond21, label %if.then381, label %if.end403, !dbg !5918

if.then381:                                       ; preds = %if.end376
  %72 = load i32, i32* @input_location, align 4, !dbg !5919
  %call382 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %72, i32 834, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.283, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5920
  br label %if.end403, !dbg !5920

if.else384:                                       ; preds = %if.else369
  %cmp385 = icmp eq i32 %4, 2, !dbg !5921
  %or.cond22 = and i1 %cmp385, %cmp18, !dbg !5924
  br i1 %or.cond22, label %if.then390, label %if.else391, !dbg !5924

if.then390:                                       ; preds = %if.else384
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.284, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5925
  br label %if.end403, !dbg !5925

if.else391:                                       ; preds = %if.else384
  %tobool393 = icmp ne i8 %conv, 0, !dbg !5926
  %cmp395 = icmp eq i32 %4, 0, !dbg !5928
  %or.cond23 = and i1 %tobool393, %cmp395, !dbg !5929
  br i1 %or.cond23, label %if.then397, label %if.end403, !dbg !5929

if.then397:                                       ; preds = %if.else391
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.285, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !5930
  call void @llvm.dbg.value(metadata i8 0, metadata !5576, metadata !DIExpression()), !dbg !5662
  br label %if.end403, !dbg !5932

if.end403:                                        ; preds = %sw.default346, %if.else339, %if.then338, %if.else344, %if.then343, %if.then328, %if.then381, %if.end376, %if.else391, %if.then397, %if.then390, %if.else367, %if.then360, %if.then364, %if.then317, %if.end308
  %storage_class.3 = phi i32 [ 0, %if.then317 ], [ %4, %if.end308 ], [ 3, %if.then328 ], [ 0, %if.then343 ], [ 0, %if.else344 ], [ 0, %if.then338 ], [ 0, %if.else339 ], [ 0, %sw.default346 ], [ 3, %if.then381 ], [ %4, %if.end376 ], [ %4, %if.else391 ], [ 0, %if.then397 ], [ 2, %if.then390 ], [ 2, %if.else367 ], [ 2, %if.then360 ], [ 2, %if.then364 ], !dbg !5662
  %threadp.6 = phi i8 [ 0, %if.then317 ], [ 0, %if.end308 ], [ %conv, %if.then328 ], [ 0, %if.then343 ], [ 0, %if.else344 ], [ 0, %if.then338 ], [ 0, %if.else339 ], [ 0, %sw.default346 ], [ %conv, %if.then381 ], [ %conv, %if.end376 ], [ %conv, %if.else391 ], [ 0, %if.then397 ], [ %conv, %if.then390 ], [ %conv, %if.else367 ], [ %conv, %if.then360 ], [ %conv, %if.then364 ], !dbg !5662
  call void @llvm.dbg.value(metadata i8 %threadp.6, metadata !5576, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %storage_class.3, metadata !5577, metadata !DIExpression()), !dbg !5662
  %73 = bitcast %union.tree_node** %type to i64**, !dbg !5933
  %sysp506 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp505, i64 0, i32 3, !dbg !5935
  %sysp769 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp768, i64 0, i32 3, !dbg !5937
  %cmp885 = icmp eq i32 %decl_context.addr.1, 2, !dbg !5939
  br label %while.cond404.outer.outer, !dbg !5941

while.cond404.outer.outer:                        ; preds = %if.end403, %sw.epilog1027
  %arg_info.0.ph.ph = phi %struct.c_arg_info* [ null, %if.end403 ], [ %arg_info.2, %sw.epilog1027 ]
  %returned_attrs.0.ph.ph = phi %union.tree_node* [ null, %if.end403 ], [ %returned_attrs.1, %sw.epilog1027 ]
  %array_parm_static.0.ph.ph = phi i32 [ 0, %if.end403 ], [ %array_parm_static.4, %sw.epilog1027 ]
  %array_ptr_attrs.0.ph.ph = phi %union.tree_node* [ null, %if.end403 ], [ %array_ptr_attrs.4, %sw.epilog1027 ]
  %array_ptr_quals.0.ph.ph = phi i32 [ 0, %if.end403 ], [ %array_ptr_quals.4, %sw.epilog1027 ]
  %size_varies.0.ph.ph = phi i8 [ %33, %if.end403 ], [ %size_varies.14, %sw.epilog1027 ]
  %type_quals.0.ph.ph = phi i32 [ %or274, %if.end403 ], [ %type_quals.2, %sw.epilog1027 ]
  %declarator.addr.0.ph.ph = phi %struct.c_declarator* [ %declarator, %if.end403 ], [ %declarator.addr.2, %sw.epilog1027 ]
  br label %while.cond404.outer, !dbg !5942

while.cond404.outer:                              ; preds = %while.cond404.outer.outer, %cleanup979
  %arg_info.0.ph = phi %struct.c_arg_info* [ %arg_info.1, %cleanup979 ], [ %arg_info.0.ph.ph, %while.cond404.outer.outer ]
  %array_parm_static.0.ph = phi i32 [ %array_parm_static.1.lcssa294, %cleanup979 ], [ %array_parm_static.0.ph.ph, %while.cond404.outer.outer ]
  %array_ptr_attrs.0.ph = phi %union.tree_node* [ null, %cleanup979 ], [ %array_ptr_attrs.0.ph.ph, %while.cond404.outer.outer ]
  %array_ptr_quals.0.ph = phi i32 [ %array_ptr_quals.1.lcssa290, %cleanup979 ], [ %array_ptr_quals.0.ph.ph, %while.cond404.outer.outer ]
  %size_varies.0.ph = phi i8 [ %size_varies.13, %cleanup979 ], [ %size_varies.0.ph.ph, %while.cond404.outer.outer ]
  %type_quals.0.ph = phi i32 [ %type_quals.1, %cleanup979 ], [ %type_quals.0.ph.ph, %while.cond404.outer.outer ]
  %declarator.addr.0.ph = phi %struct.c_declarator* [ %declarator.addr.1, %cleanup979 ], [ %declarator.addr.0.ph.ph, %while.cond404.outer.outer ]
  %conv813 = and i32 %type_quals.0.ph, 65280, !dbg !5943
  %cmp814 = icmp eq i32 %conv813, 0, !dbg !5943
  %74 = lshr i32 %type_quals.0.ph, 8, !dbg !5945
  %conv817 = and i32 %74, 255, !dbg !5943
  br label %while.cond404.outer110, !dbg !5942

while.cond404.outer110:                           ; preds = %while.cond404.outer, %cleanup897
  %array_parm_static.0.ph111 = phi i32 [ %array_parm_static.0.ph, %while.cond404.outer ], [ %array_parm_static.3, %cleanup897 ]
  %array_ptr_attrs.0.ph112 = phi %union.tree_node* [ %array_ptr_attrs.0.ph, %while.cond404.outer ], [ %array_ptr_attrs.3, %cleanup897 ]
  %array_ptr_quals.0.ph113 = phi i32 [ %array_ptr_quals.0.ph, %while.cond404.outer ], [ %array_ptr_quals.3, %cleanup897 ]
  %size_varies.0.ph114 = phi i8 [ %size_varies.0.ph, %while.cond404.outer ], [ %size_varies.12, %cleanup897 ]
  %declarator.addr.0.ph116 = phi %struct.c_declarator* [ %declarator.addr.0.ph, %while.cond404.outer ], [ %92, %cleanup897 ]
  %75 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5946
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5946
  %cmp410 = icmp eq %union.tree_node* %75, %76, !dbg !5946
  br i1 %cmp410, label %while.cond404.outer110.split.us, label %while.cond404.outer110.while.cond404.outer110.split_crit_edge, !dbg !5942

while.cond404.outer110.while.cond404.outer110.split_crit_edge: ; preds = %while.cond404.outer110
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.0.ph, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.0.ph114, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.0.ph113, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.0.ph112, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.0.ph111, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %returned_attrs.0.ph.ph, metadata !5591, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.0.ph, metadata !5594, metadata !DIExpression()), !dbg !5662
  %tobool405 = icmp eq %struct.c_declarator* %declarator.addr.0.ph116, null, !dbg !5948
  br i1 %tobool405, label %while.end1028.us-lcssa, label %land.rhs, !dbg !5942

while.cond404.outer110.split.us:                  ; preds = %while.cond404.outer110
  %returned_attrs.0.ph.ph.lcssa = phi %union.tree_node* [ %returned_attrs.0.ph.ph, %while.cond404.outer110 ]
  %arg_info.0.ph.lcssa = phi %struct.c_arg_info* [ %arg_info.0.ph, %while.cond404.outer110 ]
  %type_quals.0.ph.lcssa = phi i32 [ %type_quals.0.ph, %while.cond404.outer110 ]
  %cmp814.lcssa = phi i1 [ %cmp814, %while.cond404.outer110 ], !dbg !5943
  %.lcssa299 = phi i32 [ %74, %while.cond404.outer110 ], !dbg !5945
  %array_ptr_attrs.0.ph112.lcssa = phi %union.tree_node* [ %array_ptr_attrs.0.ph112, %while.cond404.outer110 ]
  %array_ptr_quals.0.ph113.lcssa = phi i32 [ %array_ptr_quals.0.ph113, %while.cond404.outer110 ]
  %size_varies.0.ph114.lcssa = phi i8 [ %size_varies.0.ph114, %while.cond404.outer110 ]
  %declarator.addr.0.ph116.lcssa = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %while.cond404.outer110 ]
  br label %while.cond404.us, !dbg !5942

while.cond404.us:                                 ; preds = %while.body409.us, %while.cond404.outer110.split.us
  %declarator.addr.0.us = phi %struct.c_declarator* [ %78, %while.body409.us ], [ %declarator.addr.0.ph116.lcssa, %while.cond404.outer110.split.us ]
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.us, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.0.ph.lcssa, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.0.ph114.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.0.ph113.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.0.ph112.lcssa, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.0.ph111, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %returned_attrs.0.ph.ph.lcssa, metadata !5591, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.0.ph.lcssa, metadata !5594, metadata !DIExpression()), !dbg !5662
  %tobool405.us = icmp eq %struct.c_declarator* %declarator.addr.0.us, null, !dbg !5948
  br i1 %tobool405.us, label %while.end1028.us-lcssa.us, label %land.rhs.us, !dbg !5942

land.rhs.us:                                      ; preds = %while.cond404.us
  %kind406.us = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.us, i64 0, i32 0, !dbg !5949
  %77 = load i32, i32* %kind406.us, align 8, !dbg !5949
  %cmp407.us = icmp eq i32 %77, 0, !dbg !5950
  br i1 %cmp407.us, label %while.end1028.us-lcssa.us, label %while.body409.us, !dbg !5941

while.body409.us:                                 ; preds = %land.rhs.us
  call void @llvm.dbg.value(metadata %union.tree_node* %75, metadata !5575, metadata !DIExpression()), !dbg !5662
  %declarator413.us = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.us, i64 0, i32 1, !dbg !5951
  %78 = load %struct.c_declarator*, %struct.c_declarator** %declarator413.us, align 8, !dbg !5951
  call void @llvm.dbg.value(metadata %struct.c_declarator* %78, metadata !5566, metadata !DIExpression()), !dbg !5662
  br label %while.cond404.us, !dbg !5953, !llvm.loop !5954

while.end1028.us-lcssa.us:                        ; preds = %land.rhs.us, %while.cond404.us
  %declarator.addr.0.us.lcssa = phi %struct.c_declarator* [ %declarator.addr.0.us, %land.rhs.us ], [ %declarator.addr.0.us, %while.cond404.us ]
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.us.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.us.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.us.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.us.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  br label %while.end1028, !dbg !5956

land.rhs:                                         ; preds = %while.cond404.outer110.while.cond404.outer110.split_crit_edge
  %kind406 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 0, !dbg !5949
  %79 = load i32, i32* %kind406, align 8, !dbg !5949
  %cmp407 = icmp eq i32 %79, 0, !dbg !5950
  br i1 %cmp407, label %while.end1028.us-lcssa, label %while.body409, !dbg !5941

while.body409:                                    ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %75, metadata !5575, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116, metadata !5566, metadata !DIExpression()), !dbg !5662
  %cmp418 = icmp ne %union.tree_node* %array_ptr_attrs.0.ph112, null, !dbg !5957
  %80 = or i32 %array_ptr_quals.0.ph113, %array_parm_static.0.ph111, !dbg !5959
  %81 = icmp ne i32 %80, 0, !dbg !5959
  %82 = or i1 %81, %cmp418, !dbg !5959
  br i1 %82, label %if.then422, label %if.end423, !dbg !5959

if.then422:                                       ; preds = %while.body409
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.286, i64 0, i64 0)) #6, !dbg !5960
  call void @llvm.dbg.value(metadata i32 0, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5589, metadata !DIExpression()), !dbg !5662
  %.pre = load i32, i32* %kind406, align 8, !dbg !5962
  br label %if.end423, !dbg !5963

if.end423:                                        ; preds = %while.body409, %if.then422
  %83 = phi i32 [ %.pre, %if.then422 ], [ %79, %while.body409 ], !dbg !5962
  %array_parm_static.1 = phi i32 [ 0, %if.then422 ], [ %array_parm_static.0.ph111, %while.body409 ], !dbg !5662
  %array_ptr_quals.1 = phi i32 [ 0, %if.then422 ], [ %array_ptr_quals.0.ph113, %while.body409 ], !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1, metadata !5589, metadata !DIExpression()), !dbg !5662
  switch i32 %83, label %sw.default1026 [
    i32 4, label %sw.bb425
    i32 2, label %sw.bb458
    i32 1, label %sw.bb901
    i32 3, label %sw.bb982
  ], !dbg !5964

sw.bb425:                                         ; preds = %if.end423
  %arg_info.0.ph.lcssa323 = phi %struct.c_arg_info* [ %arg_info.0.ph, %if.end423 ]
  %type_quals.0.ph.lcssa315 = phi i32 [ %type_quals.0.ph, %if.end423 ]
  %array_parm_static.1.lcssa293 = phi i32 [ %array_parm_static.1, %if.end423 ], !dbg !5662
  %array_ptr_quals.1.lcssa289 = phi i32 [ %array_ptr_quals.1, %if.end423 ], !dbg !5662
  %size_varies.0.ph114.lcssa269 = phi i8 [ %size_varies.0.ph114, %if.end423 ]
  %declarator.addr.0.ph116.lcssa263 = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %if.end423 ]
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa293, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa289, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa293, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa289, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa293, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa289, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116.lcssa263, metadata !5566, metadata !DIExpression()), !dbg !5662
  %attrs427 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa263, i64 0, i32 3, i32 0, i32 0, !dbg !5965
  %84 = load %union.tree_node*, %union.tree_node** %attrs427, align 8, !dbg !5965
  call void @llvm.dbg.value(metadata %union.tree_node* %84, metadata !5604, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 0, metadata !5609, metadata !DIExpression()), !dbg !5966
  %declarator428 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa263, i64 0, i32 1, !dbg !5967
  %85 = load %struct.c_declarator*, %struct.c_declarator** %declarator428, align 8, !dbg !5967
  call void @llvm.dbg.value(metadata %struct.c_declarator* %85, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %85, metadata !5608, metadata !DIExpression()), !dbg !5966
  br label %while.cond429, !dbg !5968

while.cond429:                                    ; preds = %while.body433, %sw.bb425
  %inner_decl.0 = phi %struct.c_declarator* [ %85, %sw.bb425 ], [ %87, %while.body433 ], !dbg !5966
  call void @llvm.dbg.value(metadata %struct.c_declarator* %inner_decl.0, metadata !5608, metadata !DIExpression()), !dbg !5966
  %kind430 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %inner_decl.0, i64 0, i32 0, !dbg !5969
  %86 = load i32, i32* %kind430, align 8, !dbg !5969
  %cmp431 = icmp eq i32 %86, 4, !dbg !5970
  br i1 %cmp431, label %while.body433, label %while.end435, !dbg !5968

while.body433:                                    ; preds = %while.cond429
  %declarator434 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %inner_decl.0, i64 0, i32 1, !dbg !5971
  %87 = load %struct.c_declarator*, %struct.c_declarator** %declarator434, align 8, !dbg !5971
  call void @llvm.dbg.value(metadata %struct.c_declarator* %87, metadata !5608, metadata !DIExpression()), !dbg !5966
  br label %while.cond429, !dbg !5968, !llvm.loop !5972

while.end435:                                     ; preds = %while.cond429
  %.lcssa328 = phi i32 [ %86, %while.cond429 ], !dbg !5969
  call void @llvm.dbg.value(metadata %struct.c_declarator* %inner_decl.0, metadata !5608, metadata !DIExpression()), !dbg !5966
  %cmp437 = icmp eq i32 %.lcssa328, 0, !dbg !5973
  br i1 %cmp437, label %if.then439, label %if.else441, !dbg !5975

if.then439:                                       ; preds = %while.end435
  call void @llvm.dbg.value(metadata i32 1, metadata !5609, metadata !DIExpression()), !dbg !5966
  br label %if.end455, !dbg !5976

if.else441:                                       ; preds = %while.end435
  %cmp443 = icmp eq i32 %.lcssa328, 1, !dbg !5977
  br i1 %cmp443, label %if.then445, label %if.else447, !dbg !5979

if.then445:                                       ; preds = %if.else441
  call void @llvm.dbg.value(metadata i32 2, metadata !5609, metadata !DIExpression()), !dbg !5966
  br label %if.end455, !dbg !5980

if.else447:                                       ; preds = %if.else441
  %cmp449 = icmp eq i32 %.lcssa328, 2, !dbg !5981
  %spec.select26 = select i1 %cmp449, i32 4, i32 0, !dbg !5983
  call void @llvm.dbg.value(metadata i32 %spec.select26, metadata !5609, metadata !DIExpression()), !dbg !5966
  br label %if.end455

if.end455:                                        ; preds = %if.then445, %if.else447, %if.then439
  %attr_flags.2 = phi i32 [ 1, %if.then439 ], [ 2, %if.then445 ], [ %spec.select26, %if.else447 ], !dbg !5984
  call void @llvm.dbg.value(metadata i32 %attr_flags.2, metadata !5609, metadata !DIExpression()), !dbg !5966
  %call456 = call %union.tree_node* @chainon(%union.tree_node* %returned_attrs.0.ph.ph, %union.tree_node* %84) #6, !dbg !5985
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5575, metadata !DIExpression(DW_OP_deref)), !dbg !5662
  %call457 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %type, %union.tree_node* %call456, i32 %attr_flags.2) #6, !dbg !5986
  call void @llvm.dbg.value(metadata %union.tree_node* %call457, metadata !5591, metadata !DIExpression()), !dbg !5662
  br label %sw.epilog1027

sw.bb458:                                         ; preds = %if.end423
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5610, metadata !DIExpression()), !dbg !5987
  %dimen = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 3, i32 0, i32 0, !dbg !5988
  %88 = load %union.tree_node*, %union.tree_node** %dimen, align 8, !dbg !5988
  call void @llvm.dbg.value(metadata %union.tree_node* %88, metadata !5612, metadata !DIExpression()), !dbg !5987
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5989
  %call460 = call %union.tree_node* @c_common_signed_type(%union.tree_node* %89) #6, !dbg !5990
  call void @llvm.dbg.value(metadata %union.tree_node* %call460, metadata !5613, metadata !DIExpression()), !dbg !5987
  %quals = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 3, i32 0, i32 1, !dbg !5991
  %90 = load i32, i32* %quals, align 8, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %90, metadata !5587, metadata !DIExpression()), !dbg !5662
  %attrs465 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 3, i32 0, i32 2, !dbg !5992
  %91 = load %union.tree_node*, %union.tree_node** %attrs465, align 8, !dbg !5992
  call void @llvm.dbg.value(metadata %union.tree_node* %91, metadata !5588, metadata !DIExpression()), !dbg !5662
  %static_p = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 3, i32 0, i32 3, !dbg !5993
  %bf.load468 = load i8, i8* %static_p, align 8, !dbg !5993
  %bf.clear469 = and i8 %bf.load468, 1, !dbg !5993
  %bf.cast470 = zext i8 %bf.clear469 to i32, !dbg !5993
  call void @llvm.dbg.value(metadata i32 %bf.cast470, metadata !5589, metadata !DIExpression()), !dbg !5662
  %bf.lshr474 = lshr i8 %bf.load468, 1, !dbg !5994
  %bf.clear475 = and i8 %bf.lshr474, 1, !dbg !5994
  call void @llvm.dbg.value(metadata i8 %bf.clear475, metadata !5590, metadata !DIExpression()), !dbg !5662
  %declarator478 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116, i64 0, i32 1, !dbg !5995
  %92 = load %struct.c_declarator*, %struct.c_declarator** %declarator478, align 8, !dbg !5995
  call void @llvm.dbg.value(metadata %struct.c_declarator* %92, metadata !5566, metadata !DIExpression()), !dbg !5662
  %93 = load i64*, i64** %73, align 8, !dbg !5996
  %bf.load480 = load i64, i64* %93, align 8, !dbg !5996
  %bf.cast48294 = and i64 %bf.load480, 65535, !dbg !5996
  %cmp483 = icmp eq i64 %bf.cast48294, 19, !dbg !5996
  br i1 %cmp483, label %if.then485, label %if.end490, !dbg !5997

if.then485:                                       ; preds = %sw.bb458
  br i1 %cmp37, label %if.else488, label %if.then487, !dbg !5998

if.then487:                                       ; preds = %if.then485
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.287, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6000
  br label %if.end489, !dbg !6000

if.else488:                                       ; preds = %if.then485
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.288, i64 0, i64 0)) #6, !dbg !6002
  br label %if.end489

if.end489:                                        ; preds = %if.else488, %if.then487
  %94 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6003
  store i64 %94, i64* %3, align 8, !dbg !6004
  %95 = inttoptr i64 %94 to i64*, !dbg !6005
  %bf.load492.pre = load i64, i64* %95, align 8, !dbg !6006
  br label %if.end490, !dbg !6005

if.end490:                                        ; preds = %if.end489, %sw.bb458
  %bf.load492 = phi i64 [ %bf.load492.pre, %if.end489 ], [ %bf.load480, %sw.bb458 ], !dbg !6006
  %bf.cast49495 = and i64 %bf.load492, 65535, !dbg !6008
  %cmp495 = icmp eq i64 %bf.cast49495, 20, !dbg !6008
  br i1 %cmp495, label %if.then497, label %if.end502, !dbg !6009

if.then497:                                       ; preds = %if.end490
  br i1 %cmp37, label %if.else500, label %if.then499, !dbg !6010

if.then499:                                       ; preds = %if.then497
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.289, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6012
  br label %if.end501, !dbg !6012

if.else500:                                       ; preds = %if.then497
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.290, i64 0, i64 0)) #6, !dbg !6014
  br label %if.end501

if.end501:                                        ; preds = %if.else500, %if.then499
  %96 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6015
  store i64 %96, i64* %3, align 8, !dbg !6016
  br label %if.end502, !dbg !6017

if.end502:                                        ; preds = %if.end501, %if.end490
  %97 = load i32, i32* @pedantic, align 4, !dbg !6018
  %tobool503 = icmp eq i32 %97, 0, !dbg !6018
  br i1 %tobool503, label %if.end516, label %land.lhs.true504, !dbg !6019

land.lhs.true504:                                 ; preds = %if.end502
  %98 = load i32, i32* @input_location, align 4, !dbg !6020
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp505, i32 %98) #6, !dbg !6020
  %99 = load i8, i8* %sysp506, align 8, !dbg !6020
  %cmp508 = icmp eq i8 %99, 0, !dbg !6020
  br i1 %cmp508, label %land.lhs.true510, label %if.end516, !dbg !6021

land.lhs.true510:                                 ; preds = %land.lhs.true504
  %100 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6022
  call void @llvm.dbg.value(metadata %union.tree_node* %100, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call511 = call fastcc zeroext i8 @flexible_array_type_p(%union.tree_node* %100) #7, !dbg !6023
  %tobool513 = icmp eq i8 %call511, 0, !dbg !6023
  br i1 %tobool513, label %if.end516, label %if.then514, !dbg !6024

if.then514:                                       ; preds = %land.lhs.true510
  %call515 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.101, i64 0, i64 0)) #6, !dbg !6025
  br label %if.end516, !dbg !6025

if.end516:                                        ; preds = %land.lhs.true510, %land.lhs.true504, %if.end502, %if.then514
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6026
  %cmp517 = icmp eq %union.tree_node* %88, %101, !dbg !6028
  br i1 %cmp517, label %if.then519, label %if.end516.if.end520_crit_edge, !dbg !6029

if.end516.if.end520_crit_edge:                    ; preds = %if.end516
  %.pre179 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6030
  br label %if.end520, !dbg !6029

if.then519:                                       ; preds = %if.end516
  %102 = ptrtoint %union.tree_node* %101 to i64, !dbg !6029
  store i64 %102, i64* %3, align 8, !dbg !6032
  br label %if.end520, !dbg !6033

if.end520:                                        ; preds = %if.end516.if.end520_crit_edge, %if.then519
  %103 = phi %union.tree_node* [ %.pre179, %if.end516.if.end520_crit_edge ], [ %88, %if.then519 ], !dbg !6030
  call void @llvm.dbg.value(metadata %union.tree_node* %103, metadata !5575, metadata !DIExpression()), !dbg !5662
  %cmp521 = icmp eq %union.tree_node* %103, %101, !dbg !6034
  br i1 %cmp521, label %cleanup897, label %if.end524, !dbg !6035, !llvm.loop !5954

if.end524:                                        ; preds = %if.end520
  %tobool525 = icmp eq %union.tree_node* %88, null, !dbg !6036
  br i1 %tobool525, label %if.else742, label %if.then526, !dbg !6037

if.then526:                                       ; preds = %if.end524
  call void @llvm.dbg.value(metadata i8* %size_maybe_const, metadata !5614, metadata !DIExpression(DW_OP_deref)), !dbg !6038
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %size_maybe_const) #8, !dbg !6039
  call void @llvm.dbg.value(metadata i8 1, metadata !5614, metadata !DIExpression()), !dbg !6038
  store i8 1, i8* %size_maybe_const, align 1, !dbg !6040
  %104 = getelementptr inbounds %union.tree_node, %union.tree_node* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6041
  %bf.load528 = load i64, i64* %104, align 8, !dbg !6041
  %bf.cast53097 = and i64 %bf.load528, 65535, !dbg !6042
  %cmp531 = icmp eq i64 %bf.cast53097, 23, !dbg !6042
  br i1 %cmp531, label %land.rhs533, label %land.end540, !dbg !6043

land.rhs533:                                      ; preds = %if.then526
  %bf.cast538109 = and i64 %bf.load528, 134217728, !dbg !6044
  %tobool539 = icmp eq i64 %bf.cast538109, 0, !dbg !6044
  br label %land.end540

land.end540:                                      ; preds = %land.rhs533, %if.then526
  %105 = phi i1 [ false, %if.then526 ], [ %tobool539, %land.rhs533 ], !dbg !6038
  call void @llvm.dbg.value(metadata i1 %105, metadata !5617, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 0, metadata !5618, metadata !DIExpression()), !dbg !6038
  br label %while.cond542, !dbg !6045

while.cond542:                                    ; preds = %while.body577, %land.end540
  %bf.load558 = phi i64 [ %bf.load528, %land.end540 ], [ %bf.load544.pre, %while.body577 ], !dbg !6045
  %size.0 = phi %union.tree_node* [ %88, %land.end540 ], [ %108, %while.body577 ], !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0, metadata !5612, metadata !DIExpression()), !dbg !5987
  %bf.cast54698 = and i64 %bf.load558, 65535, !dbg !6045
  %cmp547 = icmp eq i64 %bf.cast54698, 116, !dbg !6045
  br i1 %cmp547, label %land.lhs.true563, label %lor.lhs.false549, !dbg !6045

lor.lhs.false549:                                 ; preds = %while.cond542
  %106 = or i64 %bf.cast54698, 4, !dbg !6045
  %107 = icmp eq i64 %106, 117, !dbg !6045
  br i1 %107, label %land.lhs.true563, label %while.end581, !dbg !6045

land.lhs.true563:                                 ; preds = %lor.lhs.false549, %while.cond542
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6045
  %108 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6045
  %cmp564 = icmp eq %union.tree_node* %108, %101, !dbg !6045
  br i1 %cmp564, label %while.end581, label %land.rhs566, !dbg !6045

land.rhs566:                                      ; preds = %land.lhs.true563
  %type567 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6045
  %109 = load %union.tree_node*, %union.tree_node** %type567, align 8, !dbg !6045
  %type572 = getelementptr inbounds %union.tree_node, %union.tree_node* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6045
  %110 = load %union.tree_node*, %union.tree_node** %type572, align 8, !dbg !6045
  %cmp573 = icmp eq %union.tree_node* %109, %110, !dbg !6045
  br i1 %cmp573, label %while.body577, label %while.end581, !dbg !6045

while.body577:                                    ; preds = %land.rhs566
  call void @llvm.dbg.value(metadata %union.tree_node* %108, metadata !5612, metadata !DIExpression()), !dbg !5987
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6038
  %bf.load544.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6045
  br label %while.cond542, !dbg !6045, !llvm.loop !6046

while.end581:                                     ; preds = %lor.lhs.false549, %land.lhs.true563, %land.rhs566
  %size.0.lcssa = phi %union.tree_node* [ %size.0, %lor.lhs.false549 ], [ %size.0, %land.lhs.true563 ], [ %size.0, %land.rhs566 ], !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.0.lcssa, metadata !5612, metadata !DIExpression()), !dbg !5987
  %type583 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6047
  %111 = bitcast %union.tree_node** %type583 to i64**, !dbg !6047
  %112 = load i64*, i64** %111, align 8, !dbg !6047
  %bf.load585 = load i64, i64* %112, align 8, !dbg !6047
  %bf.cast587101 = and i64 %bf.load585, 65535, !dbg !6047
  %cmp588 = icmp eq i64 %bf.cast587101, 6, !dbg !6047
  br i1 %cmp588, label %if.end613, label %lor.lhs.false590, !dbg !6047

lor.lhs.false590:                                 ; preds = %while.end581
  %cmp597 = icmp eq i64 %bf.cast587101, 7, !dbg !6047
  br i1 %cmp597, label %if.end613, label %lor.lhs.false599, !dbg !6047

lor.lhs.false599:                                 ; preds = %lor.lhs.false590
  %cmp606 = icmp eq i64 %bf.cast587101, 8, !dbg !6047
  br i1 %cmp606, label %if.end613, label %if.then608, !dbg !6049

if.then608:                                       ; preds = %lor.lhs.false599
  br i1 %cmp37, label %if.else611, label %if.then610, !dbg !6050

if.then610:                                       ; preds = %if.then608
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.291, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6052
  br label %if.end612, !dbg !6052

if.else611:                                       ; preds = %if.then608
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.292, i64 0, i64 0)) #6, !dbg !6054
  br label %if.end612

if.end612:                                        ; preds = %if.else611, %if.then610
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !6055
  call void @llvm.dbg.value(metadata %union.tree_node* %113, metadata !5612, metadata !DIExpression()), !dbg !5987
  br label %if.end613, !dbg !6056

if.end613:                                        ; preds = %if.end612, %lor.lhs.false599, %lor.lhs.false590, %while.end581
  %size.1 = phi %union.tree_node* [ %size.0.lcssa, %while.end581 ], [ %size.0.lcssa, %lor.lhs.false590 ], [ %size.0.lcssa, %lor.lhs.false599 ], [ %113, %if.end612 ], !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %size.1, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i8* %size_maybe_const, metadata !5614, metadata !DIExpression(DW_OP_deref)), !dbg !6038
  %call614 = call %union.tree_node* @c_fully_fold(%union.tree_node* %size.1, i8 zeroext 0, i8* nonnull %size_maybe_const) #6, !dbg !6057
  call void @llvm.dbg.value(metadata %union.tree_node* %call614, metadata !5612, metadata !DIExpression()), !dbg !5987
  %114 = load i32, i32* @pedantic, align 4, !dbg !6058
  %tobool615 = icmp eq i32 %114, 0, !dbg !6058
  br i1 %tobool615, label %if.end629, label %land.lhs.true616, !dbg !6060

land.lhs.true616:                                 ; preds = %if.end613
  %115 = load i8, i8* %size_maybe_const, align 1, !dbg !6061
  call void @llvm.dbg.value(metadata i8 %115, metadata !5614, metadata !DIExpression()), !dbg !6038
  %tobool618 = icmp eq i8 %115, 0, !dbg !6061
  br i1 %tobool618, label %if.end629, label %land.lhs.true619, !dbg !6062

land.lhs.true619:                                 ; preds = %land.lhs.true616
  %call620 = call i32 @integer_zerop(%union.tree_node* %call614) #6, !dbg !6063
  %tobool621 = icmp eq i32 %call620, 0, !dbg !6063
  br i1 %tobool621, label %if.end629, label %if.then622, !dbg !6064

if.then622:                                       ; preds = %land.lhs.true619
  br i1 %cmp37, label %if.else626, label %if.then624, !dbg !6065

if.then624:                                       ; preds = %if.then622
  %call625 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.293, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6067
  br label %if.end629, !dbg !6067

if.else626:                                       ; preds = %if.then622
  %call627 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.294, i64 0, i64 0)) #6, !dbg !6069
  br label %if.end629

if.end629:                                        ; preds = %land.lhs.true619, %land.lhs.true616, %if.end613, %if.then624, %if.else626
  %116 = getelementptr inbounds %union.tree_node, %union.tree_node* %call614, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6070
  %bf.load631 = load i64, i64* %116, align 8, !dbg !6070
  %bf.cast633104 = and i64 %bf.load631, 65535, !dbg !6072
  %cmp634 = icmp eq i64 %bf.cast633104, 23, !dbg !6072
  br i1 %cmp634, label %land.lhs.true636, label %if.else664, !dbg !6073

land.lhs.true636:                                 ; preds = %if.end629
  %117 = load i8, i8* %size_maybe_const, align 1, !dbg !6074
  call void @llvm.dbg.value(metadata i8 %117, metadata !5614, metadata !DIExpression()), !dbg !6038
  %tobool638 = icmp eq i8 %117, 0, !dbg !6074
  br i1 %tobool638, label %if.else664, label %if.then639, !dbg !6075

if.then639:                                       ; preds = %land.lhs.true636
  call void @constant_expression_warning(%union.tree_node* %call614) #6, !dbg !6076
  %call640 = call i32 @tree_int_cst_sgn(%union.tree_node* %call614) #6, !dbg !6078
  %cmp641 = icmp slt i32 %call640, 0, !dbg !6080
  br i1 %cmp641, label %if.then643, label %if.end648, !dbg !6081

if.then643:                                       ; preds = %if.then639
  br i1 %cmp37, label %if.else646, label %if.then645, !dbg !6082

if.then645:                                       ; preds = %if.then643
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.295, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6084
  br label %if.end647, !dbg !6084

if.else646:                                       ; preds = %if.then643
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.296, i64 0, i64 0)) #6, !dbg !6086
  br label %if.end647

if.end647:                                        ; preds = %if.else646, %if.then645
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !6087
  call void @llvm.dbg.value(metadata %union.tree_node* %118, metadata !5612, metadata !DIExpression()), !dbg !5987
  br label %if.end648, !dbg !6088

if.end648:                                        ; preds = %if.end647, %if.then639
  %size.2 = phi %union.tree_node* [ %118, %if.end647 ], [ %call614, %if.then639 ], !dbg !6038
  call void @llvm.dbg.value(metadata %union.tree_node* %size.2, metadata !5612, metadata !DIExpression()), !dbg !5987
  br i1 %105, label %if.end676, label %if.then650, !dbg !6089

if.then650:                                       ; preds = %if.end648
  switch i32 %decl_context.addr.1, label %if.end662 [
    i32 0, label %land.lhs.true656
    i32 3, label %land.lhs.true656
  ], !dbg !6090

land.lhs.true656:                                 ; preds = %if.then650, %if.then650
  %119 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6094
  %120 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6095
  %cmp657 = icmp eq %struct.c_scope* %119, %120, !dbg !6096
  br i1 %cmp657, label %if.then659, label %if.end662, !dbg !6097

if.then659:                                       ; preds = %land.lhs.true656
  %121 = load i32, i32* @input_location, align 4, !dbg !6098
  %call660 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %121, i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.263, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6099
  br label %if.end662, !dbg !6099

if.end662:                                        ; preds = %land.lhs.true656, %if.then650, %if.then659
  %size_varies.1 = phi i8 [ %size_varies.0.ph114, %if.then659 ], [ 1, %if.then650 ], [ 1, %land.lhs.true656 ], !dbg !5662
  %this_size_varies.0 = phi i8 [ 0, %if.then659 ], [ 1, %if.then650 ], [ 1, %land.lhs.true656 ], !dbg !6038
  call void @llvm.dbg.value(metadata i8 %this_size_varies.0, metadata !5618, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 %size_varies.1, metadata !5585, metadata !DIExpression()), !dbg !5662
  call fastcc void @warn_variable_length_array(%union.tree_node* %name.0.lcssa, %union.tree_node* %size.2) #7, !dbg !6100
  br label %if.end676, !dbg !6101

if.else664:                                       ; preds = %land.lhs.true636, %if.end629
  switch i32 %decl_context.addr.1, label %if.else674 [
    i32 0, label %land.lhs.true670
    i32 3, label %land.lhs.true670
  ], !dbg !6102

land.lhs.true670:                                 ; preds = %if.else664, %if.else664
  %122 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6104
  %123 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6105
  %cmp671 = icmp eq %struct.c_scope* %122, %123, !dbg !6106
  br i1 %cmp671, label %if.then673, label %if.else674, !dbg !6107

if.then673:                                       ; preds = %land.lhs.true670
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.263, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6108
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !6110
  call void @llvm.dbg.value(metadata %union.tree_node* %124, metadata !5612, metadata !DIExpression()), !dbg !5987
  br label %if.end676, !dbg !6111

if.else674:                                       ; preds = %if.else664, %land.lhs.true670
  call void @llvm.dbg.value(metadata i8 1, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 1, metadata !5618, metadata !DIExpression()), !dbg !6038
  call fastcc void @warn_variable_length_array(%union.tree_node* %name.0.lcssa, %union.tree_node* %call614) #7, !dbg !6112
  br label %if.end676

if.end676:                                        ; preds = %if.then673, %if.else674, %if.end648, %if.end662
  %size.4 = phi %union.tree_node* [ %size.2, %if.end662 ], [ %size.2, %if.end648 ], [ %124, %if.then673 ], [ %call614, %if.else674 ], !dbg !6114
  %size_varies.4 = phi i8 [ %size_varies.1, %if.end662 ], [ %size_varies.0.ph114, %if.end648 ], [ %size_varies.0.ph114, %if.then673 ], [ 1, %if.else674 ], !dbg !6115
  %this_size_varies.3 = phi i8 [ %this_size_varies.0, %if.end662 ], [ 0, %if.end648 ], [ 0, %if.then673 ], [ 1, %if.else674 ], !dbg !6116
  call void @llvm.dbg.value(metadata i8 %this_size_varies.3, metadata !5618, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 %size_varies.4, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %size.4, metadata !5612, metadata !DIExpression()), !dbg !5987
  %call677 = call i32 @integer_zerop(%union.tree_node* %size.4) #6, !dbg !6117
  %tobool678 = icmp eq i32 %call677, 0, !dbg !6117
  %tobool680 = icmp ne i8 %this_size_varies.3, 0, !dbg !6119
  %or.cond28 = or i1 %tobool678, %tobool680, !dbg !6120
  br i1 %or.cond28, label %if.else683, label %if.then681, !dbg !6120

if.then681:                                       ; preds = %if.end676
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6121
  %call682 = call %union.tree_node* @build_range_type(%union.tree_node* %125, %union.tree_node* %size.4, %union.tree_node* null) #6, !dbg !6123
  call void @llvm.dbg.value(metadata %union.tree_node* %call682, metadata !5610, metadata !DIExpression()), !dbg !5987
  br label %if.end725, !dbg !6124

if.else683:                                       ; preds = %if.end676
  %tobool684 = icmp eq i8 %size_varies.4, 0, !dbg !6125
  br i1 %tobool684, label %if.end687, label %if.then685, !dbg !6128

if.then685:                                       ; preds = %if.else683
  %call686 = call fastcc %union.tree_node* @c_variable_size(%union.tree_node* %size.4) #7, !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %call686, metadata !5612, metadata !DIExpression()), !dbg !5987
  br label %if.end687, !dbg !6130

if.end687:                                        ; preds = %if.else683, %if.then685
  %size.5 = phi %union.tree_node* [ %call686, %if.then685 ], [ %size.4, %if.else683 ], !dbg !6038
  call void @llvm.dbg.value(metadata %union.tree_node* %size.5, metadata !5612, metadata !DIExpression()), !dbg !5987
  %tobool689 = icmp eq i8 %this_size_varies.3, 0, !dbg !6131
  br i1 %tobool689, label %if.end701, label %land.lhs.true690, !dbg !6133

land.lhs.true690:                                 ; preds = %if.end687
  %126 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6134
  %bf.load692 = load i64, i64* %126, align 8, !dbg !6134
  %bf.cast694108 = and i64 %bf.load692, 65535, !dbg !6135
  %cmp695 = icmp eq i64 %bf.cast694108, 23, !dbg !6135
  br i1 %cmp695, label %if.then697, label %if.end701, !dbg !6136

if.then697:                                       ; preds = %land.lhs.true690
  %type699 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6137
  %127 = load %union.tree_node*, %union.tree_node** %type699, align 8, !dbg !6137
  %128 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6137
  %call700 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %127, %union.tree_node* %128, %union.tree_node* %size.5) #6, !dbg !6137
  call void @llvm.dbg.value(metadata %union.tree_node* %call700, metadata !5612, metadata !DIExpression()), !dbg !5987
  br label %if.end701, !dbg !6138

if.end701:                                        ; preds = %if.end687, %if.then697, %land.lhs.true690
  %size.6 = phi %union.tree_node* [ %call700, %if.then697 ], [ %size.5, %land.lhs.true690 ], [ %size.5, %if.end687 ], !dbg !6139
  call void @llvm.dbg.value(metadata %union.tree_node* %size.6, metadata !5612, metadata !DIExpression()), !dbg !5987
  %call702 = call %union.tree_node* @convert(%union.tree_node* %call460, %union.tree_node* %size.6) #6, !dbg !6140
  %129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !6140
  %call703 = call %union.tree_node* @convert(%union.tree_node* %call460, %union.tree_node* %129) #6, !dbg !6140
  %call704 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc.0.lcssa, i32 64, %union.tree_node* %call460, %union.tree_node* %call702, %union.tree_node* %call703) #6, !dbg !6140
  call void @llvm.dbg.value(metadata %union.tree_node* %call704, metadata !5610, metadata !DIExpression()), !dbg !5987
  %130 = getelementptr inbounds %union.tree_node, %union.tree_node* %call704, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6141
  %bf.load706 = load i64, i64* %130, align 8, !dbg !6141
  %bf.cast708106 = and i64 %bf.load706, 65535, !dbg !6143
  %cmp709 = icmp eq i64 %bf.cast708106, 23, !dbg !6143
  br i1 %cmp709, label %land.lhs.true711, label %if.end723, !dbg !6144

land.lhs.true711:                                 ; preds = %if.end701
  %bf.cast716107 = and i64 %bf.load706, 134217728, !dbg !6145
  %tobool717 = icmp eq i64 %bf.cast716107, 0, !dbg !6145
  br i1 %tobool717, label %if.end723, label %if.then718, !dbg !6146

if.then718:                                       ; preds = %land.lhs.true711
  br i1 %cmp37, label %if.else721, label %if.then720, !dbg !6147

if.then720:                                       ; preds = %if.then718
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.297, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6149
  br label %if.end722, !dbg !6149

if.else721:                                       ; preds = %if.then718
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.298, i64 0, i64 0)) #6, !dbg !6151
  br label %if.end722

if.end722:                                        ; preds = %if.else721, %if.then720
  %131 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6152
  store i64 %131, i64* %3, align 8, !dbg !6153
  br label %cleanup, !dbg !6154, !llvm.loop !5954

if.end723:                                        ; preds = %land.lhs.true711, %if.end701
  %call724 = call %union.tree_node* @build_index_type(%union.tree_node* %call704) #6, !dbg !6155
  call void @llvm.dbg.value(metadata %union.tree_node* %call724, metadata !5610, metadata !DIExpression()), !dbg !5987
  br label %if.end725

if.end725:                                        ; preds = %if.end723, %if.then681
  %itype.0 = phi %union.tree_node* [ %call724, %if.end723 ], [ %call682, %if.then681 ], !dbg !6156
  %size.7 = phi %union.tree_node* [ %size.6, %if.end723 ], [ %size.4, %if.then681 ], !dbg !6038
  call void @llvm.dbg.value(metadata %union.tree_node* %size.7, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %itype.0, metadata !5610, metadata !DIExpression()), !dbg !5987
  %tobool726 = icmp eq i8 %this_size_varies.3, 0, !dbg !6157
  br i1 %tobool726, label %cleanup, label %if.then727, !dbg !6159

if.then727:                                       ; preds = %if.end725
  %132 = load %union.tree_node*, %union.tree_node** %spec.select, align 8, !dbg !6160
  %tobool728 = icmp eq %union.tree_node* %132, null, !dbg !6160
  br i1 %tobool728, label %if.else733, label %if.then729, !dbg !6163

if.then729:                                       ; preds = %if.then727
  %type731 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6164
  %133 = load %union.tree_node*, %union.tree_node** %type731, align 8, !dbg !6164
  %call732 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %133, %union.tree_node* nonnull %132, %union.tree_node* %size.7) #6, !dbg !6164
  br label %if.end734, !dbg !6165

if.else733:                                       ; preds = %if.then727
  br label %if.end734

if.end734:                                        ; preds = %if.else733, %if.then729
  %storemerge = phi %union.tree_node* [ %size.7, %if.else733 ], [ %call732, %if.then729 ], !dbg !6166
  store %union.tree_node* %storemerge, %union.tree_node** %spec.select, align 8, !dbg !6166
  %134 = load i8, i8* %size_maybe_const, align 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8 %134, metadata !5614, metadata !DIExpression()), !dbg !6038
  %135 = load i8, i8* %expr_const_operands.addr.0, align 1, !dbg !6168
  %and737105 = and i8 %135, %134, !dbg !6168
  store i8 %and737105, i8* %expr_const_operands.addr.0, align 1, !dbg !6168
  br label %cleanup, !dbg !6169

cleanup:                                          ; preds = %if.end725, %if.end734, %if.end722
  %cleanup.dest.slot.0 = phi i32 [ 6, %if.end722 ], [ 0, %if.end734 ], [ 0, %if.end725 ]
  %itype.1 = phi %union.tree_node* [ %call704, %if.end722 ], [ %itype.0, %if.end734 ], [ %itype.0, %if.end725 ], !dbg !6139
  %size.8 = phi %union.tree_node* [ %size.6, %if.end722 ], [ %size.7, %if.end734 ], [ %size.7, %if.end725 ], !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* %size.8, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %itype.1, metadata !5610, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i8* %size_maybe_const, metadata !5614, metadata !DIExpression(DW_OP_deref)), !dbg !6038
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %size_maybe_const) #8, !dbg !6171
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end804, label %cleanup897

if.else742:                                       ; preds = %if.end524
  switch i32 %decl_context.addr.1, label %if.end804 [
    i32 3, label %if.then745
    i32 2, label %if.then787
    i32 4, label %if.then795
  ], !dbg !6172

if.then745:                                       ; preds = %if.else742
  call void @llvm.dbg.value(metadata i8 0, metadata !5619, metadata !DIExpression()), !dbg !6173
  %tobool746 = icmp eq i8 %bf.clear475, 0, !dbg !6174
  br i1 %tobool746, label %while.cond749.preheader, label %if.end760, !dbg !6175

while.cond749.preheader:                          ; preds = %if.then745
  br label %while.cond749, !dbg !6176

while.cond749:                                    ; preds = %while.cond749.preheader, %while.body753
  %t.0 = phi %struct.c_declarator* [ %137, %while.body753 ], [ %92, %while.cond749.preheader ], !dbg !6177
  call void @llvm.dbg.value(metadata %struct.c_declarator* %t.0, metadata !5622, metadata !DIExpression()), !dbg !6177
  %kind750 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %t.0, i64 0, i32 0, !dbg !6178
  %136 = load i32, i32* %kind750, align 8, !dbg !6178
  %cmp751 = icmp eq i32 %136, 4, !dbg !6179
  br i1 %cmp751, label %while.body753, label %while.end755, !dbg !6176

while.body753:                                    ; preds = %while.cond749
  %declarator754 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %t.0, i64 0, i32 1, !dbg !6180
  %137 = load %struct.c_declarator*, %struct.c_declarator** %declarator754, align 8, !dbg !6180
  call void @llvm.dbg.value(metadata %struct.c_declarator* %137, metadata !5622, metadata !DIExpression()), !dbg !6177
  br label %while.cond749, !dbg !6176, !llvm.loop !6181

while.end755:                                     ; preds = %while.cond749
  %.lcssa = phi i32 [ %136, %while.cond749 ], !dbg !6178
  call void @llvm.dbg.value(metadata %struct.c_declarator* %t.0, metadata !5622, metadata !DIExpression()), !dbg !6177
  %cmp757 = icmp eq i32 %.lcssa, 0, !dbg !6182
  %conv759 = zext i1 %cmp757 to i8, !dbg !6183
  call void @llvm.dbg.value(metadata i8 %conv759, metadata !5619, metadata !DIExpression()), !dbg !6173
  br label %if.end760

if.end760:                                        ; preds = %if.then745, %while.end755
  %size_varies.5 = phi i8 [ %size_varies.0.ph114, %while.end755 ], [ 1, %if.then745 ], !dbg !5662
  %flexible_array_member.0 = phi i8 [ %conv759, %while.end755 ], [ 0, %if.then745 ], !dbg !6173
  call void @llvm.dbg.value(metadata i8 %flexible_array_member.0, metadata !5619, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8 %size_varies.5, metadata !5585, metadata !DIExpression()), !dbg !5662
  %tobool762 = icmp eq i8 %flexible_array_member.0, 0, !dbg !6184
  %138 = load i32, i32* @pedantic, align 4, !dbg !6185
  %tobool764 = icmp eq i32 %138, 0, !dbg !6185
  %or.cond29.not = or i1 %tobool764, %tobool762, !dbg !6186
  %139 = load i32, i32* @flag_isoc99, align 4, !dbg !6187
  %tobool766 = icmp ne i32 %139, 0, !dbg !6187
  %or.cond30 = or i1 %or.cond29.not, %tobool766, !dbg !6186
  br i1 %or.cond30, label %if.end775, label %land.lhs.true767, !dbg !6186

land.lhs.true767:                                 ; preds = %if.end760
  %140 = load i32, i32* @input_location, align 4, !dbg !6188
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp768, i32 %140) #6, !dbg !6188
  %141 = load i8, i8* %sysp769, align 8, !dbg !6188
  %cmp771 = icmp eq i8 %141, 0, !dbg !6188
  br i1 %cmp771, label %if.then773, label %if.end775, !dbg !6189

if.then773:                                       ; preds = %land.lhs.true767
  %call774 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.299, i64 0, i64 0)) #6, !dbg !6190
  br label %if.end775, !dbg !6190

if.end775:                                        ; preds = %land.lhs.true767, %if.end760, %if.then773
  %142 = or i8 %flexible_array_member.0, %bf.clear475, !dbg !6191
  %143 = icmp eq i8 %142, 0, !dbg !6191
  br i1 %143, label %if.end804, label %if.then781, !dbg !6191

if.then781:                                       ; preds = %if.end775
  %144 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6193
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !6194
  %call782 = call %union.tree_node* @build_range_type(%union.tree_node* %144, %union.tree_node* %145, %union.tree_node* null) #6, !dbg !6195
  call void @llvm.dbg.value(metadata %union.tree_node* %call782, metadata !5610, metadata !DIExpression()), !dbg !5987
  br label %if.end804, !dbg !6196

if.then787:                                       ; preds = %if.else742
  %tobool788 = icmp eq i8 %bf.clear475, 0, !dbg !6197
  br i1 %tobool788, label %if.end804, label %if.then789, !dbg !6201

if.then789:                                       ; preds = %if.then787
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6202
  %147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !6204
  %call790 = call %union.tree_node* @build_range_type(%union.tree_node* %146, %union.tree_node* %147, %union.tree_node* null) #6, !dbg !6205
  call void @llvm.dbg.value(metadata %union.tree_node* %call790, metadata !5610, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i8 1, metadata !5585, metadata !DIExpression()), !dbg !5662
  br label %if.end804, !dbg !6206

if.then795:                                       ; preds = %if.else742
  %tobool796 = icmp eq i8 %bf.clear475, 0, !dbg !6207
  br i1 %tobool796, label %if.end804, label %if.then797, !dbg !6211

if.then797:                                       ; preds = %if.then795
  %call798 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i64 0, i64 0)) #6, !dbg !6212
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6214
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !6215
  %call799 = call %union.tree_node* @build_range_type(%union.tree_node* %148, %union.tree_node* %149, %union.tree_node* null) #6, !dbg !6216
  call void @llvm.dbg.value(metadata %union.tree_node* %call799, metadata !5610, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i8 1, metadata !5585, metadata !DIExpression()), !dbg !5662
  br label %if.end804, !dbg !6217

if.end804:                                        ; preds = %if.end775, %if.then787, %if.then795, %if.then781, %if.else742, %if.then797, %if.then789, %cleanup
  %itype.8 = phi %union.tree_node* [ %itype.1, %cleanup ], [ %call782, %if.then781 ], [ null, %if.end775 ], [ %call790, %if.then789 ], [ null, %if.then787 ], [ null, %if.else742 ], [ %call799, %if.then797 ], [ null, %if.then795 ], !dbg !6218
  %size.9 = phi %union.tree_node* [ %size.8, %cleanup ], [ null, %if.then781 ], [ null, %if.end775 ], [ null, %if.then789 ], [ null, %if.then787 ], [ null, %if.else742 ], [ null, %if.then797 ], [ null, %if.then795 ], !dbg !5987
  %size_varies.11 = phi i8 [ %size_varies.4, %cleanup ], [ %size_varies.5, %if.then781 ], [ %size_varies.5, %if.end775 ], [ 1, %if.then789 ], [ %size_varies.0.ph114, %if.then787 ], [ %size_varies.0.ph114, %if.else742 ], [ 1, %if.then797 ], [ %size_varies.0.ph114, %if.then795 ], !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.11, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %size.9, metadata !5612, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %itype.8, metadata !5610, metadata !DIExpression()), !dbg !5987
  %150 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6219
  %size806 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %150, i64 0, i32 2, !dbg !6219
  %151 = load %union.tree_node*, %union.tree_node** %size806, align 8, !dbg !6219
  %cmp807 = icmp eq %union.tree_node* %151, null, !dbg !6219
  %152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %150, i64 0, i32 0, i32 0, i32 0, !dbg !6220
  %153 = bitcast %struct.tree_type* %150 to %union.tree_node*, !dbg !6220
  br i1 %cmp807, label %if.then809, label %if.else810, !dbg !6220

if.then809:                                       ; preds = %if.end804
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.301, i64 0, i64 0)) #6, !dbg !6221
  %154 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6223
  store i64 %154, i64* %3, align 8, !dbg !6224
  %155 = inttoptr i64 %154 to %union.tree_node*, !dbg !6225
  %156 = inttoptr i64 %154 to %struct.tree_type*, !dbg !6225
  br label %if.end831, !dbg !6225

if.else810:                                       ; preds = %if.end804
  br i1 %cmp814, label %if.end829, label %land.lhs.true816, !dbg !6226

land.lhs.true816:                                 ; preds = %if.else810
  %bf.load819 = load i64, i64* %152, align 8, !dbg !6227
  %bf.lshr820 = lshr i64 %bf.load819, 56, !dbg !6227
  %bf.cast821 = trunc i64 %bf.lshr820 to i32, !dbg !6227
  %cmp822 = icmp eq i32 %conv817, %bf.cast821, !dbg !6228
  br i1 %cmp822, label %if.end829, label %if.then824, !dbg !6229

if.then824:                                       ; preds = %land.lhs.true816
  call void @llvm.dbg.value(metadata %union.tree_node* %153, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call828 = call %union.tree_node* @build_qualified_type(%union.tree_node* %153, i32 %conv813) #6, !dbg !6230
  call void @llvm.dbg.value(metadata %union.tree_node* %call828, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call828, %union.tree_node** %type, align 8, !dbg !6231
  br label %if.end829, !dbg !6232

if.end829:                                        ; preds = %land.lhs.true816, %if.then824, %if.else810
  %157 = phi %union.tree_node* [ %153, %land.lhs.true816 ], [ %call828, %if.then824 ], [ %153, %if.else810 ], !dbg !6233
  call void @llvm.dbg.value(metadata %union.tree_node* %157, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call830 = call %union.tree_node* @build_array_type(%union.tree_node* %157, %union.tree_node* %itype.8) #6, !dbg !6234
  call void @llvm.dbg.value(metadata %union.tree_node* %call830, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call830, %union.tree_node** %type, align 8, !dbg !6235
  %.pre181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6236
  %158 = bitcast %union.tree_node* %call830 to %struct.tree_type*
  br label %if.end831

if.end831:                                        ; preds = %if.end829, %if.then809
  %159 = phi %struct.tree_type* [ %158, %if.end829 ], [ %156, %if.then809 ]
  %160 = phi %struct.tree_type* [ %158, %if.end829 ], [ %156, %if.then809 ]
  %161 = phi %union.tree_node* [ %.pre181, %if.end829 ], [ %155, %if.then809 ], !dbg !6236
  %162 = phi %union.tree_node* [ %call830, %if.end829 ], [ %155, %if.then809 ], !dbg !6238
  call void @llvm.dbg.value(metadata %union.tree_node* %162, metadata !5575, metadata !DIExpression()), !dbg !5662
  %cmp832 = icmp eq %union.tree_node* %162, %161, !dbg !6239
  br i1 %cmp832, label %if.end884, label %if.then834, !dbg !6240

if.then834:                                       ; preds = %if.end831
  %tobool835 = icmp eq i8 %size_varies.11, 0, !dbg !6241
  br i1 %tobool835, label %if.end854, label %if.then836, !dbg !6244

if.then836:                                       ; preds = %if.then834
  %tobool837 = icmp eq %union.tree_node* %size.9, null, !dbg !6245
  br i1 %tobool837, label %if.end849, label %land.lhs.true838, !dbg !6248

land.lhs.true838:                                 ; preds = %if.then836
  %163 = getelementptr inbounds %union.tree_node, %union.tree_node* %size.9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6249
  %bf.load840 = load i64, i64* %163, align 8, !dbg !6249
  %bf.cast84296 = and i64 %bf.load840, 65535, !dbg !6250
  %cmp843 = icmp eq i64 %bf.cast84296, 23, !dbg !6250
  br i1 %cmp843, label %if.then845, label %if.end849, !dbg !6251

if.then845:                                       ; preds = %land.lhs.true838
  %main_variant847 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %160, i64 0, i32 16, !dbg !6252
  %164 = load %union.tree_node*, %union.tree_node** %main_variant847, align 8, !dbg !6252
  %call848 = call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %164) #6, !dbg !6253
  call void @llvm.dbg.value(metadata %union.tree_node* %call848, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call848, %union.tree_node** %type, align 8, !dbg !6254
  %165 = bitcast %union.tree_node* %call848 to %struct.tree_type*, !dbg !6255
  br label %if.end849, !dbg !6255

if.end849:                                        ; preds = %if.then836, %if.then845, %land.lhs.true838
  %166 = phi %struct.tree_type* [ %159, %if.then836 ], [ %165, %if.then845 ], [ %159, %land.lhs.true838 ], !dbg !6256
  %lang_flag_1851 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %166, i64 0, i32 6, !dbg !6256
  %bf.load852 = load i32, i32* %lang_flag_1851, align 4, !dbg !6257
  %bf.set = or i32 %bf.load852, 67108864, !dbg !6257
  store i32 %bf.set, i32* %lang_flag_1851, align 4, !dbg !6257
  br label %if.end854, !dbg !6258

if.end854:                                        ; preds = %if.then834, %if.end849
  %tobool855 = icmp eq %union.tree_node* %size.9, null, !dbg !6259
  br i1 %tobool855, label %if.end869, label %land.lhs.true856, !dbg !6261

land.lhs.true856:                                 ; preds = %if.end854
  %call857 = call i32 @integer_zerop(%union.tree_node* nonnull %size.9) #6, !dbg !6262
  %tobool858 = icmp eq i32 %call857, 0, !dbg !6262
  br i1 %tobool858, label %if.end869, label %if.then859, !dbg !6263

if.then859:                                       ; preds = %land.lhs.true856
  %tobool860 = icmp eq %union.tree_node* %itype.8, null, !dbg !6264
  br i1 %tobool860, label %cond.true861, label %cond.end863, !dbg !6264

cond.true861:                                     ; preds = %if.then859
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6264
  br label %cond.end863, !dbg !6264

cond.end863:                                      ; preds = %if.then859, %cond.true861
  %167 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !6266
  %168 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6267
  %size866 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %168, i64 0, i32 2, !dbg !6267
  %169 = bitcast %union.tree_node** %size866 to i64*, !dbg !6268
  store i64 %167, i64* %169, align 8, !dbg !6268
  %170 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !6269
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %168, i64 0, i32 3, !dbg !6270
  %171 = bitcast %union.tree_node** %size_unit to i64*, !dbg !6271
  store i64 %170, i64* %171, align 8, !dbg !6271
  %canonical = getelementptr inbounds %struct.tree_type, %struct.tree_type* %168, i64 0, i32 19, !dbg !6272
  store %union.tree_node* null, %union.tree_node** %canonical, align 8, !dbg !6272
  br label %if.end869, !dbg !6273

if.end869:                                        ; preds = %land.lhs.true856, %if.end854, %cond.end863
  %tobool870 = icmp eq i8 %bf.clear475, 0, !dbg !6274
  br i1 %tobool870, label %if.end884, label %if.then871, !dbg !6276

if.then871:                                       ; preds = %if.end869
  %tobool872 = icmp eq %union.tree_node* %itype.8, null, !dbg !6277
  br i1 %tobool872, label %cond.true873, label %cond.end875, !dbg !6277

cond.true873:                                     ; preds = %if.then871
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6277
  br label %cond.end875, !dbg !6277

cond.end875:                                      ; preds = %if.then871, %cond.true873
  %172 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !6279
  %173 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6280
  %size878 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %173, i64 0, i32 2, !dbg !6280
  %174 = bitcast %union.tree_node** %size878 to i64*, !dbg !6281
  store i64 %172, i64* %174, align 8, !dbg !6281
  %175 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !6282
  %size_unit880 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %173, i64 0, i32 3, !dbg !6283
  %176 = bitcast %union.tree_node** %size_unit880 to i64*, !dbg !6284
  store i64 %175, i64* %176, align 8, !dbg !6284
  %canonical882 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %173, i64 0, i32 19, !dbg !6285
  store %union.tree_node* null, %union.tree_node** %canonical882, align 8, !dbg !6285
  br label %if.end884, !dbg !6286

if.end884:                                        ; preds = %if.end869, %if.end831, %cond.end875
  br i1 %cmp885, label %cleanup897, label %land.lhs.true887, !dbg !6287

land.lhs.true887:                                 ; preds = %if.end884
  %cmp888 = icmp ne i32 %90, 0, !dbg !6288
  %cmp891 = icmp ne %union.tree_node* %91, null, !dbg !6289
  %or.cond32 = or i1 %cmp888, %cmp891, !dbg !6290
  %tobool894 = icmp ne i8 %bf.clear469, 0, !dbg !6291
  %or.cond33 = or i1 %or.cond32, %tobool894, !dbg !6290
  br i1 %or.cond33, label %if.then895, label %cleanup897, !dbg !6290

if.then895:                                       ; preds = %land.lhs.true887
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.286, i64 0, i64 0)) #6, !dbg !6292
  call void @llvm.dbg.value(metadata i32 0, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 0, metadata !5589, metadata !DIExpression()), !dbg !5662
  br label %cleanup897, !dbg !6294

cleanup897:                                       ; preds = %if.end884, %if.then895, %land.lhs.true887, %if.end520, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 6, %if.end520 ], [ 8, %land.lhs.true887 ], [ 8, %if.then895 ], [ 8, %if.end884 ]
  %array_parm_static.3 = phi i32 [ %bf.cast470, %cleanup ], [ %bf.cast470, %if.end520 ], [ %bf.cast470, %land.lhs.true887 ], [ 0, %if.then895 ], [ %bf.cast470, %if.end884 ], !dbg !5987
  %array_ptr_attrs.3 = phi %union.tree_node* [ %91, %cleanup ], [ %91, %if.end520 ], [ null, %land.lhs.true887 ], [ null, %if.then895 ], [ %91, %if.end884 ], !dbg !5987
  %array_ptr_quals.3 = phi i32 [ %90, %cleanup ], [ %90, %if.end520 ], [ 0, %land.lhs.true887 ], [ 0, %if.then895 ], [ %90, %if.end884 ], !dbg !5987
  %size_varies.12 = phi i8 [ %size_varies.4, %cleanup ], [ %size_varies.0.ph114, %if.end520 ], [ %size_varies.11, %land.lhs.true887 ], [ %size_varies.11, %if.then895 ], [ %size_varies.11, %if.end884 ], !dbg !6115
  call void @llvm.dbg.value(metadata i8 %size_varies.12, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.3, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.3, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.3, metadata !5589, metadata !DIExpression()), !dbg !5662
  %switch = icmp eq i32 %cleanup.dest.slot.1, 6
  br i1 %switch, label %while.cond404.outer110, label %sw.epilog1027.loopexit

sw.bb901:                                         ; preds = %if.end423
  %array_parm_static.1.lcssa294 = phi i32 [ %array_parm_static.1, %if.end423 ], !dbg !5662
  %array_ptr_quals.1.lcssa290 = phi i32 [ %array_ptr_quals.1, %if.end423 ], !dbg !5662
  %size_varies.0.ph114.lcssa270 = phi i8 [ %size_varies.0.ph114, %if.end423 ]
  %declarator.addr.0.ph116.lcssa264 = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %if.end423 ]
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116.lcssa264, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 0, metadata !5628, metadata !DIExpression()), !dbg !6295
  br i1 %cmp18, label %if.then903, label %if.end917, !dbg !6296

if.then903:                                       ; preds = %sw.bb901
  br label %while.cond906, !dbg !6297

while.cond906:                                    ; preds = %while.body910, %if.then903
  %declarator.addr.0.pn = phi %struct.c_declarator* [ %declarator.addr.0.ph116.lcssa264, %if.then903 ], [ %t904.0, %while.body910 ]
  %t904.0.in = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.pn, i64 0, i32 1, !dbg !6298
  %t904.0 = load %struct.c_declarator*, %struct.c_declarator** %t904.0.in, align 8, !dbg !6298
  call void @llvm.dbg.value(metadata %struct.c_declarator* %t904.0, metadata !5631, metadata !DIExpression()), !dbg !6298
  %kind907 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %t904.0, i64 0, i32 0, !dbg !6299
  %177 = load i32, i32* %kind907, align 8, !dbg !6299
  %cmp908 = icmp eq i32 %177, 4, !dbg !6300
  br i1 %cmp908, label %while.body910, label %while.end912, !dbg !6297

while.body910:                                    ; preds = %while.cond906
  br label %while.cond906, !dbg !6297, !llvm.loop !6301

while.end912:                                     ; preds = %while.cond906
  %.lcssa298 = phi i32 [ %177, %while.cond906 ], !dbg !6299
  %cmp914 = icmp eq i32 %.lcssa298, 0, !dbg !6303
  %conv916 = zext i1 %cmp914 to i8, !dbg !6304
  call void @llvm.dbg.value(metadata i8 %conv916, metadata !5628, metadata !DIExpression()), !dbg !6295
  br label %if.end917, !dbg !6305

if.end917:                                        ; preds = %while.end912, %sw.bb901
  %really_funcdef.0 = phi i8 [ %conv916, %while.end912 ], [ 0, %sw.bb901 ], !dbg !6295
  call void @llvm.dbg.value(metadata i8 %really_funcdef.0, metadata !5628, metadata !DIExpression()), !dbg !6295
  %178 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6306
  call void @llvm.dbg.value(metadata %union.tree_node* %178, metadata !5575, metadata !DIExpression()), !dbg !5662
  %179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6308
  %cmp918 = icmp eq %union.tree_node* %178, %179, !dbg !6309
  br i1 %cmp918, label %cleanup979, label %if.end921, !dbg !6310, !llvm.loop !5954

if.end921:                                        ; preds = %if.end917
  %180 = getelementptr inbounds %union.tree_node, %union.tree_node* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6310
  call void @llvm.dbg.value(metadata i8 0, metadata !5585, metadata !DIExpression()), !dbg !5662
  %bf.load923 = load i64, i64* %180, align 8, !dbg !6311
  %bf.cast92591 = and i64 %bf.load923, 65535, !dbg !6313
  %cmp926 = icmp eq i64 %bf.cast92591, 20, !dbg !6313
  br i1 %cmp926, label %if.then928, label %if.end933, !dbg !6314

if.then928:                                       ; preds = %if.end921
  br i1 %cmp37, label %if.else931, label %if.then930, !dbg !6315

if.then930:                                       ; preds = %if.then928
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.302, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6317
  br label %if.end932, !dbg !6317

if.else931:                                       ; preds = %if.then928
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.303, i64 0, i64 0)) #6, !dbg !6319
  br label %if.end932

if.end932:                                        ; preds = %if.else931, %if.then930
  %181 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !6320
  store i64 %181, i64* %3, align 8, !dbg !6321
  %182 = inttoptr i64 %181 to i64*, !dbg !6322
  %bf.load935.pre = load i64, i64* %182, align 8, !dbg !6323
  %183 = inttoptr i64 %181 to %union.tree_node*, !dbg !6322
  br label %if.end933, !dbg !6322

if.end933:                                        ; preds = %if.end932, %if.end921
  %184 = phi %union.tree_node* [ %183, %if.end932 ], [ %178, %if.end921 ]
  %bf.load935 = phi i64 [ %bf.load935.pre, %if.end932 ], [ %bf.load923, %if.end921 ], !dbg !6323
  %bf.cast93792 = and i64 %bf.load935, 65535, !dbg !6325
  %cmp938 = icmp eq i64 %bf.cast93792, 15, !dbg !6325
  br i1 %cmp938, label %if.then940, label %if.end945, !dbg !6326

if.then940:                                       ; preds = %if.end933
  br i1 %cmp37, label %if.else943, label %if.then942, !dbg !6327

if.then942:                                       ; preds = %if.then940
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.304, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6329
  br label %if.end944, !dbg !6329

if.else943:                                       ; preds = %if.then940
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.305, i64 0, i64 0)) #6, !dbg !6331
  br label %if.end944

if.end944:                                        ; preds = %if.else943, %if.then942
  %185 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !6332
  store i64 %185, i64* %3, align 8, !dbg !6333
  %186 = inttoptr i64 %185 to %union.tree_node*, !dbg !6334
  br label %if.end945, !dbg !6334

if.end945:                                        ; preds = %if.end944, %if.end933
  %187 = phi %union.tree_node* [ %186, %if.end944 ], [ %184, %if.end933 ], !dbg !6335
  %188 = load i8* (%union.tree_node*)*, i8* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 93), align 8, !dbg !6336
  call void @llvm.dbg.value(metadata %union.tree_node* %187, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call946 = call i8* %188(%union.tree_node* %187) #6, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %call946, metadata !5599, metadata !DIExpression()), !dbg !5662
  %tobool947 = icmp eq i8* %call946, null, !dbg !6338
  br i1 %tobool947, label %if.end949, label %if.then948, !dbg !6340

if.then948:                                       ; preds = %if.end945
  call void (i8*, ...) @error(i8* nonnull %call946) #6, !dbg !6341
  %189 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !6343
  store i64 %189, i64* %3, align 8, !dbg !6344
  br label %if.end949, !dbg !6345

if.end949:                                        ; preds = %if.end945, %if.then948
  %u950 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa264, i64 0, i32 3, !dbg !6346
  %arg_info951 = bitcast %union.anon.1* %u950 to %struct.c_arg_info**, !dbg !6347
  %190 = load %struct.c_arg_info*, %struct.c_arg_info** %arg_info951, align 8, !dbg !6347
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %190, metadata !5594, metadata !DIExpression()), !dbg !5662
  %call952 = call fastcc %union.tree_node* @grokparms(%struct.c_arg_info* %190, i8 zeroext %really_funcdef.0) #7, !dbg !6348
  call void @llvm.dbg.value(metadata %union.tree_node* %call952, metadata !5630, metadata !DIExpression()), !dbg !6295
  %tobool953 = icmp eq i8 %really_funcdef.0, 0, !dbg !6349
  br i1 %tobool953, label %if.end955, label %if.then954, !dbg !6351

if.then954:                                       ; preds = %if.end949
  %pending_sizes = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %190, i64 0, i32 4, !dbg !6352
  %191 = load %union.tree_node*, %union.tree_node** %pending_sizes, align 8, !dbg !6352
  call void @put_pending_sizes(%union.tree_node* %191) #6, !dbg !6353
  br label %if.end955, !dbg !6353

if.end955:                                        ; preds = %if.end949, %if.then954
  %tobool956 = icmp eq i32 %type_quals.0.ph, 0, !dbg !6354
  br i1 %tobool956, label %if.end955.if.end973_crit_edge, label %if.then957, !dbg !6356

if.end955.if.end973_crit_edge:                    ; preds = %if.end955
  %.pre177 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6357
  br label %if.end973, !dbg !6356

if.then957:                                       ; preds = %if.end955
  %192 = load i64*, i64** %73, align 8, !dbg !6358
  %bf.load959 = load i64, i64* %192, align 8, !dbg !6358
  %bf.cast96193 = and i64 %bf.load959, 65535, !dbg !6358
  %cmp962 = icmp eq i64 %bf.cast96193, 19, !dbg !6358
  %tobool966 = icmp ne i8 %really_funcdef.0, 0, !dbg !6361
  %or.cond34 = and i1 %cmp962, %tobool966, !dbg !6362
  br i1 %or.cond34, label %if.then967, label %if.else969, !dbg !6362

if.then967:                                       ; preds = %if.then957
  %call968 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.306, i64 0, i64 0)) #6, !dbg !6363
  br label %if.end971, !dbg !6363

if.else969:                                       ; preds = %if.then957
  %call970 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc.0.lcssa, i32 101, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.307, i64 0, i64 0)) #6, !dbg !6364
  br label %if.end971

if.end971:                                        ; preds = %if.else969, %if.then967
  %193 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6365
  call void @llvm.dbg.value(metadata %union.tree_node* %193, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call972 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %193, i32 %type_quals.0.ph) #6, !dbg !6366
  call void @llvm.dbg.value(metadata %union.tree_node* %call972, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call972, %union.tree_node** %type, align 8, !dbg !6367
  br label %if.end973, !dbg !6368

if.end973:                                        ; preds = %if.end955.if.end973_crit_edge, %if.end971
  %194 = phi %union.tree_node* [ %.pre177, %if.end955.if.end973_crit_edge ], [ %call972, %if.end971 ], !dbg !6357
  call void @llvm.dbg.value(metadata i32 0, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %194, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call974 = call %union.tree_node* @build_function_type(%union.tree_node* %194, %union.tree_node* %call952) #6, !dbg !6369
  call void @llvm.dbg.value(metadata %union.tree_node* %call974, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call974, %union.tree_node** %type, align 8, !dbg !6370
  %declarator975 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa264, i64 0, i32 1, !dbg !6371
  %195 = load %struct.c_declarator*, %struct.c_declarator** %declarator975, align 8, !dbg !6371
  call void @llvm.dbg.value(metadata %struct.c_declarator* %195, metadata !5566, metadata !DIExpression()), !dbg !5662
  %tags = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %190, i64 0, i32 1, !dbg !6372
  %.cast167 = ptrtoint %union.tree_node* %call974 to i64, !dbg !6374
  br label %for.cond, !dbg !6376

for.cond:                                         ; preds = %for.body, %if.end973
  %link.0.in = phi %union.tree_node** [ %tags, %if.end973 ], [ %chain, %for.body ]
  %link.0 = load %union.tree_node*, %union.tree_node** %link.0.in, align 8, !dbg !6377
  call void @llvm.dbg.value(metadata %union.tree_node* %link.0, metadata !5634, metadata !DIExpression()), !dbg !6378
  %tobool976 = icmp eq %union.tree_node* %link.0, null, !dbg !6379
  br i1 %tobool976, label %cleanup979.loopexit, label %for.body, !dbg !6379

for.body:                                         ; preds = %for.cond
  %196 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6380
  %197 = bitcast %union.tree_node** %196 to %struct.tree_type**, !dbg !6380
  %198 = load %struct.tree_type*, %struct.tree_type** %197, align 8, !dbg !6380
  %context = getelementptr inbounds %struct.tree_type, %struct.tree_type* %198, i64 0, i32 18, !dbg !6380
  %199 = bitcast %union.tree_node** %context to i64*, !dbg !6381
  store i64 %.cast167, i64* %199, align 8, !dbg !6381
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6382
  br label %for.cond, !dbg !6383, !llvm.loop !6384

cleanup979.loopexit:                              ; preds = %for.cond
  br label %cleanup979

cleanup979:                                       ; preds = %cleanup979.loopexit, %if.end917
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end917 ], [ false, %cleanup979.loopexit ]
  %arg_info.1 = phi %struct.c_arg_info* [ %arg_info.0.ph, %if.end917 ], [ %190, %cleanup979.loopexit ], !dbg !5662
  %size_varies.13 = phi i8 [ %size_varies.0.ph114.lcssa270, %if.end917 ], [ 0, %cleanup979.loopexit ], !dbg !5662
  %type_quals.1 = phi i32 [ %type_quals.0.ph, %if.end917 ], [ 0, %cleanup979.loopexit ], !dbg !5662
  %declarator.addr.1 = phi %struct.c_declarator* [ %declarator.addr.0.ph116.lcssa264, %if.end917 ], [ %195, %cleanup979.loopexit ]
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.1, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.1, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.13, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.1, metadata !5594, metadata !DIExpression()), !dbg !5662
  br i1 %cleanup.dest.slot.2, label %while.cond404.outer, label %sw.epilog1027.loopexit117

sw.bb982:                                         ; preds = %if.end423
  %arg_info.0.ph.lcssa324 = phi %struct.c_arg_info* [ %arg_info.0.ph, %if.end423 ]
  %type_quals.0.ph.lcssa316 = phi i32 [ %type_quals.0.ph, %if.end423 ]
  %array_parm_static.1.lcssa295 = phi i32 [ %array_parm_static.1, %if.end423 ], !dbg !5662
  %array_ptr_quals.1.lcssa291 = phi i32 [ %array_ptr_quals.1, %if.end423 ], !dbg !5662
  %declarator.addr.0.ph116.lcssa265 = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %if.end423 ]
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa295, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa291, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa295, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa291, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa295, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa291, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116.lcssa265, metadata !5566, metadata !DIExpression()), !dbg !5662
  %200 = load i32, i32* @pedantic, align 4, !dbg !6386
  %tobool983 = icmp eq i32 %200, 0, !dbg !6386
  br i1 %tobool983, label %if.end995, label %land.lhs.true984, !dbg !6388

land.lhs.true984:                                 ; preds = %sw.bb982
  %201 = load i64*, i64** %73, align 8, !dbg !6389
  %bf.load986 = load i64, i64* %201, align 8, !dbg !6389
  %bf.cast98890 = and i64 %bf.load986, 65535, !dbg !6390
  %cmp989 = icmp eq i64 %bf.cast98890, 20, !dbg !6390
  %tobool992 = icmp ne i32 %type_quals.0.ph.lcssa316, 0, !dbg !6391
  %or.cond36 = and i1 %cmp989, %tobool992, !dbg !6392
  br i1 %or.cond36, label %if.then993, label %if.end995, !dbg !6392

if.then993:                                       ; preds = %land.lhs.true984
  %call994 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.308, i64 0, i64 0)) #6, !dbg !6393
  br label %if.end995, !dbg !6393

if.end995:                                        ; preds = %sw.bb982, %if.then993, %land.lhs.true984
  %tobool996 = icmp eq i32 %type_quals.0.ph.lcssa316, 0, !dbg !6394
  br i1 %tobool996, label %if.end995.if.end999_crit_edge, label %if.then997, !dbg !6396

if.end995.if.end999_crit_edge:                    ; preds = %if.end995
  %.pre174 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6397
  %202 = bitcast %struct.tree_type* %.pre174 to %union.tree_node*, !dbg !6396
  br label %if.end999, !dbg !6396

if.then997:                                       ; preds = %if.end995
  %203 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6398
  call void @llvm.dbg.value(metadata %union.tree_node* %203, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call998 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %203, i32 %type_quals.0.ph.lcssa316) #6, !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %call998, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call998, %union.tree_node** %type, align 8, !dbg !6400
  %204 = bitcast %union.tree_node* %call998 to %struct.tree_type*, !dbg !6401
  br label %if.end999, !dbg !6401

if.end999:                                        ; preds = %if.end995.if.end999_crit_edge, %if.then997
  %205 = phi %union.tree_node* [ %202, %if.end995.if.end999_crit_edge ], [ %call998, %if.then997 ]
  %206 = phi %union.tree_node* [ %202, %if.end995.if.end999_crit_edge ], [ %call998, %if.then997 ]
  %207 = phi %struct.tree_type* [ %.pre174, %if.end995.if.end999_crit_edge ], [ %204, %if.then997 ], !dbg !6397
  call void @llvm.dbg.value(metadata i8 0, metadata !5585, metadata !DIExpression()), !dbg !5662
  %name1001 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %207, i64 0, i32 12, !dbg !6397
  %208 = load %union.tree_node*, %union.tree_node** %name1001, align 8, !dbg !6397
  %tobool1002 = icmp eq %union.tree_node* %208, null, !dbg !6397
  br i1 %tobool1002, label %land.lhs.true1003, label %if.end1022, !dbg !6402

land.lhs.true1003:                                ; preds = %if.end999
  switch i32 %decl_context.addr.1, label %if.end1022 [
    i32 0, label %land.lhs.true1009
    i32 3, label %land.lhs.true1009
  ], !dbg !6403

land.lhs.true1009:                                ; preds = %land.lhs.true1003, %land.lhs.true1003
  call void @llvm.dbg.value(metadata %union.tree_node* %206, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1010 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %206, %union.tree_node* null) #6, !dbg !6404
  %tobool1012 = icmp eq i8 %call1010, 0, !dbg !6404
  br i1 %tobool1012, label %land.lhs.true1009.if.end1022_crit_edge, label %if.then1013, !dbg !6405

land.lhs.true1009.if.end1022_crit_edge:           ; preds = %land.lhs.true1009
  %.pre175 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6406
  br label %if.end1022, !dbg !6405

if.then1013:                                      ; preds = %land.lhs.true1009
  %209 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6407
  call void @llvm.dbg.value(metadata %union.tree_node* %209, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1015 = call %union.tree_node* @build_decl_stat(i32 %loc.0.lcssa, i32 35, %union.tree_node* null, %union.tree_node* %209) #6, !dbg !6407
  call void @llvm.dbg.value(metadata %union.tree_node* %call1015, metadata !5636, metadata !DIExpression()), !dbg !6408
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call1015, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6409
  %210 = bitcast i40* %artificial_flag to i64*, !dbg !6409
  %bf.load1016 = load i64, i64* %210, align 8, !dbg !6410
  %bf.set1018 = or i64 %bf.load1016, 4096, !dbg !6410
  store i64 %bf.set1018, i64* %210, align 8, !dbg !6410
  %call1019 = call %union.tree_node* @pushdecl(%union.tree_node* %call1015) #7, !dbg !6411
  call void @finish_decl(%union.tree_node* %call1015, i32 %loc.0.lcssa, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #7, !dbg !6412
  %211 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6413
  %name1021 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %211, i64 0, i32 12, !dbg !6413
  store %union.tree_node* %call1015, %union.tree_node** %name1021, align 8, !dbg !6414
  %212 = bitcast %struct.tree_type* %211 to %union.tree_node*, !dbg !6415
  br label %if.end1022, !dbg !6415

if.end1022:                                       ; preds = %land.lhs.true1009.if.end1022_crit_edge, %if.end999, %land.lhs.true1003, %if.then1013
  %213 = phi %union.tree_node* [ %.pre175, %land.lhs.true1009.if.end1022_crit_edge ], [ %205, %if.end999 ], [ %205, %land.lhs.true1003 ], [ %212, %if.then1013 ], !dbg !6406
  call void @llvm.dbg.value(metadata %union.tree_node* %213, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1023 = call %union.tree_node* @build_pointer_type(%union.tree_node* %213) #6, !dbg !6416
  call void @llvm.dbg.value(metadata %union.tree_node* %call1023, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1023, %union.tree_node** %type, align 8, !dbg !6417
  %u1024 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa265, i64 0, i32 3, !dbg !6418
  %pointer_quals = bitcast %union.anon.1* %u1024 to i32*, !dbg !6419
  %214 = load i32, i32* %pointer_quals, align 8, !dbg !6419
  call void @llvm.dbg.value(metadata i32 %214, metadata !5581, metadata !DIExpression()), !dbg !5662
  %declarator1025 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.ph116.lcssa265, i64 0, i32 1, !dbg !6420
  %215 = load %struct.c_declarator*, %struct.c_declarator** %declarator1025, align 8, !dbg !6420
  call void @llvm.dbg.value(metadata %struct.c_declarator* %215, metadata !5566, metadata !DIExpression()), !dbg !5662
  br label %sw.epilog1027, !dbg !6421

sw.default1026:                                   ; preds = %if.end423
  %arg_info.0.ph.lcssa322 = phi %struct.c_arg_info* [ %arg_info.0.ph, %if.end423 ]
  %type_quals.0.ph.lcssa314 = phi i32 [ %type_quals.0.ph, %if.end423 ]
  %array_parm_static.1.lcssa = phi i32 [ %array_parm_static.1, %if.end423 ], !dbg !5662
  %array_ptr_quals.1.lcssa = phi i32 [ %array_ptr_quals.1, %if.end423 ], !dbg !5662
  %size_varies.0.ph114.lcssa268 = phi i8 [ %size_varies.0.ph114, %if.end423 ]
  %declarator.addr.0.ph116.lcssa262 = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %if.end423 ]
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.ph116.lcssa262, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5576, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6422
  br label %sw.epilog1027, !dbg !6423

sw.epilog1027.loopexit:                           ; preds = %cleanup897
  %arg_info.0.ph.lcssa326 = phi %struct.c_arg_info* [ %arg_info.0.ph, %cleanup897 ]
  %type_quals.0.ph.lcssa318 = phi i32 [ %type_quals.0.ph, %cleanup897 ]
  %array_parm_static.3.lcssa = phi i32 [ %array_parm_static.3, %cleanup897 ], !dbg !5987
  %array_ptr_attrs.3.lcssa = phi %union.tree_node* [ %array_ptr_attrs.3, %cleanup897 ], !dbg !5987
  %array_ptr_quals.3.lcssa = phi i32 [ %array_ptr_quals.3, %cleanup897 ], !dbg !5987
  %size_varies.12.lcssa = phi i8 [ %size_varies.12, %cleanup897 ], !dbg !6115
  %.lcssa297 = phi %struct.c_declarator* [ %92, %cleanup897 ], !dbg !5995
  call void @llvm.dbg.value(metadata i32 %array_parm_static.3.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.3.lcssa, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.3.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.12.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.3.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.3.lcssa, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.3.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.12.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.3.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.3.lcssa, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.3.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.12.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  br label %sw.epilog1027, !dbg !5941

sw.epilog1027.loopexit117:                        ; preds = %cleanup979
  %arg_info.1.lcssa = phi %struct.c_arg_info* [ %arg_info.1, %cleanup979 ], !dbg !5662
  %size_varies.13.lcssa = phi i8 [ %size_varies.13, %cleanup979 ], !dbg !5662
  %type_quals.1.lcssa = phi i32 [ %type_quals.1, %cleanup979 ], !dbg !5662
  %declarator.addr.1.lcssa = phi %struct.c_declarator* [ %declarator.addr.1, %cleanup979 ]
  %array_parm_static.1.lcssa294.lcssa = phi i32 [ %array_parm_static.1.lcssa294, %cleanup979 ], !dbg !5662
  %array_ptr_quals.1.lcssa290.lcssa = phi i32 [ %array_ptr_quals.1.lcssa290, %cleanup979 ], !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.1.lcssa, metadata !5594, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.13.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.1.lcssa, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.1.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.1.lcssa, metadata !5594, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.13.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.1.lcssa, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.1.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.1.lcssa, metadata !5594, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.13.lcssa, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.1.lcssa, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.1.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.1.lcssa294.lcssa, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.1.lcssa290.lcssa, metadata !5587, metadata !DIExpression()), !dbg !5662
  br label %sw.epilog1027, !dbg !5941

sw.epilog1027:                                    ; preds = %sw.epilog1027.loopexit117, %sw.epilog1027.loopexit, %sw.default1026, %if.end1022, %if.end455
  %arg_info.2 = phi %struct.c_arg_info* [ %arg_info.0.ph.lcssa322, %sw.default1026 ], [ %arg_info.0.ph.lcssa324, %if.end1022 ], [ %arg_info.0.ph.lcssa323, %if.end455 ], [ %arg_info.0.ph.lcssa326, %sw.epilog1027.loopexit ], [ %arg_info.1.lcssa, %sw.epilog1027.loopexit117 ], !dbg !6424
  %returned_attrs.1 = phi %union.tree_node* [ %returned_attrs.0.ph.ph, %sw.default1026 ], [ %returned_attrs.0.ph.ph, %if.end1022 ], [ %call457, %if.end455 ], [ %returned_attrs.0.ph.ph, %sw.epilog1027.loopexit ], [ %returned_attrs.0.ph.ph, %sw.epilog1027.loopexit117 ], !dbg !5662
  %array_parm_static.4 = phi i32 [ %array_parm_static.1.lcssa, %sw.default1026 ], [ %array_parm_static.1.lcssa295, %if.end1022 ], [ %array_parm_static.1.lcssa293, %if.end455 ], [ %array_parm_static.3.lcssa, %sw.epilog1027.loopexit ], [ %array_parm_static.1.lcssa294.lcssa, %sw.epilog1027.loopexit117 ], !dbg !6425
  %array_ptr_attrs.4 = phi %union.tree_node* [ null, %sw.default1026 ], [ null, %if.end1022 ], [ null, %if.end455 ], [ %array_ptr_attrs.3.lcssa, %sw.epilog1027.loopexit ], [ null, %sw.epilog1027.loopexit117 ], !dbg !6425
  %array_ptr_quals.4 = phi i32 [ %array_ptr_quals.1.lcssa, %sw.default1026 ], [ %array_ptr_quals.1.lcssa291, %if.end1022 ], [ %array_ptr_quals.1.lcssa289, %if.end455 ], [ %array_ptr_quals.3.lcssa, %sw.epilog1027.loopexit ], [ %array_ptr_quals.1.lcssa290.lcssa, %sw.epilog1027.loopexit117 ], !dbg !6425
  %size_varies.14 = phi i8 [ %size_varies.0.ph114.lcssa268, %sw.default1026 ], [ 0, %if.end1022 ], [ %size_varies.0.ph114.lcssa269, %if.end455 ], [ %size_varies.12.lcssa, %sw.epilog1027.loopexit ], [ %size_varies.13.lcssa, %sw.epilog1027.loopexit117 ], !dbg !5662
  %type_quals.2 = phi i32 [ %type_quals.0.ph.lcssa314, %sw.default1026 ], [ %214, %if.end1022 ], [ %type_quals.0.ph.lcssa315, %if.end455 ], [ %type_quals.0.ph.lcssa318, %sw.epilog1027.loopexit ], [ %type_quals.1.lcssa, %sw.epilog1027.loopexit117 ], !dbg !5662
  %declarator.addr.2 = phi %struct.c_declarator* [ %declarator.addr.0.ph116.lcssa262, %sw.default1026 ], [ %215, %if.end1022 ], [ %85, %if.end455 ], [ %.lcssa297, %sw.epilog1027.loopexit ], [ %declarator.addr.1.lcssa, %sw.epilog1027.loopexit117 ]
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.2, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.2, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.14, metadata !5585, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.4, metadata !5587, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %array_ptr_attrs.4, metadata !5588, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %array_parm_static.4, metadata !5589, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %returned_attrs.1, metadata !5591, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info.2, metadata !5594, metadata !DIExpression()), !dbg !5662
  br label %while.cond404.outer.outer, !dbg !5941, !llvm.loop !5954

while.end1028.us-lcssa:                           ; preds = %while.cond404.outer110.while.cond404.outer110.split_crit_edge, %land.rhs
  %returned_attrs.0.ph.ph.lcssa329 = phi %union.tree_node* [ %returned_attrs.0.ph.ph, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %returned_attrs.0.ph.ph, %land.rhs ]
  %arg_info.0.ph.lcssa321 = phi %struct.c_arg_info* [ %arg_info.0.ph, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %arg_info.0.ph, %land.rhs ]
  %type_quals.0.ph.lcssa313 = phi i32 [ %type_quals.0.ph, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %type_quals.0.ph, %land.rhs ]
  %cmp814.lcssa306 = phi i1 [ %cmp814, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %cmp814, %land.rhs ], !dbg !5943
  %.lcssa300 = phi i32 [ %74, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %74, %land.rhs ], !dbg !5945
  %array_ptr_attrs.0.ph112.lcssa282 = phi %union.tree_node* [ %array_ptr_attrs.0.ph112, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %array_ptr_attrs.0.ph112, %land.rhs ]
  %array_ptr_quals.0.ph113.lcssa274 = phi i32 [ %array_ptr_quals.0.ph113, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %array_ptr_quals.0.ph113, %land.rhs ]
  %size_varies.0.ph114.lcssa267 = phi i8 [ %size_varies.0.ph114, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %size_varies.0.ph114, %land.rhs ]
  %declarator.addr.0.ph116.lcssa261 = phi %struct.c_declarator* [ %declarator.addr.0.ph116, %while.cond404.outer110.while.cond404.outer110.split_crit_edge ], [ %declarator.addr.0.ph116, %land.rhs ]
  br label %while.end1028, !dbg !5956

while.end1028:                                    ; preds = %while.end1028.us-lcssa.us, %while.end1028.us-lcssa
  %returned_attrs.0.ph.ph330 = phi %union.tree_node* [ %returned_attrs.0.ph.ph.lcssa329, %while.end1028.us-lcssa ], [ %returned_attrs.0.ph.ph.lcssa, %while.end1028.us-lcssa.us ]
  %arg_info.0.ph327 = phi %struct.c_arg_info* [ %arg_info.0.ph.lcssa321, %while.end1028.us-lcssa ], [ %arg_info.0.ph.lcssa, %while.end1028.us-lcssa.us ]
  %type_quals.0.ph319 = phi i32 [ %type_quals.0.ph.lcssa313, %while.end1028.us-lcssa ], [ %type_quals.0.ph.lcssa, %while.end1028.us-lcssa.us ]
  %cmp814312 = phi i1 [ %cmp814.lcssa306, %while.end1028.us-lcssa ], [ %cmp814.lcssa, %while.end1028.us-lcssa.us ]
  %216 = phi i32 [ %.lcssa300, %while.end1028.us-lcssa ], [ %.lcssa299, %while.end1028.us-lcssa.us ]
  %array_ptr_attrs.0.ph112288 = phi %union.tree_node* [ %array_ptr_attrs.0.ph112.lcssa282, %while.end1028.us-lcssa ], [ %array_ptr_attrs.0.ph112.lcssa, %while.end1028.us-lcssa.us ]
  %array_ptr_quals.0.ph113280 = phi i32 [ %array_ptr_quals.0.ph113.lcssa274, %while.end1028.us-lcssa ], [ %array_ptr_quals.0.ph113.lcssa, %while.end1028.us-lcssa.us ]
  %size_varies.0.ph114273 = phi i8 [ %size_varies.0.ph114.lcssa267, %while.end1028.us-lcssa ], [ %size_varies.0.ph114.lcssa, %while.end1028.us-lcssa.us ]
  %declarator.addr.0.lcssa = phi %struct.c_declarator* [ %declarator.addr.0.ph116.lcssa261, %while.end1028.us-lcssa ], [ %declarator.addr.0.us.lcssa, %while.end1028.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.addr.0.lcssa, metadata !5566, metadata !DIExpression()), !dbg !5662
  %217 = load %union.tree_node*, %union.tree_node** %decl_attrs, align 8, !dbg !5956
  %call1029 = call %union.tree_node* @chainon(%union.tree_node* %returned_attrs.0.ph.ph330, %union.tree_node* %217) #6, !dbg !6426
  store %union.tree_node* %call1029, %union.tree_node** %decl_attrs, align 8, !dbg !6427
  %conv1032 = trunc i32 %216 to i8, !dbg !6428
  call void @llvm.dbg.value(metadata i8 %conv1032, metadata !5597, metadata !DIExpression()), !dbg !5662
  br i1 %cmp814312, label %if.end1082, label %if.then1036, !dbg !6429

if.then1036:                                      ; preds = %while.end1028
  switch i32 %decl_context.addr.1, label %if.end1082 [
    i32 0, label %if.then1039
    i32 2, label %land.lhs.true1055
    i32 3, label %if.then1072
  ], !dbg !6430

if.then1039:                                      ; preds = %if.then1036
  switch i32 %storage_class.3, label %sw.default1050 [
    i32 1, label %sw.bb1040
    i32 3, label %sw.bb1042
    i32 0, label %sw.bb1044
    i32 4, label %if.end1082
    i32 2, label %if.end1082
    i32 5, label %if.end1082
  ], !dbg !6433

sw.bb1040:                                        ; preds = %if.then1039
  %call1041 = call i8* @c_addr_space_name(i8 zeroext %conv1032) #6, !dbg !6436
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.309, i64 0, i64 0), i8* %call1041, %union.tree_node* %name.0.lcssa) #6, !dbg !6438
  br label %if.end1082, !dbg !6439

sw.bb1042:                                        ; preds = %if.then1039
  %call1043 = call i8* @c_addr_space_name(i8 zeroext %conv1032) #6, !dbg !6440
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.310, i64 0, i64 0), i8* %call1043, %union.tree_node* %name.0.lcssa) #6, !dbg !6441
  br label %if.end1082, !dbg !6442

sw.bb1044:                                        ; preds = %if.then1039
  %218 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !6443
  %tobool1045 = icmp eq %struct.c_scope* %218, null, !dbg !6443
  br i1 %tobool1045, label %if.end1082, label %if.then1046, !dbg !6445

if.then1046:                                      ; preds = %sw.bb1044
  %call1047 = call i8* @c_addr_space_name(i8 zeroext %conv1032) #6, !dbg !6446
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i8* %call1047, %union.tree_node* %name.0.lcssa) #6, !dbg !6448
  br label %if.end1082, !dbg !6449

sw.default1050:                                   ; preds = %if.then1039
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5614, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6450
  br label %if.end1082, !dbg !6451

land.lhs.true1055:                                ; preds = %if.then1036
  %219 = load i64*, i64** %73, align 8, !dbg !6452
  %bf.load1057 = load i64, i64* %219, align 8, !dbg !6452
  %bf.cast105989 = and i64 %bf.load1057, 65535, !dbg !6454
  %cmp1060 = icmp eq i64 %bf.cast105989, 15, !dbg !6454
  br i1 %cmp1060, label %if.else1069, label %if.then1062, !dbg !6455

if.then1062:                                      ; preds = %land.lhs.true1055
  %call1065 = call i8* @c_addr_space_name(i8 zeroext %conv1032) #6, !dbg !6456
  br i1 %cmp37, label %if.else1066, label %if.then1064, !dbg !6459

if.then1064:                                      ; preds = %if.then1062
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.312, i64 0, i64 0), i8* %call1065, %union.tree_node* nonnull %name.0.lcssa) #6, !dbg !6460
  br label %if.end1082, !dbg !6460

if.else1066:                                      ; preds = %if.then1062
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.313, i64 0, i64 0), i8* %call1065) #6, !dbg !6461
  br label %if.end1082

if.else1069:                                      ; preds = %land.lhs.true1055
  br i1 false, label %if.else1069.if.then1072_crit_edge, label %if.end1082, !dbg !6462

if.else1069.if.then1072_crit_edge:                ; preds = %if.else1069
  br label %if.then1072, !dbg !6462

if.then1072:                                      ; preds = %if.else1069.if.then1072_crit_edge, %if.then1036
  %call1075 = call i8* @c_addr_space_name(i8 zeroext %conv1032) #6, !dbg !6463
  br i1 %cmp37, label %if.else1076, label %if.then1074, !dbg !6467

if.then1074:                                      ; preds = %if.then1072
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.314, i64 0, i64 0), i8* %call1075, %union.tree_node* nonnull %name.0.lcssa) #6, !dbg !6468
  br label %if.end1082, !dbg !6468

if.else1076:                                      ; preds = %if.then1072
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.315, i64 0, i64 0), i8* %call1075) #6, !dbg !6469
  br label %if.end1082

if.end1082:                                       ; preds = %sw.bb1044, %if.then1039, %if.then1039, %if.then1039, %sw.default1050, %if.then1046, %sw.bb1042, %sw.bb1040, %if.else1069, %if.then1036, %if.else1076, %if.then1074, %if.then1064, %if.else1066, %while.end1028
  br i1 %cmp, label %if.then1084, label %if.end1085, !dbg !6470

if.then1084:                                      ; preds = %if.end1082
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5575, metadata !DIExpression(DW_OP_deref)), !dbg !5662
  call fastcc void @check_bitfield_type_and_width(%union.tree_node** nonnull %type, %union.tree_node** nonnull %width, %union.tree_node* %name.0.lcssa) #7, !dbg !6471
  br label %if.end1085, !dbg !6471

if.end1085:                                       ; preds = %if.then1084, %if.end1082
  %220 = load i64*, i64** %73, align 8, !dbg !6473
  %bf.load1087 = load i64, i64* %220, align 8, !dbg !6473
  %bf.cast108960 = and i64 %bf.load1087, 65535, !dbg !6475
  %cmp1090 = icmp eq i64 %bf.cast108960, 15, !dbg !6475
  %221 = bitcast i64* %220 to %union.tree_node*, !dbg !6476
  br i1 %cmp1090, label %land.lhs.true1092, label %if.end1120, !dbg !6476

land.lhs.true1092:                                ; preds = %if.end1085
  %size1094 = getelementptr inbounds i64, i64* %220, i64 4, !dbg !6477
  %222 = bitcast i64* %size1094 to %union.tree_node**, !dbg !6477
  %223 = load %union.tree_node*, %union.tree_node** %222, align 8, !dbg !6477
  %cmp1095 = icmp eq %union.tree_node* %223, null, !dbg !6477
  br i1 %cmp1095, label %if.end1120, label %land.lhs.true1097, !dbg !6478

land.lhs.true1097:                                ; preds = %land.lhs.true1092
  %size_unit1099 = getelementptr inbounds i64, i64* %220, i64 5, !dbg !6479
  %224 = bitcast i64* %size_unit1099 to i64**, !dbg !6479
  %225 = load i64*, i64** %224, align 8, !dbg !6479
  %bf.load1101 = load i64, i64* %225, align 8, !dbg !6479
  %bf.cast110387 = and i64 %bf.load1101, 65535, !dbg !6480
  %cmp1104 = icmp eq i64 %bf.cast110387, 23, !dbg !6480
  br i1 %cmp1104, label %land.lhs.true1106, label %if.end1120, !dbg !6481

land.lhs.true1106:                                ; preds = %land.lhs.true1097
  %bf.cast111388 = and i64 %bf.load1101, 134217728, !dbg !6482
  %tobool1114 = icmp eq i64 %bf.cast111388, 0, !dbg !6482
  br i1 %tobool1114, label %if.end1120, label %if.then1115, !dbg !6483

if.then1115:                                      ; preds = %land.lhs.true1106
  br i1 %cmp37, label %if.else1118, label %if.then1117, !dbg !6484

if.then1117:                                      ; preds = %if.then1115
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.297, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6486
  br label %if.end1119, !dbg !6486

if.else1118:                                      ; preds = %if.then1115
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.298, i64 0, i64 0)) #6, !dbg !6488
  br label %if.end1119

if.end1119:                                       ; preds = %if.else1118, %if.then1117
  %226 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6489
  store i64 %226, i64* %3, align 8, !dbg !6490
  %227 = inttoptr i64 %226 to %union.tree_node*, !dbg !6491
  %228 = inttoptr i64 %226 to i64*, !dbg !6491
  br label %if.end1120, !dbg !6491

if.end1120:                                       ; preds = %land.lhs.true1106, %land.lhs.true1092, %if.end1119, %land.lhs.true1097, %if.end1085
  %229 = phi i64* [ %220, %land.lhs.true1106 ], [ %220, %land.lhs.true1092 ], [ %228, %if.end1119 ], [ %220, %land.lhs.true1097 ], [ %220, %if.end1085 ]
  %230 = phi %union.tree_node* [ %221, %land.lhs.true1106 ], [ %221, %land.lhs.true1092 ], [ %227, %if.end1119 ], [ %221, %land.lhs.true1097 ], [ %221, %if.end1085 ]
  %cmp1121 = icmp eq i32 %storage_class.3, 5, !dbg !6492
  br i1 %cmp1121, label %if.then1123, label %if.end1219, !dbg !6493

if.then1123:                                      ; preds = %if.end1120
  %231 = load i32, i32* @pedantic, align 4, !dbg !6494
  %tobool1125 = icmp eq i32 %231, 0, !dbg !6494
  br i1 %tobool1125, label %if.end1137, label %land.lhs.true1126, !dbg !6496

land.lhs.true1126:                                ; preds = %if.then1123
  %bf.load1128 = load i64, i64* %229, align 8, !dbg !6497
  %bf.cast113086 = and i64 %bf.load1128, 65535, !dbg !6498
  %cmp1131 = icmp eq i64 %bf.cast113086, 20, !dbg !6498
  %tobool1134 = icmp ne i32 %type_quals.0.ph319, 0, !dbg !6499
  %or.cond37 = and i1 %cmp1131, %tobool1134, !dbg !6500
  br i1 %or.cond37, label %if.then1135, label %if.end1137, !dbg !6500

if.then1135:                                      ; preds = %land.lhs.true1126
  %call1136 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.308, i64 0, i64 0)) #6, !dbg !6501
  br label %if.end1137, !dbg !6501

if.end1137:                                       ; preds = %if.then1123, %if.then1135, %land.lhs.true1126
  %tobool1138 = icmp eq i32 %type_quals.0.ph319, 0, !dbg !6502
  br i1 %tobool1138, label %if.end1137.if.end1141_crit_edge, label %if.then1139, !dbg !6504

if.end1137.if.end1141_crit_edge:                  ; preds = %if.end1137
  %.pre188 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6505
  br label %if.end1141, !dbg !6504

if.then1139:                                      ; preds = %if.end1137
  %232 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6506
  call void @llvm.dbg.value(metadata %union.tree_node* %232, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1140 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %232, i32 %type_quals.0.ph319) #6, !dbg !6507
  call void @llvm.dbg.value(metadata %union.tree_node* %call1140, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1140, %union.tree_node** %type, align 8, !dbg !6508
  br label %if.end1141, !dbg !6509

if.end1141:                                       ; preds = %if.end1137.if.end1141_crit_edge, %if.then1139
  %233 = phi %union.tree_node* [ %.pre188, %if.end1137.if.end1141_crit_edge ], [ %call1140, %if.then1139 ], !dbg !6505
  %id_loc1142 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 2, !dbg !6505
  %234 = load i32, i32* %id_loc1142, align 8, !dbg !6505
  %id1144 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6505
  %235 = load %union.tree_node*, %union.tree_node** %id1144, align 8, !dbg !6505
  call void @llvm.dbg.value(metadata %union.tree_node* %233, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1145 = call %union.tree_node* @build_decl_stat(i32 %234, i32 35, %union.tree_node* %235, %union.tree_node* %233) #6, !dbg !6505
  call void @llvm.dbg.value(metadata %union.tree_node* %call1145, metadata !5640, metadata !DIExpression()), !dbg !6510
  %bf.load1147 = load i8, i8* %expr_const_operands13, align 8, !dbg !6511
  %bf.clear1149 = and i8 %bf.load1147, 64, !dbg !6511
  %tobool1151 = icmp eq i8 %bf.clear1149, 0, !dbg !6513
  br i1 %tobool1151, label %if.end1158, label %if.then1152, !dbg !6514

if.then1152:                                      ; preds = %if.end1141
  %lang_flag_11154 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6515
  %236 = bitcast i40* %lang_flag_11154 to i64*, !dbg !6515
  %bf.load1155 = load i64, i64* %236, align 8, !dbg !6516
  %bf.set1157 = or i64 %bf.load1155, 65536, !dbg !6516
  store i64 %bf.set1157, i64* %236, align 8, !dbg !6516
  br label %if.end1158, !dbg !6515

if.end1158:                                       ; preds = %if.end1141, %if.then1152
  %bf.load1159 = load i16, i16* %thread_p, align 8, !dbg !6517
  %bf.clear1161 = and i16 %bf.load1159, 64, !dbg !6517
  %tobool1163 = icmp eq i16 %bf.clear1161, 0, !dbg !6519
  br i1 %tobool1163, label %if.end1166, label %if.then1164, !dbg !6520

if.then1164:                                      ; preds = %if.end1158
  %call1165 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.316, i64 0, i64 0), %union.tree_node* %call1145) #6, !dbg !6521
  br label %if.end1166, !dbg !6521

if.end1166:                                       ; preds = %if.end1158, %if.then1164
  %237 = load i32, i32* @warn_cxx_compat, align 4, !dbg !6522
  %tobool1167 = icmp eq i32 %237, 0, !dbg !6522
  br i1 %tobool1167, label %cleanup1930, label %land.lhs.true1168, !dbg !6523

land.lhs.true1168:                                ; preds = %if.end1166
  %238 = load %union.tree_node*, %union.tree_node** %id1144, align 8, !dbg !6524
  %cmp1171 = icmp eq %union.tree_node* %238, null, !dbg !6525
  br i1 %cmp1171, label %cleanup1930, label %if.then1173, !dbg !6526

if.then1173:                                      ; preds = %land.lhs.true1168
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %238, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6527
  %239 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !6527
  %240 = load %struct.c_binding*, %struct.c_binding** %239, align 8, !dbg !6527
  call void @llvm.dbg.value(metadata %struct.c_binding* %240, metadata !5643, metadata !DIExpression()), !dbg !6528
  %cmp1176 = icmp eq %struct.c_binding* %240, null, !dbg !6529
  br i1 %cmp1176, label %cleanup1930, label %land.lhs.true1178, !dbg !6531

land.lhs.true1178:                                ; preds = %if.then1173
  %decl1179 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %240, i64 0, i32 1, !dbg !6532
  %241 = load %union.tree_node*, %union.tree_node** %decl1179, align 8, !dbg !6532
  %cmp1180 = icmp eq %union.tree_node* %241, null, !dbg !6533
  br i1 %cmp1180, label %cleanup1930, label %land.lhs.true1182, !dbg !6534

land.lhs.true1182:                                ; preds = %land.lhs.true1178
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %240, i64 0, i32 5, !dbg !6535
  %bf.load1183 = load i32, i32* %depth, align 8, !dbg !6535
  %242 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6535
  %depth1185 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %242, i64 0, i32 5, !dbg !6535
  %243 = bitcast i40* %depth1185 to i64*, !dbg !6535
  %bf.load1186 = load i64, i64* %243, align 8, !dbg !6535
  %244 = trunc i64 %bf.load1186 to i32, !dbg !6535
  %245 = xor i32 %bf.load1183, %244, !dbg !6535
  %246 = and i32 %245, 268435455, !dbg !6535
  %cmp1189 = icmp eq i32 %246, 0, !dbg !6535
  br i1 %cmp1189, label %land.lhs.true1200, label %lor.lhs.false1191, !dbg !6536

lor.lhs.false1191:                                ; preds = %land.lhs.true1182
  %247 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6537
  %cmp1192 = icmp eq %struct.c_scope* %242, %247, !dbg !6538
  br i1 %cmp1192, label %land.lhs.true1194, label %cleanup1930, !dbg !6539

land.lhs.true1194:                                ; preds = %lor.lhs.false1191
  %bf.clear1197 = and i32 %bf.load1183, 268435455, !dbg !6540
  %cmp1198 = icmp eq i32 %bf.clear1197, 0, !dbg !6540
  br i1 %cmp1198, label %land.lhs.true1200, label %cleanup1930, !dbg !6541

land.lhs.true1200:                                ; preds = %land.lhs.true1194, %land.lhs.true1182
  %248 = getelementptr inbounds %union.tree_node, %union.tree_node* %241, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6542
  %249 = load %union.tree_node*, %union.tree_node** %248, align 8, !dbg !6542
  %250 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !6543
  %main_variant1205 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %250, i64 0, i32 16, !dbg !6543
  %251 = load %union.tree_node*, %union.tree_node** %main_variant1205, align 8, !dbg !6543
  %cmp1206 = icmp eq %union.tree_node* %249, %251, !dbg !6544
  br i1 %cmp1206, label %cleanup1930, label %if.then1208, !dbg !6545

if.then1208:                                      ; preds = %land.lhs.true1200
  %252 = load i32, i32* %id_loc1142, align 8, !dbg !6546
  %call1210 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %252, i32 49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.262, i64 0, i64 0), %union.tree_node* %call1145) #6, !dbg !6548
  %locus = getelementptr inbounds %struct.c_binding, %struct.c_binding* %240, i64 0, i32 6, !dbg !6549
  %253 = load i32, i32* %locus, align 4, !dbg !6549
  %cmp1211 = icmp eq i32 %253, 0, !dbg !6551
  br i1 %cmp1211, label %cleanup1930, label %if.then1213, !dbg !6552

if.then1213:                                      ; preds = %if.then1208
  call void (i32, i8*, ...) @inform(i32 %253, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !6553
  br label %cleanup1930, !dbg !6553

if.end1219:                                       ; preds = %if.end1120
  %cmp1220 = icmp eq i32 %decl_context.addr.1, 4, !dbg !6554
  br i1 %cmp1220, label %if.then1222, label %if.end1255, !dbg !6556

if.then1222:                                      ; preds = %if.end1219
  %cmp1223 = icmp ne i32 %storage_class.3, 0, !dbg !6557
  %tobool1226 = icmp ne i8 %threadp.6, 0, !dbg !6557
  %or.cond38 = or i1 %cmp1223, %tobool1226, !dbg !6557
  br i1 %or.cond38, label %cond.true1234, label %land.lhs.true1227, !dbg !6557

land.lhs.true1227:                                ; preds = %if.then1222
  %bf.load1229 = load i16, i16* %thread_p, align 8, !dbg !6557
  %bf.clear1231 = and i16 %bf.load1229, 64, !dbg !6557
  %tobool1233 = icmp eq i16 %bf.clear1231, 0, !dbg !6557
  br i1 %tobool1233, label %cond.end1236, label %cond.true1234, !dbg !6557

cond.true1234:                                    ; preds = %land.lhs.true1227, %if.then1222
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5705, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6557
  br label %cond.end1236, !dbg !6557

cond.end1236:                                     ; preds = %land.lhs.true1227, %cond.true1234
  %254 = load i32, i32* @pedantic, align 4, !dbg !6559
  %tobool1238 = icmp eq i32 %254, 0, !dbg !6559
  br i1 %tobool1238, label %if.end1250, label %land.lhs.true1239, !dbg !6561

land.lhs.true1239:                                ; preds = %cond.end1236
  %255 = load i64*, i64** %73, align 8, !dbg !6562
  %bf.load1241 = load i64, i64* %255, align 8, !dbg !6562
  %bf.cast124385 = and i64 %bf.load1241, 65535, !dbg !6563
  %cmp1244 = icmp eq i64 %bf.cast124385, 20, !dbg !6563
  %tobool1247 = icmp ne i32 %type_quals.0.ph319, 0, !dbg !6564
  %or.cond39 = and i1 %cmp1244, %tobool1247, !dbg !6565
  br i1 %or.cond39, label %if.then1248, label %if.end1250, !dbg !6565

if.then1248:                                      ; preds = %land.lhs.true1239
  %call1249 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.317, i64 0, i64 0)) #6, !dbg !6566
  br label %if.end1250, !dbg !6566

if.end1250:                                       ; preds = %cond.end1236, %if.then1248, %land.lhs.true1239
  %tobool1251 = icmp eq i32 %type_quals.0.ph319, 0, !dbg !6567
  br i1 %tobool1251, label %if.end1250.if.end1254_crit_edge, label %if.then1252, !dbg !6569

if.end1250.if.end1254_crit_edge:                  ; preds = %if.end1250
  %.pre187 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6570
  br label %if.end1254, !dbg !6569

if.then1252:                                      ; preds = %if.end1250
  %256 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6571
  call void @llvm.dbg.value(metadata %union.tree_node* %256, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1253 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %256, i32 %type_quals.0.ph319) #6, !dbg !6572
  call void @llvm.dbg.value(metadata %union.tree_node* %call1253, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1253, %union.tree_node** %type, align 8, !dbg !6573
  br label %if.end1254, !dbg !6574

if.end1254:                                       ; preds = %if.end1250.if.end1254_crit_edge, %if.then1252
  %257 = phi %union.tree_node* [ %.pre187, %if.end1250.if.end1254_crit_edge ], [ %call1253, %if.then1252 ], !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* %257, metadata !5575, metadata !DIExpression()), !dbg !5662
  br label %cleanup1930, !dbg !6575

if.end1255:                                       ; preds = %if.end1219
  %258 = load i32, i32* @pedantic, align 4, !dbg !6576
  %tobool1256 = icmp ne i32 %258, 0, !dbg !6576
  %cmp1258 = icmp eq i32 %decl_context.addr.1, 3, !dbg !6578
  %or.cond40 = and i1 %tobool1256, %cmp1258, !dbg !6579
  br i1 %or.cond40, label %land.lhs.true1260, label %if.end1266, !dbg !6579

land.lhs.true1260:                                ; preds = %if.end1255
  call void @llvm.dbg.value(metadata %union.tree_node* %230, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1261 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %230, %union.tree_node* null) #6, !dbg !6580
  %tobool1263 = icmp eq i8 %call1261, 0, !dbg !6580
  br i1 %tobool1263, label %if.end1266, label %if.then1264, !dbg !6581

if.then1264:                                      ; preds = %land.lhs.true1260
  %call1265 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.318, i64 0, i64 0)) #6, !dbg !6582
  br label %if.end1266, !dbg !6584

if.end1266:                                       ; preds = %land.lhs.true1260, %if.then1264, %if.end1255
  %259 = load i64*, i64** %73, align 8, !dbg !6585
  %bf.load1268 = load i64, i64* %259, align 8, !dbg !6585
  %bf.cast127061 = and i64 %bf.load1268, 65535, !dbg !6585
  %cmp1271 = icmp eq i64 %bf.cast127061, 19, !dbg !6585
  %cmp1274 = icmp ne i32 %decl_context.addr.1, 2, !dbg !6587
  %or.cond41 = and i1 %cmp1271, %cmp1274, !dbg !6588
  %260 = bitcast i64* %259 to %union.tree_node*, !dbg !6588
  br i1 %or.cond41, label %land.lhs.true1276, label %if.end1299, !dbg !6588

land.lhs.true1276:                                ; preds = %if.end1266
  br i1 %cmp1258, label %if.then1298, label %land.lhs.true1279, !dbg !6589

land.lhs.true1279:                                ; preds = %land.lhs.true1276
  br i1 false, label %land.lhs.true1279.if.then1298_crit_edge, label %land.lhs.true1286, !dbg !6590

land.lhs.true1279.if.then1298_crit_edge:          ; preds = %land.lhs.true1279
  br label %if.then1298, !dbg !6590

land.lhs.true1286:                                ; preds = %land.lhs.true1279
  %cmp1287 = icmp eq i32 %storage_class.3, 2, !dbg !6591
  br i1 %cmp1287, label %if.end1299, label %lor.lhs.false1289, !dbg !6592

lor.lhs.false1289:                                ; preds = %land.lhs.true1286
  %261 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6593
  %262 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6594
  %cmp1290 = icmp ne %struct.c_scope* %261, %262, !dbg !6595
  %storage_class.3.off = add i32 %storage_class.3, -3, !dbg !6596
  %switch53 = icmp ult i32 %storage_class.3.off, 2, !dbg !6596
  %or.cond54 = or i1 %cmp1290, %switch53, !dbg !6596
  br i1 %or.cond54, label %if.then1298, label %if.end1299, !dbg !6596

if.then1298:                                      ; preds = %land.lhs.true1279.if.then1298_crit_edge, %land.lhs.true1276, %lor.lhs.false1289
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.319, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6597
  %263 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !6599
  store i64 %263, i64* %3, align 8, !dbg !6600
  %264 = inttoptr i64 %263 to i64*, !dbg !6601
  %265 = inttoptr i64 %263 to %union.tree_node*, !dbg !6601
  br label %if.end1299, !dbg !6601

if.end1299:                                       ; preds = %lor.lhs.false1289, %if.then1298, %land.lhs.true1286, %if.end1266
  %266 = phi %union.tree_node* [ %260, %lor.lhs.false1289 ], [ %265, %if.then1298 ], [ %260, %land.lhs.true1286 ], [ %260, %if.end1266 ]
  %267 = phi i64* [ %259, %lor.lhs.false1289 ], [ %264, %if.then1298 ], [ %259, %land.lhs.true1286 ], [ %259, %if.end1266 ]
  %268 = phi %union.tree_node* [ %260, %lor.lhs.false1289 ], [ %265, %if.then1298 ], [ %260, %land.lhs.true1286 ], [ %260, %if.end1266 ]
  %269 = phi %union.tree_node* [ %260, %lor.lhs.false1289 ], [ %265, %if.then1298 ], [ %260, %land.lhs.true1286 ], [ %260, %if.end1266 ]
  %270 = phi i64* [ %259, %lor.lhs.false1289 ], [ %264, %if.then1298 ], [ %259, %land.lhs.true1286 ], [ %259, %if.end1266 ]
  %271 = phi %union.tree_node* [ %260, %lor.lhs.false1289 ], [ %265, %if.then1298 ], [ %260, %land.lhs.true1286 ], [ %260, %if.end1266 ]
  %272 = phi i64* [ %259, %lor.lhs.false1289 ], [ %264, %if.then1298 ], [ %259, %land.lhs.true1286 ], [ %259, %if.end1266 ]
  %273 = phi i64* [ %259, %lor.lhs.false1289 ], [ %264, %if.then1298 ], [ %259, %land.lhs.true1286 ], [ %259, %if.end1266 ]
  %274 = phi i64* [ %259, %lor.lhs.false1289 ], [ %264, %if.then1298 ], [ %259, %land.lhs.true1286 ], [ %259, %if.end1266 ]
  switch i32 %decl_context.addr.1, label %if.else1466 [
    i32 2, label %if.then1303
    i32 3, label %if.then1381
  ], !dbg !6602

if.then1303:                                      ; preds = %if.end1299
  %bf.load1305 = load i64, i64* %270, align 8, !dbg !6603
  %bf.cast130777 = and i64 %bf.load1305, 65535, !dbg !6605
  %cmp1308 = icmp eq i64 %bf.cast130777, 15, !dbg !6605
  call void @llvm.dbg.value(metadata i64* %270, metadata !5575, metadata !DIExpression()), !dbg !5662
  br i1 %cmp1308, label %if.then1310, label %if.else1327, !dbg !6606

if.then1310:                                      ; preds = %if.then1303
  call void @llvm.dbg.value(metadata i64* %270, metadata !5575, metadata !DIExpression()), !dbg !5662
  %type1312 = getelementptr inbounds i64, i64* %270, i64 2, !dbg !6607
  %275 = load i64, i64* %type1312, align 8, !dbg !6607
  store i64 %275, i64* %3, align 8, !dbg !6609
  %tobool1313 = icmp eq i32 %type_quals.0.ph319, 0, !dbg !6610
  %276 = inttoptr i64 %275 to %union.tree_node*, !dbg !6612
  br i1 %tobool1313, label %if.end1316, label %if.then1314, !dbg !6612

if.then1314:                                      ; preds = %if.then1310
  call void @llvm.dbg.value(metadata %union.tree_node* %276, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1315 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %276, i32 %type_quals.0.ph319) #6, !dbg !6613
  call void @llvm.dbg.value(metadata %union.tree_node* %call1315, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1315, %union.tree_node** %type, align 8, !dbg !6614
  br label %if.end1316, !dbg !6615

if.end1316:                                       ; preds = %if.then1310, %if.then1314
  %277 = phi %union.tree_node* [ %276, %if.then1310 ], [ %call1315, %if.then1314 ], !dbg !6616
  call void @llvm.dbg.value(metadata %union.tree_node* %277, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1317 = call %union.tree_node* @build_pointer_type(%union.tree_node* %277) #6, !dbg !6617
  call void @llvm.dbg.value(metadata %union.tree_node* %call1317, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1317, %union.tree_node** %type, align 8, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %array_ptr_quals.0.ph113280, metadata !5581, metadata !DIExpression()), !dbg !5662
  %tobool1318 = icmp eq i32 %array_ptr_quals.0.ph113280, 0, !dbg !6619
  br i1 %tobool1318, label %if.end1321, label %if.then1319, !dbg !6621

if.then1319:                                      ; preds = %if.end1316
  call void @llvm.dbg.value(metadata %union.tree_node* %call1317, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1320 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call1317, i32 %array_ptr_quals.0.ph113280) #6, !dbg !6622
  call void @llvm.dbg.value(metadata %union.tree_node* %call1320, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1320, %union.tree_node** %type, align 8, !dbg !6623
  br label %if.end1321, !dbg !6624

if.end1321:                                       ; preds = %if.end1316, %if.then1319
  %array_ptr_quals.0.ph113281 = phi i32 [ %array_ptr_quals.0.ph113280, %if.end1316 ], [ %array_ptr_quals.0.ph113280, %if.then1319 ]
  %278 = phi %union.tree_node* [ %call1317, %if.end1316 ], [ %call1320, %if.then1319 ]
  %cmp1322 = icmp eq %union.tree_node* %array_ptr_attrs.0.ph112288, null, !dbg !6625
  br i1 %cmp1322, label %if.end1350, label %if.then1324, !dbg !6627

if.then1324:                                      ; preds = %if.end1321
  %call1325 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc.0.lcssa, i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.320, i64 0, i64 0)) #6, !dbg !6628
  %.pre184 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6629
  br label %if.end1350, !dbg !6628

if.else1327:                                      ; preds = %if.then1303
  %cmp1332 = icmp eq i64 %bf.cast130777, 20, !dbg !6630
  %tobool1335 = icmp ne i32 %type_quals.0.ph319, 0, !dbg !6632
  br i1 %cmp1332, label %if.then1334, label %if.else1344, !dbg !6633

if.then1334:                                      ; preds = %if.else1327
  br i1 %tobool1335, label %if.then1336, label %if.end1338, !dbg !6634

if.then1336:                                      ; preds = %if.then1334
  %call1337 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.308, i64 0, i64 0)) #6, !dbg !6636
  br label %if.end1338, !dbg !6636

if.end1338:                                       ; preds = %if.then1336, %if.then1334
  %tobool1339 = icmp eq i32 %type_quals.0.ph319, 0, !dbg !6638
  br i1 %tobool1339, label %if.end1338.if.end1342_crit_edge, label %if.then1340, !dbg !6640

if.end1338.if.end1342_crit_edge:                  ; preds = %if.end1338
  %.pre183 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6641
  br label %if.end1342, !dbg !6640

if.then1340:                                      ; preds = %if.end1338
  %279 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6642
  call void @llvm.dbg.value(metadata %union.tree_node* %279, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1341 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %279, i32 %type_quals.0.ph319) #6, !dbg !6643
  call void @llvm.dbg.value(metadata %union.tree_node* %call1341, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1341, %union.tree_node** %type, align 8, !dbg !6644
  br label %if.end1342, !dbg !6645

if.end1342:                                       ; preds = %if.end1338.if.end1342_crit_edge, %if.then1340
  %280 = phi %union.tree_node* [ %.pre183, %if.end1338.if.end1342_crit_edge ], [ %call1341, %if.then1340 ], !dbg !6641
  call void @llvm.dbg.value(metadata %union.tree_node* %280, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1343 = call %union.tree_node* @build_pointer_type(%union.tree_node* %280) #6, !dbg !6646
  call void @llvm.dbg.value(metadata %union.tree_node* %call1343, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1343, %union.tree_node** %type, align 8, !dbg !6647
  call void @llvm.dbg.value(metadata i32 0, metadata !5581, metadata !DIExpression()), !dbg !5662
  br label %if.end1350, !dbg !6648

if.else1344:                                      ; preds = %if.else1327
  br i1 %tobool1335, label %if.then1346, label %if.end1350, !dbg !6649

if.then1346:                                      ; preds = %if.else1344
  call void @llvm.dbg.value(metadata %union.tree_node* %269, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1347 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %269, i32 %type_quals.0.ph319) #6, !dbg !6650
  call void @llvm.dbg.value(metadata %union.tree_node* %call1347, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1347, %union.tree_node** %type, align 8, !dbg !6652
  br label %if.end1350, !dbg !6653

if.end1350:                                       ; preds = %if.end1321, %if.end1342, %if.then1346, %if.else1344, %if.then1324
  %281 = phi %union.tree_node* [ %.pre184, %if.then1324 ], [ %278, %if.end1321 ], [ %268, %if.else1344 ], [ %call1347, %if.then1346 ], [ %call1343, %if.end1342 ], !dbg !6629
  %size_varies.15 = phi i8 [ 0, %if.then1324 ], [ 0, %if.end1321 ], [ %size_varies.0.ph114273, %if.else1344 ], [ %size_varies.0.ph114273, %if.then1346 ], [ %size_varies.0.ph114273, %if.end1342 ], !dbg !5662
  %type_quals.4 = phi i32 [ %array_ptr_quals.0.ph113281, %if.then1324 ], [ %array_ptr_quals.0.ph113281, %if.end1321 ], [ 0, %if.else1344 ], [ %type_quals.0.ph319, %if.then1346 ], [ 0, %if.end1342 ], !dbg !6654
  call void @llvm.dbg.value(metadata i32 %type_quals.4, metadata !5581, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i8 %size_varies.15, metadata !5585, metadata !DIExpression()), !dbg !5662
  %id_loc1351 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 2, !dbg !6629
  %282 = load i32, i32* %id_loc1351, align 8, !dbg !6629
  %id1353 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6629
  %283 = load %union.tree_node*, %union.tree_node** %id1353, align 8, !dbg !6629
  call void @llvm.dbg.value(metadata %union.tree_node* %281, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1354 = call %union.tree_node* @build_decl_stat(i32 %282, i32 34, %union.tree_node* %283, %union.tree_node* %281) #6, !dbg !6629
  call void @llvm.dbg.value(metadata %union.tree_node* %call1354, metadata !5646, metadata !DIExpression()), !dbg !6655
  %tobool1355 = icmp eq i8 %size_varies.15, 0, !dbg !6656
  br i1 %tobool1355, label %if.end1361, label %if.then1356, !dbg !6658

if.then1356:                                      ; preds = %if.end1350
  %lang_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1354, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6659
  %284 = bitcast i40* %lang_flag_0 to i64*, !dbg !6659
  %bf.load1358 = load i64, i64* %284, align 8, !dbg !6660
  %bf.set1360 = or i64 %bf.load1358, 32768, !dbg !6660
  store i64 %bf.set1360, i64* %284, align 8, !dbg !6660
  br label %if.end1361, !dbg !6659

if.end1361:                                       ; preds = %if.end1350, %if.then1356
  %285 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6661
  call void @llvm.dbg.value(metadata %union.tree_node* %285, metadata !5575, metadata !DIExpression()), !dbg !5662
  %286 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6663
  %cmp1362 = icmp eq %union.tree_node* %285, %286, !dbg !6664
  call void @llvm.dbg.value(metadata %union.tree_node* %285, metadata !5575, metadata !DIExpression()), !dbg !5662
  br i1 %cmp1362, label %if.end1367, label %if.else1365, !dbg !6665

if.else1365:                                      ; preds = %if.end1361
  %call1366 = call %union.tree_node* @c_type_promotes_to(%union.tree_node* %285) #6, !dbg !6666
  call void @llvm.dbg.value(metadata %union.tree_node* %call1366, metadata !5648, metadata !DIExpression()), !dbg !6667
  br label %if.end1367

if.end1367:                                       ; preds = %if.end1361, %if.else1365
  %promoted_type.0 = phi %union.tree_node* [ %call1366, %if.else1365 ], [ %285, %if.end1361 ], !dbg !6668
  call void @llvm.dbg.value(metadata %union.tree_node* %promoted_type.0, metadata !5648, metadata !DIExpression()), !dbg !6667
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call1354, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !6669
  store %union.tree_node* %promoted_type.0, %union.tree_node** %initial, align 8, !dbg !6670
  %bf.load1370 = load i16, i16* %thread_p, align 8, !dbg !6671
  %bf.clear1372 = and i16 %bf.load1370, 64, !dbg !6671
  %tobool1374 = icmp eq i16 %bf.clear1372, 0, !dbg !6673
  br i1 %tobool1374, label %if.end1756, label %if.then1375, !dbg !6674

if.then1375:                                      ; preds = %if.end1367
  %call1376 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.321, i64 0, i64 0), %union.tree_node* %call1354) #6, !dbg !6675
  br label %if.end1756, !dbg !6675

if.then1381:                                      ; preds = %if.end1299
  %cmp1382 = icmp ne i32 %storage_class.3, 0, !dbg !6676
  %tobool1385 = icmp ne i8 %threadp.6, 0, !dbg !6676
  %or.cond44 = or i1 %cmp1382, %tobool1385, !dbg !6676
  br i1 %or.cond44, label %cond.true1393, label %land.lhs.true1386, !dbg !6676

land.lhs.true1386:                                ; preds = %if.then1381
  %bf.load1388 = load i16, i16* %thread_p, align 8, !dbg !6676
  %bf.clear1390 = and i16 %bf.load1388, 64, !dbg !6676
  %tobool1392 = icmp eq i16 %bf.clear1390, 0, !dbg !6676
  br i1 %tobool1392, label %cond.end1395, label %cond.true1393, !dbg !6676

cond.true1393:                                    ; preds = %land.lhs.true1386, %if.then1381
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 5808, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6676
  %.pre182 = load i64*, i64** %73, align 8, !dbg !6678
  %287 = bitcast i64* %.pre182 to %union.tree_node*, !dbg !6676
  br label %cond.end1395, !dbg !6676

cond.end1395:                                     ; preds = %land.lhs.true1386, %cond.true1393
  %288 = phi %union.tree_node* [ %271, %land.lhs.true1386 ], [ %287, %cond.true1393 ]
  %289 = phi i64* [ %272, %land.lhs.true1386 ], [ %.pre182, %cond.true1393 ]
  %290 = phi i64* [ %273, %land.lhs.true1386 ], [ %.pre182, %cond.true1393 ]
  %291 = phi i64* [ %274, %land.lhs.true1386 ], [ %.pre182, %cond.true1393 ], !dbg !6678
  %bf.load1398 = load i64, i64* %291, align 8, !dbg !6678
  %bf.cast140062 = and i64 %bf.load1398, 65535, !dbg !6680
  %cmp1401 = icmp eq i64 %bf.cast140062, 20, !dbg !6680
  br i1 %cmp1401, label %if.then1403, label %if.else1405, !dbg !6681

if.then1403:                                      ; preds = %cond.end1395
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.322, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6682
  %292 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6684
  call void @llvm.dbg.value(metadata %union.tree_node* %292, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1404 = call %union.tree_node* @build_pointer_type(%union.tree_node* %292) #6, !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %call1404, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1404, %union.tree_node** %type, align 8, !dbg !6686
  br label %if.end1435, !dbg !6687

if.else1405:                                      ; preds = %cond.end1395
  %bf.load1407 = load i64, i64* %290, align 8, !dbg !6688
  %bf.cast140963 = and i64 %bf.load1407, 65535, !dbg !6690
  %cmp1410 = icmp eq i64 %bf.cast140963, 0, !dbg !6690
  br i1 %cmp1410, label %if.end1435, label %land.lhs.true1412, !dbg !6691

land.lhs.true1412:                                ; preds = %if.else1405
  %bf.load1414 = load i64, i64* %289, align 8, !dbg !6692
  %bf.cast141676 = and i64 %bf.load1414, 65535, !dbg !6692
  %cmp1417 = icmp eq i64 %bf.cast141676, 15, !dbg !6692
  %.cast = bitcast i64* %289 to %union.tree_node*, !dbg !6692
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !5575, metadata !DIExpression()), !dbg !5662
  br i1 %cmp1417, label %cond.true1419, label %cond.end1423, !dbg !6692

cond.true1419:                                    ; preds = %land.lhs.true1412
  %type1421 = getelementptr inbounds i64, i64* %289, i64 2, !dbg !6692
  %293 = bitcast i64* %type1421 to %union.tree_node**, !dbg !6692
  %294 = load %union.tree_node*, %union.tree_node** %293, align 8, !dbg !6692
  br label %cond.end1423, !dbg !6692

cond.end1423:                                     ; preds = %land.lhs.true1412, %cond.true1419
  %cond1424 = phi %union.tree_node* [ %294, %cond.true1419 ], [ %.cast, %land.lhs.true1412 ], !dbg !6692
  %295 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond1424, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6692
  %296 = load %union.tree_node*, %union.tree_node** %295, align 8, !dbg !6692
  %cmp1427 = icmp eq %union.tree_node* %296, null, !dbg !6692
  br i1 %cmp1427, label %if.then1429, label %if.end1435, !dbg !6693

if.then1429:                                      ; preds = %cond.end1423
  br i1 %cmp37, label %if.else1432, label %if.then1431, !dbg !6694

if.then1431:                                      ; preds = %if.then1429
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.323, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6696
  br label %if.end1433, !dbg !6696

if.else1432:                                      ; preds = %if.then1429
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.324, i64 0, i64 0)) #6, !dbg !6698
  br label %if.end1433

if.end1433:                                       ; preds = %if.else1432, %if.then1431
  %297 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6699
  store i64 %297, i64* %3, align 8, !dbg !6700
  %298 = inttoptr i64 %297 to %union.tree_node*, !dbg !6701
  br label %if.end1435, !dbg !6701

if.end1435:                                       ; preds = %cond.end1423, %if.else1405, %if.end1433, %if.then1403
  %299 = phi %union.tree_node* [ %288, %cond.end1423 ], [ %288, %if.else1405 ], [ %298, %if.end1433 ], [ %call1404, %if.then1403 ], !dbg !6702
  call void @llvm.dbg.value(metadata %union.tree_node* %299, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1436 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %299, i32 %type_quals.0.ph319) #6, !dbg !6703
  call void @llvm.dbg.value(metadata %union.tree_node* %call1436, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1436, %union.tree_node** %type, align 8, !dbg !6704
  %id_loc1437 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 2, !dbg !6705
  %300 = load i32, i32* %id_loc1437, align 8, !dbg !6705
  %id1439 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6705
  %301 = load %union.tree_node*, %union.tree_node** %id1439, align 8, !dbg !6705
  call void @llvm.dbg.value(metadata %union.tree_node* %call1436, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1440 = call %union.tree_node* @build_decl_stat(i32 %300, i32 31, %union.tree_node* %301, %union.tree_node* %call1436) #6, !dbg !6705
  call void @llvm.dbg.value(metadata %union.tree_node* %call1440, metadata !5646, metadata !DIExpression()), !dbg !6655
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1440, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6706
  %302 = bitcast i40* %decl_flag_2 to i64*, !dbg !6706
  %303 = zext i1 %cmp to i64, !dbg !6707
  %bf.load1443 = load i64, i64* %302, align 8, !dbg !6707
  %bf.shl = shl nuw nsw i64 %303, 26, !dbg !6707
  %bf.clear1444 = and i64 %bf.load1443, -67108865, !dbg !6707
  %bf.set1445 = or i64 %bf.clear1444, %bf.shl, !dbg !6707
  store i64 %bf.set1445, i64* %302, align 8, !dbg !6707
  br i1 %cmp, label %land.lhs.true1448, label %if.end1457, !dbg !6708

land.lhs.true1448:                                ; preds = %if.end1435
  %304 = load %union.tree_node*, %union.tree_node** %id1439, align 8, !dbg !6710
  %tobool1451 = icmp eq %union.tree_node* %304, null, !dbg !6711
  br i1 %tobool1451, label %if.then1452, label %if.end1457, !dbg !6712

if.then1452:                                      ; preds = %land.lhs.true1448
  %305 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1440, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6713
  %bf.load1454 = load i64, i64* %305, align 8, !dbg !6714
  %bf.set1456 = or i64 %bf.load1454, 8388608, !dbg !6714
  store i64 %bf.set1456, i64* %305, align 8, !dbg !6714
  br label %if.end1457, !dbg !6713

if.end1457:                                       ; preds = %land.lhs.true1448, %if.then1452, %if.end1435
  %tobool1458 = icmp eq i8 %size_varies.0.ph114273, 0, !dbg !6715
  br i1 %tobool1458, label %if.end1756, label %if.then1459, !dbg !6717

if.then1459:                                      ; preds = %if.end1457
  %bf.set1464 = or i64 %bf.set1445, 32768, !dbg !6718
  store i64 %bf.set1464, i64* %302, align 8, !dbg !6718
  br label %if.end1756, !dbg !6719

if.else1466:                                      ; preds = %if.end1299
  %bf.load1468 = load i64, i64* %267, align 8, !dbg !6720
  %bf.cast147080 = and i64 %bf.load1468, 65535, !dbg !6721
  %cmp1471 = icmp eq i64 %bf.cast147080, 20, !dbg !6721
  br i1 %cmp1471, label %if.then1473, label %if.else1634, !dbg !6722

if.then1473:                                      ; preds = %if.else1466
  %cmp1474 = icmp eq i32 %storage_class.3, 3, !dbg !6723
  %tobool1478 = icmp ne i8 %threadp.6, 0, !dbg !6726
  %or.cond45 = or i1 %cmp1474, %tobool1478, !dbg !6727
  br i1 %or.cond45, label %if.then1479, label %if.else1480, !dbg !6727

if.then1479:                                      ; preds = %if.then1473
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.325, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6728
  br label %if.end1500, !dbg !6730

if.else1480:                                      ; preds = %if.then1473
  %306 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6731
  %307 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6733
  %cmp1481 = icmp eq %struct.c_scope* %306, %307, !dbg !6734
  br i1 %cmp1481, label %if.end1500, label %if.then1483, !dbg !6735

if.then1483:                                      ; preds = %if.else1480
  switch i32 %storage_class.3, label %if.end1500 [
    i32 1, label %if.then1486
    i32 4, label %if.then1491
  ], !dbg !6736

if.then1486:                                      ; preds = %if.then1483
  %call1487 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.325, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6738
  br label %if.end1500, !dbg !6738

if.then1491:                                      ; preds = %if.then1483
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.325, i64 0, i64 0), %union.tree_node* %name.0.lcssa) #6, !dbg !6740
  br i1 %cmp18, label %if.then1493, label %cleanup1930, !dbg !6743

if.then1493:                                      ; preds = %if.then1491
  store i32 0, i32* %storage_class2, align 4, !dbg !6744
  call void @llvm.dbg.value(metadata i32 0, metadata !5577, metadata !DIExpression()), !dbg !5662
  br label %if.end1500, !dbg !6746

if.end1500:                                       ; preds = %if.else1480, %if.then1493, %if.then1483, %if.then1486, %if.then1479
  %storage_class.7 = phi i32 [ %storage_class.3, %if.then1479 ], [ %storage_class.3, %if.else1480 ], [ 1, %if.then1486 ], [ 0, %if.then1493 ], [ %storage_class.3, %if.then1483 ], !dbg !6747
  call void @llvm.dbg.value(metadata i32 %storage_class.7, metadata !5577, metadata !DIExpression()), !dbg !5662
  %id_loc1501 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 2, !dbg !6748
  %308 = load i32, i32* %id_loc1501, align 8, !dbg !6748
  %id1503 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6748
  %309 = load %union.tree_node*, %union.tree_node** %id1503, align 8, !dbg !6748
  %310 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6748
  call void @llvm.dbg.value(metadata %union.tree_node* %310, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1504 = call %union.tree_node* @build_decl_stat(i32 %308, i32 29, %union.tree_node* %309, %union.tree_node* %310) #6, !dbg !6748
  call void @llvm.dbg.value(metadata %union.tree_node* %call1504, metadata !5646, metadata !DIExpression()), !dbg !6655
  %call1505 = call %union.tree_node* @build_decl_attribute_variant(%union.tree_node* %call1504, %union.tree_node* %5) #6, !dbg !6749
  call void @llvm.dbg.value(metadata %union.tree_node* %call1505, metadata !5646, metadata !DIExpression()), !dbg !6655
  %311 = load i32, i32* @pedantic, align 4, !dbg !6750
  %tobool1506 = icmp ne i32 %311, 0, !dbg !6750
  %tobool1508 = icmp ne i32 %type_quals.0.ph319, 0, !dbg !6752
  %or.cond46 = and i1 %tobool1506, %tobool1508, !dbg !6753
  br i1 %or.cond46, label %land.lhs.true1509, label %if.end1518, !dbg !6753

land.lhs.true1509:                                ; preds = %if.end1500
  %locus1510 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6754
  %312 = load i32, i32* %locus1510, align 8, !dbg !6754
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp1511, i32 %312) #6, !dbg !6754
  %sysp1512 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp1511, i64 0, i32 3, !dbg !6754
  %313 = load i8, i8* %sysp1512, align 8, !dbg !6754
  %cmp1514 = icmp eq i8 %313, 0, !dbg !6754
  br i1 %cmp1514, label %if.then1516, label %if.end1518, !dbg !6755

if.then1516:                                      ; preds = %land.lhs.true1509
  %call1517 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.308, i64 0, i64 0)) #6, !dbg !6756
  br label %if.end1518, !dbg !6756

if.end1518:                                       ; preds = %land.lhs.true1509, %if.then1516, %if.end1500
  %and1519 = and i32 %type_quals.0.ph319, 2, !dbg !6757
  %tobool1520 = icmp eq i32 %and1519, 0, !dbg !6757
  br i1 %tobool1520, label %if.end1534, label %land.lhs.true1521, !dbg !6759

land.lhs.true1521:                                ; preds = %if.end1518
  %type1523 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6760
  %314 = bitcast %union.tree_node** %type1523 to %struct.tree_common**, !dbg !6760
  %315 = load %struct.tree_common*, %struct.tree_common** %314, align 8, !dbg !6760
  %type1525 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %315, i64 0, i32 2, !dbg !6760
  %316 = bitcast %union.tree_node** %type1525 to i64**, !dbg !6760
  %317 = load i64*, i64** %316, align 8, !dbg !6760
  %bf.load1527 = load i64, i64* %317, align 8, !dbg !6760
  %bf.cast152983 = and i64 %bf.load1527, 65535, !dbg !6760
  %cmp1530 = icmp eq i64 %bf.cast152983, 19, !dbg !6760
  br i1 %cmp1530, label %if.end1534, label %if.then1532, !dbg !6761

if.then1532:                                      ; preds = %land.lhs.true1521
  %call1533 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.326, i64 0, i64 0)) #6, !dbg !6762
  br label %if.end1534, !dbg !6762

if.end1534:                                       ; preds = %if.end1518, %if.then1532, %land.lhs.true1521
  %cmp1535 = icmp eq i32 %storage_class.7, 1, !dbg !6763
  br i1 %cmp1535, label %land.lhs.true1537, label %if.else1544, !dbg !6765

land.lhs.true1537:                                ; preds = %if.end1534
  %318 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6766
  %319 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6767
  %cmp1538 = icmp eq %struct.c_scope* %318, %319, !dbg !6768
  br i1 %cmp1538, label %if.else1544, label %if.then1540, !dbg !6769

if.then1540:                                      ; preds = %land.lhs.true1537
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6770
  %320 = bitcast i40* %decl_flag_1 to i64*, !dbg !6770
  %bf.load1542 = load i64, i64* %320, align 8, !dbg !6771
  %bf.clear1543 = and i64 %bf.load1542, -33554433, !dbg !6771
  store i64 %bf.clear1543, i64* %320, align 8, !dbg !6771
  br label %if.end1579, !dbg !6770

if.else1544:                                      ; preds = %land.lhs.true1537, %if.end1534
  %bf.load1546 = load i16, i16* %thread_p, align 8, !dbg !6772
  %bf.clear1548 = and i16 %bf.load1546, 64, !dbg !6772
  %tobool1550 = icmp ne i16 %bf.clear1548, 0, !dbg !6774
  %cmp1552 = icmp ne i32 %storage_class.7, 4, !dbg !6775
  %or.cond47 = and i1 %tobool1550, %cmp1552, !dbg !6776
  br i1 %or.cond47, label %if.then1554, label %if.else1567, !dbg !6776

if.then1554:                                      ; preds = %if.else1544
  %cmp1555 = icmp eq i32 %storage_class.7, 2, !dbg !6777
  %conv1556 = zext i1 %cmp1555 to i32, !dbg !6777
  %321 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !6778
  %cmp1557 = icmp eq i32 %321, %conv1556, !dbg !6779
  %decl_flag_11560 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6780
  %322 = bitcast i40* %decl_flag_11560 to i64*, !dbg !6780
  %323 = zext i1 %cmp1557 to i64, !dbg !6781
  %bf.load1561 = load i64, i64* %322, align 8, !dbg !6781
  %bf.shl1563 = shl nuw nsw i64 %323, 25, !dbg !6781
  %bf.clear1564 = and i64 %bf.load1561, -33554433, !dbg !6781
  %bf.set1565 = or i64 %bf.clear1564, %bf.shl1563, !dbg !6781
  store i64 %bf.set1565, i64* %322, align 8, !dbg !6781
  br label %if.end1579, !dbg !6780

if.else1567:                                      ; preds = %if.else1544
  %tobool1568 = icmp eq i8 %initialized, 0, !dbg !6782
  %decl_flag_11571 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6783
  %324 = bitcast i40* %decl_flag_11571 to i64*, !dbg !6783
  %325 = zext i1 %tobool1568 to i64, !dbg !6784
  %bf.load1572 = load i64, i64* %324, align 8, !dbg !6784
  %bf.shl1574 = shl nuw nsw i64 %325, 25, !dbg !6784
  %bf.clear1575 = and i64 %bf.load1572, -33554433, !dbg !6784
  %bf.set1576 = or i64 %bf.clear1575, %bf.shl1574, !dbg !6784
  store i64 %bf.set1576, i64* %324, align 8, !dbg !6784
  br label %if.end1579

if.end1579:                                       ; preds = %if.then1554, %if.else1567, %if.then1540
  %bf.load1601 = phi i64 [ %bf.set1565, %if.then1554 ], [ %bf.set1576, %if.else1567 ], [ %bf.clear1543, %if.then1540 ]
  %cmp1580 = icmp ne i32 %storage_class.7, 4, !dbg !6785
  %cmp1582 = icmp ne i32 %storage_class.7, 1, !dbg !6786
  %326 = and i1 %cmp1580, %cmp1582, !dbg !6787
  %327 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6788
  %328 = zext i1 %326 to i64, !dbg !6789
  %bf.load1587 = load i64, i64* %327, align 8, !dbg !6789
  %bf.shl1589 = shl nuw nsw i64 %328, 27, !dbg !6789
  %bf.clear1590 = and i64 %bf.load1587, -134217729, !dbg !6789
  %bf.set1591 = or i64 %bf.clear1590, %bf.shl1589, !dbg !6789
  store i64 %bf.set1591, i64* %327, align 8, !dbg !6789
  br i1 %cmp18, label %if.then1594, label %if.end1595, !dbg !6790

if.then1594:                                      ; preds = %if.end1579
  store %struct.c_arg_info* %arg_info.0.ph327, %struct.c_arg_info** @current_function_arg_info, align 8, !dbg !6791
  br label %if.end1595, !dbg !6793

if.end1595:                                       ; preds = %if.then1594, %if.end1579
  %329 = load i32, i32* %default_int_p, align 4, !dbg !6794
  %tobool1597 = icmp eq i32 %329, 0, !dbg !6796
  br i1 %tobool1597, label %if.end1604, label %if.then1598, !dbg !6797

if.then1598:                                      ; preds = %if.end1595
  %lang_flag_11600 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6798
  %330 = bitcast i40* %lang_flag_11600 to i64*, !dbg !6798
  %bf.set1603 = or i64 %bf.load1601, 65536, !dbg !6799
  store i64 %bf.set1603, i64* %330, align 8, !dbg !6799
  br label %if.end1604, !dbg !6798

if.end1604:                                       ; preds = %if.end1595, %if.then1598
  %331 = load i32, i32* @flag_hosted, align 4, !dbg !6800
  %tobool1605 = icmp eq i32 %331, 0, !dbg !6800
  br i1 %tobool1605, label %if.else1621, label %land.lhs.true1606, !dbg !6802

land.lhs.true1606:                                ; preds = %if.end1604
  %332 = load %union.tree_node*, %union.tree_node** %id1503, align 8, !dbg !6803
  %333 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !6803
  %cmp1609 = icmp eq %union.tree_node* %332, %333, !dbg !6803
  br i1 %cmp1609, label %if.then1611, label %if.else1621, !dbg !6804

if.then1611:                                      ; preds = %land.lhs.true1606
  %bf.load1613 = load i16, i16* %thread_p, align 8, !dbg !6805
  %bf.clear1615 = and i16 %bf.load1613, 64, !dbg !6805
  %tobool1617 = icmp eq i16 %bf.clear1615, 0, !dbg !6808
  br i1 %tobool1617, label %if.end1756, label %if.then1618, !dbg !6809

if.then1618:                                      ; preds = %if.then1611
  %call1619 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.327, i64 0, i64 0)) #6, !dbg !6810
  br label %if.end1756, !dbg !6810

if.else1621:                                      ; preds = %if.end1604, %land.lhs.true1606
  %type_quals.0.ph320 = phi i32 [ %type_quals.0.ph319, %if.end1604 ], [ %type_quals.0.ph319, %land.lhs.true1606 ]
  %bf.load1623 = load i16, i16* %thread_p, align 8, !dbg !6811
  %bf.clear1625 = and i16 %bf.load1623, 64, !dbg !6811
  %tobool1627 = icmp eq i16 %bf.clear1625, 0, !dbg !6813
  br i1 %tobool1627, label %if.end1756, label %if.then1628, !dbg !6814

if.then1628:                                      ; preds = %if.else1621
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 5, !dbg !6815
  %bf.load1629 = load i32, i32* %declared_inline_flag, align 8, !dbg !6816
  %bf.set1631 = or i32 %bf.load1629, 2097152, !dbg !6816
  store i32 %bf.set1631, i32* %declared_inline_flag, align 8, !dbg !6816
  br label %if.end1756, !dbg !6815

if.else1634:                                      ; preds = %if.else1466
  %tobool1635 = icmp eq i8 %initialized, 0, !dbg !6817
  %cmp1637 = icmp eq i32 %storage_class.3, 2, !dbg !6818
  %spec.select49 = and i1 %tobool1635, %cmp1637, !dbg !6819
  call void @llvm.dbg.value(metadata i1 %spec.select49, metadata !5651, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %union.tree_node* %266, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1641 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %266, i32 %type_quals.0.ph319) #6, !dbg !6821
  call void @llvm.dbg.value(metadata %union.tree_node* %call1641, metadata !5575, metadata !DIExpression()), !dbg !5662
  store %union.tree_node* %call1641, %union.tree_node** %type, align 8, !dbg !6822
  br i1 %spec.select49, label %land.lhs.true1643, label %if.end1673, !dbg !6823

land.lhs.true1643:                                ; preds = %if.else1634
  %334 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6824
  %335 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6825
  %cmp1644 = icmp eq %struct.c_scope* %334, %335, !dbg !6826
  br i1 %cmp1644, label %if.end1673, label %if.then1646, !dbg !6827

if.then1646:                                      ; preds = %land.lhs.true1643
  %id1648 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6828
  %336 = load %union.tree_node*, %union.tree_node** %id1648, align 8, !dbg !6828
  %call1649 = call %union.tree_node* @identifier_global_value(%union.tree_node* %336) #7, !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %call1649, metadata !5655, metadata !DIExpression()), !dbg !6830
  %337 = load %union.tree_node*, %union.tree_node** %id1648, align 8, !dbg !6831
  %call1652 = call %union.tree_node* @lookup_name(%union.tree_node* %337) #7, !dbg !6832
  call void @llvm.dbg.value(metadata %union.tree_node* %call1652, metadata !5658, metadata !DIExpression()), !dbg !6830
  %tobool1653 = icmp ne %union.tree_node* %call1649, null, !dbg !6833
  %cmp1655 = icmp ne %union.tree_node* %call1649, %call1652, !dbg !6835
  %or.cond50 = and i1 %tobool1653, %cmp1655, !dbg !6836
  br i1 %or.cond50, label %land.lhs.true1657, label %if.end1673, !dbg !6836

land.lhs.true1657:                                ; preds = %if.then1646
  %338 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1649, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6837
  %bf.load1659 = load i64, i64* %338, align 8, !dbg !6837
  %bf.cast166181 = and i64 %bf.load1659, 65535, !dbg !6838
  %cmp1662 = icmp eq i64 %bf.cast166181, 32, !dbg !6838
  br i1 %cmp1662, label %land.lhs.true1664, label %if.end1673, !dbg !6839

land.lhs.true1664:                                ; preds = %land.lhs.true1657
  %bf.cast166982 = and i64 %bf.load1659, 134217728, !dbg !6840
  %tobool1670 = icmp eq i64 %bf.cast166982, 0, !dbg !6840
  br i1 %tobool1670, label %if.then1671, label %if.end1673, !dbg !6841

if.then1671:                                      ; preds = %land.lhs.true1664
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.328, i64 0, i64 0)) #6, !dbg !6842
  br label %if.end1673, !dbg !6842

if.end1673:                                       ; preds = %land.lhs.true1664, %land.lhs.true1643, %if.then1646, %land.lhs.true1657, %if.then1671, %if.else1634
  %id_loc1674 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 2, !dbg !6843
  %339 = load i32, i32* %id_loc1674, align 8, !dbg !6843
  %id1676 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator.addr.0.lcssa, i64 0, i32 3, i32 0, i32 0, !dbg !6843
  %340 = load %union.tree_node*, %union.tree_node** %id1676, align 8, !dbg !6843
  %341 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6843
  call void @llvm.dbg.value(metadata %union.tree_node* %341, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1677 = call %union.tree_node* @build_decl_stat(i32 %339, i32 32, %union.tree_node* %340, %union.tree_node* %341) #6, !dbg !6843
  call void @llvm.dbg.value(metadata %union.tree_node* %call1677, metadata !5646, metadata !DIExpression()), !dbg !6655
  %tobool1678 = icmp eq i8 %size_varies.0.ph114273, 0, !dbg !6844
  br i1 %tobool1678, label %if.end1685, label %if.then1679, !dbg !6846

if.then1679:                                      ; preds = %if.end1673
  %lang_flag_01681 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6847
  %342 = bitcast i40* %lang_flag_01681 to i64*, !dbg !6847
  %bf.load1682 = load i64, i64* %342, align 8, !dbg !6848
  %bf.set1684 = or i64 %bf.load1682, 32768, !dbg !6848
  store i64 %bf.set1684, i64* %342, align 8, !dbg !6848
  br label %if.end1685, !dbg !6847

if.end1685:                                       ; preds = %if.end1673, %if.then1679
  %bf.load1687 = load i16, i16* %thread_p, align 8, !dbg !6849
  %bf.clear1689 = and i16 %bf.load1687, 64, !dbg !6849
  %tobool1691 = icmp eq i16 %bf.clear1689, 0, !dbg !6851
  br i1 %tobool1691, label %if.end1694, label %if.then1692, !dbg !6852

if.then1692:                                      ; preds = %if.end1685
  %call1693 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc.0.lcssa, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.329, i64 0, i64 0), %union.tree_node* %call1677) #6, !dbg !6853
  br label %if.end1694, !dbg !6853

if.end1694:                                       ; preds = %if.end1685, %if.then1692
  %decl_flag_11698 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6854
  %343 = bitcast i40* %decl_flag_11698 to i64*, !dbg !6854
  %344 = zext i1 %cmp1637 to i64, !dbg !6855
  %bf.load1699 = load i64, i64* %343, align 8, !dbg !6855
  %bf.shl1701 = shl nuw nsw i64 %344, 25, !dbg !6855
  %bf.clear1702 = and i64 %bf.load1699, -33554433, !dbg !6855
  %bf.set1703 = or i64 %bf.clear1702, %bf.shl1701, !dbg !6855
  store i64 %bf.set1703, i64* %343, align 8, !dbg !6855
  %345 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !6856
  %346 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !6858
  %cmp1705 = icmp eq %struct.c_scope* %345, %346, !dbg !6859
  br i1 %cmp1705, label %if.then1707, label %if.else1727, !dbg !6860

if.then1707:                                      ; preds = %if.end1694
  %cmp1708 = icmp ne i32 %storage_class.3, 4, !dbg !6861
  %347 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6863
  %348 = zext i1 %cmp1708 to i64, !dbg !6864
  %bf.load1711 = load i64, i64* %347, align 8, !dbg !6864
  %bf.shl1713 = shl nuw nsw i64 %348, 27, !dbg !6864
  %bf.clear1714 = and i64 %bf.load1711, -201326593, !dbg !6864
  %bf.set1715 = or i64 %bf.clear1714, %bf.shl1713, !dbg !6864
  %lnot1718 = xor i1 %spec.select49, true, !dbg !6865
  %349 = zext i1 %lnot1718 to i64, !dbg !6866
  %bf.shl1723 = shl nuw nsw i64 %349, 26, !dbg !6866
  %bf.set1725 = or i64 %bf.set1715, %bf.shl1723, !dbg !6866
  store i64 %bf.set1725, i64* %347, align 8, !dbg !6866
  br label %if.end1744, !dbg !6867

if.else1727:                                      ; preds = %if.end1694
  %cmp1728 = icmp eq i32 %storage_class.3, 4, !dbg !6868
  %350 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1677, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6870
  %351 = zext i1 %cmp1728 to i64, !dbg !6871
  %bf.load1731 = load i64, i64* %350, align 8, !dbg !6871
  %bf.shl1733 = shl nuw nsw i64 %351, 26, !dbg !6871
  %bf.clear1734 = and i64 %bf.load1731, -201326593, !dbg !6871
  %bf.set1735 = or i64 %bf.clear1734, %bf.shl1733, !dbg !6871
  %352 = zext i1 %spec.select49 to i64, !dbg !6872
  %bf.shl1740 = shl nuw nsw i64 %352, 27, !dbg !6872
  %bf.set1742 = or i64 %bf.set1735, %bf.shl1740, !dbg !6872
  store i64 %bf.set1742, i64* %350, align 8, !dbg !6872
  br label %if.end1744

if.end1744:                                       ; preds = %if.else1727, %if.then1707
  %tobool1745 = icmp eq i8 %threadp.6, 0, !dbg !6873
  br i1 %tobool1745, label %if.end1756, label %if.then1746, !dbg !6875

if.then1746:                                      ; preds = %if.end1744
  %call1747 = call i32 @decl_default_tls_model(%union.tree_node* %call1677) #6, !dbg !6876
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %call1677, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6877
  %353 = bitcast i24* %tls_model to i32*, !dbg !6877
  %bf.load1748 = load i32, i32* %353, align 8, !dbg !6878
  %bf.value1749 = shl i32 %call1747, 13, !dbg !6878
  %bf.shl1750 = and i32 %bf.value1749, 57344, !dbg !6878
  %bf.clear1751 = and i32 %bf.load1748, -57345, !dbg !6878
  %bf.set1752 = or i32 %bf.clear1751, %bf.shl1750, !dbg !6878
  store i32 %bf.set1752, i32* %353, align 8, !dbg !6878
  br label %if.end1756, !dbg !6877

if.end1756:                                       ; preds = %if.then1611, %if.else1621, %if.end1744, %if.end1367, %if.end1457, %if.then1459, %if.then1746, %if.then1618, %if.then1628, %if.then1375
  %type_quals.5 = phi i32 [ %type_quals.4, %if.then1375 ], [ %type_quals.4, %if.end1367 ], [ %type_quals.0.ph320, %if.else1621 ], [ %type_quals.0.ph320, %if.then1628 ], [ %type_quals.0.ph319, %if.then1611 ], [ %type_quals.0.ph319, %if.then1618 ], [ %type_quals.0.ph319, %if.then1746 ], [ %type_quals.0.ph319, %if.end1744 ], [ %type_quals.0.ph319, %if.end1457 ], [ %type_quals.0.ph319, %if.then1459 ], !dbg !5662
  %storage_class.10 = phi i32 [ %storage_class.3, %if.then1375 ], [ %storage_class.3, %if.end1367 ], [ %storage_class.7, %if.else1621 ], [ %storage_class.7, %if.then1628 ], [ %storage_class.7, %if.then1611 ], [ %storage_class.7, %if.then1618 ], [ %storage_class.3, %if.then1746 ], [ %storage_class.3, %if.end1744 ], [ %storage_class.3, %if.end1457 ], [ %storage_class.3, %if.then1459 ], !dbg !6747
  %decl1300.2 = phi %union.tree_node* [ %call1354, %if.then1375 ], [ %call1354, %if.end1367 ], [ %call1505, %if.else1621 ], [ %call1505, %if.then1628 ], [ %call1505, %if.then1611 ], [ %call1505, %if.then1618 ], [ %call1677, %if.then1746 ], [ %call1677, %if.end1744 ], [ %call1440, %if.end1457 ], [ %call1440, %if.then1459 ], !dbg !6879
  call void @llvm.dbg.value(metadata %union.tree_node* %decl1300.2, metadata !5646, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i32 %storage_class.10, metadata !5577, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.value(metadata i32 %type_quals.5, metadata !5581, metadata !DIExpression()), !dbg !5662
  switch i32 %storage_class.10, label %if.end1797 [
    i32 2, label %if.end1756.land.lhs.true1771_crit_edge
    i32 0, label %land.lhs.true1762
    i32 3, label %if.then1788
  ], !dbg !6880

if.end1756.land.lhs.true1771_crit_edge:           ; preds = %if.end1756
  %.pre186 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6882
  br label %land.lhs.true1771, !dbg !6880

land.lhs.true1762:                                ; preds = %if.end1756
  %354 = load i64*, i64** %73, align 8, !dbg !6883
  %bf.load1764 = load i64, i64* %354, align 8, !dbg !6883
  %bf.cast176674 = and i64 %bf.load1764, 65535, !dbg !6884
  %cmp1767 = icmp ne i64 %bf.cast176674, 20, !dbg !6884
  %or.cond51 = or i1 %cmp1767, %cmp18, !dbg !6885
  %355 = bitcast i64* %354 to %union.tree_node*, !dbg !6885
  br i1 %or.cond51, label %if.end1785, label %land.lhs.true1771, !dbg !6885

land.lhs.true1771:                                ; preds = %if.end1756.land.lhs.true1771_crit_edge, %land.lhs.true1762
  %356 = phi %union.tree_node* [ %.pre186, %if.end1756.land.lhs.true1771_crit_edge ], [ %355, %land.lhs.true1762 ], !dbg !6882
  call void @llvm.dbg.value(metadata %union.tree_node* %356, metadata !5575, metadata !DIExpression()), !dbg !5662
  %call1772 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %356, %union.tree_node* null) #6, !dbg !6886
  %tobool1774 = icmp eq i8 %call1772, 0, !dbg !6886
  br i1 %tobool1774, label %if.end1785, label %if.then1775, !dbg !6887

if.then1775:                                      ; preds = %land.lhs.true1771
  %357 = load i64*, i64** %73, align 8, !dbg !6888
  %bf.load1777 = load i64, i64* %357, align 8, !dbg !6888
  %bf.cast177975 = and i64 %bf.load1777, 65535, !dbg !6891
  %cmp1780 = icmp eq i64 %bf.cast177975, 20, !dbg !6891
  br i1 %cmp1780, label %if.then1782, label %if.else1783, !dbg !6892

if.then1782:                                      ; preds = %if.then1775
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.330, i64 0, i64 0)) #6, !dbg !6893
  br label %if.end1785, !dbg !6893

if.else1783:                                      ; preds = %if.then1775
  call void (i32, i8*, ...) @error_at(i32 %loc.0.lcssa, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.331, i64 0, i64 0)) #6, !dbg !6894
  br label %if.end1785

if.end1785:                                       ; preds = %land.lhs.true1771, %if.then1782, %if.else1783, %land.lhs.true1762
  %cmp1786 = icmp eq i32 %storage_class.10, 3, !dbg !6895
  br i1 %cmp1786, label %if.then1788, label %if.end1797, !dbg !6897

if.then1788:                                      ; preds = %if.end1756, %if.end1785
  %lang_flag_4 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6898
  %358 = bitcast i40* %lang_flag_4 to i64*, !dbg !6898
  %bf.load1790 = load i64, i64* %358, align 8, !dbg !6900
  %bf.set1796 = or i64 %bf.load1790, 17301504, !dbg !6901
  store i64 %bf.set1796, i64* %358, align 8, !dbg !6901
  br label %if.end1797, !dbg !6902

if.end1797:                                       ; preds = %if.end1756, %if.then1788, %if.end1785
  call void @c_apply_type_quals_to_decl(i32 %type_quals.5, %union.tree_node* %decl1300.2) #6, !dbg !6903
  %type1799 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6904
  %359 = bitcast %union.tree_node** %type1799 to i64**, !dbg !6904
  %360 = load i64*, i64** %359, align 8, !dbg !6904
  %bf.load1801 = load i64, i64* %360, align 8, !dbg !6904
  %bf.cast180464 = and i64 %bf.load1801, 34359738368, !dbg !6904
  %tobool1805 = icmp eq i64 %bf.cast180464, 0, !dbg !6904
  br i1 %tobool1805, label %if.end1851, label %land.lhs.true1806, !dbg !6905

land.lhs.true1806:                                ; preds = %if.end1797
  %361 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6906
  %bf.load1808 = load i64, i64* %361, align 8, !dbg !6906
  %bf.cast181071 = and i64 %bf.load1808, 65535, !dbg !6907
  %cmp1811 = icmp eq i64 %bf.cast181071, 32, !dbg !6907
  br i1 %cmp1811, label %if.then1827, label %lor.lhs.false1813, !dbg !6908

lor.lhs.false1813:                                ; preds = %land.lhs.true1806
  %cmp1818 = icmp eq i64 %bf.cast181071, 34, !dbg !6909
  br i1 %cmp1818, label %if.then1827, label %lor.lhs.false1820, !dbg !6910

lor.lhs.false1820:                                ; preds = %lor.lhs.false1813
  %cmp1825 = icmp eq i64 %bf.cast181071, 36, !dbg !6911
  br i1 %cmp1825, label %if.then1827, label %if.end1851, !dbg !6912

if.then1827:                                      ; preds = %lor.lhs.false1820, %lor.lhs.false1813, %land.lhs.true1806
  %lang_flag_41829 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6913
  %362 = bitcast i40* %lang_flag_41829 to i64*, !dbg !6913
  %bf.load1830 = load i64, i64* %362, align 8, !dbg !6913
  %bf.cast1833 = and i64 %bf.load1830, 524288, !dbg !6913
  %bf.clear1841 = and i64 %bf.load1830, -17301505, !dbg !6914
  store i64 %bf.clear1841, i64* %362, align 8, !dbg !6914
  %call1842 = call zeroext i8 @c_mark_addressable(%union.tree_node* %decl1300.2) #6, !dbg !6915
  %bf.load1845 = load i64, i64* %362, align 8, !dbg !6916
  %bf.clear1848 = and i64 %bf.load1845, -524289, !dbg !6916
  %bf.set1849 = or i64 %bf.clear1848, %bf.cast1833, !dbg !6916
  store i64 %bf.set1849, i64* %362, align 8, !dbg !6916
  br label %if.end1851, !dbg !6917

if.end1851:                                       ; preds = %if.end1797, %if.then1827, %lor.lhs.false1820
  %363 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6918
  %bf.load1853 = load i64, i64* %363, align 8, !dbg !6918
  %bf.cast1855 = and i64 %bf.load1853, 65535, !dbg !6918
  %arrayidx1857 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast1855, i64 13, !dbg !6918
  %364 = load i8, i8* %arrayidx1857, align 1, !dbg !6918
  %tobool1859 = icmp eq i8 %364, 0, !dbg !6918
  br i1 %tobool1859, label %cond.end1866, label %land.lhs.true1860, !dbg !6918

land.lhs.true1860:                                ; preds = %if.end1851
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6918
  %365 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !6918
  %cmp1862 = icmp eq %union.tree_node* %365, null, !dbg !6918
  br i1 %cmp1862, label %cond.end1866, label %cond.true1864, !dbg !6918

cond.true1864:                                    ; preds = %land.lhs.true1860
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6022, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6918
  br label %cond.end1866, !dbg !6918

cond.end1866:                                     ; preds = %land.lhs.true1860, %if.end1851, %cond.true1864
  %366 = load i32, i32* @warn_cxx_compat, align 4, !dbg !6919
  %tobool1868 = icmp eq i32 %366, 0, !dbg !6919
  br i1 %tobool1868, label %cleanup1930, label %land.lhs.true1869, !dbg !6921

land.lhs.true1869:                                ; preds = %cond.end1866
  %bf.load1871 = load i64, i64* %363, align 8, !dbg !6922
  %bf.cast187365 = and i64 %bf.load1871, 65535, !dbg !6923
  %cmp1874 = icmp eq i64 %bf.cast187365, 32, !dbg !6923
  br i1 %cmp1874, label %land.lhs.true1876, label %cleanup1930, !dbg !6924

land.lhs.true1876:                                ; preds = %land.lhs.true1869
  %bf.cast188166 = and i64 %bf.load1871, 134217728, !dbg !6925
  %tobool1882 = icmp eq i64 %bf.cast188166, 0, !dbg !6925
  br i1 %tobool1882, label %cleanup1930, label %land.lhs.true1883, !dbg !6926

land.lhs.true1883:                                ; preds = %land.lhs.true1876
  %bf.cast188867 = and i64 %bf.load1871, 67108864, !dbg !6927
  %tobool1889 = icmp eq i64 %bf.cast188867, 0, !dbg !6927
  br i1 %tobool1889, label %cleanup1930, label %land.lhs.true1890, !dbg !6928

land.lhs.true1890:                                ; preds = %land.lhs.true1883
  %367 = load i64*, i64** %359, align 8, !dbg !6929
  %bf.load1894 = load i64, i64* %367, align 8, !dbg !6929
  %bf.cast189668 = and i64 %bf.load1894, 65535, !dbg !6930
  %cmp1897 = icmp eq i64 %bf.cast189668, 16, !dbg !6930
  br i1 %cmp1897, label %land.lhs.true1917, label %lor.lhs.false1899, !dbg !6931

lor.lhs.false1899:                                ; preds = %land.lhs.true1890
  %cmp1906 = icmp eq i64 %bf.cast189668, 17, !dbg !6932
  br i1 %cmp1906, label %land.lhs.true1917, label %lor.lhs.false1908, !dbg !6933

lor.lhs.false1908:                                ; preds = %lor.lhs.false1899
  %cmp1915 = icmp eq i64 %bf.cast189668, 6, !dbg !6934
  br i1 %cmp1915, label %land.lhs.true1917, label %cleanup1930, !dbg !6935

land.lhs.true1917:                                ; preds = %lor.lhs.false1908, %lor.lhs.false1899, %land.lhs.true1890
  %name1921 = getelementptr inbounds i64, i64* %367, i64 12, !dbg !6936
  %368 = bitcast i64* %name1921 to %union.tree_node**, !dbg !6936
  %369 = load %union.tree_node*, %union.tree_node** %368, align 8, !dbg !6936
  %cmp1922 = icmp eq %union.tree_node* %369, null, !dbg !6937
  br i1 %cmp1922, label %if.then1924, label %cleanup1930, !dbg !6938

if.then1924:                                      ; preds = %land.lhs.true1917
  %locus1926 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl1300.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6939
  %370 = load i32, i32* %locus1926, align 8, !dbg !6939
  %call1927 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %370, i32 49, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.332, i64 0, i64 0), %union.tree_node* %decl1300.2) #6, !dbg !6940
  br label %cleanup1930, !dbg !6940

cleanup1930:                                      ; preds = %if.then1208, %land.lhs.true1200, %land.lhs.true1178, %if.then1173, %land.lhs.true1168, %if.end1166, %land.lhs.true1883, %land.lhs.true1876, %cond.end1866, %if.then1491, %if.then1924, %land.lhs.true1917, %lor.lhs.false1908, %land.lhs.true1869, %if.then1213, %land.lhs.true1194, %lor.lhs.false1191, %if.end55, %if.end1254
  %retval.1 = phi %union.tree_node* [ %257, %if.end1254 ], [ null, %if.end55 ], [ %call1145, %if.then1173 ], [ %call1145, %land.lhs.true1178 ], [ %call1145, %lor.lhs.false1191 ], [ %call1145, %land.lhs.true1194 ], [ %call1145, %land.lhs.true1200 ], [ %call1145, %if.then1213 ], [ %call1145, %if.then1208 ], [ %call1145, %land.lhs.true1168 ], [ %call1145, %if.end1166 ], [ null, %if.then1491 ], [ %decl1300.2, %if.then1924 ], [ %decl1300.2, %land.lhs.true1917 ], [ %decl1300.2, %lor.lhs.false1908 ], [ %decl1300.2, %land.lhs.true1883 ], [ %decl1300.2, %land.lhs.true1876 ], [ %decl1300.2, %land.lhs.true1869 ], [ %decl1300.2, %cond.end1866 ], !dbg !5662
  call void @llvm.dbg.value(metadata i8* %expr_const_operands_dummy, metadata !5601, metadata !DIExpression(DW_OP_deref)), !dbg !5662
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %expr_const_operands_dummy) #8, !dbg !6941
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !6941
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6941
  ret %union.tree_node* %retval.1, !dbg !6941
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @start_decl(%struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, i8 zeroext %initialized, %union.tree_node* %attributes) local_unnamed_addr #5 !dbg !6942 {
entry:
  %attributes.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %expr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !6946, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !6947, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i8 %initialized, metadata !6948, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes, metadata !6949, metadata !DIExpression()), !dbg !6964
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  %0 = bitcast %union.tree_node** %decl to i8*, !dbg !6965
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6965
  %1 = bitcast %union.tree_node** %expr to i8*, !dbg !6966
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6966
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6952, metadata !DIExpression()), !dbg !6964
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !6967
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes, metadata !6949, metadata !DIExpression()), !dbg !6964
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), %union.tree_node* %attributes) #6, !dbg !6968
  %tobool = icmp ne %union.tree_node* %call, null, !dbg !6968
  %spec.select = zext i1 %tobool to i32, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6953, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %union.tree_node** %attributes.addr, metadata !6949, metadata !DIExpression(DW_OP_deref)), !dbg !6964
  call void @llvm.dbg.value(metadata %union.tree_node** %expr, metadata !6952, metadata !DIExpression(DW_OP_deref)), !dbg !6964
  %call1 = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, i32 0, i8 zeroext %initialized, %union.tree_node** null, %union.tree_node** nonnull %attributes.addr, %union.tree_node** nonnull %expr, i8* null, i32 %spec.select) #7, !dbg !6971
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6950, metadata !DIExpression()), !dbg !6964
  store %union.tree_node* %call1, %union.tree_node** %decl, align 8, !dbg !6972
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6950, metadata !DIExpression()), !dbg !6964
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !6973
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6975
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6975
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !6975

if.end4:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !6976
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6952, metadata !DIExpression()), !dbg !6964
  %tobool5 = icmp eq %union.tree_node* %4, null, !dbg !6976
  br i1 %tobool5, label %if.end4.if.end8_crit_edge, label %if.then6, !dbg !6978

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  %.pre28 = bitcast %union.tree_node** %decl to i64**, !dbg !6979
  br label %if.end8, !dbg !6978

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6952, metadata !DIExpression()), !dbg !6964
  %call7 = call %union.tree_node* @add_stmt(%union.tree_node* nonnull %4) #7, !dbg !6981
  %.phi.trans.insert = bitcast %union.tree_node** %decl to i64**, !dbg !6982
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !6979
  %5 = bitcast i64* %.pre to %struct.tree_decl_minimal*, !dbg !6981
  %6 = bitcast i64* %.pre to %union.tree_node*, !dbg !6981
  br label %if.end8, !dbg !6981

if.end8:                                          ; preds = %if.end4.if.end8_crit_edge, %if.then6
  %.pre-phi = phi i64** [ %.pre28, %if.end4.if.end8_crit_edge ], [ %.phi.trans.insert, %if.then6 ], !dbg !6979
  %7 = phi %union.tree_node* [ %call1, %if.end4.if.end8_crit_edge ], [ %6, %if.then6 ]
  %8 = phi %struct.tree_decl_minimal* [ %3, %if.end4.if.end8_crit_edge ], [ %5, %if.then6 ]
  %9 = phi i64* [ %2, %if.end4.if.end8_crit_edge ], [ %.pre, %if.then6 ], !dbg !6979
  %bf.load = load i64, i64* %9, align 8, !dbg !6979
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6983
  %cmp = icmp eq i64 %bf.cast4, 29, !dbg !6983
  br i1 %cmp, label %if.end12, label %land.lhs.true, !dbg !6984

land.lhs.true:                                    ; preds = %if.end8
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %8, i64 0, i32 3, !dbg !6985
  %10 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6985
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !6985
  %cmp9 = icmp eq %union.tree_node* %10, %11, !dbg !6985
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6986

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6950, metadata !DIExpression()), !dbg !6964
  %call11 = call zeroext i8 (i32, i8*, ...) @warning(i32 126, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), %union.tree_node* %7) #6, !dbg !6987
  br label %if.end12, !dbg !6987

if.end12:                                         ; preds = %if.end8, %if.then10, %land.lhs.true
  %tobool13 = icmp eq i8 %initialized, 0, !dbg !6988
  br i1 %tobool13, label %if.end65, label %if.then14, !dbg !6990

if.then14:                                        ; preds = %if.end12
  %12 = load i64*, i64** %.pre-phi, align 8, !dbg !6991
  %bf.load16 = load i64, i64* %12, align 8, !dbg !6991
  %13 = trunc i64 %bf.load16 to i16, !dbg !6991
  switch i16 %13, label %sw.default [
    i16 35, label %sw.bb
    i16 29, label %sw.bb19
    i16 34, label %sw.bb20
  ], !dbg !6992

sw.bb:                                            ; preds = %if.then14
  call void @llvm.dbg.value(metadata i64* %12, metadata !6950, metadata !DIExpression()), !dbg !6964
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0), i64* %12) #6, !dbg !6993
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !6995

sw.bb19:                                          ; preds = %if.then14
  call void @llvm.dbg.value(metadata i64* %12, metadata !6950, metadata !DIExpression()), !dbg !6964
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0), i64* %12) #6, !dbg !6996
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !6997

sw.bb20:                                          ; preds = %if.then14
  call void @llvm.dbg.value(metadata i64* %12, metadata !6950, metadata !DIExpression()), !dbg !6964
  call void (i8*, ...) @error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.51, i64 0, i64 0), i64* %12) #6, !dbg !6998
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !6999

sw.default:                                       ; preds = %if.then14
  %type = getelementptr inbounds i64, i64* %12, i64 2, !dbg !7000
  %14 = bitcast i64* %type to %union.tree_node**, !dbg !7000
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7000
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7002
  %cmp21 = icmp eq %union.tree_node* %15, %16, !dbg !7003
  br i1 %cmp21, label %if.end65, label %if.else, !dbg !7004

if.else:                                          ; preds = %sw.default
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7005
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !7005
  %cmp26 = icmp eq %union.tree_node* %18, null, !dbg !7005
  br i1 %cmp26, label %if.else43, label %if.then27, !dbg !7007

if.then27:                                        ; preds = %if.else
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7007
  %bf.load33 = load i64, i64* %19, align 8, !dbg !7008
  %bf.cast3522 = and i64 %bf.load33, 65535, !dbg !7011
  %cmp36 = icmp eq i64 %bf.cast3522, 23, !dbg !7011
  br i1 %cmp36, label %lor.lhs.false, label %if.then41, !dbg !7012

lor.lhs.false:                                    ; preds = %if.then27
  %lang_flag_0 = getelementptr inbounds i64, i64* %12, i64 7, !dbg !7013
  %bf.load37 = load i64, i64* %lang_flag_0, align 8, !dbg !7013
  %20 = trunc i64 %bf.load37 to i16, !dbg !7013
  %tobool40 = icmp slt i16 %20, 0, !dbg !7013
  br i1 %tobool40, label %if.then41, label %if.end65, !dbg !7014

if.then41:                                        ; preds = %if.then27, %lor.lhs.false
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !7015
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !7017

if.else43:                                        ; preds = %if.else
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7018
  %bf.load47 = load i64, i64* %21, align 8, !dbg !7018
  %bf.cast4920 = and i64 %bf.load47, 65535, !dbg !7020
  %cmp50 = icmp eq i64 %bf.cast4920, 15, !dbg !7020
  call void @llvm.dbg.value(metadata i64* %12, metadata !6950, metadata !DIExpression()), !dbg !6964
  br i1 %cmp50, label %if.else52, label %if.then51, !dbg !7021

if.then51:                                        ; preds = %if.else43
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.53, i64 0, i64 0), i64* %12) #6, !dbg !7022
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !7024

if.else52:                                        ; preds = %if.else43
  %lang_flag_054 = getelementptr inbounds i64, i64* %12, i64 7, !dbg !7025
  %bf.load55 = load i64, i64* %lang_flag_054, align 8, !dbg !7025
  %22 = trunc i64 %bf.load55 to i16, !dbg !7025
  %tobool59 = icmp slt i16 %22, 0, !dbg !7025
  br i1 %tobool59, label %if.then60, label %if.end65, !dbg !7027

if.then60:                                        ; preds = %if.else52
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !7028
  call void @llvm.dbg.value(metadata i8 0, metadata !6948, metadata !DIExpression()), !dbg !6964
  br label %if.end65, !dbg !7030

if.end65:                                         ; preds = %if.end12, %sw.bb, %sw.bb19, %sw.bb20, %if.then41, %lor.lhs.false, %if.else52, %if.then60, %if.then51, %sw.default
  %initialized.addr.6 = phi i8 [ 0, %if.end12 ], [ 0, %sw.bb20 ], [ 0, %sw.bb19 ], [ 0, %sw.bb ], [ 0, %sw.default ], [ 0, %if.then41 ], [ %initialized, %lor.lhs.false ], [ 0, %if.then51 ], [ 0, %if.then60 ], [ %initialized, %if.else52 ]
  call void @llvm.dbg.value(metadata i8 %initialized.addr.6, metadata !6948, metadata !DIExpression()), !dbg !6964
  %tobool66 = icmp eq i8 %initialized.addr.6, 0, !dbg !7031
  br i1 %tobool66, label %if.end65.if.end75_crit_edge, label %if.then67, !dbg !7033

if.end65.if.end75_crit_edge:                      ; preds = %if.end65
  %.pre24 = load i64*, i64** %.pre-phi, align 8, !dbg !7034
  %23 = bitcast i64* %.pre24 to %union.tree_node*, !dbg !7033
  %24 = bitcast i64* %.pre24 to %struct.tree_decl_with_vis*, !dbg !7033
  br label %if.end75, !dbg !7033

if.then67:                                        ; preds = %if.end65
  %25 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7036
  %26 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !7039
  %cmp68 = icmp eq %struct.c_scope* %25, %26, !dbg !7040
  br i1 %cmp68, label %if.then69, label %if.end73, !dbg !7041

if.then69:                                        ; preds = %if.then67
  %27 = load i64*, i64** %.pre-phi, align 8, !dbg !7042
  %bf.load71 = load i64, i64* %27, align 8, !dbg !7043
  %bf.set = or i64 %bf.load71, 67108864, !dbg !7043
  store i64 %bf.set, i64* %27, align 8, !dbg !7043
  br label %if.end73, !dbg !7042

if.end73:                                         ; preds = %if.then69, %if.then67
  %28 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7044
  %29 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !7045
  %30 = load %struct.tree_decl_common*, %struct.tree_decl_common** %29, align 8, !dbg !7045
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %30, i64 0, i32 5, !dbg !7045
  %31 = bitcast %union.tree_node** %initial to i64*, !dbg !7046
  store i64 %28, i64* %31, align 8, !dbg !7046
  %32 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %30, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7047
  %33 = bitcast %struct.tree_decl_common* %30 to %union.tree_node*, !dbg !7047
  %34 = bitcast %struct.tree_decl_common* %30 to %struct.tree_decl_with_vis*, !dbg !7047
  br label %if.end75, !dbg !7047

if.end75:                                         ; preds = %if.end65.if.end75_crit_edge, %if.end73
  %35 = phi %struct.tree_decl_with_vis* [ %24, %if.end65.if.end75_crit_edge ], [ %34, %if.end73 ]
  %36 = phi %struct.tree_decl_with_vis* [ %24, %if.end65.if.end75_crit_edge ], [ %34, %if.end73 ]
  %37 = phi i64* [ %.pre24, %if.end65.if.end75_crit_edge ], [ %32, %if.end73 ]
  %38 = phi i64* [ %.pre24, %if.end65.if.end75_crit_edge ], [ %32, %if.end73 ]
  %39 = phi %union.tree_node* [ %23, %if.end65.if.end75_crit_edge ], [ %33, %if.end73 ]
  %40 = phi i64* [ %.pre24, %if.end65.if.end75_crit_edge ], [ %32, %if.end73 ], !dbg !7034
  %bf.load77 = load i64, i64* %40, align 8, !dbg !7034
  %bf.cast795 = and i64 %bf.load77, 65535, !dbg !7048
  %cmp80 = icmp eq i64 %bf.cast795, 29, !dbg !7048
  br i1 %cmp80, label %if.then81, label %if.end86, !dbg !7049

if.then81:                                        ; preds = %if.end75
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !6950, metadata !DIExpression()), !dbg !6964
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7050
  %41 = bitcast %union.tree_node** %type83 to %struct.tree_type**, !dbg !7050
  %42 = load %struct.tree_type*, %struct.tree_type** %41, align 8, !dbg !7050
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %42, i64 0, i32 1, !dbg !7050
  %43 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !7050
  %cmp85 = icmp ne %union.tree_node* %43, null, !dbg !7051
  %conv = zext i1 %cmp85 to i32, !dbg !7051
  call void @gen_aux_info_record(%union.tree_node* %39, i32 0, i32 0, i32 %conv) #6, !dbg !7052
  %.pre25 = load i64*, i64** %.pre-phi, align 8, !dbg !7053
  %44 = bitcast i64* %.pre25 to %struct.tree_decl_with_vis*, !dbg !7052
  br label %if.end86, !dbg !7052

if.end86:                                         ; preds = %if.then81, %if.end75
  %45 = phi %struct.tree_decl_with_vis* [ %44, %if.then81 ], [ %35, %if.end75 ]
  %46 = phi %struct.tree_decl_with_vis* [ %44, %if.then81 ], [ %36, %if.end75 ]
  %47 = phi i64* [ %.pre25, %if.then81 ], [ %37, %if.end75 ]
  %48 = phi i64* [ %.pre25, %if.then81 ], [ %38, %if.end75 ], !dbg !7053
  %bf.load88 = load i64, i64* %48, align 8, !dbg !7053
  %bf.cast906 = and i64 %bf.load88, 65535, !dbg !7055
  %cmp91 = icmp ne i64 %bf.cast906, 32, !dbg !7055
  %tobool94 = icmp ne i8 %initialized.addr.6, 0, !dbg !7056
  %or.cond = or i1 %cmp91, %tobool94, !dbg !7057
  br i1 %or.cond, label %if.end115, label %land.lhs.true95, !dbg !7057

land.lhs.true95:                                  ; preds = %if.end86
  %bf.load97 = load i64, i64* %47, align 8, !dbg !7058
  %bf.cast1007 = and i64 %bf.load97, 134217728, !dbg !7058
  %tobool101 = icmp eq i64 %bf.cast1007, 0, !dbg !7058
  br i1 %tobool101, label %if.end115, label %land.lhs.true102, !dbg !7059

land.lhs.true102:                                 ; preds = %land.lhs.true95
  %tls_model = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %46, i64 0, i32 4, !dbg !7060
  %49 = bitcast i24* %tls_model to i32*, !dbg !7060
  %bf.load103 = load i32, i32* %49, align 8, !dbg !7060
  %bf.clear105 = and i32 %bf.load103, 49152, !dbg !7060
  %50 = load i32, i32* @flag_no_common, align 4, !dbg !7061
  %51 = or i32 %bf.clear105, %50, !dbg !7062
  %52 = icmp eq i32 %51, 0, !dbg !7062
  br i1 %52, label %if.then110, label %if.end115, !dbg !7062

if.then110:                                       ; preds = %land.lhs.true102
  %common_flag = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %45, i64 0, i32 4, !dbg !7063
  %53 = bitcast i24* %common_flag to i32*, !dbg !7063
  %bf.load112 = load i32, i32* %53, align 8, !dbg !7064
  %bf.set114 = or i32 %bf.load112, 8, !dbg !7064
  store i32 %bf.set114, i32* %53, align 8, !dbg !7064
  br label %if.end115, !dbg !7063

if.end115:                                        ; preds = %land.lhs.true102, %land.lhs.true95, %if.end86, %if.then110
  %54 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8, !dbg !7065
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !6949, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !6950, metadata !DIExpression(DW_OP_deref)), !dbg !6964
  %call116 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %decl, %union.tree_node* %54, i32 0) #6, !dbg !7066
  %inline_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 8, !dbg !7067
  %bf.load117 = load i16, i16* %inline_p, align 8, !dbg !7067
  %bf.clear119 = and i16 %bf.load117, 64, !dbg !7067
  %tobool121 = icmp eq i16 %bf.clear119, 0, !dbg !7069
  %55 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !7070
  %tobool123 = icmp ne i32 %55, 0, !dbg !7070
  %or.cond2 = or i1 %tobool121, %tobool123, !dbg !7071
  br i1 %or.cond2, label %if.end163, label %land.lhs.true124, !dbg !7071

land.lhs.true124:                                 ; preds = %if.end115
  %56 = load i64*, i64** %.pre-phi, align 8, !dbg !7072
  %bf.load126 = load i64, i64* %56, align 8, !dbg !7072
  %bf.cast1288 = and i64 %bf.load126, 65535, !dbg !7073
  %cmp129 = icmp eq i64 %bf.cast1288, 29, !dbg !7073
  br i1 %cmp129, label %land.lhs.true131, label %if.end163, !dbg !7074

land.lhs.true131:                                 ; preds = %land.lhs.true124
  %57 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !7075
  %attributes133 = getelementptr inbounds i64, i64* %56, i64 11, !dbg !7075
  %58 = bitcast i64* %attributes133 to %union.tree_node**, !dbg !7075
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8, !dbg !7075
  %call134 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %59) #6, !dbg !7076
  %tobool135 = icmp ne %union.tree_node* %call134, null, !dbg !7076
  %60 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7077
  %tobool137 = icmp ne %union.tree_node* %60, null, !dbg !7077
  %or.cond3 = or i1 %tobool135, %tobool137, !dbg !7078
  br i1 %or.cond3, label %if.then138, label %if.end163, !dbg !7078

if.then138:                                       ; preds = %land.lhs.true131
  %storage_class = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !7079
  %61 = load i32, i32* %storage_class, align 4, !dbg !7079
  %cmp139 = icmp eq i32 %61, 1, !dbg !7082
  br i1 %cmp139, label %land.lhs.true141, label %if.else145, !dbg !7083

land.lhs.true141:                                 ; preds = %if.then138
  %62 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7084
  %63 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !7085
  %cmp142 = icmp eq %struct.c_scope* %62, %63, !dbg !7086
  br i1 %cmp142, label %if.else145, label %if.end163, !dbg !7087

if.else145:                                       ; preds = %land.lhs.true141, %if.then138
  %cmp147 = icmp eq i32 %61, 4, !dbg !7088
  br i1 %cmp147, label %if.end163, label %if.then149, !dbg !7090

if.then149:                                       ; preds = %if.else145
  %64 = load %struct.tree_decl_common*, %struct.tree_decl_common** %57, align 8, !dbg !7091
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %64, i64 0, i32 2, !dbg !7091
  %65 = bitcast i40* %decl_flag_1 to i64*, !dbg !7091
  %bf.load151 = load i64, i64* %65, align 8, !dbg !7091
  %bf.set160 = xor i64 %bf.load151, 33554432, !dbg !7092
  store i64 %bf.set160, i64* %65, align 8, !dbg !7092
  br label %if.end163, !dbg !7093

if.end163:                                        ; preds = %land.lhs.true141, %if.else145, %if.then149, %land.lhs.true131, %if.end115, %land.lhs.true124
  %66 = load i64*, i64** %.pre-phi, align 8, !dbg !7094
  %bf.load165 = load i64, i64* %66, align 8, !dbg !7094
  %bf.cast1679 = and i64 %bf.load165, 65535, !dbg !7095
  %cmp168 = icmp eq i64 %bf.cast1679, 29, !dbg !7095
  br i1 %cmp168, label %land.lhs.true170, label %if.end228, !dbg !7096

land.lhs.true170:                                 ; preds = %if.end163
  %67 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 1), align 8, !dbg !7097
  %type172 = getelementptr inbounds i64, i64* %66, i64 2, !dbg !7098
  %68 = bitcast i64* %type172 to %union.tree_node**, !dbg !7098
  %69 = load %union.tree_node*, %union.tree_node** %68, align 8, !dbg !7098
  %call173 = call zeroext i8 %67(%union.tree_node* %69) #6, !dbg !7099
  %tobool175 = icmp eq i8 %call173, 0, !dbg !7099
  br i1 %tobool175, label %if.end228, label %if.then176, !dbg !7100

if.then176:                                       ; preds = %land.lhs.true170
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !6954, metadata !DIExpression()), !dbg !7101
  %kind = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator, i64 0, i32 0, !dbg !7102
  %70 = load i32, i32* %kind, align 8, !dbg !7102
  %cmp177 = icmp eq i32 %70, 3, !dbg !7104
  br i1 %cmp177, label %if.then179, label %if.end181, !dbg !7105

if.then179:                                       ; preds = %if.then176
  %declarator180 = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator, i64 0, i32 1, !dbg !7106
  %71 = load %struct.c_declarator*, %struct.c_declarator** %declarator180, align 8, !dbg !7106
  call void @llvm.dbg.value(metadata %struct.c_declarator* %71, metadata !6954, metadata !DIExpression()), !dbg !7101
  %kind182.phi.trans.insert = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %71, i64 0, i32 0, !dbg !7107
  %.pre26 = load i32, i32* %kind182.phi.trans.insert, align 8, !dbg !7108
  br label %if.end181, !dbg !7109

if.end181:                                        ; preds = %if.then179, %if.then176
  %72 = phi i32 [ %.pre26, %if.then179 ], [ %70, %if.then176 ], !dbg !7108
  %ce.0 = phi %struct.c_declarator* [ %71, %if.then179 ], [ %declarator, %if.then176 ], !dbg !7101
  call void @llvm.dbg.value(metadata %struct.c_declarator* %ce.0, metadata !6954, metadata !DIExpression()), !dbg !7101
  %cmp183 = icmp eq i32 %72, 1, !dbg !7110
  br i1 %cmp183, label %if.then185, label %if.end228, !dbg !7111

if.then185:                                       ; preds = %if.end181
  %u = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %ce.0, i64 0, i32 3, !dbg !7112
  %arg_info = bitcast %union.anon.1* %u to %struct.c_arg_info**, !dbg !7113
  %73 = load %struct.c_arg_info*, %struct.c_arg_info** %arg_info, align 8, !dbg !7113
  %parms = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %73, i64 0, i32 0, !dbg !7114
  br label %for.cond, !dbg !7115

for.cond:                                         ; preds = %for.inc, %if.then185
  %args.0.in = phi %union.tree_node** [ %parms, %if.then185 ], [ %chain, %for.inc ]
  %args.0 = load %union.tree_node*, %union.tree_node** %args.0.in, align 8, !dbg !7116
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !6957, metadata !DIExpression()), !dbg !7116
  %tobool186 = icmp eq %union.tree_node* %args.0, null, !dbg !7117
  br i1 %tobool186, label %if.end228.loopexit, label %for.body, !dbg !7117

for.body:                                         ; preds = %for.cond
  %type189 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7118
  %74 = load %union.tree_node*, %union.tree_node** %type189, align 8, !dbg !7118
  call void @llvm.dbg.value(metadata %union.tree_node* %74, metadata !6960, metadata !DIExpression()), !dbg !7119
  %tobool190 = icmp eq %union.tree_node* %74, null, !dbg !7120
  br i1 %tobool190, label %for.inc, label %land.lhs.true191, !dbg !7122

land.lhs.true191:                                 ; preds = %for.body
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7123
  %bf.load193 = load i64, i64* %75, align 8, !dbg !7123
  %bf.cast19516 = and i64 %bf.load193, 65535, !dbg !7123
  %cmp196 = icmp eq i64 %bf.cast19516, 6, !dbg !7123
  br i1 %cmp196, label %land.lhs.true212, label %lor.lhs.false198, !dbg !7123

lor.lhs.false198:                                 ; preds = %land.lhs.true191
  %cmp203 = icmp eq i64 %bf.cast19516, 7, !dbg !7123
  br i1 %cmp203, label %land.lhs.true212, label %lor.lhs.false205, !dbg !7123

lor.lhs.false205:                                 ; preds = %lor.lhs.false198
  %cmp210 = icmp eq i64 %bf.cast19516, 8, !dbg !7123
  br i1 %cmp210, label %land.lhs.true212, label %for.inc, !dbg !7124

land.lhs.true212:                                 ; preds = %lor.lhs.false205, %lor.lhs.false198, %land.lhs.true191
  %type213 = bitcast %union.tree_node* %74 to %struct.tree_type*, !dbg !7125
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type213, i64 0, i32 6, !dbg !7125
  %bf.load214 = load i32, i32* %precision, align 4, !dbg !7125
  %bf.clear215 = and i32 %bf.load214, 1023, !dbg !7125
  %76 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !7126
  %precision217 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %76, i64 0, i32 6, !dbg !7126
  %bf.load218 = load i32, i32* %precision217, align 4, !dbg !7126
  %bf.clear219 = and i32 %bf.load218, 1023, !dbg !7126
  %cmp220 = icmp ult i32 %bf.clear215, %bf.clear219, !dbg !7127
  br i1 %cmp220, label %if.then222, label %for.inc, !dbg !7128

if.then222:                                       ; preds = %land.lhs.true212
  %77 = ptrtoint %struct.tree_type* %76 to i64, !dbg !7128
  %initial224 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7129
  %78 = bitcast %union.tree_node** %initial224 to i64*, !dbg !7130
  store i64 %77, i64* %78, align 8, !dbg !7130
  br label %for.inc, !dbg !7129

for.inc:                                          ; preds = %for.body, %lor.lhs.false205, %land.lhs.true212, %if.then222
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7131
  br label %for.cond, !dbg !7132, !llvm.loop !7133

if.end228.loopexit:                               ; preds = %for.cond
  br label %if.end228, !dbg !7135

if.end228:                                        ; preds = %if.end228.loopexit, %land.lhs.true170, %if.end181, %if.end163
  %79 = load i64*, i64** %.pre-phi, align 8, !dbg !7135
  %bf.load230 = load i64, i64* %79, align 8, !dbg !7135
  %bf.cast23210 = and i64 %bf.load230, 65535, !dbg !7137
  %cmp233 = icmp eq i64 %bf.cast23210, 29, !dbg !7137
  br i1 %cmp233, label %land.lhs.true235, label %if.end253, !dbg !7138

land.lhs.true235:                                 ; preds = %if.end228
  %declared_inline_flag = getelementptr inbounds i64, i64* %79, i64 27, !dbg !7139
  %80 = bitcast i64* %declared_inline_flag to i32*, !dbg !7139
  %bf.load236 = load i32, i32* %80, align 8, !dbg !7139
  %bf.clear238 = and i32 %bf.load236, 2097152, !dbg !7139
  %tobool239 = icmp eq i32 %bf.clear238, 0, !dbg !7139
  br i1 %tobool239, label %if.end253, label %land.lhs.true240, !dbg !7140

land.lhs.true240:                                 ; preds = %land.lhs.true235
  %81 = trunc i32 %bf.load236 to i16, !dbg !7141
  %tobool245 = icmp slt i16 %81, 0, !dbg !7141
  br i1 %tobool245, label %land.lhs.true246, label %if.end253, !dbg !7142

land.lhs.true246:                                 ; preds = %land.lhs.true240
  %attributes248 = getelementptr inbounds i64, i64* %79, i64 11, !dbg !7143
  %82 = bitcast i64* %attributes248 to %union.tree_node**, !dbg !7143
  %83 = load %union.tree_node*, %union.tree_node** %82, align 8, !dbg !7143
  %call249 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %83) #6, !dbg !7144
  %tobool250 = icmp eq %union.tree_node* %call249, null, !dbg !7144
  br i1 %tobool250, label %if.end253, label %if.then251, !dbg !7145

if.then251:                                       ; preds = %land.lhs.true246
  %84 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7146
  call void @llvm.dbg.value(metadata %union.tree_node* %84, metadata !6950, metadata !DIExpression()), !dbg !6964
  %call252 = call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.56, i64 0, i64 0), %union.tree_node* %84) #6, !dbg !7147
  br label %if.end253, !dbg !7147

if.end253:                                        ; preds = %land.lhs.true246, %land.lhs.true235, %if.then251, %land.lhs.true240, %if.end228
  %85 = load i64*, i64** %.pre-phi, align 8, !dbg !7148
  %bf.load255 = load i64, i64* %85, align 8, !dbg !7148
  %bf.cast25711 = and i64 %bf.load255, 65535, !dbg !7150
  %cmp258 = icmp eq i64 %bf.cast25711, 32, !dbg !7150
  %86 = bitcast i64* %85 to %union.tree_node*, !dbg !7151
  br i1 %cmp258, label %land.lhs.true260, label %if.end293, !dbg !7151

land.lhs.true260:                                 ; preds = %if.end253
  %87 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7152
  %88 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !7153
  %cmp261 = icmp eq %struct.c_scope* %87, %88, !dbg !7154
  br i1 %cmp261, label %if.end293, label %land.lhs.true263, !dbg !7155

land.lhs.true263:                                 ; preds = %land.lhs.true260
  %bf.cast26813 = and i64 %bf.load255, 67108864, !dbg !7156
  %tobool269 = icmp eq i64 %bf.cast26813, 0, !dbg !7156
  br i1 %tobool269, label %if.end293, label %land.lhs.true270, !dbg !7157

land.lhs.true270:                                 ; preds = %land.lhs.true263
  %bf.cast27514 = and i64 %bf.load255, 1048576, !dbg !7158
  %tobool276 = icmp eq i64 %bf.cast27514, 0, !dbg !7158
  br i1 %tobool276, label %land.lhs.true277, label %if.end293, !dbg !7159

land.lhs.true277:                                 ; preds = %land.lhs.true270
  %89 = load %struct.tree_function_decl*, %struct.tree_function_decl** bitcast (%union.tree_node** @current_function_decl to %struct.tree_function_decl**), align 8, !dbg !7160
  %declared_inline_flag279 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %89, i64 0, i32 5, !dbg !7160
  %bf.load280 = load i32, i32* %declared_inline_flag279, align 8, !dbg !7160
  %bf.clear282 = and i32 %bf.load280, 2097152, !dbg !7160
  %tobool283 = icmp eq i32 %bf.clear282, 0, !dbg !7160
  %90 = bitcast %struct.tree_function_decl* %89 to %union.tree_node*, !dbg !7161
  br i1 %tobool283, label %if.end293, label %land.lhs.true284, !dbg !7161

land.lhs.true284:                                 ; preds = %land.lhs.true277
  %decl_flag_1286 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7162
  %91 = bitcast i40* %decl_flag_1286 to i64*, !dbg !7162
  %bf.load287 = load i64, i64* %91, align 8, !dbg !7162
  %bf.cast29015 = and i64 %bf.load287, 33554432, !dbg !7162
  %tobool291 = icmp eq i64 %bf.cast29015, 0, !dbg !7162
  br i1 %tobool291, label %if.end293, label %if.then292, !dbg !7163

if.then292:                                       ; preds = %land.lhs.true284
  %92 = load i32, i32* @input_location, align 4, !dbg !7164
  call void @llvm.dbg.value(metadata %union.tree_node* %86, metadata !6950, metadata !DIExpression()), !dbg !6964
  call void @record_inline_static(i32 %92, %union.tree_node* %90, %union.tree_node* %86, i32 1) #7, !dbg !7165
  %.pre27 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7166
  br label %if.end293, !dbg !7165

if.end293:                                        ; preds = %land.lhs.true284, %land.lhs.true277, %land.lhs.true270, %land.lhs.true263, %land.lhs.true260, %if.then292, %if.end253
  %93 = phi %union.tree_node* [ %86, %land.lhs.true284 ], [ %86, %land.lhs.true277 ], [ %86, %land.lhs.true270 ], [ %86, %land.lhs.true263 ], [ %86, %land.lhs.true260 ], [ %.pre27, %if.then292 ], [ %86, %if.end253 ], !dbg !7166
  call void @llvm.dbg.value(metadata %union.tree_node* %93, metadata !6950, metadata !DIExpression()), !dbg !6964
  %call294 = call %union.tree_node* @pushdecl(%union.tree_node* %93) #7, !dbg !7167
  call void @llvm.dbg.value(metadata %union.tree_node* %call294, metadata !6951, metadata !DIExpression()), !dbg !6964
  br i1 %tobool66, label %cleanup, label %land.lhs.true297, !dbg !7168

land.lhs.true297:                                 ; preds = %if.end293
  %decl_flag_1299 = getelementptr inbounds %union.tree_node, %union.tree_node* %call294, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7170
  %94 = bitcast i40* %decl_flag_1299 to i64*, !dbg !7170
  %bf.load300 = load i64, i64* %94, align 8, !dbg !7170
  %bf.cast30312 = and i64 %bf.load300, 33554432, !dbg !7170
  %tobool304 = icmp eq i64 %bf.cast30312, 0, !dbg !7170
  br i1 %tobool304, label %cleanup, label %if.then305, !dbg !7171

if.then305:                                       ; preds = %land.lhs.true297
  %bf.clear309 = and i64 %bf.load300, -33554433, !dbg !7172
  store i64 %bf.clear309, i64* %94, align 8, !dbg !7172
  %95 = getelementptr inbounds %union.tree_node, %union.tree_node* %call294, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7174
  %bf.load311 = load i64, i64* %95, align 8, !dbg !7175
  %bf.set313 = or i64 %bf.load311, 67108864, !dbg !7175
  store i64 %bf.set313, i64* %95, align 8, !dbg !7175
  br label %cleanup, !dbg !7176

cleanup:                                          ; preds = %land.lhs.true297, %if.end293, %entry, %if.then305
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call294, %if.then305 ], [ %call294, %land.lhs.true297 ], [ %call294, %if.end293 ], !dbg !6964
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7177
  ret %union.tree_node* %retval.0, !dbg !7177
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @finish_decl(%union.tree_node* %decl, i32 %init_loc, %union.tree_node* %init, %union.tree_node* %origtype, %union.tree_node* %asmspec_tree) local_unnamed_addr #5 !dbg !7178 {
entry:
  %vec = alloca %struct.VEC_tree_gc*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7182, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i32 %init_loc, metadata !7183, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !7184, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !7185, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata %union.tree_node* %asmspec_tree, metadata !7186, metadata !DIExpression()), !dbg !7216
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7217
  %0 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7217
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !7218
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !7188, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i8* null, metadata !7189, metadata !DIExpression()), !dbg !7216
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7219
  %bf.load = load i64, i64* %1, align 8, !dbg !7219
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !7221
  %cmp2 = icmp eq i64 %bf.cast4, 29, !dbg !7221
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !7222

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %bf.cast4, 32, !dbg !7223
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !7224

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7225
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !7225
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !7225
  br i1 %tobool, label %if.then, label %lor.lhs.false10, !dbg !7225

lor.lhs.false10:                                  ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7225
  %bf.load14 = load i64, i64* %3, align 8, !dbg !7225
  %bf.cast1654 = and i64 %bf.load14, 65535, !dbg !7225
  %cmp17 = icmp eq i64 %bf.cast1654, 40, !dbg !7225
  br i1 %cmp17, label %if.then, label %if.end, !dbg !7226

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false10
  %call = tail call %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node* %decl, %union.tree_node* %asmspec_tree) #6, !dbg !7227
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7186, metadata !DIExpression()), !dbg !7216
  %bf.load23.pre = load i64, i64* %1, align 8, !dbg !7228
  br label %if.end, !dbg !7230

if.end:                                           ; preds = %if.then, %lor.lhs.false10, %lor.lhs.false
  %bf.load30 = phi i64 [ %bf.load23.pre, %if.then ], [ %bf.load, %lor.lhs.false10 ], [ %bf.load, %lor.lhs.false ], !dbg !7228
  %asmspec_tree.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %asmspec_tree, %lor.lhs.false10 ], [ %asmspec_tree, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %asmspec_tree.addr.0, metadata !7186, metadata !DIExpression()), !dbg !7216
  %tobool19 = icmp eq %union.tree_node* %asmspec_tree.addr.0, null, !dbg !7231
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %asmspec_tree.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7233
  %arraydecay = bitcast i32* %str to i8*, !dbg !7233
  %asmspec.0 = select i1 %tobool19, i8* null, i8* %arraydecay, !dbg !7233
  call void @llvm.dbg.value(metadata i8* %asmspec.0, metadata !7189, metadata !DIExpression()), !dbg !7216
  %bf.cast256 = and i64 %bf.load30, 65535, !dbg !7234
  %cmp26 = icmp eq i64 %bf.cast256, 32, !dbg !7234
  br i1 %cmp26, label %land.lhs.true28, label %if.end38, !dbg !7235

land.lhs.true28:                                  ; preds = %if.end
  %bf.cast3253 = and i64 %bf.load30, 67108864, !dbg !7236
  %tobool33 = icmp eq i64 %bf.cast3253, 0, !dbg !7236
  br i1 %tobool33, label %if.end38, label %land.lhs.true34, !dbg !7237

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %call35 = tail call i32 @global_bindings_p() #7, !dbg !7238
  %tobool36 = icmp eq i32 %call35, 0, !dbg !7238
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !7239

if.then37:                                        ; preds = %land.lhs.true34
  tail call void @record_types_used_by_current_var_decl(%union.tree_node* %decl) #6, !dbg !7240
  br label %if.end38, !dbg !7240

if.end38:                                         ; preds = %land.lhs.true34, %land.lhs.true28, %if.then37, %if.end
  %cmp39 = icmp eq %union.tree_node* %init, null, !dbg !7241
  br i1 %cmp39, label %if.end46, label %land.lhs.true41, !dbg !7243

land.lhs.true41:                                  ; preds = %if.end38
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7244
  %4 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7244
  %cmp43 = icmp eq %union.tree_node* %4, null, !dbg !7245
  %spec.select = select i1 %cmp43, %union.tree_node* null, %union.tree_node* %init, !dbg !7246
  br label %if.end46, !dbg !7246

if.end46:                                         ; preds = %if.end38, %land.lhs.true41
  %init.addr.0 = phi %union.tree_node* [ null, %if.end38 ], [ %spec.select, %land.lhs.true41 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %init.addr.0, metadata !7184, metadata !DIExpression()), !dbg !7216
  %bf.load48 = load i64, i64* %1, align 8, !dbg !7247
  %bf.cast507 = and i64 %bf.load48, 65535, !dbg !7249
  %cmp51 = icmp eq i64 %bf.cast507, 34, !dbg !7249
  %spec.select1 = select i1 %cmp51, %union.tree_node* null, %union.tree_node* %init.addr.0, !dbg !7250
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select1, metadata !7184, metadata !DIExpression()), !dbg !7216
  %tobool55 = icmp eq %union.tree_node* %spec.select1, null, !dbg !7251
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !7253

if.then56:                                        ; preds = %if.end46
  tail call void @store_init_value(i32 %init_loc, %union.tree_node* %decl, %union.tree_node* nonnull %spec.select1, %union.tree_node* %origtype) #6, !dbg !7254
  br label %if.end57, !dbg !7254

if.end57:                                         ; preds = %if.end46, %if.then56
  %5 = load i32, i32* @c_language, align 4, !dbg !7255
  %and = and i32 %5, 1, !dbg !7255
  %cmp58 = icmp eq i32 %and, 0, !dbg !7255
  br i1 %cmp58, label %if.end82, label %land.lhs.true60, !dbg !7257

land.lhs.true60:                                  ; preds = %if.end57
  %bf.load62 = load i64, i64* %1, align 8, !dbg !7258
  %bf.cast6450 = and i64 %bf.load62, 65535, !dbg !7259
  %cmp65 = icmp eq i64 %bf.cast6450, 32, !dbg !7259
  br i1 %cmp65, label %if.then81, label %lor.lhs.false67, !dbg !7260

lor.lhs.false67:                                  ; preds = %land.lhs.true60
  %cmp72 = icmp eq i64 %bf.cast6450, 29, !dbg !7261
  br i1 %cmp72, label %if.then81, label %lor.lhs.false74, !dbg !7262

lor.lhs.false74:                                  ; preds = %lor.lhs.false67
  %cmp79 = icmp eq i64 %bf.cast6450, 31, !dbg !7263
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !7264

if.then81:                                        ; preds = %lor.lhs.false74, %lor.lhs.false67, %land.lhs.true60
  tail call void @objc_check_decl(%union.tree_node* %decl) #6, !dbg !7265
  br label %if.end82, !dbg !7265

if.end82:                                         ; preds = %if.end57, %if.then81, %lor.lhs.false74
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7266
  %6 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !7266
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7187, metadata !DIExpression()), !dbg !7216
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7267
  %bf.load85 = load i64, i64* %7, align 8, !dbg !7267
  %bf.cast878 = and i64 %bf.load85, 65535, !dbg !7268
  %cmp88 = icmp eq i64 %bf.cast878, 15, !dbg !7268
  br i1 %cmp88, label %land.lhs.true90, label %if.end200, !dbg !7269

land.lhs.true90:                                  ; preds = %if.end82
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7270
  %8 = bitcast i32* %values to %union.tree_node**, !dbg !7270
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !7270
  %cmp92 = icmp eq %union.tree_node* %9, null, !dbg !7271
  br i1 %cmp92, label %land.lhs.true94, label %if.end200, !dbg !7272

land.lhs.true94:                                  ; preds = %land.lhs.true90
  %bf.load96 = load i64, i64* %1, align 8, !dbg !7273
  %bf.cast9843 = and i64 %bf.load96, 65535, !dbg !7274
  %cmp99 = icmp eq i64 %bf.cast9843, 35, !dbg !7274
  br i1 %cmp99, label %if.end200, label %if.then101, !dbg !7275

if.then101:                                       ; preds = %land.lhs.true94
  %bf.cast10644 = and i64 %bf.load96, 67108864, !dbg !7276
  %tobool107 = icmp eq i64 %bf.cast10644, 0, !dbg !7276
  br i1 %tobool107, label %cond.false, label %cond.true, !dbg !7276

cond.true:                                        ; preds = %if.then101
  %10 = load i32, i32* @pedantic, align 4, !dbg !7277
  %tobool108 = icmp eq i32 %10, 0, !dbg !7277
  br i1 %tobool108, label %land.end, label %land.rhs, !dbg !7278

land.rhs:                                         ; preds = %cond.true
  %bf.cast11349 = and i64 %bf.load96, 134217728, !dbg !7279
  %tobool114 = icmp eq i64 %bf.cast11349, 0, !dbg !7279
  br label %land.end

land.end:                                         ; preds = %cond.true, %land.rhs
  %11 = phi i1 [ false, %cond.true ], [ %tobool114, %land.rhs ], !dbg !7280
  %land.ext = zext i1 %11 to i8, !dbg !7278
  br label %cond.end, !dbg !7276

cond.false:                                       ; preds = %if.then101
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7281
  %12 = bitcast i40* %decl_flag_1 to i64*, !dbg !7281
  %bf.load116 = load i64, i64* %12, align 8, !dbg !7281
  %bf.cast11945 = lshr i64 %bf.load116, 25, !dbg !7282
  %13 = trunc i64 %bf.cast11945 to i8, !dbg !7282
  %14 = and i8 %13, 1, !dbg !7282
  %15 = xor i8 %14, 1, !dbg !7282
  br label %cond.end, !dbg !7276

cond.end:                                         ; preds = %cond.false, %land.end
  %cond = phi i8 [ %land.ext, %land.end ], [ %15, %cond.false ], !dbg !7276
  call void @llvm.dbg.value(metadata i8 %cond, metadata !7190, metadata !DIExpression()), !dbg !7280
  %initial126 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7283
  %16 = load %union.tree_node*, %union.tree_node** %initial126, align 8, !dbg !7283
  %call127 = tail call i32 @complete_array_type(%union.tree_node** nonnull %type83, %union.tree_node* %16, i8 zeroext %cond) #6, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %call127, metadata !7193, metadata !DIExpression()), !dbg !7280
  %17 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !7285
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !7187, metadata !DIExpression()), !dbg !7216
  switch i32 %call127, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb130
    i32 3, label %sw.bb155
    i32 0, label %sw.bb156
  ], !dbg !7286

sw.bb:                                            ; preds = %cond.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.57, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7287
  br label %sw.epilog, !dbg !7288

sw.bb130:                                         ; preds = %cond.end
  %tobool131 = icmp eq i8 %cond, 0, !dbg !7289
  br i1 %tobool131, label %if.else, label %if.then132, !dbg !7291

if.then132:                                       ; preds = %sw.bb130
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7292
  br label %sw.epilog, !dbg !7292

if.else:                                          ; preds = %sw.bb130
  %18 = load i32, i32* @pedantic, align 4, !dbg !7293
  %tobool133 = icmp eq i32 %18, 0, !dbg !7293
  br i1 %tobool133, label %land.lhs.true134, label %sw.epilog, !dbg !7295

land.lhs.true134:                                 ; preds = %if.else
  %bf.load136 = load i64, i64* %1, align 8, !dbg !7296
  %bf.cast13947 = and i64 %bf.load136, 67108864, !dbg !7296
  %tobool140 = icmp eq i64 %bf.cast13947, 0, !dbg !7296
  br i1 %tobool140, label %sw.epilog, label %land.lhs.true141, !dbg !7297

land.lhs.true141:                                 ; preds = %land.lhs.true134
  %bf.cast14648 = and i64 %bf.load136, 134217728, !dbg !7298
  %tobool147 = icmp eq i64 %bf.cast14648, 0, !dbg !7298
  br i1 %tobool147, label %if.then148, label %sw.epilog, !dbg !7299

if.then148:                                       ; preds = %land.lhs.true141
  %decl_flag_1150 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7300
  %19 = bitcast i40* %decl_flag_1150 to i64*, !dbg !7300
  %bf.load151 = load i64, i64* %19, align 8, !dbg !7301
  %bf.set = or i64 %bf.load151, 33554432, !dbg !7301
  store i64 %bf.set, i64* %19, align 8, !dbg !7301
  br label %sw.epilog, !dbg !7300

sw.bb155:                                         ; preds = %cond.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7302
  br label %sw.epilog, !dbg !7303

sw.bb156:                                         ; preds = %cond.end
  %bf.load158 = load i64, i64* %1, align 8, !dbg !7304
  %bf.cast16146 = and i64 %bf.load158, 134217728, !dbg !7304
  %tobool162 = icmp eq i64 %bf.cast16146, 0, !dbg !7304
  br i1 %tobool162, label %sw.epilog, label %if.then163, !dbg !7305

if.then163:                                       ; preds = %sw.bb156
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7306
  %20 = bitcast %union.tree_node** %name to %struct.lang_identifier**, !dbg !7306
  %21 = load %struct.lang_identifier*, %struct.lang_identifier** %20, align 8, !dbg !7306
  %symbol_binding = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %21, i64 0, i32 1, !dbg !7306
  br label %while.cond, !dbg !7307

while.cond:                                       ; preds = %while.body, %if.then163
  %b_ext.0.in = phi %struct.c_binding** [ %symbol_binding, %if.then163 ], [ %shadowed, %while.body ]
  %b_ext.0 = load %struct.c_binding*, %struct.c_binding** %b_ext.0.in, align 8, !dbg !7308
  call void @llvm.dbg.value(metadata %struct.c_binding* %b_ext.0, metadata !7194, metadata !DIExpression()), !dbg !7308
  %cond2 = icmp eq %struct.c_binding* %b_ext.0, null, !dbg !7309
  br i1 %cond2, label %sw.epilog.loopexit, label %land.rhs166, !dbg !7309

land.rhs166:                                      ; preds = %while.cond
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0, i64 0, i32 5, !dbg !7310
  %bf.load167 = load i32, i32* %depth, align 8, !dbg !7310
  %bf.clear168 = and i32 %bf.load167, 268435455, !dbg !7310
  %cmp169 = icmp eq i32 %bf.clear168, 0, !dbg !7310
  br i1 %cmp169, label %while.end, label %while.body, !dbg !7307

while.body:                                       ; preds = %land.rhs166
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0, i64 0, i32 4, !dbg !7311
  br label %while.cond, !dbg !7307, !llvm.loop !7312

while.end:                                        ; preds = %land.rhs166
  %b_ext.0.lcssa59 = phi %struct.c_binding* [ %b_ext.0, %land.rhs166 ], !dbg !7308
  %type177 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b_ext.0.lcssa59, i64 0, i32 0, i32 0, !dbg !7313
  %22 = load %union.tree_node*, %union.tree_node** %type177, align 8, !dbg !7313
  %tobool178 = icmp eq %union.tree_node* %22, null, !dbg !7317
  br i1 %tobool178, label %if.else185, label %if.then179, !dbg !7318

if.then179:                                       ; preds = %while.end
  %call182 = tail call %union.tree_node* @composite_type(%union.tree_node* nonnull %22, %union.tree_node* %17) #6, !dbg !7319
  store %union.tree_node* %call182, %union.tree_node** %type177, align 8, !dbg !7320
  br label %sw.epilog, !dbg !7321

if.else185:                                       ; preds = %while.end
  store %union.tree_node* %17, %union.tree_node** %type177, align 8, !dbg !7322
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 4185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7323
  br label %sw.epilog, !dbg !7324

sw.epilog.loopexit:                               ; preds = %while.cond
  br label %sw.epilog, !dbg !7325

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %land.lhs.true141, %land.lhs.true134, %if.else, %sw.bb156, %if.then179, %if.else185, %if.then132, %if.then148, %sw.default, %sw.bb155, %sw.bb
  %23 = load %union.tree_node*, %union.tree_node** %initial126, align 8, !dbg !7325
  %tobool193 = icmp eq %union.tree_node* %23, null, !dbg !7325
  br i1 %tobool193, label %if.end199, label %if.then194, !dbg !7327

if.then194:                                       ; preds = %sw.epilog
  %type198 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7328
  store %union.tree_node* %17, %union.tree_node** %type198, align 8, !dbg !7329
  br label %if.end199, !dbg !7328

if.end199:                                        ; preds = %sw.epilog, %if.then194
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #6, !dbg !7330
  br label %if.end200, !dbg !7331

if.end200:                                        ; preds = %land.lhs.true94, %if.end199, %land.lhs.true90, %if.end82
  %type.0 = phi %union.tree_node* [ %17, %if.end199 ], [ %6, %land.lhs.true94 ], [ %6, %land.lhs.true90 ], [ %6, %if.end82 ], !dbg !7216
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !7187, metadata !DIExpression()), !dbg !7216
  %bf.load202 = load i64, i64* %1, align 8, !dbg !7332
  %bf.cast2049 = and i64 %bf.load202, 65535, !dbg !7334
  %cmp205 = icmp eq i64 %bf.cast2049, 32, !dbg !7334
  br i1 %cmp205, label %if.then207, label %if.end330, !dbg !7335

if.then207:                                       ; preds = %if.end200
  br i1 %tobool55, label %if.end217, label %land.lhs.true209, !dbg !7336

land.lhs.true209:                                 ; preds = %if.then207
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7339
  %bf.load211 = load i64, i64* %24, align 8, !dbg !7339
  %bf.cast21342 = and i64 %bf.load211, 65535, !dbg !7340
  %cmp214 = icmp eq i64 %bf.cast21342, 51, !dbg !7340
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !7341

if.then216:                                       ; preds = %land.lhs.true209
  tail call fastcc void @add_flexible_array_elts_to_size(%union.tree_node* %decl, %union.tree_node* nonnull %spec.select1) #7, !dbg !7342
  br label %if.end217, !dbg !7342

if.end217:                                        ; preds = %if.then207, %if.then216, %land.lhs.true209
  %25 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7343
  %cmp220 = icmp eq %union.tree_node* %25, null, !dbg !7345
  br i1 %cmp220, label %land.lhs.true222, label %if.end235, !dbg !7346

land.lhs.true222:                                 ; preds = %if.end217
  %26 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !7347
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7348
  %cmp225 = icmp eq %union.tree_node* %26, %27, !dbg !7349
  br i1 %cmp225, label %if.end235, label %land.lhs.true227, !dbg !7350

land.lhs.true227:                                 ; preds = %land.lhs.true222
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7351
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !7351
  %cmp232 = icmp eq %union.tree_node* %29, null, !dbg !7351
  br i1 %cmp232, label %if.end235, label %if.then234, !dbg !7352

if.then234:                                       ; preds = %land.lhs.true227
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #6, !dbg !7353
  %.pre = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7354
  br label %if.end235, !dbg !7353

if.end235:                                        ; preds = %land.lhs.true227, %land.lhs.true222, %if.then234, %if.end217
  %30 = phi %union.tree_node* [ null, %land.lhs.true227 ], [ null, %land.lhs.true222 ], [ %.pre, %if.then234 ], [ %25, %if.end217 ], !dbg !7354
  %cmp238 = icmp eq %union.tree_node* %30, null, !dbg !7356
  br i1 %cmp238, label %land.lhs.true240, label %if.end281, !dbg !7357

land.lhs.true240:                                 ; preds = %if.end235
  %31 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !7358
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7359
  %cmp243 = icmp eq %union.tree_node* %31, %32, !dbg !7360
  br i1 %cmp243, label %if.end281, label %land.lhs.true245, !dbg !7361

land.lhs.true245:                                 ; preds = %land.lhs.true240
  %bf.load247 = load i64, i64* %1, align 8, !dbg !7362
  %bf.cast25039 = and i64 %bf.load247, 67108864, !dbg !7362
  %tobool251 = icmp eq i64 %bf.cast25039, 0, !dbg !7362
  br i1 %tobool251, label %cond.false270, label %cond.true252, !dbg !7363

cond.true252:                                     ; preds = %land.lhs.true245
  %initial254 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7364
  %33 = load %union.tree_node*, %union.tree_node** %initial254, align 8, !dbg !7364
  %cmp255 = icmp eq %union.tree_node* %33, null, !dbg !7365
  br i1 %cmp255, label %lor.lhs.false257, label %if.then278, !dbg !7366

lor.lhs.false257:                                 ; preds = %cond.true252
  %context259 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7367
  %34 = load %union.tree_node*, %union.tree_node** %context259, align 8, !dbg !7367
  %tobool260 = icmp eq %union.tree_node* %34, null, !dbg !7367
  br i1 %tobool260, label %if.end281, label %lor.lhs.false261, !dbg !7367

lor.lhs.false261:                                 ; preds = %lor.lhs.false257
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7367
  %bf.load265 = load i64, i64* %35, align 8, !dbg !7367
  %bf.cast26741 = and i64 %bf.load265, 65535, !dbg !7367
  %cmp268 = icmp eq i64 %bf.cast26741, 40, !dbg !7367
  br i1 %cmp268, label %if.end281, label %if.then278, !dbg !7362

cond.false270:                                    ; preds = %land.lhs.true245
  %decl_flag_1272 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7368
  %36 = bitcast i40* %decl_flag_1272 to i64*, !dbg !7368
  %bf.load273 = load i64, i64* %36, align 8, !dbg !7368
  %bf.cast27640 = and i64 %bf.load273, 33554432, !dbg !7368
  %tobool277 = icmp eq i64 %bf.cast27640, 0, !dbg !7368
  br i1 %tobool277, label %if.then278, label %if.end281, !dbg !7363

if.then278:                                       ; preds = %cond.true252, %cond.false270, %lor.lhs.false261
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.60, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7369
  %37 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7371
  %38 = bitcast %union.tree_node** %type83 to i64*, !dbg !7372
  store i64 %37, i64* %38, align 8, !dbg !7372
  br label %if.end281, !dbg !7373

if.end281:                                        ; preds = %lor.lhs.false257, %cond.false270, %land.lhs.true240, %if.then278, %lor.lhs.false261, %if.end235
  %decl_flag_1283 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7374
  %39 = bitcast i40* %decl_flag_1283 to i64*, !dbg !7374
  %bf.load284 = load i64, i64* %39, align 8, !dbg !7374
  %bf.cast28735 = and i64 %bf.load284, 33554432, !dbg !7374
  %tobool288 = icmp eq i64 %bf.cast28735, 0, !dbg !7374
  br i1 %tobool288, label %lor.lhs.false289, label %land.lhs.true296, !dbg !7376

lor.lhs.false289:                                 ; preds = %if.end281
  %bf.load291 = load i64, i64* %1, align 8, !dbg !7377
  %bf.cast29436 = and i64 %bf.load291, 67108864, !dbg !7377
  %tobool295 = icmp eq i64 %bf.cast29436, 0, !dbg !7377
  br i1 %tobool295, label %if.end317, label %land.lhs.true296, !dbg !7378

land.lhs.true296:                                 ; preds = %lor.lhs.false289, %if.end281
  %40 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7379
  %cmp299 = icmp eq %union.tree_node* %40, null, !dbg !7380
  br i1 %cmp299, label %if.end317, label %if.then301, !dbg !7381

if.then301:                                       ; preds = %land.lhs.true296
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7381
  %bf.load305 = load i64, i64* %41, align 8, !dbg !7382
  %bf.cast30738 = and i64 %bf.load305, 65535, !dbg !7385
  %cmp308 = icmp eq i64 %bf.cast30738, 23, !dbg !7385
  br i1 %cmp308, label %if.then310, label %if.else313, !dbg !7386

if.then310:                                       ; preds = %if.then301
  tail call void @constant_expression_warning(%union.tree_node* nonnull %40) #6, !dbg !7387
  br label %if.end317, !dbg !7387

if.else313:                                       ; preds = %if.then301
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.61, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7388
  %42 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7390
  %43 = bitcast %union.tree_node** %type83 to i64*, !dbg !7391
  store i64 %42, i64* %43, align 8, !dbg !7391
  br label %if.end317

if.end317:                                        ; preds = %land.lhs.true296, %lor.lhs.false289, %if.then310, %if.else313
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7392
  %bf.load319 = load i64, i64* %44, align 8, !dbg !7392
  %bf.cast32237 = and i64 %bf.load319, 16777216, !dbg !7392
  %tobool323 = icmp eq i64 %bf.cast32237, 0, !dbg !7392
  br i1 %tobool323, label %if.end317.if.end330_crit_edge, label %if.then324, !dbg !7394

if.end317.if.end330_crit_edge:                    ; preds = %if.end317
  %bf.load332.pre = load i64, i64* %1, align 8, !dbg !7395
  br label %if.end330, !dbg !7394

if.then324:                                       ; preds = %if.end317
  %bf.load326 = load i64, i64* %1, align 8, !dbg !7397
  %bf.set328 = or i64 %bf.load326, 16777216, !dbg !7397
  store i64 %bf.set328, i64* %1, align 8, !dbg !7397
  br label %if.end330, !dbg !7398

if.end330:                                        ; preds = %if.end317.if.end330_crit_edge, %if.then324, %if.end200
  %bf.load332 = phi i64 [ %bf.load332.pre, %if.end317.if.end330_crit_edge ], [ %bf.set328, %if.then324 ], [ %bf.load202, %if.end200 ], !dbg !7395
  %bf.cast33410 = and i64 %bf.load332, 65535, !dbg !7399
  %cmp335 = icmp eq i64 %bf.cast33410, 29, !dbg !7399
  %tobool338 = icmp ne i8* %asmspec.0, null, !dbg !7400
  %or.cond = and i1 %cmp335, %tobool338, !dbg !7401
  br i1 %or.cond, label %if.then339, label %if.end347, !dbg !7401

if.then339:                                       ; preds = %if.end330
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !7402
  %bf.load340 = load i32, i32* %built_in_class, align 8, !dbg !7402
  %bf.clear342 = and i32 %bf.load340, 6144, !dbg !7402
  %cmp343 = icmp eq i32 %bf.clear342, 6144, !dbg !7405
  br i1 %cmp343, label %if.then345, label %if.end346, !dbg !7406

if.then345:                                       ; preds = %if.then339
  tail call void @set_builtin_user_assembler_name(%union.tree_node* %decl, i8* nonnull %asmspec.0) #6, !dbg !7407
  br label %if.end346, !dbg !7407

if.end346:                                        ; preds = %if.then345, %if.then339
  tail call void @set_user_assembler_name(%union.tree_node* %decl, i8* nonnull %asmspec.0) #6, !dbg !7408
  br label %if.end347, !dbg !7409

if.end347:                                        ; preds = %if.end346, %if.end330
  tail call void @maybe_apply_pragma_weak(%union.tree_node* %decl) #6, !dbg !7410
  %bf.load349 = load i64, i64* %1, align 8, !dbg !7411
  %bf.cast35111 = and i64 %bf.load349, 65535, !dbg !7412
  %cmp352 = icmp eq i64 %bf.cast35111, 32, !dbg !7412
  br i1 %cmp352, label %if.then361, label %lor.lhs.false354, !dbg !7413

lor.lhs.false354:                                 ; preds = %if.end347
  %cmp359 = icmp eq i64 %bf.cast35111, 29, !dbg !7414
  br i1 %cmp359, label %if.then361, label %if.end558, !dbg !7415

if.then361:                                       ; preds = %lor.lhs.false354, %if.end347
  %bf.cast36621 = and i64 %bf.load349, 134217728, !dbg !7416
  %tobool367 = icmp eq i64 %bf.cast36621, 0, !dbg !7416
  br i1 %tobool367, label %if.end370, label %if.then368, !dbg !7418

if.then368:                                       ; preds = %if.then361
  %call369 = tail call zeroext i8 @c_determine_visibility(%union.tree_node* %decl) #6, !dbg !7419
  br label %if.end370, !dbg !7419

if.end370:                                        ; preds = %if.then361, %if.then368
  %45 = load i32, i32* @c_language, align 4, !dbg !7420
  %and371 = and i32 %45, 1, !dbg !7420
  %cmp372 = icmp eq i32 %and371, 0, !dbg !7420
  br i1 %cmp372, label %if.end375, label %if.then374, !dbg !7422

if.then374:                                       ; preds = %if.end370
  tail call void @objc_check_decl(%union.tree_node* %decl) #6, !dbg !7423
  br label %if.end375, !dbg !7423

if.end375:                                        ; preds = %if.end370, %if.then374
  br i1 %tobool19, label %if.end415, label %if.then377, !dbg !7424

if.then377:                                       ; preds = %if.end375
  %context379 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7425
  %46 = load %union.tree_node*, %union.tree_node** %context379, align 8, !dbg !7425
  %tobool380 = icmp eq %union.tree_node* %46, null, !dbg !7425
  br i1 %tobool380, label %if.else413, label %lor.lhs.false381, !dbg !7425

lor.lhs.false381:                                 ; preds = %if.then377
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7425
  %bf.load385 = load i64, i64* %47, align 8, !dbg !7425
  %bf.cast38731 = and i64 %bf.load385, 65535, !dbg !7425
  %cmp388 = icmp eq i64 %bf.cast38731, 40, !dbg !7425
  br i1 %cmp388, label %if.else413, label %land.lhs.true390, !dbg !7429

land.lhs.true390:                                 ; preds = %lor.lhs.false381
  %bf.load392 = load i64, i64* %1, align 8, !dbg !7430
  %bf.cast39432 = and i64 %bf.load392, 65535, !dbg !7431
  %cmp395 = icmp eq i64 %bf.cast39432, 32, !dbg !7431
  br i1 %cmp395, label %land.lhs.true397, label %if.else413, !dbg !7432

land.lhs.true397:                                 ; preds = %land.lhs.true390
  %lang_flag_4 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7433
  %48 = bitcast i40* %lang_flag_4 to i64*, !dbg !7433
  %bf.load399 = load i64, i64* %48, align 8, !dbg !7433
  %bf.cast40233 = and i64 %bf.load399, 524288, !dbg !7433
  %tobool403 = icmp eq i64 %bf.cast40233, 0, !dbg !7433
  br i1 %tobool403, label %land.lhs.true404, label %if.else413, !dbg !7434

land.lhs.true404:                                 ; preds = %land.lhs.true397
  %bf.cast40934 = and i64 %bf.load392, 67108864, !dbg !7435
  %tobool410 = icmp eq i64 %bf.cast40934, 0, !dbg !7435
  br i1 %tobool410, label %if.then411, label %if.else413, !dbg !7436

if.then411:                                       ; preds = %land.lhs.true404
  %call412 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.62, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7437
  br label %if.end415, !dbg !7437

if.else413:                                       ; preds = %land.lhs.true404, %land.lhs.true397, %if.then377, %land.lhs.true390, %lor.lhs.false381
  tail call void @set_user_assembler_name(%union.tree_node* %decl, i8* %asmspec.0) #6, !dbg !7438
  br label %if.end415

if.end415:                                        ; preds = %if.end375, %if.then411, %if.else413
  %context417 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7439
  %49 = load %union.tree_node*, %union.tree_node** %context417, align 8, !dbg !7439
  %tobool418 = icmp eq %union.tree_node* %49, null, !dbg !7439
  br i1 %tobool418, label %if.then428, label %lor.lhs.false419, !dbg !7439

lor.lhs.false419:                                 ; preds = %if.end415
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7439
  %bf.load423 = load i64, i64* %50, align 8, !dbg !7439
  %bf.cast42525 = and i64 %bf.load423, 65535, !dbg !7439
  %cmp426 = icmp eq i64 %bf.cast42525, 40, !dbg !7439
  br i1 %cmp426, label %if.then428, label %if.else443, !dbg !7440

if.then428:                                       ; preds = %if.end415, %lor.lhs.false419
  %initial430 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7441
  %51 = load %union.tree_node*, %union.tree_node** %initial430, align 8, !dbg !7441
  %cmp431 = icmp eq %union.tree_node* %51, null, !dbg !7444
  br i1 %cmp431, label %if.then438, label %lor.lhs.false433, !dbg !7445

lor.lhs.false433:                                 ; preds = %if.then428
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7446
  %cmp436 = icmp eq %union.tree_node* %51, %52, !dbg !7447
  br i1 %cmp436, label %if.then438, label %if.end442, !dbg !7448

if.then438:                                       ; preds = %lor.lhs.false433, %if.then428
  %defer_output = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7449
  %53 = bitcast i24* %defer_output to i32*, !dbg !7449
  %bf.load439 = load i32, i32* %53, align 8, !dbg !7450
  %bf.set441 = or i32 %bf.load439, 1, !dbg !7450
  store i32 %bf.set441, i32* %53, align 8, !dbg !7450
  br label %if.end442, !dbg !7449

if.end442:                                        ; preds = %if.then438, %lor.lhs.false433
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i32 1, i32 0) #6, !dbg !7451
  br label %if.end507, !dbg !7452

if.else443:                                       ; preds = %lor.lhs.false419
  br i1 %tobool19, label %if.end466, label %land.lhs.true445, !dbg !7453

land.lhs.true445:                                 ; preds = %if.else443
  %lang_flag_4447 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7455
  %54 = bitcast i40* %lang_flag_4447 to i64*, !dbg !7455
  %bf.load448 = load i64, i64* %54, align 8, !dbg !7455
  %bf.cast45129 = and i64 %bf.load448, 524288, !dbg !7455
  %tobool452 = icmp eq i64 %bf.cast45129, 0, !dbg !7455
  br i1 %tobool452, label %if.end466, label %if.then453, !dbg !7456

if.then453:                                       ; preds = %land.lhs.true445
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7457
  %55 = bitcast i24* %hard_register to i32*, !dbg !7457
  %bf.load455 = load i32, i32* %55, align 8, !dbg !7459
  %bf.set457 = or i32 %bf.load455, 2, !dbg !7459
  store i32 %bf.set457, i32* %55, align 8, !dbg !7459
  %bf.cast46230 = and i64 %bf.load448, 16777216, !dbg !7460
  %tobool463 = icmp eq i64 %bf.cast46230, 0, !dbg !7460
  br i1 %tobool463, label %if.then464, label %if.end466, !dbg !7462

if.then464:                                       ; preds = %if.then453
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7463
  br label %if.end466, !dbg !7463

if.end466:                                        ; preds = %if.then453, %land.lhs.true445, %if.else443, %if.then464
  %bf.load468 = load i64, i64* %1, align 8, !dbg !7464
  %bf.cast47026 = and i64 %bf.load468, 65535, !dbg !7465
  %cmp471 = icmp eq i64 %bf.cast47026, 29, !dbg !7465
  br i1 %cmp471, label %if.end507, label %if.then473, !dbg !7466

if.then473:                                       ; preds = %if.end466
  %56 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7467
  %tobool476 = icmp eq %union.tree_node* %56, null, !dbg !7467
  br i1 %tobool476, label %if.end502, label %land.lhs.true477, !dbg !7468

land.lhs.true477:                                 ; preds = %if.then473
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7468
  %bf.load481 = load i64, i64* %57, align 8, !dbg !7469
  %bf.cast48427 = and i64 %bf.load481, 131072, !dbg !7469
  %tobool485 = icmp eq i64 %bf.cast48427, 0, !dbg !7469
  br i1 %tobool485, label %land.lhs.true486, label %if.end502, !dbg !7470

land.lhs.true486:                                 ; preds = %land.lhs.true477
  %call487 = tail call %struct.stmt_tree_s* @current_stmt_tree() #7, !dbg !7471
  %58 = load i64*, i64** bitcast (%struct.stmt_tree_s* @c_stmt_tree to i64**), align 8, !dbg !7471
  %bf.load489 = load i64, i64* %58, align 8, !dbg !7471
  %bf.cast49228 = and i64 %bf.load489, 68719476736, !dbg !7471
  %tobool493 = icmp eq i64 %bf.cast49228, 0, !dbg !7471
  br i1 %tobool493, label %if.end502, label %if.then494, !dbg !7472

if.then494:                                       ; preds = %land.lhs.true486
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7473
  %call495 = tail call %union.tree_node* @build3_stat(i32 58, %union.tree_node* %59, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #6, !dbg !7473
  call void @llvm.dbg.value(metadata %union.tree_node* %call495, metadata !7198, metadata !DIExpression()), !dbg !7474
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %call495, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7475
  %bf.load497 = load i64, i64* %60, align 8, !dbg !7476
  %bf.set499 = or i64 %bf.load497, 65536, !dbg !7476
  store i64 %bf.set499, i64* %60, align 8, !dbg !7476
  %call500 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call495) #7, !dbg !7477
  %call501 = tail call %union.tree_node* @push_stmt_list() #6, !dbg !7478
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call495, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7479
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7479
  store %union.tree_node* %call501, %union.tree_node** %arrayidx, align 8, !dbg !7480
  br label %if.end502, !dbg !7481

if.end502:                                        ; preds = %land.lhs.true486, %land.lhs.true477, %if.then473, %if.then494
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7482
  %61 = load i32, i32* %locus, align 8, !dbg !7482
  %call504 = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %61, i32 132, %union.tree_node* %decl) #6, !dbg !7483
  %call505 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call504) #7, !dbg !7484
  br label %if.end507, !dbg !7485

if.end507:                                        ; preds = %if.end466, %if.end502, %if.end442
  %62 = load %union.tree_node*, %union.tree_node** %context417, align 8, !dbg !7486
  %tobool510 = icmp eq %union.tree_node* %62, null, !dbg !7486
  br i1 %tobool510, label %if.end558, label %lor.lhs.false511, !dbg !7486

lor.lhs.false511:                                 ; preds = %if.end507
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7486
  %bf.load515 = load i64, i64* %63, align 8, !dbg !7486
  %bf.cast51722 = and i64 %bf.load515, 65535, !dbg !7486
  %cmp518 = icmp ne i64 %bf.cast51722, 40, !dbg !7486
  %or.cond3 = and i1 %cmp518, %cmp, !dbg !7488
  br i1 %or.cond3, label %land.lhs.true523, label %if.end558, !dbg !7488

land.lhs.true523:                                 ; preds = %lor.lhs.false511
  %bf.load525 = load i64, i64* %1, align 8, !dbg !7489
  %bf.cast52823 = and i64 %bf.load525, 67108864, !dbg !7489
  %tobool529 = icmp eq i64 %bf.cast52823, 0, !dbg !7489
  br i1 %tobool529, label %land.lhs.true530, label %if.end558, !dbg !7492

land.lhs.true530:                                 ; preds = %land.lhs.true523
  %decl_flag_1532 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7493
  %64 = bitcast i40* %decl_flag_1532 to i64*, !dbg !7493
  %bf.load533 = load i64, i64* %64, align 8, !dbg !7493
  %bf.cast53624 = and i64 %bf.load533, 33554432, !dbg !7493
  %tobool537 = icmp eq i64 %bf.cast53624, 0, !dbg !7493
  br i1 %tobool537, label %if.then538, label %if.end558, !dbg !7494

if.then538:                                       ; preds = %land.lhs.true530
  %65 = lshr i64 %bf.load525, 6, !dbg !7495
  %bf.shl = and i64 %65, 262144, !dbg !7495
  %bf.clear546 = and i64 %bf.load525, -262145, !dbg !7495
  %bf.set547 = or i64 %bf.clear546, %bf.shl, !dbg !7495
  store i64 %bf.set547, i64* %1, align 8, !dbg !7495
  %66 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7497
  %cmp550 = icmp eq %union.tree_node* %66, null, !dbg !7499
  br i1 %cmp550, label %if.then552, label %if.end558, !dbg !7500

if.then552:                                       ; preds = %if.then538
  %initial554 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7501
  store %union.tree_node* null, %union.tree_node** %initial554, align 8, !dbg !7502
  br label %if.end558, !dbg !7501

if.end558:                                        ; preds = %land.lhs.true530, %land.lhs.true523, %if.end507, %lor.lhs.false511, %if.then538, %if.then552, %lor.lhs.false354
  %bf.load560 = load i64, i64* %1, align 8, !dbg !7503
  %bf.cast56213 = and i64 %bf.load560, 65535, !dbg !7505
  %cmp563 = icmp eq i64 %bf.cast56213, 35, !dbg !7505
  br i1 %cmp563, label %if.then565, label %if.end601, !dbg !7506

if.then565:                                       ; preds = %if.end558
  %context567 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7507
  %67 = load %union.tree_node*, %union.tree_node** %context567, align 8, !dbg !7507
  %tobool568 = icmp eq %union.tree_node* %67, null, !dbg !7507
  br i1 %tobool568, label %if.end589, label %lor.lhs.false569, !dbg !7507

lor.lhs.false569:                                 ; preds = %if.then565
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7507
  %bf.load573 = load i64, i64* %68, align 8, !dbg !7507
  %bf.cast57520 = and i64 %bf.load573, 65535, !dbg !7507
  %cmp576 = icmp eq i64 %bf.cast57520, 40, !dbg !7507
  br i1 %cmp576, label %if.end589, label %land.lhs.true578, !dbg !7510

land.lhs.true578:                                 ; preds = %lor.lhs.false569
  %69 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !7511
  %call581 = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %69, %union.tree_node* null) #6, !dbg !7512
  %tobool583 = icmp eq i8 %call581, 0, !dbg !7512
  br i1 %tobool583, label %if.end589, label %if.then584, !dbg !7513

if.then584:                                       ; preds = %land.lhs.true578
  %locus586 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7514
  %70 = load i32, i32* %locus586, align 8, !dbg !7514
  %call587 = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %70, i32 132, %union.tree_node* %decl) #6, !dbg !7515
  %call588 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call587) #7, !dbg !7516
  br label %if.end589, !dbg !7516

if.end589:                                        ; preds = %land.lhs.true578, %if.then565, %if.then584, %lor.lhs.false569
  %71 = load %union.tree_node*, %union.tree_node** %context567, align 8, !dbg !7517
  %tobool592 = icmp eq %union.tree_node* %71, null, !dbg !7517
  br i1 %tobool592, label %lor.end, label %lor.rhs, !dbg !7517

lor.rhs:                                          ; preds = %if.end589
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7517
  %bf.load596 = load i64, i64* %72, align 8, !dbg !7517
  %bf.cast59819 = and i64 %bf.load596, 65535, !dbg !7517
  %cmp599 = icmp eq i64 %bf.cast59819, 40, !dbg !7517
  %phitmp = zext i1 %cmp599 to i32, !dbg !7517
  br label %lor.end, !dbg !7517

lor.end:                                          ; preds = %if.end589, %lor.rhs
  %73 = phi i32 [ 1, %if.end589 ], [ %phitmp, %lor.rhs ]
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i32 %73, i32 0) #6, !dbg !7518
  br label %if.end601, !dbg !7519

if.end601:                                        ; preds = %lor.end, %if.end558
  %74 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7520
  %75 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !7522
  %cmp602 = icmp eq %struct.c_scope* %74, %75, !dbg !7523
  br i1 %cmp602, label %if.then604, label %if.end606, !dbg !7524

if.then604:                                       ; preds = %if.end601
  %call605 = tail call %union.tree_node* @get_pending_sizes() #6, !dbg !7525
  br label %if.end606, !dbg !7525

if.end606:                                        ; preds = %if.then604, %if.end601
  %bf.load608 = load i64, i64* %1, align 8, !dbg !7526
  %bf.cast61014 = and i64 %bf.load608, 65535, !dbg !7527
  %cmp611 = icmp eq i64 %bf.cast61014, 32, !dbg !7527
  br i1 %cmp611, label %land.lhs.true613, label %if.end649, !dbg !7528

land.lhs.true613:                                 ; preds = %if.end606
  %bf.cast61818 = and i64 %bf.load608, 67108864, !dbg !7529
  %tobool619 = icmp eq i64 %bf.cast61818, 0, !dbg !7529
  br i1 %tobool619, label %if.then620, label %if.end649, !dbg !7530

if.then620:                                       ; preds = %land.lhs.true613
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7531
  %76 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !7531
  %call622 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), %union.tree_node* %76) #6, !dbg !7532
  call void @llvm.dbg.value(metadata %union.tree_node* %call622, metadata !7207, metadata !DIExpression()), !dbg !7533
  %tobool623 = icmp eq %union.tree_node* %call622, null, !dbg !7534
  br i1 %tobool623, label %if.end649, label %if.then624, !dbg !7535

if.then624:                                       ; preds = %if.then620
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %call622, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7536
  %78 = bitcast %union.tree_node** %77 to %struct.tree_list**, !dbg !7536
  %79 = load %struct.tree_list*, %struct.tree_list** %78, align 8, !dbg !7536
  %value626 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %79, i64 0, i32 2, !dbg !7536
  %80 = load %union.tree_node*, %union.tree_node** %value626, align 8, !dbg !7536
  call void @llvm.dbg.value(metadata %union.tree_node* %80, metadata !7210, metadata !DIExpression()), !dbg !7537
  %call627 = tail call %union.tree_node* @lookup_name(%union.tree_node* %80) #7, !dbg !7538
  call void @llvm.dbg.value(metadata %union.tree_node* %call627, metadata !7213, metadata !DIExpression()), !dbg !7537
  %81 = bitcast %struct.VEC_tree_gc** %vec to i8*, !dbg !7539
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #8, !dbg !7539
  %82 = load i32, i32* @input_location, align 4, !dbg !7540
  %call628 = tail call %union.tree_node* @build_unary_op(i32 %82, i32 121, %union.tree_node* %decl, i32 0) #6, !dbg !7541
  call void @llvm.dbg.value(metadata %union.tree_node* %call628, metadata !7214, metadata !DIExpression()), !dbg !7537
  %call629 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 1) #7, !dbg !7542
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call629, metadata !7215, metadata !DIExpression()), !dbg !7537
  store %struct.VEC_tree_gc* %call629, %struct.VEC_tree_gc** %vec, align 8, !dbg !7543
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call629, metadata !7215, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call629, metadata !7215, metadata !DIExpression()), !dbg !7537
  %base632 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call629, i64 0, i32 0, !dbg !7544
  %call636 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base632, %union.tree_node* %call628) #7, !dbg !7544
  %locus638 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7545
  %83 = load i32, i32* %locus638, align 8, !dbg !7545
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call629, metadata !7215, metadata !DIExpression()), !dbg !7537
  %call639 = tail call %union.tree_node* @build_function_call_vec(i32 %83, %union.tree_node* %call627, %struct.VEC_tree_gc* %call629, %struct.VEC_tree_gc* null) #6, !dbg !7546
  call void @llvm.dbg.value(metadata %union.tree_node* %call639, metadata !7214, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec, metadata !7215, metadata !DIExpression(DW_OP_deref)), !dbg !7537
  call fastcc void @VEC_tree_gc_free(%struct.VEC_tree_gc** nonnull %vec) #7, !dbg !7547
  %bf.load641 = load i64, i64* %1, align 8, !dbg !7548
  %bf.set643 = or i64 %bf.load641, 16777216, !dbg !7548
  store i64 %bf.set643, i64* %1, align 8, !dbg !7548
  %84 = getelementptr inbounds %union.tree_node, %union.tree_node* %call627, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7549
  %bf.load645 = load i64, i64* %84, align 8, !dbg !7550
  %bf.set647 = or i64 %bf.load645, 16777216, !dbg !7550
  store i64 %bf.set647, i64* %84, align 8, !dbg !7550
  call void @push_cleanup(%union.tree_node* %decl, %union.tree_node* %call639, i8 zeroext 0) #6, !dbg !7551
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #8, !dbg !7552
  br label %if.end649, !dbg !7553

if.end649:                                        ; preds = %if.then620, %land.lhs.true613, %if.then624, %if.end606
  %85 = load i32, i32* @warn_cxx_compat, align 4, !dbg !7554
  %tobool650 = icmp eq i32 %85, 0, !dbg !7554
  br i1 %tobool650, label %if.end682, label %land.lhs.true651, !dbg !7556

land.lhs.true651:                                 ; preds = %if.end649
  %bf.load653 = load i64, i64* %1, align 8, !dbg !7557
  %bf.cast65515 = and i64 %bf.load653, 65535, !dbg !7558
  %cmp656 = icmp eq i64 %bf.cast65515, 32, !dbg !7558
  br i1 %cmp656, label %land.lhs.true658, label %if.end682, !dbg !7559

land.lhs.true658:                                 ; preds = %land.lhs.true651
  %bf.cast66316 = and i64 %bf.load653, 1048576, !dbg !7560
  %tobool664 = icmp eq i64 %bf.cast66316, 0, !dbg !7560
  br i1 %tobool664, label %if.end682, label %land.lhs.true665, !dbg !7561

land.lhs.true665:                                 ; preds = %land.lhs.true658
  %decl_flag_1667 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7562
  %86 = bitcast i40* %decl_flag_1667 to i64*, !dbg !7562
  %bf.load668 = load i64, i64* %86, align 8, !dbg !7562
  %bf.cast67117 = and i64 %bf.load668, 33554432, !dbg !7562
  %tobool672 = icmp eq i64 %bf.cast67117, 0, !dbg !7562
  br i1 %tobool672, label %land.lhs.true673, label %if.end682, !dbg !7563

land.lhs.true673:                                 ; preds = %land.lhs.true665
  %initial675 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7564
  %87 = load %union.tree_node*, %union.tree_node** %initial675, align 8, !dbg !7564
  %cmp676 = icmp eq %union.tree_node* %87, null, !dbg !7565
  br i1 %cmp676, label %if.then678, label %if.end682, !dbg !7566

if.then678:                                       ; preds = %land.lhs.true673
  %locus680 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7567
  %88 = load i32, i32* %locus680, align 8, !dbg !7567
  %call681 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %88, i32 49, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7568
  br label %if.end682, !dbg !7568

if.end682:                                        ; preds = %land.lhs.true665, %land.lhs.true658, %if.end649, %if.then678, %land.lhs.true673, %land.lhs.true651
  ret void, !dbg !7569
}

declare dso_local void @record_types_used_by_current_var_decl(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @store_init_value(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_check_decl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_flexible_array_elts_to_size(%union.tree_node* %decl, %union.tree_node* %init) unnamed_addr #5 !dbg !7570 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7572, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !7573, metadata !DIExpression()), !dbg !7576
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !7577
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7577
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %init, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7578
  %1 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !7578
  %2 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !7578
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %2, null, !dbg !7578
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7578

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %2, i64 0, i32 0, !dbg !7578
  br label %cond.end, !dbg !7578

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7578
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #7, !dbg !7578
  %cmp = icmp eq i32 %call, 0, !dbg !7578
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7580

if.end:                                           ; preds = %cond.end
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !7581
  %tobool5 = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !7581
  br i1 %tobool5, label %cond.end11, label %cond.true6, !dbg !7581

cond.true6:                                       ; preds = %if.end
  %base9 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %3, i64 0, i32 0, !dbg !7581
  br label %cond.end11, !dbg !7581

cond.end11:                                       ; preds = %if.end, %cond.true6
  %cond12 = phi %struct.VEC_constructor_elt_base* [ %base9, %cond.true6 ], [ null, %if.end ], !dbg !7581
  %call13 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %cond12) #7, !dbg !7581
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call13, i64 0, i32 1, !dbg !7582
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7582
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7574, metadata !DIExpression()), !dbg !7576
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7583
  %5 = bitcast %union.tree_node** %type14 to i64*, !dbg !7583
  %6 = load i64, i64* %5, align 8, !dbg !7583
  %7 = bitcast %union.tree_node** %type to i64*, !dbg !7584
  store i64 %6, i64* %7, align 8, !dbg !7584
  %.cast = inttoptr i64 %6 to i64*, !dbg !7585
  %bf.load = load i64, i64* %.cast, align 8, !dbg !7585
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7587
  %cmp16 = icmp eq i64 %bf.cast1, 15, !dbg !7587
  %8 = inttoptr i64 %6 to %struct.tree_type*, !dbg !7588
  br i1 %cmp16, label %land.lhs.true, label %cleanup, !dbg !7588

land.lhs.true:                                    ; preds = %cond.end11
  %9 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !7589
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 2, !dbg !7589
  %10 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !7589
  %cmp18 = icmp eq %union.tree_node* %10, null, !dbg !7590
  br i1 %cmp18, label %land.lhs.true19, label %cleanup, !dbg !7591

land.lhs.true19:                                  ; preds = %land.lhs.true
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 1, !dbg !7592
  %11 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !7592
  %cmp21 = icmp eq %union.tree_node* %11, null, !dbg !7593
  br i1 %cmp21, label %cleanup, label %land.lhs.true22, !dbg !7594

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7595
  %12 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !7595
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !7595
  %cmp26 = icmp eq %union.tree_node* %13, null, !dbg !7596
  br i1 %cmp26, label %if.then27, label %cleanup, !dbg !7597

if.then27:                                        ; preds = %land.lhs.true22
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !7575, metadata !DIExpression(DW_OP_deref)), !dbg !7576
  %call28 = call i32 @complete_array_type(%union.tree_node** nonnull %type, %union.tree_node* %4, i8 zeroext 0) #6, !dbg !7598
  %size29 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7600
  %14 = load %union.tree_node*, %union.tree_node** %size29, align 8, !dbg !7600
  %15 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !7600
  %size31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 2, !dbg !7600
  %16 = load %union.tree_node*, %union.tree_node** %size31, align 8, !dbg !7600
  %call32 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %14, %union.tree_node* %16) #6, !dbg !7600
  store %union.tree_node* %call32, %union.tree_node** %size29, align 8, !dbg !7601
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7602
  %17 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !7602
  %18 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !7602
  %size_unit37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 3, !dbg !7602
  %19 = load %union.tree_node*, %union.tree_node** %size_unit37, align 8, !dbg !7602
  %call38 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %17, %union.tree_node* %19) #6, !dbg !7602
  store %union.tree_node* %call38, %union.tree_node** %size_unit, align 8, !dbg !7603
  br label %cleanup, !dbg !7604

cleanup:                                          ; preds = %land.lhs.true19, %cond.end11, %land.lhs.true, %land.lhs.true22, %if.then27, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7605
  ret void, !dbg !7605
}

declare dso_local void @constant_expression_warning(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_builtin_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local void @maybe_apply_pragma_weak(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @c_determine_visibility(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @push_stmt_list() local_unnamed_addr #2

declare dso_local %union.tree_node* @build_stmt(i32, i32, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_pending_sizes() local_unnamed_addr #2

declare dso_local %union.tree_node* @build_unary_op(i32, i32, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7606 {
entry:
  call void @llvm.dbg.value(metadata i32 1, metadata !7610, metadata !DIExpression()), !dbg !7611
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 1) #6, !dbg !7612
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !7612
  ret %struct.VEC_tree_gc* %0, !dbg !7612
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7613 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7618, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7619, metadata !DIExpression()), !dbg !7621
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7622
  %0 = load i32, i32* %num1, align 8, !dbg !7622
  %inc = add i32 %0, 1, !dbg !7622
  store i32 %inc, i32* %num1, align 8, !dbg !7622
  %idxprom = zext i32 %0 to i64, !dbg !7622
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7622
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !7620, metadata !DIExpression()), !dbg !7621
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !7622
  ret %union.tree_node** %arrayidx, !dbg !7622
}

declare dso_local %union.tree_node* @build_function_call_vec(i32, %union.tree_node*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_gc_free(%struct.VEC_tree_gc** %vec_) unnamed_addr #0 !dbg !7623 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !7628, metadata !DIExpression()), !dbg !7629
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !7630
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !7630
  br i1 %tobool, label %if.end, label %if.then, !dbg !7632

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_gc* %0 to i8*, !dbg !7632
  tail call void @ggc_free(i8* nonnull %1) #6, !dbg !7630
  br label %if.end, !dbg !7630

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %vec_, align 8, !dbg !7632
  ret void, !dbg !7632
}

declare dso_local void @push_cleanup(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @grokparm(%struct.c_parm* %parm) local_unnamed_addr #5 !dbg !7633 {
entry:
  %attrs = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_parm* %parm, metadata !7639, metadata !DIExpression()), !dbg !7642
  %0 = bitcast %union.tree_node** %attrs to i8*, !dbg !7643
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7643
  %attrs1 = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 1, !dbg !7644
  %1 = bitcast %union.tree_node** %attrs1 to i64*, !dbg !7644
  %2 = load i64, i64* %1, align 8, !dbg !7644
  %3 = bitcast %union.tree_node** %attrs to i64*, !dbg !7645
  store i64 %2, i64* %3, align 8, !dbg !7645
  %4 = bitcast %union.tree_node** %decl to i8*, !dbg !7646
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7646
  %declarator = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 2, !dbg !7647
  %5 = load %struct.c_declarator*, %struct.c_declarator** %declarator, align 8, !dbg !7647
  %specs = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 0, !dbg !7648
  %6 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !7648
  call void @llvm.dbg.value(metadata %union.tree_node** %attrs, metadata !7640, metadata !DIExpression(DW_OP_deref)), !dbg !7642
  %call = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %5, %struct.c_declspecs* %6, i32 2, i8 zeroext 0, %union.tree_node** null, %union.tree_node** nonnull %attrs, %union.tree_node** null, i8* null, i32 0) #7, !dbg !7649
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7641, metadata !DIExpression()), !dbg !7642
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !7650
  %7 = load %union.tree_node*, %union.tree_node** %attrs, align 8, !dbg !7651
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7640, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !7641, metadata !DIExpression(DW_OP_deref)), !dbg !7642
  %call2 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %decl, %union.tree_node* %7, i32 0) #6, !dbg !7652
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7653
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7654
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7654
  ret %union.tree_node* %8, !dbg !7655
}

; Function Attrs: nounwind uwtable
define dso_local void @push_parm_decl(%struct.c_parm* %parm) local_unnamed_addr #5 !dbg !7656 {
entry:
  %attrs = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_parm* %parm, metadata !7660, metadata !DIExpression()), !dbg !7663
  %0 = bitcast %union.tree_node** %attrs to i8*, !dbg !7664
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7664
  %attrs1 = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 1, !dbg !7665
  %1 = bitcast %union.tree_node** %attrs1 to i64*, !dbg !7665
  %2 = load i64, i64* %1, align 8, !dbg !7665
  %3 = bitcast %union.tree_node** %attrs to i64*, !dbg !7666
  store i64 %2, i64* %3, align 8, !dbg !7666
  %4 = bitcast %union.tree_node** %decl to i8*, !dbg !7667
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7667
  %declarator = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 2, !dbg !7668
  %5 = load %struct.c_declarator*, %struct.c_declarator** %declarator, align 8, !dbg !7668
  %specs = getelementptr inbounds %struct.c_parm, %struct.c_parm* %parm, i64 0, i32 0, !dbg !7669
  %6 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !7669
  call void @llvm.dbg.value(metadata %union.tree_node** %attrs, metadata !7661, metadata !DIExpression(DW_OP_deref)), !dbg !7663
  %call = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %5, %struct.c_declspecs* %6, i32 2, i8 zeroext 0, %union.tree_node** null, %union.tree_node** nonnull %attrs, %union.tree_node** null, i8* null, i32 0) #7, !dbg !7670
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7662, metadata !DIExpression()), !dbg !7663
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !7671
  %7 = load %union.tree_node*, %union.tree_node** %attrs, align 8, !dbg !7672
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7661, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !7662, metadata !DIExpression(DW_OP_deref)), !dbg !7663
  %call2 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %decl, %union.tree_node* %7, i32 0) #6, !dbg !7673
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7674
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7662, metadata !DIExpression()), !dbg !7663
  %call3 = call %union.tree_node* @pushdecl(%union.tree_node* %8) #7, !dbg !7675
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7662, metadata !DIExpression()), !dbg !7663
  store %union.tree_node* %call3, %union.tree_node** %decl, align 8, !dbg !7676
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7662, metadata !DIExpression()), !dbg !7663
  %9 = load i32, i32* @input_location, align 4, !dbg !7677
  call void @finish_decl(%union.tree_node* %call3, i32 %9, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #7, !dbg !7678
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7679
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7679
  ret void, !dbg !7679
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_forward_parm_decls() local_unnamed_addr #5 !dbg !7680 {
entry:
  %0 = load i32, i32* @pedantic, align 4, !dbg !7683
  %tobool = icmp eq i32 %0, 0, !dbg !7683
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !7685

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7686
  br label %if.end, !dbg !7685

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7688
  %warned_forward_parm_decls = getelementptr inbounds %struct.c_scope, %struct.c_scope* %1, i64 0, i32 5, !dbg !7689
  %2 = bitcast i40* %warned_forward_parm_decls to i64*, !dbg !7689
  %bf.load = load i64, i64* %2, align 8, !dbg !7689
  %bf.cast2 = and i64 %bf.load, 1073741824, !dbg !7688
  %tobool1 = icmp eq i64 %bf.cast2, 0, !dbg !7688
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7690

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* @input_location, align 4, !dbg !7691
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !7693
  %4 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7694
  %warned_forward_parm_decls2 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %4, i64 0, i32 5, !dbg !7695
  %5 = bitcast i40* %warned_forward_parm_decls2 to i64*, !dbg !7695
  %bf.load3 = load i64, i64* %5, align 8, !dbg !7696
  %bf.set = or i64 %bf.load3, 1073741824, !dbg !7696
  store i64 %bf.set, i64* %5, align 8, !dbg !7696
  br label %if.end, !dbg !7697

if.end:                                           ; preds = %entry.if.end_crit_edge, %land.lhs.true, %if.then
  %6 = phi %struct.c_scope* [ %.pre, %entry.if.end_crit_edge ], [ %1, %land.lhs.true ], [ %4, %if.then ], !dbg !7686
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %6, i64 0, i32 2, !dbg !7698
  br label %for.cond, !dbg !7699

for.cond:                                         ; preds = %for.inc, %if.end
  %b.0.in = phi %struct.c_binding** [ %bindings, %if.end ], [ %prev, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !7700
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !7682, metadata !DIExpression()), !dbg !7701
  %tobool5 = icmp eq %struct.c_binding* %b.0, null, !dbg !7702
  br i1 %tobool5, label %for.end, label %for.body, !dbg !7702

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !7703
  %7 = bitcast %union.tree_node** %decl to i64**, !dbg !7703
  %8 = load i64*, i64** %7, align 8, !dbg !7703
  %bf.load6 = load i64, i64* %8, align 8, !dbg !7703
  %bf.cast81 = and i64 %bf.load6, 65535, !dbg !7706
  %cmp = icmp eq i64 %bf.cast81, 34, !dbg !7706
  br i1 %cmp, label %if.then9, label %for.inc, !dbg !7707

if.then9:                                         ; preds = %for.body
  %bf.set14 = or i64 %bf.load6, 4194304, !dbg !7708
  store i64 %bf.set14, i64* %8, align 8, !dbg !7708
  br label %for.inc, !dbg !7709

for.inc:                                          ; preds = %for.body, %if.then9
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !7710
  br label %for.cond, !dbg !7711, !llvm.loop !7712

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7714
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_compound_literal(i32 %loc, %union.tree_node* %type, %union.tree_node* %init, i8 zeroext %non_const) local_unnamed_addr #5 !dbg !7715 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7719, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7720, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !7721, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8 %non_const, metadata !7722, metadata !DIExpression()), !dbg !7729
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7730
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !7732
  %cmp1 = icmp eq %union.tree_node* %0, %init, !dbg !7733
  %or.cond = or i1 %cmp, %cmp1, !dbg !7734
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7734

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !7735

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 32, %union.tree_node* null, %union.tree_node* %type) #6, !dbg !7736
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7723, metadata !DIExpression()), !dbg !7729
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7737
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !7737
  %bf.load = load i64, i64* %1, align 8, !dbg !7738
  %bf.clear = and i64 %bf.load, -33554433, !dbg !7738
  store i64 %bf.clear, i64* %1, align 8, !dbg !7738
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7739
  %bf.load2 = load i64, i64* %2, align 8, !dbg !7740
  %bf.clear3 = and i64 %bf.load2, -134217729, !dbg !7740
  store i64 %bf.clear3, i64* %2, align 8, !dbg !7740
  %3 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7741
  %4 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !7742
  %cmp4 = icmp eq %struct.c_scope* %3, %4, !dbg !7743
  %5 = zext i1 %cmp4 to i64, !dbg !7744
  %bf.shl = shl nuw nsw i64 %5, 26, !dbg !7744
  %bf.clear7 = and i64 %bf.load2, -201326593, !dbg !7744
  %bf.set = or i64 %bf.clear7, %bf.shl, !dbg !7744
  store i64 %bf.set, i64* %2, align 8, !dbg !7744
  %6 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !7745
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7746
  %7 = bitcast %union.tree_node** %context to i64*, !dbg !7747
  store i64 %6, i64* %7, align 8, !dbg !7747
  %bf.set11 = or i64 %bf.set, 16777216, !dbg !7748
  store i64 %bf.set11, i64* %2, align 8, !dbg !7748
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7749
  store %union.tree_node* %type, %union.tree_node** %type12, align 8, !dbg !7750
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7751
  %bf.load14 = load i64, i64* %8, align 8, !dbg !7751
  %bf.cast = and i64 %bf.load14, 1048576, !dbg !7751
  %bf.clear20 = and i64 %bf.set11, -135266305, !dbg !7752
  %bf.set21 = or i64 %bf.clear20, %bf.cast, !dbg !7752
  store i64 %bf.set21, i64* %2, align 8, !dbg !7752
  tail call void @store_init_value(i32 %loc, %union.tree_node* %call, %union.tree_node* %init, %union.tree_node* null) #6, !dbg !7753
  %bf.load24 = load i64, i64* %8, align 8, !dbg !7754
  %bf.cast261 = and i64 %bf.load24, 65535, !dbg !7755
  %cmp27 = icmp eq i64 %bf.cast261, 15, !dbg !7755
  br i1 %cmp27, label %land.lhs.true, label %if.end43, !dbg !7756

land.lhs.true:                                    ; preds = %if.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7757
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !7757
  %cmp30 = icmp eq %union.tree_node* %10, null, !dbg !7757
  br i1 %cmp30, label %if.then32, label %if.end43, !dbg !7758

if.then32:                                        ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7759
  %11 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7759
  %call36 = tail call i32 @complete_array_type(%union.tree_node** nonnull %type12, %union.tree_node* %11, i8 zeroext 1) #6, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %call36, metadata !7726, metadata !DIExpression()), !dbg !7761
  %tobool = icmp eq i32 %call36, 0, !dbg !7762
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7762

cond.true:                                        ; preds = %if.then32
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 4483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7762
  br label %cond.end, !dbg !7762

cond.end:                                         ; preds = %if.then32, %cond.true
  %12 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !7763
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !7720, metadata !DIExpression()), !dbg !7729
  %13 = bitcast %union.tree_node** %initial to %struct.tree_common**, !dbg !7764
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !7764
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !7764
  store %union.tree_node* %12, %union.tree_node** %type42, align 8, !dbg !7765
  br label %if.end43, !dbg !7766

if.end43:                                         ; preds = %land.lhs.true, %cond.end, %if.end
  %type.addr.0 = phi %union.tree_node* [ %type, %land.lhs.true ], [ %12, %cond.end ], [ %type, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !7720, metadata !DIExpression()), !dbg !7729
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7767
  %cmp44 = icmp eq %union.tree_node* %type.addr.0, %15, !dbg !7769
  br i1 %cmp44, label %if.then51, label %lor.lhs.false46, !dbg !7770

lor.lhs.false46:                                  ; preds = %if.end43
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7771
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !7771
  %cmp49 = icmp eq %union.tree_node* %17, null, !dbg !7771
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7772

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  br label %cleanup, !dbg !7773

if.end52:                                         ; preds = %lor.lhs.false46
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7774
  %18 = load i32, i32* %locus, align 8, !dbg !7774
  %call54 = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %18, i32 132, %union.tree_node* %call) #6, !dbg !7775
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !7725, metadata !DIExpression()), !dbg !7729
  %call55 = tail call %union.tree_node* @build1_stat(i32 119, %union.tree_node* %type.addr.0, %union.tree_node* %call54) #6, !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !7724, metadata !DIExpression()), !dbg !7729
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7777
  %bf.load57 = load i64, i64* %19, align 8, !dbg !7778
  %bf.set59 = or i64 %bf.load57, 65536, !dbg !7778
  store i64 %bf.set59, i64* %19, align 8, !dbg !7778
  tail call void @layout_decl(%union.tree_node* %call, i32 0) #6, !dbg !7779
  %bf.load61 = load i64, i64* %2, align 8, !dbg !7780
  %bf.cast642 = and i64 %bf.load61, 67108864, !dbg !7780
  %tobool65 = icmp eq i64 %bf.cast642, 0, !dbg !7780
  br i1 %tobool65, label %if.end83, label %if.then66, !dbg !7782

if.then66:                                        ; preds = %if.end52
  tail call void @set_compound_literal_name(%union.tree_node* %call) #6, !dbg !7783
  %defer_output = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7785
  %20 = bitcast i24* %defer_output to i32*, !dbg !7785
  %bf.load67 = load i32, i32* %20, align 8, !dbg !7786
  %bf.set73 = or i32 %bf.load67, 513, !dbg !7787
  store i32 %bf.set73, i32* %20, align 8, !dbg !7787
  %bf.load75 = load i64, i64* %1, align 8, !dbg !7788
  %bf.set81 = or i64 %bf.load75, 5120, !dbg !7789
  store i64 %bf.set81, i64* %1, align 8, !dbg !7789
  %call82 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call) #7, !dbg !7790
  tail call void @rest_of_decl_compilation(%union.tree_node* %call, i32 1, i32 0) #6, !dbg !7791
  br label %if.end83, !dbg !7792

if.end83:                                         ; preds = %if.end52, %if.then66
  %tobool84 = icmp eq i8 %non_const, 0, !dbg !7793
  br i1 %tobool84, label %cleanup, label %if.then85, !dbg !7795

if.then85:                                        ; preds = %if.end83
  %call86 = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %type.addr.0, %union.tree_node* null, %union.tree_node* %call55) #6, !dbg !7796
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !7724, metadata !DIExpression()), !dbg !7729
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7798
  %bf.load88 = load i64, i64* %21, align 8, !dbg !7799
  %bf.set90 = or i64 %bf.load88, 17179869184, !dbg !7799
  store i64 %bf.set90, i64* %21, align 8, !dbg !7799
  br label %cleanup, !dbg !7800

cleanup:                                          ; preds = %if.end83, %if.then85, %if.then51, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ %15, %if.then51 ], [ %call86, %if.then85 ], [ %call55, %if.end83 ], !dbg !7729
  ret %union.tree_node* %retval.0, !dbg !7801
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_compound_literal_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @check_compound_literal_type(i32 %loc, %struct.c_type_name* %type_name) local_unnamed_addr #5 !dbg !7802 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7806, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata %struct.c_type_name* %type_name, metadata !7807, metadata !DIExpression()), !dbg !7808
  %0 = load i32, i32* @warn_cxx_compat, align 4, !dbg !7809
  %tobool = icmp eq i32 %0, 0, !dbg !7809
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7811

land.lhs.true:                                    ; preds = %entry
  %specs = getelementptr inbounds %struct.c_type_name, %struct.c_type_name* %type_name, i64 0, i32 0, !dbg !7812
  %1 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !7812
  %tag_defined_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %1, i64 0, i32 6, !dbg !7813
  %bf.load = load i8, i8* %tag_defined_p, align 8, !dbg !7813
  %bf.clear = and i8 %bf.load, 32, !dbg !7813
  %tobool1 = icmp eq i8 %bf.clear, 0, !dbg !7814
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7815

if.then:                                          ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67, i64 0, i64 0)) #6, !dbg !7816
  br label %if.end, !dbg !7816

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !7817
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_arg_info* @get_parm_info(i8 zeroext %ellipsis) local_unnamed_addr #5 !dbg !2242 {
entry:
  call void @llvm.dbg.value(metadata i8 %ellipsis, metadata !2246, metadata !DIExpression()), !dbg !7818
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7819
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 2, !dbg !7820
  %1 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !7820
  call void @llvm.dbg.value(metadata %struct.c_binding* %1, metadata !2247, metadata !DIExpression()), !dbg !7818
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !7821
  %2 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7821
  %3 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7821
  %sub.ptr.sub = sub i64 %2, %3, !dbg !7821
  %cmp = icmp slt i64 %sub.ptr.sub, 48, !dbg !7821
  %4 = inttoptr i64 %3 to i8*, !dbg !7821
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7821

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !7821
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !7821
  %.pre10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !7821
  br label %cond.end, !dbg !7821

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre10, %cond.true ], !dbg !7821
  %6 = phi i64 [ 48, %entry ], [ %.pre, %cond.true ], !dbg !7821
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !7821
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !7821
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !7821
  %cmp1 = icmp eq i8* %add.ptr, %7, !dbg !7821
  %8 = ptrtoint i8* %7 to i64, !dbg !7821
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !7821
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !7821

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !7821
  %bf.set = or i8 %bf.load, 2, !dbg !7821
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !7821
  br label %cond.end5, !dbg !7821

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %8, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !7821
  %10 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !7821
  %conv11 = sext i32 %10 to i64, !dbg !7821
  %add = add nsw i64 %9, %conv11, !dbg !7821
  %neg = xor i32 %10, -1, !dbg !7821
  %conv12 = sext i32 %neg to i64, !dbg !7821
  %and = and i64 %add, %conv12, !dbg !7821
  %11 = inttoptr i64 %and to i8*, !dbg !7821
  store i8* %11, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !7821
  %12 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !7821
  %sub.ptr.sub15 = sub i64 %and, %12, !dbg !7821
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7821
  %sub.ptr.sub18 = sub i64 %13, %12, !dbg !7821
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !7821
  %14 = bitcast i8* %7 to %struct.c_arg_info*, !dbg !7821
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !7821

cond.true21:                                      ; preds = %cond.end5
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !7821
  br label %cond.end23, !dbg !7821

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %15 = phi i64 [ %and, %cond.end5 ], [ %13, %cond.true21 ], !dbg !7821
  store i64 %15, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !7821
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %14, metadata !2248, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2249, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8 0, metadata !2253, metadata !DIExpression()), !dbg !7818
  %parms25 = bitcast i8* %7 to %union.tree_node**, !dbg !7822
  store %union.tree_node* null, %union.tree_node** %parms25, align 8, !dbg !7823
  %tags26 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !7824
  %16 = bitcast i8* %tags26 to %union.tree_node**, !dbg !7824
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !7825
  %types27 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !7826
  %17 = bitcast i8* %types27 to %union.tree_node**, !dbg !7826
  store %union.tree_node* null, %union.tree_node** %17, align 8, !dbg !7827
  %others28 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !7828
  %18 = bitcast i8* %others28 to %union.tree_node**, !dbg !7828
  store %union.tree_node* null, %union.tree_node** %18, align 8, !dbg !7829
  %pending_sizes = getelementptr inbounds i8, i8* %7, i64 32, !dbg !7830
  %19 = bitcast i8* %pending_sizes to %union.tree_node**, !dbg !7830
  store %union.tree_node* null, %union.tree_node** %19, align 8, !dbg !7831
  %20 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !7832
  %had_vla_unspec = getelementptr inbounds %struct.c_scope, %struct.c_scope* %20, i64 0, i32 5, !dbg !7833
  %21 = bitcast i40* %had_vla_unspec to i64*, !dbg !7833
  %bf.load29 = load i64, i64* %21, align 8, !dbg !7833
  %bf.lshr = lshr i64 %bf.load29, 29, !dbg !7833
  %22 = trunc i64 %bf.lshr to i8, !dbg !7833
  %bf.cast = and i8 %22, 1, !dbg !7833
  %23 = getelementptr inbounds i8, i8* %7, i64 40, !dbg !7834
  %bf.load32 = load i8, i8* %23, align 8, !dbg !7835
  %bf.clear33 = and i8 %bf.load32, -2, !dbg !7835
  %bf.set34 = or i8 %bf.clear33, %bf.cast, !dbg !7835
  store i8 %bf.set34, i8* %23, align 8, !dbg !7835
  %bindings35 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %20, i64 0, i32 2, !dbg !7836
  store %struct.c_binding* null, %struct.c_binding** %bindings35, align 8, !dbg !7837
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !7838
  br i1 %tobool, label %cond.true36, label %cond.end38, !dbg !7838

cond.true36:                                      ; preds = %cond.end23
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6187, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7838
  br label %cond.end38, !dbg !7838

cond.end38:                                       ; preds = %cond.end23, %cond.true36
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 3, !dbg !7839
  %24 = load %struct.c_binding*, %struct.c_binding** %prev, align 8, !dbg !7839
  %cmp40 = icmp eq %struct.c_binding* %24, null, !dbg !7841
  br i1 %cmp40, label %land.lhs.true, label %if.end84, !dbg !7842

land.lhs.true:                                    ; preds = %cond.end38
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %1, i64 0, i32 1, !dbg !7843
  %25 = bitcast %union.tree_node** %decl to i64**, !dbg !7843
  %26 = load i64*, i64** %25, align 8, !dbg !7843
  %bf.load42 = load i64, i64* %26, align 8, !dbg !7843
  %bf.cast445 = and i64 %bf.load42, 65535, !dbg !7844
  %cmp45 = icmp eq i64 %bf.cast445, 34, !dbg !7844
  br i1 %cmp45, label %land.lhs.true47, label %if.end84, !dbg !7845

land.lhs.true47:                                  ; preds = %land.lhs.true
  %name = getelementptr inbounds i64, i64* %26, i64 4, !dbg !7846
  %27 = bitcast i64* %name to %union.tree_node**, !dbg !7846
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !7846
  %tobool49 = icmp eq %union.tree_node* %28, null, !dbg !7846
  br i1 %tobool49, label %land.lhs.true50, label %if.end84, !dbg !7847

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %type = getelementptr inbounds i64, i64* %26, i64 2, !dbg !7848
  %29 = bitcast i64* %type to i64**, !dbg !7848
  %30 = load i64*, i64** %29, align 8, !dbg !7848
  %bf.load53 = load i64, i64* %30, align 8, !dbg !7848
  %bf.cast556 = and i64 %bf.load53, 65535, !dbg !7848
  %cmp56 = icmp eq i64 %bf.cast556, 19, !dbg !7848
  br i1 %cmp56, label %if.then, label %if.end84, !dbg !7849

if.then:                                          ; preds = %land.lhs.true50
  %bf.cast637 = and i64 %bf.load42, 524288, !dbg !7850
  %tobool64 = icmp eq i64 %bf.cast637, 0, !dbg !7850
  br i1 %tobool64, label %lor.lhs.false, label %if.then79, !dbg !7853

lor.lhs.false:                                    ; preds = %if.then
  %bf.cast708 = and i64 %bf.load42, 1048576, !dbg !7854
  %tobool71 = icmp eq i64 %bf.cast708, 0, !dbg !7854
  br i1 %tobool71, label %lor.lhs.false72, label %if.then79, !dbg !7855

lor.lhs.false72:                                  ; preds = %lor.lhs.false
  %lang_flag_4 = getelementptr inbounds i64, i64* %26, i64 7, !dbg !7856
  %bf.load74 = load i64, i64* %lang_flag_4, align 8, !dbg !7856
  %bf.cast779 = and i64 %bf.load74, 524288, !dbg !7856
  %tobool78 = icmp eq i64 %bf.cast779, 0, !dbg !7856
  br i1 %tobool78, label %if.end, label %if.then79, !dbg !7857

if.then79:                                        ; preds = %lor.lhs.false72, %lor.lhs.false, %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !7858
  br label %if.end, !dbg !7858

if.end:                                           ; preds = %lor.lhs.false72, %if.then79
  %tobool80 = icmp eq i8 %ellipsis, 0, !dbg !7859
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !7861

if.then81:                                        ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !7862
  br label %if.end82, !dbg !7862

if.end82:                                         ; preds = %if.end, %if.then81
  %31 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55) to i64*), align 8, !dbg !7863
  %32 = bitcast i8* %types27 to i64*, !dbg !7864
  store i64 %31, i64* %32, align 8, !dbg !7864
  br label %cleanup, !dbg !7865

if.end84:                                         ; preds = %land.lhs.true47, %land.lhs.true50, %land.lhs.true, %cond.end38
  %tobool85 = icmp eq i8 %ellipsis, 0, !dbg !7866
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !7868
  %spec.select = select i1 %tobool85, %union.tree_node* %33, %union.tree_node* null, !dbg !7869
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !2251, metadata !DIExpression()), !dbg !7818
  br label %while.cond, !dbg !7870

while.cond:                                       ; preds = %sw.epilog, %if.end84
  %gave_void_only_once_err.0 = phi i8 [ 0, %if.end84 ], [ %gave_void_only_once_err.4, %sw.epilog ], !dbg !7871
  %others.0 = phi %union.tree_node* [ null, %if.end84 ], [ %others.2, %sw.epilog ], !dbg !7872
  %types.1 = phi %union.tree_node* [ %spec.select, %if.end84 ], [ %types.4, %sw.epilog ], !dbg !7873
  %tags.0 = phi %union.tree_node* [ null, %if.end84 ], [ %tags.1, %sw.epilog ], !dbg !7874
  %parms.0 = phi %union.tree_node* [ null, %if.end84 ], [ %parms.3, %sw.epilog ], !dbg !7875
  %b.0 = phi %struct.c_binding* [ %1, %if.end84 ], [ %call220, %sw.epilog ], !dbg !7818
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !2247, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.0, metadata !2249, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %tags.0, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %types.1, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %others.0, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8 %gave_void_only_once_err.0, metadata !2253, metadata !DIExpression()), !dbg !7818
  %tobool88 = icmp eq %struct.c_binding* %b.0, null, !dbg !7870
  br i1 %tobool88, label %while.end, label %while.body, !dbg !7870

while.body:                                       ; preds = %while.cond
  %decl90 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !7876
  %34 = load %union.tree_node*, %union.tree_node** %decl90, align 8, !dbg !7876
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !2254, metadata !DIExpression()), !dbg !7877
  %type93 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7878
  %35 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !7878
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !2256, metadata !DIExpression()), !dbg !7877
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7879
  %bf.load95 = load i64, i64* %36, align 8, !dbg !7879
  %37 = trunc i64 %bf.load95 to i16, !dbg !7879
  switch i16 %37, label %sw.default [
    i16 34, label %sw.bb
    i16 6, label %tag
    i16 17, label %sw.bb137
    i16 16, label %sw.bb138
    i16 33, label %sw.bb179
    i16 35, label %sw.bb179
    i16 29, label %sw.bb179
    i16 0, label %sw.bb203
  ], !dbg !7880

sw.bb:                                            ; preds = %while.body
  %id = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !7881
  %38 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !7881
  %tobool98 = icmp eq %union.tree_node* %38, null, !dbg !7883
  br i1 %tobool98, label %if.end109, label %if.then99, !dbg !7884

if.then99:                                        ; preds = %sw.bb
  %39 = bitcast %union.tree_node* %38 to %struct.lang_identifier*, !dbg !7884
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7885
  %40 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !7885
  %41 = load %struct.c_binding*, %struct.c_binding** %40, align 8, !dbg !7885
  %cmp101 = icmp eq %struct.c_binding* %41, %b.0, !dbg !7885
  br i1 %cmp101, label %cond.end105, label %cond.true103, !dbg !7885

cond.true103:                                     ; preds = %if.then99
  %42 = bitcast %union.tree_node** %id to %struct.lang_identifier**, !dbg !7885
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6228, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7885
  %.pre15 = load %struct.lang_identifier*, %struct.lang_identifier** %42, align 8, !dbg !7887
  br label %cond.end105, !dbg !7885

cond.end105:                                      ; preds = %if.then99, %cond.true103
  %43 = phi %struct.lang_identifier* [ %39, %if.then99 ], [ %.pre15, %cond.true103 ], !dbg !7887
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !7888
  %44 = bitcast %struct.c_binding** %shadowed to i64*, !dbg !7888
  %45 = load i64, i64* %44, align 8, !dbg !7888
  %symbol_binding108 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %43, i64 0, i32 1, !dbg !7887
  %46 = bitcast %struct.c_binding** %symbol_binding108 to i64*, !dbg !7889
  store i64 %45, i64* %46, align 8, !dbg !7889
  %bf.load111.pre = load i64, i64* %36, align 8, !dbg !7890
  br label %if.end109, !dbg !7892

if.end109:                                        ; preds = %sw.bb, %cond.end105
  %bf.load111 = phi i64 [ %bf.load95, %sw.bb ], [ %bf.load111.pre, %cond.end105 ], !dbg !7890
  %bf.cast1143 = and i64 %bf.load111, 4194304, !dbg !7890
  %tobool115 = icmp eq i64 %bf.cast1143, 0, !dbg !7890
  br i1 %tobool115, label %if.else, label %if.then116, !dbg !7893

if.then116:                                       ; preds = %if.end109
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.70, i64 0, i64 0), %union.tree_node* %34) #6, !dbg !7894
  br label %sw.epilog, !dbg !7894

if.else:                                          ; preds = %if.end109
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7895
  %bf.load118 = load i64, i64* %47, align 8, !dbg !7895
  %bf.cast1204 = and i64 %bf.load118, 65535, !dbg !7895
  %cmp121 = icmp eq i64 %bf.cast1204, 19, !dbg !7895
  br i1 %cmp121, label %land.lhs.true123, label %if.else131, !dbg !7897

land.lhs.true123:                                 ; preds = %if.else
  %name125 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7898
  %48 = load %union.tree_node*, %union.tree_node** %name125, align 8, !dbg !7898
  %tobool126 = icmp eq %union.tree_node* %48, null, !dbg !7898
  br i1 %tobool126, label %if.then127, label %if.else131, !dbg !7899

if.then127:                                       ; preds = %land.lhs.true123
  %tobool128 = icmp eq i8 %gave_void_only_once_err.0, 0, !dbg !7900
  br i1 %tobool128, label %if.then129, label %sw.epilog, !dbg !7903

if.then129:                                       ; preds = %if.then127
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !7904
  call void @llvm.dbg.value(metadata i8 1, metadata !2253, metadata !DIExpression()), !dbg !7818
  br label %sw.epilog, !dbg !7906

if.else131:                                       ; preds = %land.lhs.true123, %if.else
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7907
  store %union.tree_node* %parms.0, %union.tree_node** %chain, align 8, !dbg !7909
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !2249, metadata !DIExpression()), !dbg !7818
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7910
  store %union.tree_node* %35, %union.tree_node** %initial, align 8, !dbg !7911
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %35, %union.tree_node* %types.1) #6, !dbg !7912
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2251, metadata !DIExpression()), !dbg !7818
  br label %sw.epilog

sw.bb137:                                         ; preds = %while.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), metadata !2257, metadata !DIExpression()), !dbg !7877
  br label %tag, !dbg !7913

sw.bb138:                                         ; preds = %while.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), metadata !2257, metadata !DIExpression()), !dbg !7877
  br label %tag, !dbg !7914

tag:                                              ; preds = %while.body, %sw.bb138, %sw.bb137
  %keyword.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), %sw.bb138 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), %sw.bb137 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %while.body ], !dbg !7915
  call void @llvm.dbg.value(metadata i8* %keyword.0, metadata !2257, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.label(metadata !2258), !dbg !7916
  %id139 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !7917
  %49 = load %union.tree_node*, %union.tree_node** %id139, align 8, !dbg !7917
  %tobool140 = icmp eq %union.tree_node* %49, null, !dbg !7919
  br i1 %tobool140, label %if.end152, label %if.then141, !dbg !7920

if.then141:                                       ; preds = %tag
  %50 = bitcast %union.tree_node* %49 to %struct.lang_identifier*, !dbg !7920
  %tag_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7921
  %51 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !7921
  %52 = load %struct.c_binding*, %struct.c_binding** %51, align 8, !dbg !7921
  %cmp143 = icmp eq %struct.c_binding* %52, %b.0, !dbg !7921
  br i1 %cmp143, label %cond.end147, label %cond.true145, !dbg !7921

cond.true145:                                     ; preds = %if.then141
  %53 = bitcast %union.tree_node** %id139 to %struct.lang_identifier**, !dbg !7921
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7921
  %.pre12 = load %struct.lang_identifier*, %struct.lang_identifier** %53, align 8, !dbg !7923
  br label %cond.end147, !dbg !7921

cond.end147:                                      ; preds = %if.then141, %cond.true145
  %54 = phi %struct.lang_identifier* [ %50, %if.then141 ], [ %.pre12, %cond.true145 ], !dbg !7923
  %shadowed149 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !7924
  %55 = bitcast %struct.c_binding** %shadowed149 to i64*, !dbg !7924
  %56 = load i64, i64* %55, align 8, !dbg !7924
  %tag_binding151 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %54, i64 0, i32 2, !dbg !7923
  %57 = bitcast %struct.c_binding** %tag_binding151 to i64*, !dbg !7925
  store i64 %56, i64* %57, align 8, !dbg !7925
  %bf.load154.pre = load i64, i64* %36, align 8, !dbg !7926
  br label %if.end152, !dbg !7928

if.end152:                                        ; preds = %tag, %cond.end147
  %bf.load154 = phi i64 [ %bf.load95, %tag ], [ %bf.load154.pre, %cond.end147 ], !dbg !7926
  %bf.cast1562 = and i64 %bf.load154, 65535, !dbg !7929
  %cmp157 = icmp eq i64 %bf.cast1562, 17, !dbg !7929
  br i1 %cmp157, label %lor.lhs.false159, label %if.end152.if.then163_crit_edge, !dbg !7930

if.end152.if.then163_crit_edge:                   ; preds = %if.end152
  %.pre14 = load %union.tree_node*, %union.tree_node** %id139, align 8, !dbg !7931
  br label %if.then163, !dbg !7930

lor.lhs.false159:                                 ; preds = %if.end152
  %58 = load %union.tree_node*, %union.tree_node** %id139, align 8, !dbg !7934
  %cmp161 = icmp eq %union.tree_node* %58, null, !dbg !7935
  br i1 %cmp161, label %if.end176, label %if.then163, !dbg !7936

if.then163:                                       ; preds = %if.end152.if.then163_crit_edge, %lor.lhs.false159
  %59 = phi %union.tree_node* [ %.pre14, %if.end152.if.then163_crit_edge ], [ %58, %lor.lhs.false159 ], !dbg !7931
  %tobool165 = icmp eq %union.tree_node* %59, null, !dbg !7937
  br i1 %tobool165, label %if.else169, label %if.then166, !dbg !7938

if.then166:                                       ; preds = %if.then163
  %call168 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.74, i64 0, i64 0), i8* %keyword.0, %union.tree_node* nonnull %59) #6, !dbg !7939
  br label %if.end171, !dbg !7939

if.else169:                                       ; preds = %if.then163
  %call170 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.75, i64 0, i64 0), i8* %keyword.0) #6, !dbg !7940
  br label %if.end171

if.end171:                                        ; preds = %if.else169, %if.then166
  %.b = load i1, i1* @get_parm_info.explained_incomplete_types, align 1, !dbg !7941
  br i1 %.b, label %if.end176, label %if.then173, !dbg !7943

if.then173:                                       ; preds = %if.end171
  %call174 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !7944
  store i1 true, i1* @get_parm_info.explained_incomplete_types, align 1, !dbg !7946
  br label %if.end176, !dbg !7947

if.end176:                                        ; preds = %if.end171, %lor.lhs.false159, %if.then173
  %60 = load %union.tree_node*, %union.tree_node** %id139, align 8, !dbg !7948
  %call178 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %60, %union.tree_node* %34, %union.tree_node* %tags.0) #6, !dbg !7948
  call void @llvm.dbg.value(metadata %union.tree_node* %call178, metadata !2250, metadata !DIExpression()), !dbg !7818
  br label %sw.epilog, !dbg !7949

sw.bb179:                                         ; preds = %while.body, %while.body, %while.body
  %bf.cast1831 = and i64 %bf.load95, 65535, !dbg !7950
  %cmp184 = icmp eq i64 %bf.cast1831, 29, !dbg !7950
  %nested = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !7950
  %bf.load187 = load i32, i32* %nested, align 8, !dbg !7950
  %bf.clear189 = and i32 %bf.load187, 536870912, !dbg !7950
  %tobool190 = icmp ne i32 %bf.clear189, 0, !dbg !7950
  br i1 %cmp184, label %cond.true186, label %cond.false191, !dbg !7950

cond.true186:                                     ; preds = %sw.bb179
  br i1 %tobool190, label %cond.end199, label %cond.true197, !dbg !7950

cond.false191:                                    ; preds = %sw.bb179
  br i1 %tobool190, label %cond.true197, label %cond.end199, !dbg !7950

cond.true197:                                     ; preds = %cond.false191, %cond.true186
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7950
  br label %cond.end199, !dbg !7950

cond.end199:                                      ; preds = %cond.true186, %cond.false191, %cond.true197
  %chain202 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7951
  store %union.tree_node* %others.0, %union.tree_node** %chain202, align 8, !dbg !7952
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !2252, metadata !DIExpression()), !dbg !7818
  br label %sw.bb203, !dbg !7953

sw.bb203:                                         ; preds = %while.body, %cond.end199
  %others.1 = phi %union.tree_node* [ %others.0, %while.body ], [ %34, %cond.end199 ], !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %others.1, metadata !2252, metadata !DIExpression()), !dbg !7818
  %id204 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !7954
  %61 = load %union.tree_node*, %union.tree_node** %id204, align 8, !dbg !7954
  %tobool205 = icmp eq %union.tree_node* %61, null, !dbg !7956
  br i1 %tobool205, label %sw.epilog, label %if.then206, !dbg !7957

if.then206:                                       ; preds = %sw.bb203
  %62 = bitcast %union.tree_node* %61 to %struct.lang_identifier*, !dbg !7957
  %symbol_binding208 = getelementptr inbounds %union.tree_node, %union.tree_node* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7958
  %63 = bitcast i40* %symbol_binding208 to %struct.c_binding**, !dbg !7958
  %64 = load %struct.c_binding*, %struct.c_binding** %63, align 8, !dbg !7958
  %cmp209 = icmp eq %struct.c_binding* %64, %b.0, !dbg !7958
  br i1 %cmp209, label %cond.end213, label %cond.true211, !dbg !7958

cond.true211:                                     ; preds = %if.then206
  %65 = bitcast %union.tree_node** %id204 to %struct.lang_identifier**, !dbg !7958
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7958
  %.pre11 = load %struct.lang_identifier*, %struct.lang_identifier** %65, align 8, !dbg !7960
  br label %cond.end213, !dbg !7958

cond.end213:                                      ; preds = %if.then206, %cond.true211
  %66 = phi %struct.lang_identifier* [ %62, %if.then206 ], [ %.pre11, %cond.true211 ], !dbg !7960
  %shadowed215 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !7961
  %67 = bitcast %struct.c_binding** %shadowed215 to i64*, !dbg !7961
  %68 = load i64, i64* %67, align 8, !dbg !7961
  %symbol_binding217 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %66, i64 0, i32 1, !dbg !7960
  %69 = bitcast %struct.c_binding** %symbol_binding217 to i64*, !dbg !7962
  store i64 %68, i64* %69, align 8, !dbg !7962
  br label %sw.epilog, !dbg !7963

sw.default:                                       ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6329, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7964
  br label %sw.epilog, !dbg !7965

sw.epilog:                                        ; preds = %if.then127, %sw.bb203, %cond.end213, %if.then116, %if.then129, %if.else131, %sw.default, %if.end176
  %gave_void_only_once_err.4 = phi i8 [ %gave_void_only_once_err.0, %sw.default ], [ %gave_void_only_once_err.0, %if.end176 ], [ %gave_void_only_once_err.0, %if.then116 ], [ %gave_void_only_once_err.0, %if.else131 ], [ %gave_void_only_once_err.0, %if.then127 ], [ 1, %if.then129 ], [ %gave_void_only_once_err.0, %cond.end213 ], [ %gave_void_only_once_err.0, %sw.bb203 ], !dbg !7871
  %others.2 = phi %union.tree_node* [ %others.0, %sw.default ], [ %others.0, %if.end176 ], [ %others.0, %if.then116 ], [ %others.0, %if.else131 ], [ %others.0, %if.then127 ], [ %others.0, %if.then129 ], [ %others.1, %cond.end213 ], [ %others.1, %sw.bb203 ], !dbg !7872
  %types.4 = phi %union.tree_node* [ %types.1, %sw.default ], [ %types.1, %if.end176 ], [ %types.1, %if.then116 ], [ %call, %if.else131 ], [ %types.1, %if.then127 ], [ %types.1, %if.then129 ], [ %types.1, %cond.end213 ], [ %types.1, %sw.bb203 ], !dbg !7873
  %tags.1 = phi %union.tree_node* [ %tags.0, %sw.default ], [ %call178, %if.end176 ], [ %tags.0, %if.then116 ], [ %tags.0, %if.else131 ], [ %tags.0, %if.then127 ], [ %tags.0, %if.then129 ], [ %tags.0, %cond.end213 ], [ %tags.0, %sw.bb203 ], !dbg !7818
  %parms.3 = phi %union.tree_node* [ %parms.0, %sw.default ], [ %parms.0, %if.end176 ], [ %parms.0, %if.then116 ], [ %34, %if.else131 ], [ %parms.0, %if.then127 ], [ %parms.0, %if.then129 ], [ %parms.0, %cond.end213 ], [ %parms.0, %sw.bb203 ], !dbg !7875
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.3, metadata !2249, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %tags.1, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %types.4, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %others.2, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8 %gave_void_only_once_err.4, metadata !2253, metadata !DIExpression()), !dbg !7818
  %call220 = tail call fastcc %struct.c_binding* @free_binding_and_advance(%struct.c_binding* nonnull %b.0) #7, !dbg !7966
  call void @llvm.dbg.value(metadata %struct.c_binding* %call220, metadata !2247, metadata !DIExpression()), !dbg !7818
  br label %while.cond, !dbg !7870, !llvm.loop !7967

while.end:                                        ; preds = %while.cond
  %others.0.lcssa = phi %union.tree_node* [ %others.0, %while.cond ], !dbg !7872
  %types.1.lcssa = phi %union.tree_node* [ %types.1, %while.cond ], !dbg !7873
  %tags.0.lcssa = phi %union.tree_node* [ %tags.0, %while.cond ], !dbg !7874
  %parms.0.lcssa = phi %union.tree_node* [ %parms.0, %while.cond ], !dbg !7875
  call void @llvm.dbg.value(metadata %union.tree_node* %others.0.lcssa, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %types.1.lcssa, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %tags.0.lcssa, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.0.lcssa, metadata !2249, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %others.0.lcssa, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %types.1.lcssa, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %tags.0.lcssa, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.0.lcssa, metadata !2249, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %others.0.lcssa, metadata !2252, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %types.1.lcssa, metadata !2251, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %tags.0.lcssa, metadata !2250, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.0.lcssa, metadata !2249, metadata !DIExpression()), !dbg !7818
  store %union.tree_node* %parms.0.lcssa, %union.tree_node** %parms25, align 8, !dbg !7969
  store %union.tree_node* %tags.0.lcssa, %union.tree_node** %16, align 8, !dbg !7970
  store %union.tree_node* %types.1.lcssa, %union.tree_node** %17, align 8, !dbg !7971
  store %union.tree_node* %others.0.lcssa, %union.tree_node** %18, align 8, !dbg !7972
  %call225 = tail call %union.tree_node* @get_pending_sizes() #6, !dbg !7973
  store %union.tree_node* %call225, %union.tree_node** %19, align 8, !dbg !7974
  br label %cleanup, !dbg !7975

cleanup:                                          ; preds = %while.end, %if.end82
  ret %struct.c_arg_info* %14, !dbg !7976
}

; Function Attrs: nounwind uwtable
define dso_local void @parser_xref_tag(%struct.c_typespec* noalias sret %agg.result, i32 %loc, i32 %code, %union.tree_node* %name) local_unnamed_addr #5 !dbg !7977 {
entry:
  %refloc = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7987, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i32 %code, metadata !7988, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !7989, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata %struct.c_typespec* %agg.result, metadata !7990, metadata !DIExpression()), !dbg !7994
  %0 = bitcast i32* %refloc to i8*, !dbg !7995
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7995
  %expr = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !7996
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !7997
  %expr_const_operands = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !7998
  store i8 1, i8* %expr_const_operands, align 8, !dbg !7999
  call void @llvm.dbg.value(metadata i32* %refloc, metadata !7992, metadata !DIExpression(DW_OP_deref)), !dbg !7993
  %call = call fastcc %union.tree_node* @lookup_tag(i32 %code, %union.tree_node* %name, i32 0, i32* nonnull %refloc) #7, !dbg !8000
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7991, metadata !DIExpression()), !dbg !7993
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !8001
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !8001
  %kind = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !8002
  store i32 %cond, i32* %kind, align 8, !dbg !8003
  br i1 %tobool, label %if.end15, label %land.lhs.true, !dbg !8004

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8006
  %bf.load = load i64, i64* %1, align 8, !dbg !8006
  %2 = trunc i64 %bf.load to i32, !dbg !8006
  %bf.cast = and i32 %2, 65535, !dbg !8006
  %cmp = icmp eq i32 %bf.cast, %code, !dbg !8007
  br i1 %cmp, label %if.then, label %if.end15, !dbg !8008

if.then:                                          ; preds = %land.lhs.true
  %type = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !8009
  %lang_flag_2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8009
  %bf.load2 = load i32, i32* %lang_flag_2, align 4, !dbg !8009
  %bf.clear3 = and i32 %bf.load2, 134217728, !dbg !8009
  %tobool4 = icmp ne i32 %bf.clear3, 0, !dbg !8009
  %cmp6 = icmp ne i32 %loc, 0, !dbg !8012
  %or.cond = and i1 %tobool4, %cmp6, !dbg !8013
  %3 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8014
  %tobool8 = icmp ne i32 %3, 0, !dbg !8014
  %or.cond1 = and i1 %or.cond, %tobool8, !dbg !8013
  br i1 %or.cond1, label %if.then9, label %if.end, !dbg !8013

if.then9:                                         ; preds = %if.then
  switch i32 %code, label %sw.default [
    i32 6, label %sw.bb
    i32 16, label %sw.bb11
    i32 17, label %sw.bb13
  ], !dbg !8015

sw.bb:                                            ; preds = %if.then9
  %call10 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !8017
  %4 = load i32, i32* %refloc, align 4, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %4, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void (i32, i8*, ...) @inform(i32 %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !8020
  br label %if.end, !dbg !8021

sw.bb11:                                          ; preds = %if.then9
  %call12 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.79, i64 0, i64 0)) #6, !dbg !8022
  %5 = load i32, i32* %refloc, align 4, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %5, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void (i32, i8*, ...) @inform(i32 %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0)) #6, !dbg !8024
  br label %if.end, !dbg !8025

sw.bb13:                                          ; preds = %if.then9
  %call14 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !8026
  %6 = load i32, i32* %refloc, align 4, !dbg !8027
  call void @llvm.dbg.value(metadata i32 %6, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void (i32, i8*, ...) @inform(i32 %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !8028
  br label %if.end, !dbg !8029

sw.default:                                       ; preds = %if.then9
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 6401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8030
  br label %if.end, !dbg !8031

if.end:                                           ; preds = %sw.bb, %sw.bb11, %sw.bb13, %sw.default, %if.then
  %spec = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !8032
  store %union.tree_node* %call, %union.tree_node** %spec, align 8, !dbg !8033
  br label %cleanup, !dbg !8034

if.end15:                                         ; preds = %entry, %land.lhs.true
  %call16 = call %union.tree_node* @make_node_stat(i32 %code) #6, !dbg !8035
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !7991, metadata !DIExpression()), !dbg !7993
  %cmp17 = icmp eq i32 %code, 6, !dbg !8036
  br i1 %cmp17, label %if.then18, label %if.end59, !dbg !8038

if.then18:                                        ; preds = %if.end15
  %7 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6) to i64**), align 16, !dbg !8039
  %bf.load20 = load i64, i64* %7, align 8, !dbg !8039
  %bf.cast222 = and i64 %bf.load20, 65535, !dbg !8039
  %cmp23 = icmp eq i64 %bf.cast222, 14, !dbg !8039
  %8 = bitcast i64* %7 to %struct.tree_type*, !dbg !8039
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !8039

cond.true:                                        ; preds = %if.then18
  %.cast = bitcast i64* %7 to %union.tree_node*, !dbg !8039
  %call24 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8039
  %.pre = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6) to %struct.tree_type**), align 16, !dbg !8041
  br label %cond.end, !dbg !8039

cond.false:                                       ; preds = %if.then18
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !8039
  %bf.load26 = load i32, i32* %mode, align 4, !dbg !8039
  %bf.lshr27 = lshr i32 %bf.load26, 16, !dbg !8039
  %bf.clear28 = and i32 %bf.lshr27, 255, !dbg !8039
  br label %cond.end, !dbg !8039

cond.end:                                         ; preds = %cond.false, %cond.true
  %9 = phi %struct.tree_type* [ %.pre, %cond.true ], [ %8, %cond.false ], !dbg !8041
  %cond29 = phi i32 [ %call24, %cond.true ], [ %bf.clear28, %cond.false ], !dbg !8039
  %type30 = bitcast %union.tree_node* %call16 to %struct.tree_type*, !dbg !8039
  %mode31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !8039
  %bf.load32 = load i32, i32* %mode31, align 4, !dbg !8039
  %bf.value = shl i32 %cond29, 16, !dbg !8039
  %bf.shl = and i32 %bf.value, 16711680, !dbg !8039
  %bf.clear33 = and i32 %bf.load32, -16711681, !dbg !8039
  %bf.set = or i32 %bf.clear33, %bf.shl, !dbg !8039
  store i32 %bf.set, i32* %mode31, align 4, !dbg !8039
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 7, !dbg !8041
  %10 = load i32, i32* %align, align 8, !dbg !8041
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8042
  store i32 %10, i32* %11, align 8, !dbg !8043
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8044
  %bf.load38 = load i64, i64* %12, align 8, !dbg !8045
  %bf.clear42 = and i64 %bf.load38, -4398048608257, !dbg !8046
  %bf.set43 = or i64 %bf.clear42, 2097152, !dbg !8046
  store i64 %bf.set43, i64* %12, align 8, !dbg !8046
  %13 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6) to %struct.tree_type**), align 16, !dbg !8047
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 6, !dbg !8047
  %bf.load45 = load i32, i32* %precision, align 4, !dbg !8047
  %bf.clear46 = and i32 %bf.load45, 1023, !dbg !8047
  %bf.clear51 = and i32 %bf.set, -1024, !dbg !8048
  %bf.set52 = or i32 %bf.clear51, %bf.clear46, !dbg !8048
  store i32 %bf.set52, i32* %mode31, align 4, !dbg !8048
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 13, !dbg !8049
  %14 = bitcast %union.tree_node** %minval to i64*, !dbg !8049
  %15 = load i64, i64* %14, align 8, !dbg !8049
  %minval55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !8050
  %16 = bitcast %struct.lang_decl** %minval55 to i64*, !dbg !8051
  store i64 %15, i64* %16, align 8, !dbg !8051
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 14, !dbg !8052
  %17 = bitcast %union.tree_node** %maxval to i64*, !dbg !8052
  %18 = load i64, i64* %17, align 8, !dbg !8052
  %maxval58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8053
  %19 = bitcast %struct.rtx_def** %maxval58 to i64*, !dbg !8054
  store i64 %18, i64* %19, align 8, !dbg !8054
  br label %if.end59, !dbg !8055

if.end59:                                         ; preds = %cond.end, %if.end15
  call fastcc void @pushtag(i32 %loc, %union.tree_node* %name, %union.tree_node* %call16) #7, !dbg !8056
  %spec60 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !8057
  store %union.tree_node* %call16, %union.tree_node** %spec60, align 8, !dbg !8058
  br label %cleanup, !dbg !8059

cleanup:                                          ; preds = %if.end59, %if.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8060
  ret void, !dbg !8060
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @xref_tag(i32 %code, %union.tree_node* %name) local_unnamed_addr #5 !dbg !8061 {
entry:
  %tmp = alloca %struct.c_typespec, align 8
  call void @llvm.dbg.value(metadata i32 %code, metadata !8065, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !8066, metadata !DIExpression()), !dbg !8067
  %0 = load i32, i32* @input_location, align 4, !dbg !8068
  call void @parser_xref_tag(%struct.c_typespec* nonnull sret %tmp, i32 %0, i32 %code, %union.tree_node* %name) #7, !dbg !8069
  %spec = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %tmp, i64 0, i32 1, !dbg !8070
  %1 = load %union.tree_node*, %union.tree_node** %spec, align 8, !dbg !8070
  ret %union.tree_node* %1, !dbg !8071
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @start_struct(i32 %loc, i32 %code, %union.tree_node* %name, %struct.c_struct_parse_info** %enclosing_struct_parse_info) local_unnamed_addr #5 !dbg !8072 {
entry:
  %refloc = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8077, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i32 %code, metadata !8078, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !8079, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.c_struct_parse_info** %enclosing_struct_parse_info, metadata !8080, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8081, metadata !DIExpression()), !dbg !8083
  %0 = bitcast i32* %refloc to i8*, !dbg !8084
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8084
  call void @llvm.dbg.value(metadata i32 0, metadata !8082, metadata !DIExpression()), !dbg !8083
  store i32 0, i32* %refloc, align 4, !dbg !8085
  %cmp = icmp eq %union.tree_node* %name, null, !dbg !8086
  br i1 %cmp, label %if.end, label %if.then, !dbg !8088

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %refloc, metadata !8082, metadata !DIExpression(DW_OP_deref)), !dbg !8083
  %call = call fastcc %union.tree_node* @lookup_tag(i32 %code, %union.tree_node* nonnull %name, i32 1, i32* nonnull %refloc) #7, !dbg !8089
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8081, metadata !DIExpression()), !dbg !8083
  br label %if.end, !dbg !8090

if.end:                                           ; preds = %entry, %if.then
  %ref.0 = phi %union.tree_node* [ %call, %if.then ], [ null, %entry ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.0, metadata !8081, metadata !DIExpression()), !dbg !8083
  %tobool = icmp eq %union.tree_node* %ref.0, null, !dbg !8091
  br i1 %tobool, label %if.end23, label %land.lhs.true, !dbg !8093

land.lhs.true:                                    ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8094
  %bf.load = load i64, i64* %1, align 8, !dbg !8094
  %2 = trunc i64 %bf.load to i32, !dbg !8094
  %bf.cast = and i32 %2, 65535, !dbg !8094
  %cmp1 = icmp eq i32 %bf.cast, %code, !dbg !8095
  br i1 %cmp1, label %if.then2, label %if.end23, !dbg !8096

if.then2:                                         ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8097
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !8097
  %tobool3 = icmp eq %union.tree_node* %4, null, !dbg !8097
  br i1 %tobool3, label %if.else11, label %if.then4, !dbg !8100

if.then4:                                         ; preds = %if.then2
  %cmp5 = icmp eq i32 %code, 17, !dbg !8101
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !8104

if.then6:                                         ; preds = %if.then4
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.83, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8105
  br label %if.end7, !dbg !8105

if.else:                                          ; preds = %if.then4
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.84, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8106
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %5 = load i32, i32* %refloc, align 4, !dbg !8107
  call void @llvm.dbg.value(metadata i32 %5, metadata !8082, metadata !DIExpression()), !dbg !8083
  %cmp8 = icmp eq i32 %5, 0, !dbg !8109
  br i1 %cmp8, label %if.end23, label %if.then9, !dbg !8110

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.value(metadata i32 %5, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void (i32, i8*, ...) @inform(i32 %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !8111
  br label %if.end23, !dbg !8111

if.else11:                                        ; preds = %if.then2
  %type12 = bitcast %union.tree_node* %ref.0 to %struct.tree_type*, !dbg !8112
  %lang_flag_0 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i64 0, i32 6, !dbg !8112
  %bf.load13 = load i32, i32* %lang_flag_0, align 4, !dbg !8112
  %bf.clear14 = and i32 %bf.load13, 33554432, !dbg !8112
  %tobool15 = icmp eq i32 %bf.clear14, 0, !dbg !8112
  br i1 %tobool15, label %if.end23, label %if.then16, !dbg !8114

if.then16:                                        ; preds = %if.else11
  %cmp17 = icmp eq i32 %code, 17, !dbg !8115
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !8118

if.then18:                                        ; preds = %if.then16
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.86, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8119
  br label %if.end23, !dbg !8119

if.else19:                                        ; preds = %if.then16
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8120
  br label %if.end23

if.end23:                                         ; preds = %if.end7, %if.else11, %if.end, %if.then9, %if.then18, %if.else19, %land.lhs.true
  %ref.3 = phi %union.tree_node* [ %ref.0, %land.lhs.true ], [ null, %if.end ], [ null, %if.then9 ], [ null, %if.end7 ], [ %ref.0, %if.else11 ], [ null, %if.else19 ], [ null, %if.then18 ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.3, metadata !8081, metadata !DIExpression()), !dbg !8083
  %cmp24 = icmp eq %union.tree_node* %ref.3, null, !dbg !8121
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !8123

lor.lhs.false:                                    ; preds = %if.end23
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8124
  %bf.load26 = load i64, i64* %6, align 8, !dbg !8124
  %7 = trunc i64 %bf.load26 to i32, !dbg !8124
  %bf.cast28 = and i32 %7, 65535, !dbg !8124
  %cmp29 = icmp eq i32 %bf.cast28, %code, !dbg !8125
  br i1 %cmp29, label %if.end32, label %if.then30, !dbg !8126

if.then30:                                        ; preds = %lor.lhs.false, %if.end23
  %call31 = call %union.tree_node* @make_node_stat(i32 %code) #6, !dbg !8127
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !8081, metadata !DIExpression()), !dbg !8083
  call fastcc void @pushtag(i32 %loc, %union.tree_node* %name, %union.tree_node* %call31) #7, !dbg !8129
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8083
  %bf.load38.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !8130
  br label %if.end32, !dbg !8131

if.end32:                                         ; preds = %lor.lhs.false, %if.then30
  %bf.load38 = phi i64 [ %bf.load38.pre, %if.then30 ], [ %bf.load26, %lor.lhs.false ], !dbg !8130
  %ref.4 = phi %union.tree_node* [ %call31, %if.then30 ], [ %ref.3, %lor.lhs.false ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.4, metadata !8081, metadata !DIExpression()), !dbg !8083
  %type33 = bitcast %union.tree_node* %ref.4 to %struct.tree_type*, !dbg !8132
  %lang_flag_034 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i64 0, i32 6, !dbg !8132
  %bf.load35 = load i32, i32* %lang_flag_034, align 4, !dbg !8133
  %bf.set = or i32 %bf.load35, 33554432, !dbg !8133
  store i32 %bf.set, i32* %lang_flag_034, align 4, !dbg !8133
  %8 = load i32, i32* @flag_pack_struct, align 4, !dbg !8134
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8135
  %10 = and i32 %8, 1, !dbg !8130
  %bf.value = zext i32 %10 to i64, !dbg !8130
  %bf.shl = shl nuw nsw i64 %bf.value, 41, !dbg !8130
  %bf.clear39 = and i64 %bf.load38, -2199023255553, !dbg !8130
  %bf.set40 = or i64 %bf.clear39, %bf.shl, !dbg !8130
  store i64 %bf.set40, i64* %9, align 8, !dbg !8130
  %11 = load i64, i64* bitcast (%struct.c_struct_parse_info** @struct_parse_info to i64*), align 8, !dbg !8136
  %12 = bitcast %struct.c_struct_parse_info** %enclosing_struct_parse_info to i64*, !dbg !8137
  store i64 %11, i64* %12, align 8, !dbg !8137
  %call41 = call i8* @xmalloc(i64 24) #6, !dbg !8138
  store i8* %call41, i8** bitcast (%struct.c_struct_parse_info** @struct_parse_info to i8**), align 8, !dbg !8139
  %call42 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 0) #7, !dbg !8140
  %13 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8141
  %struct_types = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %13, i64 0, i32 0, !dbg !8142
  store %struct.VEC_tree_heap* %call42, %struct.VEC_tree_heap** %struct_types, align 8, !dbg !8143
  %call43 = call fastcc %struct.VEC_c_binding_ptr_heap* @VEC_c_binding_ptr_heap_alloc(i32 0) #7, !dbg !8144
  %14 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8145
  %fields = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %14, i64 0, i32 1, !dbg !8146
  store %struct.VEC_c_binding_ptr_heap* %call43, %struct.VEC_c_binding_ptr_heap** %fields, align 8, !dbg !8147
  %call44 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 0) #7, !dbg !8148
  %15 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8149
  %typedefs_seen = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %15, i64 0, i32 2, !dbg !8150
  store %struct.VEC_tree_heap* %call44, %struct.VEC_tree_heap** %typedefs_seen, align 8, !dbg !8151
  %16 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8152
  %tobool45 = icmp eq i32 %16, 0, !dbg !8152
  br i1 %tobool45, label %if.end57, label %land.lhs.true46, !dbg !8154

land.lhs.true46:                                  ; preds = %if.end32
  %17 = load i32, i32* @in_sizeof, align 4, !dbg !8155
  %18 = load i32, i32* @in_typeof, align 4, !dbg !8156
  %19 = or i32 %17, %18, !dbg !8157
  %20 = load i32, i32* @in_alignof, align 4, !dbg !8158
  %21 = or i32 %19, %20, !dbg !8157
  %22 = icmp eq i32 %21, 0, !dbg !8157
  br i1 %22, label %if.end57, label %if.then52, !dbg !8157

if.then52:                                        ; preds = %land.lhs.true46
  %tobool53 = icmp eq i32 %17, 0, !dbg !8159
  br i1 %tobool53, label %cond.false, label %cond.end, !dbg !8159

cond.false:                                       ; preds = %if.then52
  %tobool54 = icmp eq i32 %18, 0, !dbg !8160
  %cond = select i1 %tobool54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), !dbg !8160
  br label %cond.end, !dbg !8159

cond.end:                                         ; preds = %if.then52, %cond.false
  %cond55 = phi i8* [ %cond, %cond.false ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), %if.then52 ], !dbg !8159
  %call56 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i64 0, i64 0), i8* %cond55) #6, !dbg !8161
  br label %if.end57, !dbg !8161

if.end57:                                         ; preds = %land.lhs.true46, %if.end32, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8162
  ret %union.tree_node* %ref.4, !dbg !8163
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !8164 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !8168, metadata !DIExpression()), !dbg !8169
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 0) #6, !dbg !8170
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !8170
  ret %struct.VEC_tree_heap* %0, !dbg !8170
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_c_binding_ptr_heap* @VEC_c_binding_ptr_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !8171 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !8175, metadata !DIExpression()), !dbg !8176
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 0) #6, !dbg !8177
  %0 = bitcast i8* %call to %struct.VEC_c_binding_ptr_heap*, !dbg !8177
  ret %struct.VEC_c_binding_ptr_heap* %0, !dbg !8177
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @grokfield(i32 %loc, %struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, %union.tree_node* %width, %union.tree_node** %decl_attrs) local_unnamed_addr #5 !dbg !8178 {
entry:
  %width.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8182, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !8183, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !8184, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata %union.tree_node* %width, metadata !8185, metadata !DIExpression()), !dbg !8196
  store %union.tree_node* %width, %union.tree_node** %width.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %decl_attrs, metadata !8186, metadata !DIExpression()), !dbg !8196
  %kind = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator, i64 0, i32 0, !dbg !8197
  %0 = load i32, i32* %kind, align 8, !dbg !8197
  %cmp = icmp eq i32 %0, 0, !dbg !8198
  br i1 %cmp, label %land.lhs.true, label %if.end38, !dbg !8199

land.lhs.true:                                    ; preds = %entry
  %id = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %declarator, i64 0, i32 3, i32 0, i32 0, !dbg !8200
  %1 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !8200
  %cmp1 = icmp eq %union.tree_node* %1, null, !dbg !8201
  call void @llvm.dbg.value(metadata %union.tree_node* %width, metadata !8185, metadata !DIExpression()), !dbg !8196
  %cmp3 = icmp eq %union.tree_node* %width, null, !dbg !8202
  %or.cond = and i1 %cmp1, %cmp3, !dbg !8203
  br i1 %or.cond, label %if.then, label %if.end38, !dbg !8203

if.then:                                          ; preds = %land.lhs.true
  %type4 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 0, !dbg !8204
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !8204
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !8188, metadata !DIExpression()), !dbg !8205
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8206
  %bf.load = load i64, i64* %3, align 8, !dbg !8206
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8207
  %cmp5 = icmp eq i64 %bf.cast2, 16, !dbg !8207
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !8208

lor.rhs:                                          ; preds = %if.then
  %cmp10 = icmp eq i64 %bf.cast2, 17, !dbg !8209
  br label %lor.end, !dbg !8208

lor.end:                                          ; preds = %lor.rhs, %if.then
  %4 = phi i1 [ true, %if.then ], [ %cmp10, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 0, metadata !8192, metadata !DIExpression()), !dbg !8205
  br i1 %4, label %land.lhs.true12, label %if.end31, !dbg !8210

land.lhs.true12:                                  ; preds = %lor.end
  %5 = load i32, i32* @flag_ms_extensions, align 4, !dbg !8212
  %tobool13 = icmp eq i32 %5, 0, !dbg !8212
  br i1 %tobool13, label %lor.lhs.false, label %if.then18, !dbg !8213

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %typedef_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 6, !dbg !8214
  %bf.load14 = load i8, i8* %typedef_p, align 8, !dbg !8214
  %bf.clear15 = and i8 %bf.load14, 16, !dbg !8214
  %tobool17 = icmp eq i8 %bf.clear15, 0, !dbg !8215
  br i1 %tobool17, label %if.then18, label %if.end31, !dbg !8216

if.then18:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  br i1 %tobool13, label %if.else, label %if.end31, !dbg !8217

if.else:                                          ; preds = %if.then18
  %6 = load i32, i32* @flag_iso, align 4, !dbg !8219
  %tobool21 = icmp eq i32 %6, 0, !dbg !8219
  br i1 %tobool21, label %if.else23, label %if.end31, !dbg !8222

if.else23:                                        ; preds = %if.else
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !8223
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !8223
  %cmp25 = icmp eq %union.tree_node* %8, null, !dbg !8225
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then18, %lor.lhs.false, %if.else23, %lor.end
  %ok.3 = phi i1 [ false, %lor.lhs.false ], [ false, %lor.end ], [ true, %if.then18 ], [ %cmp25, %if.else23 ], [ false, %if.else ]
  br i1 %ok.3, label %if.end34, label %if.then33, !dbg !8226

if.then33:                                        ; preds = %if.end31
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i64 0, i64 0)) #6, !dbg !8227
  br label %cleanup, !dbg !8230

if.end34:                                         ; preds = %if.end31
  %call35 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.93, i64 0, i64 0)) #6, !dbg !8231
  br label %cleanup, !dbg !8232

cleanup:                                          ; preds = %if.end34, %if.then33
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end34 ], [ false, %if.then33 ]
  br i1 %cleanup.dest.slot.0, label %if.end38, label %cleanup63

if.end38:                                         ; preds = %cleanup, %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %width, metadata !8185, metadata !DIExpression()), !dbg !8196
  %tobool39 = icmp eq %union.tree_node* %width, null, !dbg !8233
  %width.addr. = select i1 %tobool39, %union.tree_node** null, %union.tree_node** %width.addr, !dbg !8233
  %call40 = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, i32 3, i8 zeroext 0, %union.tree_node** %width.addr., %union.tree_node** %decl_attrs, %union.tree_node** null, i8* null, i32 0) #7, !dbg !8234
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !8187, metadata !DIExpression()), !dbg !8196
  call void @finish_decl(%union.tree_node* %call40, i32 %loc, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null) #7, !dbg !8235
  %9 = bitcast %union.tree_node** %width.addr to i64*, !dbg !8236
  %10 = load i64, i64* %9, align 8, !dbg !8236
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !8237
  %11 = bitcast %union.tree_node** %initial to i64*, !dbg !8238
  store i64 %10, i64* %11, align 8, !dbg !8238
  %12 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8239
  %tobool41 = icmp eq i32 %12, 0, !dbg !8239
  br i1 %tobool41, label %cleanup63, label %land.lhs.true42, !dbg !8240

land.lhs.true42:                                  ; preds = %if.end38
  %name43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8241
  %13 = load %union.tree_node*, %union.tree_node** %name43, align 8, !dbg !8241
  %cmp44 = icmp eq %union.tree_node* %13, null, !dbg !8242
  br i1 %cmp44, label %cleanup63, label %if.then46, !dbg !8243

if.then46:                                        ; preds = %land.lhs.true42
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8244
  %14 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !8244
  %15 = load %struct.c_binding*, %struct.c_binding** %14, align 8, !dbg !8244
  call void @llvm.dbg.value(metadata %struct.c_binding* %15, metadata !8193, metadata !DIExpression()), !dbg !8245
  %cmp49 = icmp eq %struct.c_binding* %15, null, !dbg !8246
  br i1 %cmp49, label %cleanup63, label %if.then51, !dbg !8248

if.then51:                                        ; preds = %if.then46
  %in_struct = getelementptr inbounds %struct.c_binding, %struct.c_binding* %15, i64 0, i32 5, !dbg !8249
  %bf.load52 = load i32, i32* %in_struct, align 8, !dbg !8249
  %tobool54 = icmp slt i32 %bf.load52, 0, !dbg !8252
  br i1 %tobool54, label %cleanup63, label %if.then55, !dbg !8253

if.then55:                                        ; preds = %if.then51
  %16 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8254
  %fields = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %16, i64 0, i32 1, !dbg !8254
  %call56 = call fastcc %struct.c_binding** @VEC_c_binding_ptr_heap_safe_push(%struct.VEC_c_binding_ptr_heap** nonnull %fields, %struct.c_binding* nonnull %15) #7, !dbg !8254
  %bf.load58 = load i32, i32* %in_struct, align 8, !dbg !8256
  %bf.set = or i32 %bf.load58, -2147483648, !dbg !8256
  store i32 %bf.set, i32* %in_struct, align 8, !dbg !8256
  br label %cleanup63, !dbg !8257

cleanup63:                                        ; preds = %if.then46, %land.lhs.true42, %if.end38, %if.then51, %if.then55, %cleanup
  %retval.1 = phi %union.tree_node* [ null, %cleanup ], [ %call40, %if.then46 ], [ %call40, %if.then55 ], [ %call40, %if.then51 ], [ %call40, %land.lhs.true42 ], [ %call40, %if.end38 ]
  ret %union.tree_node* %retval.1, !dbg !8258
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.c_binding** @VEC_c_binding_ptr_heap_safe_push(%struct.VEC_c_binding_ptr_heap** %vec_, %struct.c_binding* %obj_) unnamed_addr #0 !dbg !8259 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_heap** %vec_, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata %struct.c_binding* %obj_, metadata !8266, metadata !DIExpression()), !dbg !8267
  %call = tail call fastcc i32 @VEC_c_binding_ptr_heap_reserve(%struct.VEC_c_binding_ptr_heap** %vec_, i32 1) #7, !dbg !8268
  %0 = load %struct.VEC_c_binding_ptr_heap*, %struct.VEC_c_binding_ptr_heap** %vec_, align 8, !dbg !8268
  %tobool = icmp eq %struct.VEC_c_binding_ptr_heap* %0, null, !dbg !8268
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8268

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_c_binding_ptr_heap, %struct.VEC_c_binding_ptr_heap* %0, i64 0, i32 0, !dbg !8268
  br label %cond.end, !dbg !8268

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_c_binding_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8268
  %call1 = tail call fastcc %struct.c_binding** @VEC_c_binding_ptr_base_quick_push(%struct.VEC_c_binding_ptr_base* %cond, %struct.c_binding* %obj_) #7, !dbg !8268
  ret %struct.c_binding** %call1, !dbg !8268
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @finish_struct(i32 %loc, %union.tree_node* %t, %union.tree_node* %fieldlist, %union.tree_node* %attributes, %struct.c_struct_parse_info* %enclosing_struct_parse_info) local_unnamed_addr #5 !dbg !8269 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  %fieldlist.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8273, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8274, metadata !DIExpression()), !dbg !8307
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8275, metadata !DIExpression()), !dbg !8307
  store %union.tree_node* %fieldlist, %union.tree_node** %fieldlist.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes, metadata !8276, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %struct.c_struct_parse_info* %enclosing_struct_parse_info, metadata !8277, metadata !DIExpression()), !dbg !8307
  %0 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !8308
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !8309
  %cmp = icmp eq %struct.c_scope* %0, %1, !dbg !8310
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !8279, metadata !DIExpression()), !dbg !8307
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8311
  store %union.tree_node* null, %union.tree_node** %2, align 8, !dbg !8312
  call void @llvm.dbg.value(metadata %union.tree_node** %t.addr, metadata !8274, metadata !DIExpression(DW_OP_deref)), !dbg !8307
  %call = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %t.addr, %union.tree_node* %attributes, i32 8) #6, !dbg !8313
  %3 = load i32, i32* @pedantic, align 4, !dbg !8314
  %tobool = icmp eq i32 %3, 0, !dbg !8314
  br i1 %tobool, label %if.end26, label %if.then, !dbg !8316

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !8317

for.cond:                                         ; preds = %for.inc, %if.then
  %x.0 = phi %union.tree_node* [ %fieldlist, %if.then ], [ %x.0.pre, %for.inc ], !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !8278, metadata !DIExpression()), !dbg !8307
  %cond4 = icmp eq %union.tree_node* %x.0, null, !dbg !8321
  br i1 %cond4, label %if.then8.loopexit, label %for.body, !dbg !8321

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8322
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8322
  %cmp3 = icmp eq %union.tree_node* %4, null, !dbg !8325
  br i1 %cmp3, label %for.inc, label %for.end, !dbg !8326

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8327
  %x.0.pre = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8320
  br label %for.cond, !dbg !8328, !llvm.loop !8329

for.end:                                          ; preds = %for.body
  br label %if.end26, !dbg !8331

if.then8.loopexit:                                ; preds = %for.cond
  %5 = bitcast %union.tree_node** %t.addr to i64**, !dbg !8332
  %6 = load i64*, i64** %5, align 8, !dbg !8332
  %bf.load = load i64, i64* %6, align 8, !dbg !8332
  %bf.cast28 = and i64 %bf.load, 65535, !dbg !8336
  %cmp9 = icmp eq i64 %bf.cast28, 17, !dbg !8336
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8275, metadata !DIExpression()), !dbg !8307
  %tobool12 = icmp ne %union.tree_node* %fieldlist, null, !dbg !8337
  br i1 %cmp9, label %if.then11, label %if.else17, !dbg !8338

if.then11:                                        ; preds = %if.then8.loopexit
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !8339

if.then13:                                        ; preds = %if.then11
  %call14 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0)) #6, !dbg !8341
  br label %if.end26, !dbg !8341

if.else:                                          ; preds = %if.then11
  %call15 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.95, i64 0, i64 0)) #6, !dbg !8343
  br label %if.end26

if.else17:                                        ; preds = %if.then8.loopexit
  br i1 %tobool12, label %if.then19, label %if.else21, !dbg !8344

if.then19:                                        ; preds = %if.else17
  %call20 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.96, i64 0, i64 0)) #6, !dbg !8346
  br label %if.end26, !dbg !8346

if.else21:                                        ; preds = %if.else17
  %call22 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0)) #6, !dbg !8348
  br label %if.end26

if.end26:                                         ; preds = %for.end, %entry, %if.then19, %if.else21, %if.then13, %if.else
  call void @llvm.dbg.value(metadata i32 0, metadata !8280, metadata !DIExpression()), !dbg !8307
  %7 = bitcast %union.tree_node** %t.addr to i64*, !dbg !8349
  %8 = bitcast %union.tree_node** %t.addr to i64**, !dbg !8350
  %9 = bitcast %union.tree_node** %t.addr to %struct.tree_type**, !dbg !8351
  %10 = bitcast %union.tree_node** %t.addr to %struct.tree_common**, !dbg !8353
  br label %for.cond27, !dbg !8355

for.cond27:                                       ; preds = %for.inc236, %if.end26
  %x.1 = phi %union.tree_node* [ %fieldlist, %if.end26 ], [ %x.1.pre, %for.inc236 ], !dbg !8356
  %saw_named_field.0 = phi i32 [ 0, %if.end26 ], [ %saw_named_field.2, %for.inc236 ], !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %saw_named_field.0, metadata !8280, metadata !DIExpression()), !dbg !8307
  %tobool28 = icmp eq %union.tree_node* %x.1, null, !dbg !8358
  br i1 %tobool28, label %for.end239, label %for.body29, !dbg !8358

for.body29:                                       ; preds = %for.cond27
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8359
  %11 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !8359
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8361
  %cmp32 = icmp eq %union.tree_node* %11, %12, !dbg !8362
  br i1 %cmp32, label %for.inc236, label %if.end35, !dbg !8363

if.end35:                                         ; preds = %for.body29
  %13 = load i64, i64* %7, align 8, !dbg !8364
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8365
  %14 = bitcast %union.tree_node** %context to i64*, !dbg !8366
  store i64 %13, i64* %14, align 8, !dbg !8366
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8367
  %bf.load38 = load i64, i64* %15, align 8, !dbg !8367
  %bf.cast4016 = and i64 %bf.load38, 1048576, !dbg !8367
  %tobool41 = icmp eq i64 %bf.cast4016, 0, !dbg !8367
  %16 = inttoptr i64 %13 to i64*, !dbg !8368
  br i1 %tobool41, label %if.else46, label %if.then42, !dbg !8368

if.then42:                                        ; preds = %if.end35
  %bf.load44 = load i64, i64* %16, align 8, !dbg !8369
  %bf.set = or i64 %bf.load44, 17179869184, !dbg !8369
  store i64 %bf.set, i64* %16, align 8, !dbg !8369
  br label %if.end81, !dbg !8370

if.else46:                                        ; preds = %if.end35
  br label %while.cond, !dbg !8371

while.cond:                                       ; preds = %while.body, %if.else46
  %t1.0 = phi %union.tree_node* [ %11, %if.else46 ], [ %t1.0.pre, %while.body ], !dbg !8372
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0, metadata !8281, metadata !DIExpression()), !dbg !8372
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8373
  %bf.load50 = load i64, i64* %17, align 8, !dbg !8373
  %bf.cast5217 = and i64 %bf.load50, 65535, !dbg !8374
  %cmp53 = icmp eq i64 %bf.cast5217, 15, !dbg !8374
  br i1 %cmp53, label %while.body, label %while.end, !dbg !8371

while.body:                                       ; preds = %while.cond
  %t1.0.in.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8372
  %t1.0.pre = load %union.tree_node*, %union.tree_node** %t1.0.in.phi.trans.insert, align 8, !dbg !8372
  br label %while.cond, !dbg !8371, !llvm.loop !8375

while.end:                                        ; preds = %while.cond
  %bf.load50.lcssa = phi i64 [ %bf.load50, %while.cond ], !dbg !8373
  %bf.cast5217.lcssa = phi i64 [ %bf.cast5217, %while.cond ], !dbg !8374
  %cmp61 = icmp eq i64 %bf.cast5217.lcssa, 16, !dbg !8377
  br i1 %cmp61, label %land.lhs.true, label %lor.lhs.false, !dbg !8379

lor.lhs.false:                                    ; preds = %while.end
  %cmp67 = icmp eq i64 %bf.cast5217.lcssa, 17, !dbg !8380
  br i1 %cmp67, label %land.lhs.true, label %if.end81, !dbg !8381

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.end
  %bf.cast7327 = and i64 %bf.load50.lcssa, 17179869184, !dbg !8382
  %tobool74 = icmp eq i64 %bf.cast7327, 0, !dbg !8382
  br i1 %tobool74, label %if.end81, label %if.then75, !dbg !8383

if.then75:                                        ; preds = %land.lhs.true
  %bf.load77 = load i64, i64* %16, align 8, !dbg !8384
  %bf.set79 = or i64 %bf.load77, 17179869184, !dbg !8384
  store i64 %bf.set79, i64* %16, align 8, !dbg !8384
  br label %if.end81, !dbg !8385

if.end81:                                         ; preds = %land.lhs.true, %lor.lhs.false, %if.then75, %if.then42
  %bf.load83 = load i64, i64* %15, align 8, !dbg !8386
  %bf.cast8620 = and i64 %bf.load83, 524288, !dbg !8386
  %tobool87 = icmp eq i64 %bf.cast8620, 0, !dbg !8386
  br i1 %tobool87, label %if.end93, label %if.then88, !dbg !8388

if.then88:                                        ; preds = %if.end81
  %18 = load i64*, i64** %8, align 8, !dbg !8389
  %bf.load90 = load i64, i64* %18, align 8, !dbg !8390
  %bf.set92 = or i64 %bf.load90, 34359738368, !dbg !8390
  store i64 %bf.set92, i64* %18, align 8, !dbg !8390
  br label %if.end93, !dbg !8389

if.end93:                                         ; preds = %if.end81, %if.then88
  %lang_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8391
  %19 = bitcast i40* %lang_flag_0 to i64*, !dbg !8391
  %bf.load94 = load i64, i64* %19, align 8, !dbg !8391
  %20 = trunc i64 %bf.load94 to i16, !dbg !8391
  %tobool98 = icmp slt i16 %20, 0, !dbg !8391
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !8392

if.then99:                                        ; preds = %if.end93
  %21 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8393
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %21, i64 0, i32 6, !dbg !8393
  %bf.load101 = load i32, i32* %lang_flag_1, align 4, !dbg !8394
  %bf.set103 = or i32 %bf.load101, 67108864, !dbg !8394
  store i32 %bf.set103, i32* %lang_flag_1, align 4, !dbg !8394
  br label %if.end104, !dbg !8393

if.end104:                                        ; preds = %if.then99, %if.end93
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !8395
  %22 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !8395
  %tobool106 = icmp eq %union.tree_node* %22, null, !dbg !8395
  br i1 %tobool106, label %if.end122, label %if.then107, !dbg !8396

if.then107:                                       ; preds = %if.end104
  %call110 = call i64 @tree_low_cst(%union.tree_node* nonnull %22, i32 1) #6, !dbg !8397
  call void @llvm.dbg.value(metadata i64 %call110, metadata !8287, metadata !DIExpression()), !dbg !8398
  %call111 = call %union.tree_node* @size_int_kind(i64 %call110, i32 2) #6, !dbg !8399
  %size113 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8400
  store %union.tree_node* %call111, %union.tree_node** %size113, align 8, !dbg !8401
  %bf.load115 = load i64, i64* %19, align 8, !dbg !8402
  %bf.set121 = or i64 %bf.load115, 34078720, !dbg !8403
  store i64 %bf.set121, i64* %19, align 8, !dbg !8403
  br label %if.end122, !dbg !8404

if.end122:                                        ; preds = %if.end104, %if.then107
  %23 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !8405
  %24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 0, i32 0, !dbg !8405
  %bf.load125 = load i64, i64* %24, align 8, !dbg !8405
  %bf.cast12822 = and i64 %bf.load125, 2199023255552, !dbg !8405
  %tobool129 = icmp eq i64 %bf.cast12822, 0, !dbg !8405
  br i1 %tobool129, label %if.end150, label %land.lhs.true130, !dbg !8406

land.lhs.true130:                                 ; preds = %if.end122
  %bf.load133 = load i64, i64* %19, align 8, !dbg !8407
  %bf.cast13626 = and i64 %bf.load133, 33554432, !dbg !8407
  %tobool137 = icmp eq i64 %bf.cast13626, 0, !dbg !8407
  br i1 %tobool137, label %lor.lhs.false138, label %if.then144, !dbg !8408

lor.lhs.false138:                                 ; preds = %land.lhs.true130
  %25 = bitcast %union.tree_node** %type31 to %struct.tree_type**, !dbg !8409
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !8409
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 7, !dbg !8409
  %27 = load i32, i32* %align, align 8, !dbg !8409
  %cmp142 = icmp ugt i32 %27, 8, !dbg !8410
  br i1 %cmp142, label %if.then144, label %if.end150, !dbg !8411

if.then144:                                       ; preds = %land.lhs.true130, %lor.lhs.false138
  %bf.load147 = load i64, i64* %15, align 8, !dbg !8412
  %bf.set149 = or i64 %bf.load147, 2199023255552, !dbg !8412
  store i64 %bf.set149, i64* %15, align 8, !dbg !8412
  br label %if.end150, !dbg !8413

if.end150:                                        ; preds = %if.end122, %if.then144, %lor.lhs.false138
  %28 = bitcast %union.tree_node** %type31 to i64**, !dbg !8414
  %29 = load i64*, i64** %28, align 8, !dbg !8414
  %bf.load154 = load i64, i64* %29, align 8, !dbg !8414
  %bf.cast15623 = and i64 %bf.load154, 65535, !dbg !8416
  %cmp157 = icmp eq i64 %bf.cast15623, 15, !dbg !8416
  %30 = bitcast i64* %29 to %union.tree_node*, !dbg !8417
  br i1 %cmp157, label %land.lhs.true159, label %if.end211, !dbg !8417

land.lhs.true159:                                 ; preds = %if.end150
  %size163 = getelementptr inbounds i64, i64* %29, i64 4, !dbg !8418
  %31 = bitcast i64* %size163 to %union.tree_node**, !dbg !8418
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !8418
  %cmp164 = icmp eq %union.tree_node* %32, null, !dbg !8419
  br i1 %cmp164, label %land.lhs.true166, label %if.end211, !dbg !8420

land.lhs.true166:                                 ; preds = %land.lhs.true159
  %values = getelementptr inbounds i64, i64* %29, i64 3, !dbg !8421
  %33 = bitcast i64* %values to %union.tree_node**, !dbg !8421
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !8421
  %cmp170 = icmp eq %union.tree_node* %34, null, !dbg !8422
  br i1 %cmp170, label %if.end211, label %land.lhs.true172, !dbg !8423

land.lhs.true172:                                 ; preds = %land.lhs.true166
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8424
  %35 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !8424
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8, !dbg !8424
  %cmp178 = icmp eq %union.tree_node* %36, null, !dbg !8425
  br i1 %cmp178, label %if.then180, label %if.end211, !dbg !8426

if.then180:                                       ; preds = %land.lhs.true172
  %37 = load i64*, i64** %8, align 8, !dbg !8427
  %bf.load182 = load i64, i64* %37, align 8, !dbg !8427
  %bf.cast18425 = and i64 %bf.load182, 65535, !dbg !8430
  %cmp185 = icmp eq i64 %bf.cast18425, 17, !dbg !8430
  br i1 %cmp185, label %if.then187, label %if.else191, !dbg !8431

if.then187:                                       ; preds = %if.then180
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8432
  %38 = load i32, i32* %locus, align 8, !dbg !8432
  call void (i32, i8*, ...) @error_at(i32 %38, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i64 0, i64 0)) #6, !dbg !8434
  %39 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !8435
  %40 = bitcast %union.tree_node** %type31 to i64*, !dbg !8436
  store i64 %39, i64* %40, align 8, !dbg !8436
  %41 = inttoptr i64 %39 to %union.tree_node*, !dbg !8437
  br label %if.end211, !dbg !8437

if.else191:                                       ; preds = %if.then180
  %chain193 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8438
  %42 = load %union.tree_node*, %union.tree_node** %chain193, align 8, !dbg !8438
  %cmp194 = icmp eq %union.tree_node* %42, null, !dbg !8440
  br i1 %cmp194, label %if.else201, label %if.then196, !dbg !8441

if.then196:                                       ; preds = %if.else191
  %locus198 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8442
  %43 = load i32, i32* %locus198, align 8, !dbg !8442
  call void (i32, i8*, ...) @error_at(i32 %43, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.99, i64 0, i64 0)) #6, !dbg !8444
  %44 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !8445
  %45 = bitcast %union.tree_node** %type31 to i64*, !dbg !8446
  store i64 %44, i64* %45, align 8, !dbg !8446
  %46 = inttoptr i64 %44 to %union.tree_node*, !dbg !8447
  br label %if.end211, !dbg !8447

if.else201:                                       ; preds = %if.else191
  %tobool202 = icmp eq i32 %saw_named_field.0, 0, !dbg !8448
  br i1 %tobool202, label %if.then203, label %if.end211, !dbg !8450

if.then203:                                       ; preds = %if.else201
  %locus205 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8451
  %47 = load i32, i32* %locus205, align 8, !dbg !8451
  call void (i32, i8*, ...) @error_at(i32 %47, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.100, i64 0, i64 0)) #6, !dbg !8453
  %48 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !8454
  %49 = bitcast %union.tree_node** %type31 to i64*, !dbg !8455
  store i64 %48, i64* %49, align 8, !dbg !8455
  %50 = inttoptr i64 %48 to %union.tree_node*, !dbg !8456
  br label %if.end211, !dbg !8456

if.end211:                                        ; preds = %if.else201, %land.lhs.true166, %if.then187, %if.then203, %if.then196, %land.lhs.true172, %land.lhs.true159, %if.end150
  %51 = phi %union.tree_node* [ %30, %if.else201 ], [ %30, %land.lhs.true166 ], [ %41, %if.then187 ], [ %50, %if.then203 ], [ %46, %if.then196 ], [ %30, %land.lhs.true172 ], [ %30, %land.lhs.true159 ], [ %30, %if.end150 ]
  %52 = load i32, i32* @pedantic, align 4, !dbg !8457
  %tobool212 = icmp eq i32 %52, 0, !dbg !8457
  br i1 %tobool212, label %if.end230, label %land.lhs.true213, !dbg !8459

land.lhs.true213:                                 ; preds = %if.end211
  %53 = load i64*, i64** %8, align 8, !dbg !8460
  %bf.load215 = load i64, i64* %53, align 8, !dbg !8460
  %bf.cast21724 = and i64 %bf.load215, 65535, !dbg !8461
  %cmp218 = icmp eq i64 %bf.cast21724, 16, !dbg !8461
  br i1 %cmp218, label %land.lhs.true220, label %if.end230, !dbg !8462

land.lhs.true220:                                 ; preds = %land.lhs.true213
  %call223 = call fastcc zeroext i8 @flexible_array_type_p(%union.tree_node* %51) #7, !dbg !8463
  %tobool225 = icmp eq i8 %call223, 0, !dbg !8463
  br i1 %tobool225, label %if.end230, label %if.then226, !dbg !8464

if.then226:                                       ; preds = %land.lhs.true220
  %locus228 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8465
  %54 = load i32, i32* %locus228, align 8, !dbg !8465
  %call229 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %54, i32 834, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.101, i64 0, i64 0)) #6, !dbg !8466
  br label %if.end230, !dbg !8466

if.end230:                                        ; preds = %land.lhs.true220, %if.end211, %if.then226, %land.lhs.true213
  %name232 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8467
  %55 = load %union.tree_node*, %union.tree_node** %name232, align 8, !dbg !8467
  %tobool233 = icmp eq %union.tree_node* %55, null, !dbg !8467
  %spec.select = select i1 %tobool233, i32 %saw_named_field.0, i32 1, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8280, metadata !DIExpression()), !dbg !8307
  br label %for.inc236, !dbg !8470

for.inc236:                                       ; preds = %for.body29, %if.end230
  %saw_named_field.2 = phi i32 [ %spec.select, %if.end230 ], [ %saw_named_field.0, %for.body29 ], !dbg !8307
  call void @llvm.dbg.value(metadata i32 %saw_named_field.2, metadata !8280, metadata !DIExpression()), !dbg !8307
  %chain238 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8471
  %x.1.pre = load %union.tree_node*, %union.tree_node** %chain238, align 8, !dbg !8356
  br label %for.cond27, !dbg !8472, !llvm.loop !8473

for.end239:                                       ; preds = %for.cond27
  %56 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8, !dbg !8475
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !8275, metadata !DIExpression()), !dbg !8307
  call fastcc void @detect_field_duplicates(%union.tree_node* %56) #7, !dbg !8476
  %.cast = ptrtoint %union.tree_node* %56 to i64, !dbg !8477
  %57 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8478
  %values241 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %57, i64 0, i32 1, !dbg !8478
  %58 = bitcast %union.tree_node** %values241 to i64*, !dbg !8479
  store i64 %.cast, i64* %58, align 8, !dbg !8479
  %.cast6 = bitcast %struct.tree_type* %57 to %union.tree_node*, !dbg !8480
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast6, metadata !8274, metadata !DIExpression()), !dbg !8307
  call void @layout_type(%union.tree_node* %.cast6) #6, !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node** %fieldlist.addr, metadata !8290, metadata !DIExpression()), !dbg !8482
  br label %while.cond242, !dbg !8483

while.cond242:                                    ; preds = %if.end311, %for.end239
  %59 = phi %union.tree_node* [ %56, %for.end239 ], [ %.pre, %if.end311 ], !dbg !8484
  %fieldlistp.0 = phi %union.tree_node** [ %fieldlist.addr, %for.end239 ], [ %fieldlistp.1, %if.end311 ], !dbg !8485
  call void @llvm.dbg.value(metadata %union.tree_node** %fieldlistp.0, metadata !8290, metadata !DIExpression()), !dbg !8482
  %tobool243 = icmp eq %union.tree_node* %59, null, !dbg !8483
  br i1 %tobool243, label %while.end312, label %while.body244, !dbg !8483

while.body244:                                    ; preds = %while.cond242
  %60 = bitcast %union.tree_node** %fieldlistp.0 to i64**, !dbg !8486
  %61 = load i64*, i64** %60, align 8, !dbg !8486
  %bf.load246 = load i64, i64* %61, align 8, !dbg !8486
  %bf.cast24814 = and i64 %bf.load246, 65535, !dbg !8487
  %cmp249 = icmp eq i64 %bf.cast24814, 31, !dbg !8487
  br i1 %cmp249, label %land.lhs.true251, label %if.else308, !dbg !8488

land.lhs.true251:                                 ; preds = %while.body244
  %62 = bitcast %union.tree_node** %fieldlistp.0 to %struct.tree_decl_common**, !dbg !8489
  %initial253 = getelementptr inbounds i64, i64* %61, i64 10, !dbg !8489
  %63 = bitcast i64* %initial253 to %union.tree_node**, !dbg !8489
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !8489
  %tobool254 = icmp eq %union.tree_node* %64, null, !dbg !8489
  br i1 %tobool254, label %if.else308, label %land.lhs.true255, !dbg !8490

land.lhs.true255:                                 ; preds = %land.lhs.true251
  %65 = bitcast %union.tree_node** %fieldlistp.0 to %struct.tree_common**, !dbg !8491
  %type257 = getelementptr inbounds i64, i64* %61, i64 2, !dbg !8491
  %66 = bitcast i64* %type257 to %union.tree_node**, !dbg !8491
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8, !dbg !8491
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8492
  %cmp258 = icmp eq %union.tree_node* %67, %68, !dbg !8493
  br i1 %cmp258, label %if.else308, label %if.then260, !dbg !8494

if.then260:                                       ; preds = %land.lhs.true255
  %call264 = call i64 @tree_low_cst(%union.tree_node* nonnull %64, i32 1) #6, !dbg !8495
  call void @llvm.dbg.value(metadata i64 %call264, metadata !8292, metadata !DIExpression()), !dbg !8496
  %69 = load %struct.tree_common*, %struct.tree_common** %65, align 8, !dbg !8497
  %type267 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %69, i64 0, i32 2, !dbg !8497
  %70 = load %union.tree_node*, %union.tree_node** %type267, align 8, !dbg !8497
  call void @llvm.dbg.value(metadata %union.tree_node* %70, metadata !8295, metadata !DIExpression()), !dbg !8496
  %type268 = bitcast %union.tree_node* %70 to %struct.tree_type*, !dbg !8498
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type268, i64 0, i32 6, !dbg !8498
  %bf.load269 = load i32, i32* %precision, align 4, !dbg !8498
  %bf.clear270 = and i32 %bf.load269, 1023, !dbg !8498
  %conv271 = zext i32 %bf.clear270 to i64, !dbg !8498
  %cmp272 = icmp eq i64 %call264, %conv271, !dbg !8500
  %71 = bitcast %struct.tree_common* %69 to %struct.tree_decl_common*, !dbg !8501
  br i1 %cmp272, label %if.end305, label %if.then274, !dbg !8501

if.then274:                                       ; preds = %if.then260
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8502
  %bf.load276 = load i64, i64* %72, align 8, !dbg !8502
  %bf.lshr277 = lshr i64 %bf.load276, 21, !dbg !8502
  %73 = trunc i64 %bf.lshr277 to i32, !dbg !8502
  %bf.cast279 = and i32 %73, 1, !dbg !8502
  %call280 = call %union.tree_node* @c_build_bitfield_integer_type(i64 %call264, i32 %bf.cast279) #6, !dbg !8504
  %74 = load %struct.tree_common*, %struct.tree_common** %65, align 8, !dbg !8505
  %type282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %74, i64 0, i32 2, !dbg !8505
  store %union.tree_node* %call280, %union.tree_node** %type282, align 8, !dbg !8506
  %75 = load %struct.tree_common*, %struct.tree_common** %65, align 8, !dbg !8507
  %type284 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %75, i64 0, i32 2, !dbg !8507
  %76 = bitcast %union.tree_node** %type284 to i64**, !dbg !8507
  %77 = load i64*, i64** %76, align 8, !dbg !8507
  %bf.load286 = load i64, i64* %77, align 8, !dbg !8507
  %bf.cast28815 = and i64 %bf.load286, 65535, !dbg !8507
  %cmp289 = icmp eq i64 %bf.cast28815, 14, !dbg !8507
  br i1 %cmp289, label %cond.true, label %cond.false, !dbg !8507

cond.true:                                        ; preds = %if.then274
  %78 = bitcast i64* %77 to %union.tree_node*, !dbg !8507
  %call293 = call i32 @vector_type_mode(%union.tree_node* %78) #6, !dbg !8507
  %.pre33 = load %struct.tree_decl_common*, %struct.tree_decl_common** %62, align 8, !dbg !8508
  br label %cond.end, !dbg !8507

cond.false:                                       ; preds = %if.then274
  %79 = bitcast %struct.tree_common* %75 to %struct.tree_decl_common*, !dbg !8507
  %type296 = bitcast i64* %77 to %struct.tree_type*, !dbg !8507
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type296, i64 0, i32 6, !dbg !8507
  %bf.load297 = load i32, i32* %mode, align 4, !dbg !8507
  %bf.lshr298 = lshr i32 %bf.load297, 16, !dbg !8507
  %bf.clear299 = and i32 %bf.lshr298, 255, !dbg !8507
  br label %cond.end, !dbg !8507

cond.end:                                         ; preds = %cond.false, %cond.true
  %80 = phi %struct.tree_decl_common* [ %.pre33, %cond.true ], [ %79, %cond.false ], !dbg !8508
  %cond = phi i32 [ %call293, %cond.true ], [ %bf.clear299, %cond.false ], !dbg !8507
  %mode301 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %80, i64 0, i32 2, !dbg !8508
  %81 = bitcast i40* %mode301 to i64*, !dbg !8508
  %bf.load302 = load i64, i64* %81, align 8, !dbg !8509
  %82 = and i32 %cond, 255, !dbg !8509
  %bf.value = zext i32 %82 to i64, !dbg !8509
  %bf.clear303 = and i64 %bf.load302, -256, !dbg !8509
  %bf.set304 = or i64 %bf.clear303, %bf.value, !dbg !8509
  store i64 %bf.set304, i64* %81, align 8, !dbg !8509
  %.pre34 = load %struct.tree_decl_common*, %struct.tree_decl_common** %62, align 8, !dbg !8510
  br label %if.end305, !dbg !8511

if.end305:                                        ; preds = %if.then260, %cond.end
  %83 = phi %struct.tree_decl_common* [ %71, %if.then260 ], [ %.pre34, %cond.end ], !dbg !8510
  %initial307 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %83, i64 0, i32 5, !dbg !8510
  store %union.tree_node* null, %union.tree_node** %initial307, align 8, !dbg !8512
  br label %if.end311, !dbg !8513

if.else308:                                       ; preds = %land.lhs.true255, %land.lhs.true251, %while.body244
  %chain310 = getelementptr inbounds i64, i64* %61, i64 1, !dbg !8514
  %84 = bitcast i64* %chain310 to %union.tree_node**, !dbg !8514
  call void @llvm.dbg.value(metadata %union.tree_node** %84, metadata !8290, metadata !DIExpression()), !dbg !8482
  br label %if.end311

if.end311:                                        ; preds = %if.else308, %if.end305
  %fieldlistp.1 = phi %union.tree_node** [ %fieldlistp.0, %if.end305 ], [ %84, %if.else308 ], !dbg !8482
  call void @llvm.dbg.value(metadata %union.tree_node** %fieldlistp.1, metadata !8290, metadata !DIExpression()), !dbg !8482
  %.pre = load %union.tree_node*, %union.tree_node** %fieldlistp.1, align 8, !dbg !8484
  br label %while.cond242, !dbg !8483, !llvm.loop !8515

while.end312:                                     ; preds = %while.cond242
  %85 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8517
  %values314 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %85, i64 0, i32 1, !dbg !8517
  %86 = bitcast %union.tree_node** %values314 to i64*, !dbg !8518
  store i64 %.cast, i64* %86, align 8, !dbg !8518
  call void @llvm.dbg.value(metadata i32 0, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !8275, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !8278, metadata !DIExpression()), !dbg !8307
  br label %for.cond315, !dbg !8520

for.cond315:                                      ; preds = %if.end326, %while.end312
  %x.2 = phi %union.tree_node* [ %56, %while.end312 ], [ %88, %if.end326 ], !dbg !8522
  %len.0 = phi i32 [ 0, %while.end312 ], [ %add, %if.end326 ], !dbg !8519
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2, metadata !8278, metadata !DIExpression()), !dbg !8307
  %tobool316 = icmp eq %union.tree_node* %x.2, null, !dbg !8523
  %cmp318 = icmp ugt i32 %len.0, 15, !dbg !8524
  %or.cond5 = or i1 %tobool316, %cmp318, !dbg !8523
  br i1 %or.cond5, label %for.end330, label %lor.lhs.false320, !dbg !8523

lor.lhs.false320:                                 ; preds = %for.cond315
  %name322 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8528
  %87 = load %union.tree_node*, %union.tree_node** %name322, align 8, !dbg !8528
  %cmp323 = icmp eq %union.tree_node* %87, null, !dbg !8529
  br i1 %cmp323, label %for.end330, label %if.end326, !dbg !8530

if.end326:                                        ; preds = %lor.lhs.false320
  %add = add nuw nsw i32 %len.0, 1, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %add, metadata !8296, metadata !DIExpression()), !dbg !8519
  %chain329 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8532
  %88 = load %union.tree_node*, %union.tree_node** %chain329, align 8, !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* %88, metadata !8278, metadata !DIExpression()), !dbg !8307
  br label %for.cond315, !dbg !8533, !llvm.loop !8534

for.end330:                                       ; preds = %for.cond315, %lor.lhs.false320
  %x.2.lcssa = phi %union.tree_node* [ %x.2, %for.cond315 ], [ %x.2, %lor.lhs.false320 ], !dbg !8522
  %len.0.lcssa = phi i32 [ %len.0, %for.cond315 ], [ %len.0, %lor.lhs.false320 ], !dbg !8519
  %cmp318.lcssa = phi i1 [ %cmp318, %for.cond315 ], [ %cmp318, %lor.lhs.false320 ], !dbg !8524
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2.lcssa, metadata !8278, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !8296, metadata !DIExpression()), !dbg !8519
  br i1 %cmp318.lcssa, label %if.then333, label %if.end368, !dbg !8536

if.then333:                                       ; preds = %for.end330
  %call334 = call i32 @list_length(%union.tree_node* %x.2.lcssa) #6, !dbg !8537
  %add335 = add nsw i32 %len.0.lcssa, %call334, !dbg !8538
  call void @llvm.dbg.value(metadata i32 %add335, metadata !8296, metadata !DIExpression()), !dbg !8519
  %call336 = call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !8539
  call void @llvm.dbg.value(metadata i8* %call336, metadata !8301, metadata !DIExpression()), !dbg !8540
  %conv337 = sext i32 %add335 to i64, !dbg !8541
  %mul = shl nsw i64 %conv337, 3, !dbg !8541
  %add338 = add nsw i64 %mul, 16, !dbg !8541
  %call339 = call i8* @ggc_alloc_stat(i64 %add338) #6, !dbg !8541
  call void @llvm.dbg.value(metadata i8* %call339, metadata !8302, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata i32 0, metadata !8296, metadata !DIExpression()), !dbg !8519
  %89 = bitcast i8* %call336 to i8**, !dbg !8542
  store i8* %call339, i8** %89, align 8, !dbg !8542
  %elts = getelementptr inbounds i8, i8* %call339, i64 8, !dbg !8543
  %arrayidx = bitcast i8* %elts to %union.tree_node**, !dbg !8544
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !8298, metadata !DIExpression()), !dbg !8540
  br label %for.cond340, !dbg !8545

for.cond340:                                      ; preds = %for.inc350, %if.then333
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc350 ], [ 0, %if.then333 ], !dbg !8547
  %x.3 = phi %union.tree_node* [ %x.3.pre, %for.inc350 ], [ %56, %if.then333 ], !dbg !8547
  %len.1 = phi i32 [ %inc, %for.inc350 ], [ 0, %if.then333 ], !dbg !8540
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8296, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %x.3, metadata !8278, metadata !DIExpression()), !dbg !8307
  %tobool341 = icmp eq %union.tree_node* %x.3, null, !dbg !8548
  %90 = trunc i64 %indvars.iv to i32, !dbg !8548
  br i1 %tobool341, label %for.end353, label %for.body342, !dbg !8548

for.body342:                                      ; preds = %for.cond340
  %inc = add nuw nsw i32 %len.1, 1, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8296, metadata !DIExpression()), !dbg !8519
  %arrayidx343 = getelementptr inbounds %union.tree_node*, %union.tree_node** %arrayidx, i64 %indvars.iv, !dbg !8552
  store %union.tree_node* %x.3, %union.tree_node** %arrayidx343, align 8, !dbg !8553
  %name345 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8554
  %91 = load %union.tree_node*, %union.tree_node** %name345, align 8, !dbg !8554
  %cmp346 = icmp eq %union.tree_node* %91, null, !dbg !8556
  br i1 %cmp346, label %for.end353, label %for.inc350, !dbg !8557

for.inc350:                                       ; preds = %for.body342
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !8549
  %chain352 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8558
  %x.3.pre = load %union.tree_node*, %union.tree_node** %chain352, align 8, !dbg !8547
  br label %for.cond340, !dbg !8559, !llvm.loop !8560

for.end353:                                       ; preds = %for.cond340, %for.body342
  %tobool341.lcssa = phi i1 [ %tobool341, %for.cond340 ], [ %tobool341, %for.body342 ], !dbg !8548
  %len.2 = phi i32 [ %90, %for.cond340 ], [ %inc, %for.body342 ], !dbg !8540
  call void @llvm.dbg.value(metadata i32 %len.2, metadata !8296, metadata !DIExpression()), !dbg !8519
  br i1 %tobool341.lcssa, label %if.then356, label %if.end368, !dbg !8562

if.then356:                                       ; preds = %for.end353
  %92 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8563
  %lang_specific = getelementptr inbounds %struct.tree_type, %struct.tree_type* %92, i64 0, i32 20, !dbg !8563
  %93 = bitcast %struct.lang_type** %lang_specific to i8**, !dbg !8566
  store i8* %call336, i8** %93, align 8, !dbg !8566
  %s360 = bitcast i8* %call336 to %struct.sorted_fields_type**, !dbg !8567
  %94 = load %struct.sorted_fields_type*, %struct.sorted_fields_type** %s360, align 8, !dbg !8567
  %len361 = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %94, i64 0, i32 0, !dbg !8568
  store i32 %len.2, i32* %len361, align 8, !dbg !8569
  %95 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8570
  %lang_specific363 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %95, i64 0, i32 20, !dbg !8570
  %96 = load %struct.lang_type*, %struct.lang_type** %lang_specific363, align 8, !dbg !8570
  %s364 = getelementptr inbounds %struct.lang_type, %struct.lang_type* %96, i64 0, i32 0, !dbg !8571
  %97 = load %struct.sorted_fields_type*, %struct.sorted_fields_type** %s364, align 8, !dbg !8571
  %arraydecay = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %97, i64 0, i32 1, i64 0, !dbg !8570
  call void @llvm.dbg.value(metadata %union.tree_node** %arraydecay, metadata !8298, metadata !DIExpression()), !dbg !8540
  %98 = bitcast %union.tree_node** %arraydecay to i8*, !dbg !8572
  %conv366 = sext i32 %len.2 to i64, !dbg !8573
  call void @spec_qsort(i8* nonnull %98, i64 %conv366, i64 8, i32 (i8*, i8*)* nonnull @field_decl_cmp) #6, !dbg !8574
  br label %if.end368, !dbg !8575

if.end368:                                        ; preds = %for.end353, %if.then356, %for.end330
  %99 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8576
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %99, i64 0, i32 16, !dbg !8576
  %100 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %99, i64 0, i32 0, i32 0, i32 0, !dbg !8578
  br label %for.cond370, !dbg !8578

for.cond370:                                      ; preds = %for.body372, %if.end368
  %101 = phi i64* [ %100, %if.end368 ], [ %114, %for.body372 ]
  %102 = phi i64* [ %100, %if.end368 ], [ %114, %for.body372 ]
  %103 = phi %struct.tree_type* [ %99, %if.end368 ], [ %112, %for.body372 ]
  %.in = phi %struct.tree_type* [ %99, %if.end368 ], [ %112, %for.body372 ]
  %x.4.in = phi %union.tree_node** [ %main_variant, %if.end368 ], [ %113, %for.body372 ]
  %x.4 = load %union.tree_node*, %union.tree_node** %x.4.in, align 8, !dbg !8579
  call void @llvm.dbg.value(metadata %union.tree_node* %x.4, metadata !8278, metadata !DIExpression()), !dbg !8307
  %tobool371 = icmp eq %union.tree_node* %x.4, null, !dbg !8580
  call void @llvm.dbg.value(metadata %struct.tree_type* %.in, metadata !8274, metadata !DIExpression()), !dbg !8307
  br i1 %tobool371, label %for.end418, label %for.body372, !dbg !8580

for.body372:                                      ; preds = %for.cond370
  %values374 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.in, i64 0, i32 1, !dbg !8581
  %104 = bitcast %union.tree_node** %values374 to i64*, !dbg !8581
  %105 = load i64, i64* %104, align 8, !dbg !8581
  %values376 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8584
  %106 = bitcast i32* %values376 to i64*, !dbg !8585
  store i64 %105, i64* %106, align 8, !dbg !8585
  %lang_specific378 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %103, i64 0, i32 20, !dbg !8586
  %107 = bitcast %struct.lang_type** %lang_specific378 to i64*, !dbg !8586
  %108 = load i64, i64* %107, align 8, !dbg !8586
  %lang_specific380 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.4, i64 0, i32 0, i32 0, i32 2, !dbg !8587
  %109 = bitcast %union.tree_node** %lang_specific380 to i64*, !dbg !8588
  store i64 %108, i64* %109, align 8, !dbg !8588
  %bf.load382 = load i64, i64* %102, align 8, !dbg !8589
  %bf.cast385 = and i64 %bf.load382, 17179869184, !dbg !8589
  %110 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8590
  %bf.load387 = load i64, i64* %110, align 8, !dbg !8591
  %bf.clear389 = and i64 %bf.load387, -17179869185, !dbg !8591
  %bf.set390 = or i64 %bf.clear389, %bf.cast385, !dbg !8591
  store i64 %bf.set390, i64* %110, align 8, !dbg !8591
  %111 = load i64*, i64** %8, align 8, !dbg !8592
  %bf.load393 = load i64, i64* %111, align 8, !dbg !8592
  %bf.cast396 = and i64 %bf.load393, 34359738368, !dbg !8592
  %bf.clear401 = and i64 %bf.set390, -34359738369, !dbg !8593
  %bf.set402 = or i64 %bf.clear401, %bf.cast396, !dbg !8593
  store i64 %bf.set402, i64* %110, align 8, !dbg !8593
  %112 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8594
  %lang_flag_1405 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %112, i64 0, i32 6, !dbg !8594
  %bf.load406 = load i32, i32* %lang_flag_1405, align 4, !dbg !8594
  %bf.clear408 = and i32 %bf.load406, 67108864, !dbg !8594
  %type409 = bitcast %union.tree_node* %x.4 to %struct.tree_type*, !dbg !8595
  %lang_flag_1410 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type409, i64 0, i32 6, !dbg !8595
  %bf.load411 = load i32, i32* %lang_flag_1410, align 4, !dbg !8596
  %bf.clear414 = and i32 %bf.load411, -67108865, !dbg !8596
  %bf.set415 = or i32 %bf.clear414, %bf.clear408, !dbg !8596
  store i32 %bf.set415, i32* %lang_flag_1410, align 4, !dbg !8596
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.4, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8597
  %114 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %112, i64 0, i32 0, i32 0, i32 0, !dbg !8598
  br label %for.cond370, !dbg !8598, !llvm.loop !8599

for.end418:                                       ; preds = %for.cond370
  %.lcssa41 = phi i64* [ %101, %for.cond370 ]
  %.lcssa = phi %struct.tree_type* [ %103, %for.cond370 ]
  %.in.lcssa = phi %struct.tree_type* [ %.in, %for.cond370 ]
  call void @llvm.dbg.value(metadata %struct.tree_type* %.in.lcssa, metadata !8274, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %struct.tree_type* %.in.lcssa, metadata !8274, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata %struct.tree_type* %.in.lcssa, metadata !8274, metadata !DIExpression()), !dbg !8307
  %115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.in.lcssa, i64 0, i32 0, i32 0, i32 0, !dbg !8601
  %bf.load420 = load i64, i64* %115, align 8, !dbg !8601
  %bf.cast4228 = and i64 %bf.load420, 65535, !dbg !8603
  %cmp423 = icmp eq i64 %bf.cast4228, 17, !dbg !8603
  br i1 %cmp423, label %land.lhs.true425, label %if.end467, !dbg !8604

land.lhs.true425:                                 ; preds = %for.end418
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.lcssa, i64 0, i32 6, !dbg !8605
  %bf.load427 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !8605
  %bf.clear429 = and i32 %bf.load427, 4096, !dbg !8605
  %tobool430 = icmp eq i32 %bf.clear429, 0, !dbg !8605
  br i1 %tobool430, label %if.end467, label %land.lhs.true431, !dbg !8606

land.lhs.true431:                                 ; preds = %land.lhs.true425
  %values433 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.lcssa, i64 0, i32 1, !dbg !8607
  %116 = load %union.tree_node*, %union.tree_node** %values433, align 8, !dbg !8607
  %tobool434 = icmp eq %union.tree_node* %116, null, !dbg !8607
  br i1 %tobool434, label %if.then461, label %lor.lhs.false435, !dbg !8608

lor.lhs.false435:                                 ; preds = %land.lhs.true431
  %bf.load437 = load i64, i64* %.lcssa41, align 8, !dbg !8609
  %bf.cast43911 = and i64 %bf.load437, 65535, !dbg !8609
  %cmp440 = icmp eq i64 %bf.cast43911, 14, !dbg !8609
  call void @llvm.dbg.value(metadata i64* %.lcssa41, metadata !8274, metadata !DIExpression()), !dbg !8307
  br i1 %cmp440, label %cond.true442, label %cond.false444, !dbg !8609

cond.true442:                                     ; preds = %lor.lhs.false435
  %.cast12 = bitcast i64* %.lcssa41 to %union.tree_node*, !dbg !8609
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast12, metadata !8274, metadata !DIExpression()), !dbg !8307
  %call443 = call i32 @vector_type_mode(%union.tree_node* %.cast12) #6, !dbg !8609
  %.pre36 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8610
  br label %cond.end450, !dbg !8609

cond.false444:                                    ; preds = %lor.lhs.false435
  %type445 = bitcast i64* %.lcssa41 to %struct.tree_type*, !dbg !8609
  %mode446 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type445, i64 0, i32 6, !dbg !8609
  %bf.load447 = load i32, i32* %mode446, align 4, !dbg !8609
  %bf.lshr448 = lshr i32 %bf.load447, 16, !dbg !8609
  %bf.clear449 = and i32 %bf.lshr448, 255, !dbg !8609
  br label %cond.end450, !dbg !8609

cond.end450:                                      ; preds = %cond.false444, %cond.true442
  %117 = phi %struct.tree_type* [ %.pre36, %cond.true442 ], [ %.lcssa, %cond.false444 ], !dbg !8610
  %cond451 = phi i32 [ %call443, %cond.true442 ], [ %bf.clear449, %cond.false444 ], !dbg !8609
  %values453 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %117, i64 0, i32 1, !dbg !8610
  %118 = bitcast %union.tree_node** %values453 to %struct.tree_decl_common**, !dbg !8610
  %119 = load %struct.tree_decl_common*, %struct.tree_decl_common** %118, align 8, !dbg !8610
  %mode455 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %119, i64 0, i32 2, !dbg !8610
  %120 = bitcast i40* %mode455 to i64*, !dbg !8610
  %bf.load456 = load i64, i64* %120, align 8, !dbg !8610
  %121 = trunc i64 %bf.load456 to i32, !dbg !8610
  %bf.cast458 = and i32 %121, 255, !dbg !8610
  %cmp459 = icmp eq i32 %cond451, %bf.cast458, !dbg !8611
  br i1 %cmp459, label %if.end467, label %cond.end450.if.then461_crit_edge, !dbg !8612

cond.end450.if.then461_crit_edge:                 ; preds = %cond.end450
  %transparent_aggr_flag463.phi.trans.insert = getelementptr inbounds %struct.tree_type, %struct.tree_type* %117, i64 0, i32 6, !dbg !8613
  %bf.load464.pre = load i32, i32* %transparent_aggr_flag463.phi.trans.insert, align 4, !dbg !8615
  br label %if.then461, !dbg !8612

if.then461:                                       ; preds = %cond.end450.if.then461_crit_edge, %land.lhs.true431
  %bf.load464 = phi i32 [ %bf.load464.pre, %cond.end450.if.then461_crit_edge ], [ %bf.load427, %land.lhs.true431 ], !dbg !8615
  %122 = phi %struct.tree_type* [ %117, %cond.end450.if.then461_crit_edge ], [ %.lcssa, %land.lhs.true431 ], !dbg !8616
  %transparent_aggr_flag463 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %122, i64 0, i32 6, !dbg !8616
  %bf.clear465 = and i32 %bf.load464, -4097, !dbg !8615
  store i32 %bf.clear465, i32* %transparent_aggr_flag463, align 4, !dbg !8615
  %call466 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.102, i64 0, i64 0)) #6, !dbg !8617
  %.pre38 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8618
  br label %if.end467, !dbg !8619

if.end467:                                        ; preds = %cond.end450, %land.lhs.true425, %if.then461, %for.end418
  %123 = phi %struct.tree_type* [ %117, %cond.end450 ], [ %.lcssa, %land.lhs.true425 ], [ %.pre38, %if.then461 ], [ %.lcssa, %for.end418 ], !dbg !8618
  %main_variant469 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %123, i64 0, i32 16, !dbg !8618
  %124 = bitcast %union.tree_node** %main_variant469 to %struct.tree_type**, !dbg !8618
  %125 = load %struct.tree_type*, %struct.tree_type** %124, align 8, !dbg !8618
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %125, i64 0, i32 13, !dbg !8618
  %conv497 = zext i1 %cmp to i32, !dbg !8620
  br i1 %cmp, label %if.end467.split.us, label %if.end467.if.end467.split_crit_edge, !dbg !8623

if.end467.if.end467.split_crit_edge:              ; preds = %if.end467
  br label %for.cond471, !dbg !8623

if.end467.split.us:                               ; preds = %if.end467
  br label %for.cond471.us, !dbg !8623

for.cond471.us:                                   ; preds = %for.inc502.us, %if.end467.split.us
  %x.5.in.us = phi %union.tree_node** [ %minval, %if.end467.split.us ], [ %chain504.us, %for.inc502.us ]
  %x.5.us = load %union.tree_node*, %union.tree_node** %x.5.in.us, align 8, !dbg !8624
  call void @llvm.dbg.value(metadata %union.tree_node* %x.5.us, metadata !8278, metadata !DIExpression()), !dbg !8307
  %tobool472.us = icmp eq %union.tree_node* %x.5.us, null, !dbg !8625
  br i1 %tobool472.us, label %for.end505.us-lcssa.us, label %for.body473.us, !dbg !8625

for.body473.us:                                   ; preds = %for.cond471.us
  %126 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.5.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8626
  %127 = load %union.tree_node*, %union.tree_node** %126, align 8, !dbg !8626
  call void @llvm.dbg.value(metadata %union.tree_node* %127, metadata !8303, metadata !DIExpression()), !dbg !8627
  %type475.us = getelementptr inbounds %union.tree_node, %union.tree_node* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8628
  %128 = bitcast %union.tree_node** %type475.us to i64**, !dbg !8628
  %129 = load i64*, i64** %128, align 8, !dbg !8628
  %bf.load477.us = load i64, i64* %129, align 8, !dbg !8628
  %bf.cast4799.us = and i64 %bf.load477.us, 65535, !dbg !8630
  %cmp480.us = icmp eq i64 %bf.cast4799.us, 15, !dbg !8630
  br i1 %cmp480.us, label %if.then482.us, label %if.end485.us, !dbg !8631

if.then482.us:                                    ; preds = %for.body473.us
  %130 = bitcast i64* %129 to %union.tree_node*, !dbg !8631
  call fastcc void @layout_array_type(%union.tree_node* %130) #7, !dbg !8632
  br label %if.end485.us, !dbg !8632

if.end485.us:                                     ; preds = %if.then482.us, %for.body473.us
  %131 = getelementptr inbounds %union.tree_node, %union.tree_node* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8633
  %bf.load487.us = load i64, i64* %131, align 8, !dbg !8633
  %bf.cast48910.us = and i64 %bf.load487.us, 65535, !dbg !8634
  %cmp490.us = icmp eq i64 %bf.cast48910.us, 35, !dbg !8634
  br i1 %cmp490.us, label %for.inc502.us, label %if.then492.us, !dbg !8635

if.then492.us:                                    ; preds = %if.end485.us
  call void @layout_decl(%union.tree_node* %127, i32 0) #6, !dbg !8636
  %132 = load i32, i32* @c_language, align 4, !dbg !8637
  %and.us = and i32 %132, 1, !dbg !8637
  %cmp493.us = icmp eq i32 %and.us, 0, !dbg !8637
  br i1 %cmp493.us, label %if.end496.us, label %if.then495.us, !dbg !8639

if.then495.us:                                    ; preds = %if.then492.us
  call void @objc_check_decl(%union.tree_node* %127) #6, !dbg !8640
  br label %if.end496.us, !dbg !8640

if.end496.us:                                     ; preds = %if.then495.us, %if.then492.us
  call void @rest_of_decl_compilation(%union.tree_node* %127, i32 %conv497, i32 0) #6, !dbg !8641
  br label %for.inc502.us, !dbg !8642

for.inc502.us:                                    ; preds = %if.end496.us, %if.end485.us
  %chain504.us = getelementptr inbounds %union.tree_node, %union.tree_node* %x.5.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8643
  br label %for.cond471.us, !dbg !8644, !llvm.loop !8645

for.end505.us-lcssa.us:                           ; preds = %for.cond471.us
  br label %for.end505, !dbg !8647

for.cond471:                                      ; preds = %for.inc502, %if.end467.if.end467.split_crit_edge
  %x.5.in = phi %union.tree_node** [ %minval, %if.end467.if.end467.split_crit_edge ], [ %chain504, %for.inc502 ]
  %x.5 = load %union.tree_node*, %union.tree_node** %x.5.in, align 8, !dbg !8624
  call void @llvm.dbg.value(metadata %union.tree_node* %x.5, metadata !8278, metadata !DIExpression()), !dbg !8307
  %tobool472 = icmp eq %union.tree_node* %x.5, null, !dbg !8625
  br i1 %tobool472, label %for.end505.us-lcssa, label %for.body473, !dbg !8625

for.body473:                                      ; preds = %for.cond471
  %133 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8626
  %134 = load %union.tree_node*, %union.tree_node** %133, align 8, !dbg !8626
  call void @llvm.dbg.value(metadata %union.tree_node* %134, metadata !8303, metadata !DIExpression()), !dbg !8627
  %type475 = getelementptr inbounds %union.tree_node, %union.tree_node* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8628
  %135 = bitcast %union.tree_node** %type475 to i64**, !dbg !8628
  %136 = load i64*, i64** %135, align 8, !dbg !8628
  %bf.load477 = load i64, i64* %136, align 8, !dbg !8628
  %bf.cast4799 = and i64 %bf.load477, 65535, !dbg !8630
  %cmp480 = icmp eq i64 %bf.cast4799, 15, !dbg !8630
  br i1 %cmp480, label %if.then482, label %if.end485, !dbg !8631

if.then482:                                       ; preds = %for.body473
  %137 = bitcast i64* %136 to %union.tree_node*, !dbg !8631
  call fastcc void @layout_array_type(%union.tree_node* %137) #7, !dbg !8632
  br label %if.end485, !dbg !8632

if.end485:                                        ; preds = %if.then482, %for.body473
  %138 = getelementptr inbounds %union.tree_node, %union.tree_node* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8633
  %bf.load487 = load i64, i64* %138, align 8, !dbg !8633
  %bf.cast48910 = and i64 %bf.load487, 65535, !dbg !8634
  %cmp490 = icmp eq i64 %bf.cast48910, 35, !dbg !8634
  br i1 %cmp490, label %for.inc502, label %if.then492, !dbg !8635

if.then492:                                       ; preds = %if.end485
  call void @layout_decl(%union.tree_node* %134, i32 0) #6, !dbg !8636
  %139 = load i32, i32* @c_language, align 4, !dbg !8637
  %and = and i32 %139, 1, !dbg !8637
  %cmp493 = icmp eq i32 %and, 0, !dbg !8637
  br i1 %cmp493, label %if.end496, label %if.then495, !dbg !8639

if.then495:                                       ; preds = %if.then492
  call void @objc_check_decl(%union.tree_node* %134) #6, !dbg !8640
  br label %if.end496, !dbg !8640

if.end496:                                        ; preds = %if.then492, %if.then495
  call void @rest_of_decl_compilation(%union.tree_node* %134, i32 %conv497, i32 0) #6, !dbg !8641
  call void @expand_decl(%union.tree_node* %134) #6, !dbg !8648
  br label %for.inc502, !dbg !8648

for.inc502:                                       ; preds = %if.end485, %if.end496
  %chain504 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8643
  br label %for.cond471, !dbg !8644, !llvm.loop !8645

for.end505.us-lcssa:                              ; preds = %for.cond471
  br label %for.end505, !dbg !8647

for.end505:                                       ; preds = %for.end505.us-lcssa.us, %for.end505.us-lcssa
  %140 = load %struct.tree_type*, %struct.tree_type** %9, align 8, !dbg !8647
  %main_variant507 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %140, i64 0, i32 16, !dbg !8647
  %141 = bitcast %union.tree_node** %main_variant507 to %struct.tree_type**, !dbg !8647
  %142 = load %struct.tree_type*, %struct.tree_type** %141, align 8, !dbg !8647
  %minval509 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %142, i64 0, i32 13, !dbg !8647
  store %union.tree_node* null, %union.tree_node** %minval509, align 8, !dbg !8650
  %chain511 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %140, i64 0, i32 0, i32 1, !dbg !8651
  %143 = load %union.tree_node*, %union.tree_node** %chain511, align 8, !dbg !8651
  %tobool512 = icmp eq %union.tree_node* %143, null, !dbg !8651
  %144 = bitcast %struct.tree_type* %140 to %union.tree_node*, !dbg !8653
  br i1 %tobool512, label %if.end518, label %if.then513, !dbg !8653

if.then513:                                       ; preds = %for.end505
  %locus517 = getelementptr inbounds %union.tree_node, %union.tree_node* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8654
  store i32 %loc, i32* %locus517, align 8, !dbg !8655
  br label %if.end518, !dbg !8654

if.end518:                                        ; preds = %for.end505, %if.then513
  call void @llvm.dbg.value(metadata %union.tree_node* %144, metadata !8274, metadata !DIExpression()), !dbg !8307
  call void @rest_of_type_compilation(%union.tree_node* %144, i32 %conv497) #6, !dbg !8656
  %call520 = call %struct.stmt_tree_s* @current_stmt_tree() #7, !dbg !8657
  %145 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.stmt_tree_s, %struct.stmt_tree_s* @c_stmt_tree, i64 0, i32 0), align 8, !dbg !8657
  %tobool521 = icmp eq %union.tree_node* %145, null, !dbg !8657
  br i1 %tobool521, label %if.end530, label %land.lhs.true522, !dbg !8659

land.lhs.true522:                                 ; preds = %if.end518
  %146 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !8660
  call void @llvm.dbg.value(metadata %union.tree_node* %146, metadata !8274, metadata !DIExpression()), !dbg !8307
  %call523 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %146, %union.tree_node* null) #6, !dbg !8661
  %tobool525 = icmp eq i8 %call523, 0, !dbg !8661
  br i1 %tobool525, label %if.end530, label %if.then526, !dbg !8662

if.then526:                                       ; preds = %land.lhs.true522
  %147 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !8663
  call void @llvm.dbg.value(metadata %union.tree_node* %147, metadata !8274, metadata !DIExpression()), !dbg !8307
  %call527 = call %union.tree_node* @build_decl_stat(i32 %loc, i32 35, %union.tree_node* null, %union.tree_node* %147) #6, !dbg !8663
  %call528 = call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %loc, i32 132, %union.tree_node* %call527) #6, !dbg !8664
  %call529 = call %union.tree_node* @add_stmt(%union.tree_node* %call528) #7, !dbg !8665
  br label %if.end530, !dbg !8665

if.end530:                                        ; preds = %land.lhs.true522, %if.end518, %if.then526
  %148 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8666
  %tobool531 = icmp eq i32 %148, 0, !dbg !8666
  br i1 %tobool531, label %if.end533, label %if.then532, !dbg !8668

if.then532:                                       ; preds = %if.end530
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !8275, metadata !DIExpression()), !dbg !8307
  call fastcc void @warn_cxx_compat_finish_struct(%union.tree_node* %56) #7, !dbg !8669
  br label %if.end533, !dbg !8669

if.end533:                                        ; preds = %if.end530, %if.then532
  %149 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8670
  %struct_types = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %149, i64 0, i32 0, !dbg !8670
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %struct_types) #7, !dbg !8670
  %150 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8671
  %fields = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %150, i64 0, i32 1, !dbg !8671
  call fastcc void @VEC_c_binding_ptr_heap_free(%struct.VEC_c_binding_ptr_heap** nonnull %fields) #7, !dbg !8671
  %151 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8672
  %typedefs_seen = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %151, i64 0, i32 2, !dbg !8672
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %typedefs_seen) #7, !dbg !8672
  %152 = load i8*, i8** bitcast (%struct.c_struct_parse_info** @struct_parse_info to i8**), align 8, !dbg !8673
  call void @free(i8* %152) #6, !dbg !8673
  store %struct.c_struct_parse_info* %enclosing_struct_parse_info, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8674
  %153 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8675
  %tobool534 = icmp eq i32 %153, 0, !dbg !8675
  %cmp536 = icmp eq %struct.c_struct_parse_info* %enclosing_struct_parse_info, null, !dbg !8677
  %or.cond.not = or i1 %cmp536, %tobool534, !dbg !8678
  %154 = load i32, i32* @in_sizeof, align 4, !dbg !8679
  %155 = load i32, i32* @in_typeof, align 4, !dbg !8680
  %156 = or i32 %154, %155, !dbg !8678
  %157 = load i32, i32* @in_alignof, align 4, !dbg !8681
  %158 = or i32 %156, %157, !dbg !8678
  %159 = icmp ne i32 %158, 0, !dbg !8678
  %160 = or i1 %159, %or.cond.not, !dbg !8678
  br i1 %160, label %if.end547, label %if.then544, !dbg !8678

if.then544:                                       ; preds = %if.end533
  %struct_types545 = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %enclosing_struct_parse_info, i64 0, i32 0, !dbg !8682
  %161 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !8682
  call void @llvm.dbg.value(metadata %union.tree_node* %161, metadata !8274, metadata !DIExpression()), !dbg !8307
  %call546 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %struct_types545, %union.tree_node* %161) #7, !dbg !8682
  br label %if.end547, !dbg !8682

if.end547:                                        ; preds = %if.end533, %if.then544
  %162 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !8683
  call void @llvm.dbg.value(metadata %union.tree_node* %162, metadata !8274, metadata !DIExpression()), !dbg !8307
  ret %union.tree_node* %162, !dbg !8684
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @flexible_array_type_p(%union.tree_node* %type) unnamed_addr #5 !dbg !8685 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8687, metadata !DIExpression()), !dbg !8689
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8690
  %bf.load = load i64, i64* %0, align 8, !dbg !8690
  %1 = trunc i64 %bf.load to i16, !dbg !8690
  switch i16 %1, label %cleanup [
    i16 16, label %sw.bb
    i16 17, label %sw.bb31
  ], !dbg !8691

sw.bb:                                            ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8692
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !8692
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8692
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8688, metadata !DIExpression()), !dbg !8689
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !8694
  br i1 %cmp, label %cleanup, label %while.cond.preheader, !dbg !8696

while.cond.preheader:                             ; preds = %sw.bb
  br label %while.cond, !dbg !8697

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %x.0 = phi %union.tree_node* [ %4, %while.body ], [ %3, %while.cond.preheader ], !dbg !8698
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !8688, metadata !DIExpression()), !dbg !8689
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8699
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8699
  %cmp2 = icmp eq %union.tree_node* %4, null, !dbg !8700
  br i1 %cmp2, label %while.end, label %while.body, !dbg !8697

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8688, metadata !DIExpression()), !dbg !8689
  br label %while.cond, !dbg !8697, !llvm.loop !8701

while.end:                                        ; preds = %while.cond
  %x.0.lcssa = phi %union.tree_node* [ %x.0, %while.cond ], !dbg !8698
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !8688, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !8688, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa, metadata !8688, metadata !DIExpression()), !dbg !8689
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8703
  %5 = bitcast %union.tree_node** %type6 to i64**, !dbg !8703
  %6 = load i64*, i64** %5, align 8, !dbg !8703
  %bf.load8 = load i64, i64* %6, align 8, !dbg !8703
  %bf.cast101 = and i64 %bf.load8, 65535, !dbg !8705
  %cmp11 = icmp eq i64 %bf.cast101, 15, !dbg !8705
  br i1 %cmp11, label %land.lhs.true, label %if.end30, !dbg !8706

land.lhs.true:                                    ; preds = %while.end
  %size = getelementptr inbounds i64, i64* %6, i64 4, !dbg !8707
  %7 = bitcast i64* %size to %union.tree_node**, !dbg !8707
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !8707
  %cmp15 = icmp eq %union.tree_node* %8, null, !dbg !8708
  br i1 %cmp15, label %land.lhs.true16, label %if.end30, !dbg !8709

land.lhs.true16:                                  ; preds = %land.lhs.true
  %values20 = getelementptr inbounds i64, i64* %6, i64 3, !dbg !8710
  %9 = bitcast i64* %values20 to %union.tree_node**, !dbg !8710
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !8710
  %cmp21 = icmp eq %union.tree_node* %10, null, !dbg !8711
  br i1 %cmp21, label %if.end30, label %land.lhs.true22, !dbg !8712

land.lhs.true22:                                  ; preds = %land.lhs.true16
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8713
  %11 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !8713
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !8713
  %cmp28 = icmp eq %union.tree_node* %12, null, !dbg !8714
  br i1 %cmp28, label %cleanup, label %if.end30, !dbg !8715

if.end30:                                         ; preds = %land.lhs.true16, %land.lhs.true22, %land.lhs.true, %while.end
  br label %cleanup, !dbg !8716

sw.bb31:                                          ; preds = %entry
  %values33 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8717
  %13 = bitcast i32* %values33 to %union.tree_node**, !dbg !8717
  br label %for.cond, !dbg !8719

for.cond:                                         ; preds = %for.inc, %sw.bb31
  %x.1.in = phi %union.tree_node** [ %13, %sw.bb31 ], [ %chain40, %for.inc ]
  %x.1 = load %union.tree_node*, %union.tree_node** %x.1.in, align 8, !dbg !8720
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !8688, metadata !DIExpression()), !dbg !8689
  %cmp34 = icmp eq %union.tree_node* %x.1, null, !dbg !8721
  br i1 %cmp34, label %cleanup.loopexit, label %for.body, !dbg !8723

for.body:                                         ; preds = %for.cond
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8724
  %14 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !8724
  %call = tail call fastcc zeroext i8 @flexible_array_type_p(%union.tree_node* %14) #7, !dbg !8727
  %tobool = icmp eq i8 %call, 0, !dbg !8727
  br i1 %tobool, label %for.inc, label %cleanup.loopexit, !dbg !8728

for.inc:                                          ; preds = %for.body
  %chain40 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8729
  br label %for.cond, !dbg !8730, !llvm.loop !8731

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !8733

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %land.lhs.true22, %sw.bb, %if.end30
  %retval.0 = phi i8 [ 0, %if.end30 ], [ 0, %sw.bb ], [ 1, %land.lhs.true22 ], [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !8698
  ret i8 %retval.0, !dbg !8733
}

; Function Attrs: nounwind uwtable
define internal fastcc void @detect_field_duplicates(%union.tree_node* %fieldlist) unnamed_addr #5 !dbg !8734 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8736, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 10, metadata !8739, metadata !DIExpression()), !dbg !8744
  %tobool = icmp eq %union.tree_node* %fieldlist, null, !dbg !8745
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !8747

if.end:                                           ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldlist, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8748
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8748
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8737, metadata !DIExpression()), !dbg !8744
  %tobool1 = icmp eq %union.tree_node* %0, null, !dbg !8749
  br i1 %tobool1, label %cleanup.cont, label %do.body.preheader, !dbg !8751

do.body.preheader:                                ; preds = %if.end
  br label %do.body, !dbg !8752

do.body:                                          ; preds = %do.body.preheader, %do.body
  %timeout.0 = phi i32 [ %dec, %do.body ], [ 10, %do.body.preheader ], !dbg !8744
  %x.0 = phi %union.tree_node* [ %1, %do.body ], [ %0, %do.body.preheader ], !dbg !8744
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !8737, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 %timeout.0, metadata !8739, metadata !DIExpression()), !dbg !8744
  %dec = add nsw i32 %timeout.0, -1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %dec, metadata !8739, metadata !DIExpression()), !dbg !8744
  %chain5 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8755
  %1 = load %union.tree_node*, %union.tree_node** %chain5, align 8, !dbg !8755
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8737, metadata !DIExpression()), !dbg !8744
  %cmp = icmp ne i32 %dec, 0, !dbg !8756
  %tobool6 = icmp ne %union.tree_node* %1, null, !dbg !8757
  %2 = and i1 %cmp, %tobool6, !dbg !8757
  br i1 %2, label %do.body, label %do.end, !dbg !8758, !llvm.loop !8759

do.end:                                           ; preds = %do.body
  %cmp.lcssa = phi i1 [ %cmp, %do.body ], !dbg !8756
  br i1 %cmp.lcssa, label %if.then8, label %if.else, !dbg !8761

if.then8:                                         ; preds = %do.end
  br label %for.cond, !dbg !8762

for.cond:                                         ; preds = %for.inc29, %if.then8
  %x.1 = phi %union.tree_node* [ %0, %if.then8 ], [ %x.1.pre, %for.inc29 ], !dbg !8765
  call void @llvm.dbg.value(metadata %union.tree_node* %x.1, metadata !8737, metadata !DIExpression()), !dbg !8744
  %tobool11 = icmp eq %union.tree_node* %x.1, null, !dbg !8766
  br i1 %tobool11, label %cleanup.cont.loopexit, label %for.body, !dbg !8766

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8767
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8767
  %tobool12 = icmp eq %union.tree_node* %3, null, !dbg !8767
  br i1 %tobool12, label %for.inc29, label %for.cond14.preheader, !dbg !8770

for.cond14.preheader:                             ; preds = %for.body
  br label %for.cond14, !dbg !8771

for.cond14:                                       ; preds = %for.cond14.preheader, %for.inc
  %4 = phi %union.tree_node* [ %6, %for.inc ], [ %3, %for.cond14.preheader ]
  %y.0 = phi %union.tree_node* [ %7, %for.inc ], [ %fieldlist, %for.cond14.preheader ], !dbg !8774
  call void @llvm.dbg.value(metadata %union.tree_node* %y.0, metadata !8738, metadata !DIExpression()), !dbg !8744
  %cmp15 = icmp eq %union.tree_node* %y.0, %x.1, !dbg !8775
  br i1 %cmp15, label %for.inc29.loopexit, label %for.body16, !dbg !8771

for.body16:                                       ; preds = %for.cond14
  %name18 = getelementptr inbounds %union.tree_node, %union.tree_node* %y.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8777
  %5 = load %union.tree_node*, %union.tree_node** %name18, align 8, !dbg !8777
  %cmp21 = icmp eq %union.tree_node* %5, %4, !dbg !8779
  br i1 %cmp21, label %if.then22, label %for.inc, !dbg !8780

if.then22:                                        ; preds = %for.body16
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.355, i64 0, i64 0), %union.tree_node* nonnull %x.1) #6, !dbg !8781
  store %union.tree_node* null, %union.tree_node** %name, align 8, !dbg !8783
  br label %for.inc, !dbg !8784

for.inc:                                          ; preds = %for.body16, %if.then22
  %6 = phi %union.tree_node* [ %4, %for.body16 ], [ null, %if.then22 ]
  %chain27 = getelementptr inbounds %union.tree_node, %union.tree_node* %y.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8785
  %7 = load %union.tree_node*, %union.tree_node** %chain27, align 8, !dbg !8785
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8738, metadata !DIExpression()), !dbg !8744
  br label %for.cond14, !dbg !8786, !llvm.loop !8787

for.inc29.loopexit:                               ; preds = %for.cond14
  br label %for.inc29, !dbg !8789

for.inc29:                                        ; preds = %for.inc29.loopexit, %for.body
  %x.1.in.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %x.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8765
  %x.1.pre = load %union.tree_node*, %union.tree_node** %x.1.in.phi.trans.insert, align 8, !dbg !8765
  br label %for.cond, !dbg !8789, !llvm.loop !8790

if.else:                                          ; preds = %do.end
  %8 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !8792
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** @htab_eq_pointer, align 8, !dbg !8793
  %call = tail call %struct.htab* @htab_create(i64 37, i32 (i8*)* %8, i32 (i8*, i8*)* %9, void (i8*)* null) #6, !dbg !8794
  call void @llvm.dbg.value(metadata %struct.htab* %call, metadata !8740, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8737, metadata !DIExpression()), !dbg !8744
  br label %for.cond33, !dbg !8796

for.cond33:                                       ; preds = %for.inc47, %if.else
  %x.2 = phi %union.tree_node* [ %fieldlist, %if.else ], [ %14, %for.inc47 ], !dbg !8798
  call void @llvm.dbg.value(metadata %union.tree_node* %x.2, metadata !8737, metadata !DIExpression()), !dbg !8744
  %tobool34 = icmp eq %union.tree_node* %x.2, null, !dbg !8799
  br i1 %tobool34, label %for.end50, label %for.body35, !dbg !8799

for.body35:                                       ; preds = %for.cond33
  %name37 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8800
  %10 = load %union.tree_node*, %union.tree_node** %name37, align 8, !dbg !8800
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !8738, metadata !DIExpression()), !dbg !8744
  %cmp38 = icmp eq %union.tree_node* %10, null, !dbg !8803
  br i1 %cmp38, label %for.inc47, label %if.then39, !dbg !8804

if.then39:                                        ; preds = %for.body35
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !8805
  %call40 = tail call i8** @htab_find_slot(%struct.htab* %call, i8* nonnull %11, i32 1) #6, !dbg !8807
  call void @llvm.dbg.value(metadata i8** %call40, metadata !8743, metadata !DIExpression()), !dbg !8795
  %12 = load i8*, i8** %call40, align 8, !dbg !8808
  %tobool41 = icmp eq i8* %12, null, !dbg !8808
  br i1 %tobool41, label %if.end45, label %if.then42, !dbg !8810

if.then42:                                        ; preds = %if.then39
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.355, i64 0, i64 0), %union.tree_node* nonnull %x.2) #6, !dbg !8811
  store %union.tree_node* null, %union.tree_node** %name37, align 8, !dbg !8813
  br label %if.end45, !dbg !8814

if.end45:                                         ; preds = %if.then39, %if.then42
  %13 = bitcast i8** %call40 to %union.tree_node**, !dbg !8815
  store %union.tree_node* %10, %union.tree_node** %13, align 8, !dbg !8815
  br label %for.inc47, !dbg !8816

for.inc47:                                        ; preds = %for.body35, %if.end45
  %chain49 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8817
  %14 = load %union.tree_node*, %union.tree_node** %chain49, align 8, !dbg !8817
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !8737, metadata !DIExpression()), !dbg !8744
  br label %for.cond33, !dbg !8818, !llvm.loop !8819

for.end50:                                        ; preds = %for.cond33
  tail call void @htab_delete(%struct.htab* %call) #6, !dbg !8821
  br label %cleanup.cont

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !8822

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end, %entry, %for.end50
  ret void, !dbg !8822
}

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_build_bitfield_integer_type(i64, i32) local_unnamed_addr #2

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

declare dso_local i32 @field_decl_cmp(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @layout_array_type(%union.tree_node* %t) unnamed_addr #5 !dbg !8823 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8825, metadata !DIExpression()), !dbg !8826
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8827
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !8827
  %1 = load i64*, i64** %0, align 8, !dbg !8827
  %bf.load = load i64, i64* %1, align 8, !dbg !8827
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8829
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !8829
  br i1 %cmp, label %if.then, label %if.end, !dbg !8830

if.then:                                          ; preds = %entry
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !8830
  tail call fastcc void @layout_array_type(%union.tree_node* %2) #7, !dbg !8831
  br label %if.end, !dbg !8831

if.end:                                           ; preds = %if.then, %entry
  tail call void @layout_type(%union.tree_node* %t) #6, !dbg !8832
  ret void, !dbg !8833
}

declare dso_local void @expand_decl(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @rest_of_type_compilation(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_cxx_compat_finish_struct(%union.tree_node* %fieldlist) unnamed_addr #5 !dbg !8834 {
entry:
  %x = alloca %union.tree_node*, align 8
  %b = alloca %struct.c_binding*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8836, metadata !DIExpression()), !dbg !8845
  %0 = bitcast %union.tree_node** %x to i8*, !dbg !8846
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8846
  %1 = bitcast %struct.c_binding** %b to i8*, !dbg !8847
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8847
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8845
  %2 = bitcast %union.tree_node** %x to %struct.tree_type**, !dbg !8848
  br label %for.cond, !dbg !8851

for.cond:                                         ; preds = %for.body, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !8852
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !8837, metadata !DIExpression()), !dbg !8845
  %3 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8853
  %struct_types = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %3, i64 0, i32 0, !dbg !8853
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %struct_types, align 8, !dbg !8853
  %tobool = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !8853
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8853

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !8853
  br label %cond.end, !dbg !8853

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !8853
  call void @llvm.dbg.value(metadata %union.tree_node** %x, metadata !8838, metadata !DIExpression(DW_OP_deref)), !dbg !8845
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %ix.0, %union.tree_node** nonnull %x) #7, !dbg !8853
  %tobool2 = icmp eq i32 %call, 0, !dbg !8854
  br i1 %tobool2, label %for.end, label %for.body, !dbg !8854

for.body:                                         ; preds = %cond.end
  %5 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !8855
  %lang_flag_2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !8855
  %bf.load = load i32, i32* %lang_flag_2, align 4, !dbg !8856
  %bf.set = or i32 %bf.load, 134217728, !dbg !8856
  store i32 %bf.set, i32* %lang_flag_2, align 4, !dbg !8856
  %inc = add i32 %ix.0, 1, !dbg !8857
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8837, metadata !DIExpression()), !dbg !8845
  br label %for.cond, !dbg !8858, !llvm.loop !8859

for.end:                                          ; preds = %cond.end
  %6 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8861
  %typedefs_seen = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %6, i64 0, i32 2, !dbg !8861
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %typedefs_seen, align 8, !dbg !8861
  %tobool3 = icmp eq %struct.VEC_tree_heap* %7, null, !dbg !8861
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !8861

cond.true4:                                       ; preds = %for.end
  %base6 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !8861
  br label %cond.end8, !dbg !8861

cond.end8:                                        ; preds = %for.end, %cond.true4
  %cond9 = phi %struct.VEC_tree_base* [ %base6, %cond.true4 ], [ null, %for.end ], !dbg !8861
  %call10 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond9) #7, !dbg !8861
  %cmp = icmp ne i32 %call10, 0, !dbg !8861
  %cmp11 = icmp ne %union.tree_node* %fieldlist, null, !dbg !8862
  %or.cond = and i1 %cmp, %cmp11, !dbg !8863
  br i1 %or.cond, label %if.then, label %if.end41, !dbg !8863

if.then:                                          ; preds = %cond.end8
  %call12 = call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !8864
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call12, metadata !8840, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8845
  %8 = bitcast %union.tree_node** %x to %struct.tree_decl_minimal**, !dbg !8866
  br label %for.cond13, !dbg !8869

for.cond13:                                       ; preds = %for.body24, %if.then
  %ix.1 = phi i32 [ 0, %if.then ], [ %inc27, %for.body24 ], !dbg !8870
  call void @llvm.dbg.value(metadata i32 %ix.1, metadata !8837, metadata !DIExpression()), !dbg !8845
  %9 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8871
  %typedefs_seen14 = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %9, i64 0, i32 2, !dbg !8871
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %typedefs_seen14, align 8, !dbg !8871
  %tobool15 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !8871
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !8871

cond.true16:                                      ; preds = %for.cond13
  %base18 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !8871
  br label %cond.end20, !dbg !8871

cond.end20:                                       ; preds = %for.cond13, %cond.true16
  %cond21 = phi %struct.VEC_tree_base* [ %base18, %cond.true16 ], [ null, %for.cond13 ], !dbg !8871
  call void @llvm.dbg.value(metadata %union.tree_node** %x, metadata !8838, metadata !DIExpression(DW_OP_deref)), !dbg !8845
  %call22 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond21, i32 %ix.1, %union.tree_node** nonnull %x) #7, !dbg !8871
  %tobool23 = icmp eq i32 %call22, 0, !dbg !8872
  br i1 %tobool23, label %for.end28, label %for.body24, !dbg !8872

for.body24:                                       ; preds = %cond.end20
  %11 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %8, align 8, !dbg !8873
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 0, i32 3, !dbg !8873
  %12 = bitcast %union.tree_node** %name to i8**, !dbg !8873
  %13 = load i8*, i8** %12, align 8, !dbg !8873
  %call25 = call i32 @pointer_set_insert(%struct.pointer_set_t* %call12, i8* %13) #6, !dbg !8874
  %inc27 = add i32 %ix.1, 1, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !8837, metadata !DIExpression()), !dbg !8845
  br label %for.cond13, !dbg !8876, !llvm.loop !8877

for.end28:                                        ; preds = %cond.end20
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldlist, metadata !8838, metadata !DIExpression()), !dbg !8845
  %14 = bitcast %union.tree_node** %x to %struct.tree_common**, !dbg !8879
  br label %for.cond29, !dbg !8882

for.cond29:                                       ; preds = %for.inc39, %for.end28
  %storemerge = phi %union.tree_node* [ %fieldlist, %for.end28 ], [ %20, %for.inc39 ], !dbg !8883
  store %union.tree_node* %storemerge, %union.tree_node** %x, align 8, !dbg !8883
  call void @llvm.dbg.value(metadata %union.tree_node* %storemerge, metadata !8838, metadata !DIExpression()), !dbg !8845
  %cmp30 = icmp eq %union.tree_node* %storemerge, null, !dbg !8884
  br i1 %cmp30, label %for.end40, label %for.body31, !dbg !8885

for.body31:                                       ; preds = %for.cond29
  %name33 = getelementptr inbounds %union.tree_node, %union.tree_node* %storemerge, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8886
  %15 = bitcast %union.tree_node** %name33 to i8**, !dbg !8886
  %16 = load i8*, i8** %15, align 8, !dbg !8886
  %call34 = call i32 @pointer_set_contains(%struct.pointer_set_t* %call12, i8* %16) #6, !dbg !8889
  %tobool35 = icmp eq i32 %call34, 0, !dbg !8889
  br i1 %tobool35, label %for.inc39, label %if.then36, !dbg !8890

if.then36:                                        ; preds = %for.body31
  %17 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %8, align 8, !dbg !8891
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %17, i64 0, i32 1, !dbg !8891
  %18 = load i32, i32* %locus, align 8, !dbg !8891
  call void @llvm.dbg.value(metadata %struct.tree_decl_minimal* %17, metadata !8838, metadata !DIExpression()), !dbg !8845
  %call38 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %18, i32 49, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.356, i64 0, i64 0), %struct.tree_decl_minimal* %17) #6, !dbg !8893
  br label %for.inc39, !dbg !8894

for.inc39:                                        ; preds = %for.body31, %if.then36
  %19 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !8895
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 1, !dbg !8895
  %20 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8895
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !8838, metadata !DIExpression()), !dbg !8845
  br label %for.cond29, !dbg !8896, !llvm.loop !8897

for.end40:                                        ; preds = %for.cond29
  call void @pointer_set_destroy(%struct.pointer_set_t* %call12) #6, !dbg !8899
  br label %if.end41, !dbg !8900

if.end41:                                         ; preds = %cond.end8, %for.end40
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8845
  br label %for.cond42, !dbg !8901

for.cond42:                                       ; preds = %for.body52, %if.end41
  %ix.2 = phi i32 [ 0, %if.end41 ], [ %inc56, %for.body52 ], !dbg !8903
  call void @llvm.dbg.value(metadata i32 %ix.2, metadata !8837, metadata !DIExpression()), !dbg !8845
  %21 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !8904
  %fields = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %21, i64 0, i32 1, !dbg !8904
  %22 = load %struct.VEC_c_binding_ptr_heap*, %struct.VEC_c_binding_ptr_heap** %fields, align 8, !dbg !8904
  %tobool43 = icmp eq %struct.VEC_c_binding_ptr_heap* %22, null, !dbg !8904
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !8904

cond.true44:                                      ; preds = %for.cond42
  %base46 = getelementptr inbounds %struct.VEC_c_binding_ptr_heap, %struct.VEC_c_binding_ptr_heap* %22, i64 0, i32 0, !dbg !8904
  br label %cond.end48, !dbg !8904

cond.end48:                                       ; preds = %for.cond42, %cond.true44
  %cond49 = phi %struct.VEC_c_binding_ptr_base* [ %base46, %cond.true44 ], [ null, %for.cond42 ], !dbg !8904
  call void @llvm.dbg.value(metadata %struct.c_binding** %b, metadata !8839, metadata !DIExpression(DW_OP_deref)), !dbg !8845
  %call50 = call fastcc i32 @VEC_c_binding_ptr_base_iterate(%struct.VEC_c_binding_ptr_base* %cond49, i32 %ix.2, %struct.c_binding** nonnull %b) #7, !dbg !8904
  %tobool51 = icmp eq i32 %call50, 0, !dbg !8906
  br i1 %tobool51, label %for.end57, label %for.body52, !dbg !8906

for.body52:                                       ; preds = %cond.end48
  %23 = load %struct.c_binding*, %struct.c_binding** %b, align 8, !dbg !8907
  call void @llvm.dbg.value(metadata %struct.c_binding* %23, metadata !8839, metadata !DIExpression()), !dbg !8845
  %in_struct = getelementptr inbounds %struct.c_binding, %struct.c_binding* %23, i64 0, i32 5, !dbg !8908
  %bf.load53 = load i32, i32* %in_struct, align 8, !dbg !8909
  %bf.clear54 = and i32 %bf.load53, 2147483647, !dbg !8909
  store i32 %bf.clear54, i32* %in_struct, align 8, !dbg !8909
  %inc56 = add i32 %ix.2, 1, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %inc56, metadata !8837, metadata !DIExpression()), !dbg !8845
  br label %for.cond42, !dbg !8911, !llvm.loop !8912

for.end57:                                        ; preds = %cond.end48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8914
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8914
  ret void, !dbg !8914
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !8915 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !8920, metadata !DIExpression()), !dbg !8921
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !8922
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !8922
  br i1 %tobool, label %if.end, label %if.then, !dbg !8924

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !8924
  tail call void @free(i8* nonnull %1) #6, !dbg !8922
  br label %if.end, !dbg !8922

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !8924
  ret void, !dbg !8924
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_c_binding_ptr_heap_free(%struct.VEC_c_binding_ptr_heap** %vec_) unnamed_addr #0 !dbg !8925 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_heap** %vec_, metadata !8929, metadata !DIExpression()), !dbg !8930
  %0 = load %struct.VEC_c_binding_ptr_heap*, %struct.VEC_c_binding_ptr_heap** %vec_, align 8, !dbg !8931
  %tobool = icmp eq %struct.VEC_c_binding_ptr_heap* %0, null, !dbg !8931
  br i1 %tobool, label %if.end, label %if.then, !dbg !8933

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_c_binding_ptr_heap* %0 to i8*, !dbg !8933
  tail call void @free(i8* nonnull %1) #6, !dbg !8931
  br label %if.end, !dbg !8931

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_c_binding_ptr_heap* null, %struct.VEC_c_binding_ptr_heap** %vec_, align 8, !dbg !8933
  ret void, !dbg !8933
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !8934 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !8938, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !8939, metadata !DIExpression()), !dbg !8940
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !8941
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !8941
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !8941
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8941

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !8941
  br label %cond.end, !dbg !8941

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8941
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !8941
  ret %union.tree_node** %call1, !dbg !8941
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @start_enum(i32 %loc, %struct.c_enum_contents* %the_enum, %union.tree_node* %name) local_unnamed_addr #5 !dbg !8942 {
entry:
  %enumloc = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8951, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct.c_enum_contents* %the_enum, metadata !8952, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !8953, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8954, metadata !DIExpression()), !dbg !8956
  %0 = bitcast i32* %enumloc to i8*, !dbg !8957
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !8957
  call void @llvm.dbg.value(metadata i32 0, metadata !8955, metadata !DIExpression()), !dbg !8956
  store i32 0, i32* %enumloc, align 4, !dbg !8958
  %cmp = icmp eq %union.tree_node* %name, null, !dbg !8959
  br i1 %cmp, label %if.end, label %if.then, !dbg !8961

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %enumloc, metadata !8955, metadata !DIExpression(DW_OP_deref)), !dbg !8956
  %call = call fastcc %union.tree_node* @lookup_tag(i32 6, %union.tree_node* nonnull %name, i32 1, i32* nonnull %enumloc) #7, !dbg !8962
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8954, metadata !DIExpression()), !dbg !8956
  br label %if.end, !dbg !8963

if.end:                                           ; preds = %entry, %if.then
  %enumtype.0 = phi %union.tree_node* [ %call, %if.then ], [ null, %entry ], !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* %enumtype.0, metadata !8954, metadata !DIExpression()), !dbg !8956
  %cmp1 = icmp eq %union.tree_node* %enumtype.0, null, !dbg !8964
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !8966

lor.lhs.false:                                    ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %enumtype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8967
  %bf.load = load i64, i64* %1, align 8, !dbg !8967
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8968
  %cmp2 = icmp eq i64 %bf.cast2, 6, !dbg !8968
  br i1 %cmp2, label %if.end5, label %if.then3, !dbg !8969

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %call4 = call %union.tree_node* @make_node_stat(i32 6) #6, !dbg !8970
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8954, metadata !DIExpression()), !dbg !8956
  call fastcc void @pushtag(i32 %loc, %union.tree_node* %name, %union.tree_node* %call4) #7, !dbg !8972
  br label %if.end5, !dbg !8973

if.end5:                                          ; preds = %lor.lhs.false, %if.then3
  %enumtype.1 = phi %union.tree_node* [ %call4, %if.then3 ], [ %enumtype.0, %lor.lhs.false ], !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* %enumtype.1, metadata !8954, metadata !DIExpression()), !dbg !8956
  %type = bitcast %union.tree_node* %enumtype.1 to %struct.tree_type*, !dbg !8974
  %lang_flag_0 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8974
  %bf.load6 = load i32, i32* %lang_flag_0, align 4, !dbg !8974
  %bf.clear7 = and i32 %bf.load6, 33554432, !dbg !8974
  %tobool = icmp eq i32 %bf.clear7, 0, !dbg !8974
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !8976

if.then8:                                         ; preds = %if.end5
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.103, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8977
  %bf.load12.pre = load i32, i32* %lang_flag_0, align 4, !dbg !8978
  br label %if.end9, !dbg !8977

if.end9:                                          ; preds = %if.end5, %if.then8
  %bf.load12 = phi i32 [ %bf.load6, %if.end5 ], [ %bf.load12.pre, %if.then8 ], !dbg !8978
  %bf.set = or i32 %bf.load12, 33554432, !dbg !8978
  store i32 %bf.set, i32* %lang_flag_0, align 4, !dbg !8978
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %enumtype.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8979
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !8979
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8979
  %cmp15 = icmp eq %union.tree_node* %3, null, !dbg !8981
  br i1 %cmp15, label %if.end22, label %if.then16, !dbg !8982

if.then16:                                        ; preds = %if.end9
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !8983
  %4 = load i32, i32* %enumloc, align 4, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %4, metadata !8955, metadata !DIExpression()), !dbg !8956
  %cmp17 = icmp eq i32 %4, 0, !dbg !8987
  br i1 %cmp17, label %if.end19, label %if.then18, !dbg !8988

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.value(metadata i32 %4, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void (i32, i8*, ...) @inform(i32 %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !8989
  br label %if.end19, !dbg !8989

if.end19:                                         ; preds = %if.then16, %if.then18
  store %union.tree_node* null, %union.tree_node** %2, align 8, !dbg !8990
  br label %if.end22, !dbg !8991

if.end22:                                         ; preds = %if.end9, %if.end19
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8992
  %6 = bitcast %struct.c_enum_contents* %the_enum to i64*, !dbg !8993
  store i64 %5, i64* %6, align 8, !dbg !8993
  %enum_overflow = getelementptr inbounds %struct.c_enum_contents, %struct.c_enum_contents* %the_enum, i64 0, i32 1, !dbg !8994
  store i32 0, i32* %enum_overflow, align 8, !dbg !8995
  %7 = load i32, i32* @flag_short_enums, align 4, !dbg !8996
  %tobool23 = icmp eq i32 %7, 0, !dbg !8996
  br i1 %tobool23, label %if.end29, label %if.then24, !dbg !8998

if.then24:                                        ; preds = %if.end22
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %enumtype.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8999
  %bf.load26 = load i64, i64* %8, align 8, !dbg !9000
  %bf.set28 = or i64 %bf.load26, 2199023255552, !dbg !9000
  store i64 %bf.set28, i64* %8, align 8, !dbg !9000
  br label %if.end29, !dbg !8999

if.end29:                                         ; preds = %if.end22, %if.then24
  %9 = load i32, i32* @warn_cxx_compat, align 4, !dbg !9001
  %tobool30 = icmp eq i32 %9, 0, !dbg !9001
  br i1 %tobool30, label %if.end41, label %land.lhs.true, !dbg !9003

land.lhs.true:                                    ; preds = %if.end29
  %10 = load i32, i32* @in_sizeof, align 4, !dbg !9004
  %11 = load i32, i32* @in_typeof, align 4, !dbg !9005
  %12 = or i32 %10, %11, !dbg !9006
  %13 = load i32, i32* @in_alignof, align 4, !dbg !9007
  %14 = or i32 %12, %13, !dbg !9006
  %15 = icmp eq i32 %14, 0, !dbg !9006
  br i1 %15, label %if.end41, label %if.then36, !dbg !9006

if.then36:                                        ; preds = %land.lhs.true
  %tobool37 = icmp eq i32 %10, 0, !dbg !9008
  br i1 %tobool37, label %cond.false, label %cond.end, !dbg !9008

cond.false:                                       ; preds = %if.then36
  %tobool38 = icmp eq i32 %11, 0, !dbg !9009
  %cond = select i1 %tobool38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), !dbg !9009
  br label %cond.end, !dbg !9008

cond.end:                                         ; preds = %if.then36, %cond.false
  %cond39 = phi i8* [ %cond, %cond.false ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), %if.then36 ], !dbg !9008
  %call40 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i64 0, i64 0), i8* %cond39) #6, !dbg !9010
  br label %if.end41, !dbg !9010

if.end41:                                         ; preds = %land.lhs.true, %if.end29, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9011
  ret %union.tree_node* %enumtype.1, !dbg !9012
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @finish_enum(%union.tree_node* %enumtype, %union.tree_node* %values, %union.tree_node* %attributes) local_unnamed_addr #5 !dbg !9013 {
entry:
  %enumtype.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %enumtype, metadata !9017, metadata !DIExpression()), !dbg !9041
  store %union.tree_node* %enumtype, %union.tree_node** %enumtype.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %values, metadata !9018, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes, metadata !9019, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9022, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9023, metadata !DIExpression()), !dbg !9041
  %0 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !9042
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9043
  %cmp = icmp eq %struct.c_scope* %0, %1, !dbg !9044
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !9026, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node** %enumtype.addr, metadata !9017, metadata !DIExpression(DW_OP_deref)), !dbg !9041
  %call = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %enumtype.addr, %union.tree_node* %attributes, i32 8) #6, !dbg !9045
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9046
  %cmp2 = icmp eq %union.tree_node* %2, %values, !dbg !9047
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9048

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9049
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9022, metadata !DIExpression()), !dbg !9041
  br label %if.end16, !dbg !9050

if.else:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %values, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9051
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9051
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9022, metadata !DIExpression()), !dbg !9041
  br label %for.cond, !dbg !9052

for.cond:                                         ; preds = %for.body, %if.else
  %minnode.0 = phi %union.tree_node* [ %5, %if.else ], [ %minnode.1, %for.body ], !dbg !9053
  %values.pn = phi %union.tree_node* [ %values, %if.else ], [ %pair.0, %for.body ]
  %maxnode.0 = phi %union.tree_node* [ %5, %if.else ], [ %spec.select, %for.body ], !dbg !9053
  %pair.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %values.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9054
  %pair.0 = load %union.tree_node*, %union.tree_node** %pair.0.in, align 8, !dbg !9054
  call void @llvm.dbg.value(metadata %union.tree_node* %maxnode.0, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %pair.0, metadata !9020, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.0, metadata !9022, metadata !DIExpression()), !dbg !9041
  %tobool = icmp eq %union.tree_node* %pair.0, null, !dbg !9055
  br i1 %tobool, label %if.end16.loopexit, label %for.body, !dbg !9055

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %pair.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9056
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9056
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9028, metadata !DIExpression()), !dbg !9057
  %call7 = call i32 @tree_int_cst_lt(%union.tree_node* %maxnode.0, %union.tree_node* %7) #6, !dbg !9058
  %tobool8 = icmp eq i32 %call7, 0, !dbg !9058
  %spec.select = select i1 %tobool8, %union.tree_node* %maxnode.0, %union.tree_node* %7, !dbg !9060
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9023, metadata !DIExpression()), !dbg !9041
  %call10 = call i32 @tree_int_cst_lt(%union.tree_node* %7, %union.tree_node* %minnode.0) #6, !dbg !9061
  %tobool11 = icmp eq i32 %call10, 0, !dbg !9061
  %minnode.1 = select i1 %tobool11, %union.tree_node* %minnode.0, %union.tree_node* %7, !dbg !9063
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.1, metadata !9022, metadata !DIExpression()), !dbg !9041
  br label %for.cond, !dbg !9064, !llvm.loop !9065

if.end16.loopexit:                                ; preds = %for.cond
  %minnode.0.lcssa = phi %union.tree_node* [ %minnode.0, %for.cond ], !dbg !9053
  %maxnode.0.lcssa = phi %union.tree_node* [ %maxnode.0, %for.cond ], !dbg !9053
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.0.lcssa, metadata !9022, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %maxnode.0.lcssa, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.0.lcssa, metadata !9022, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %maxnode.0.lcssa, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.0.lcssa, metadata !9022, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %maxnode.0.lcssa, metadata !9023, metadata !DIExpression()), !dbg !9041
  br label %if.end16, !dbg !9067

if.end16:                                         ; preds = %if.end16.loopexit, %if.then
  %minnode.2 = phi %union.tree_node* [ %3, %if.then ], [ %minnode.0.lcssa, %if.end16.loopexit ], !dbg !9068
  %maxnode.2 = phi %union.tree_node* [ %3, %if.then ], [ %maxnode.0.lcssa, %if.end16.loopexit ], !dbg !9068
  call void @llvm.dbg.value(metadata %union.tree_node* %maxnode.2, metadata !9023, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %minnode.2, metadata !9022, metadata !DIExpression()), !dbg !9041
  %call17 = call i32 @tree_int_cst_sgn(%union.tree_node* %minnode.2) #6, !dbg !9067
  %call17.lobit = lshr i32 %call17, 31, !dbg !9069
  %call17.lobit.not = xor i32 %call17.lobit, 1, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %call17.lobit.not, metadata !9025, metadata !DIExpression()), !dbg !9041
  %conv20 = trunc i32 %call17.lobit.not to i8, !dbg !9070
  %call21 = call i32 @tree_int_cst_min_precision(%union.tree_node* %minnode.2, i8 zeroext %conv20) #6, !dbg !9070
  %call23 = call i32 @tree_int_cst_min_precision(%union.tree_node* %maxnode.2, i8 zeroext %conv20) #6, !dbg !9070
  %cmp24 = icmp ugt i32 %call21, %call23, !dbg !9070
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !9070

cond.true:                                        ; preds = %if.end16
  %call27 = call i32 @tree_int_cst_min_precision(%union.tree_node* %minnode.2, i8 zeroext %conv20) #6, !dbg !9070
  br label %cond.end, !dbg !9070

cond.false:                                       ; preds = %if.end16
  %call29 = call i32 @tree_int_cst_min_precision(%union.tree_node* %maxnode.2, i8 zeroext %conv20) #6, !dbg !9070
  br label %cond.end, !dbg !9070

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call27, %cond.true ], [ %call29, %cond.false ], !dbg !9070
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9024, metadata !DIExpression()), !dbg !9041
  %8 = bitcast %union.tree_node** %enumtype.addr to %struct.tree_common**, !dbg !9071
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !9071
  %10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 0, i32 0, !dbg !9071
  %bf.load = load i64, i64* %10, align 8, !dbg !9071
  %bf.cast4 = and i64 %bf.load, 2199023255552, !dbg !9071
  %tobool31 = icmp eq i64 %bf.cast4, 0, !dbg !9071
  br i1 %tobool31, label %lor.lhs.false, label %if.then37, !dbg !9073

lor.lhs.false:                                    ; preds = %cond.end
  %11 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !9074
  %precision32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !9074
  %bf.load33 = load i32, i32* %precision32, align 4, !dbg !9074
  %bf.clear34 = and i32 %bf.load33, 1023, !dbg !9074
  %cmp35 = icmp sgt i32 %cond, %bf.clear34, !dbg !9075
  br i1 %cmp35, label %if.then37, label %if.else44, !dbg !9076

if.then37:                                        ; preds = %cond.end, %lor.lhs.false
  %call38 = call %union.tree_node* @c_common_type_for_size(i32 %cond, i32 %call17.lobit.not) #6, !dbg !9077
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !9021, metadata !DIExpression()), !dbg !9041
  %cmp39 = icmp eq %union.tree_node* %call38, null, !dbg !9079
  br i1 %cmp39, label %if.then41, label %if.end50, !dbg !9081

if.then41:                                        ; preds = %if.then37
  %call42 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.105, i64 0, i64 0)) #6, !dbg !9082
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !9084
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9021, metadata !DIExpression()), !dbg !9041
  br label %if.end50, !dbg !9085

if.else44:                                        ; preds = %lor.lhs.false
  %13 = bitcast %struct.tree_type* %11 to %union.tree_node*, !dbg !9076
  %tobool45 = icmp eq i32 %call17.lobit.not, 0, !dbg !9086
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !9086
  %cond49 = select i1 %tobool45, %union.tree_node* %13, %union.tree_node* %14, !dbg !9086
  br label %if.end50, !dbg !9086

if.end50:                                         ; preds = %if.else44, %if.then37, %if.then41
  %tem.1 = phi %union.tree_node* [ %12, %if.then41 ], [ %call38, %if.then37 ], [ %cond49, %if.else44 ], !dbg !9087
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.1, metadata !9021, metadata !DIExpression()), !dbg !9041
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9088
  %15 = bitcast %struct.lang_decl** %minval to i64*, !dbg !9088
  %16 = load i64, i64* %15, align 8, !dbg !9088
  %17 = bitcast %union.tree_node** %enumtype.addr to %struct.tree_type**, !dbg !9089
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9089
  %minval53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 13, !dbg !9089
  %19 = bitcast %union.tree_node** %minval53 to i64*, !dbg !9090
  store i64 %16, i64* %19, align 8, !dbg !9090
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9091
  %20 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !9091
  %21 = load i64, i64* %20, align 8, !dbg !9091
  %maxval56 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 14, !dbg !9092
  %22 = bitcast %union.tree_node** %maxval56 to i64*, !dbg !9093
  store i64 %21, i64* %22, align 8, !dbg !9093
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9094
  %bf.load58 = load i64, i64* %23, align 8, !dbg !9094
  %bf.cast61 = and i64 %bf.load58, 2097152, !dbg !9094
  %24 = bitcast %union.tree_node** %enumtype.addr to i64**, !dbg !9095
  %25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 0, i32 0, i32 0, !dbg !9095
  %bf.load63 = load i64, i64* %25, align 8, !dbg !9096
  %bf.clear64 = and i64 %bf.load63, -2097153, !dbg !9096
  %bf.set = or i64 %bf.clear64, %bf.cast61, !dbg !9096
  store i64 %bf.set, i64* %25, align 8, !dbg !9096
  %26 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9097
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 2, !dbg !9097
  store %union.tree_node* null, %union.tree_node** %size, align 8, !dbg !9098
  %precision67 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 6, !dbg !9099
  %bf.load68 = load i32, i32* %precision67, align 4, !dbg !9099
  %bf.clear69 = and i32 %bf.load68, 1023, !dbg !9099
  %tobool70 = icmp eq i32 %bf.clear69, 0, !dbg !9099
  %27 = bitcast %struct.tree_type* %26 to %union.tree_node*, !dbg !9101
  br i1 %tobool70, label %if.else80, label %if.then71, !dbg !9101

if.then71:                                        ; preds = %if.end50
  %cmp76 = icmp sgt i32 %cond, %bf.clear69, !dbg !9102
  br i1 %cmp76, label %if.then78, label %if.end91, !dbg !9105

if.then78:                                        ; preds = %if.then71
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.106, i64 0, i64 0)) #6, !dbg !9106
  %.pre = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8, !dbg !9107
  br label %if.end91, !dbg !9106

if.else80:                                        ; preds = %if.end50
  %type81 = bitcast %union.tree_node* %tem.1 to %struct.tree_type*, !dbg !9108
  %precision82 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type81, i64 0, i32 6, !dbg !9108
  %bf.load83 = load i32, i32* %precision82, align 4, !dbg !9108
  %bf.clear84 = and i32 %bf.load83, 1023, !dbg !9108
  %bf.clear89 = and i32 %bf.load68, -1024, !dbg !9109
  %bf.set90 = or i32 %bf.clear89, %bf.clear84, !dbg !9109
  store i32 %bf.set90, i32* %precision67, align 4, !dbg !9109
  br label %if.end91

if.end91:                                         ; preds = %if.then71, %if.then78, %if.else80
  %28 = phi %union.tree_node* [ %27, %if.then71 ], [ %.pre, %if.then78 ], [ %27, %if.else80 ], !dbg !9107
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !9017, metadata !DIExpression()), !dbg !9041
  call void @layout_type(%union.tree_node* %28) #6, !dbg !9110
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9111
  %cmp92 = icmp eq %union.tree_node* %29, %values, !dbg !9112
  br i1 %cmp92, label %if.end120, label %for.cond95.preheader, !dbg !9113

for.cond95.preheader:                             ; preds = %if.end91
  %30 = bitcast %union.tree_node** %enumtype.addr to i64*, !dbg !9114
  br label %for.cond95, !dbg !9115

for.cond95:                                       ; preds = %for.cond95.preheader, %if.end107
  %pair.1 = phi %union.tree_node* [ %43, %if.end107 ], [ %values, %for.cond95.preheader ], !dbg !9116
  call void @llvm.dbg.value(metadata %union.tree_node* %pair.1, metadata !9020, metadata !DIExpression()), !dbg !9041
  %tobool96 = icmp eq %union.tree_node* %pair.1, null, !dbg !9115
  br i1 %tobool96, label %for.end117, label %for.body97, !dbg !9115

for.body97:                                       ; preds = %for.cond95
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %pair.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9117
  %31 = bitcast i32* %purpose to %union.tree_node**, !dbg !9117
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !9117
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !9034, metadata !DIExpression()), !dbg !9114
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9118
  %33 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !9118
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !9040, metadata !DIExpression()), !dbg !9114
  %34 = load i64, i64* %30, align 8, !dbg !9119
  %type100 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9120
  %35 = bitcast %union.tree_node** %type100 to i64*, !dbg !9121
  store i64 %34, i64* %35, align 8, !dbg !9121
  %type102 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9122
  %36 = load %union.tree_node*, %union.tree_node** %type102, align 8, !dbg !9122
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9124
  %cmp103 = icmp eq %union.tree_node* %36, %37, !dbg !9125
  br i1 %cmp103, label %if.end107, label %if.then105, !dbg !9126

if.then105:                                       ; preds = %for.body97
  %38 = inttoptr i64 %34 to %union.tree_node*, !dbg !9126
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !9017, metadata !DIExpression()), !dbg !9041
  %call106 = call %union.tree_node* @convert(%union.tree_node* %38, %union.tree_node* %33) #6, !dbg !9127
  call void @llvm.dbg.value(metadata %union.tree_node* %call106, metadata !9040, metadata !DIExpression()), !dbg !9114
  br label %if.end107, !dbg !9128

if.end107:                                        ; preds = %for.body97, %if.then105
  %ini.0 = phi %union.tree_node* [ %call106, %if.then105 ], [ %33, %for.body97 ], !dbg !9114
  call void @llvm.dbg.value(metadata %union.tree_node* %ini.0, metadata !9040, metadata !DIExpression()), !dbg !9114
  store %union.tree_node* %ini.0, %union.tree_node** %initial, align 8, !dbg !9129
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9130
  %39 = bitcast %union.tree_node** %name to i64*, !dbg !9130
  %40 = load i64, i64* %39, align 8, !dbg !9130
  %41 = bitcast i32* %purpose to i64*, !dbg !9131
  store i64 %40, i64* %41, align 8, !dbg !9131
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %pair.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9132
  store %union.tree_node* %ini.0, %union.tree_node** %42, align 8, !dbg !9133
  %chain116 = getelementptr inbounds %union.tree_node, %union.tree_node* %pair.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9134
  %43 = load %union.tree_node*, %union.tree_node** %chain116, align 8, !dbg !9134
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !9020, metadata !DIExpression()), !dbg !9041
  br label %for.cond95, !dbg !9135, !llvm.loop !9136

for.end117:                                       ; preds = %for.cond95
  %44 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9138
  %values119 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %44, i64 0, i32 1, !dbg !9138
  store %union.tree_node* %values, %union.tree_node** %values119, align 8, !dbg !9139
  br label %if.end120, !dbg !9140

if.end120:                                        ; preds = %if.end91, %for.end117
  %call121 = call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !9141
  call void @llvm.dbg.value(metadata i8* %call121, metadata !9027, metadata !DIExpression()), !dbg !9041
  %enum_min = getelementptr inbounds i8, i8* %call121, i64 8, !dbg !9142
  %45 = bitcast i8* %enum_min to %union.tree_node**, !dbg !9142
  store %union.tree_node* %minnode.2, %union.tree_node** %45, align 8, !dbg !9143
  %enum_max = getelementptr inbounds i8, i8* %call121, i64 16, !dbg !9144
  %46 = bitcast i8* %enum_max to %union.tree_node**, !dbg !9144
  store %union.tree_node* %maxnode.2, %union.tree_node** %46, align 8, !dbg !9145
  %47 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9146
  %lang_specific = getelementptr inbounds %struct.tree_type, %struct.tree_type* %47, i64 0, i32 20, !dbg !9146
  %48 = bitcast %struct.lang_type** %lang_specific to i8**, !dbg !9147
  store i8* %call121, i8** %48, align 8, !dbg !9147
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %47, i64 0, i32 16, !dbg !9148
  %49 = bitcast %struct.tree_type* %47 to %union.tree_node*, !dbg !9150
  %50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %47, i64 0, i32 0, i32 0, i32 0, !dbg !9150
  br label %for.cond124, !dbg !9150

for.cond124:                                      ; preds = %for.inc215, %if.end120
  %51 = phi i64* [ %50, %if.end120 ], [ %83, %for.inc215 ]
  %52 = phi %struct.tree_type* [ %47, %if.end120 ], [ %84, %for.inc215 ]
  %53 = phi %union.tree_node* [ %49, %if.end120 ], [ %85, %for.inc215 ], !dbg !9041
  %tem.2.in = phi %union.tree_node** [ %main_variant, %if.end120 ], [ %86, %for.inc215 ]
  %tem.2 = load %union.tree_node*, %union.tree_node** %tem.2.in, align 8, !dbg !9151
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.2, metadata !9021, metadata !DIExpression()), !dbg !9041
  %tobool125 = icmp eq %union.tree_node* %tem.2, null, !dbg !9152
  call void @llvm.dbg.value(metadata %union.tree_node* %53, metadata !9017, metadata !DIExpression()), !dbg !9041
  br i1 %tobool125, label %for.end217, label %for.body126, !dbg !9152

for.body126:                                      ; preds = %for.cond124
  %cmp127 = icmp eq %union.tree_node* %tem.2, %53, !dbg !9153
  br i1 %cmp127, label %for.inc215, label %if.end130, !dbg !9157

if.end130:                                        ; preds = %for.body126
  %values132 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %52, i64 0, i32 1, !dbg !9158
  %54 = bitcast %union.tree_node** %values132 to i64*, !dbg !9158
  %55 = load i64, i64* %54, align 8, !dbg !9158
  %values134 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9159
  %56 = bitcast i32* %values134 to i64*, !dbg !9160
  store i64 %55, i64* %56, align 8, !dbg !9160
  %minval136 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %52, i64 0, i32 13, !dbg !9161
  %57 = bitcast %union.tree_node** %minval136 to i64*, !dbg !9161
  %58 = load i64, i64* %57, align 8, !dbg !9161
  %minval138 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9162
  %59 = bitcast %struct.lang_decl** %minval138 to i64*, !dbg !9163
  store i64 %58, i64* %59, align 8, !dbg !9163
  %maxval140 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %52, i64 0, i32 14, !dbg !9164
  %60 = bitcast %union.tree_node** %maxval140 to i64*, !dbg !9164
  %61 = load i64, i64* %60, align 8, !dbg !9164
  %maxval142 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9165
  %62 = bitcast %struct.rtx_def** %maxval142 to i64*, !dbg !9166
  store i64 %61, i64* %62, align 8, !dbg !9166
  %size144 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %52, i64 0, i32 2, !dbg !9167
  %63 = bitcast %union.tree_node** %size144 to i64*, !dbg !9167
  %64 = load i64, i64* %63, align 8, !dbg !9167
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9168
  %66 = bitcast %union.tree_node** %65 to i64*, !dbg !9169
  store i64 %64, i64* %66, align 8, !dbg !9169
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %52, i64 0, i32 3, !dbg !9170
  %67 = bitcast %union.tree_node** %size_unit to i64*, !dbg !9170
  %68 = load i64, i64* %67, align 8, !dbg !9170
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9171
  %70 = bitcast %union.tree_node** %69 to i64*, !dbg !9172
  store i64 %68, i64* %70, align 8, !dbg !9172
  %bf.load151 = load i64, i64* %51, align 8, !dbg !9173
  %bf.cast1535 = and i64 %bf.load151, 65535, !dbg !9173
  %cmp154 = icmp eq i64 %bf.cast1535, 14, !dbg !9173
  call void @llvm.dbg.value(metadata i64* %51, metadata !9017, metadata !DIExpression()), !dbg !9041
  br i1 %cmp154, label %cond.true156, label %cond.false158, !dbg !9173

cond.true156:                                     ; preds = %if.end130
  %.cast = bitcast i64* %51 to %union.tree_node*, !dbg !9173
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !9017, metadata !DIExpression()), !dbg !9041
  %call157 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9173
  %.pre7 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9174
  br label %cond.end163, !dbg !9173

cond.false158:                                    ; preds = %if.end130
  %type159 = bitcast i64* %51 to %struct.tree_type*, !dbg !9173
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type159, i64 0, i32 6, !dbg !9173
  %bf.load160 = load i32, i32* %mode, align 4, !dbg !9173
  %bf.lshr161 = lshr i32 %bf.load160, 16, !dbg !9173
  %bf.clear162 = and i32 %bf.lshr161, 255, !dbg !9173
  br label %cond.end163, !dbg !9173

cond.end163:                                      ; preds = %cond.false158, %cond.true156
  %71 = phi %struct.tree_type* [ %.pre7, %cond.true156 ], [ %52, %cond.false158 ], !dbg !9175
  %cond164 = phi i32 [ %call157, %cond.true156 ], [ %bf.clear162, %cond.false158 ], !dbg !9173
  %type165 = bitcast %union.tree_node* %tem.2 to %struct.tree_type*, !dbg !9173
  %mode166 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type165, i64 0, i32 6, !dbg !9173
  %bf.load167 = load i32, i32* %mode166, align 4, !dbg !9173
  %bf.value168 = shl i32 %cond164, 16, !dbg !9173
  %bf.shl169 = and i32 %bf.value168, 16711680, !dbg !9173
  %bf.clear170 = and i32 %bf.load167, -16711681, !dbg !9173
  %bf.set171 = or i32 %bf.clear170, %bf.shl169, !dbg !9173
  store i32 %bf.set171, i32* %mode166, align 4, !dbg !9173
  %precision173 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %71, i64 0, i32 6, !dbg !9174
  %bf.load174 = load i32, i32* %precision173, align 4, !dbg !9174
  %bf.clear175 = and i32 %bf.load174, 1023, !dbg !9174
  %bf.clear180 = and i32 %bf.set171, -1024, !dbg !9176
  %bf.set181 = or i32 %bf.clear180, %bf.clear175, !dbg !9176
  store i32 %bf.set181, i32* %mode166, align 4, !dbg !9176
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %71, i64 0, i32 7, !dbg !9175
  %72 = load i32, i32* %align, align 8, !dbg !9175
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9177
  store i32 %72, i32* %73, align 8, !dbg !9178
  %74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %71, i64 0, i32 0, i32 0, i32 0, !dbg !9179
  %bf.load187 = load i64, i64* %74, align 8, !dbg !9179
  %bf.cast190 = and i64 %bf.load187, 4398046511104, !dbg !9179
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9180
  %bf.load193 = load i64, i64* %75, align 8, !dbg !9181
  %bf.clear196 = and i64 %bf.load193, -4398046511105, !dbg !9181
  %bf.set197 = or i64 %bf.clear196, %bf.cast190, !dbg !9181
  store i64 %bf.set197, i64* %75, align 8, !dbg !9181
  %76 = load i64*, i64** %24, align 8, !dbg !9182
  %bf.load200 = load i64, i64* %76, align 8, !dbg !9182
  %bf.cast203 = and i64 %bf.load200, 2097152, !dbg !9182
  %bf.clear208 = and i64 %bf.set197, -2097153, !dbg !9183
  %bf.set209 = or i64 %bf.clear208, %bf.cast203, !dbg !9183
  store i64 %bf.set209, i64* %75, align 8, !dbg !9183
  %77 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !9184
  %lang_specific212 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %77, i64 0, i32 20, !dbg !9184
  %78 = bitcast %struct.lang_type** %lang_specific212 to i64*, !dbg !9184
  %79 = load i64, i64* %78, align 8, !dbg !9184
  %lang_specific214 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 2, !dbg !9185
  %80 = bitcast %union.tree_node** %lang_specific214 to i64*, !dbg !9186
  store i64 %79, i64* %80, align 8, !dbg !9186
  %81 = bitcast %struct.tree_type* %77 to %union.tree_node*, !dbg !9187
  %82 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %77, i64 0, i32 0, i32 0, i32 0, !dbg !9187
  br label %for.inc215, !dbg !9187

for.inc215:                                       ; preds = %for.body126, %cond.end163
  %83 = phi i64* [ %51, %for.body126 ], [ %82, %cond.end163 ]
  %84 = phi %struct.tree_type* [ %52, %for.body126 ], [ %77, %cond.end163 ]
  %85 = phi %union.tree_node* [ %53, %for.body126 ], [ %81, %cond.end163 ]
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.2, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !9188
  br label %for.cond124, !dbg !9189, !llvm.loop !9190

for.end217:                                       ; preds = %for.cond124
  %.lcssa = phi %union.tree_node* [ %53, %for.cond124 ], !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !9017, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !9017, metadata !DIExpression()), !dbg !9041
  %conv218 = zext i1 %cmp to i32, !dbg !9192
  call void @rest_of_type_compilation(%union.tree_node* %.lcssa, i32 %conv218) #6, !dbg !9193
  %87 = load i32, i32* @warn_cxx_compat, align 4, !dbg !9194
  %tobool219 = icmp eq i32 %87, 0, !dbg !9194
  %88 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !9196
  %cmp220 = icmp eq %struct.c_struct_parse_info* %88, null, !dbg !9197
  %or.cond.not = or i1 %cmp220, %tobool219, !dbg !9198
  %89 = load i32, i32* @in_sizeof, align 4, !dbg !9199
  %90 = load i32, i32* @in_typeof, align 4, !dbg !9200
  %91 = or i32 %89, %90, !dbg !9198
  %92 = load i32, i32* @in_alignof, align 4, !dbg !9201
  %93 = or i32 %91, %92, !dbg !9198
  %94 = icmp ne i32 %93, 0, !dbg !9198
  %95 = or i1 %94, %or.cond.not, !dbg !9198
  br i1 %95, label %if.end230, label %if.then228, !dbg !9198

if.then228:                                       ; preds = %for.end217
  %struct_types = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %88, i64 0, i32 0, !dbg !9202
  %96 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8, !dbg !9202
  call void @llvm.dbg.value(metadata %union.tree_node* %96, metadata !9017, metadata !DIExpression()), !dbg !9041
  %call229 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %struct_types, %union.tree_node* %96) #7, !dbg !9202
  br label %if.end230, !dbg !9202

if.end230:                                        ; preds = %for.end217, %if.then228
  %97 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8, !dbg !9203
  call void @llvm.dbg.value(metadata %union.tree_node* %97, metadata !9017, metadata !DIExpression()), !dbg !9041
  ret %union.tree_node* %97, !dbg !9204
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_min_precision(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_type_for_size(i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_enumerator(i32 %loc, %struct.c_enum_contents* %the_enum, %union.tree_node* %name, %union.tree_node* %value) local_unnamed_addr #5 !dbg !9205 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9209, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %struct.c_enum_contents* %the_enum, metadata !9210, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !9211, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !9212, metadata !DIExpression()), !dbg !9215
  %cmp = icmp eq %union.tree_node* %value, null, !dbg !9216
  br i1 %cmp, label %if.end47, label %if.then, !dbg !9218

if.then:                                          ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9219
  %cmp1 = icmp eq %union.tree_node* %0, %value, !dbg !9222
  br i1 %cmp1, label %if.end47, label %if.else, !dbg !9223

if.else:                                          ; preds = %if.then
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9224
  %1 = bitcast %union.tree_node** %type3 to i64**, !dbg !9224
  %2 = load i64*, i64** %1, align 8, !dbg !9224
  %bf.load = load i64, i64* %2, align 8, !dbg !9224
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9224
  %cmp4 = icmp eq i64 %bf.cast2, 6, !dbg !9224
  br i1 %cmp4, label %if.else21, label %lor.lhs.false, !dbg !9224

lor.lhs.false:                                    ; preds = %if.else
  %cmp11 = icmp eq i64 %bf.cast2, 7, !dbg !9224
  br i1 %cmp11, label %if.else21, label %lor.lhs.false12, !dbg !9224

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i64 %bf.cast2, 8, !dbg !9224
  br i1 %cmp19, label %if.else21, label %if.then20, !dbg !9226

if.then20:                                        ; preds = %lor.lhs.false12
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.107, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !9227
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9212, metadata !DIExpression()), !dbg !9215
  br label %if.end47, !dbg !9229

if.else21:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %if.else
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9230
  %bf.load23 = load i64, i64* %3, align 8, !dbg !9230
  %bf.cast255 = and i64 %bf.load23, 65535, !dbg !9233
  %cmp26 = icmp eq i64 %bf.cast255, 23, !dbg !9233
  br i1 %cmp26, label %if.end35, label %if.then27, !dbg !9234

if.then27:                                        ; preds = %if.else21
  %call = tail call %union.tree_node* @c_fully_fold(%union.tree_node* nonnull %value, i8 zeroext 0, i8* null) #6, !dbg !9235
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9212, metadata !DIExpression()), !dbg !9215
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9237
  %bf.load29 = load i64, i64* %4, align 8, !dbg !9237
  %bf.cast317 = and i64 %bf.load29, 65535, !dbg !9239
  %cmp32 = icmp eq i64 %bf.cast317, 23, !dbg !9239
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !9240

if.then33:                                        ; preds = %if.then27
  %call34 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.108, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !9241
  %bf.load37.pre = load i64, i64* %4, align 8, !dbg !9242
  br label %if.end35, !dbg !9241

if.end35:                                         ; preds = %if.else21, %if.then27, %if.then33
  %bf.load37 = phi i64 [ %bf.load23, %if.else21 ], [ %bf.load37.pre, %if.then33 ], [ %bf.load29, %if.then27 ], !dbg !9242
  %value.addr.0 = phi %union.tree_node* [ %value, %if.else21 ], [ %call, %if.then33 ], [ %call, %if.then27 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0, metadata !9212, metadata !DIExpression()), !dbg !9215
  %bf.cast396 = and i64 %bf.load37, 65535, !dbg !9244
  %cmp40 = icmp eq i64 %bf.cast396, 23, !dbg !9244
  br i1 %cmp40, label %if.else42, label %if.then41, !dbg !9245

if.then41:                                        ; preds = %if.end35
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.107, i64 0, i64 0), %union.tree_node* %name) #6, !dbg !9246
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9212, metadata !DIExpression()), !dbg !9215
  br label %if.end47, !dbg !9248

if.else42:                                        ; preds = %if.end35
  %call43 = tail call %union.tree_node* @default_conversion(%union.tree_node* %value.addr.0) #6, !dbg !9249
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !9212, metadata !DIExpression()), !dbg !9215
  tail call void @constant_expression_warning(%union.tree_node* %call43) #6, !dbg !9251
  br label %if.end47

if.end47:                                         ; preds = %entry, %if.then, %if.then41, %if.else42, %if.then20
  %value.addr.4 = phi %union.tree_node* [ null, %entry ], [ null, %if.then ], [ null, %if.then20 ], [ null, %if.then41 ], [ %call43, %if.else42 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.4, metadata !9212, metadata !DIExpression()), !dbg !9215
  %cmp48 = icmp eq %union.tree_node* %value.addr.4, null, !dbg !9252
  br i1 %cmp48, label %if.then49, label %if.else52, !dbg !9254

if.then49:                                        ; preds = %if.end47
  %enum_next_value = getelementptr inbounds %struct.c_enum_contents, %struct.c_enum_contents* %the_enum, i64 0, i32 0, !dbg !9255
  %5 = load %union.tree_node*, %union.tree_node** %enum_next_value, align 8, !dbg !9255
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9212, metadata !DIExpression()), !dbg !9215
  %enum_overflow = getelementptr inbounds %struct.c_enum_contents, %struct.c_enum_contents* %the_enum, i64 0, i32 1, !dbg !9257
  %6 = load i32, i32* %enum_overflow, align 8, !dbg !9257
  %tobool = icmp eq i32 %6, 0, !dbg !9259
  br i1 %tobool, label %if.end58, label %if.then50, !dbg !9260

if.then50:                                        ; preds = %if.then49
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.109, i64 0, i64 0)) #6, !dbg !9261
  br label %if.end58, !dbg !9261

if.else52:                                        ; preds = %if.end47
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9262
  %call53 = tail call i32 @int_fits_type_p(%union.tree_node* nonnull %value.addr.4, %union.tree_node* %7) #6, !dbg !9264
  %tobool54 = icmp eq i32 %call53, 0, !dbg !9264
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !9265

if.then55:                                        ; preds = %if.else52
  %call56 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i64 0, i64 0)) #6, !dbg !9266
  br label %if.end58, !dbg !9266

if.end58:                                         ; preds = %if.then49, %if.else52, %if.then55, %if.then50
  %value.addr.5 = phi %union.tree_node* [ %5, %if.then50 ], [ %5, %if.then49 ], [ %value.addr.4, %if.then55 ], [ %value.addr.4, %if.else52 ], !dbg !9215
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.5, metadata !9212, metadata !DIExpression()), !dbg !9215
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9267
  %call59 = tail call i32 @int_fits_type_p(%union.tree_node* %value.addr.5, %union.tree_node* %8) #6, !dbg !9269
  %tobool60 = icmp eq i32 %call59, 0, !dbg !9269
  br i1 %tobool60, label %if.end63, label %if.then61, !dbg !9270

if.then61:                                        ; preds = %if.end58
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9271
  %call62 = tail call %union.tree_node* @convert(%union.tree_node* %9, %union.tree_node* %value.addr.5) #6, !dbg !9272
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !9212, metadata !DIExpression()), !dbg !9215
  br label %if.end63, !dbg !9273

if.end63:                                         ; preds = %if.end58, %if.then61
  %value.addr.6 = phi %union.tree_node* [ %call62, %if.then61 ], [ %value.addr.5, %if.end58 ], !dbg !9215
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.6, metadata !9212, metadata !DIExpression()), !dbg !9215
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9274
  %bf.load65 = load i64, i64* %10, align 8, !dbg !9274
  %bf.cast67 = and i64 %bf.load65, 65535, !dbg !9274
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast67, !dbg !9274
  %11 = load i32, i32* %arrayidx, align 4, !dbg !9274
  %cmp68 = icmp ugt i32 %11, 3, !dbg !9274
  br i1 %cmp68, label %land.lhs.true, label %cond.end, !dbg !9274

land.lhs.true:                                    ; preds = %if.end63
  %cmp75 = icmp ult i32 %11, 11, !dbg !9274
  br i1 %cmp75, label %cond.true, label %cond.end, !dbg !9274

cond.true:                                        ; preds = %land.lhs.true
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9274
  %13 = load i32, i32* %12, align 8, !dbg !9274
  %phitmp = icmp ne i32 %13, 0, !dbg !9274
  br label %cond.end, !dbg !9274

cond.end:                                         ; preds = %if.end63, %land.lhs.true, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %land.lhs.true ], [ false, %if.end63 ]
  br i1 %cond, label %cond.true77, label %cond.false99, !dbg !9274

cond.true77:                                      ; preds = %cond.end
  br i1 %cmp68, label %land.lhs.true85, label %cond.end100, !dbg !9275

land.lhs.true85:                                  ; preds = %cond.true77
  %cmp92 = icmp ult i32 %11, 11, !dbg !9275
  br i1 %cmp92, label %cond.true93, label %cond.end100, !dbg !9275

cond.true93:                                      ; preds = %land.lhs.true85
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9275
  %15 = load i32, i32* %14, align 8, !dbg !9275
  br label %cond.end100, !dbg !9275

cond.false99:                                     ; preds = %cond.end
  %16 = load i32, i32* @input_location, align 4, !dbg !9276
  br label %cond.end100, !dbg !9274

cond.end100:                                      ; preds = %cond.true93, %land.lhs.true85, %cond.true77, %cond.false99
  %cond101 = phi i32 [ %16, %cond.false99 ], [ %15, %cond.true93 ], [ 0, %land.lhs.true85 ], [ 0, %cond.true77 ], !dbg !9274
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !9277
  %call102 = tail call %union.tree_node* @build_binary_op(i32 %cond101, i32 63, %union.tree_node* %value.addr.6, %union.tree_node* %17, i32 0) #6, !dbg !9278
  %enum_next_value103 = getelementptr inbounds %struct.c_enum_contents, %struct.c_enum_contents* %the_enum, i64 0, i32 0, !dbg !9279
  store %union.tree_node* %call102, %union.tree_node** %enum_next_value103, align 8, !dbg !9280
  %call105 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call102, %union.tree_node* %value.addr.6) #6, !dbg !9281
  %enum_overflow106 = getelementptr inbounds %struct.c_enum_contents, %struct.c_enum_contents* %the_enum, i64 0, i32 1, !dbg !9282
  store i32 %call105, i32* %enum_overflow106, align 8, !dbg !9283
  %type108 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9284
  %18 = load %union.tree_node*, %union.tree_node** %type108, align 8, !dbg !9284
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !9214, metadata !DIExpression()), !dbg !9215
  %type109 = bitcast %union.tree_node* %18 to %struct.tree_type*, !dbg !9285
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type109, i64 0, i32 6, !dbg !9285
  %bf.load110 = load i32, i32* %precision, align 4, !dbg !9285
  %bf.clear111 = and i32 %bf.load110, 1023, !dbg !9285
  %19 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !9285
  %precision113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 6, !dbg !9285
  %bf.load114 = load i32, i32* %precision113, align 4, !dbg !9285
  %bf.clear115 = and i32 %bf.load114, 1023, !dbg !9285
  %cmp116 = icmp ugt i32 %bf.clear111, %bf.clear115, !dbg !9285
  br i1 %cmp116, label %cond.true117, label %cond.false122, !dbg !9285

cond.true117:                                     ; preds = %cond.end100
  br label %cond.end127, !dbg !9285

cond.false122:                                    ; preds = %cond.end100
  br label %cond.end127, !dbg !9285

cond.end127:                                      ; preds = %cond.false122, %cond.true117
  %cond128.pre-phi = phi i32 [ %bf.clear115, %cond.false122 ], [ %bf.clear111, %cond.true117 ], !dbg !9285
  %cmp137 = icmp ult i32 %bf.clear111, %bf.clear115, !dbg !9286
  br i1 %cmp137, label %land.end, label %land.rhs, !dbg !9287

land.rhs:                                         ; preds = %cond.end127
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9288
  %bf.load139 = load i64, i64* %20, align 8, !dbg !9288
  %bf.lshr = lshr i64 %bf.load139, 21, !dbg !9288
  %21 = trunc i64 %bf.lshr to i32, !dbg !9288
  %bf.cast141 = and i32 %21, 1, !dbg !9288
  br label %land.end

land.end:                                         ; preds = %cond.end127, %land.rhs
  %22 = phi i32 [ 0, %cond.end127 ], [ %bf.cast141, %land.rhs ]
  %call143 = tail call %union.tree_node* @c_common_type_for_size(i32 %cond128.pre-phi, i32 %22) #6, !dbg !9289
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !9214, metadata !DIExpression()), !dbg !9215
  %call144 = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 33, %union.tree_node* %name, %union.tree_node* %call143) #6, !dbg !9290
  call void @llvm.dbg.value(metadata %union.tree_node* %call144, metadata !9213, metadata !DIExpression()), !dbg !9215
  %call145 = tail call %union.tree_node* @convert(%union.tree_node* %call143, %union.tree_node* %value.addr.6) #6, !dbg !9291
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9292
  store %union.tree_node* %call145, %union.tree_node** %initial, align 8, !dbg !9293
  %call146 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call144) #7, !dbg !9294
  %call147 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call144, %union.tree_node* %value.addr.6, %union.tree_node* null) #6, !dbg !9295
  ret %union.tree_node* %call147, !dbg !9296
}

declare dso_local %union.tree_node* @c_fully_fold(%union.tree_node*, i8 zeroext, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @default_conversion(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_binary_op(i32, i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @start_function(%struct.c_declspecs* %declspecs, %struct.c_declarator* %declarator, %union.tree_node* %attributes) local_unnamed_addr #5 !dbg !9297 {
entry:
  %attributes.addr = alloca %union.tree_node*, align 8
  %decl1 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %declspecs, metadata !9301, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !9302, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes, metadata !9303, metadata !DIExpression()), !dbg !9318
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  %0 = bitcast %union.tree_node** %decl1 to i8*, !dbg !9319
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9319
  store i32 0, i32* @current_function_returns_value, align 4, !dbg !9320
  store i32 0, i32* @current_function_returns_null, align 4, !dbg !9321
  store i32 0, i32* @current_function_returns_abnormally, align 4, !dbg !9322
  store i32 0, i32* @warn_about_return_type, align 4, !dbg !9323
  store %struct.c_switch* null, %struct.c_switch** @c_switch_stack, align 8, !dbg !9324
  %1 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !9325
  store i64 %1, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !9326
  store i64 %1, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !9327
  call void @llvm.dbg.value(metadata %union.tree_node** %attributes.addr, metadata !9303, metadata !DIExpression(DW_OP_deref)), !dbg !9318
  %call = call fastcc %union.tree_node* @grokdeclarator(%struct.c_declarator* %declarator, %struct.c_declspecs* %declspecs, i32 1, i8 zeroext 1, %union.tree_node** null, %union.tree_node** nonnull %attributes.addr, %union.tree_node** null, i8* null, i32 0) #7, !dbg !9328
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9304, metadata !DIExpression()), !dbg !9318
  store %union.tree_node* %call, %union.tree_node** %decl1, align 8, !dbg !9329
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9304, metadata !DIExpression()), !dbg !9318
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !9330
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9332

if.end:                                           ; preds = %entry
  %2 = bitcast %union.tree_node** %decl1 to %struct.tree_decl_minimal**, !dbg !9333
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9333
  %3 = load i32, i32* %locus, align 8, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %3, metadata !9308, metadata !DIExpression()), !dbg !9318
  %4 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8, !dbg !9334
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9303, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata %union.tree_node** %decl1, metadata !9304, metadata !DIExpression(DW_OP_deref)), !dbg !9318
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %decl1, %union.tree_node* %4, i32 0) #6, !dbg !9335
  %5 = bitcast %union.tree_node** %decl1 to %struct.tree_function_decl**, !dbg !9336
  %6 = load %struct.tree_function_decl*, %struct.tree_function_decl** %5, align 8, !dbg !9336
  %declared_inline_flag = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %6, i64 0, i32 5, !dbg !9336
  %bf.load = load i32, i32* %declared_inline_flag, align 8, !dbg !9336
  %bf.clear = and i32 %bf.load, 2097152, !dbg !9336
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !9336
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !9338

land.lhs.true:                                    ; preds = %if.end
  %7 = trunc i32 %bf.load to i16, !dbg !9339
  %tobool6 = icmp slt i16 %7, 0, !dbg !9339
  br i1 %tobool6, label %land.lhs.true7, label %if.end13, !dbg !9340

land.lhs.true7:                                   ; preds = %land.lhs.true
  %attributes8 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !9341
  %8 = load %union.tree_node*, %union.tree_node** %attributes8, align 8, !dbg !9341
  %call9 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %8) #6, !dbg !9342
  %tobool10 = icmp eq %union.tree_node* %call9, null, !dbg !9342
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !9343

if.then11:                                        ; preds = %land.lhs.true7
  %9 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9344
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call12 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 45, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.111, i64 0, i64 0), %union.tree_node* %9) #6, !dbg !9345
  br label %if.end13, !dbg !9345

if.end13:                                         ; preds = %land.lhs.true7, %if.end, %if.then11, %land.lhs.true
  %inline_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 8, !dbg !9346
  %bf.load14 = load i16, i16* %inline_p, align 8, !dbg !9346
  %bf.clear16 = and i16 %bf.load14, 64, !dbg !9346
  %tobool17 = icmp eq i16 %bf.clear16, 0, !dbg !9348
  %10 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !9349
  %tobool19 = icmp ne i32 %10, 0, !dbg !9349
  %or.cond = or i1 %tobool17, %tobool19, !dbg !9350
  br i1 %or.cond, label %if.end45, label %land.lhs.true20, !dbg !9350

land.lhs.true20:                                  ; preds = %if.end13
  %11 = bitcast %union.tree_node** %decl1 to i64**, !dbg !9351
  %12 = load i64*, i64** %11, align 8, !dbg !9351
  %bf.load21 = load i64, i64* %12, align 8, !dbg !9351
  %bf.cast2310 = and i64 %bf.load21, 65535, !dbg !9352
  %cmp24 = icmp eq i64 %bf.cast2310, 29, !dbg !9352
  br i1 %cmp24, label %land.lhs.true25, label %if.end45, !dbg !9353

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %13 = bitcast %union.tree_node** %decl1 to %struct.tree_decl_common**, !dbg !9354
  %attributes27 = getelementptr inbounds i64, i64* %12, i64 11, !dbg !9354
  %14 = bitcast i64* %attributes27 to %union.tree_node**, !dbg !9354
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !9354
  %call28 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %15) #6, !dbg !9355
  %tobool29 = icmp ne %union.tree_node* %call28, null, !dbg !9355
  %16 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !9356
  %tobool30 = icmp ne %union.tree_node* %16, null, !dbg !9356
  %or.cond1 = or i1 %tobool29, %tobool30, !dbg !9357
  br i1 %or.cond1, label %if.then31, label %if.end45, !dbg !9357

if.then31:                                        ; preds = %land.lhs.true25
  %storage_class = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %declspecs, i64 0, i32 5, !dbg !9358
  %17 = load i32, i32* %storage_class, align 4, !dbg !9358
  %cmp32 = icmp eq i32 %17, 4, !dbg !9361
  br i1 %cmp32, label %if.end45, label %if.then33, !dbg !9362

if.then33:                                        ; preds = %if.then31
  %18 = load %struct.tree_decl_common*, %struct.tree_decl_common** %13, align 8, !dbg !9363
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %18, i64 0, i32 2, !dbg !9363
  %19 = bitcast i40* %decl_flag_1 to i64*, !dbg !9363
  %bf.load35 = load i64, i64* %19, align 8, !dbg !9363
  %bf.set = xor i64 %bf.load35, 33554432, !dbg !9364
  store i64 %bf.set, i64* %19, align 8, !dbg !9364
  br label %if.end45, !dbg !9365

if.end45:                                         ; preds = %if.then31, %if.then33, %land.lhs.true25, %if.end13, %land.lhs.true20
  %20 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9366
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !9304, metadata !DIExpression()), !dbg !9318
  call void @announce_function(%union.tree_node* %20) #6, !dbg !9367
  %21 = bitcast %union.tree_node** %decl1 to %struct.tree_common**, !dbg !9368
  %22 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9368
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %22, i64 0, i32 2, !dbg !9368
  %23 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9368
  %24 = load %struct.tree_common*, %struct.tree_common** %23, align 8, !dbg !9368
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i64 0, i32 2, !dbg !9368
  %25 = bitcast %union.tree_node** %type47 to %struct.tree_type**, !dbg !9368
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !9368
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 2, !dbg !9368
  %27 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !9368
  %cmp49 = icmp eq %union.tree_node* %27, null, !dbg !9368
  %28 = bitcast %struct.tree_common* %22 to %struct.tree_decl_common*, !dbg !9368
  br i1 %cmp49, label %lor.lhs.false50, label %if.end67, !dbg !9368

lor.lhs.false50:                                  ; preds = %if.end45
  %29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 0, i32 0, i32 0, !dbg !9368
  %bf.load56 = load i64, i64* %29, align 8, !dbg !9368
  %bf.cast5811 = and i64 %bf.load56, 65535, !dbg !9368
  %cmp59 = icmp eq i64 %bf.cast5811, 19, !dbg !9368
  br i1 %cmp59, label %if.end67, label %if.then60, !dbg !9370

if.then60:                                        ; preds = %lor.lhs.false50
  call void (i32, i8*, ...) @error_at(i32 %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.112, i64 0, i64 0)) #6, !dbg !9371
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9373
  %31 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9374
  %type62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !9374
  %32 = bitcast %union.tree_node** %type62 to %struct.tree_type**, !dbg !9374
  %33 = load %struct.tree_type*, %struct.tree_type** %32, align 8, !dbg !9374
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 1, !dbg !9374
  %34 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !9374
  %call64 = call %union.tree_node* @build_function_type(%union.tree_node* %30, %union.tree_node* %34) #6, !dbg !9375
  %35 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9376
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %35, i64 0, i32 2, !dbg !9376
  store %union.tree_node* %call64, %union.tree_node** %type66, align 8, !dbg !9377
  %36 = bitcast %struct.tree_common* %35 to %struct.tree_decl_common*, !dbg !9378
  br label %if.end67, !dbg !9378

if.end67:                                         ; preds = %if.end45, %if.then60, %lor.lhs.false50
  %37 = phi %struct.tree_decl_common* [ %28, %if.end45 ], [ %36, %if.then60 ], [ %28, %lor.lhs.false50 ]
  %38 = load i32, i32* @warn_about_return_type, align 4, !dbg !9379
  %tobool68 = icmp eq i32 %38, 0, !dbg !9379
  br i1 %tobool68, label %if.end67.if.end73_crit_edge, label %if.then69, !dbg !9381

if.end67.if.end73_crit_edge:                      ; preds = %if.end67
  br label %if.end73, !dbg !9381

if.then69:                                        ; preds = %if.end67
  %39 = load i32, i32* @flag_isoc99, align 4, !dbg !9382
  %tobool70 = icmp eq i32 %39, 0, !dbg !9382
  br i1 %tobool70, label %cond.false, label %cond.end, !dbg !9382

cond.false:                                       ; preds = %if.then69
  %40 = load i32, i32* @warn_return_type, align 4, !dbg !9383
  %tobool71 = icmp eq i32 %40, 0, !dbg !9383
  %cond = select i1 %tobool71, i32 104, i32 172, !dbg !9383
  br label %cond.end, !dbg !9382

cond.end:                                         ; preds = %if.then69, %cond.false
  %cond72 = phi i32 [ %cond, %cond.false ], [ 0, %if.then69 ], !dbg !9382
  call void (i32, i32, i8*, ...) @pedwarn_c99(i32 %3, i32 %cond72, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.113, i64 0, i64 0)) #6, !dbg !9384
  %.phi.trans.insert = bitcast %union.tree_node** %decl1 to %struct.tree_decl_common**, !dbg !9318
  %.pre = load %struct.tree_decl_common*, %struct.tree_decl_common** %.phi.trans.insert, align 8, !dbg !9385
  br label %if.end73, !dbg !9384

if.end73:                                         ; preds = %if.end67.if.end73_crit_edge, %cond.end
  %41 = phi %struct.tree_decl_common* [ %37, %if.end67.if.end73_crit_edge ], [ %.pre, %cond.end ], !dbg !9385
  %42 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !9386
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %41, i64 0, i32 5, !dbg !9385
  %43 = bitcast %union.tree_node** %initial to i64*, !dbg !9387
  store i64 %42, i64* %43, align 8, !dbg !9387
  %name = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %41, i64 0, i32 0, i32 3, !dbg !9388
  %44 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9388
  %45 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9389
  %call76 = call fastcc %union.tree_node* @lookup_name_in_scope(%union.tree_node* %44, %struct.c_scope* %45) #7, !dbg !9390
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !9305, metadata !DIExpression()), !dbg !9318
  %tobool77 = icmp eq %union.tree_node* %call76, null, !dbg !9391
  br i1 %tobool77, label %if.end85, label %land.lhs.true78, !dbg !9393

land.lhs.true78:                                  ; preds = %if.end73
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9394
  %bf.load80 = load i64, i64* %46, align 8, !dbg !9394
  %bf.cast8221 = and i64 %bf.load80, 65535, !dbg !9395
  %cmp83 = icmp eq i64 %bf.cast8221, 29, !dbg !9395
  %spec.select = select i1 %cmp83, %union.tree_node* %call76, %union.tree_node* null, !dbg !9396
  br label %if.end85, !dbg !9396

if.end85:                                         ; preds = %if.end73, %land.lhs.true78
  %old_decl.0 = phi %union.tree_node* [ null, %if.end73 ], [ %spec.select, %land.lhs.true78 ], !dbg !9318
  call void @llvm.dbg.value(metadata %union.tree_node* %old_decl.0, metadata !9305, metadata !DIExpression()), !dbg !9318
  store i32 0, i32* @current_function_prototype_locus, align 4, !dbg !9397
  store i8 0, i8* @current_function_prototype_built_in, align 1, !dbg !9398
  store %union.tree_node* null, %union.tree_node** @current_function_prototype_arg_types, align 8, !dbg !9399
  %47 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9400
  %type87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 2, !dbg !9400
  %48 = bitcast %union.tree_node** %type87 to %struct.tree_type**, !dbg !9400
  %49 = load %struct.tree_type*, %struct.tree_type** %48, align 8, !dbg !9400
  %values89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %49, i64 0, i32 1, !dbg !9400
  %50 = load %union.tree_node*, %union.tree_node** %values89, align 8, !dbg !9400
  %cmp90 = icmp eq %union.tree_node* %50, null, !dbg !9401
  %51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 0, i32 0, !dbg !9402
  %52 = bitcast %struct.tree_common* %47 to %struct.tree_decl_minimal*, !dbg !9402
  br i1 %cmp90, label %if.then91, label %if.end194, !dbg !9402

if.then91:                                        ; preds = %if.end85
  %cmp92 = icmp eq %union.tree_node* %old_decl.0, null, !dbg !9403
  br i1 %cmp92, label %if.end131, label %land.lhs.true93, !dbg !9405

land.lhs.true93:                                  ; preds = %if.then91
  %type95 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9406
  %53 = bitcast %union.tree_node** %type95 to i64**, !dbg !9406
  %54 = load i64*, i64** %53, align 8, !dbg !9406
  %bf.load97 = load i64, i64* %54, align 8, !dbg !9406
  %bf.cast9920 = and i64 %bf.load97, 65535, !dbg !9407
  %cmp100 = icmp eq i64 %bf.cast9920, 20, !dbg !9407
  br i1 %cmp100, label %land.lhs.true101, label %if.end131, !dbg !9408

land.lhs.true101:                                 ; preds = %land.lhs.true93
  %type105 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %49, i64 0, i32 0, i32 2, !dbg !9409
  %55 = load %union.tree_node*, %union.tree_node** %type105, align 8, !dbg !9409
  %type109 = getelementptr inbounds i64, i64* %54, i64 2, !dbg !9410
  %56 = bitcast i64* %type109 to %union.tree_node**, !dbg !9410
  %57 = load %union.tree_node*, %union.tree_node** %56, align 8, !dbg !9410
  %call110 = call i32 @comptypes(%union.tree_node* %55, %union.tree_node* %57) #6, !dbg !9411
  %tobool111 = icmp eq i32 %call110, 0, !dbg !9411
  br i1 %tobool111, label %land.lhs.true101.if.end131_crit_edge, label %if.then112, !dbg !9412

land.lhs.true101.if.end131_crit_edge:             ; preds = %land.lhs.true101
  %.phi.trans.insert24 = bitcast %union.tree_node** %decl1 to i64**, !dbg !9413
  %.pre25 = load i64*, i64** %.phi.trans.insert24, align 8, !dbg !9414
  %58 = bitcast i64* %.pre25 to %struct.tree_decl_minimal*, !dbg !9412
  %59 = bitcast i64* %.pre25 to %struct.tree_common*, !dbg !9412
  br label %if.end131, !dbg !9412

if.then112:                                       ; preds = %land.lhs.true101
  %60 = load %union.tree_node*, %union.tree_node** %type95, align 8, !dbg !9415
  %61 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9417
  %type116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %61, i64 0, i32 2, !dbg !9417
  %62 = load %union.tree_node*, %union.tree_node** %type116, align 8, !dbg !9417
  %call117 = call %union.tree_node* @composite_type(%union.tree_node* %60, %union.tree_node* %62) #6, !dbg !9418
  %63 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9419
  %type119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %63, i64 0, i32 2, !dbg !9419
  store %union.tree_node* %call117, %union.tree_node** %type119, align 8, !dbg !9420
  %locus121 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9421
  %64 = load i32, i32* %locus121, align 8, !dbg !9421
  store i32 %64, i32* @current_function_prototype_locus, align 4, !dbg !9422
  %lang_flag_6 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9423
  %65 = bitcast i40* %lang_flag_6 to i64*, !dbg !9423
  %bf.load123 = load i64, i64* %65, align 8, !dbg !9423
  %bf.lshr124 = lshr i64 %bf.load123, 21, !dbg !9423
  %66 = trunc i64 %bf.lshr124 to i8, !dbg !9423
  %bf.cast126 = and i8 %66, 1, !dbg !9423
  store i8 %bf.cast126, i8* @current_function_prototype_built_in, align 1, !dbg !9424
  %values130 = getelementptr inbounds %union.tree_node, %union.tree_node* %call117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9425
  %67 = bitcast i32* %values130 to i64*, !dbg !9425
  %68 = load i64, i64* %67, align 8, !dbg !9425
  store i64 %68, i64* bitcast (%union.tree_node** @current_function_prototype_arg_types to i64*), align 8, !dbg !9426
  %69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %63, i64 0, i32 0, i32 0, !dbg !9427
  %70 = bitcast %struct.tree_common* %63 to %struct.tree_decl_minimal*, !dbg !9427
  br label %if.end131, !dbg !9427

if.end131:                                        ; preds = %land.lhs.true101.if.end131_crit_edge, %if.then91, %if.then112, %land.lhs.true93
  %71 = phi %struct.tree_common* [ %59, %land.lhs.true101.if.end131_crit_edge ], [ %47, %if.then91 ], [ %63, %if.then112 ], [ %47, %land.lhs.true93 ]
  %72 = phi %struct.tree_decl_minimal* [ %58, %land.lhs.true101.if.end131_crit_edge ], [ %52, %if.then91 ], [ %70, %if.then112 ], [ %52, %land.lhs.true93 ]
  %73 = phi i64* [ %.pre25, %land.lhs.true101.if.end131_crit_edge ], [ %51, %if.then91 ], [ %69, %if.then112 ], [ %51, %land.lhs.true93 ], !dbg !9414
  %bf.load133 = load i64, i64* %73, align 8, !dbg !9414
  %bf.cast13618 = and i64 %bf.load133, 134217728, !dbg !9414
  %tobool137 = icmp eq i64 %bf.cast13618, 0, !dbg !9414
  br i1 %tobool137, label %if.end194, label %if.then138, !dbg !9428

if.then138:                                       ; preds = %if.end131
  %name140 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %72, i64 0, i32 3, !dbg !9429
  %74 = bitcast %union.tree_node** %name140 to %struct.lang_identifier**, !dbg !9429
  %75 = load %struct.lang_identifier*, %struct.lang_identifier** %74, align 8, !dbg !9429
  %symbol_binding = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %75, i64 0, i32 1, !dbg !9429
  %76 = load %struct.c_scope*, %struct.c_scope** @external_scope, align 8, !dbg !9431
  %depth144 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %76, i64 0, i32 5, !dbg !9431
  %77 = bitcast i40* %depth144 to i64*, !dbg !9431
  br label %for.cond, !dbg !9434

for.cond:                                         ; preds = %for.inc, %if.then138
  %b.0.in = phi %struct.c_binding** [ %symbol_binding, %if.then138 ], [ %shadowed, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !9435
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !9309, metadata !DIExpression()), !dbg !9436
  %cond9 = icmp eq %struct.c_binding* %b.0, null, !dbg !9437
  br i1 %cond9, label %if.end194.loopexit, label %for.body, !dbg !9437

for.body:                                         ; preds = %for.cond
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !9438
  %bf.load142 = load i32, i32* %depth, align 8, !dbg !9438
  %bf.load145 = load i64, i64* %77, align 8, !dbg !9438
  %78 = trunc i64 %bf.load145 to i32, !dbg !9438
  %79 = xor i32 %bf.load142, %78, !dbg !9438
  %80 = and i32 %79, 268435455, !dbg !9438
  %cmp148 = icmp eq i32 %80, 0, !dbg !9438
  br i1 %cmp148, label %for.end, label %for.inc, !dbg !9439

for.inc:                                          ; preds = %for.body
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !9440
  br label %for.cond, !dbg !9441, !llvm.loop !9442

for.end:                                          ; preds = %for.body
  %b.0.lcssa29 = phi %struct.c_binding* [ %b.0, %for.body ], !dbg !9435
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa29, i64 0, i32 1, !dbg !9444
  %81 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !9444
  call void @llvm.dbg.value(metadata %union.tree_node* %81, metadata !9314, metadata !DIExpression()), !dbg !9445
  %type154 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa29, i64 0, i32 0, i32 0, !dbg !9446
  %82 = load %union.tree_node*, %union.tree_node** %type154, align 8, !dbg !9446
  %tobool155 = icmp eq %union.tree_node* %82, null, !dbg !9447
  br i1 %tobool155, label %cond.false159, label %cond.true156, !dbg !9447

cond.true156:                                     ; preds = %for.end
  br label %cond.end162, !dbg !9447

cond.false159:                                    ; preds = %for.end
  %type161 = getelementptr inbounds %union.tree_node, %union.tree_node* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9448
  br label %cond.end162, !dbg !9447

cond.end162:                                      ; preds = %cond.false159, %cond.true156
  %cond163.in = phi %union.tree_node** [ %type154, %cond.true156 ], [ %type161, %cond.false159 ]
  %cond163 = load %union.tree_node*, %union.tree_node** %cond163.in, align 8, !dbg !9447
  call void @llvm.dbg.value(metadata %union.tree_node* %cond163, metadata !9317, metadata !DIExpression()), !dbg !9445
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9449
  %bf.load165 = load i64, i64* %83, align 8, !dbg !9449
  %bf.cast16719 = and i64 %bf.load165, 65535, !dbg !9451
  %cmp168 = icmp eq i64 %bf.cast16719, 20, !dbg !9451
  br i1 %cmp168, label %land.lhs.true170, label %if.end194, !dbg !9452

land.lhs.true170:                                 ; preds = %cond.end162
  %type172 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %71, i64 0, i32 2, !dbg !9453
  %84 = bitcast %union.tree_node** %type172 to %struct.tree_common**, !dbg !9453
  %85 = load %struct.tree_common*, %struct.tree_common** %84, align 8, !dbg !9453
  %type174 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %85, i64 0, i32 2, !dbg !9453
  %86 = load %union.tree_node*, %union.tree_node** %type174, align 8, !dbg !9453
  %type176 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9454
  %87 = load %union.tree_node*, %union.tree_node** %type176, align 8, !dbg !9454
  %call177 = call i32 @comptypes(%union.tree_node* %86, %union.tree_node* %87) #6, !dbg !9455
  %tobool178 = icmp eq i32 %call177, 0, !dbg !9455
  br i1 %tobool178, label %if.end194, label %if.then179, !dbg !9456

if.then179:                                       ; preds = %land.lhs.true170
  %locus181 = getelementptr inbounds %union.tree_node, %union.tree_node* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9457
  %88 = load i32, i32* %locus181, align 8, !dbg !9457
  store i32 %88, i32* @current_function_prototype_locus, align 4, !dbg !9459
  %lang_flag_6183 = getelementptr inbounds %union.tree_node, %union.tree_node* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9460
  %89 = bitcast i40* %lang_flag_6183 to i64*, !dbg !9460
  %bf.load184 = load i64, i64* %89, align 8, !dbg !9460
  %bf.lshr185 = lshr i64 %bf.load184, 21, !dbg !9460
  %90 = trunc i64 %bf.lshr185 to i8, !dbg !9460
  %bf.cast187 = and i8 %90, 1, !dbg !9460
  store i8 %bf.cast187, i8* @current_function_prototype_built_in, align 1, !dbg !9461
  %values190 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9462
  %91 = bitcast i32* %values190 to i64*, !dbg !9462
  %92 = load i64, i64* %91, align 8, !dbg !9462
  store i64 %92, i64* bitcast (%union.tree_node** @current_function_prototype_arg_types to i64*), align 8, !dbg !9463
  br label %if.end194, !dbg !9464

if.end194.loopexit:                               ; preds = %for.cond
  br label %if.end194, !dbg !9465

if.end194:                                        ; preds = %if.end194.loopexit, %land.lhs.true170, %if.end131, %cond.end162, %if.then179, %if.end85
  %93 = load i32, i32* @warn_strict_prototypes, align 4, !dbg !9465
  %tobool195 = icmp ne i32 %93, 0, !dbg !9465
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9467
  %cmp197 = icmp ne %union.tree_node* %old_decl.0, %94, !dbg !9468
  %or.cond2 = and i1 %tobool195, %cmp197, !dbg !9469
  br i1 %or.cond2, label %land.lhs.true199, label %if.else, !dbg !9469

land.lhs.true199:                                 ; preds = %if.end194
  %95 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !9470
  %type201 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %95, i64 0, i32 2, !dbg !9470
  %96 = bitcast %union.tree_node** %type201 to %struct.tree_type**, !dbg !9470
  %97 = load %struct.tree_type*, %struct.tree_type** %96, align 8, !dbg !9470
  %values203 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %97, i64 0, i32 1, !dbg !9470
  %98 = load %union.tree_node*, %union.tree_node** %values203, align 8, !dbg !9470
  %cmp204 = icmp eq %union.tree_node* %98, null, !dbg !9471
  br i1 %cmp204, label %land.lhs.true206, label %if.else, !dbg !9472

land.lhs.true206:                                 ; preds = %land.lhs.true199
  %cmp207 = icmp eq %union.tree_node* %old_decl.0, null, !dbg !9473
  br i1 %cmp207, label %if.then223, label %lor.lhs.false209, !dbg !9473

lor.lhs.false209:                                 ; preds = %land.lhs.true206
  %type211 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9473
  %99 = bitcast %union.tree_node** %type211 to %struct.tree_type**, !dbg !9473
  %100 = load %struct.tree_type*, %struct.tree_type** %99, align 8, !dbg !9473
  %values213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %100, i64 0, i32 1, !dbg !9473
  %101 = load %union.tree_node*, %union.tree_node** %values213, align 8, !dbg !9473
  %cmp214 = icmp eq %union.tree_node* %101, null, !dbg !9473
  br i1 %cmp214, label %land.lhs.true216, label %if.else, !dbg !9473

land.lhs.true216:                                 ; preds = %lor.lhs.false209
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5, !dbg !9473
  %bf.load218 = load i32, i32* %built_in_class, align 8, !dbg !9473
  %bf.clear220 = and i32 %bf.load218, 6144, !dbg !9473
  %cmp221 = icmp eq i32 %bf.clear220, 0, !dbg !9473
  br i1 %cmp221, label %if.then223, label %if.else, !dbg !9474

if.then223:                                       ; preds = %land.lhs.true216, %land.lhs.true206
  %call224 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 189, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.114, i64 0, i64 0)) #6, !dbg !9475
  br label %if.end332, !dbg !9475

if.else:                                          ; preds = %land.lhs.true216, %lor.lhs.false209, %land.lhs.true199, %if.end194
  %102 = load i32, i32* @warn_missing_prototypes, align 4, !dbg !9476
  %tobool225 = icmp ne i32 %102, 0, !dbg !9476
  %or.cond3 = and i1 %tobool225, %cmp197, !dbg !9478
  br i1 %or.cond3, label %land.lhs.true229, label %if.else261, !dbg !9478

land.lhs.true229:                                 ; preds = %if.else
  %103 = bitcast %union.tree_node** %decl1 to i64**, !dbg !9479
  %104 = load i64*, i64** %103, align 8, !dbg !9479
  %bf.load231 = load i64, i64* %104, align 8, !dbg !9479
  %bf.cast23417 = and i64 %bf.load231, 134217728, !dbg !9479
  %tobool235 = icmp eq i64 %bf.cast23417, 0, !dbg !9479
  br i1 %tobool235, label %if.else261, label %land.lhs.true236, !dbg !9480

land.lhs.true236:                                 ; preds = %land.lhs.true229
  %name238 = getelementptr inbounds i64, i64* %104, i64 4, !dbg !9481
  %105 = bitcast i64* %name238 to %union.tree_node**, !dbg !9481
  %106 = load %union.tree_node*, %union.tree_node** %105, align 8, !dbg !9481
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !9481
  %cmp239 = icmp eq %union.tree_node* %106, %107, !dbg !9481
  br i1 %cmp239, label %if.else261, label %land.lhs.true241, !dbg !9482

land.lhs.true241:                                 ; preds = %land.lhs.true236
  %cmp242 = icmp eq %union.tree_node* %old_decl.0, null, !dbg !9483
  br i1 %cmp242, label %if.then259, label %lor.lhs.false244, !dbg !9483

lor.lhs.false244:                                 ; preds = %land.lhs.true241
  %type246 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9483
  %108 = bitcast %union.tree_node** %type246 to %struct.tree_type**, !dbg !9483
  %109 = load %struct.tree_type*, %struct.tree_type** %108, align 8, !dbg !9483
  %values248 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %109, i64 0, i32 1, !dbg !9483
  %110 = load %union.tree_node*, %union.tree_node** %values248, align 8, !dbg !9483
  %cmp249 = icmp eq %union.tree_node* %110, null, !dbg !9483
  br i1 %cmp249, label %land.lhs.true251, label %if.else261, !dbg !9483

land.lhs.true251:                                 ; preds = %lor.lhs.false244
  %built_in_class253 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5, !dbg !9483
  %bf.load254 = load i32, i32* %built_in_class253, align 8, !dbg !9483
  %bf.clear256 = and i32 %bf.load254, 6144, !dbg !9483
  %cmp257 = icmp eq i32 %bf.clear256, 0, !dbg !9483
  br i1 %cmp257, label %if.then259, label %if.else261, !dbg !9484

if.then259:                                       ; preds = %land.lhs.true251, %land.lhs.true241
  call void @llvm.dbg.value(metadata i64* %104, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call260 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 135, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.115, i64 0, i64 0), i64* %104) #6, !dbg !9485
  br label %if.end332, !dbg !9485

if.else261:                                       ; preds = %land.lhs.true251, %land.lhs.true229, %lor.lhs.false244, %land.lhs.true236, %if.else
  %cmp264 = icmp ne %union.tree_node* %old_decl.0, null, !dbg !9486
  %or.cond4 = and i1 %tobool225, %cmp264, !dbg !9488
  %or.cond5 = and i1 %or.cond4, %cmp197, !dbg !9488
  br i1 %or.cond5, label %land.lhs.true269, label %if.else285, !dbg !9488

land.lhs.true269:                                 ; preds = %if.else261
  %111 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9489
  %bf.load271 = load i64, i64* %111, align 8, !dbg !9489
  %bf.cast27416 = and i64 %bf.load271, 16777216, !dbg !9489
  %tobool275 = icmp eq i64 %bf.cast27416, 0, !dbg !9489
  br i1 %tobool275, label %if.else285, label %land.lhs.true276, !dbg !9490

land.lhs.true276:                                 ; preds = %land.lhs.true269
  %type278 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9491
  %112 = bitcast %union.tree_node** %type278 to %struct.tree_type**, !dbg !9491
  %113 = load %struct.tree_type*, %struct.tree_type** %112, align 8, !dbg !9491
  %values280 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %113, i64 0, i32 1, !dbg !9491
  %114 = load %union.tree_node*, %union.tree_node** %values280, align 8, !dbg !9491
  %cmp281 = icmp eq %union.tree_node* %114, null, !dbg !9492
  br i1 %cmp281, label %if.then283, label %if.else285, !dbg !9493

if.then283:                                       ; preds = %land.lhs.true276
  %115 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9494
  call void @llvm.dbg.value(metadata %union.tree_node* %115, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call284 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 135, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.116, i64 0, i64 0), %union.tree_node* %115) #6, !dbg !9495
  br label %if.end332, !dbg !9495

if.else285:                                       ; preds = %land.lhs.true269, %land.lhs.true276, %if.else261
  %116 = load i32, i32* @warn_missing_declarations, align 4, !dbg !9496
  %tobool286 = icmp eq i32 %116, 0, !dbg !9496
  br i1 %tobool286, label %if.else304, label %land.lhs.true287, !dbg !9498

land.lhs.true287:                                 ; preds = %if.else285
  %117 = bitcast %union.tree_node** %decl1 to i64**, !dbg !9499
  %118 = load i64*, i64** %117, align 8, !dbg !9499
  %bf.load289 = load i64, i64* %118, align 8, !dbg !9499
  %bf.cast29215 = and i64 %bf.load289, 134217728, !dbg !9499
  %tobool293 = icmp ne i64 %bf.cast29215, 0, !dbg !9499
  %cmp295 = icmp eq %union.tree_node* %old_decl.0, null, !dbg !9500
  %or.cond6 = and i1 %tobool293, %cmp295, !dbg !9501
  br i1 %or.cond6, label %land.lhs.true297, label %if.else304, !dbg !9501

land.lhs.true297:                                 ; preds = %land.lhs.true287
  %name299 = getelementptr inbounds i64, i64* %118, i64 4, !dbg !9502
  %119 = bitcast i64* %name299 to %union.tree_node**, !dbg !9502
  %120 = load %union.tree_node*, %union.tree_node** %119, align 8, !dbg !9502
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !9502
  %cmp300 = icmp eq %union.tree_node* %120, %121, !dbg !9502
  br i1 %cmp300, label %if.else304, label %if.then302, !dbg !9503

if.then302:                                       ; preds = %land.lhs.true297
  call void @llvm.dbg.value(metadata i64* %118, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call303 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 129, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.117, i64 0, i64 0), i64* %118) #6, !dbg !9504
  br label %if.end332, !dbg !9504

if.else304:                                       ; preds = %if.else285, %land.lhs.true297, %land.lhs.true287
  %tobool305 = icmp ne i32 %116, 0, !dbg !9505
  %or.cond7 = and i1 %tobool305, %cmp264, !dbg !9507
  %or.cond8 = and i1 %or.cond7, %cmp197, !dbg !9507
  br i1 %or.cond8, label %land.lhs.true312, label %if.end332, !dbg !9507

land.lhs.true312:                                 ; preds = %if.else304
  %122 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9508
  %bf.load314 = load i64, i64* %122, align 8, !dbg !9508
  %bf.cast31713 = and i64 %bf.load314, 16777216, !dbg !9508
  %tobool318 = icmp eq i64 %bf.cast31713, 0, !dbg !9508
  br i1 %tobool318, label %if.end332, label %land.lhs.true319, !dbg !9509

land.lhs.true319:                                 ; preds = %land.lhs.true312
  %lang_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9510
  %123 = bitcast i40* %lang_flag_2 to i64*, !dbg !9510
  %bf.load321 = load i64, i64* %123, align 8, !dbg !9510
  %bf.cast32414 = and i64 %bf.load321, 131072, !dbg !9510
  %tobool325 = icmp eq i64 %bf.cast32414, 0, !dbg !9510
  br i1 %tobool325, label %if.end332, label %if.then326, !dbg !9511

if.then326:                                       ; preds = %land.lhs.true319
  %124 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9512
  call void @llvm.dbg.value(metadata %union.tree_node* %124, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call327 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 129, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.118, i64 0, i64 0), %union.tree_node* %124) #6, !dbg !9513
  br label %if.end332, !dbg !9513

if.end332:                                        ; preds = %land.lhs.true319, %land.lhs.true312, %if.then259, %if.then302, %if.then326, %if.else304, %if.then283, %if.then223
  %125 = bitcast %union.tree_node** %decl1 to i64**, !dbg !9514
  %126 = load i64*, i64** %125, align 8, !dbg !9514
  %bf.load334 = load i64, i64* %126, align 8, !dbg !9515
  %bf.set336 = or i64 %bf.load334, 67108864, !dbg !9515
  store i64 %bf.set336, i64* %126, align 8, !dbg !9515
  %127 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !9516
  %cmp337 = icmp eq %union.tree_node* %127, null, !dbg !9518
  br i1 %cmp337, label %if.end343, label %if.then339, !dbg !9519

if.then339:                                       ; preds = %if.end332
  %128 = load i64*, i64** %125, align 8, !dbg !9520
  %bf.load341 = load i64, i64* %128, align 8, !dbg !9521
  %bf.clear342 = and i64 %bf.load341, -134217729, !dbg !9521
  store i64 %bf.clear342, i64* %128, align 8, !dbg !9521
  br label %if.end343, !dbg !9520

if.end343:                                        ; preds = %if.end332, %if.then339
  %129 = load i64*, i64** %125, align 8, !dbg !9522
  %bf.load345 = load i64, i64* %129, align 8, !dbg !9522
  %bf.cast347 = and i64 %bf.load345, 65535, !dbg !9522
  %arrayidx348 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast347, i64 13, !dbg !9522
  %130 = load i8, i8* %arrayidx348, align 1, !dbg !9522
  %tobool350 = icmp eq i8 %130, 0, !dbg !9522
  br i1 %tobool350, label %cond.end356, label %land.lhs.true351, !dbg !9522

land.lhs.true351:                                 ; preds = %if.end343
  %assembler_name = getelementptr inbounds i64, i64* %129, i64 15, !dbg !9522
  %131 = bitcast i64* %assembler_name to %union.tree_node**, !dbg !9522
  %132 = load %union.tree_node*, %union.tree_node** %131, align 8, !dbg !9522
  %cmp352 = icmp eq %union.tree_node* %132, null, !dbg !9522
  br i1 %cmp352, label %cond.end356, label %cond.true354, !dbg !9522

cond.true354:                                     ; preds = %land.lhs.true351
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 7542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9522
  br label %cond.end356, !dbg !9522

cond.end356:                                      ; preds = %land.lhs.true351, %if.end343, %cond.true354
  %133 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9523
  %134 = load %struct.c_scope*, %struct.c_scope** @file_scope, align 8, !dbg !9525
  %cmp358 = icmp eq %struct.c_scope* %133, %134, !dbg !9526
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !9527

if.then360:                                       ; preds = %cond.end356
  %135 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9528
  call void @llvm.dbg.value(metadata %union.tree_node* %135, metadata !9304, metadata !DIExpression()), !dbg !9318
  call void @maybe_apply_pragma_weak(%union.tree_node* %135) #6, !dbg !9529
  br label %if.end361, !dbg !9529

if.end361:                                        ; preds = %if.then360, %cond.end356
  %136 = load i32, i32* @warn_main, align 4, !dbg !9530
  %tobool362 = icmp eq i32 %136, 0, !dbg !9530
  br i1 %tobool362, label %if.end388, label %land.lhs.true363, !dbg !9532

land.lhs.true363:                                 ; preds = %if.end361
  %137 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %2, align 8, !dbg !9533
  %name365 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %137, i64 0, i32 3, !dbg !9533
  %138 = load %union.tree_node*, %union.tree_node** %name365, align 8, !dbg !9533
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !9533
  %cmp366 = icmp eq %union.tree_node* %138, %139, !dbg !9533
  br i1 %cmp366, label %if.then368, label %if.end388, !dbg !9534

if.then368:                                       ; preds = %land.lhs.true363
  %140 = bitcast %struct.tree_decl_minimal* %137 to %union.tree_node*, !dbg !9534
  %type370 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %137, i64 0, i32 0, i32 2, !dbg !9535
  %141 = bitcast %union.tree_node** %type370 to %struct.tree_common**, !dbg !9535
  %142 = load %struct.tree_common*, %struct.tree_common** %141, align 8, !dbg !9535
  %type372 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %142, i64 0, i32 2, !dbg !9535
  %143 = bitcast %union.tree_node** %type372 to %struct.tree_type**, !dbg !9535
  %144 = load %struct.tree_type*, %struct.tree_type** %143, align 8, !dbg !9535
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %144, i64 0, i32 16, !dbg !9535
  %145 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !9535
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9538
  %cmp374 = icmp eq %union.tree_node* %145, %146, !dbg !9539
  br i1 %cmp374, label %if.end378, label %if.then376, !dbg !9540

if.then376:                                       ; preds = %if.then368
  call void @llvm.dbg.value(metadata %union.tree_node* %140, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call377 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 126, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.119, i64 0, i64 0), %struct.tree_decl_minimal* %137) #6, !dbg !9541
  %.pre26 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9542
  br label %if.end378, !dbg !9541

if.end378:                                        ; preds = %if.then368, %if.then376
  %147 = phi %union.tree_node* [ %140, %if.then368 ], [ %.pre26, %if.then376 ], !dbg !9542
  call void @llvm.dbg.value(metadata %union.tree_node* %147, metadata !9304, metadata !DIExpression()), !dbg !9318
  call void @check_main_parameter_types(%union.tree_node* %147) #6, !dbg !9543
  %148 = load i64*, i64** %125, align 8, !dbg !9544
  %bf.load380 = load i64, i64* %148, align 8, !dbg !9544
  %bf.cast38312 = and i64 %bf.load380, 134217728, !dbg !9544
  %tobool384 = icmp eq i64 %bf.cast38312, 0, !dbg !9544
  br i1 %tobool384, label %if.then385, label %if.end388, !dbg !9546

if.then385:                                       ; preds = %if.end378
  call void @llvm.dbg.value(metadata i64* %148, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call386 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 126, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.120, i64 0, i64 0), i64* %148) #6, !dbg !9547
  br label %if.end388, !dbg !9547

if.end388:                                        ; preds = %if.end378, %if.end361, %if.then385, %land.lhs.true363
  %149 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !9548
  call void @llvm.dbg.value(metadata %union.tree_node* %149, metadata !9304, metadata !DIExpression()), !dbg !9318
  %call389 = call %union.tree_node* @pushdecl(%union.tree_node* %149) #7, !dbg !9549
  store %union.tree_node* %call389, %union.tree_node** @current_function_decl, align 8, !dbg !9550
  call void @push_scope() #7, !dbg !9551
  call void @declare_parm_level() #7, !dbg !9552
  %150 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !9553
  %type391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %150, i64 0, i32 2, !dbg !9553
  %151 = bitcast %union.tree_node** %type391 to %struct.tree_common**, !dbg !9553
  %152 = load %struct.tree_common*, %struct.tree_common** %151, align 8, !dbg !9553
  %type393 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %152, i64 0, i32 2, !dbg !9553
  %153 = load %union.tree_node*, %union.tree_node** %type393, align 8, !dbg !9553
  call void @llvm.dbg.value(metadata %union.tree_node* %153, metadata !9306, metadata !DIExpression()), !dbg !9318
  %call394 = call %union.tree_node* @build_decl_stat(i32 %3, i32 36, %union.tree_node* null, %union.tree_node* %153) #6, !dbg !9554
  call void @llvm.dbg.value(metadata %union.tree_node* %call394, metadata !9307, metadata !DIExpression()), !dbg !9318
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9555
  %154 = bitcast i40* %artificial_flag to i64*, !dbg !9555
  %bf.load396 = load i64, i64* %154, align 8, !dbg !9556
  %bf.set402 = or i64 %bf.load396, 5120, !dbg !9557
  store i64 %bf.set402, i64* %154, align 8, !dbg !9557
  %155 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !9558
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %155, i64 0, i32 3, !dbg !9558
  store %union.tree_node* %call394, %union.tree_node** %result, align 8, !dbg !9559
  call void @start_fname_decls() #6, !dbg !9560
  br label %cleanup, !dbg !9561

cleanup:                                          ; preds = %entry, %if.end388
  %retval.0 = phi i32 [ 1, %if.end388 ], [ 0, %entry ], !dbg !9318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9562
  ret i32 %retval.0, !dbg !9562
}

declare dso_local void @announce_function(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @pedwarn_c99(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_name_in_scope(%union.tree_node* %name, %struct.c_scope* %scope) unnamed_addr #5 !dbg !9563 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !9567, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !9568, metadata !DIExpression()), !dbg !9570
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9571
  %0 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !9571
  %depth1 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %scope, i64 0, i32 5, !dbg !9573
  %1 = bitcast i40* %depth1 to i64*, !dbg !9573
  br label %for.cond, !dbg !9576

for.cond:                                         ; preds = %for.inc, %entry
  %b.0.in = phi %struct.c_binding** [ %0, %entry ], [ %shadowed, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !9577
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !9569, metadata !DIExpression()), !dbg !9570
  %tobool = icmp eq %struct.c_binding* %b.0, null, !dbg !9578
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !9578

for.body:                                         ; preds = %for.cond
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !9579
  %bf.load = load i32, i32* %depth, align 8, !dbg !9579
  %bf.load2 = load i64, i64* %1, align 8, !dbg !9579
  %2 = trunc i64 %bf.load2 to i32, !dbg !9579
  %3 = xor i32 %bf.load, %2, !dbg !9579
  %4 = and i32 %3, 268435455, !dbg !9579
  %cmp = icmp eq i32 %4, 0, !dbg !9579
  br i1 %cmp, label %if.then, label %for.inc, !dbg !9580

if.then:                                          ; preds = %for.body
  %b.0.lcssa3 = phi %struct.c_binding* [ %b.0, %for.body ], !dbg !9577
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa3, i64 0, i32 1, !dbg !9581
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !9581
  br label %cleanup, !dbg !9582

for.inc:                                          ; preds = %for.body
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !9583
  br label %for.cond, !dbg !9584, !llvm.loop !9585

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !9587

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ null, %cleanup.loopexit ], !dbg !9570
  ret %union.tree_node* %retval.0, !dbg !9587
}

declare dso_local void @check_main_parameter_types(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @store_parm_decls_from(%struct.c_arg_info* %arg_info) local_unnamed_addr #5 !dbg !9588 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info, metadata !9592, metadata !DIExpression()), !dbg !9593
  store %struct.c_arg_info* %arg_info, %struct.c_arg_info** @current_function_arg_info, align 8, !dbg !9594
  tail call void @store_parm_decls() #7, !dbg !9595
  ret void, !dbg !9596
}

; Function Attrs: nounwind uwtable
define dso_local void @store_parm_decls() local_unnamed_addr #5 !dbg !9597 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !9604
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9599, metadata !DIExpression()), !dbg !9605
  %1 = load %struct.c_arg_info*, %struct.c_arg_info** @current_function_arg_info, align 8, !dbg !9606
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %1, metadata !9601, metadata !DIExpression()), !dbg !9605
  store %struct.c_arg_info* null, %struct.c_arg_info** @current_function_arg_info, align 8, !dbg !9607
  %types = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %1, i64 0, i32 2, !dbg !9608
  %2 = load %union.tree_node*, %union.tree_node** %types, align 8, !dbg !9608
  %cmp = icmp ne %union.tree_node* %2, null, !dbg !9609
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !9600, metadata !DIExpression()), !dbg !9605
  br i1 %cmp, label %if.then, label %if.else, !dbg !9610

if.then:                                          ; preds = %entry
  tail call fastcc void @store_parm_decls_newstyle(%union.tree_node* %0, %struct.c_arg_info* %1) #7, !dbg !9611
  br label %if.end, !dbg !9611

if.else:                                          ; preds = %entry
  tail call fastcc void @store_parm_decls_oldstyle(%union.tree_node* %0, %struct.c_arg_info* %1) #7, !dbg !9613
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i1 true, i1* @next_is_function_body, align 1, !dbg !9614
  %conv2 = zext i1 %cmp to i32, !dbg !9615
  tail call void @gen_aux_info_record(%union.tree_node* %0, i32 1, i32 0, i32 %conv2) #6, !dbg !9616
  tail call void @allocate_struct_function(%union.tree_node* %0, i8 zeroext 0) #6, !dbg !9617
  %call = tail call %union.tree_node* @push_stmt_list() #6, !dbg !9618
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !9619
  store %union.tree_node* %call, %union.tree_node** %saved_tree, align 8, !dbg !9620
  %call3 = tail call %union.tree_node* @get_pending_sizes() #6, !dbg !9621
  %call4 = tail call %union.tree_node* @nreverse(%union.tree_node* %call3) #6, !dbg !9623
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !9602, metadata !DIExpression()), !dbg !9624
  br label %for.cond, !dbg !9625

for.cond:                                         ; preds = %for.body, %if.end
  %t.0 = phi %union.tree_node* [ %call4, %if.end ], [ %5, %for.body ], !dbg !9626
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9602, metadata !DIExpression()), !dbg !9624
  %tobool5 = icmp eq %union.tree_node* %t.0, null, !dbg !9627
  br i1 %tobool5, label %for.end, label %for.body, !dbg !9627

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9628
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !9628
  %call6 = tail call %union.tree_node* @add_stmt(%union.tree_node* %4) #7, !dbg !9630
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9631
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9631
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9602, metadata !DIExpression()), !dbg !9624
  br label %for.cond, !dbg !9632, !llvm.loop !9633

for.end:                                          ; preds = %for.cond
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9635
  %dont_save_pending_sizes_p = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 20, !dbg !9636
  %bf.load = load i32, i32* %dont_save_pending_sizes_p, align 8, !dbg !9637
  %bf.set = or i32 %bf.load, 8388608, !dbg !9637
  store i32 %bf.set, i32* %dont_save_pending_sizes_p, align 8, !dbg !9637
  ret void, !dbg !9638
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_parm_decls_newstyle(%union.tree_node* %fndecl, %struct.c_arg_info* %arg_info) unnamed_addr #5 !dbg !9639 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9645, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info, metadata !9646, metadata !DIExpression()), !dbg !9648
  %0 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9649
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %0, i64 0, i32 2, !dbg !9651
  %1 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !9651
  %tobool = icmp eq %struct.c_binding* %1, null, !dbg !9649
  br i1 %tobool, label %if.else, label %if.then, !dbg !9652

if.then:                                          ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9653
  %2 = load i32, i32* %locus, align 8, !dbg !9653
  tail call void (i32, i8*, ...) @error_at(i32 %2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.357, i64 0, i64 0)) #6, !dbg !9655
  %call = tail call %union.tree_node* @pop_scope() #7, !dbg !9656
  tail call void @push_scope() #7, !dbg !9657
  br label %if.end10, !dbg !9658

if.else:                                          ; preds = %entry
  %3 = load i32, i32* @input_location, align 4, !dbg !9659
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %3) #6, !dbg !9659
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !9659
  %4 = load i8, i8* %sysp, align 8, !dbg !9659
  %cmp = icmp ne i8 %4, 0, !dbg !9659
  %5 = load %struct.c_scope*, %struct.c_scope** @current_function_scope, align 8, !dbg !9661
  %tobool2 = icmp ne %struct.c_scope* %5, null, !dbg !9661
  %or.cond = or i1 %cmp, %tobool2, !dbg !9662
  br i1 %or.cond, label %if.end10, label %land.lhs.true3, !dbg !9662

land.lhs.true3:                                   ; preds = %if.else
  %types = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 2, !dbg !9663
  %6 = load %union.tree_node*, %union.tree_node** %types, align 8, !dbg !9663
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9664
  %cmp4 = icmp eq %union.tree_node* %6, %7, !dbg !9665
  br i1 %cmp4, label %if.end10, label %if.then6, !dbg !9666

if.then6:                                         ; preds = %land.lhs.true3
  %locus8 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9667
  %8 = load i32, i32* %locus8, align 8, !dbg !9667
  %call9 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %8, i32 202, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.358, i64 0, i64 0)) #6, !dbg !9668
  br label %if.end10, !dbg !9668

if.end10:                                         ; preds = %land.lhs.true3, %if.else, %if.then6, %if.then
  %parms = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 0, !dbg !9669
  br label %for.cond, !dbg !9671

for.cond:                                         ; preds = %for.inc, %if.end10
  %decl.0.in = phi %union.tree_node** [ %parms, %if.end10 ], [ %chain, %for.inc ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !9672
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !9647, metadata !DIExpression()), !dbg !9648
  %tobool11 = icmp eq %union.tree_node* %decl.0, null, !dbg !9673
  br i1 %tobool11, label %for.end, label %for.body, !dbg !9673

for.body:                                         ; preds = %for.cond
  %9 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !9674
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9677
  %10 = bitcast %union.tree_node** %context to i64*, !dbg !9678
  store i64 %9, i64* %10, align 8, !dbg !9678
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9679
  %11 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9679
  %tobool14 = icmp eq %union.tree_node* %11, null, !dbg !9679
  br i1 %tobool14, label %if.else21, label %if.then15, !dbg !9681

if.then15:                                        ; preds = %for.body
  %12 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9682
  call fastcc void @bind(%union.tree_node* nonnull %11, %union.tree_node* nonnull %decl.0, %struct.c_scope* %12, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !9684
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9685
  %bf.load = load i64, i64* %13, align 8, !dbg !9685
  %bf.cast2 = and i64 %bf.load, 16777216, !dbg !9685
  %tobool18 = icmp eq i64 %bf.cast2, 0, !dbg !9685
  br i1 %tobool18, label %if.then19, label %for.inc, !dbg !9687

if.then19:                                        ; preds = %if.then15
  call fastcc void @warn_if_shadowing(%union.tree_node* nonnull %decl.0) #7, !dbg !9688
  br label %for.inc, !dbg !9688

if.else21:                                        ; preds = %for.body
  %locus23 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9689
  %14 = load i32, i32* %locus23, align 8, !dbg !9689
  call void (i32, i8*, ...) @error_at(i32 %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.359, i64 0, i64 0)) #6, !dbg !9690
  br label %for.inc

for.inc:                                          ; preds = %if.then15, %if.else21, %if.then19
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9691
  br label %for.cond, !dbg !9692, !llvm.loop !9693

for.end:                                          ; preds = %for.cond
  %15 = bitcast %struct.c_arg_info* %arg_info to i64*, !dbg !9695
  %16 = load i64, i64* %15, align 8, !dbg !9695
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !9696
  %17 = bitcast %union.tree_node** %arguments to i64*, !dbg !9697
  store i64 %16, i64* %17, align 8, !dbg !9697
  %others = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 3, !dbg !9698
  br label %for.cond26, !dbg !9700

for.cond26:                                       ; preds = %for.inc45, %for.end
  %decl.1.in = phi %union.tree_node** [ %others, %for.end ], [ %chain47, %for.inc45 ]
  %decl.1 = load %union.tree_node*, %union.tree_node** %decl.1.in, align 8, !dbg !9701
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.1, metadata !9647, metadata !DIExpression()), !dbg !9648
  %tobool27 = icmp eq %union.tree_node* %decl.1, null, !dbg !9702
  br i1 %tobool27, label %for.end48, label %for.body28, !dbg !9702

for.body28:                                       ; preds = %for.cond26
  %18 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !9703
  %context30 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9706
  %19 = bitcast %union.tree_node** %context30 to i64*, !dbg !9707
  store i64 %18, i64* %19, align 8, !dbg !9707
  %name32 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9708
  %20 = load %union.tree_node*, %union.tree_node** %name32, align 8, !dbg !9708
  %tobool33 = icmp eq %union.tree_node* %20, null, !dbg !9708
  br i1 %tobool33, label %for.inc45, label %if.then34, !dbg !9710

if.then34:                                        ; preds = %for.body28
  %21 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9711
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9712
  %bf.load38 = load i64, i64* %22, align 8, !dbg !9712
  %bf.cast401 = and i64 %bf.load38, 65535, !dbg !9713
  %cmp41 = icmp eq i64 %bf.cast401, 29, !dbg !9713
  %conv43 = zext i1 %cmp41 to i8, !dbg !9714
  call fastcc void @bind(%union.tree_node* nonnull %20, %union.tree_node* nonnull %decl.1, %struct.c_scope* %21, i8 zeroext 0, i8 zeroext %conv43, i32 0) #7, !dbg !9715
  br label %for.inc45, !dbg !9715

for.inc45:                                        ; preds = %for.body28, %if.then34
  %chain47 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9716
  br label %for.cond26, !dbg !9717, !llvm.loop !9718

for.end48:                                        ; preds = %for.cond26
  %tags = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 1, !dbg !9720
  br label %for.cond49, !dbg !9722

for.cond49:                                       ; preds = %for.inc58, %for.end48
  %decl.2.in = phi %union.tree_node** [ %tags, %for.end48 ], [ %chain60, %for.inc58 ]
  %decl.2 = load %union.tree_node*, %union.tree_node** %decl.2.in, align 8, !dbg !9723
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.2, metadata !9647, metadata !DIExpression()), !dbg !9648
  %tobool50 = icmp eq %union.tree_node* %decl.2, null, !dbg !9724
  br i1 %tobool50, label %for.end61, label %for.body51, !dbg !9724

for.body51:                                       ; preds = %for.cond49
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9725
  %23 = bitcast i32* %purpose to %union.tree_node**, !dbg !9725
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !9725
  %tobool52 = icmp eq %union.tree_node* %24, null, !dbg !9725
  br i1 %tobool52, label %for.inc58, label %if.then53, !dbg !9728

if.then53:                                        ; preds = %for.body51
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9729
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !9729
  %27 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9730
  call fastcc void @bind(%union.tree_node* nonnull %24, %union.tree_node* %26, %struct.c_scope* %27, i8 zeroext 0, i8 zeroext 0, i32 0) #7, !dbg !9731
  br label %for.inc58, !dbg !9731

for.inc58:                                        ; preds = %for.body51, %if.then53
  %chain60 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9732
  br label %for.cond49, !dbg !9733, !llvm.loop !9734

for.end61:                                        ; preds = %for.cond49
  ret void, !dbg !9736
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_parm_decls_oldstyle(%union.tree_node* %fndecl, %struct.c_arg_info* %arg_info) unnamed_addr #5 !dbg !9737 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9739, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info, metadata !9740, metadata !DIExpression()), !dbg !9754
  %parms = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 0, !dbg !9755
  %0 = load %union.tree_node*, %union.tree_node** %parms, align 8, !dbg !9755
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9745, metadata !DIExpression()), !dbg !9754
  %call = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !9756
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call, metadata !9746, metadata !DIExpression()), !dbg !9754
  %1 = load i32, i32* @input_location, align 4, !dbg !9757
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %1) #6, !dbg !9757
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !9757
  %2 = load i8, i8* %sysp, align 8, !dbg !9757
  %cmp = icmp eq i8 %2, 0, !dbg !9757
  br i1 %cmp, label %if.then, label %if.end, !dbg !9759

if.then:                                          ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9760
  %3 = load i32, i32* %locus, align 8, !dbg !9760
  %call2 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 148, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.360, i64 0, i64 0)) #6, !dbg !9761
  br label %if.end, !dbg !9761

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9742, metadata !DIExpression()), !dbg !9754
  %locus52 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9762
  br label %for.cond, !dbg !9768

for.cond:                                         ; preds = %for.inc, %if.end
  %parm.0 = phi %union.tree_node* [ %0, %if.end ], [ %37, %for.inc ], !dbg !9769
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !9742, metadata !DIExpression()), !dbg !9754
  %tobool = icmp eq %union.tree_node* %parm.0, null, !dbg !9770
  br i1 %tobool, label %for.end, label %for.body, !dbg !9770

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9771
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9771
  %cmp3 = icmp eq %union.tree_node* %5, null, !dbg !9773
  br i1 %cmp3, label %if.then5, label %if.end9, !dbg !9774

if.then5:                                         ; preds = %for.body
  %6 = load i32, i32* %locus52, align 8, !dbg !9775
  call void (i32, i8*, ...) @error_at(i32 %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.361, i64 0, i64 0)) #6, !dbg !9777
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9778
  %7 = bitcast i32* %purpose to %union.tree_node**, !dbg !9778
  store %union.tree_node* null, %union.tree_node** %7, align 8, !dbg !9779
  br label %for.inc, !dbg !9780

if.end9:                                          ; preds = %for.body
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9781
  %8 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !9781
  %9 = load %struct.c_binding*, %struct.c_binding** %8, align 8, !dbg !9781
  call void @llvm.dbg.value(metadata %struct.c_binding* %9, metadata !9741, metadata !DIExpression()), !dbg !9754
  %tobool12 = icmp eq %struct.c_binding* %9, null, !dbg !9782
  br i1 %tobool12, label %if.else50, label %land.lhs.true, !dbg !9783

land.lhs.true:                                    ; preds = %if.end9
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %9, i64 0, i32 5, !dbg !9784
  %bf.load = load i32, i32* %depth, align 8, !dbg !9784
  %10 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9784
  %depth13 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %10, i64 0, i32 5, !dbg !9784
  %11 = bitcast i40* %depth13 to i64*, !dbg !9784
  %bf.load14 = load i64, i64* %11, align 8, !dbg !9784
  %12 = trunc i64 %bf.load14 to i32, !dbg !9784
  %13 = xor i32 %bf.load, %12, !dbg !9784
  %14 = and i32 %13, 268435455, !dbg !9784
  %cmp16 = icmp eq i32 %14, 0, !dbg !9784
  br i1 %cmp16, label %if.then18, label %if.else50, !dbg !9785

if.then18:                                        ; preds = %land.lhs.true
  %decl19 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %9, i64 0, i32 1, !dbg !9786
  %15 = load %union.tree_node*, %union.tree_node** %decl19, align 8, !dbg !9786
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !9743, metadata !DIExpression()), !dbg !9754
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9788
  %bf.load20 = load i64, i64* %16, align 8, !dbg !9788
  %bf.cast226 = and i64 %bf.load20, 65535, !dbg !9790
  %cmp23 = icmp eq i64 %bf.cast226, 34, !dbg !9790
  br i1 %cmp23, label %if.else, label %if.then25, !dbg !9791

if.then25:                                        ; preds = %if.then18
  %locus27 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9792
  %17 = load i32, i32* %locus27, align 8, !dbg !9792
  call void (i32, i8*, ...) @error_at(i32 %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.362, i64 0, i64 0), %union.tree_node* %15) #6, !dbg !9793
  br label %if.end49, !dbg !9793

if.else:                                          ; preds = %if.then18
  %18 = bitcast %union.tree_node* %15 to i8*, !dbg !9794
  %call28 = call i32 @pointer_set_contains(%struct.pointer_set_t* %call, i8* %18) #6, !dbg !9796
  %tobool29 = icmp eq i32 %call28, 0, !dbg !9796
  br i1 %tobool29, label %if.else35, label %if.then30, !dbg !9797

if.then30:                                        ; preds = %if.else
  %locus32 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9798
  %19 = load i32, i32* %locus32, align 8, !dbg !9798
  call void (i32, i8*, ...) @error_at(i32 %19, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.363, i64 0, i64 0), %union.tree_node* %15) #6, !dbg !9800
  %purpose34 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9801
  %20 = bitcast i32* %purpose34 to %union.tree_node**, !dbg !9801
  store %union.tree_node* null, %union.tree_node** %20, align 8, !dbg !9802
  br label %for.inc, !dbg !9803

if.else35:                                        ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9804
  %21 = bitcast %union.tree_node** %type to i64**, !dbg !9804
  %22 = load i64*, i64** %21, align 8, !dbg !9804
  %bf.load37 = load i64, i64* %22, align 8, !dbg !9804
  %bf.cast397 = and i64 %bf.load37, 65535, !dbg !9804
  %cmp40 = icmp eq i64 %bf.cast397, 19, !dbg !9804
  br i1 %cmp40, label %if.then42, label %if.end49, !dbg !9806

if.then42:                                        ; preds = %if.else35
  %locus44 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9807
  %23 = load i32, i32* %locus44, align 8, !dbg !9807
  call void (i32, i8*, ...) @error_at(i32 %23, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.364, i64 0, i64 0), %union.tree_node* %15) #6, !dbg !9809
  %24 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !9810
  %25 = bitcast %union.tree_node** %type to i64*, !dbg !9811
  store i64 %24, i64* %25, align 8, !dbg !9811
  %26 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !9812
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9813
  %27 = bitcast %union.tree_node** %initial to i64*, !dbg !9814
  store i64 %26, i64* %27, align 8, !dbg !9814
  call void @layout_decl(%union.tree_node* %15, i32 0) #6, !dbg !9815
  br label %if.end49, !dbg !9816

if.end49:                                         ; preds = %if.then42, %if.else35, %if.then25
  call fastcc void @warn_if_shadowing(%union.tree_node* %15) #7, !dbg !9817
  br label %if.end71, !dbg !9818

if.else50:                                        ; preds = %if.end9, %land.lhs.true
  %28 = load i32, i32* %locus52, align 8, !dbg !9819
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9819
  %call55 = call %union.tree_node* @build_decl_stat(i32 %28, i32 34, %union.tree_node* nonnull %5, %union.tree_node* %29) #6, !dbg !9819
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !9743, metadata !DIExpression()), !dbg !9754
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9820
  %30 = bitcast %union.tree_node** %type57 to i64*, !dbg !9820
  %31 = load i64, i64* %30, align 8, !dbg !9820
  %initial59 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9821
  %32 = bitcast %union.tree_node** %initial59 to i64*, !dbg !9822
  store i64 %31, i64* %32, align 8, !dbg !9822
  %call60 = call %union.tree_node* @pushdecl(%union.tree_node* %call55) #7, !dbg !9823
  call fastcc void @warn_if_shadowing(%union.tree_node* %call55) #7, !dbg !9824
  %33 = load i32, i32* @flag_isoc99, align 4, !dbg !9825
  %tobool61 = icmp eq i32 %33, 0, !dbg !9825
  %locus64 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9827
  %34 = load i32, i32* %locus64, align 8, !dbg !9827
  br i1 %tobool61, label %if.else66, label %if.then62, !dbg !9828

if.then62:                                        ; preds = %if.else50
  %call65 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %34, i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.365, i64 0, i64 0), %union.tree_node* %call55) #6, !dbg !9829
  br label %if.end71, !dbg !9829

if.else66:                                        ; preds = %if.else50
  %call69 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %34, i32 134, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.365, i64 0, i64 0), %union.tree_node* %call55) #6, !dbg !9830
  br label %if.end71

if.end71:                                         ; preds = %if.then62, %if.else66, %if.end49
  %decl.0 = phi %union.tree_node* [ %15, %if.end49 ], [ %call55, %if.else66 ], [ %call55, %if.then62 ], !dbg !9831
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !9743, metadata !DIExpression()), !dbg !9754
  %purpose73 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9832
  %35 = bitcast i32* %purpose73 to %union.tree_node**, !dbg !9832
  store %union.tree_node* %decl.0, %union.tree_node** %35, align 8, !dbg !9833
  %36 = bitcast %union.tree_node* %decl.0 to i8*, !dbg !9834
  %call74 = call i32 @pointer_set_insert(%struct.pointer_set_t* %call, i8* %36) #6, !dbg !9835
  br label %for.inc, !dbg !9836

for.inc:                                          ; preds = %if.end71, %if.then30, %if.then5
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9837
  %37 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9837
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !9742, metadata !DIExpression()), !dbg !9754
  br label %for.cond, !dbg !9838, !llvm.loop !9839

for.end:                                          ; preds = %for.cond
  %38 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !9841
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %38, i64 0, i32 2, !dbg !9843
  br label %for.cond76, !dbg !9844

for.cond76:                                       ; preds = %for.inc112, %for.end
  %parmids.0 = phi %union.tree_node* [ %0, %for.end ], [ %parmids.2, %for.inc112 ], !dbg !9845
  %b.0.in = phi %struct.c_binding** [ %bindings, %for.end ], [ %prev, %for.inc112 ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !9846
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !9741, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.0, metadata !9745, metadata !DIExpression()), !dbg !9754
  %tobool77 = icmp eq %struct.c_binding* %b.0, null, !dbg !9847
  br i1 %tobool77, label %for.end113, label %for.body78, !dbg !9847

for.body78:                                       ; preds = %for.cond76
  %decl79 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !9848
  %39 = load %union.tree_node*, %union.tree_node** %decl79, align 8, !dbg !9848
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !9742, metadata !DIExpression()), !dbg !9754
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9851
  %bf.load81 = load i64, i64* %40, align 8, !dbg !9851
  %bf.cast835 = and i64 %bf.load81, 65535, !dbg !9853
  %cmp84 = icmp eq i64 %bf.cast835, 34, !dbg !9853
  br i1 %cmp84, label %if.end87, label %for.inc112, !dbg !9854

if.end87:                                         ; preds = %for.body78
  %type89 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9855
  %41 = load %union.tree_node*, %union.tree_node** %type89, align 8, !dbg !9855
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9857
  %cmp90 = icmp eq %union.tree_node* %41, %42, !dbg !9858
  br i1 %cmp90, label %if.end103, label %land.lhs.true92, !dbg !9859

land.lhs.true92:                                  ; preds = %if.end87
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9860
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !9860
  %cmp96 = icmp eq %union.tree_node* %44, null, !dbg !9860
  br i1 %cmp96, label %if.then98, label %if.end103, !dbg !9861

if.then98:                                        ; preds = %land.lhs.true92
  %locus100 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9862
  %45 = load i32, i32* %locus100, align 8, !dbg !9862
  call void (i32, i8*, ...) @error_at(i32 %45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.366, i64 0, i64 0), %union.tree_node* %39) #6, !dbg !9864
  %46 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !9865
  %47 = bitcast %union.tree_node** %type89 to i64*, !dbg !9866
  store i64 %46, i64* %47, align 8, !dbg !9866
  br label %if.end103, !dbg !9867

if.end103:                                        ; preds = %land.lhs.true92, %if.end87, %if.then98
  %48 = bitcast %union.tree_node* %39 to i8*, !dbg !9868
  %call104 = call i32 @pointer_set_contains(%struct.pointer_set_t* %call, i8* %48) #6, !dbg !9870
  %tobool105 = icmp eq i32 %call104, 0, !dbg !9870
  br i1 %tobool105, label %if.then106, label %for.inc112, !dbg !9871

if.then106:                                       ; preds = %if.end103
  %locus108 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9872
  %49 = load i32, i32* %locus108, align 8, !dbg !9872
  call void (i32, i8*, ...) @error_at(i32 %49, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.367, i64 0, i64 0), %union.tree_node* %39) #6, !dbg !9874
  %call109 = call %union.tree_node* @tree_cons_stat(%union.tree_node* %39, %union.tree_node* null, %union.tree_node* null) #6, !dbg !9875
  %call110 = call %union.tree_node* @chainon(%union.tree_node* %parmids.0, %union.tree_node* %call109) #6, !dbg !9876
  call void @llvm.dbg.value(metadata %union.tree_node* %call110, metadata !9745, metadata !DIExpression()), !dbg !9754
  br label %for.inc112, !dbg !9877

for.inc112:                                       ; preds = %if.end103, %for.body78, %if.then106
  %parmids.2 = phi %union.tree_node* [ %parmids.0, %for.body78 ], [ %parmids.0, %if.end103 ], [ %call110, %if.then106 ], !dbg !9845
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.2, metadata !9745, metadata !DIExpression()), !dbg !9754
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !9878
  br label %for.cond76, !dbg !9879, !llvm.loop !9880

for.end113:                                       ; preds = %for.cond76
  %parmids.0.lcssa = phi %union.tree_node* [ %parmids.0, %for.cond76 ], !dbg !9845
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.0.lcssa, metadata !9745, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.0.lcssa, metadata !9745, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.0.lcssa, metadata !9745, metadata !DIExpression()), !dbg !9754
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 2, !dbg !9882
  store %union.tree_node* null, %union.tree_node** %arguments, align 8, !dbg !9883
  call void @llvm.dbg.value(metadata %union.tree_node* %parmids.0.lcssa, metadata !9742, metadata !DIExpression()), !dbg !9754
  br label %for.cond114, !dbg !9884

for.cond114:                                      ; preds = %for.inc122, %for.end113
  %parm.1 = phi %union.tree_node* [ %parmids.0.lcssa, %for.end113 ], [ %52, %for.inc122 ], !dbg !9886
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.1, metadata !9742, metadata !DIExpression()), !dbg !9754
  %cond = icmp eq %union.tree_node* %parm.1, null, !dbg !9887
  br i1 %cond, label %if.end158.loopexit, label %for.body116, !dbg !9887

for.body116:                                      ; preds = %for.cond114
  %purpose118 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9888
  %50 = bitcast i32* %purpose118 to %union.tree_node**, !dbg !9888
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !9888
  %tobool119 = icmp eq %union.tree_node* %51, null, !dbg !9888
  br i1 %tobool119, label %for.inc122, label %for.end125, !dbg !9891

for.inc122:                                       ; preds = %for.body116
  %chain124 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9892
  %52 = load %union.tree_node*, %union.tree_node** %chain124, align 8, !dbg !9892
  call void @llvm.dbg.value(metadata %union.tree_node* %52, metadata !9742, metadata !DIExpression()), !dbg !9754
  br label %for.cond114, !dbg !9893, !llvm.loop !9894

for.end125:                                       ; preds = %for.body116
  %.lcssa = phi %union.tree_node* [ %51, %for.body116 ], !dbg !9888
  %parm.1.lcssa11 = phi %union.tree_node* [ %parm.1, %for.body116 ], !dbg !9886
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.1.lcssa11, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.1.lcssa11, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.1.lcssa11, metadata !9742, metadata !DIExpression()), !dbg !9754
  br i1 false, label %for.end125.if.end158_crit_edge, label %if.then131, !dbg !9896

for.end125.if.end158_crit_edge:                   ; preds = %for.end125
  br label %if.end158, !dbg !9896

if.then131:                                       ; preds = %for.end125
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !9744, metadata !DIExpression()), !dbg !9754
  store %union.tree_node* %.lcssa, %union.tree_node** %arguments, align 8, !dbg !9897
  br label %for.cond138, !dbg !9900

for.cond138:                                      ; preds = %for.inc152, %if.then131
  %last.0 = phi %union.tree_node* [ %.lcssa, %if.then131 ], [ %last.1, %for.inc152 ], !dbg !9902
  %parm.1.pn = phi %union.tree_node* [ %parm.1.lcssa11, %if.then131 ], [ %parm.2, %for.inc152 ]
  %parm.2.in = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.1.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9903
  %parm.2 = load %union.tree_node*, %union.tree_node** %parm.2.in, align 8, !dbg !9903
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.2, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0, metadata !9744, metadata !DIExpression()), !dbg !9754
  %tobool139 = icmp eq %union.tree_node* %parm.2, null, !dbg !9904
  br i1 %tobool139, label %for.end155, label %for.body140, !dbg !9904

for.body140:                                      ; preds = %for.cond138
  %purpose142 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9905
  %53 = bitcast i32* %purpose142 to %union.tree_node**, !dbg !9905
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !9905
  %tobool143 = icmp eq %union.tree_node* %54, null, !dbg !9905
  br i1 %tobool143, label %for.inc152, label %if.then144, !dbg !9908

if.then144:                                       ; preds = %for.body140
  %55 = ptrtoint %union.tree_node* %54 to i64, !dbg !9908
  %chain148 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9909
  %56 = bitcast %union.tree_node** %chain148 to i64*, !dbg !9911
  store i64 %55, i64* %56, align 8, !dbg !9911
  %57 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !9912
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !9744, metadata !DIExpression()), !dbg !9754
  br label %for.inc152, !dbg !9913

for.inc152:                                       ; preds = %for.body140, %if.then144
  %last.1 = phi %union.tree_node* [ %57, %if.then144 ], [ %last.0, %for.body140 ], !dbg !9902
  call void @llvm.dbg.value(metadata %union.tree_node* %last.1, metadata !9744, metadata !DIExpression()), !dbg !9754
  br label %for.cond138, !dbg !9914, !llvm.loop !9915

for.end155:                                       ; preds = %for.cond138
  %last.0.lcssa = phi %union.tree_node* [ %last.0, %for.cond138 ], !dbg !9902
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !9744, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !9744, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !9744, metadata !DIExpression()), !dbg !9754
  %chain157 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9917
  store %union.tree_node* null, %union.tree_node** %chain157, align 8, !dbg !9918
  br label %if.end158, !dbg !9919

if.end158.loopexit:                               ; preds = %for.cond114
  br label %if.end158, !dbg !9920

if.end158:                                        ; preds = %for.end125.if.end158_crit_edge, %if.end158.loopexit, %for.end155
  call void @pointer_set_destroy(%struct.pointer_set_t* %call) #6, !dbg !9920
  %58 = load %union.tree_node*, %union.tree_node** @current_function_prototype_arg_types, align 8, !dbg !9921
  %tobool159 = icmp eq %union.tree_node* %58, null, !dbg !9921
  %59 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !9922
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !9742, metadata !DIExpression()), !dbg !9754
  br i1 %tobool159, label %for.cond319.preheader, label %if.then160, !dbg !9923

for.cond319.preheader:                            ; preds = %if.end158
  br label %for.cond319, !dbg !9924

if.then160:                                       ; preds = %if.end158
  br label %for.cond164, !dbg !9926

for.cond164:                                      ; preds = %for.inc305, %if.then160
  %type161.0 = phi %union.tree_node* [ %58, %if.then160 ], [ %type161.0.pre, %for.inc305 ], !dbg !9928
  %parm.3 = phi %union.tree_node* [ %59, %if.then160 ], [ %102, %for.inc305 ], !dbg !9928
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.3, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %type161.0, metadata !9747, metadata !DIExpression()), !dbg !9929
  %tobool165 = icmp eq %union.tree_node* %parm.3, null, !dbg !9930
  br i1 %tobool165, label %lor.rhs, label %for.body177, !dbg !9932

lor.rhs:                                          ; preds = %for.cond164
  %tobool166 = icmp eq %union.tree_node* %type161.0, null, !dbg !9933
  br i1 %tobool166, label %for.end310.loopexit, label %land.lhs.true167, !dbg !9934

land.lhs.true167:                                 ; preds = %lor.rhs
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %type161.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9935
  %61 = load %union.tree_node*, %union.tree_node** %60, align 8, !dbg !9935
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9936
  %cmp170 = icmp eq %union.tree_node* %61, %62, !dbg !9937
  br i1 %cmp170, label %for.end310.loopexit, label %land.rhs, !dbg !9938

land.rhs:                                         ; preds = %land.lhs.true167
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %61, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9939
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !9939
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9940
  %cmp175 = icmp eq %union.tree_node* %64, %65, !dbg !9941
  br i1 %cmp175, label %for.end310.loopexit, label %for.body177, !dbg !9942

for.body177:                                      ; preds = %land.rhs, %for.cond164
  %cmp180 = icmp eq %union.tree_node* %type161.0, null, !dbg !9943
  %or.cond = or i1 %tobool165, %cmp180, !dbg !9946
  br i1 %or.cond, label %if.then189, label %lor.lhs.false182, !dbg !9946

lor.lhs.false182:                                 ; preds = %for.body177
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %type161.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9947
  %67 = bitcast %union.tree_node** %66 to %struct.tree_type**, !dbg !9947
  %68 = load %struct.tree_type*, %struct.tree_type** %67, align 8, !dbg !9947
  %main_variant186 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %68, i64 0, i32 16, !dbg !9947
  %69 = load %union.tree_node*, %union.tree_node** %main_variant186, align 8, !dbg !9947
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9948
  %cmp187 = icmp eq %union.tree_node* %69, %70, !dbg !9949
  br i1 %cmp187, label %if.then189, label %if.end197, !dbg !9950

if.then189:                                       ; preds = %lor.lhs.false182, %for.body177
  %71 = load i8, i8* @current_function_prototype_built_in, align 1, !dbg !9951
  %tobool190 = icmp eq i8 %71, 0, !dbg !9951
  br i1 %tobool190, label %if.else195, label %if.then191, !dbg !9954

if.then191:                                       ; preds = %if.then189
  %72 = load i32, i32* %locus52, align 8, !dbg !9955
  %call194 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %72, i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.368, i64 0, i64 0)) #6, !dbg !9956
  br label %for.end310, !dbg !9956

if.else195:                                       ; preds = %if.then189
  %73 = load i32, i32* @input_location, align 4, !dbg !9957
  call void (i32, i8*, ...) @error_at(i32 %73, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.369, i64 0, i64 0)) #6, !dbg !9959
  %74 = load i32, i32* @current_function_prototype_locus, align 4, !dbg !9960
  call void (i32, i8*, ...) @error_at(i32 %74, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i64 0, i64 0)) #6, !dbg !9961
  br label %for.end310

if.end197:                                        ; preds = %lor.lhs.false182
  %type199 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9962
  %75 = load %union.tree_node*, %union.tree_node** %type199, align 8, !dbg !9962
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9964
  %cmp200 = icmp eq %union.tree_node* %75, %76, !dbg !9965
  br i1 %cmp200, label %for.inc305, label %land.lhs.true202, !dbg !9966

land.lhs.true202:                                 ; preds = %if.end197
  %type204 = getelementptr inbounds %union.tree_node, %union.tree_node* %type161.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9967
  %77 = load %union.tree_node*, %union.tree_node** %type204, align 8, !dbg !9967
  %cmp205 = icmp eq %union.tree_node* %77, %76, !dbg !9968
  br i1 %cmp205, label %for.inc305, label %land.lhs.true207, !dbg !9969

land.lhs.true207:                                 ; preds = %land.lhs.true202
  %initial209 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9970
  %78 = bitcast %union.tree_node** %initial209 to %struct.tree_type**, !dbg !9970
  %79 = load %struct.tree_type*, %struct.tree_type** %78, align 8, !dbg !9970
  %main_variant211 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %79, i64 0, i32 16, !dbg !9970
  %80 = load %union.tree_node*, %union.tree_node** %main_variant211, align 8, !dbg !9970
  %call216 = call i32 @comptypes(%union.tree_node* %80, %union.tree_node* %69) #6, !dbg !9971
  %tobool217 = icmp eq i32 %call216, 0, !dbg !9971
  br i1 %tobool217, label %if.then218, label %for.inc305, !dbg !9972

if.then218:                                       ; preds = %land.lhs.true207
  %81 = bitcast %union.tree_node** %type199 to %struct.tree_type**, !dbg !9973
  %82 = load %struct.tree_type*, %struct.tree_type** %81, align 8, !dbg !9973
  %main_variant222 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %82, i64 0, i32 16, !dbg !9973
  %83 = load %union.tree_node*, %union.tree_node** %main_variant222, align 8, !dbg !9973
  %84 = load %struct.tree_type*, %struct.tree_type** %67, align 8, !dbg !9976
  %main_variant226 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %84, i64 0, i32 16, !dbg !9976
  %85 = load %union.tree_node*, %union.tree_node** %main_variant226, align 8, !dbg !9976
  %cmp227 = icmp eq %union.tree_node* %83, %85, !dbg !9977
  br i1 %cmp227, label %if.then229, label %if.else293, !dbg !9978

if.then229:                                       ; preds = %if.then218
  %86 = ptrtoint %struct.tree_type* %82 to i64, !dbg !9978
  %87 = bitcast %union.tree_node** %initial209 to i64*, !dbg !9979
  store i64 %86, i64* %87, align 8, !dbg !9979
  %88 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 1), align 8, !dbg !9981
  %89 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !9983
  %type235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %89, i64 0, i32 2, !dbg !9983
  %90 = load %union.tree_node*, %union.tree_node** %type235, align 8, !dbg !9983
  %call236 = call zeroext i8 %88(%union.tree_node* %90) #6, !dbg !9984
  %tobool238 = icmp eq i8 %call236, 0, !dbg !9984
  br i1 %tobool238, label %if.end281, label %land.lhs.true239, !dbg !9985

land.lhs.true239:                                 ; preds = %if.then229
  %91 = bitcast %union.tree_node** %type199 to i64**, !dbg !9986
  %92 = load i64*, i64** %91, align 8, !dbg !9986
  %bf.load243 = load i64, i64* %92, align 8, !dbg !9986
  %bf.cast2452 = and i64 %bf.load243, 65535, !dbg !9986
  %cmp246 = icmp eq i64 %bf.cast2452, 6, !dbg !9986
  %93 = bitcast i64* %92 to %struct.tree_type*, !dbg !9986
  br i1 %cmp246, label %land.lhs.true266, label %lor.lhs.false248, !dbg !9986

lor.lhs.false248:                                 ; preds = %land.lhs.true239
  %cmp255 = icmp eq i64 %bf.cast2452, 7, !dbg !9986
  br i1 %cmp255, label %land.lhs.true266, label %lor.lhs.false257, !dbg !9986

lor.lhs.false257:                                 ; preds = %lor.lhs.false248
  %cmp264 = icmp eq i64 %bf.cast2452, 8, !dbg !9986
  br i1 %cmp264, label %land.lhs.true266, label %if.end281, !dbg !9987

land.lhs.true266:                                 ; preds = %lor.lhs.false257, %lor.lhs.false248, %land.lhs.true239
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %93, i64 0, i32 6, !dbg !9988
  %bf.load270 = load i32, i32* %precision, align 4, !dbg !9988
  %bf.clear271 = and i32 %bf.load270, 1023, !dbg !9988
  %94 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !9989
  %precision273 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %94, i64 0, i32 6, !dbg !9989
  %bf.load274 = load i32, i32* %precision273, align 4, !dbg !9989
  %bf.clear275 = and i32 %bf.load274, 1023, !dbg !9989
  %cmp276 = icmp ult i32 %bf.clear271, %bf.clear275, !dbg !9990
  br i1 %cmp276, label %if.then278, label %if.end281, !dbg !9991

if.then278:                                       ; preds = %land.lhs.true266
  %95 = ptrtoint %struct.tree_type* %94 to i64, !dbg !9991
  store i64 %95, i64* %87, align 8, !dbg !9992
  br label %if.end281, !dbg !9993

if.end281:                                        ; preds = %if.then229, %if.then278, %land.lhs.true266, %lor.lhs.false257
  %96 = load i8, i8* @current_function_prototype_built_in, align 1, !dbg !9994
  %tobool282 = icmp eq i8 %96, 0, !dbg !9994
  %locus285 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9996
  %97 = load i32, i32* %locus285, align 8, !dbg !9996
  br i1 %tobool282, label %if.else287, label %if.then283, !dbg !9997

if.then283:                                       ; preds = %if.end281
  %call286 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %97, i32 834, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.371, i64 0, i64 0), %union.tree_node* %parm.3) #6, !dbg !9998
  br label %for.inc305, !dbg !9998

if.else287:                                       ; preds = %if.end281
  %call290 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %97, i32 834, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.372, i64 0, i64 0), %union.tree_node* %parm.3) #6, !dbg !9999
  %98 = load i32, i32* @current_function_prototype_locus, align 4, !dbg !10001
  %call291 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %98, i32 834, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i64 0, i64 0)) #6, !dbg !10002
  br label %for.inc305

if.else293:                                       ; preds = %if.then218
  %99 = load i8, i8* @current_function_prototype_built_in, align 1, !dbg !10003
  %tobool294 = icmp eq i8 %99, 0, !dbg !10003
  %locus297 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10006
  %100 = load i32, i32* %locus297, align 8, !dbg !10006
  br i1 %tobool294, label %if.else299, label %if.then295, !dbg !10007

if.then295:                                       ; preds = %if.else293
  %call298 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %100, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.373, i64 0, i64 0), %union.tree_node* %parm.3) #6, !dbg !10008
  br label %for.inc305, !dbg !10008

if.else299:                                       ; preds = %if.else293
  call void (i32, i8*, ...) @error_at(i32 %100, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.374, i64 0, i64 0), %union.tree_node* %parm.3) #6, !dbg !10009
  %101 = load i32, i32* @current_function_prototype_locus, align 4, !dbg !10011
  call void (i32, i8*, ...) @error_at(i32 %101, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i64 0, i64 0)) #6, !dbg !10012
  br label %for.inc305

for.inc305:                                       ; preds = %land.lhs.true207, %land.lhs.true202, %if.end197, %if.then295, %if.else299, %if.then283, %if.else287
  %chain307 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10013
  %102 = load %union.tree_node*, %union.tree_node** %chain307, align 8, !dbg !10013
  call void @llvm.dbg.value(metadata %union.tree_node* %102, metadata !9742, metadata !DIExpression()), !dbg !9754
  %chain309 = getelementptr inbounds %union.tree_node, %union.tree_node* %type161.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10014
  %type161.0.pre = load %union.tree_node*, %union.tree_node** %chain309, align 8, !dbg !9928
  br label %for.cond164, !dbg !10015, !llvm.loop !10016

for.end310.loopexit:                              ; preds = %lor.rhs, %land.lhs.true167, %land.rhs
  br label %for.end310, !dbg !10018

for.end310:                                       ; preds = %for.end310.loopexit, %if.then191, %if.else195
  %type312 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10018
  %103 = bitcast %union.tree_node** %type312 to %struct.tree_type**, !dbg !10018
  %104 = load %struct.tree_type*, %struct.tree_type** %103, align 8, !dbg !10018
  %binfo = getelementptr inbounds %struct.tree_type, %struct.tree_type* %104, i64 0, i32 17, !dbg !10018
  store %union.tree_node* null, %union.tree_node** %binfo, align 8, !dbg !10019
  br label %if.end351, !dbg !10020

for.cond319:                                      ; preds = %for.cond319.preheader, %for.inc331
  %actual.0 = phi %union.tree_node* [ %actual.1, %for.inc331 ], [ null, %for.cond319.preheader ], !dbg !10021
  %parm.4 = phi %union.tree_node* [ %106, %for.inc331 ], [ %59, %for.cond319.preheader ], !dbg !10022
  %last315.0 = phi %union.tree_node* [ %call324, %for.inc331 ], [ null, %for.cond319.preheader ], !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %last315.0, metadata !9752, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.4, metadata !9742, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.0, metadata !9750, metadata !DIExpression()), !dbg !10023
  %tobool320 = icmp eq %union.tree_node* %parm.4, null, !dbg !9924
  br i1 %tobool320, label %for.end334, label %for.body321, !dbg !9924

for.body321:                                      ; preds = %for.cond319
  %initial323 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10024
  %105 = load %union.tree_node*, %union.tree_node** %initial323, align 8, !dbg !10024
  %call324 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %105, %union.tree_node* null) #6, !dbg !10024
  call void @llvm.dbg.value(metadata %union.tree_node* %call324, metadata !9753, metadata !DIExpression()), !dbg !10023
  %tobool325 = icmp eq %union.tree_node* %last315.0, null, !dbg !10027
  br i1 %tobool325, label %for.inc331, label %if.then326, !dbg !10029

if.then326:                                       ; preds = %for.body321
  %chain328 = getelementptr inbounds %union.tree_node, %union.tree_node* %last315.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10030
  store %union.tree_node* %call324, %union.tree_node** %chain328, align 8, !dbg !10031
  br label %for.inc331, !dbg !10030

for.inc331:                                       ; preds = %for.body321, %if.then326
  %actual.1 = phi %union.tree_node* [ %actual.0, %if.then326 ], [ %call324, %for.body321 ], !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.1, metadata !9750, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %call324, metadata !9752, metadata !DIExpression()), !dbg !10023
  %chain333 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10032
  %106 = load %union.tree_node*, %union.tree_node** %chain333, align 8, !dbg !10032
  call void @llvm.dbg.value(metadata %union.tree_node* %106, metadata !9742, metadata !DIExpression()), !dbg !9754
  br label %for.cond319, !dbg !10033, !llvm.loop !10034

for.end334:                                       ; preds = %for.cond319
  %actual.0.lcssa = phi %union.tree_node* [ %actual.0, %for.cond319 ], !dbg !10021
  %last315.0.lcssa = phi %union.tree_node* [ %last315.0, %for.cond319 ], !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.0.lcssa, metadata !9750, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %last315.0.lcssa, metadata !9752, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.0.lcssa, metadata !9750, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %last315.0.lcssa, metadata !9752, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.0.lcssa, metadata !9750, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %last315.0.lcssa, metadata !9752, metadata !DIExpression()), !dbg !10023
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10036
  %call335 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %107, %union.tree_node* null) #6, !dbg !10036
  call void @llvm.dbg.value(metadata %union.tree_node* %call335, metadata !9753, metadata !DIExpression()), !dbg !10023
  %tobool336 = icmp eq %union.tree_node* %last315.0.lcssa, null, !dbg !10037
  br i1 %tobool336, label %if.end341, label %if.then337, !dbg !10039

if.then337:                                       ; preds = %for.end334
  %chain339 = getelementptr inbounds %union.tree_node, %union.tree_node* %last315.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10040
  store %union.tree_node* %call335, %union.tree_node** %chain339, align 8, !dbg !10041
  br label %if.end341, !dbg !10040

if.end341:                                        ; preds = %for.end334, %if.then337
  %actual.2 = phi %union.tree_node* [ %actual.0.lcssa, %if.then337 ], [ %call335, %for.end334 ], !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %actual.2, metadata !9750, metadata !DIExpression()), !dbg !10023
  %type343 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10042
  %108 = load %union.tree_node*, %union.tree_node** %type343, align 8, !dbg !10042
  %call344 = call %union.tree_node* @build_variant_type_copy(%union.tree_node* %108) #6, !dbg !10043
  store %union.tree_node* %call344, %union.tree_node** %type343, align 8, !dbg !10044
  %109 = getelementptr inbounds %union.tree_node, %union.tree_node* %call344, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !10045
  store %union.tree_node* %actual.2, %union.tree_node** %109, align 8, !dbg !10046
  br label %if.end351

if.end351:                                        ; preds = %if.end341, %for.end310
  ret void, !dbg !10047
}

declare dso_local void @allocate_struct_function(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @finish_function() local_unnamed_addr #5 !dbg !10048 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !10058
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10050, metadata !DIExpression()), !dbg !10059
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10060
  %bf.load = load i64, i64* %1, align 8, !dbg !10060
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !10061
  %cmp = icmp eq i64 %bf.cast6, 29, !dbg !10061
  br i1 %cmp, label %land.lhs.true, label %if.end36, !dbg !10062

land.lhs.true:                                    ; preds = %entry
  %2 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 1), align 8, !dbg !10063
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10064
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10064
  %call = tail call zeroext i8 %2(%union.tree_node* %3) #6, !dbg !10065
  %tobool = icmp eq i8 %call, 0, !dbg !10065
  br i1 %tobool, label %if.end36, label %if.then, !dbg !10066

if.then:                                          ; preds = %land.lhs.true
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !10067
  br label %for.cond, !dbg !10068

for.cond:                                         ; preds = %for.inc, %if.then
  %args.0.in = phi %union.tree_node** [ %arguments, %if.then ], [ %chain, %for.inc ]
  %args.0 = load %union.tree_node*, %union.tree_node** %args.0.in, align 8, !dbg !10069
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !10051, metadata !DIExpression()), !dbg !10069
  %tobool1 = icmp eq %union.tree_node* %args.0, null, !dbg !10070
  br i1 %tobool1, label %if.end36.loopexit, label %for.body, !dbg !10070

for.body:                                         ; preds = %for.cond
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10071
  %4 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !10071
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10054, metadata !DIExpression()), !dbg !10072
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10073
  %bf.load6 = load i64, i64* %5, align 8, !dbg !10073
  %bf.cast812 = and i64 %bf.load6, 65535, !dbg !10073
  %cmp9 = icmp eq i64 %bf.cast812, 6, !dbg !10073
  br i1 %cmp9, label %land.lhs.true24, label %lor.lhs.false, !dbg !10073

lor.lhs.false:                                    ; preds = %for.body
  %cmp15 = icmp eq i64 %bf.cast812, 7, !dbg !10073
  br i1 %cmp15, label %land.lhs.true24, label %lor.lhs.false17, !dbg !10073

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i64 %bf.cast812, 8, !dbg !10073
  br i1 %cmp22, label %land.lhs.true24, label %for.inc, !dbg !10075

land.lhs.true24:                                  ; preds = %lor.lhs.false17, %lor.lhs.false, %for.body
  %type25 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !10076
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i64 0, i32 6, !dbg !10076
  %bf.load26 = load i32, i32* %precision, align 4, !dbg !10076
  %bf.clear27 = and i32 %bf.load26, 1023, !dbg !10076
  %6 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !10077
  %precision29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !10077
  %bf.load30 = load i32, i32* %precision29, align 4, !dbg !10077
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !10077
  %cmp32 = icmp ult i32 %bf.clear27, %bf.clear31, !dbg !10078
  br i1 %cmp32, label %if.then34, label %for.inc, !dbg !10079

if.then34:                                        ; preds = %land.lhs.true24
  %7 = ptrtoint %struct.tree_type* %6 to i64, !dbg !10079
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10080
  %8 = bitcast %union.tree_node** %initial to i64*, !dbg !10081
  store i64 %7, i64* %8, align 8, !dbg !10081
  br label %for.inc, !dbg !10080

for.inc:                                          ; preds = %lor.lhs.false17, %land.lhs.true24, %if.then34
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10082
  br label %for.cond, !dbg !10083, !llvm.loop !10084

if.end36.loopexit:                                ; preds = %for.cond
  br label %if.end36, !dbg !10086

if.end36:                                         ; preds = %if.end36.loopexit, %land.lhs.true, %entry
  %initial38 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10086
  %9 = load %union.tree_node*, %union.tree_node** %initial38, align 8, !dbg !10086
  %tobool39 = icmp eq %union.tree_node* %9, null, !dbg !10086
  br i1 %tobool39, label %if.end48, label %land.lhs.true40, !dbg !10088

land.lhs.true40:                                  ; preds = %if.end36
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10089
  %cmp43 = icmp eq %union.tree_node* %9, %10, !dbg !10090
  br i1 %cmp43, label %if.end48, label %if.then45, !dbg !10091

if.then45:                                        ; preds = %land.lhs.true40
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10092
  %11 = bitcast i40* %supercontext to %union.tree_node**, !dbg !10092
  store %union.tree_node* %0, %union.tree_node** %11, align 8, !dbg !10093
  br label %if.end48, !dbg !10092

if.end48:                                         ; preds = %land.lhs.true40, %if.end36, %if.then45
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 3, !dbg !10094
  %12 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !10094
  %tobool50 = icmp eq %union.tree_node* %12, null, !dbg !10094
  br i1 %tobool50, label %if.end59, label %land.lhs.true51, !dbg !10096

land.lhs.true51:                                  ; preds = %if.end48
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10097
  %cmp54 = icmp eq %union.tree_node* %12, %13, !dbg !10098
  br i1 %cmp54, label %if.end59, label %if.then56, !dbg !10099

if.then56:                                        ; preds = %land.lhs.true51
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10100
  store %union.tree_node* %0, %union.tree_node** %context, align 8, !dbg !10101
  br label %if.end59, !dbg !10100

if.end59:                                         ; preds = %land.lhs.true51, %if.end48, %if.then56
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10102
  %14 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !10102
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !10102
  %cmp61 = icmp eq %union.tree_node* %14, %15, !dbg !10102
  %16 = load i32, i32* @flag_hosted, align 4, !dbg !10104
  %tobool64 = icmp ne i32 %16, 0, !dbg !10104
  %or.cond = and i1 %cmp61, %tobool64, !dbg !10105
  br i1 %or.cond, label %land.lhs.true65, label %if.end77, !dbg !10105

land.lhs.true65:                                  ; preds = %if.end59
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10106
  %17 = bitcast %union.tree_node** %type67 to %struct.tree_common**, !dbg !10106
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !10106
  %type69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !10106
  %19 = bitcast %union.tree_node** %type69 to %struct.tree_type**, !dbg !10106
  %20 = load %struct.tree_type*, %struct.tree_type** %19, align 8, !dbg !10106
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 16, !dbg !10106
  %21 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !10106
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !10107
  %cmp71 = icmp eq %union.tree_node* %21, %22, !dbg !10108
  %23 = load i32, i32* @flag_isoc99, align 4, !dbg !10109
  %tobool74 = icmp ne i32 %23, 0, !dbg !10109
  %or.cond1 = and i1 %cmp71, %tobool74, !dbg !10110
  br i1 %or.cond1, label %if.then75, label %if.end77, !dbg !10110

if.then75:                                        ; preds = %land.lhs.true65
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10111
  %call76 = tail call %union.tree_node* @c_finish_return(i32 1, %union.tree_node* %24, %union.tree_node* null) #6, !dbg !10113
  br label %if.end77, !dbg !10114

if.end77:                                         ; preds = %if.then75, %land.lhs.true65, %if.end59
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !10115
  %25 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !10115
  %call79 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %25) #6, !dbg !10116
  store %union.tree_node* %call79, %union.tree_node** %saved_tree, align 8, !dbg !10117
  tail call void @finish_fname_decls() #6, !dbg !10118
  %26 = load i32, i32* @warn_return_type, align 4, !dbg !10119
  %tobool82 = icmp eq i32 %26, 0, !dbg !10119
  br i1 %tobool82, label %if.end130, label %land.lhs.true83, !dbg !10121

land.lhs.true83:                                  ; preds = %if.end77
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10122
  %27 = bitcast %union.tree_node** %type85 to %struct.tree_common**, !dbg !10122
  %28 = load %struct.tree_common*, %struct.tree_common** %27, align 8, !dbg !10122
  %type87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i64 0, i32 2, !dbg !10122
  %29 = bitcast %union.tree_node** %type87 to i64**, !dbg !10122
  %30 = load i64*, i64** %29, align 8, !dbg !10122
  %bf.load89 = load i64, i64* %30, align 8, !dbg !10122
  %bf.cast918 = and i64 %bf.load89, 65535, !dbg !10123
  %cmp92 = icmp eq i64 %bf.cast918, 19, !dbg !10123
  %31 = load i32, i32* @current_function_returns_value, align 4, !dbg !10124
  %32 = load i32, i32* @current_function_returns_null, align 4, !dbg !10125
  %33 = or i32 %31, %32, !dbg !10126
  %34 = load i32, i32* @current_function_returns_abnormally, align 4, !dbg !10127
  %35 = or i32 %33, %34, !dbg !10126
  %36 = icmp ne i32 %35, 0, !dbg !10126
  %37 = or i1 %36, %cmp92, !dbg !10126
  br i1 %37, label %if.end130, label %land.lhs.true100, !dbg !10126

land.lhs.true100:                                 ; preds = %land.lhs.true83
  %bf.load102 = load i64, i64* %1, align 8, !dbg !10128
  %bf.cast1049 = and i64 %bf.load102, 524288, !dbg !10128
  %tobool105 = icmp eq i64 %bf.cast1049, 0, !dbg !10128
  br i1 %tobool105, label %land.lhs.true106, label %if.end130, !dbg !10129

land.lhs.true106:                                 ; preds = %land.lhs.true100
  %38 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !10130
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 56), align 16, !dbg !10130
  %cmp109 = icmp eq %union.tree_node* %38, %39, !dbg !10130
  br i1 %cmp109, label %if.end130, label %land.lhs.true111, !dbg !10131

land.lhs.true111:                                 ; preds = %land.lhs.true106
  %lang_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10132
  %40 = bitcast i40* %lang_flag_1 to i64*, !dbg !10132
  %bf.load113 = load i64, i64* %40, align 8, !dbg !10132
  %bf.cast11610 = and i64 %bf.load113, 65536, !dbg !10132
  %tobool117 = icmp eq i64 %bf.cast11610, 0, !dbg !10132
  br i1 %tobool117, label %land.lhs.true118, label %if.end130, !dbg !10133

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %bf.cast12311 = and i64 %bf.load102, 134217728, !dbg !10134
  %tobool124 = icmp eq i64 %bf.cast12311, 0, !dbg !10134
  br i1 %tobool124, label %if.then125, label %if.end130, !dbg !10135

if.then125:                                       ; preds = %land.lhs.true118
  %call126 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 172, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.121, i64 0, i64 0)) #6, !dbg !10136
  %bf.load128 = load i64, i64* %1, align 8, !dbg !10138
  %bf.set = or i64 %bf.load128, 8388608, !dbg !10138
  store i64 %bf.set, i64* %1, align 8, !dbg !10138
  br label %if.end130, !dbg !10139

if.end130:                                        ; preds = %land.lhs.true118, %land.lhs.true111, %land.lhs.true100, %if.end77, %land.lhs.true83, %if.then125, %land.lhs.true106
  %41 = load i32, i32* @input_location, align 4, !dbg !10140
  %42 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10141
  %function_end_locus = getelementptr inbounds %struct.function, %struct.function* %42, i64 0, i32 16, !dbg !10142
  store i32 %41, i32* %function_end_locus, align 4, !dbg !10143
  %call131 = tail call zeroext i8 @c_determine_visibility(%union.tree_node* %0) #6, !dbg !10144
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10145
  %43 = bitcast i40* %decl_flag_1 to i64*, !dbg !10145
  %bf.load133 = load i64, i64* %43, align 8, !dbg !10145
  %bf.cast1367 = and i64 %bf.load133, 33554432, !dbg !10145
  %tobool137 = icmp eq i64 %bf.cast1367, 0, !dbg !10145
  br i1 %tobool137, label %if.end148, label %land.lhs.true138, !dbg !10147

land.lhs.true138:                                 ; preds = %if.end130
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 5, !dbg !10148
  %bf.load139 = load i32, i32* %declared_inline_flag, align 8, !dbg !10148
  %bf.clear141 = and i32 %bf.load139, 2097152, !dbg !10148
  %tobool142 = icmp eq i32 %bf.clear141, 0, !dbg !10148
  br i1 %tobool142, label %if.end148, label %if.then143, !dbg !10149

if.then143:                                       ; preds = %land.lhs.true138
  %bf.set147 = or i32 %bf.load139, 67108864, !dbg !10150
  store i32 %bf.set147, i32* %declared_inline_flag, align 8, !dbg !10150
  br label %if.end148, !dbg !10151

if.end148:                                        ; preds = %land.lhs.true138, %if.end130, %if.then143
  %44 = load %union.tree_node*, %union.tree_node** %initial38, align 8, !dbg !10152
  %tobool151 = icmp eq %union.tree_node* %44, null, !dbg !10152
  br i1 %tobool151, label %if.end169, label %land.lhs.true152, !dbg !10154

land.lhs.true152:                                 ; preds = %if.end148
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10155
  %cmp155 = icmp eq %union.tree_node* %44, %45, !dbg !10156
  %.b = load i1, i1* @undef_nested_function, align 1, !dbg !10157
  %or.cond5 = or i1 %cmp155, %.b, !dbg !10158
  br i1 %or.cond5, label %if.end169, label %if.then159, !dbg !10158

if.then159:                                       ; preds = %land.lhs.true152
  %call160 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #6, !dbg !10159
  %tobool161 = icmp eq %union.tree_node* %call160, null, !dbg !10159
  br i1 %tobool161, label %if.then162, label %if.else, !dbg !10162

if.then162:                                       ; preds = %if.then159
  %46 = bitcast %union.tree_node* %0 to i8*, !dbg !10163
  %call163 = tail call i32 @invoke_plugin_callbacks(i32 3, i8* %46) #6, !dbg !10165
  tail call void @c_genericize(%union.tree_node* %0) #6, !dbg !10166
  %47 = load i8, i8* @cgraph_global_info_ready, align 1, !dbg !10167
  %tobool164 = icmp eq i8 %47, 0, !dbg !10167
  br i1 %tobool164, label %if.end166, label %if.then165, !dbg !10169

if.then165:                                       ; preds = %if.then162
  tail call void @cgraph_add_new_function(%union.tree_node* %0, i8 zeroext 0) #6, !dbg !10170
  br label %cleanup.cont, !dbg !10172

if.end166:                                        ; preds = %if.then162
  tail call void @cgraph_finalize_function(%union.tree_node* %0, i8 zeroext 0) #6, !dbg !10173
  br label %if.end169, !dbg !10174

if.else:                                          ; preds = %if.then159
  %call167 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %0) #6, !dbg !10175
  br label %if.end169

if.end169:                                        ; preds = %if.end148, %if.end166, %if.else, %land.lhs.true152
  %call170 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #6, !dbg !10177
  %tobool171 = icmp eq %union.tree_node* %call170, null, !dbg !10177
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !10179

if.then172:                                       ; preds = %if.end169
  store i1 false, i1* @undef_nested_function, align 1, !dbg !10180
  br label %if.end173, !dbg !10181

if.end173:                                        ; preds = %if.end169, %if.then172
  tail call void @set_cfun(%struct.function* null) #6, !dbg !10182
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !10183
  br label %cleanup.cont, !dbg !10184

cleanup.cont:                                     ; preds = %if.then165, %if.end173
  ret void, !dbg !10184
}

declare dso_local %union.tree_node* @c_finish_return(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_stmt_list(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @invoke_plugin_callbacks(i32, i8*) local_unnamed_addr #2

declare dso_local void @c_genericize(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @cgraph_add_new_function(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @cgraph_finalize_function(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @check_for_loop_decls(i32 %loc) local_unnamed_addr #5 !dbg !2262 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !2266, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2268, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 0, metadata !2269, metadata !DIExpression()), !dbg !10185
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !10186
  %tobool = icmp eq i32 %0, 0, !dbg !10186
  br i1 %tobool, label %if.then, label %if.end3, !dbg !10188

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.122, i64 0, i64 0)) #6, !dbg !10189
  %.b = load i1, i1* @check_for_loop_decls.hint, align 1, !dbg !10191
  br i1 %.b, label %cleanup28, label %if.then2, !dbg !10193

if.then2:                                         ; preds = %if.then
  tail call void (i32, i8*, ...) @inform(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i64 0, i64 0)) #6, !dbg !10194
  store i1 true, i1* @check_for_loop_decls.hint, align 1, !dbg !10196
  br label %cleanup28, !dbg !10197

if.end3:                                          ; preds = %entry
  %1 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !10198
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %1, i64 0, i32 2, !dbg !10199
  br label %for.cond, !dbg !10200

for.cond:                                         ; preds = %cleanup, %if.end3
  %n_decls.0 = phi i32 [ 0, %if.end3 ], [ %n_decls.1, %cleanup ], !dbg !10185
  %one_decl.0 = phi %union.tree_node* [ null, %if.end3 ], [ %one_decl.1, %cleanup ], !dbg !10185
  %b.0.in = phi %struct.c_binding** [ %bindings, %if.end3 ], [ %prev, %cleanup ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !10201
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !2267, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %one_decl.0, metadata !2268, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %n_decls.0, metadata !2269, metadata !DIExpression()), !dbg !10185
  %tobool4 = icmp eq %struct.c_binding* %b.0, null, !dbg !10202
  br i1 %tobool4, label %for.end, label %for.body, !dbg !10202

for.body:                                         ; preds = %for.cond
  %id5 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 2, !dbg !10203
  %2 = load %union.tree_node*, %union.tree_node** %id5, align 8, !dbg !10203
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2270, metadata !DIExpression()), !dbg !10204
  %decl6 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 1, !dbg !10205
  %3 = load %union.tree_node*, %union.tree_node** %decl6, align 8, !dbg !10205
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2274, metadata !DIExpression()), !dbg !10204
  %tobool7 = icmp eq %union.tree_node* %2, null, !dbg !10206
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !10208

if.end9:                                          ; preds = %for.body
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10209
  %bf.load = load i64, i64* %4, align 8, !dbg !10209
  %5 = trunc i64 %bf.load to i16, !dbg !10209
  switch i16 %5, label %sw.default [
    i16 32, label %sw.bb
    i16 16, label %sw.bb24
    i16 17, label %sw.bb25
    i16 6, label %sw.bb26
  ], !dbg !10210

sw.bb:                                            ; preds = %if.end9
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10211
  %6 = load i32, i32* %locus, align 8, !dbg !10211
  call void @llvm.dbg.value(metadata i32 %6, metadata !2275, metadata !DIExpression()), !dbg !10212
  %bf.cast131 = and i64 %bf.load, 67108864, !dbg !10213
  %tobool14 = icmp eq i64 %bf.cast131, 0, !dbg !10213
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !10215

if.then15:                                        ; preds = %sw.bb
  tail call void (i32, i8*, ...) @error_at(i32 %6, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.124, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !10216
  br label %sw.epilog, !dbg !10216

if.else:                                          ; preds = %sw.bb
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10217
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !10217
  %bf.load16 = load i64, i64* %7, align 8, !dbg !10217
  %bf.cast192 = and i64 %bf.load16, 33554432, !dbg !10217
  %tobool20 = icmp eq i64 %bf.cast192, 0, !dbg !10217
  br i1 %tobool20, label %sw.epilog, label %if.then21, !dbg !10219

if.then21:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @error_at(i32 %6, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.125, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !10220
  br label %sw.epilog, !dbg !10220

sw.bb24:                                          ; preds = %if.end9
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.126, i64 0, i64 0), %union.tree_node* nonnull %2) #6, !dbg !10221
  br label %sw.epilog, !dbg !10222

sw.bb25:                                          ; preds = %if.end9
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i64 0, i64 0), %union.tree_node* nonnull %2) #6, !dbg !10223
  br label %sw.epilog, !dbg !10224

sw.bb26:                                          ; preds = %if.end9
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.128, i64 0, i64 0), %union.tree_node* nonnull %2) #6, !dbg !10225
  br label %sw.epilog, !dbg !10226

sw.default:                                       ; preds = %if.end9
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.129, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !10227
  br label %sw.epilog, !dbg !10228

sw.epilog:                                        ; preds = %if.else, %if.then15, %if.then21, %sw.default, %sw.bb26, %sw.bb25, %sw.bb24
  %inc = add nsw i32 %n_decls.0, 1, !dbg !10229
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2269, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2268, metadata !DIExpression()), !dbg !10185
  br label %cleanup, !dbg !10230

cleanup:                                          ; preds = %for.body, %sw.epilog
  %n_decls.1 = phi i32 [ %inc, %sw.epilog ], [ %n_decls.0, %for.body ], !dbg !10185
  %one_decl.1 = phi %union.tree_node* [ %3, %sw.epilog ], [ %one_decl.0, %for.body ], !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %one_decl.1, metadata !2268, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %n_decls.1, metadata !2269, metadata !DIExpression()), !dbg !10185
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 3, !dbg !10231
  br label %for.cond, !dbg !10232, !llvm.loop !10233

for.end:                                          ; preds = %for.cond
  %n_decls.0.lcssa = phi i32 [ %n_decls.0, %for.cond ], !dbg !10185
  %one_decl.0.lcssa = phi %union.tree_node* [ %one_decl.0, %for.cond ], !dbg !10185
  call void @llvm.dbg.value(metadata i32 %n_decls.0.lcssa, metadata !2269, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %one_decl.0.lcssa, metadata !2268, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %n_decls.0.lcssa, metadata !2269, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %one_decl.0.lcssa, metadata !2268, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata i32 %n_decls.0.lcssa, metadata !2269, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %one_decl.0.lcssa, metadata !2268, metadata !DIExpression()), !dbg !10185
  %cmp = icmp eq i32 %n_decls.0.lcssa, 1, !dbg !10235
  %one_decl.0. = select i1 %cmp, %union.tree_node* %one_decl.0.lcssa, %union.tree_node* null, !dbg !10236
  br label %cleanup28, !dbg !10237

cleanup28:                                        ; preds = %if.then, %if.then2, %for.end
  %retval.0 = phi %union.tree_node* [ %one_decl.0., %for.end ], [ null, %if.then2 ], [ null, %if.then ], !dbg !10185
  ret %union.tree_node* %retval.0, !dbg !10238
}

; Function Attrs: nounwind uwtable
define dso_local void @c_push_function_context() local_unnamed_addr #5 !dbg !10239 {
entry:
  %call = tail call i8* @ggc_alloc_stat(i64 64) #6, !dbg !10242
  call void @llvm.dbg.value(metadata i8* %call, metadata !10241, metadata !DIExpression()), !dbg !10243
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10244
  %language = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 11, !dbg !10245
  %1 = bitcast %struct.language_function** %language to i8**, !dbg !10246
  store i8* %call, i8** %1, align 8, !dbg !10246
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call, i8* align 8 bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i64 16, i1 false), !dbg !10247
  %2 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !10248
  %x_break_label = getelementptr inbounds i8, i8* %call, i64 16, !dbg !10249
  %3 = bitcast i8* %x_break_label to i64*, !dbg !10250
  store i64 %2, i64* %3, align 8, !dbg !10250
  %4 = load i64, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !10251
  %x_cont_label = getelementptr inbounds i8, i8* %call, i64 24, !dbg !10252
  %5 = bitcast i8* %x_cont_label to i64*, !dbg !10253
  store i64 %4, i64* %5, align 8, !dbg !10253
  %6 = load i64, i64* bitcast (%struct.c_switch** @c_switch_stack to i64*), align 8, !dbg !10254
  %x_switch_stack = getelementptr inbounds i8, i8* %call, i64 32, !dbg !10255
  %7 = bitcast i8* %x_switch_stack to i64*, !dbg !10256
  store i64 %6, i64* %7, align 8, !dbg !10256
  %8 = load i64, i64* bitcast (%struct.c_arg_info** @current_function_arg_info to i64*), align 8, !dbg !10257
  %arg_info = getelementptr inbounds i8, i8* %call, i64 40, !dbg !10258
  %9 = bitcast i8* %arg_info to i64*, !dbg !10259
  store i64 %8, i64* %9, align 8, !dbg !10259
  %10 = load i32, i32* @current_function_returns_value, align 4, !dbg !10260
  %returns_value = getelementptr inbounds i8, i8* %call, i64 48, !dbg !10261
  %11 = bitcast i8* %returns_value to i32*, !dbg !10261
  store i32 %10, i32* %11, align 8, !dbg !10262
  %12 = load i32, i32* @current_function_returns_null, align 4, !dbg !10263
  %returns_null = getelementptr inbounds i8, i8* %call, i64 52, !dbg !10264
  %13 = bitcast i8* %returns_null to i32*, !dbg !10264
  store i32 %12, i32* %13, align 4, !dbg !10265
  %14 = load i32, i32* @current_function_returns_abnormally, align 4, !dbg !10266
  %returns_abnormally = getelementptr inbounds i8, i8* %call, i64 56, !dbg !10267
  %15 = bitcast i8* %returns_abnormally to i32*, !dbg !10267
  store i32 %14, i32* %15, align 8, !dbg !10268
  %16 = load i32, i32* @warn_about_return_type, align 4, !dbg !10269
  %warn_about_return_type = getelementptr inbounds i8, i8* %call, i64 60, !dbg !10270
  %17 = bitcast i8* %warn_about_return_type to i32*, !dbg !10270
  store i32 %16, i32* %17, align 4, !dbg !10271
  tail call void @push_function_context() #6, !dbg !10272
  ret void, !dbg !10273
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local void @push_function_context() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_pop_function_context() local_unnamed_addr #5 !dbg !10274 {
entry:
  tail call void @pop_function_context() #6, !dbg !10277
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10278
  %language = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 11, !dbg !10279
  %1 = load %struct.language_function*, %struct.language_function** %language, align 8, !dbg !10279
  call void @llvm.dbg.value(metadata %struct.language_function* %1, metadata !10276, metadata !DIExpression()), !dbg !10280
  store %struct.language_function* null, %struct.language_function** %language, align 8, !dbg !10281
  %2 = load %struct.tree_function_decl*, %struct.tree_function_decl** bitcast (%union.tree_node** @current_function_decl to %struct.tree_function_decl**), align 8, !dbg !10282
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %2, i64 0, i32 1, !dbg !10282
  %3 = load %struct.function*, %struct.function** %f, align 8, !dbg !10282
  %cmp = icmp eq %struct.function* %3, null, !dbg !10284
  %4 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %2, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !10285
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10285

land.lhs.true:                                    ; preds = %entry
  %saved_tree = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %2, i64 0, i32 0, i32 1, !dbg !10286
  %5 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !10286
  %cmp3 = icmp eq %union.tree_node* %5, null, !dbg !10287
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10288

if.then:                                          ; preds = %land.lhs.true
  %6 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !10289
  %initial = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10291
  %7 = bitcast %union.tree_node** %initial to i64*, !dbg !10292
  store i64 %6, i64* %7, align 8, !dbg !10292
  %8 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %4, i64 1, i32 1, !dbg !10293
  store %union.tree_node* null, %union.tree_node** %8, align 8, !dbg !10294
  br label %if.end, !dbg !10295

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = bitcast %struct.language_function* %1 to i8*, !dbg !10296
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i8* align 8 %9, i64 16, i1 false), !dbg !10296
  %x_break_label = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 1, !dbg !10297
  %10 = bitcast %union.tree_node** %x_break_label to i64*, !dbg !10297
  %11 = load i64, i64* %10, align 8, !dbg !10297
  store i64 %11, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !10298
  %x_cont_label = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 2, !dbg !10299
  %12 = bitcast %union.tree_node** %x_cont_label to i64*, !dbg !10299
  %13 = load i64, i64* %12, align 8, !dbg !10299
  store i64 %13, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !10300
  %x_switch_stack = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 3, !dbg !10301
  %14 = bitcast %struct.c_switch** %x_switch_stack to i64*, !dbg !10301
  %15 = load i64, i64* %14, align 8, !dbg !10301
  store i64 %15, i64* bitcast (%struct.c_switch** @c_switch_stack to i64*), align 8, !dbg !10302
  %arg_info = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 4, !dbg !10303
  %16 = bitcast %struct.c_arg_info** %arg_info to i64*, !dbg !10303
  %17 = load i64, i64* %16, align 8, !dbg !10303
  store i64 %17, i64* bitcast (%struct.c_arg_info** @current_function_arg_info to i64*), align 8, !dbg !10304
  %returns_value = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 5, !dbg !10305
  %18 = load i32, i32* %returns_value, align 8, !dbg !10305
  store i32 %18, i32* @current_function_returns_value, align 4, !dbg !10306
  %returns_null = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 6, !dbg !10307
  %19 = load i32, i32* %returns_null, align 4, !dbg !10307
  store i32 %19, i32* @current_function_returns_null, align 4, !dbg !10308
  %returns_abnormally = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 7, !dbg !10309
  %20 = load i32, i32* %returns_abnormally, align 8, !dbg !10309
  store i32 %20, i32* @current_function_returns_abnormally, align 4, !dbg !10310
  %warn_about_return_type = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i64 0, i32 8, !dbg !10311
  %21 = load i32, i32* %warn_about_return_type, align 4, !dbg !10311
  store i32 %21, i32* @warn_about_return_type, align 4, !dbg !10312
  ret void, !dbg !10313
}

declare dso_local void @pop_function_context() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @identifier_global_value(%union.tree_node* %t) local_unnamed_addr #5 !dbg !10314 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !10316, metadata !DIExpression()), !dbg !10318
  %symbol_binding = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10319
  %0 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !10319
  br label %for.cond, !dbg !10321

for.cond:                                         ; preds = %for.inc, %entry
  %b.0.in = phi %struct.c_binding** [ %0, %entry ], [ %shadowed, %for.inc ]
  %b.0 = load %struct.c_binding*, %struct.c_binding** %b.0.in, align 8, !dbg !10322
  call void @llvm.dbg.value(metadata %struct.c_binding* %b.0, metadata !10317, metadata !DIExpression()), !dbg !10318
  %tobool = icmp eq %struct.c_binding* %b.0, null, !dbg !10323
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !10323

for.body:                                         ; preds = %for.cond
  %depth = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 5, !dbg !10324
  %bf.load = load i32, i32* %depth, align 8, !dbg !10324
  %bf.clear = and i32 %bf.load, 268435455, !dbg !10324
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !10324
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10327

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 0, !dbg !10328
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !10329

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %b.0.lcssa3 = phi %struct.c_binding* [ %b.0, %lor.lhs.false ], [ %b.0, %for.body ], !dbg !10322
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0.lcssa3, i64 0, i32 1, !dbg !10330
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !10330
  br label %cleanup, !dbg !10331

for.inc:                                          ; preds = %lor.lhs.false
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %b.0, i64 0, i32 4, !dbg !10332
  br label %for.cond, !dbg !10333, !llvm.loop !10334

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !10336

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %cleanup.loopexit ], !dbg !10318
  ret %union.tree_node* %retval.0, !dbg !10336
}

; Function Attrs: nounwind uwtable
define dso_local void @record_builtin_type(i32 %rid_index, i8* %name, %union.tree_node* %type) local_unnamed_addr #5 !dbg !10337 {
entry:
  call void @llvm.dbg.value(metadata i32 %rid_index, metadata !10341, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i8* %name, metadata !10342, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10343, metadata !DIExpression()), !dbg !10346
  %cmp = icmp eq i8* %name, null, !dbg !10347
  br i1 %cmp, label %if.then, label %if.else, !dbg !10349

if.then:                                          ; preds = %entry
  %0 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !10350
  %idxprom = sext i32 %rid_index to i64, !dbg !10350
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %0, i64 %idxprom, !dbg !10350
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10350
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10344, metadata !DIExpression()), !dbg !10346
  br label %if.end, !dbg !10351

if.else:                                          ; preds = %entry
  %call = tail call %union.tree_node* @get_identifier(i8* nonnull %name) #6, !dbg !10352
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10344, metadata !DIExpression()), !dbg !10346
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %id.0 = phi %union.tree_node* [ %1, %if.then ], [ %call, %if.else ], !dbg !10353
  call void @llvm.dbg.value(metadata %union.tree_node* %id.0, metadata !10344, metadata !DIExpression()), !dbg !10346
  %call1 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %id.0, %union.tree_node* %type) #6, !dbg !10354
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10345, metadata !DIExpression()), !dbg !10346
  %call2 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call1) #7, !dbg !10355
  %2 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !10356
  %type_decl = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %2, i64 0, i32 18, !dbg !10358
  %3 = load void (%union.tree_node*, i32)*, void (%union.tree_node*, i32)** %type_decl, align 8, !dbg !10358
  %tobool = icmp eq void (%union.tree_node*, i32)* %3, null, !dbg !10356
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !10359

if.then3:                                         ; preds = %if.end
  tail call void %3(%union.tree_node* %call1, i32 0) #6, !dbg !10360
  br label %if.end5, !dbg !10360

if.end5:                                          ; preds = %if.end, %if.then3
  ret void, !dbg !10361
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_void_list_node() local_unnamed_addr #5 !dbg !10362 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10365
  %call = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %0) #6, !dbg !10365
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10364, metadata !DIExpression()), !dbg !10366
  ret %union.tree_node* %call, !dbg !10367
}

declare dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.c_parm* @build_c_parm(%struct.c_declspecs* %specs, %union.tree_node* %attrs, %struct.c_declarator* %declarator) local_unnamed_addr #5 !dbg !10368 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !10372, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !10373, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator, metadata !10374, metadata !DIExpression()), !dbg !10376
  store i64 24, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10377
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10377
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10377
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10377
  %cmp = icmp slt i64 %sub.ptr.sub, 24, !dbg !10377
  %2 = inttoptr i64 %1 to i8*, !dbg !10377
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10377

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 24) #6, !dbg !10377
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10377
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10377
  br label %cond.end, !dbg !10377

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10377
  %4 = phi i64 [ 24, %entry ], [ %.pre, %cond.true ], !dbg !10377
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10377
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10377
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10377
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10377
  %6 = ptrtoint i8* %5 to i64, !dbg !10377
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10377
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10377

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10377
  %bf.set = or i8 %bf.load, 2, !dbg !10377
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10377
  br label %cond.end5, !dbg !10377

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10377
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10377
  %conv11 = sext i32 %8 to i64, !dbg !10377
  %add = add nsw i64 %7, %conv11, !dbg !10377
  %neg = xor i32 %8, -1, !dbg !10377
  %conv12 = sext i32 %neg to i64, !dbg !10377
  %and = and i64 %add, %conv12, !dbg !10377
  %9 = inttoptr i64 %and to i8*, !dbg !10377
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10377
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10377
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10377
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10377
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10377
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10377
  %12 = bitcast i8* %5 to %struct.c_parm*, !dbg !10377
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10377

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10377
  br label %cond.end23, !dbg !10377

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10377
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10377
  call void @llvm.dbg.value(metadata %struct.c_parm* %12, metadata !10375, metadata !DIExpression()), !dbg !10376
  %specs25 = bitcast i8* %5 to %struct.c_declspecs**, !dbg !10378
  store %struct.c_declspecs* %specs, %struct.c_declspecs** %specs25, align 8, !dbg !10379
  %attrs26 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10380
  %14 = bitcast i8* %attrs26 to %union.tree_node**, !dbg !10380
  store %union.tree_node* %attrs, %union.tree_node** %14, align 8, !dbg !10381
  %declarator27 = getelementptr inbounds i8, i8* %5, i64 16, !dbg !10382
  %15 = bitcast i8* %declarator27 to %struct.c_declarator**, !dbg !10382
  store %struct.c_declarator* %declarator, %struct.c_declarator** %15, align 8, !dbg !10383
  ret %struct.c_parm* %12, !dbg !10384
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @build_attrs_declarator(%union.tree_node* %attrs, %struct.c_declarator* %target) local_unnamed_addr #5 !dbg !10385 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !10389, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.value(metadata %struct.c_declarator* %target, metadata !10390, metadata !DIExpression()), !dbg !10392
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10393
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10393
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10393
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10393
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !10393
  %2 = inttoptr i64 %1 to i8*, !dbg !10393
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10393

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !10393
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10393
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10393
  br label %cond.end, !dbg !10393

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10393
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !10393
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10393
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10393
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10393
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10393
  %6 = ptrtoint i8* %5 to i64, !dbg !10393
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10393
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10393

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10393
  %bf.set = or i8 %bf.load, 2, !dbg !10393
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10393
  br label %cond.end5, !dbg !10393

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10393
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10393
  %conv11 = sext i32 %8 to i64, !dbg !10393
  %add = add nsw i64 %7, %conv11, !dbg !10393
  %neg = xor i32 %8, -1, !dbg !10393
  %conv12 = sext i32 %neg to i64, !dbg !10393
  %and = and i64 %add, %conv12, !dbg !10393
  %9 = inttoptr i64 %and to i8*, !dbg !10393
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10393
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10393
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10393
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10393
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10393
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10393
  %12 = bitcast i8* %5 to %struct.c_declarator*, !dbg !10393
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10393

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10393
  br label %cond.end23, !dbg !10393

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10393
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10393
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !10391, metadata !DIExpression()), !dbg !10392
  %kind = bitcast i8* %5 to i32*, !dbg !10394
  store i32 4, i32* %kind, align 8, !dbg !10395
  %declarator = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10396
  %14 = bitcast i8* %declarator to %struct.c_declarator**, !dbg !10396
  store %struct.c_declarator* %target, %struct.c_declarator** %14, align 8, !dbg !10397
  %attrs25 = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10398
  %15 = bitcast i8* %attrs25 to %union.tree_node**, !dbg !10398
  store %union.tree_node* %attrs, %union.tree_node** %15, align 8, !dbg !10399
  ret %struct.c_declarator* %12, !dbg !10400
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @build_function_declarator(%struct.c_arg_info* %args, %struct.c_declarator* %target) local_unnamed_addr #5 !dbg !10401 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %args, metadata !10405, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata %struct.c_declarator* %target, metadata !10406, metadata !DIExpression()), !dbg !10408
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10409
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10409
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10409
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10409
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !10409
  %2 = inttoptr i64 %1 to i8*, !dbg !10409
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10409

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !10409
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10409
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10409
  br label %cond.end, !dbg !10409

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10409
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !10409
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10409
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10409
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10409
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10409
  %6 = ptrtoint i8* %5 to i64, !dbg !10409
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10409
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10409

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10409
  %bf.set = or i8 %bf.load, 2, !dbg !10409
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10409
  br label %cond.end5, !dbg !10409

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10409
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10409
  %conv11 = sext i32 %8 to i64, !dbg !10409
  %add = add nsw i64 %7, %conv11, !dbg !10409
  %neg = xor i32 %8, -1, !dbg !10409
  %conv12 = sext i32 %neg to i64, !dbg !10409
  %and = and i64 %add, %conv12, !dbg !10409
  %9 = inttoptr i64 %and to i8*, !dbg !10409
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10409
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10409
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10409
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10409
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10409
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10409
  %12 = bitcast i8* %5 to %struct.c_declarator*, !dbg !10409
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10409

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10409
  br label %cond.end23, !dbg !10409

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10409
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10409
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !10407, metadata !DIExpression()), !dbg !10408
  %kind = bitcast i8* %5 to i32*, !dbg !10410
  store i32 1, i32* %kind, align 8, !dbg !10411
  %declarator = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10412
  %14 = bitcast i8* %declarator to %struct.c_declarator**, !dbg !10412
  store %struct.c_declarator* %target, %struct.c_declarator** %14, align 8, !dbg !10413
  %u = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10414
  %arg_info = bitcast i8* %u to %struct.c_arg_info**, !dbg !10415
  store %struct.c_arg_info* %args, %struct.c_arg_info** %arg_info, align 8, !dbg !10416
  ret %struct.c_declarator* %12, !dbg !10417
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @build_id_declarator(%union.tree_node* %ident) local_unnamed_addr #5 !dbg !10418 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ident, metadata !10422, metadata !DIExpression()), !dbg !10424
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10425
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10425
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10425
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10425
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !10425
  %2 = inttoptr i64 %1 to i8*, !dbg !10425
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10425

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !10425
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10425
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10425
  br label %cond.end, !dbg !10425

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10425
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !10425
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10425
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10425
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10425
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10425
  %6 = ptrtoint i8* %5 to i64, !dbg !10425
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10425
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10425

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10425
  %bf.set = or i8 %bf.load, 2, !dbg !10425
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10425
  br label %cond.end5, !dbg !10425

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10425
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10425
  %conv11 = sext i32 %8 to i64, !dbg !10425
  %add = add nsw i64 %7, %conv11, !dbg !10425
  %neg = xor i32 %8, -1, !dbg !10425
  %conv12 = sext i32 %neg to i64, !dbg !10425
  %and = and i64 %add, %conv12, !dbg !10425
  %9 = inttoptr i64 %and to i8*, !dbg !10425
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10425
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10425
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10425
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10425
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10425
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10425
  %12 = bitcast i8* %5 to %struct.c_declarator*, !dbg !10425
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10425

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10425
  br label %cond.end23, !dbg !10425

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10425
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10425
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !10423, metadata !DIExpression()), !dbg !10424
  %kind = bitcast i8* %5 to i32*, !dbg !10426
  store i32 0, i32* %kind, align 8, !dbg !10427
  %declarator = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10428
  %14 = bitcast i8* %declarator to %struct.c_declarator**, !dbg !10428
  store %struct.c_declarator* null, %struct.c_declarator** %14, align 8, !dbg !10429
  %id = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10430
  %15 = bitcast i8* %id to %union.tree_node**, !dbg !10430
  store %union.tree_node* %ident, %union.tree_node** %15, align 8, !dbg !10431
  %16 = load i32, i32* @input_location, align 4, !dbg !10432
  %id_loc = getelementptr inbounds i8, i8* %5, i64 16, !dbg !10433
  %17 = bitcast i8* %id_loc to i32*, !dbg !10433
  store i32 %16, i32* %17, align 8, !dbg !10434
  ret %struct.c_declarator* %12, !dbg !10435
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declarator* @make_pointer_declarator(%struct.c_declspecs* %type_quals_attrs, %struct.c_declarator* %target) local_unnamed_addr #5 !dbg !10436 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %type_quals_attrs, metadata !10440, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata %struct.c_declarator* %target, metadata !10441, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 0, metadata !10443, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata %struct.c_declarator* %target, metadata !10444, metadata !DIExpression()), !dbg !10446
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10447
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10447
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10447
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10447
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !10447
  %2 = inttoptr i64 %1 to i8*, !dbg !10447
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10447

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !10447
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10447
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10447
  br label %cond.end, !dbg !10447

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10447
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !10447
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10447
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10447
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10447
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10447
  %6 = ptrtoint i8* %5 to i64, !dbg !10447
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10447
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10447

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10447
  %bf.set = or i8 %bf.load, 2, !dbg !10447
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10447
  br label %cond.end5, !dbg !10447

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10447
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10447
  %conv11 = sext i32 %8 to i64, !dbg !10447
  %add = add nsw i64 %7, %conv11, !dbg !10447
  %neg = xor i32 %8, -1, !dbg !10447
  %conv12 = sext i32 %neg to i64, !dbg !10447
  %and = and i64 %add, %conv12, !dbg !10447
  %9 = inttoptr i64 %and to i8*, !dbg !10447
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10447
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10447
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10447
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10447
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10447
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10447
  %12 = bitcast i8* %5 to %struct.c_declarator*, !dbg !10447
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10447

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10447
  br label %cond.end23, !dbg !10447

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10447
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10447
  call void @llvm.dbg.value(metadata %struct.c_declarator* %12, metadata !10445, metadata !DIExpression()), !dbg !10446
  %tobool = icmp eq %struct.c_declspecs* %type_quals_attrs, null, !dbg !10448
  br i1 %tobool, label %if.end30, label %if.then, !dbg !10450

if.then:                                          ; preds = %cond.end23
  %attrs25 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %type_quals_attrs, i64 0, i32 3, !dbg !10451
  %14 = load %union.tree_node*, %union.tree_node** %attrs25, align 8, !dbg !10451
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10442, metadata !DIExpression()), !dbg !10446
  %call = tail call i32 @quals_from_declspecs(%struct.c_declspecs* nonnull %type_quals_attrs) #7, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %call, metadata !10443, metadata !DIExpression()), !dbg !10446
  %cmp26 = icmp eq %union.tree_node* %14, null, !dbg !10454
  br i1 %cmp26, label %if.end30, label %if.then28, !dbg !10456

if.then28:                                        ; preds = %if.then
  %call29 = tail call %struct.c_declarator* @build_attrs_declarator(%union.tree_node* nonnull %14, %struct.c_declarator* %target) #7, !dbg !10457
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call29, metadata !10444, metadata !DIExpression()), !dbg !10446
  br label %if.end30, !dbg !10458

if.end30:                                         ; preds = %if.then, %cond.end23, %if.then28
  %quals.0 = phi i32 [ 0, %cond.end23 ], [ %call, %if.then28 ], [ %call, %if.then ], !dbg !10446
  %itarget.1 = phi %struct.c_declarator* [ %target, %cond.end23 ], [ %call29, %if.then28 ], [ %target, %if.then ], !dbg !10446
  call void @llvm.dbg.value(metadata %struct.c_declarator* %itarget.1, metadata !10444, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %quals.0, metadata !10443, metadata !DIExpression()), !dbg !10446
  %kind = bitcast i8* %5 to i32*, !dbg !10459
  store i32 3, i32* %kind, align 8, !dbg !10460
  %declarator = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10461
  %15 = bitcast i8* %declarator to %struct.c_declarator**, !dbg !10461
  store %struct.c_declarator* %itarget.1, %struct.c_declarator** %15, align 8, !dbg !10462
  %u = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10463
  %pointer_quals = bitcast i8* %u to i32*, !dbg !10464
  store i32 %quals.0, i32* %pointer_quals, align 8, !dbg !10465
  ret %struct.c_declarator* %12, !dbg !10466
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @build_null_declspecs() local_unnamed_addr #5 !dbg !10467 {
entry:
  store i64 56, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10472
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10472
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10472
  %sub.ptr.sub = sub i64 %0, %1, !dbg !10472
  %cmp = icmp slt i64 %sub.ptr.sub, 56, !dbg !10472
  %2 = inttoptr i64 %1 to i8*, !dbg !10472
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10472

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 56) #6, !dbg !10472
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10472
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10472
  br label %cond.end, !dbg !10472

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !10472
  %4 = phi i64 [ 56, %entry ], [ %.pre, %cond.true ], !dbg !10472
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10472
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10472
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !10472
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !10472
  %6 = ptrtoint i8* %5 to i64, !dbg !10472
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !10472
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !10472

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10472
  %bf.set = or i8 %bf.load, 2, !dbg !10472
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !10472
  br label %cond.end5, !dbg !10472

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !10472
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !10472
  %conv11 = sext i32 %8 to i64, !dbg !10472
  %add = add nsw i64 %7, %conv11, !dbg !10472
  %neg = xor i32 %8, -1, !dbg !10472
  %conv12 = sext i32 %neg to i64, !dbg !10472
  %and = and i64 %add, %conv12, !dbg !10472
  %9 = inttoptr i64 %and to i8*, !dbg !10472
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !10472
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !10472
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !10472
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !10472
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !10472
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !10472
  %12 = bitcast i8* %5 to %struct.c_declspecs*, !dbg !10472
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !10472

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !10472
  br label %cond.end23, !dbg !10472

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !10472
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !10472
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %12, metadata !10471, metadata !DIExpression()), !dbg !10473
  %type = bitcast i8* %5 to %union.tree_node**, !dbg !10474
  store %union.tree_node* null, %union.tree_node** %type, align 8, !dbg !10475
  %expr = getelementptr inbounds i8, i8* %5, i64 8, !dbg !10476
  %14 = bitcast i8* %expr to %union.tree_node**, !dbg !10476
  store %union.tree_node* null, %union.tree_node** %14, align 8, !dbg !10477
  %decl_attr = getelementptr inbounds i8, i8* %5, i64 16, !dbg !10478
  %15 = bitcast i8* %decl_attr to %union.tree_node**, !dbg !10478
  store %union.tree_node* null, %union.tree_node** %15, align 8, !dbg !10479
  %attrs = getelementptr inbounds i8, i8* %5, i64 24, !dbg !10480
  %16 = bitcast i8* %attrs to %union.tree_node**, !dbg !10480
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !10481
  %typespec_word = getelementptr inbounds i8, i8* %5, i64 32, !dbg !10482
  %17 = bitcast i8* %typespec_word to i32*, !dbg !10482
  store i32 0, i32* %17, align 8, !dbg !10483
  %storage_class = getelementptr inbounds i8, i8* %5, i64 36, !dbg !10484
  %18 = bitcast i8* %storage_class to i32*, !dbg !10484
  store i32 0, i32* %18, align 4, !dbg !10485
  %19 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !10486
  store i8 1, i8* %19, align 8, !dbg !10487
  %default_int_p = getelementptr inbounds i8, i8* %5, i64 44, !dbg !10488
  %20 = bitcast i8* %default_int_p to i32*, !dbg !10488
  store i32 0, i32* %20, align 4, !dbg !10489
  %long_p = getelementptr inbounds i8, i8* %5, i64 48, !dbg !10490
  %21 = bitcast i8* %long_p to i16*, !dbg !10490
  %bf.load42 = load i16, i16* %21, align 8, !dbg !10491
  %bf.clear65 = and i16 %bf.load42, -4096, !dbg !10492
  store i16 %bf.clear65, i16* %21, align 8, !dbg !10492
  %22 = getelementptr inbounds i8, i8* %5, i64 50, !dbg !10493
  store i8 0, i8* %22, align 2, !dbg !10494
  ret %struct.c_declspecs* %12, !dbg !10495
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @declspecs_add_addrspace(%struct.c_declspecs* %specs, i8 zeroext %as) local_unnamed_addr #5 !dbg !10496 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !10500, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i8 %as, metadata !10501, metadata !DIExpression()), !dbg !10502
  %non_sc_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !10503
  %bf.load = load i8, i8* %non_sc_seen_p, align 8, !dbg !10504
  %bf.set3 = or i8 %bf.load, 10, !dbg !10505
  store i8 %bf.set3, i8* %non_sc_seen_p, align 8, !dbg !10505
  %address_space = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 9, !dbg !10506
  %0 = load i8, i8* %address_space, align 2, !dbg !10506
  %cmp = icmp eq i8 %0, 0, !dbg !10506
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !10508

land.lhs.true:                                    ; preds = %entry
  %cmp8 = icmp eq i8 %0, %as, !dbg !10509
  br i1 %cmp8, label %if.else, label %if.then, !dbg !10510

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i8* @c_addr_space_name(i8 zeroext %as) #6, !dbg !10511
  %1 = load i8, i8* %address_space, align 2, !dbg !10512
  %call11 = tail call i8* @c_addr_space_name(i8 zeroext %1) #6, !dbg !10513
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.130, i64 0, i64 0), i8* %call, i8* %call11) #6, !dbg !10514
  br label %if.end, !dbg !10514

if.else:                                          ; preds = %land.lhs.true, %entry
  store i8 %as, i8* %address_space, align 2, !dbg !10515
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret %struct.c_declspecs* %specs, !dbg !10516
}

declare dso_local i8* @c_addr_space_name(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @declspecs_add_qual(%struct.c_declspecs* %specs, %union.tree_node* %qual) local_unnamed_addr #5 !dbg !10517 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !10521, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata %union.tree_node* %qual, metadata !10522, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata i8 0, metadata !10524, metadata !DIExpression()), !dbg !10525
  %non_sc_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !10526
  %bf.load = load i8, i8* %non_sc_seen_p, align 8, !dbg !10527
  %bf.set3 = or i8 %bf.load, 10, !dbg !10528
  store i8 %bf.set3, i8* %non_sc_seen_p, align 8, !dbg !10528
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %qual, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10529
  %bf.load4 = load i64, i64* %0, align 8, !dbg !10529
  %bf.cast1 = and i64 %bf.load4, 65535, !dbg !10529
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !10529
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !10529

land.lhs.true:                                    ; preds = %entry
  %bf.cast92 = and i64 %bf.load4, 8589934592, !dbg !10529
  %tobool = icmp eq i64 %bf.cast92, 0, !dbg !10529
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10529

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 8469, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10529
  br label %cond.end, !dbg !10529

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %node = getelementptr inbounds %union.tree_node, %union.tree_node* %qual, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10530
  %1 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !10530
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %1, i64 0, i32 2, !dbg !10530
  %2 = load i8, i8* %rid_code, align 1, !dbg !10530
  switch i8 %2, label %sw.default [
    i8 3, label %sw.bb
    i8 9, label %sw.bb19
    i8 12, label %sw.bb29
  ], !dbg !10531

sw.bb:                                            ; preds = %cond.end
  %const_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10532
  %bf.load10 = load i16, i16* %const_p, align 8, !dbg !10532
  %bf.lshr11 = lshr i16 %bf.load10, 8, !dbg !10532
  %bf.clear12 = and i16 %bf.lshr11, 1, !dbg !10532
  %bf.set18 = or i16 %bf.load10, 256, !dbg !10534
  store i16 %bf.set18, i16* %const_p, align 8, !dbg !10534
  br label %sw.epilog, !dbg !10535

sw.bb19:                                          ; preds = %cond.end
  %volatile_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10536
  %bf.load20 = load i16, i16* %volatile_p, align 8, !dbg !10536
  %bf.lshr21 = lshr i16 %bf.load20, 9, !dbg !10536
  %bf.clear22 = and i16 %bf.lshr21, 1, !dbg !10536
  %bf.set28 = or i16 %bf.load20, 512, !dbg !10537
  store i16 %bf.set28, i16* %volatile_p, align 8, !dbg !10537
  br label %sw.epilog, !dbg !10538

sw.bb29:                                          ; preds = %cond.end
  %restrict_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10539
  %bf.load30 = load i16, i16* %restrict_p, align 8, !dbg !10539
  %bf.lshr31 = lshr i16 %bf.load30, 10, !dbg !10539
  %3 = and i16 %bf.lshr31, 1, !dbg !10540
  %bf.set38 = or i16 %bf.load30, 1024, !dbg !10541
  store i16 %bf.set38, i16* %restrict_p, align 8, !dbg !10541
  br label %sw.epilog, !dbg !10542

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 8486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10543
  br label %sw.epilog, !dbg !10544

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb19, %sw.bb
  %dupe.0.shrunk = phi i16 [ 0, %sw.default ], [ %3, %sw.bb29 ], [ %bf.clear22, %sw.bb19 ], [ %bf.clear12, %sw.bb ]
  call void @llvm.dbg.value(metadata i16 %dupe.0.shrunk, metadata !10524, metadata !DIExpression()), !dbg !10525
  %tobool40 = icmp eq i16 %dupe.0.shrunk, 0, !dbg !10545
  %4 = load i32, i32* @flag_isoc99, align 4, !dbg !10547
  %tobool42 = icmp ne i32 %4, 0, !dbg !10547
  %or.cond = or i1 %tobool40, %tobool42, !dbg !10548
  br i1 %or.cond, label %if.end, label %if.then, !dbg !10548

if.then:                                          ; preds = %sw.epilog
  %5 = load i32, i32* @input_location, align 4, !dbg !10549
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 834, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i64 0, i64 0), %union.tree_node* %qual) #6, !dbg !10550
  br label %if.end, !dbg !10550

if.end:                                           ; preds = %sw.epilog, %if.then
  ret %struct.c_declspecs* %specs, !dbg !10551
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @declspecs_add_type(i32 %loc, %struct.c_declspecs* %specs, %struct.c_typespec* byval(%struct.c_typespec) align 8 %spec) local_unnamed_addr #5 !dbg !10552 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10556, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !10557, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.declare(metadata %struct.c_typespec* %spec, metadata !10558, metadata !DIExpression()), !dbg !10578
  %spec1 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %spec, i64 0, i32 1, !dbg !10579
  %0 = load %union.tree_node*, %union.tree_node** %spec1, align 8, !dbg !10579
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10559, metadata !DIExpression()), !dbg !10577
  %non_sc_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !10580
  %bf.load = load i8, i8* %non_sc_seen_p, align 8, !dbg !10581
  %bf.set7 = or i8 %bf.load, 14, !dbg !10582
  store i8 %bf.set7, i8* %non_sc_seen_p, align 8, !dbg !10582
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10583
  %bf.load8 = load i64, i64* %1, align 8, !dbg !10583
  %bf.cast1 = and i64 %bf.load8, 1073741824, !dbg !10583
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !10583
  br i1 %tobool, label %if.end, label %if.then, !dbg !10585

if.then:                                          ; preds = %entry
  %bf.set12 = or i8 %bf.load, -114, !dbg !10586
  store i8 %bf.set12, i8* %non_sc_seen_p, align 8, !dbg !10586
  %bf.load14.pre = load i64, i64* %1, align 8, !dbg !10587
  br label %if.end, !dbg !10588

if.end:                                           ; preds = %entry, %if.then
  %bf.load18 = phi i64 [ %bf.load8, %entry ], [ %bf.load14.pre, %if.then ], !dbg !10587
  %bf.cast162 = and i64 %bf.load18, 65535, !dbg !10589
  %cmp = icmp eq i64 %bf.cast162, 1, !dbg !10589
  br i1 %cmp, label %land.lhs.true, label %if.end814, !dbg !10590

land.lhs.true:                                    ; preds = %if.end
  %bf.cast219 = and i64 %bf.load18, 8589934592, !dbg !10591
  %tobool22 = icmp eq i64 %bf.cast219, 0, !dbg !10591
  br i1 %tobool22, label %if.end814, label %land.lhs.true23, !dbg !10592

land.lhs.true23:                                  ; preds = %land.lhs.true
  %node = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10593
  %2 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !10593
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %2, i64 0, i32 2, !dbg !10593
  %3 = load i8, i8* %rid_code, align 1, !dbg !10593
  %cmp24 = icmp eq i8 %3, 65, !dbg !10594
  br i1 %cmp24, label %if.end814, label %if.then26, !dbg !10595

if.then26:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.value(metadata i8 %3, metadata !10560, metadata !DIExpression()), !dbg !10596
  %type30 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 0, !dbg !10597
  %4 = load %union.tree_node*, %union.tree_node** %type30, align 8, !dbg !10597
  %tobool31 = icmp eq %union.tree_node* %4, null, !dbg !10599
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !10600

if.then32:                                        ; preds = %if.then26
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !10601
  br label %cleanup, !dbg !10603

if.end33:                                         ; preds = %if.then26
  %cmp34 = icmp ult i8 %3, 27, !dbg !10604
  br i1 %cmp34, label %if.then36, label %if.else445, !dbg !10605

if.then36:                                        ; preds = %if.end33
  call void @llvm.dbg.value(metadata i8 0, metadata !10563, metadata !DIExpression()), !dbg !10606
  switch i8 %3, label %sw.default [
    i8 2, label %sw.bb
    i8 7, label %sw.bb111
    i8 10, label %sw.bb178
    i8 1, label %sw.bb238
    i8 13, label %sw.bb300
    i8 15, label %sw.bb367
  ], !dbg !10607

sw.bb:                                            ; preds = %if.then36
  %long_long_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10608
  %bf.load37 = load i16, i16* %long_long_p, align 8, !dbg !10608
  %bf.clear39 = and i16 %bf.load37, 2, !dbg !10608
  %tobool41 = icmp eq i16 %bf.clear39, 0, !dbg !10611
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !10612

if.then42:                                        ; preds = %sw.bb
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.133, i64 0, i64 0)) #6, !dbg !10613
  br label %sw.epilog, !dbg !10615

if.end43:                                         ; preds = %sw.bb
  %bf.clear45 = and i16 %bf.load37, 1, !dbg !10616
  %tobool47 = icmp eq i16 %bf.clear45, 0, !dbg !10618
  br i1 %tobool47, label %if.end57, label %if.then48, !dbg !10619

if.then48:                                        ; preds = %if.end43
  %typespec_word = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10620
  %5 = load i32, i32* %typespec_word, align 8, !dbg !10620
  %cmp49 = icmp eq i32 %5, 6, !dbg !10623
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !10624

if.then51:                                        ; preds = %if.then48
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.134, i64 0, i64 0)) #6, !dbg !10625
  br label %sw.epilog, !dbg !10627

if.end52:                                         ; preds = %if.then48
  tail call void (i32, i32, i8*, ...) @pedwarn_c90(i32 %loc, i32 125, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !10628
  %bf.load54 = load i16, i16* %long_long_p, align 8, !dbg !10629
  %bf.set56 = or i16 %bf.load54, 2, !dbg !10629
  store i16 %bf.set56, i16* %long_long_p, align 8, !dbg !10629
  br label %sw.epilog, !dbg !10630

if.end57:                                         ; preds = %if.end43
  %bf.clear60 = and i16 %bf.load37, 4, !dbg !10631
  %tobool62 = icmp eq i16 %bf.clear60, 0, !dbg !10633
  br i1 %tobool62, label %if.else, label %if.then63, !dbg !10634

if.then63:                                        ; preds = %if.end57
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.136, i64 0, i64 0)) #6, !dbg !10635
  br label %sw.epilog, !dbg !10635

if.else:                                          ; preds = %if.end57
  %typespec_word64 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10636
  %6 = load i32, i32* %typespec_word64, align 8, !dbg !10636
  %cmp65 = icmp eq i32 %6, 1, !dbg !10638
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !10639

if.then67:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.137, i64 0, i64 0)) #6, !dbg !10640
  br label %sw.epilog, !dbg !10640

if.else68:                                        ; preds = %if.else
  %cmp70 = icmp eq i32 %6, 2, !dbg !10641
  br i1 %cmp70, label %if.then72, label %if.else73, !dbg !10643

if.then72:                                        ; preds = %if.else68
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !10644
  br label %sw.epilog, !dbg !10644

if.else73:                                        ; preds = %if.else68
  %cmp75 = icmp eq i32 %6, 3, !dbg !10645
  br i1 %cmp75, label %if.then77, label %if.else78, !dbg !10647

if.then77:                                        ; preds = %if.else73
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0)) #6, !dbg !10648
  br label %sw.epilog, !dbg !10648

if.else78:                                        ; preds = %if.else73
  %cmp80 = icmp eq i32 %6, 5, !dbg !10649
  br i1 %cmp80, label %if.then82, label %if.else83, !dbg !10651

if.then82:                                        ; preds = %if.else78
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.140, i64 0, i64 0)) #6, !dbg !10652
  br label %sw.epilog, !dbg !10652

if.else83:                                        ; preds = %if.else78
  %cmp85 = icmp eq i32 %6, 7, !dbg !10653
  br i1 %cmp85, label %if.then87, label %if.else88, !dbg !10655

if.then87:                                        ; preds = %if.else83
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.141, i64 0, i64 0)) #6, !dbg !10656
  br label %sw.epilog, !dbg !10656

if.else88:                                        ; preds = %if.else83
  %cmp90 = icmp eq i32 %6, 8, !dbg !10657
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !10659

if.then92:                                        ; preds = %if.else88
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.142, i64 0, i64 0)) #6, !dbg !10660
  br label %sw.epilog, !dbg !10660

if.else93:                                        ; preds = %if.else88
  %cmp95 = icmp eq i32 %6, 9, !dbg !10661
  br i1 %cmp95, label %if.then97, label %if.else98, !dbg !10663

if.then97:                                        ; preds = %if.else93
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.143, i64 0, i64 0)) #6, !dbg !10664
  br label %sw.epilog, !dbg !10664

if.else98:                                        ; preds = %if.else93
  %bf.set102 = or i16 %bf.load37, 1, !dbg !10665
  store i16 %bf.set102, i16* %long_long_p, align 8, !dbg !10665
  br label %sw.epilog

sw.bb111:                                         ; preds = %if.then36
  %short_p112 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10666
  %bf.load113 = load i16, i16* %short_p112, align 8, !dbg !10666
  %bf.lshr114 = lshr i16 %bf.load113, 2, !dbg !10666
  %7 = trunc i16 %bf.lshr114 to i8, !dbg !10667
  %conv117 = and i8 %7, 1, !dbg !10667
  call void @llvm.dbg.value(metadata i8 %conv117, metadata !10563, metadata !DIExpression()), !dbg !10606
  %bf.clear120 = and i16 %bf.load113, 1, !dbg !10668
  %tobool122 = icmp eq i16 %bf.clear120, 0, !dbg !10670
  br i1 %tobool122, label %if.else124, label %if.then123, !dbg !10671

if.then123:                                       ; preds = %sw.bb111
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.136, i64 0, i64 0)) #6, !dbg !10672
  br label %sw.epilog, !dbg !10672

if.else124:                                       ; preds = %sw.bb111
  %typespec_word125 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10673
  %8 = load i32, i32* %typespec_word125, align 8, !dbg !10673
  %cmp126 = icmp eq i32 %8, 1, !dbg !10675
  br i1 %cmp126, label %if.then128, label %if.else129, !dbg !10676

if.then128:                                       ; preds = %if.else124
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.144, i64 0, i64 0)) #6, !dbg !10677
  br label %sw.epilog, !dbg !10677

if.else129:                                       ; preds = %if.else124
  %cmp131 = icmp eq i32 %8, 2, !dbg !10678
  br i1 %cmp131, label %if.then133, label %if.else134, !dbg !10680

if.then133:                                       ; preds = %if.else129
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.145, i64 0, i64 0)) #6, !dbg !10681
  br label %sw.epilog, !dbg !10681

if.else134:                                       ; preds = %if.else129
  %cmp136 = icmp eq i32 %8, 3, !dbg !10682
  br i1 %cmp136, label %if.then138, label %if.else139, !dbg !10684

if.then138:                                       ; preds = %if.else134
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.146, i64 0, i64 0)) #6, !dbg !10685
  br label %sw.epilog, !dbg !10685

if.else139:                                       ; preds = %if.else134
  %cmp141 = icmp eq i32 %8, 5, !dbg !10686
  br i1 %cmp141, label %if.then143, label %if.else144, !dbg !10688

if.then143:                                       ; preds = %if.else139
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i64 0, i64 0)) #6, !dbg !10689
  br label %sw.epilog, !dbg !10689

if.else144:                                       ; preds = %if.else139
  %cmp146 = icmp eq i32 %8, 6, !dbg !10690
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !10692

if.then148:                                       ; preds = %if.else144
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.148, i64 0, i64 0)) #6, !dbg !10693
  br label %sw.epilog, !dbg !10693

if.else149:                                       ; preds = %if.else144
  %cmp151 = icmp eq i32 %8, 7, !dbg !10694
  br i1 %cmp151, label %if.then153, label %if.else154, !dbg !10696

if.then153:                                       ; preds = %if.else149
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.149, i64 0, i64 0)) #6, !dbg !10697
  br label %sw.epilog, !dbg !10697

if.else154:                                       ; preds = %if.else149
  %cmp156 = icmp eq i32 %8, 8, !dbg !10698
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !10700

if.then158:                                       ; preds = %if.else154
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.150, i64 0, i64 0)) #6, !dbg !10701
  br label %sw.epilog, !dbg !10701

if.else159:                                       ; preds = %if.else154
  %cmp161 = icmp eq i32 %8, 9, !dbg !10702
  br i1 %cmp161, label %if.then163, label %if.else164, !dbg !10704

if.then163:                                       ; preds = %if.else159
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.151, i64 0, i64 0)) #6, !dbg !10705
  br label %sw.epilog, !dbg !10705

if.else164:                                       ; preds = %if.else159
  %bf.set168 = or i16 %bf.load113, 4, !dbg !10706
  store i16 %bf.set168, i16* %short_p112, align 8, !dbg !10706
  br label %sw.epilog

sw.bb178:                                         ; preds = %if.then36
  %signed_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10707
  %bf.load179 = load i16, i16* %signed_p, align 8, !dbg !10707
  %bf.lshr180 = lshr i16 %bf.load179, 3, !dbg !10707
  %9 = trunc i16 %bf.lshr180 to i8, !dbg !10708
  %conv183 = and i8 %9, 1, !dbg !10708
  call void @llvm.dbg.value(metadata i8 %conv183, metadata !10563, metadata !DIExpression()), !dbg !10606
  %bf.clear186 = and i16 %bf.load179, 16, !dbg !10709
  %tobool188 = icmp eq i16 %bf.clear186, 0, !dbg !10711
  br i1 %tobool188, label %if.else190, label %if.then189, !dbg !10712

if.then189:                                       ; preds = %sw.bb178
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.152, i64 0, i64 0)) #6, !dbg !10713
  br label %sw.epilog, !dbg !10713

if.else190:                                       ; preds = %sw.bb178
  %typespec_word191 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10714
  %10 = load i32, i32* %typespec_word191, align 8, !dbg !10714
  %cmp192 = icmp eq i32 %10, 1, !dbg !10716
  br i1 %cmp192, label %if.then194, label %if.else195, !dbg !10717

if.then194:                                       ; preds = %if.else190
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.153, i64 0, i64 0)) #6, !dbg !10718
  br label %sw.epilog, !dbg !10718

if.else195:                                       ; preds = %if.else190
  %cmp197 = icmp eq i32 %10, 2, !dbg !10719
  br i1 %cmp197, label %if.then199, label %if.else200, !dbg !10721

if.then199:                                       ; preds = %if.else195
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.154, i64 0, i64 0)) #6, !dbg !10722
  br label %sw.epilog, !dbg !10722

if.else200:                                       ; preds = %if.else195
  %cmp202 = icmp eq i32 %10, 5, !dbg !10723
  br i1 %cmp202, label %if.then204, label %if.else205, !dbg !10725

if.then204:                                       ; preds = %if.else200
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.155, i64 0, i64 0)) #6, !dbg !10726
  br label %sw.epilog, !dbg !10726

if.else205:                                       ; preds = %if.else200
  %cmp207 = icmp eq i32 %10, 6, !dbg !10727
  br i1 %cmp207, label %if.then209, label %if.else210, !dbg !10729

if.then209:                                       ; preds = %if.else205
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.156, i64 0, i64 0)) #6, !dbg !10730
  br label %sw.epilog, !dbg !10730

if.else210:                                       ; preds = %if.else205
  %cmp212 = icmp eq i32 %10, 7, !dbg !10731
  br i1 %cmp212, label %if.then214, label %if.else215, !dbg !10733

if.then214:                                       ; preds = %if.else210
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.157, i64 0, i64 0)) #6, !dbg !10734
  br label %sw.epilog, !dbg !10734

if.else215:                                       ; preds = %if.else210
  %cmp217 = icmp eq i32 %10, 8, !dbg !10735
  br i1 %cmp217, label %if.then219, label %if.else220, !dbg !10737

if.then219:                                       ; preds = %if.else215
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.158, i64 0, i64 0)) #6, !dbg !10738
  br label %sw.epilog, !dbg !10738

if.else220:                                       ; preds = %if.else215
  %cmp222 = icmp eq i32 %10, 9, !dbg !10739
  br i1 %cmp222, label %if.then224, label %if.else225, !dbg !10741

if.then224:                                       ; preds = %if.else220
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.159, i64 0, i64 0)) #6, !dbg !10742
  br label %sw.epilog, !dbg !10742

if.else225:                                       ; preds = %if.else220
  %bf.set229 = or i16 %bf.load179, 8, !dbg !10743
  store i16 %bf.set229, i16* %signed_p, align 8, !dbg !10743
  br label %sw.epilog

sw.bb238:                                         ; preds = %if.then36
  %unsigned_p239 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10744
  %bf.load240 = load i16, i16* %unsigned_p239, align 8, !dbg !10744
  %bf.lshr241 = lshr i16 %bf.load240, 4, !dbg !10744
  %11 = trunc i16 %bf.lshr241 to i8, !dbg !10745
  %conv244 = and i8 %11, 1, !dbg !10745
  call void @llvm.dbg.value(metadata i8 %conv244, metadata !10563, metadata !DIExpression()), !dbg !10606
  %bf.clear248 = and i16 %bf.load240, 8, !dbg !10746
  %tobool250 = icmp eq i16 %bf.clear248, 0, !dbg !10748
  br i1 %tobool250, label %if.else252, label %if.then251, !dbg !10749

if.then251:                                       ; preds = %sw.bb238
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.152, i64 0, i64 0)) #6, !dbg !10750
  br label %sw.epilog, !dbg !10750

if.else252:                                       ; preds = %sw.bb238
  %typespec_word253 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10751
  %12 = load i32, i32* %typespec_word253, align 8, !dbg !10751
  %cmp254 = icmp eq i32 %12, 1, !dbg !10753
  br i1 %cmp254, label %if.then256, label %if.else257, !dbg !10754

if.then256:                                       ; preds = %if.else252
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !10755
  br label %sw.epilog, !dbg !10755

if.else257:                                       ; preds = %if.else252
  %cmp259 = icmp eq i32 %12, 2, !dbg !10756
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !10758

if.then261:                                       ; preds = %if.else257
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.161, i64 0, i64 0)) #6, !dbg !10759
  br label %sw.epilog, !dbg !10759

if.else262:                                       ; preds = %if.else257
  %cmp264 = icmp eq i32 %12, 5, !dbg !10760
  br i1 %cmp264, label %if.then266, label %if.else267, !dbg !10762

if.then266:                                       ; preds = %if.else262
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.162, i64 0, i64 0)) #6, !dbg !10763
  br label %sw.epilog, !dbg !10763

if.else267:                                       ; preds = %if.else262
  %cmp269 = icmp eq i32 %12, 6, !dbg !10764
  br i1 %cmp269, label %if.then271, label %if.else272, !dbg !10766

if.then271:                                       ; preds = %if.else267
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.163, i64 0, i64 0)) #6, !dbg !10767
  br label %sw.epilog, !dbg !10767

if.else272:                                       ; preds = %if.else267
  %cmp274 = icmp eq i32 %12, 7, !dbg !10768
  br i1 %cmp274, label %if.then276, label %if.else277, !dbg !10770

if.then276:                                       ; preds = %if.else272
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.164, i64 0, i64 0)) #6, !dbg !10771
  br label %sw.epilog, !dbg !10771

if.else277:                                       ; preds = %if.else272
  %cmp279 = icmp eq i32 %12, 8, !dbg !10772
  br i1 %cmp279, label %if.then281, label %if.else282, !dbg !10774

if.then281:                                       ; preds = %if.else277
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.165, i64 0, i64 0)) #6, !dbg !10775
  br label %sw.epilog, !dbg !10775

if.else282:                                       ; preds = %if.else277
  %cmp284 = icmp eq i32 %12, 9, !dbg !10776
  br i1 %cmp284, label %if.then286, label %if.else287, !dbg !10778

if.then286:                                       ; preds = %if.else282
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.166, i64 0, i64 0)) #6, !dbg !10779
  br label %sw.epilog, !dbg !10779

if.else287:                                       ; preds = %if.else282
  %bf.set291 = or i16 %bf.load240, 16, !dbg !10780
  store i16 %bf.set291, i16* %unsigned_p239, align 8, !dbg !10780
  br label %sw.epilog

sw.bb300:                                         ; preds = %if.then36
  %complex_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10781
  %bf.load301 = load i16, i16* %complex_p, align 8, !dbg !10781
  %bf.lshr302 = lshr i16 %bf.load301, 5, !dbg !10781
  %13 = trunc i16 %bf.lshr302 to i8, !dbg !10782
  %conv305 = and i8 %13, 1, !dbg !10782
  call void @llvm.dbg.value(metadata i8 %conv305, metadata !10563, metadata !DIExpression()), !dbg !10606
  %14 = load i32, i32* @flag_isoc99, align 4, !dbg !10783
  %tobool306 = icmp eq i32 %14, 0, !dbg !10783
  br i1 %tobool306, label %land.lhs.true307, label %if.end312, !dbg !10785

land.lhs.true307:                                 ; preds = %sw.bb300
  %15 = load i32, i32* @input_location, align 4, !dbg !10786
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %15) #6, !dbg !10786
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !10786
  %16 = load i8, i8* %sysp, align 8, !dbg !10786
  %cmp309 = icmp eq i8 %16, 0, !dbg !10786
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !10787

if.then311:                                       ; preds = %land.lhs.true307
  %call = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.167, i64 0, i64 0)) #6, !dbg !10788
  br label %if.end312, !dbg !10788

if.end312:                                        ; preds = %land.lhs.true307, %sw.bb300, %if.then311
  %typespec_word313 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10789
  %17 = load i32, i32* %typespec_word313, align 8, !dbg !10789
  %cmp314 = icmp eq i32 %17, 1, !dbg !10791
  br i1 %cmp314, label %if.then316, label %if.else317, !dbg !10792

if.then316:                                       ; preds = %if.end312
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.168, i64 0, i64 0)) #6, !dbg !10793
  br label %sw.epilog, !dbg !10793

if.else317:                                       ; preds = %if.end312
  %cmp319 = icmp eq i32 %17, 2, !dbg !10794
  br i1 %cmp319, label %if.then321, label %if.else322, !dbg !10796

if.then321:                                       ; preds = %if.else317
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.169, i64 0, i64 0)) #6, !dbg !10797
  br label %sw.epilog, !dbg !10797

if.else322:                                       ; preds = %if.else317
  %cmp324 = icmp eq i32 %17, 7, !dbg !10798
  br i1 %cmp324, label %if.then326, label %if.else327, !dbg !10800

if.then326:                                       ; preds = %if.else322
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.170, i64 0, i64 0)) #6, !dbg !10801
  br label %sw.epilog, !dbg !10801

if.else327:                                       ; preds = %if.else322
  %cmp329 = icmp eq i32 %17, 8, !dbg !10802
  br i1 %cmp329, label %if.then331, label %if.else332, !dbg !10804

if.then331:                                       ; preds = %if.else327
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.171, i64 0, i64 0)) #6, !dbg !10805
  br label %sw.epilog, !dbg !10805

if.else332:                                       ; preds = %if.else327
  %cmp334 = icmp eq i32 %17, 9, !dbg !10806
  br i1 %cmp334, label %if.then336, label %if.else337, !dbg !10808

if.then336:                                       ; preds = %if.else332
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.172, i64 0, i64 0)) #6, !dbg !10809
  br label %sw.epilog, !dbg !10809

if.else337:                                       ; preds = %if.else332
  %cmp339 = icmp eq i32 %17, 10, !dbg !10810
  br i1 %cmp339, label %if.then341, label %if.else342, !dbg !10812

if.then341:                                       ; preds = %if.else337
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.173, i64 0, i64 0)) #6, !dbg !10813
  br label %sw.epilog, !dbg !10813

if.else342:                                       ; preds = %if.else337
  %cmp344 = icmp eq i32 %17, 11, !dbg !10814
  br i1 %cmp344, label %if.then346, label %if.else347, !dbg !10816

if.then346:                                       ; preds = %if.else342
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.174, i64 0, i64 0)) #6, !dbg !10817
  br label %sw.epilog, !dbg !10817

if.else347:                                       ; preds = %if.else342
  %bf.load348 = load i16, i16* %complex_p, align 8, !dbg !10818
  %bf.clear350 = and i16 %bf.load348, 2048, !dbg !10818
  %tobool352 = icmp eq i16 %bf.clear350, 0, !dbg !10820
  br i1 %tobool352, label %if.else354, label %if.then353, !dbg !10821

if.then353:                                       ; preds = %if.else347
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.175, i64 0, i64 0)) #6, !dbg !10822
  br label %sw.epilog, !dbg !10822

if.else354:                                       ; preds = %if.else347
  %bf.set358 = or i16 %bf.load348, 32, !dbg !10823
  store i16 %bf.set358, i16* %complex_p, align 8, !dbg !10823
  br label %sw.epilog

sw.bb367:                                         ; preds = %if.then36
  %saturating_p368 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10824
  %bf.load369 = load i16, i16* %saturating_p368, align 8, !dbg !10824
  %bf.lshr370 = lshr i16 %bf.load369, 11, !dbg !10824
  %18 = trunc i16 %bf.lshr370 to i8, !dbg !10825
  %conv373 = and i8 %18, 1, !dbg !10825
  call void @llvm.dbg.value(metadata i8 %conv373, metadata !10563, metadata !DIExpression()), !dbg !10606
  %call374 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.176, i64 0, i64 0)) #6, !dbg !10826
  %typespec_word375 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10827
  %19 = load i32, i32* %typespec_word375, align 8, !dbg !10827
  %cmp376 = icmp eq i32 %19, 1, !dbg !10829
  br i1 %cmp376, label %if.then378, label %if.else379, !dbg !10830

if.then378:                                       ; preds = %sw.bb367
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.177, i64 0, i64 0)) #6, !dbg !10831
  br label %sw.epilog, !dbg !10831

if.else379:                                       ; preds = %sw.bb367
  %cmp381 = icmp eq i32 %19, 2, !dbg !10832
  br i1 %cmp381, label %if.then383, label %if.else384, !dbg !10834

if.then383:                                       ; preds = %if.else379
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i64 0, i64 0)) #6, !dbg !10835
  br label %sw.epilog, !dbg !10835

if.else384:                                       ; preds = %if.else379
  %cmp386 = icmp eq i32 %19, 3, !dbg !10836
  br i1 %cmp386, label %if.then388, label %if.else389, !dbg !10838

if.then388:                                       ; preds = %if.else384
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.179, i64 0, i64 0)) #6, !dbg !10839
  br label %sw.epilog, !dbg !10839

if.else389:                                       ; preds = %if.else384
  %cmp391 = icmp eq i32 %19, 4, !dbg !10840
  br i1 %cmp391, label %if.then393, label %if.else394, !dbg !10842

if.then393:                                       ; preds = %if.else389
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.180, i64 0, i64 0)) #6, !dbg !10843
  br label %sw.epilog, !dbg !10843

if.else394:                                       ; preds = %if.else389
  %cmp396 = icmp eq i32 %19, 5, !dbg !10844
  br i1 %cmp396, label %if.then398, label %if.else399, !dbg !10846

if.then398:                                       ; preds = %if.else394
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.181, i64 0, i64 0)) #6, !dbg !10847
  br label %sw.epilog, !dbg !10847

if.else399:                                       ; preds = %if.else394
  %cmp401 = icmp eq i32 %19, 6, !dbg !10848
  br i1 %cmp401, label %if.then403, label %if.else404, !dbg !10850

if.then403:                                       ; preds = %if.else399
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.182, i64 0, i64 0)) #6, !dbg !10851
  br label %sw.epilog, !dbg !10851

if.else404:                                       ; preds = %if.else399
  %cmp406 = icmp eq i32 %19, 7, !dbg !10852
  br i1 %cmp406, label %if.then408, label %if.else409, !dbg !10854

if.then408:                                       ; preds = %if.else404
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.183, i64 0, i64 0)) #6, !dbg !10855
  br label %sw.epilog, !dbg !10855

if.else409:                                       ; preds = %if.else404
  %cmp411 = icmp eq i32 %19, 8, !dbg !10856
  br i1 %cmp411, label %if.then413, label %if.else414, !dbg !10858

if.then413:                                       ; preds = %if.else409
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.184, i64 0, i64 0)) #6, !dbg !10859
  br label %sw.epilog, !dbg !10859

if.else414:                                       ; preds = %if.else409
  %cmp416 = icmp eq i32 %19, 9, !dbg !10860
  br i1 %cmp416, label %if.then418, label %if.else419, !dbg !10862

if.then418:                                       ; preds = %if.else414
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.185, i64 0, i64 0)) #6, !dbg !10863
  br label %sw.epilog, !dbg !10863

if.else419:                                       ; preds = %if.else414
  %bf.load421 = load i16, i16* %saturating_p368, align 8, !dbg !10864
  %bf.clear423 = and i16 %bf.load421, 32, !dbg !10864
  %tobool425 = icmp eq i16 %bf.clear423, 0, !dbg !10866
  br i1 %tobool425, label %if.else427, label %if.then426, !dbg !10867

if.then426:                                       ; preds = %if.else419
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.186, i64 0, i64 0)) #6, !dbg !10868
  br label %sw.epilog, !dbg !10868

if.else427:                                       ; preds = %if.else419
  %bf.set431 = or i16 %bf.load421, 2048, !dbg !10869
  store i16 %bf.set431, i16* %saturating_p368, align 8, !dbg !10869
  br label %sw.epilog

sw.default:                                       ; preds = %if.then36
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 8782, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10870
  br label %sw.epilog, !dbg !10871

sw.epilog:                                        ; preds = %if.then378, %if.then388, %if.then398, %if.then408, %if.then418, %if.else427, %if.then426, %if.then413, %if.then403, %if.then393, %if.then383, %if.then316, %if.then326, %if.then336, %if.then346, %if.else354, %if.then353, %if.then341, %if.then331, %if.then321, %if.then251, %if.then261, %if.then271, %if.then281, %if.else287, %if.then286, %if.then276, %if.then266, %if.then256, %if.then189, %if.then199, %if.then209, %if.then219, %if.else225, %if.then224, %if.then214, %if.then204, %if.then194, %if.then123, %if.then133, %if.then143, %if.then153, %if.then163, %if.else164, %if.then158, %if.then148, %if.then138, %if.then128, %if.then63, %if.then72, %if.then82, %if.then92, %if.else98, %if.then97, %if.then87, %if.then77, %if.then67, %sw.default, %if.end52, %if.then51, %if.then42
  %dupe.0 = phi i8 [ 0, %sw.default ], [ 0, %if.then42 ], [ 0, %if.then51 ], [ 0, %if.end52 ], [ 0, %if.then67 ], [ 0, %if.then77 ], [ 0, %if.then87 ], [ 0, %if.then97 ], [ 0, %if.else98 ], [ 0, %if.then92 ], [ 0, %if.then82 ], [ 0, %if.then72 ], [ 0, %if.then63 ], [ %conv117, %if.then128 ], [ %conv117, %if.then138 ], [ %conv117, %if.then148 ], [ %conv117, %if.then158 ], [ %conv117, %if.else164 ], [ %conv117, %if.then163 ], [ %conv117, %if.then153 ], [ %conv117, %if.then143 ], [ %conv117, %if.then133 ], [ %conv117, %if.then123 ], [ %conv183, %if.then194 ], [ %conv183, %if.then204 ], [ %conv183, %if.then214 ], [ %conv183, %if.then224 ], [ %conv183, %if.else225 ], [ %conv183, %if.then219 ], [ %conv183, %if.then209 ], [ %conv183, %if.then199 ], [ %conv183, %if.then189 ], [ %conv244, %if.then256 ], [ %conv244, %if.then266 ], [ %conv244, %if.then276 ], [ %conv244, %if.then286 ], [ %conv244, %if.else287 ], [ %conv244, %if.then281 ], [ %conv244, %if.then271 ], [ %conv244, %if.then261 ], [ %conv244, %if.then251 ], [ %conv305, %if.then321 ], [ %conv305, %if.then331 ], [ %conv305, %if.then341 ], [ %conv305, %if.then353 ], [ %conv305, %if.else354 ], [ %conv305, %if.then346 ], [ %conv305, %if.then336 ], [ %conv305, %if.then326 ], [ %conv305, %if.then316 ], [ %conv373, %if.then383 ], [ %conv373, %if.then393 ], [ %conv373, %if.then403 ], [ %conv373, %if.then413 ], [ %conv373, %if.then426 ], [ %conv373, %if.else427 ], [ %conv373, %if.then418 ], [ %conv373, %if.then408 ], [ %conv373, %if.then398 ], [ %conv373, %if.then388 ], [ %conv373, %if.then378 ], !dbg !10606
  call void @llvm.dbg.value(metadata i8 %dupe.0, metadata !10563, metadata !DIExpression()), !dbg !10606
  %tobool442 = icmp eq i8 %dupe.0, 0, !dbg !10872
  br i1 %tobool442, label %cleanup, label %if.then443, !dbg !10874

if.then443:                                       ; preds = %sw.epilog
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !10875
  br label %cleanup, !dbg !10875

if.else445:                                       ; preds = %if.end33
  %typespec_word446 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !10876
  %20 = load i32, i32* %typespec_word446, align 8, !dbg !10876
  %cmp447 = icmp eq i32 %20, 0, !dbg !10878
  br i1 %cmp447, label %if.end450, label %if.then449, !dbg !10879

if.then449:                                       ; preds = %if.else445
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !10880
  br label %cleanup, !dbg !10882

if.end450:                                        ; preds = %if.else445
  switch i8 %3, label %cleanup [
    i8 32, label %sw.bb451
    i8 69, label %sw.bb506
    i8 29, label %sw.bb561
    i8 28, label %sw.bb589
    i8 30, label %sw.bb600
    i8 31, label %sw.bb646
    i8 62, label %if.else701
    i8 61, label %if.end702
    i8 60, label %if.end703
    i8 63, label %if.end789
    i8 64, label %if.else788
  ], !dbg !10883

sw.bb451:                                         ; preds = %if.end450
  %long_p452 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10884
  %bf.load453 = load i16, i16* %long_p452, align 8, !dbg !10884
  %bf.clear454 = and i16 %bf.load453, 1, !dbg !10884
  %tobool456 = icmp eq i16 %bf.clear454, 0, !dbg !10886
  br i1 %tobool456, label %if.else458, label %if.then457, !dbg !10887

if.then457:                                       ; preds = %sw.bb451
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.137, i64 0, i64 0)) #6, !dbg !10888
  br label %cleanup, !dbg !10888

if.else458:                                       ; preds = %sw.bb451
  %bf.clear462 = and i16 %bf.load453, 4, !dbg !10889
  %tobool464 = icmp eq i16 %bf.clear462, 0, !dbg !10891
  br i1 %tobool464, label %if.else466, label %if.then465, !dbg !10892

if.then465:                                       ; preds = %if.else458
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.144, i64 0, i64 0)) #6, !dbg !10893
  br label %cleanup, !dbg !10893

if.else466:                                       ; preds = %if.else458
  %bf.clear470 = and i16 %bf.load453, 8, !dbg !10894
  %tobool472 = icmp eq i16 %bf.clear470, 0, !dbg !10896
  br i1 %tobool472, label %if.else474, label %if.then473, !dbg !10897

if.then473:                                       ; preds = %if.else466
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.153, i64 0, i64 0)) #6, !dbg !10898
  br label %cleanup, !dbg !10898

if.else474:                                       ; preds = %if.else466
  %bf.clear478 = and i16 %bf.load453, 16, !dbg !10899
  %tobool480 = icmp eq i16 %bf.clear478, 0, !dbg !10901
  br i1 %tobool480, label %if.else482, label %if.then481, !dbg !10902

if.then481:                                       ; preds = %if.else474
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !10903
  br label %cleanup, !dbg !10903

if.else482:                                       ; preds = %if.else474
  %bf.clear486 = and i16 %bf.load453, 32, !dbg !10904
  %tobool488 = icmp eq i16 %bf.clear486, 0, !dbg !10906
  br i1 %tobool488, label %if.else490, label %if.then489, !dbg !10907

if.then489:                                       ; preds = %if.else482
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.168, i64 0, i64 0)) #6, !dbg !10908
  br label %cleanup, !dbg !10908

if.else490:                                       ; preds = %if.else482
  %bf.clear494 = and i16 %bf.load453, 2048, !dbg !10909
  %tobool496 = icmp eq i16 %bf.clear494, 0, !dbg !10911
  br i1 %tobool496, label %if.else498, label %if.then497, !dbg !10912

if.then497:                                       ; preds = %if.else490
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.177, i64 0, i64 0)) #6, !dbg !10913
  br label %cleanup, !dbg !10913

if.else498:                                       ; preds = %if.else490
  store i32 1, i32* %typespec_word446, align 8, !dbg !10914
  br label %cleanup

sw.bb506:                                         ; preds = %if.end450
  %long_p507 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10915
  %bf.load508 = load i16, i16* %long_p507, align 8, !dbg !10915
  %bf.clear509 = and i16 %bf.load508, 1, !dbg !10915
  %tobool511 = icmp eq i16 %bf.clear509, 0, !dbg !10917
  br i1 %tobool511, label %if.else513, label %if.then512, !dbg !10918

if.then512:                                       ; preds = %sw.bb506
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !10919
  br label %cleanup, !dbg !10919

if.else513:                                       ; preds = %sw.bb506
  %bf.clear517 = and i16 %bf.load508, 4, !dbg !10920
  %tobool519 = icmp eq i16 %bf.clear517, 0, !dbg !10922
  br i1 %tobool519, label %if.else521, label %if.then520, !dbg !10923

if.then520:                                       ; preds = %if.else513
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.145, i64 0, i64 0)) #6, !dbg !10924
  br label %cleanup, !dbg !10924

if.else521:                                       ; preds = %if.else513
  %bf.clear525 = and i16 %bf.load508, 8, !dbg !10925
  %tobool527 = icmp eq i16 %bf.clear525, 0, !dbg !10927
  br i1 %tobool527, label %if.else529, label %if.then528, !dbg !10928

if.then528:                                       ; preds = %if.else521
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.154, i64 0, i64 0)) #6, !dbg !10929
  br label %cleanup, !dbg !10929

if.else529:                                       ; preds = %if.else521
  %bf.clear533 = and i16 %bf.load508, 16, !dbg !10930
  %tobool535 = icmp eq i16 %bf.clear533, 0, !dbg !10932
  br i1 %tobool535, label %if.else537, label %if.then536, !dbg !10933

if.then536:                                       ; preds = %if.else529
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.161, i64 0, i64 0)) #6, !dbg !10934
  br label %cleanup, !dbg !10934

if.else537:                                       ; preds = %if.else529
  %bf.clear541 = and i16 %bf.load508, 32, !dbg !10935
  %tobool543 = icmp eq i16 %bf.clear541, 0, !dbg !10937
  br i1 %tobool543, label %if.else545, label %if.then544, !dbg !10938

if.then544:                                       ; preds = %if.else537
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.169, i64 0, i64 0)) #6, !dbg !10939
  br label %cleanup, !dbg !10939

if.else545:                                       ; preds = %if.else537
  %bf.clear549 = and i16 %bf.load508, 2048, !dbg !10940
  %tobool551 = icmp eq i16 %bf.clear549, 0, !dbg !10942
  br i1 %tobool551, label %if.else553, label %if.then552, !dbg !10943

if.then552:                                       ; preds = %if.else545
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i64 0, i64 0)) #6, !dbg !10944
  br label %cleanup, !dbg !10944

if.else553:                                       ; preds = %if.else545
  store i32 2, i32* %typespec_word446, align 8, !dbg !10945
  br label %cleanup

sw.bb561:                                         ; preds = %if.end450
  %long_p562 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10946
  %bf.load563 = load i16, i16* %long_p562, align 8, !dbg !10946
  %bf.clear564 = and i16 %bf.load563, 1, !dbg !10946
  %tobool566 = icmp eq i16 %bf.clear564, 0, !dbg !10948
  br i1 %tobool566, label %if.else568, label %if.then567, !dbg !10949

if.then567:                                       ; preds = %sw.bb561
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0)) #6, !dbg !10950
  br label %cleanup, !dbg !10950

if.else568:                                       ; preds = %sw.bb561
  %bf.clear572 = and i16 %bf.load563, 4, !dbg !10951
  %tobool574 = icmp eq i16 %bf.clear572, 0, !dbg !10953
  br i1 %tobool574, label %if.else576, label %if.then575, !dbg !10954

if.then575:                                       ; preds = %if.else568
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.146, i64 0, i64 0)) #6, !dbg !10955
  br label %cleanup, !dbg !10955

if.else576:                                       ; preds = %if.else568
  %bf.clear580 = and i16 %bf.load563, 2048, !dbg !10956
  %tobool582 = icmp eq i16 %bf.clear580, 0, !dbg !10958
  br i1 %tobool582, label %if.else584, label %if.then583, !dbg !10959

if.then583:                                       ; preds = %if.else576
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.179, i64 0, i64 0)) #6, !dbg !10960
  br label %cleanup, !dbg !10960

if.else584:                                       ; preds = %if.else576
  store i32 3, i32* %typespec_word446, align 8, !dbg !10961
  br label %cleanup

sw.bb589:                                         ; preds = %if.end450
  %saturating_p590 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10962
  %bf.load591 = load i16, i16* %saturating_p590, align 8, !dbg !10962
  %bf.clear593 = and i16 %bf.load591, 2048, !dbg !10962
  %tobool595 = icmp eq i16 %bf.clear593, 0, !dbg !10964
  br i1 %tobool595, label %if.else597, label %if.then596, !dbg !10965

if.then596:                                       ; preds = %sw.bb589
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.180, i64 0, i64 0)) #6, !dbg !10966
  br label %cleanup, !dbg !10966

if.else597:                                       ; preds = %sw.bb589
  store i32 4, i32* %typespec_word446, align 8, !dbg !10967
  br label %cleanup

sw.bb600:                                         ; preds = %if.end450
  %long_p601 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10968
  %bf.load602 = load i16, i16* %long_p601, align 8, !dbg !10968
  %bf.clear603 = and i16 %bf.load602, 1, !dbg !10968
  %tobool605 = icmp eq i16 %bf.clear603, 0, !dbg !10970
  br i1 %tobool605, label %if.else607, label %if.then606, !dbg !10971

if.then606:                                       ; preds = %sw.bb600
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.140, i64 0, i64 0)) #6, !dbg !10972
  br label %cleanup, !dbg !10972

if.else607:                                       ; preds = %sw.bb600
  %bf.clear611 = and i16 %bf.load602, 4, !dbg !10973
  %tobool613 = icmp eq i16 %bf.clear611, 0, !dbg !10975
  br i1 %tobool613, label %if.else615, label %if.then614, !dbg !10976

if.then614:                                       ; preds = %if.else607
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i64 0, i64 0)) #6, !dbg !10977
  br label %cleanup, !dbg !10977

if.else615:                                       ; preds = %if.else607
  %bf.clear619 = and i16 %bf.load602, 8, !dbg !10978
  %tobool621 = icmp eq i16 %bf.clear619, 0, !dbg !10980
  br i1 %tobool621, label %if.else623, label %if.then622, !dbg !10981

if.then622:                                       ; preds = %if.else615
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.155, i64 0, i64 0)) #6, !dbg !10982
  br label %cleanup, !dbg !10982

if.else623:                                       ; preds = %if.else615
  %bf.clear627 = and i16 %bf.load602, 16, !dbg !10983
  %tobool629 = icmp eq i16 %bf.clear627, 0, !dbg !10985
  br i1 %tobool629, label %if.else631, label %if.then630, !dbg !10986

if.then630:                                       ; preds = %if.else623
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.162, i64 0, i64 0)) #6, !dbg !10987
  br label %cleanup, !dbg !10987

if.else631:                                       ; preds = %if.else623
  %bf.clear635 = and i16 %bf.load602, 2048, !dbg !10988
  %tobool637 = icmp eq i16 %bf.clear635, 0, !dbg !10990
  br i1 %tobool637, label %if.else639, label %if.then638, !dbg !10991

if.then638:                                       ; preds = %if.else631
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.181, i64 0, i64 0)) #6, !dbg !10992
  br label %cleanup, !dbg !10992

if.else639:                                       ; preds = %if.else631
  store i32 5, i32* %typespec_word446, align 8, !dbg !10993
  br label %cleanup

sw.bb646:                                         ; preds = %if.end450
  %long_long_p647 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !10994
  %bf.load648 = load i16, i16* %long_long_p647, align 8, !dbg !10994
  %bf.clear650 = and i16 %bf.load648, 2, !dbg !10994
  %tobool652 = icmp eq i16 %bf.clear650, 0, !dbg !10996
  br i1 %tobool652, label %if.else654, label %if.then653, !dbg !10997

if.then653:                                       ; preds = %sw.bb646
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.134, i64 0, i64 0)) #6, !dbg !10998
  br label %cleanup, !dbg !10998

if.else654:                                       ; preds = %sw.bb646
  %bf.clear658 = and i16 %bf.load648, 4, !dbg !10999
  %tobool660 = icmp eq i16 %bf.clear658, 0, !dbg !11001
  br i1 %tobool660, label %if.else662, label %if.then661, !dbg !11002

if.then661:                                       ; preds = %if.else654
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.148, i64 0, i64 0)) #6, !dbg !11003
  br label %cleanup, !dbg !11003

if.else662:                                       ; preds = %if.else654
  %bf.clear666 = and i16 %bf.load648, 8, !dbg !11004
  %tobool668 = icmp eq i16 %bf.clear666, 0, !dbg !11006
  br i1 %tobool668, label %if.else670, label %if.then669, !dbg !11007

if.then669:                                       ; preds = %if.else662
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.156, i64 0, i64 0)) #6, !dbg !11008
  br label %cleanup, !dbg !11008

if.else670:                                       ; preds = %if.else662
  %bf.clear674 = and i16 %bf.load648, 16, !dbg !11009
  %tobool676 = icmp eq i16 %bf.clear674, 0, !dbg !11011
  br i1 %tobool676, label %if.else678, label %if.then677, !dbg !11012

if.then677:                                       ; preds = %if.else670
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.163, i64 0, i64 0)) #6, !dbg !11013
  br label %cleanup, !dbg !11013

if.else678:                                       ; preds = %if.else670
  %bf.clear682 = and i16 %bf.load648, 2048, !dbg !11014
  %tobool684 = icmp eq i16 %bf.clear682, 0, !dbg !11016
  br i1 %tobool684, label %if.else686, label %if.then685, !dbg !11017

if.then685:                                       ; preds = %if.else678
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.182, i64 0, i64 0)) #6, !dbg !11018
  br label %cleanup, !dbg !11018

if.else686:                                       ; preds = %if.else678
  store i32 6, i32* %typespec_word446, align 8, !dbg !11019
  br label %cleanup

if.else701:                                       ; preds = %if.end450
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.189, i64 0, i64 0), metadata !10566, metadata !DIExpression()), !dbg !11020
  br label %if.end702

if.end702:                                        ; preds = %if.end450, %if.else701
  %str.0 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.189, i64 0, i64 0), %if.else701 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.188, i64 0, i64 0), %if.end450 ], !dbg !11021
  call void @llvm.dbg.value(metadata i8* %str.0, metadata !10566, metadata !DIExpression()), !dbg !11020
  br label %if.end703

if.end703:                                        ; preds = %if.end450, %if.end702
  %str.1 = phi i8* [ %str.0, %if.end702 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0), %if.end450 ], !dbg !11024
  call void @llvm.dbg.value(metadata i8* %str.1, metadata !10566, metadata !DIExpression()), !dbg !11020
  %long_long_p704 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11025
  %bf.load705 = load i16, i16* %long_long_p704, align 8, !dbg !11025
  %bf.clear707 = and i16 %bf.load705, 2, !dbg !11025
  %tobool709 = icmp eq i16 %bf.clear707, 0, !dbg !11027
  br i1 %tobool709, label %if.end711, label %if.then710, !dbg !11028

if.then710:                                       ; preds = %if.end703
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.190, i64 0, i64 0), i8* %str.1) #6, !dbg !11029
  %bf.load713.pre = load i16, i16* %long_long_p704, align 8, !dbg !11030
  br label %if.end711, !dbg !11029

if.end711:                                        ; preds = %if.end703, %if.then710
  %bf.load752 = phi i16 [ %bf.load705, %if.end703 ], [ %bf.load713.pre, %if.then710 ], !dbg !11030
  %bf.clear714 = and i16 %bf.load752, 1, !dbg !11030
  %tobool716 = icmp eq i16 %bf.clear714, 0, !dbg !11032
  br i1 %tobool716, label %if.else718, label %if.then717, !dbg !11033

if.then717:                                       ; preds = %if.end711
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.191, i64 0, i64 0), i8* %str.1) #6, !dbg !11034
  br label %if.end777, !dbg !11034

if.else718:                                       ; preds = %if.end711
  %bf.clear722 = and i16 %bf.load752, 4, !dbg !11035
  %tobool724 = icmp eq i16 %bf.clear722, 0, !dbg !11037
  br i1 %tobool724, label %if.else726, label %if.then725, !dbg !11038

if.then725:                                       ; preds = %if.else718
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.192, i64 0, i64 0), i8* %str.1) #6, !dbg !11039
  br label %if.end777, !dbg !11039

if.else726:                                       ; preds = %if.else718
  %bf.clear730 = and i16 %bf.load752, 8, !dbg !11040
  %tobool732 = icmp eq i16 %bf.clear730, 0, !dbg !11042
  br i1 %tobool732, label %if.else734, label %if.then733, !dbg !11043

if.then733:                                       ; preds = %if.else726
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.193, i64 0, i64 0), i8* %str.1) #6, !dbg !11044
  br label %if.end777, !dbg !11044

if.else734:                                       ; preds = %if.else726
  %bf.clear738 = and i16 %bf.load752, 16, !dbg !11045
  %tobool740 = icmp eq i16 %bf.clear738, 0, !dbg !11047
  br i1 %tobool740, label %if.else742, label %if.then741, !dbg !11048

if.then741:                                       ; preds = %if.else734
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.194, i64 0, i64 0), i8* %str.1) #6, !dbg !11049
  br label %if.end777, !dbg !11049

if.else742:                                       ; preds = %if.else734
  %bf.clear746 = and i16 %bf.load752, 32, !dbg !11050
  %tobool748 = icmp eq i16 %bf.clear746, 0, !dbg !11052
  br i1 %tobool748, label %if.else750, label %if.then749, !dbg !11053

if.then749:                                       ; preds = %if.else742
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.195, i64 0, i64 0), i8* %str.1) #6, !dbg !11054
  br label %if.end777, !dbg !11054

if.else750:                                       ; preds = %if.else742
  %bf.clear754 = and i16 %bf.load752, 2048, !dbg !11055
  %tobool756 = icmp eq i16 %bf.clear754, 0, !dbg !11057
  br i1 %tobool756, label %if.else758, label %if.then757, !dbg !11058

if.then757:                                       ; preds = %if.else750
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.196, i64 0, i64 0), i8* %str.1) #6, !dbg !11059
  br label %if.end777, !dbg !11059

if.else758:                                       ; preds = %if.else750
  switch i8 %3, label %if.else768 [
    i8 60, label %if.then761
    i8 61, label %if.then766
  ], !dbg !11060

if.then761:                                       ; preds = %if.else758
  store i32 7, i32* %typespec_word446, align 8, !dbg !11061
  br label %if.end777, !dbg !11063

if.then766:                                       ; preds = %if.else758
  store i32 8, i32* %typespec_word446, align 8, !dbg !11064
  br label %if.end777, !dbg !11066

if.else768:                                       ; preds = %if.else758
  store i32 9, i32* %typespec_word446, align 8, !dbg !11067
  br label %if.end777

if.end777:                                        ; preds = %if.then725, %if.then741, %if.then757, %if.then766, %if.else768, %if.then761, %if.then749, %if.then733, %if.then717
  %21 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 19), align 8, !dbg !11068
  %call778 = tail call zeroext i8 %21() #6, !dbg !11070
  %tobool779 = icmp eq i8 %call778, 0, !dbg !11070
  br i1 %tobool779, label %if.then780, label %if.end781, !dbg !11071

if.then780:                                       ; preds = %if.end777
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.197, i64 0, i64 0)) #6, !dbg !11072
  br label %if.end781, !dbg !11072

if.end781:                                        ; preds = %if.end777, %if.then780
  %call782 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.198, i64 0, i64 0)) #6, !dbg !11073
  br label %cleanup, !dbg !11074

if.else788:                                       ; preds = %if.end450
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i64 0, i64 0), metadata !10570, metadata !DIExpression()), !dbg !11075
  br label %if.end789

if.end789:                                        ; preds = %if.end450, %if.else788
  %str784.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i64 0, i64 0), %if.else788 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i64 0, i64 0), %if.end450 ], !dbg !11076
  call void @llvm.dbg.value(metadata i8* %str784.0, metadata !10570, metadata !DIExpression()), !dbg !11075
  %complex_p790 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11078
  %bf.load791 = load i16, i16* %complex_p790, align 8, !dbg !11078
  %bf.clear793 = and i16 %bf.load791, 32, !dbg !11078
  %tobool795 = icmp eq i16 %bf.clear793, 0, !dbg !11080
  br i1 %tobool795, label %if.else797, label %if.then796, !dbg !11081

if.then796:                                       ; preds = %if.end789
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.195, i64 0, i64 0), i8* %str784.0) #6, !dbg !11082
  br label %if.end805, !dbg !11082

if.else797:                                       ; preds = %if.end789
  %cmp798 = icmp eq i8 %3, 63, !dbg !11083
  br i1 %cmp798, label %if.then800, label %if.else802, !dbg !11085

if.then800:                                       ; preds = %if.else797
  store i32 10, i32* %typespec_word446, align 8, !dbg !11086
  br label %if.end805, !dbg !11087

if.else802:                                       ; preds = %if.else797
  store i32 11, i32* %typespec_word446, align 8, !dbg !11088
  br label %if.end805

if.end805:                                        ; preds = %if.then800, %if.else802, %if.then796
  %22 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !11089
  %call806 = tail call zeroext i8 %22() #6, !dbg !11091
  %tobool807 = icmp eq i8 %call806, 0, !dbg !11091
  br i1 %tobool807, label %if.then808, label %if.end809, !dbg !11092

if.then808:                                       ; preds = %if.end805
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.201, i64 0, i64 0)) #6, !dbg !11093
  br label %if.end809, !dbg !11093

if.end809:                                        ; preds = %if.end805, %if.then808
  %call810 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.202, i64 0, i64 0)) #6, !dbg !11094
  br label %cleanup, !dbg !11095

cleanup:                                          ; preds = %sw.epilog, %if.end450, %if.then653, %if.then669, %if.then685, %if.else686, %if.then677, %if.then661, %if.then606, %if.then622, %if.then638, %if.else639, %if.then630, %if.then614, %if.then596, %if.else597, %if.then567, %if.then583, %if.else584, %if.then575, %if.then512, %if.then528, %if.then544, %if.else553, %if.then552, %if.then536, %if.then520, %if.then457, %if.then473, %if.then489, %if.else498, %if.then497, %if.then481, %if.then465, %if.then443, %if.end809, %if.end781, %if.then449, %if.then32
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then32 ], [ false, %if.then449 ], [ false, %if.end809 ], [ false, %if.end781 ], [ false, %if.then443 ], [ false, %sw.epilog ], [ false, %if.then465 ], [ false, %if.then481 ], [ false, %if.then497 ], [ false, %if.else498 ], [ false, %if.then489 ], [ false, %if.then473 ], [ false, %if.then457 ], [ false, %if.then520 ], [ false, %if.then536 ], [ false, %if.then552 ], [ false, %if.else553 ], [ false, %if.then544 ], [ false, %if.then528 ], [ false, %if.then512 ], [ false, %if.then575 ], [ false, %if.else584 ], [ false, %if.then583 ], [ false, %if.then567 ], [ false, %if.else597 ], [ false, %if.then596 ], [ false, %if.then614 ], [ false, %if.then630 ], [ false, %if.else639 ], [ false, %if.then638 ], [ false, %if.then622 ], [ false, %if.then606 ], [ false, %if.then661 ], [ false, %if.then677 ], [ false, %if.else686 ], [ false, %if.then685 ], [ false, %if.then669 ], [ false, %if.then653 ], [ true, %if.end450 ]
  br i1 %cleanup.dest.slot.0, label %if.end814, label %cleanup988

if.end814:                                        ; preds = %land.lhs.true23, %land.lhs.true, %cleanup, %if.end
  %type815 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 0, !dbg !11096
  %23 = load %union.tree_node*, %union.tree_node** %type815, align 8, !dbg !11096
  %tobool816 = icmp eq %union.tree_node* %23, null, !dbg !11097
  br i1 %tobool816, label %lor.lhs.false, label %if.then854, !dbg !11098

lor.lhs.false:                                    ; preds = %if.end814
  %typespec_word817 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !11099
  %24 = load i32, i32* %typespec_word817, align 8, !dbg !11099
  %cmp818 = icmp eq i32 %24, 0, !dbg !11100
  br i1 %cmp818, label %lor.lhs.false820, label %if.then854, !dbg !11101

lor.lhs.false820:                                 ; preds = %lor.lhs.false
  %long_p821 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11102
  %bf.load822 = load i16, i16* %long_p821, align 8, !dbg !11102
  %bf.clear823 = and i16 %bf.load822, 1, !dbg !11102
  %tobool825 = icmp eq i16 %bf.clear823, 0, !dbg !11103
  br i1 %tobool825, label %lor.lhs.false826, label %if.then854, !dbg !11104

lor.lhs.false826:                                 ; preds = %lor.lhs.false820
  %bf.clear830 = and i16 %bf.load822, 4, !dbg !11105
  %tobool832 = icmp eq i16 %bf.clear830, 0, !dbg !11106
  br i1 %tobool832, label %lor.lhs.false833, label %if.then854, !dbg !11107

lor.lhs.false833:                                 ; preds = %lor.lhs.false826
  %bf.clear837 = and i16 %bf.load822, 8, !dbg !11108
  %tobool839 = icmp eq i16 %bf.clear837, 0, !dbg !11109
  br i1 %tobool839, label %lor.lhs.false840, label %if.then854, !dbg !11110

lor.lhs.false840:                                 ; preds = %lor.lhs.false833
  %bf.clear844 = and i16 %bf.load822, 16, !dbg !11111
  %tobool846 = icmp eq i16 %bf.clear844, 0, !dbg !11112
  br i1 %tobool846, label %lor.lhs.false847, label %if.then854, !dbg !11113

lor.lhs.false847:                                 ; preds = %lor.lhs.false840
  %bf.clear851 = and i16 %bf.load822, 32, !dbg !11114
  %tobool853 = icmp eq i16 %bf.clear851, 0, !dbg !11115
  br i1 %tobool853, label %if.else855, label %if.then854, !dbg !11116

if.then854:                                       ; preds = %lor.lhs.false847, %lor.lhs.false840, %lor.lhs.false833, %lor.lhs.false826, %lor.lhs.false820, %lor.lhs.false, %if.end814
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !11117
  br label %cleanup988, !dbg !11117

if.else855:                                       ; preds = %lor.lhs.false847
  %bf.load857 = load i64, i64* %1, align 8, !dbg !11118
  %bf.cast8593 = and i64 %bf.load857, 65535, !dbg !11119
  %cmp860 = icmp eq i64 %bf.cast8593, 35, !dbg !11119
  br i1 %cmp860, label %if.then862, label %if.else898, !dbg !11120

if.then862:                                       ; preds = %if.else855
  %type863 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11121
  %25 = load %union.tree_node*, %union.tree_node** %type863, align 8, !dbg !11121
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11124
  %cmp864 = icmp eq %union.tree_node* %25, %26, !dbg !11125
  br i1 %cmp864, label %cleanup988, label %if.else867, !dbg !11126

if.else867:                                       ; preds = %if.then862
  %27 = ptrtoint %union.tree_node* %25 to i64, !dbg !11126
  %28 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11127
  store i64 %27, i64* %28, align 8, !dbg !11127
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !11129
  %29 = bitcast %union.tree_node** %attributes to i64*, !dbg !11129
  %30 = load i64, i64* %29, align 8, !dbg !11129
  %decl_attr = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 2, !dbg !11130
  %31 = bitcast %union.tree_node** %decl_attr to i64*, !dbg !11131
  store i64 %30, i64* %31, align 8, !dbg !11131
  %bf.load871 = load i8, i8* %non_sc_seen_p, align 8, !dbg !11132
  %bf.set873 = or i8 %bf.load871, 16, !dbg !11132
  store i8 %bf.set873, i8* %non_sc_seen_p, align 8, !dbg !11132
  %lang_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11133
  %32 = bitcast i40* %lang_flag_1 to i64*, !dbg !11133
  %bf.load875 = load i64, i64* %32, align 8, !dbg !11133
  %33 = lshr i64 %bf.load875, 10, !dbg !11134
  %34 = trunc i64 %33 to i8, !dbg !11134
  %bf.shl = and i8 %34, 64, !dbg !11134
  %bf.clear880 = and i8 %bf.set873, -65, !dbg !11134
  %bf.set881 = or i8 %bf.clear880, %bf.shl, !dbg !11134
  store i8 %bf.set881, i8* %non_sc_seen_p, align 8, !dbg !11134
  %35 = load i32, i32* @warn_cxx_compat, align 4, !dbg !11135
  %tobool882 = icmp eq i32 %35, 0, !dbg !11135
  br i1 %tobool882, label %if.end889, label %land.lhs.true883, !dbg !11137

land.lhs.true883:                                 ; preds = %if.else867
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11138
  %36 = bitcast %union.tree_node** %name to %struct.lang_identifier**, !dbg !11138
  %37 = load %struct.lang_identifier*, %struct.lang_identifier** %36, align 8, !dbg !11138
  %symbol_binding = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %37, i64 0, i32 1, !dbg !11138
  %38 = load %struct.c_binding*, %struct.c_binding** %symbol_binding, align 8, !dbg !11138
  %in_struct = getelementptr inbounds %struct.c_binding, %struct.c_binding* %38, i64 0, i32 5, !dbg !11139
  %bf.load884 = load i32, i32* %in_struct, align 8, !dbg !11139
  %tobool886 = icmp slt i32 %bf.load884, 0, !dbg !11138
  br i1 %tobool886, label %if.then887, label %if.end889, !dbg !11140

if.then887:                                       ; preds = %land.lhs.true883
  %call888 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.203, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !11141
  %.pre = load i32, i32* @warn_cxx_compat, align 4, !dbg !11142
  br label %if.end889, !dbg !11141

if.end889:                                        ; preds = %if.else867, %if.then887, %land.lhs.true883
  %39 = phi i32 [ 0, %if.else867 ], [ %.pre, %if.then887 ], [ %35, %land.lhs.true883 ], !dbg !11142
  %tobool890 = icmp ne i32 %39, 0, !dbg !11142
  %40 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** @struct_parse_info, align 8, !dbg !11144
  %cmp892 = icmp ne %struct.c_struct_parse_info* %40, null, !dbg !11145
  %or.cond = and i1 %tobool890, %cmp892, !dbg !11146
  br i1 %or.cond, label %if.then894, label %cleanup988, !dbg !11146

if.then894:                                       ; preds = %if.end889
  %typedefs_seen = getelementptr inbounds %struct.c_struct_parse_info, %struct.c_struct_parse_info* %40, i64 0, i32 2, !dbg !11147
  %call895 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %typedefs_seen, %union.tree_node* %0) #7, !dbg !11147
  br label %cleanup988, !dbg !11147

if.else898:                                       ; preds = %if.else855
  %cmp903 = icmp eq i64 %bf.cast8593, 1, !dbg !11148
  br i1 %cmp903, label %if.then905, label %if.else928, !dbg !11149

if.then905:                                       ; preds = %if.else898
  %call906 = call %union.tree_node* @lookup_name(%union.tree_node* %0) #7, !dbg !11150
  call void @llvm.dbg.value(metadata %union.tree_node* %call906, metadata !10572, metadata !DIExpression()), !dbg !11151
  %tobool907 = icmp eq %union.tree_node* %call906, null, !dbg !11152
  br i1 %tobool907, label %if.then915, label %lor.lhs.false908, !dbg !11154

lor.lhs.false908:                                 ; preds = %if.then905
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call906, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11155
  %bf.load910 = load i64, i64* %41, align 8, !dbg !11155
  %bf.cast9127 = and i64 %bf.load910, 65535, !dbg !11156
  %cmp913 = icmp eq i64 %bf.cast9127, 35, !dbg !11156
  br i1 %cmp913, label %if.else916, label %if.then915, !dbg !11157

if.then915:                                       ; preds = %lor.lhs.false908, %if.then905
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.204, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !11158
  br label %cleanup988, !dbg !11158

if.else916:                                       ; preds = %lor.lhs.false908
  %type918 = getelementptr inbounds %union.tree_node, %union.tree_node* %call906, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11159
  %42 = load %union.tree_node*, %union.tree_node** %type918, align 8, !dbg !11159
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11161
  %cmp919 = icmp eq %union.tree_node* %42, %43, !dbg !11162
  br i1 %cmp919, label %cleanup988, label %if.else922, !dbg !11163

if.else922:                                       ; preds = %if.else916
  %44 = ptrtoint %union.tree_node* %42 to i64, !dbg !11163
  %45 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11164
  store i64 %44, i64* %45, align 8, !dbg !11164
  br label %cleanup988

if.else928:                                       ; preds = %if.else898
  %cmp933 = icmp eq i64 %bf.cast8593, 0, !dbg !11165
  br i1 %cmp933, label %cleanup988, label %if.then935, !dbg !11167

if.then935:                                       ; preds = %if.else928
  %kind = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %spec, i64 0, i32 0, !dbg !11168
  %46 = load i32, i32* %kind, align 8, !dbg !11168
  %cmp936 = icmp eq i32 %46, 3, !dbg !11171
  br i1 %cmp936, label %if.then942, label %lor.lhs.false938, !dbg !11172

lor.lhs.false938:                                 ; preds = %if.then935
  %cmp940 = icmp eq i32 %46, 2, !dbg !11173
  br i1 %cmp940, label %if.then942, label %if.end946, !dbg !11174

if.then942:                                       ; preds = %lor.lhs.false938, %if.then935
  %bf.load943 = load i8, i8* %non_sc_seen_p, align 8, !dbg !11175
  %bf.set945 = or i8 %bf.load943, 32, !dbg !11175
  store i8 %bf.set945, i8* %non_sc_seen_p, align 8, !dbg !11175
  br label %if.end946, !dbg !11176

if.end946:                                        ; preds = %if.then942, %lor.lhs.false938
  %cmp948 = icmp eq i32 %46, 6, !dbg !11177
  br i1 %cmp948, label %if.then950, label %if.end982, !dbg !11179

if.then950:                                       ; preds = %if.end946
  %bf.load952 = load i8, i8* %non_sc_seen_p, align 8, !dbg !11180
  %bf.set954 = or i8 %bf.load952, 16, !dbg !11180
  store i8 %bf.set954, i8* %non_sc_seen_p, align 8, !dbg !11180
  %expr = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %spec, i64 0, i32 2, !dbg !11182
  %47 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !11182
  %tobool955 = icmp eq %union.tree_node* %47, null, !dbg !11184
  br i1 %tobool955, label %if.end982, label %if.then956, !dbg !11185

if.then956:                                       ; preds = %if.then950
  %expr957 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 1, !dbg !11186
  %48 = load %union.tree_node*, %union.tree_node** %expr957, align 8, !dbg !11186
  %tobool958 = icmp eq %union.tree_node* %48, null, !dbg !11189
  br i1 %tobool958, label %if.else967, label %if.then959, !dbg !11190

if.then959:                                       ; preds = %if.then956
  %type962 = getelementptr inbounds %union.tree_node, %union.tree_node* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11191
  %49 = load %union.tree_node*, %union.tree_node** %type962, align 8, !dbg !11191
  %call965 = call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %49, %union.tree_node* nonnull %48, %union.tree_node* nonnull %47) #6, !dbg !11191
  store %union.tree_node* %call965, %union.tree_node** %expr957, align 8, !dbg !11192
  %bf.load973.pre = load i8, i8* %non_sc_seen_p, align 8, !dbg !11193
  br label %if.end970, !dbg !11194

if.else967:                                       ; preds = %if.then956
  store %union.tree_node* %47, %union.tree_node** %expr957, align 8, !dbg !11195
  br label %if.end970

if.end970:                                        ; preds = %if.else967, %if.then959
  %bf.load973 = phi i8 [ %bf.set954, %if.else967 ], [ %bf.load973.pre, %if.then959 ], !dbg !11193
  %expr_const_operands = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %spec, i64 0, i32 3, !dbg !11196
  %50 = load i8, i8* %expr_const_operands, align 8, !dbg !11196
  %bf.clear974 = and i8 %bf.load973, 1, !dbg !11193
  %and6 = and i8 %bf.clear974, %50, !dbg !11193
  %bf.clear978 = and i8 %bf.load973, -2, !dbg !11193
  %bf.set979 = or i8 %bf.clear978, %and6, !dbg !11193
  store i8 %bf.set979, i8* %non_sc_seen_p, align 8, !dbg !11193
  br label %if.end982, !dbg !11197

if.end982:                                        ; preds = %if.then950, %if.end970, %if.end946
  store %union.tree_node* %0, %union.tree_node** %type815, align 8, !dbg !11198
  br label %cleanup988, !dbg !11199

cleanup988:                                       ; preds = %if.else928, %if.then854, %if.else922, %if.else916, %if.then915, %if.end982, %if.then862, %if.then894, %if.end889, %cleanup
  ret %struct.c_declspecs* %specs, !dbg !11200
}

declare dso_local void @pedwarn_c90(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @declspecs_add_scspec(%struct.c_declspecs* %specs, %union.tree_node* %scspec) local_unnamed_addr #5 !dbg !11201 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !11203, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata %union.tree_node* %scspec, metadata !11204, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 0, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i8 0, metadata !11207, metadata !DIExpression()), !dbg !11208
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !11209
  %bf.load = load i8, i8* %declspecs_seen_p, align 8, !dbg !11210
  %bf.set = or i8 %bf.load, 2, !dbg !11210
  store i8 %bf.set, i8* %declspecs_seen_p, align 8, !dbg !11210
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %scspec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11211
  %bf.load1 = load i64, i64* %0, align 8, !dbg !11211
  %bf.cast1 = and i64 %bf.load1, 65535, !dbg !11211
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !11211
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !11211

land.lhs.true:                                    ; preds = %entry
  %bf.cast62 = and i64 %bf.load1, 8589934592, !dbg !11211
  %tobool = icmp eq i64 %bf.cast62, 0, !dbg !11211
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !11211

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9099, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11211
  %bf.load7.pre = load i8, i8* %declspecs_seen_p, align 8, !dbg !11212
  br label %cond.end, !dbg !11211

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %bf.load7 = phi i8 [ %bf.set, %land.lhs.true ], [ %bf.load7.pre, %cond.true ], !dbg !11212
  %node = getelementptr inbounds %union.tree_node, %union.tree_node* %scspec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11214
  %1 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !11214
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %1, i64 0, i32 2, !dbg !11214
  %2 = load i8, i8* %rid_code, align 1, !dbg !11214
  %bf.clear9 = and i8 %bf.load7, 8, !dbg !11212
  %tobool11 = icmp eq i8 %bf.clear9, 0, !dbg !11215
  br i1 %tobool11, label %if.end, label %if.then, !dbg !11216

if.then:                                          ; preds = %cond.end
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 147, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %scspec) #6, !dbg !11217
  br label %if.end, !dbg !11217

if.end:                                           ; preds = %cond.end, %if.then
  switch i8 %2, label %sw.default [
    i8 8, label %sw.bb
    i8 14, label %sw.bb15
    i8 11, label %sw.epilog
    i8 4, label %sw.bb42
    i8 5, label %sw.bb51
    i8 0, label %sw.bb52
    i8 6, label %sw.bb61
  ], !dbg !11218

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 0, metadata !11207, metadata !DIExpression()), !dbg !11208
  %inline_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11219
  %bf.load12 = load i16, i16* %inline_p, align 8, !dbg !11221
  %bf.set14 = or i16 %bf.load12, 64, !dbg !11221
  store i16 %bf.set14, i16* %inline_p, align 8, !dbg !11221
  br label %sw.epilog, !dbg !11222

sw.bb15:                                          ; preds = %if.end
  %thread_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11223
  %bf.load16 = load i16, i16* %thread_p, align 8, !dbg !11223
  %bf.lshr17 = lshr i16 %bf.load16, 7, !dbg !11223
  %3 = trunc i16 %bf.lshr17 to i8, !dbg !11224
  %conv20 = and i8 %3, 1, !dbg !11224
  call void @llvm.dbg.value(metadata i8 %conv20, metadata !11207, metadata !DIExpression()), !dbg !11208
  %storage_class = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 5, !dbg !11225
  %4 = load i32, i32* %storage_class, align 4, !dbg !11225
  %cmp21 = icmp eq i32 %4, 1, !dbg !11227
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !11228

if.then23:                                        ; preds = %sw.bb15
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.206, i64 0, i64 0)) #6, !dbg !11229
  br label %sw.epilog, !dbg !11229

if.else:                                          ; preds = %sw.bb15
  %cmp25 = icmp eq i32 %4, 3, !dbg !11230
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !11232

if.then27:                                        ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.207, i64 0, i64 0)) #6, !dbg !11233
  br label %sw.epilog, !dbg !11233

if.else28:                                        ; preds = %if.else
  %cmp30 = icmp eq i32 %4, 5, !dbg !11234
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !11236

if.then32:                                        ; preds = %if.else28
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.208, i64 0, i64 0)) #6, !dbg !11237
  br label %sw.epilog, !dbg !11237

if.else33:                                        ; preds = %if.else28
  %bf.set37 = or i16 %bf.load16, 128, !dbg !11238
  store i16 %bf.set37, i16* %thread_p, align 8, !dbg !11238
  br label %sw.epilog

sw.bb42:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 2, metadata !11206, metadata !DIExpression()), !dbg !11208
  %thread_p43 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11239
  %bf.load44 = load i16, i16* %thread_p43, align 8, !dbg !11239
  %5 = trunc i16 %bf.load44 to i8, !dbg !11241
  %tobool48 = icmp slt i8 %5, 0, !dbg !11241
  br i1 %tobool48, label %if.then49, label %sw.epilog, !dbg !11242

if.then49:                                        ; preds = %sw.bb42
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.209, i64 0, i64 0)) #6, !dbg !11243
  br label %sw.epilog, !dbg !11243

sw.bb51:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 3, metadata !11206, metadata !DIExpression()), !dbg !11208
  br label %sw.epilog, !dbg !11244

sw.bb52:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 4, metadata !11206, metadata !DIExpression()), !dbg !11208
  %thread_p53 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11245
  %bf.load54 = load i16, i16* %thread_p53, align 8, !dbg !11245
  %6 = trunc i16 %bf.load54 to i8, !dbg !11247
  %tobool58 = icmp slt i8 %6, 0, !dbg !11247
  br i1 %tobool58, label %if.then59, label %sw.epilog, !dbg !11248

if.then59:                                        ; preds = %sw.bb52
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.210, i64 0, i64 0)) #6, !dbg !11249
  br label %sw.epilog, !dbg !11249

sw.bb61:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 5, metadata !11206, metadata !DIExpression()), !dbg !11208
  br label %sw.epilog, !dbg !11250

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11251
  br label %sw.epilog, !dbg !11252

sw.epilog:                                        ; preds = %sw.bb52, %if.then59, %sw.bb42, %if.then49, %if.end, %if.then23, %if.then32, %if.else33, %if.then27, %sw.default, %sw.bb61, %sw.bb51, %sw.bb
  %n.0 = phi i32 [ 0, %sw.default ], [ 5, %sw.bb61 ], [ 3, %sw.bb51 ], [ 0, %sw.bb ], [ 0, %if.then27 ], [ 0, %if.else33 ], [ 0, %if.then32 ], [ 0, %if.then23 ], [ 1, %if.end ], [ 2, %if.then49 ], [ 2, %sw.bb42 ], [ 4, %if.then59 ], [ 4, %sw.bb52 ], !dbg !11208
  %dupe.0 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb61 ], [ 0, %sw.bb51 ], [ 0, %sw.bb ], [ %conv20, %if.then27 ], [ %conv20, %if.else33 ], [ %conv20, %if.then32 ], [ %conv20, %if.then23 ], [ 0, %if.end ], [ 0, %if.then49 ], [ 0, %sw.bb42 ], [ 0, %if.then59 ], [ 0, %sw.bb52 ], !dbg !11208
  call void @llvm.dbg.value(metadata i8 %dupe.0, metadata !11207, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !11206, metadata !DIExpression()), !dbg !11208
  %cmp62 = icmp eq i32 %n.0, 0, !dbg !11253
  br i1 %cmp62, label %if.end69, label %land.lhs.true64, !dbg !11255

land.lhs.true64:                                  ; preds = %sw.epilog
  %storage_class65 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 5, !dbg !11256
  %7 = load i32, i32* %storage_class65, align 4, !dbg !11256
  %cmp66 = icmp eq i32 %n.0, %7, !dbg !11257
  %spec.select = select i1 %cmp66, i8 1, i8 %dupe.0, !dbg !11258
  br label %if.end69, !dbg !11258

if.end69:                                         ; preds = %sw.epilog, %land.lhs.true64
  %dupe.1 = phi i8 [ %dupe.0, %sw.epilog ], [ %spec.select, %land.lhs.true64 ], !dbg !11208
  call void @llvm.dbg.value(metadata i8 %dupe.1, metadata !11207, metadata !DIExpression()), !dbg !11208
  %tobool70 = icmp eq i8 %dupe.1, 0, !dbg !11259
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !11261

if.then71:                                        ; preds = %if.end69
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i64 0, i64 0), %union.tree_node* %scspec) #6, !dbg !11262
  br label %if.end72, !dbg !11262

if.end72:                                         ; preds = %if.end69, %if.then71
  br i1 %cmp62, label %if.end104, label %if.then75, !dbg !11263

if.then75:                                        ; preds = %if.end72
  %storage_class76 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 5, !dbg !11264
  %8 = load i32, i32* %storage_class76, align 4, !dbg !11264
  %cmp77 = icmp eq i32 %8, 0, !dbg !11268
  br i1 %cmp77, label %if.else84, label %land.lhs.true79, !dbg !11269

land.lhs.true79:                                  ; preds = %if.then75
  %cmp81 = icmp eq i32 %n.0, %8, !dbg !11270
  br i1 %cmp81, label %if.else84, label %if.then83, !dbg !11271

if.then83:                                        ; preds = %land.lhs.true79
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.211, i64 0, i64 0)) #6, !dbg !11272
  br label %if.end104, !dbg !11274

if.else84:                                        ; preds = %land.lhs.true79, %if.then75
  store i32 %n.0, i32* %storage_class76, align 4, !dbg !11275
  switch i32 %n.0, label %land.lhs.true91 [
    i32 2, label %if.end104
    i32 4, label %if.end104
  ], !dbg !11277

land.lhs.true91:                                  ; preds = %if.else84
  %thread_p92 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11279
  %bf.load93 = load i16, i16* %thread_p92, align 8, !dbg !11279
  %9 = trunc i16 %bf.load93 to i8, !dbg !11280
  %tobool97 = icmp slt i8 %9, 0, !dbg !11280
  br i1 %tobool97, label %if.then98, label %if.end104, !dbg !11281

if.then98:                                        ; preds = %land.lhs.true91
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.212, i64 0, i64 0), %union.tree_node* %scspec) #6, !dbg !11282
  %bf.load100 = load i16, i16* %thread_p92, align 8, !dbg !11284
  %bf.clear101 = and i16 %bf.load100, -129, !dbg !11284
  store i16 %bf.clear101, i16* %thread_p92, align 8, !dbg !11284
  br label %if.end104, !dbg !11285

if.end104:                                        ; preds = %if.end72, %if.then83, %if.else84, %if.else84, %if.then98, %land.lhs.true91
  ret %struct.c_declspecs* %specs, !dbg !11286
}

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @declspecs_add_attrs(%struct.c_declspecs* %specs, %union.tree_node* %attrs) local_unnamed_addr #5 !dbg !11287 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !11289, metadata !DIExpression()), !dbg !11291
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !11290, metadata !DIExpression()), !dbg !11291
  %attrs1 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 3, !dbg !11292
  %0 = load %union.tree_node*, %union.tree_node** %attrs1, align 8, !dbg !11292
  %call = tail call %union.tree_node* @chainon(%union.tree_node* %attrs, %union.tree_node* %0) #6, !dbg !11293
  store %union.tree_node* %call, %union.tree_node** %attrs1, align 8, !dbg !11294
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !11295
  %bf.load = load i8, i8* %declspecs_seen_p, align 8, !dbg !11296
  %bf.set = or i8 %bf.load, 2, !dbg !11296
  store i8 %bf.set, i8* %declspecs_seen_p, align 8, !dbg !11296
  ret %struct.c_declspecs* %specs, !dbg !11297
}

declare dso_local %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs* %specs) local_unnamed_addr #5 !dbg !11298 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !11302, metadata !DIExpression()), !dbg !11303
  %type = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 0, !dbg !11304
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11304
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !11306
  br i1 %cmp, label %if.end, label %if.then, !dbg !11307

if.then:                                          ; preds = %entry
  %long_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11308
  %bf.load = load i16, i16* %long_p, align 8, !dbg !11308
  %bf.clear = and i16 %bf.load, 1, !dbg !11308
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !11308
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !11308

land.lhs.true:                                    ; preds = %if.then
  %bf.clear2 = and i16 %bf.load, 2, !dbg !11308
  %tobool4 = icmp eq i16 %bf.clear2, 0, !dbg !11308
  br i1 %tobool4, label %land.lhs.true5, label %cond.true, !dbg !11308

land.lhs.true5:                                   ; preds = %land.lhs.true
  %bf.clear8 = and i16 %bf.load, 4, !dbg !11308
  %tobool10 = icmp eq i16 %bf.clear8, 0, !dbg !11308
  br i1 %tobool10, label %land.lhs.true11, label %cond.true, !dbg !11308

land.lhs.true11:                                  ; preds = %land.lhs.true5
  %bf.clear14 = and i16 %bf.load, 8, !dbg !11308
  %tobool16 = icmp eq i16 %bf.clear14, 0, !dbg !11308
  br i1 %tobool16, label %land.lhs.true17, label %cond.true, !dbg !11308

land.lhs.true17:                                  ; preds = %land.lhs.true11
  %bf.clear20 = and i16 %bf.load, 16, !dbg !11308
  %tobool22 = icmp eq i16 %bf.clear20, 0, !dbg !11308
  br i1 %tobool22, label %land.lhs.true23, label %cond.true, !dbg !11308

land.lhs.true23:                                  ; preds = %land.lhs.true17
  %bf.clear26 = and i16 %bf.load, 32, !dbg !11308
  %tobool28 = icmp eq i16 %bf.clear26, 0, !dbg !11308
  br i1 %tobool28, label %return, label %cond.true, !dbg !11308

cond.true:                                        ; preds = %land.lhs.true23, %land.lhs.true17, %land.lhs.true11, %land.lhs.true5, %land.lhs.true, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11308
  br label %return, !dbg !11308

if.end:                                           ; preds = %entry
  %typespec_word = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 4, !dbg !11310
  %1 = load i32, i32* %typespec_word, align 8, !dbg !11310
  %cmp29 = icmp eq i32 %1, 0, !dbg !11312
  br i1 %cmp29, label %if.then30, label %if.end83, !dbg !11313

if.then30:                                        ; preds = %if.end
  %saturating_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11314
  %bf.load31 = load i16, i16* %saturating_p, align 8, !dbg !11314
  %bf.clear33 = and i16 %bf.load31, 2048, !dbg !11314
  %tobool35 = icmp eq i16 %bf.clear33, 0, !dbg !11317
  br i1 %tobool35, label %if.else, label %if.then36, !dbg !11318

if.then36:                                        ; preds = %if.then30
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.213, i64 0, i64 0)) #6, !dbg !11319
  %2 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !11321
  %call = tail call zeroext i8 %2() #6, !dbg !11323
  %tobool37 = icmp eq i8 %call, 0, !dbg !11323
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11324

if.then38:                                        ; preds = %if.then36
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.201, i64 0, i64 0)) #6, !dbg !11325
  br label %if.end39, !dbg !11325

if.end39:                                         ; preds = %if.then36, %if.then38
  store i32 10, i32* %typespec_word, align 8, !dbg !11326
  br label %if.end83, !dbg !11327

if.else:                                          ; preds = %if.then30
  %bf.clear43 = and i16 %bf.load31, 1, !dbg !11328
  %tobool45 = icmp eq i16 %bf.clear43, 0, !dbg !11330
  br i1 %tobool45, label %lor.lhs.false, label %if.then66, !dbg !11331

lor.lhs.false:                                    ; preds = %if.else
  %bf.clear49 = and i16 %bf.load31, 4, !dbg !11332
  %tobool51 = icmp eq i16 %bf.clear49, 0, !dbg !11333
  br i1 %tobool51, label %lor.lhs.false52, label %if.then66, !dbg !11334

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %bf.clear56 = and i16 %bf.load31, 8, !dbg !11335
  %tobool58 = icmp eq i16 %bf.clear56, 0, !dbg !11336
  br i1 %tobool58, label %lor.lhs.false59, label %if.then66, !dbg !11337

lor.lhs.false59:                                  ; preds = %lor.lhs.false52
  %bf.clear63 = and i16 %bf.load31, 16, !dbg !11338
  %tobool65 = icmp eq i16 %bf.clear63, 0, !dbg !11339
  br i1 %tobool65, label %if.else68, label %if.then66, !dbg !11340

if.then66:                                        ; preds = %lor.lhs.false59, %lor.lhs.false52, %lor.lhs.false, %if.else
  store i32 4, i32* %typespec_word, align 8, !dbg !11341
  br label %if.end83, !dbg !11343

if.else68:                                        ; preds = %lor.lhs.false59
  %bf.clear72 = and i16 %bf.load31, 32, !dbg !11344
  %tobool74 = icmp eq i16 %bf.clear72, 0, !dbg !11346
  br i1 %tobool74, label %if.else78, label %if.then75, !dbg !11347

if.then75:                                        ; preds = %if.else68
  store i32 6, i32* %typespec_word, align 8, !dbg !11348
  %3 = load i32, i32* @input_location, align 4, !dbg !11350
  %call77 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 834, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.214, i64 0, i64 0)) #6, !dbg !11351
  %.pre = load i32, i32* %typespec_word, align 8, !dbg !11352
  br label %if.end83, !dbg !11353

if.else78:                                        ; preds = %if.else68
  store i32 4, i32* %typespec_word, align 8, !dbg !11354
  %default_int_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 7, !dbg !11356
  store i32 1, i32* %default_int_p, align 4, !dbg !11357
  br label %if.end83

if.end83:                                         ; preds = %if.end39, %if.then75, %if.else78, %if.then66, %if.end
  %4 = phi i32 [ 10, %if.end39 ], [ %.pre, %if.then75 ], [ 4, %if.else78 ], [ 4, %if.then66 ], [ %1, %if.end ], !dbg !11352
  %signed_p84 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 8, !dbg !11358
  %bf.load85 = load i16, i16* %signed_p84, align 8, !dbg !11358
  %explicit_signed_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !11359
  %bf.load89 = load i8, i8* %explicit_signed_p, align 8, !dbg !11360
  %bf.load85.tr = trunc i16 %bf.load85 to i8, !dbg !11360
  %5 = shl i8 %bf.load85.tr, 3, !dbg !11360
  %bf.shl = and i8 %5, 64, !dbg !11360
  %bf.clear90 = and i8 %bf.load89, -65, !dbg !11360
  %bf.set = or i8 %bf.clear90, %bf.shl, !dbg !11360
  store i8 %bf.set, i8* %explicit_signed_p, align 8, !dbg !11360
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb130
    i32 3, label %sw.bb169
    i32 4, label %sw.bb236
    i32 5, label %sw.bb352
    i32 6, label %sw.bb394
    i32 7, label %sw.bb456
    i32 8, label %sw.bb456
    i32 9, label %sw.bb456
    i32 10, label %sw.bb514
    i32 11, label %sw.bb680
  ], !dbg !11361

sw.bb:                                            ; preds = %if.end83
  %bf.clear94 = and i16 %bf.load85, 1, !dbg !11362
  %tobool96 = icmp eq i16 %bf.clear94, 0, !dbg !11362
  br i1 %tobool96, label %land.lhs.true97, label %cond.true125, !dbg !11362

land.lhs.true97:                                  ; preds = %sw.bb
  %bf.clear101 = and i16 %bf.load85, 4, !dbg !11362
  %tobool103 = icmp eq i16 %bf.clear101, 0, !dbg !11362
  br i1 %tobool103, label %land.lhs.true104, label %cond.true125, !dbg !11362

land.lhs.true104:                                 ; preds = %land.lhs.true97
  %bf.clear108 = and i16 %bf.load85, 8, !dbg !11362
  %tobool110 = icmp eq i16 %bf.clear108, 0, !dbg !11362
  br i1 %tobool110, label %land.lhs.true111, label %cond.true125, !dbg !11362

land.lhs.true111:                                 ; preds = %land.lhs.true104
  %bf.clear115 = and i16 %bf.load85, 16, !dbg !11362
  %tobool117 = icmp eq i16 %bf.clear115, 0, !dbg !11362
  br i1 %tobool117, label %land.lhs.true118, label %cond.true125, !dbg !11362

land.lhs.true118:                                 ; preds = %land.lhs.true111
  %bf.clear122 = and i16 %bf.load85, 32, !dbg !11362
  %tobool124 = icmp eq i16 %bf.clear122, 0, !dbg !11362
  br i1 %tobool124, label %cond.end127, label %cond.true125, !dbg !11362

cond.true125:                                     ; preds = %land.lhs.true118, %land.lhs.true111, %land.lhs.true104, %land.lhs.true97, %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9249, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11362
  br label %cond.end127, !dbg !11362

cond.end127:                                      ; preds = %land.lhs.true118, %cond.true125
  %6 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !11364
  %7 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11365
  store i64 %6, i64* %7, align 8, !dbg !11365
  br label %return, !dbg !11366

sw.bb130:                                         ; preds = %if.end83
  %bf.clear133 = and i16 %bf.load85, 1, !dbg !11367
  %tobool135 = icmp eq i16 %bf.clear133, 0, !dbg !11367
  br i1 %tobool135, label %land.lhs.true136, label %cond.true164, !dbg !11367

land.lhs.true136:                                 ; preds = %sw.bb130
  %bf.clear140 = and i16 %bf.load85, 4, !dbg !11367
  %tobool142 = icmp eq i16 %bf.clear140, 0, !dbg !11367
  br i1 %tobool142, label %land.lhs.true143, label %cond.true164, !dbg !11367

land.lhs.true143:                                 ; preds = %land.lhs.true136
  %bf.clear147 = and i16 %bf.load85, 8, !dbg !11367
  %tobool149 = icmp eq i16 %bf.clear147, 0, !dbg !11367
  br i1 %tobool149, label %land.lhs.true150, label %cond.true164, !dbg !11367

land.lhs.true150:                                 ; preds = %land.lhs.true143
  %bf.clear154 = and i16 %bf.load85, 16, !dbg !11367
  %tobool156 = icmp eq i16 %bf.clear154, 0, !dbg !11367
  br i1 %tobool156, label %land.lhs.true157, label %cond.true164, !dbg !11367

land.lhs.true157:                                 ; preds = %land.lhs.true150
  %bf.clear161 = and i16 %bf.load85, 32, !dbg !11367
  %tobool163 = icmp eq i16 %bf.clear161, 0, !dbg !11367
  br i1 %tobool163, label %cond.end166, label %cond.true164, !dbg !11367

cond.true164:                                     ; preds = %land.lhs.true157, %land.lhs.true150, %land.lhs.true143, %land.lhs.true136, %sw.bb130
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9255, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11367
  br label %cond.end166, !dbg !11367

cond.end166:                                      ; preds = %land.lhs.true157, %cond.true164
  %8 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64*), align 8, !dbg !11368
  %9 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11369
  store i64 %8, i64* %9, align 8, !dbg !11369
  br label %return, !dbg !11370

sw.bb169:                                         ; preds = %if.end83
  %bf.clear172 = and i16 %bf.load85, 1, !dbg !11371
  %tobool174 = icmp eq i16 %bf.clear172, 0, !dbg !11371
  br i1 %tobool174, label %land.lhs.true175, label %cond.true182, !dbg !11371

land.lhs.true175:                                 ; preds = %sw.bb169
  %bf.clear179 = and i16 %bf.load85, 4, !dbg !11371
  %tobool181 = icmp eq i16 %bf.clear179, 0, !dbg !11371
  br i1 %tobool181, label %cond.end184, label %cond.true182, !dbg !11371

cond.true182:                                     ; preds = %land.lhs.true175, %sw.bb169
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11371
  %bf.load187.pre = load i16, i16* %signed_p84, align 8, !dbg !11372
  br label %cond.end184, !dbg !11371

cond.end184:                                      ; preds = %land.lhs.true175, %cond.true182
  %bf.load194 = phi i16 [ %bf.load85, %land.lhs.true175 ], [ %bf.load187.pre, %cond.true182 ], !dbg !11372
  %bf.clear189 = and i16 %bf.load194, 8, !dbg !11372
  %tobool191 = icmp eq i16 %bf.clear189, 0, !dbg !11372
  br i1 %tobool191, label %cond.end201, label %land.lhs.true192, !dbg !11372

land.lhs.true192:                                 ; preds = %cond.end184
  %bf.clear196 = and i16 %bf.load194, 16, !dbg !11372
  %tobool198 = icmp eq i16 %bf.clear196, 0, !dbg !11372
  br i1 %tobool198, label %cond.end201, label %cond.true199, !dbg !11372

cond.true199:                                     ; preds = %land.lhs.true192
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11372
  %bf.load204.pre = load i16, i16* %signed_p84, align 8, !dbg !11373
  br label %cond.end201, !dbg !11372

cond.end201:                                      ; preds = %land.lhs.true192, %cond.end184, %cond.true199
  %bf.load225 = phi i16 [ %bf.load194, %land.lhs.true192 ], [ %bf.load194, %cond.end184 ], [ %bf.load204.pre, %cond.true199 ], !dbg !11373
  %bf.clear206 = and i16 %bf.load225, 8, !dbg !11373
  %tobool208 = icmp eq i16 %bf.clear206, 0, !dbg !11375
  br i1 %tobool208, label %if.else211, label %if.then209, !dbg !11376

if.then209:                                       ; preds = %cond.end201
  %10 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to i64*), align 8, !dbg !11377
  %11 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11378
  store i64 %10, i64* %11, align 8, !dbg !11378
  br label %if.end223, !dbg !11379

if.else211:                                       ; preds = %cond.end201
  %bf.clear215 = and i16 %bf.load225, 16, !dbg !11380
  %tobool217 = icmp eq i16 %bf.clear215, 0, !dbg !11382
  br i1 %tobool217, label %if.else220, label %if.then218, !dbg !11383

if.then218:                                       ; preds = %if.else211
  %12 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2) to i64*), align 16, !dbg !11384
  %13 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11385
  store i64 %12, i64* %13, align 8, !dbg !11385
  br label %if.end223, !dbg !11386

if.else220:                                       ; preds = %if.else211
  %14 = load i64, i64* bitcast ([11 x %union.tree_node*]* @integer_types to i64*), align 16, !dbg !11387
  %15 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11388
  store i64 %14, i64* %15, align 8, !dbg !11388
  br label %if.end223

if.end223:                                        ; preds = %if.then218, %if.else220, %if.then209
  %bf.clear227 = and i16 %bf.load225, 32, !dbg !11389
  %tobool229 = icmp eq i16 %bf.clear227, 0, !dbg !11391
  br i1 %tobool229, label %return, label %if.then230, !dbg !11392

if.then230:                                       ; preds = %if.end223
  %16 = load i32, i32* @input_location, align 4, !dbg !11393
  %call231 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %16, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.215, i64 0, i64 0)) #6, !dbg !11395
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11396
  %call233 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %17) #6, !dbg !11397
  store %union.tree_node* %call233, %union.tree_node** %type, align 8, !dbg !11398
  br label %return, !dbg !11399

sw.bb236:                                         ; preds = %if.end83
  %bf.clear239 = and i16 %bf.load85, 1, !dbg !11400
  %tobool241 = icmp eq i16 %bf.clear239, 0, !dbg !11400
  br i1 %tobool241, label %cond.end251, label %land.lhs.true242, !dbg !11400

land.lhs.true242:                                 ; preds = %sw.bb236
  %bf.clear246 = and i16 %bf.load85, 4, !dbg !11400
  %tobool248 = icmp eq i16 %bf.clear246, 0, !dbg !11400
  br i1 %tobool248, label %cond.end251, label %cond.true249, !dbg !11400

cond.true249:                                     ; preds = %land.lhs.true242
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11400
  %bf.load254.pre = load i16, i16* %signed_p84, align 8, !dbg !11401
  br label %cond.end251, !dbg !11400

cond.end251:                                      ; preds = %land.lhs.true242, %sw.bb236, %cond.true249
  %bf.load261 = phi i16 [ %bf.load85, %land.lhs.true242 ], [ %bf.load85, %sw.bb236 ], [ %bf.load254.pre, %cond.true249 ], !dbg !11401
  %bf.clear256 = and i16 %bf.load261, 8, !dbg !11401
  %tobool258 = icmp eq i16 %bf.clear256, 0, !dbg !11401
  br i1 %tobool258, label %cond.end268, label %land.lhs.true259, !dbg !11401

land.lhs.true259:                                 ; preds = %cond.end251
  %bf.clear263 = and i16 %bf.load261, 16, !dbg !11401
  %tobool265 = icmp eq i16 %bf.clear263, 0, !dbg !11401
  br i1 %tobool265, label %cond.end268, label %cond.true266, !dbg !11401

cond.true266:                                     ; preds = %land.lhs.true259
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9276, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11401
  %bf.load271.pre = load i16, i16* %signed_p84, align 8, !dbg !11402
  br label %cond.end268, !dbg !11401

cond.end268:                                      ; preds = %land.lhs.true259, %cond.end251, %cond.true266
  %bf.load341 = phi i16 [ %bf.load261, %land.lhs.true259 ], [ %bf.load261, %cond.end251 ], [ %bf.load271.pre, %cond.true266 ], !dbg !11402
  %bf.clear273 = and i16 %bf.load341, 2, !dbg !11402
  %tobool275 = icmp eq i16 %bf.clear273, 0, !dbg !11404
  br i1 %tobool275, label %if.else288, label %if.then276, !dbg !11405

if.then276:                                       ; preds = %cond.end268
  %bf.clear280 = and i16 %bf.load341, 16, !dbg !11406
  %tobool282 = icmp eq i16 %bf.clear280, 0, !dbg !11407
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !11407
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !11407
  %cond286 = select i1 %tobool282, %union.tree_node* %19, %union.tree_node* %18, !dbg !11407
  store %union.tree_node* %cond286, %union.tree_node** %type, align 8, !dbg !11408
  br label %if.end339, !dbg !11409

if.else288:                                       ; preds = %cond.end268
  %bf.clear291 = and i16 %bf.load341, 1, !dbg !11410
  %tobool293 = icmp eq i16 %bf.clear291, 0, !dbg !11412
  br i1 %tobool293, label %if.else306, label %if.then294, !dbg !11413

if.then294:                                       ; preds = %if.else288
  %bf.clear298 = and i16 %bf.load341, 16, !dbg !11414
  %tobool300 = icmp eq i16 %bf.clear298, 0, !dbg !11415
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !11415
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !11415
  %cond304 = select i1 %tobool300, %union.tree_node* %21, %union.tree_node* %20, !dbg !11415
  store %union.tree_node* %cond304, %union.tree_node** %type, align 8, !dbg !11416
  br label %if.end339, !dbg !11417

if.else306:                                       ; preds = %if.else288
  %bf.clear310 = and i16 %bf.load341, 4, !dbg !11418
  %tobool312 = icmp eq i16 %bf.clear310, 0, !dbg !11420
  %bf.clear317 = and i16 %bf.load341, 16, !dbg !11421
  %tobool319 = icmp ne i16 %bf.clear317, 0, !dbg !11421
  br i1 %tobool312, label %if.else325, label %if.then313, !dbg !11422

if.then313:                                       ; preds = %if.else306
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !11423
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !11423
  %cond323 = select i1 %tobool319, %union.tree_node* %22, %union.tree_node* %23, !dbg !11423
  store %union.tree_node* %cond323, %union.tree_node** %type, align 8, !dbg !11424
  br label %if.end339, !dbg !11425

if.else325:                                       ; preds = %if.else306
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !11426
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11426
  %cond335 = select i1 %tobool319, %union.tree_node* %24, %union.tree_node* %25, !dbg !11426
  store %union.tree_node* %cond335, %union.tree_node** %type, align 8, !dbg !11427
  br label %if.end339

if.end339:                                        ; preds = %if.then294, %if.else325, %if.then313, %if.then276
  %bf.clear343 = and i16 %bf.load341, 32, !dbg !11428
  %tobool345 = icmp eq i16 %bf.clear343, 0, !dbg !11430
  br i1 %tobool345, label %return, label %if.then346, !dbg !11431

if.then346:                                       ; preds = %if.end339
  %26 = load i32, i32* @input_location, align 4, !dbg !11432
  %call347 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %26, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.215, i64 0, i64 0)) #6, !dbg !11434
  %27 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11435
  %call349 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %27) #6, !dbg !11436
  store %union.tree_node* %call349, %union.tree_node** %type, align 8, !dbg !11437
  br label %return, !dbg !11438

sw.bb352:                                         ; preds = %if.end83
  %bf.clear355 = and i16 %bf.load85, 1, !dbg !11439
  %tobool357 = icmp eq i16 %bf.clear355, 0, !dbg !11439
  br i1 %tobool357, label %land.lhs.true358, label %cond.true379, !dbg !11439

land.lhs.true358:                                 ; preds = %sw.bb352
  %bf.clear362 = and i16 %bf.load85, 4, !dbg !11439
  %tobool364 = icmp eq i16 %bf.clear362, 0, !dbg !11439
  br i1 %tobool364, label %land.lhs.true365, label %cond.true379, !dbg !11439

land.lhs.true365:                                 ; preds = %land.lhs.true358
  %bf.clear369 = and i16 %bf.load85, 8, !dbg !11439
  %tobool371 = icmp eq i16 %bf.clear369, 0, !dbg !11439
  br i1 %tobool371, label %land.lhs.true372, label %cond.true379, !dbg !11439

land.lhs.true372:                                 ; preds = %land.lhs.true365
  %bf.clear376 = and i16 %bf.load85, 16, !dbg !11439
  %tobool378 = icmp eq i16 %bf.clear376, 0, !dbg !11439
  br i1 %tobool378, label %cond.end381, label %cond.true379, !dbg !11439

cond.true379:                                     ; preds = %land.lhs.true372, %land.lhs.true365, %land.lhs.true358, %sw.bb352
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9302, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11439
  %bf.load384.pre = load i16, i16* %signed_p84, align 8, !dbg !11440
  br label %cond.end381, !dbg !11439

cond.end381:                                      ; preds = %land.lhs.true372, %cond.true379
  %bf.load384 = phi i16 [ %bf.load85, %land.lhs.true372 ], [ %bf.load384.pre, %cond.true379 ], !dbg !11440
  %bf.clear386 = and i16 %bf.load384, 32, !dbg !11440
  %tobool388 = icmp eq i16 %bf.clear386, 0, !dbg !11441
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 16, !dbg !11441
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11441
  %cond392 = select i1 %tobool388, %union.tree_node* %29, %union.tree_node* %28, !dbg !11441
  store %union.tree_node* %cond392, %union.tree_node** %type, align 8, !dbg !11442
  br label %return, !dbg !11443

sw.bb394:                                         ; preds = %if.end83
  %bf.clear398 = and i16 %bf.load85, 2, !dbg !11444
  %tobool400 = icmp eq i16 %bf.clear398, 0, !dbg !11444
  br i1 %tobool400, label %land.lhs.true401, label %cond.true422, !dbg !11444

land.lhs.true401:                                 ; preds = %sw.bb394
  %bf.clear405 = and i16 %bf.load85, 4, !dbg !11444
  %tobool407 = icmp eq i16 %bf.clear405, 0, !dbg !11444
  br i1 %tobool407, label %land.lhs.true408, label %cond.true422, !dbg !11444

land.lhs.true408:                                 ; preds = %land.lhs.true401
  %bf.clear412 = and i16 %bf.load85, 8, !dbg !11444
  %tobool414 = icmp eq i16 %bf.clear412, 0, !dbg !11444
  br i1 %tobool414, label %land.lhs.true415, label %cond.true422, !dbg !11444

land.lhs.true415:                                 ; preds = %land.lhs.true408
  %bf.clear419 = and i16 %bf.load85, 16, !dbg !11444
  %tobool421 = icmp eq i16 %bf.clear419, 0, !dbg !11444
  br i1 %tobool421, label %cond.end424, label %cond.true422, !dbg !11444

cond.true422:                                     ; preds = %land.lhs.true415, %land.lhs.true408, %land.lhs.true401, %sw.bb394
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9309, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11444
  %bf.load427.pre = load i16, i16* %signed_p84, align 8, !dbg !11445
  br label %cond.end424, !dbg !11444

cond.end424:                                      ; preds = %land.lhs.true415, %cond.true422
  %bf.load427 = phi i16 [ %bf.load85, %land.lhs.true415 ], [ %bf.load427.pre, %cond.true422 ], !dbg !11445
  %bf.clear428 = and i16 %bf.load427, 1, !dbg !11445
  %tobool430 = icmp eq i16 %bf.clear428, 0, !dbg !11447
  %bf.clear435 = and i16 %bf.load427, 32, !dbg !11448
  %tobool437 = icmp ne i16 %bf.clear435, 0, !dbg !11448
  br i1 %tobool430, label %if.else443, label %if.then431, !dbg !11449

if.then431:                                       ; preds = %cond.end424
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 16, !dbg !11450
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !11450
  %cond441 = select i1 %tobool437, %union.tree_node* %30, %union.tree_node* %31, !dbg !11450
  store %union.tree_node* %cond441, %union.tree_node** %type, align 8, !dbg !11452
  br label %return, !dbg !11453

if.else443:                                       ; preds = %cond.end424
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !11454
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !11454
  %cond453 = select i1 %tobool437, %union.tree_node* %32, %union.tree_node* %33, !dbg !11454
  store %union.tree_node* %cond453, %union.tree_node** %type, align 8, !dbg !11456
  br label %return

sw.bb456:                                         ; preds = %if.end83, %if.end83, %if.end83
  %bf.clear459 = and i16 %bf.load85, 1, !dbg !11457
  %tobool461 = icmp eq i16 %bf.clear459, 0, !dbg !11457
  br i1 %tobool461, label %land.lhs.true462, label %cond.true497, !dbg !11457

land.lhs.true462:                                 ; preds = %sw.bb456
  %bf.clear466 = and i16 %bf.load85, 2, !dbg !11457
  %tobool468 = icmp eq i16 %bf.clear466, 0, !dbg !11457
  br i1 %tobool468, label %land.lhs.true469, label %cond.true497, !dbg !11457

land.lhs.true469:                                 ; preds = %land.lhs.true462
  %bf.clear473 = and i16 %bf.load85, 4, !dbg !11457
  %tobool475 = icmp eq i16 %bf.clear473, 0, !dbg !11457
  br i1 %tobool475, label %land.lhs.true476, label %cond.true497, !dbg !11457

land.lhs.true476:                                 ; preds = %land.lhs.true469
  %bf.clear480 = and i16 %bf.load85, 8, !dbg !11457
  %tobool482 = icmp eq i16 %bf.clear480, 0, !dbg !11457
  br i1 %tobool482, label %land.lhs.true483, label %cond.true497, !dbg !11457

land.lhs.true483:                                 ; preds = %land.lhs.true476
  %bf.clear487 = and i16 %bf.load85, 16, !dbg !11457
  %tobool489 = icmp eq i16 %bf.clear487, 0, !dbg !11457
  br i1 %tobool489, label %land.lhs.true490, label %cond.true497, !dbg !11457

land.lhs.true490:                                 ; preds = %land.lhs.true483
  %bf.clear494 = and i16 %bf.load85, 32, !dbg !11457
  %tobool496 = icmp eq i16 %bf.clear494, 0, !dbg !11457
  br i1 %tobool496, label %cond.end499, label %cond.true497, !dbg !11457

cond.true497:                                     ; preds = %land.lhs.true490, %land.lhs.true483, %land.lhs.true476, %land.lhs.true469, %land.lhs.true462, %sw.bb456
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9327, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11457
  %.pre1 = load i32, i32* %typespec_word, align 8, !dbg !11458
  br label %cond.end499, !dbg !11457

cond.end499:                                      ; preds = %land.lhs.true490, %cond.true497
  %34 = phi i32 [ %4, %land.lhs.true490 ], [ %.pre1, %cond.true497 ], !dbg !11458
  %cmp502 = icmp eq i32 %34, 7, !dbg !11460
  br i1 %cmp502, label %if.then503, label %if.else505, !dbg !11461

if.then503:                                       ; preds = %cond.end499
  %35 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49) to i64*), align 8, !dbg !11462
  %36 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11463
  store i64 %35, i64* %36, align 8, !dbg !11463
  br label %return, !dbg !11464

if.else505:                                       ; preds = %cond.end499
  %cmp507 = icmp eq i32 %34, 8, !dbg !11465
  br i1 %cmp507, label %if.then508, label %if.else510, !dbg !11467

if.then508:                                       ; preds = %if.else505
  %37 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50) to i64*), align 16, !dbg !11468
  %38 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11469
  store i64 %37, i64* %38, align 8, !dbg !11469
  br label %return, !dbg !11470

if.else510:                                       ; preds = %if.else505
  %39 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51) to i64*), align 8, !dbg !11471
  %40 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11472
  store i64 %39, i64* %40, align 8, !dbg !11472
  br label %return

sw.bb514:                                         ; preds = %if.end83
  %bf.clear518 = and i16 %bf.load85, 32, !dbg !11473
  %tobool520 = icmp eq i16 %bf.clear518, 0, !dbg !11473
  br i1 %tobool520, label %cond.end523, label %cond.true521, !dbg !11473

cond.true521:                                     ; preds = %sw.bb514
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9336, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11473
  br label %cond.end523, !dbg !11473

cond.end523:                                      ; preds = %sw.bb514, %cond.true521
  %41 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !11474
  %call525 = tail call zeroext i8 %41() #6, !dbg !11476
  %tobool526 = icmp eq i8 %call525, 0, !dbg !11476
  br i1 %tobool526, label %if.then527, label %if.else529, !dbg !11477

if.then527:                                       ; preds = %cond.end523
  %42 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !11478
  %43 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11479
  store i64 %42, i64* %43, align 8, !dbg !11479
  br label %return, !dbg !11480

if.else529:                                       ; preds = %cond.end523
  %bf.load531 = load i16, i16* %signed_p84, align 8, !dbg !11481
  %bf.clear533 = and i16 %bf.load531, 2048, !dbg !11481
  %tobool535 = icmp eq i16 %bf.clear533, 0, !dbg !11483
  %bf.clear540 = and i16 %bf.load531, 2, !dbg !11484
  %tobool542 = icmp ne i16 %bf.clear540, 0, !dbg !11484
  br i1 %tobool535, label %if.else607, label %if.then536, !dbg !11485

if.then536:                                       ; preds = %if.else529
  br i1 %tobool542, label %if.then543, label %if.else555, !dbg !11486

if.then543:                                       ; preds = %if.then536
  %bf.clear547 = and i16 %bf.load531, 16, !dbg !11488
  %tobool549 = icmp eq i16 %bf.clear547, 0, !dbg !11490
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !11490
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !11490
  %cond553 = select i1 %tobool549, %union.tree_node* %45, %union.tree_node* %44, !dbg !11490
  store %union.tree_node* %cond553, %union.tree_node** %type, align 8, !dbg !11491
  br label %return, !dbg !11492

if.else555:                                       ; preds = %if.then536
  %bf.clear558 = and i16 %bf.load531, 1, !dbg !11493
  %tobool560 = icmp eq i16 %bf.clear558, 0, !dbg !11495
  br i1 %tobool560, label %if.else573, label %if.then561, !dbg !11496

if.then561:                                       ; preds = %if.else555
  %bf.clear565 = and i16 %bf.load531, 16, !dbg !11497
  %tobool567 = icmp eq i16 %bf.clear565, 0, !dbg !11498
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !11498
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !11498
  %cond571 = select i1 %tobool567, %union.tree_node* %47, %union.tree_node* %46, !dbg !11498
  store %union.tree_node* %cond571, %union.tree_node** %type, align 8, !dbg !11499
  br label %return, !dbg !11500

if.else573:                                       ; preds = %if.else555
  %bf.clear577 = and i16 %bf.load531, 4, !dbg !11501
  %tobool579 = icmp eq i16 %bf.clear577, 0, !dbg !11503
  %bf.clear584 = and i16 %bf.load531, 16, !dbg !11504
  %tobool586 = icmp ne i16 %bf.clear584, 0, !dbg !11504
  br i1 %tobool579, label %if.else592, label %if.then580, !dbg !11505

if.then580:                                       ; preds = %if.else573
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !11506
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !11506
  %cond590 = select i1 %tobool586, %union.tree_node* %48, %union.tree_node* %49, !dbg !11506
  store %union.tree_node* %cond590, %union.tree_node** %type, align 8, !dbg !11507
  br label %return, !dbg !11508

if.else592:                                       ; preds = %if.else573
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !11509
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !11509
  %cond602 = select i1 %tobool586, %union.tree_node* %50, %union.tree_node* %51, !dbg !11509
  store %union.tree_node* %cond602, %union.tree_node** %type, align 8, !dbg !11510
  br label %return

if.else607:                                       ; preds = %if.else529
  br i1 %tobool542, label %if.then614, label %if.else626, !dbg !11511

if.then614:                                       ; preds = %if.else607
  %bf.clear618 = and i16 %bf.load531, 16, !dbg !11513
  %tobool620 = icmp eq i16 %bf.clear618, 0, !dbg !11515
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !11515
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !11515
  %cond624 = select i1 %tobool620, %union.tree_node* %53, %union.tree_node* %52, !dbg !11515
  store %union.tree_node* %cond624, %union.tree_node** %type, align 8, !dbg !11516
  br label %return, !dbg !11517

if.else626:                                       ; preds = %if.else607
  %bf.clear629 = and i16 %bf.load531, 1, !dbg !11518
  %tobool631 = icmp eq i16 %bf.clear629, 0, !dbg !11520
  br i1 %tobool631, label %if.else644, label %if.then632, !dbg !11521

if.then632:                                       ; preds = %if.else626
  %bf.clear636 = and i16 %bf.load531, 16, !dbg !11522
  %tobool638 = icmp eq i16 %bf.clear636, 0, !dbg !11523
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !11523
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !11523
  %cond642 = select i1 %tobool638, %union.tree_node* %55, %union.tree_node* %54, !dbg !11523
  store %union.tree_node* %cond642, %union.tree_node** %type, align 8, !dbg !11524
  br label %return, !dbg !11525

if.else644:                                       ; preds = %if.else626
  %bf.clear648 = and i16 %bf.load531, 4, !dbg !11526
  %tobool650 = icmp eq i16 %bf.clear648, 0, !dbg !11528
  %bf.clear655 = and i16 %bf.load531, 16, !dbg !11529
  %tobool657 = icmp ne i16 %bf.clear655, 0, !dbg !11529
  br i1 %tobool650, label %if.else663, label %if.then651, !dbg !11530

if.then651:                                       ; preds = %if.else644
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !11531
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !11531
  %cond661 = select i1 %tobool657, %union.tree_node* %56, %union.tree_node* %57, !dbg !11531
  store %union.tree_node* %cond661, %union.tree_node** %type, align 8, !dbg !11532
  br label %return, !dbg !11533

if.else663:                                       ; preds = %if.else644
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !11534
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !11534
  %cond673 = select i1 %tobool657, %union.tree_node* %58, %union.tree_node* %59, !dbg !11534
  store %union.tree_node* %cond673, %union.tree_node** %type, align 8, !dbg !11535
  br label %return

sw.bb680:                                         ; preds = %if.end83
  %bf.clear684 = and i16 %bf.load85, 32, !dbg !11536
  %tobool686 = icmp eq i16 %bf.clear684, 0, !dbg !11536
  br i1 %tobool686, label %cond.end689, label %cond.true687, !dbg !11536

cond.true687:                                     ; preds = %sw.bb680
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11536
  br label %cond.end689, !dbg !11536

cond.end689:                                      ; preds = %sw.bb680, %cond.true687
  %60 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !11537
  %call691 = tail call zeroext i8 %60() #6, !dbg !11539
  %tobool692 = icmp eq i8 %call691, 0, !dbg !11539
  br i1 %tobool692, label %if.then693, label %if.else695, !dbg !11540

if.then693:                                       ; preds = %cond.end689
  %61 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !11541
  %62 = bitcast %struct.c_declspecs* %specs to i64*, !dbg !11542
  store i64 %61, i64* %62, align 8, !dbg !11542
  br label %return, !dbg !11543

if.else695:                                       ; preds = %cond.end689
  %bf.load697 = load i16, i16* %signed_p84, align 8, !dbg !11544
  %bf.clear699 = and i16 %bf.load697, 2048, !dbg !11544
  %tobool701 = icmp eq i16 %bf.clear699, 0, !dbg !11546
  %bf.clear706 = and i16 %bf.load697, 2, !dbg !11547
  %tobool708 = icmp ne i16 %bf.clear706, 0, !dbg !11547
  br i1 %tobool701, label %if.else773, label %if.then702, !dbg !11548

if.then702:                                       ; preds = %if.else695
  br i1 %tobool708, label %if.then709, label %if.else721, !dbg !11549

if.then709:                                       ; preds = %if.then702
  %bf.clear713 = and i16 %bf.load697, 16, !dbg !11551
  %tobool715 = icmp eq i16 %bf.clear713, 0, !dbg !11553
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !11553
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !11553
  %cond719 = select i1 %tobool715, %union.tree_node* %64, %union.tree_node* %63, !dbg !11553
  store %union.tree_node* %cond719, %union.tree_node** %type, align 8, !dbg !11554
  br label %return, !dbg !11555

if.else721:                                       ; preds = %if.then702
  %bf.clear724 = and i16 %bf.load697, 1, !dbg !11556
  %tobool726 = icmp eq i16 %bf.clear724, 0, !dbg !11558
  br i1 %tobool726, label %if.else739, label %if.then727, !dbg !11559

if.then727:                                       ; preds = %if.else721
  %bf.clear731 = and i16 %bf.load697, 16, !dbg !11560
  %tobool733 = icmp eq i16 %bf.clear731, 0, !dbg !11561
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !11561
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !11561
  %cond737 = select i1 %tobool733, %union.tree_node* %66, %union.tree_node* %65, !dbg !11561
  store %union.tree_node* %cond737, %union.tree_node** %type, align 8, !dbg !11562
  br label %return, !dbg !11563

if.else739:                                       ; preds = %if.else721
  %bf.clear743 = and i16 %bf.load697, 4, !dbg !11564
  %tobool745 = icmp eq i16 %bf.clear743, 0, !dbg !11566
  %bf.clear750 = and i16 %bf.load697, 16, !dbg !11567
  %tobool752 = icmp ne i16 %bf.clear750, 0, !dbg !11567
  br i1 %tobool745, label %if.else758, label %if.then746, !dbg !11568

if.then746:                                       ; preds = %if.else739
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !11569
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !11569
  %cond756 = select i1 %tobool752, %union.tree_node* %67, %union.tree_node* %68, !dbg !11569
  store %union.tree_node* %cond756, %union.tree_node** %type, align 8, !dbg !11570
  br label %return, !dbg !11571

if.else758:                                       ; preds = %if.else739
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !11572
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !11572
  %cond768 = select i1 %tobool752, %union.tree_node* %69, %union.tree_node* %70, !dbg !11572
  store %union.tree_node* %cond768, %union.tree_node** %type, align 8, !dbg !11573
  br label %return

if.else773:                                       ; preds = %if.else695
  br i1 %tobool708, label %if.then780, label %if.else792, !dbg !11574

if.then780:                                       ; preds = %if.else773
  %bf.clear784 = and i16 %bf.load697, 16, !dbg !11576
  %tobool786 = icmp eq i16 %bf.clear784, 0, !dbg !11578
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !11578
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !11578
  %cond790 = select i1 %tobool786, %union.tree_node* %72, %union.tree_node* %71, !dbg !11578
  store %union.tree_node* %cond790, %union.tree_node** %type, align 8, !dbg !11579
  br label %return, !dbg !11580

if.else792:                                       ; preds = %if.else773
  %bf.clear795 = and i16 %bf.load697, 1, !dbg !11581
  %tobool797 = icmp eq i16 %bf.clear795, 0, !dbg !11583
  br i1 %tobool797, label %if.else810, label %if.then798, !dbg !11584

if.then798:                                       ; preds = %if.else792
  %bf.clear802 = and i16 %bf.load697, 16, !dbg !11585
  %tobool804 = icmp eq i16 %bf.clear802, 0, !dbg !11586
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !11586
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !11586
  %cond808 = select i1 %tobool804, %union.tree_node* %74, %union.tree_node* %73, !dbg !11586
  store %union.tree_node* %cond808, %union.tree_node** %type, align 8, !dbg !11587
  br label %return, !dbg !11588

if.else810:                                       ; preds = %if.else792
  %bf.clear814 = and i16 %bf.load697, 4, !dbg !11589
  %tobool816 = icmp eq i16 %bf.clear814, 0, !dbg !11591
  %bf.clear821 = and i16 %bf.load697, 16, !dbg !11592
  %tobool823 = icmp ne i16 %bf.clear821, 0, !dbg !11592
  br i1 %tobool816, label %if.else829, label %if.then817, !dbg !11593

if.then817:                                       ; preds = %if.else810
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !11594
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !11594
  %cond827 = select i1 %tobool823, %union.tree_node* %75, %union.tree_node* %76, !dbg !11594
  store %union.tree_node* %cond827, %union.tree_node** %type, align 8, !dbg !11595
  br label %return, !dbg !11596

if.else829:                                       ; preds = %if.else810
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !11597
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !11597
  %cond839 = select i1 %tobool823, %union.tree_node* %77, %union.tree_node* %78, !dbg !11597
  store %union.tree_node* %cond839, %union.tree_node** %type, align 8, !dbg !11598
  br label %return

sw.default:                                       ; preds = %if.end83
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9422, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11599
  br label %return, !dbg !11600

return:                                           ; preds = %land.lhs.true23, %if.end223, %if.end339, %cond.end127, %cond.end166, %cond.end381, %sw.default, %if.then230, %if.then346, %if.else443, %if.then431, %if.then508, %if.else510, %if.then503, %if.then561, %if.else592, %if.then580, %if.then543, %if.then632, %if.else663, %if.then651, %if.then614, %if.then527, %if.then727, %if.else758, %if.then746, %if.then709, %if.then798, %if.else829, %if.then817, %if.then780, %if.then693, %cond.true
  ret %struct.c_declspecs* %specs, !dbg !11601
}

declare dso_local %union.tree_node* @build_complex_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_write_global_declarations() local_unnamed_addr #5 !dbg !11602 {
entry:
  %flags = alloca i32, align 4
  %0 = load i8*, i8** @pch_file, align 8, !dbg !11610
  %tobool = icmp ne i8* %0, null, !dbg !11610
  %1 = load i32, i32* @flag_syntax_only, align 4, !dbg !11612
  %tobool1 = icmp ne i32 %1, 0, !dbg !11612
  %or.cond1 = or i1 %tobool, %tobool1, !dbg !11614
  br i1 %or.cond1, label %cleanup.cont, label %if.end3, !dbg !11614

if.end3:                                          ; preds = %entry
  %call = tail call %union.tree_node* @pop_scope() #7, !dbg !11615
  store %union.tree_node* %call, %union.tree_node** @ext_block, align 8, !dbg !11616
  store %struct.c_scope* null, %struct.c_scope** @external_scope, align 8, !dbg !11617
  %2 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !11618
  %tobool4 = icmp eq %struct.c_scope* %2, null, !dbg !11618
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !11618

cond.true:                                        ; preds = %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 9501, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11618
  %.pre = load %union.tree_node*, %union.tree_node** @ext_block, align 8, !dbg !11619
  br label %cond.end, !dbg !11618

cond.end:                                         ; preds = %if.end3, %cond.true
  %.in = phi %union.tree_node* [ %call, %if.end3 ], [ %.pre, %cond.true ]
  %3 = phi %union.tree_node* [ %call, %if.end3 ], [ %.pre, %cond.true ], !dbg !11619
  %tobool5 = icmp eq %union.tree_node* %3, null, !dbg !11619
  br i1 %tobool5, label %if.end12, label %if.then6, !dbg !11620

if.then6:                                         ; preds = %cond.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11621
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !11621
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11605, metadata !DIExpression()), !dbg !11622
  %6 = bitcast i32* %flags to i8*, !dbg !11623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !11623
  call void @llvm.dbg.value(metadata i32* %flags, metadata !11608, metadata !DIExpression(DW_OP_deref)), !dbg !11622
  %call7 = call %struct._IO_FILE* @dump_begin(i32 2, i32* nonnull %flags) #6, !dbg !11624
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call7, metadata !11609, metadata !DIExpression()), !dbg !11622
  %tobool8 = icmp ne %struct._IO_FILE* %call7, null, !dbg !11625
  %tobool9 = icmp ne %union.tree_node* %5, null, !dbg !11627
  %or.cond = and i1 %tobool8, %tobool9, !dbg !11628
  br i1 %or.cond, label %if.then10, label %if.end11, !dbg !11628

if.then10:                                        ; preds = %if.then6
  %7 = load i32, i32* %flags, align 4, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %7, metadata !11608, metadata !DIExpression()), !dbg !11622
  %and = and i32 %7, -3, !dbg !11631
  call void @dump_node(%union.tree_node* nonnull %5, i32 %and, %struct._IO_FILE* nonnull %call7) #6, !dbg !11632
  call void @dump_end(i32 2, %struct._IO_FILE* nonnull %call7) #6, !dbg !11633
  br label %if.end11, !dbg !11634

if.end11:                                         ; preds = %if.then10, %if.then6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !11635
  br label %if.end12, !dbg !11636

if.end12:                                         ; preds = %cond.end, %if.end11
  br label %for.cond, !dbg !11637

for.cond:                                         ; preds = %for.body, %if.end12
  %t.0.in = phi %union.tree_node** [ @all_translation_units, %if.end12 ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !11639
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !11604, metadata !DIExpression()), !dbg !11640
  %tobool13 = icmp eq %union.tree_node* %t.0, null, !dbg !11641
  br i1 %tobool13, label %for.end, label %for.body, !dbg !11641

for.body:                                         ; preds = %for.cond
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11642
  %8 = bitcast %union.tree_node** %initial to %struct.tree_block**, !dbg !11642
  %9 = load %struct.tree_block*, %struct.tree_block** %8, align 8, !dbg !11642
  %vars15 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %9, i64 0, i32 3, !dbg !11642
  %10 = load %union.tree_node*, %union.tree_node** %vars15, align 8, !dbg !11642
  call fastcc void @c_write_global_declarations_1(%union.tree_node* %10) #7, !dbg !11644
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11645
  br label %for.cond, !dbg !11646, !llvm.loop !11647

for.end:                                          ; preds = %for.cond
  %11 = load %struct.tree_block*, %struct.tree_block** bitcast (%union.tree_node** @ext_block to %struct.tree_block**), align 8, !dbg !11649
  %vars17 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %11, i64 0, i32 3, !dbg !11649
  %12 = load %union.tree_node*, %union.tree_node** %vars17, align 8, !dbg !11649
  call fastcc void @c_write_global_declarations_1(%union.tree_node* %12) #7, !dbg !11650
  call void @cgraph_finalize_compilation_unit() #6, !dbg !11651
  %13 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !11652
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %13, i64 0, i32 1, i64 4, !dbg !11652
  %14 = load i32, i32* %arrayidx, align 8, !dbg !11652
  %cmp = icmp eq i32 %14, 0, !dbg !11654
  br i1 %cmp, label %land.lhs.true18, label %if.end45, !dbg !11655

land.lhs.true18:                                  ; preds = %for.end
  %arrayidx20 = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %13, i64 0, i32 1, i64 5, !dbg !11656
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !11656
  %cmp21 = icmp eq i32 %15, 0, !dbg !11657
  br i1 %cmp21, label %do.body, label %if.end45, !dbg !11658

do.body:                                          ; preds = %land.lhs.true18
  %16 = load i8, i8* @timevar_enable, align 1, !dbg !11659
  %tobool23 = icmp eq i8 %16, 0, !dbg !11659
  br i1 %tobool23, label %do.end, label %if.then24, !dbg !11663

if.then24:                                        ; preds = %do.body
  call void @timevar_push_1(i32 166) #6, !dbg !11659
  br label %do.end, !dbg !11659

do.end:                                           ; preds = %do.body, %if.then24
  br label %for.cond26, !dbg !11664

for.cond26:                                       ; preds = %for.body28, %do.end
  %t.1.in = phi %union.tree_node** [ @all_translation_units, %do.end ], [ %chain35, %for.body28 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !11666
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !11604, metadata !DIExpression()), !dbg !11640
  %tobool27 = icmp eq %union.tree_node* %t.1, null, !dbg !11667
  br i1 %tobool27, label %for.end36, label %for.body28, !dbg !11667

for.body28:                                       ; preds = %for.cond26
  %initial30 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11668
  %17 = bitcast %union.tree_node** %initial30 to %struct.tree_block**, !dbg !11668
  %18 = load %struct.tree_block*, %struct.tree_block** %17, align 8, !dbg !11668
  %vars32 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %18, i64 0, i32 3, !dbg !11668
  %19 = load %union.tree_node*, %union.tree_node** %vars32, align 8, !dbg !11668
  call fastcc void @c_write_global_declarations_2(%union.tree_node* %19) #7, !dbg !11670
  %chain35 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11671
  br label %for.cond26, !dbg !11672, !llvm.loop !11673

for.end36:                                        ; preds = %for.cond26
  %20 = load %struct.tree_block*, %struct.tree_block** bitcast (%union.tree_node** @ext_block to %struct.tree_block**), align 8, !dbg !11675
  %vars38 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %20, i64 0, i32 3, !dbg !11675
  %21 = load %union.tree_node*, %union.tree_node** %vars38, align 8, !dbg !11675
  call fastcc void @c_write_global_declarations_2(%union.tree_node* %21) #7, !dbg !11676
  %22 = load i8, i8* @timevar_enable, align 1, !dbg !11677
  %tobool40 = icmp eq i8 %22, 0, !dbg !11677
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !11680

if.then41:                                        ; preds = %for.end36
  call void @timevar_pop_1(i32 166) #6, !dbg !11677
  br label %if.end45, !dbg !11677

if.end45:                                         ; preds = %for.end36, %if.then41, %land.lhs.true18, %for.end
  store %union.tree_node* null, %union.tree_node** @ext_block, align 8, !dbg !11681
  br label %cleanup.cont, !dbg !11682

cleanup.cont:                                     ; preds = %if.end45, %entry
  ret void, !dbg !11682
}

declare dso_local %struct._IO_FILE* @dump_begin(i32, i32*) local_unnamed_addr #2

declare dso_local void @dump_node(%union.tree_node*, i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @dump_end(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_write_global_declarations_1(%union.tree_node* %globals) unnamed_addr #5 !dbg !11683 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %globals, metadata !11685, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata %union.tree_node* %globals, metadata !11686, metadata !DIExpression()), !dbg !11688
  br label %for.cond, !dbg !11689

for.cond:                                         ; preds = %if.end, %entry
  %decl.0 = phi %union.tree_node* [ %globals, %entry ], [ %4, %if.end ], !dbg !11691
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !11686, metadata !DIExpression()), !dbg !11688
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !11692
  br i1 %tobool, label %do.body.preheader, label %for.body, !dbg !11692

do.body.preheader:                                ; preds = %for.cond
  br label %do.body, !dbg !11693

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11694
  %bf.load = load i64, i64* %0, align 8, !dbg !11694
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11698
  %cmp = icmp eq i64 %bf.cast2, 29, !dbg !11698
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11699

land.lhs.true:                                    ; preds = %for.body
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11700
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !11700
  %cmp1 = icmp eq %union.tree_node* %1, null, !dbg !11701
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !11702

land.lhs.true2:                                   ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11703
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !11703
  %bf.load4 = load i64, i64* %2, align 8, !dbg !11703
  %bf.cast63 = and i64 %bf.load4, 33554432, !dbg !11703
  %tobool7 = icmp eq i64 %bf.cast63, 0, !dbg !11703
  br i1 %tobool7, label %if.end, label %land.lhs.true8, !dbg !11704

land.lhs.true8:                                   ; preds = %land.lhs.true2
  %bf.cast134 = and i64 %bf.load, 134217728, !dbg !11705
  %tobool14 = icmp eq i64 %bf.cast134, 0, !dbg !11705
  br i1 %tobool14, label %land.lhs.true15, label %if.end, !dbg !11706

land.lhs.true15:                                  ; preds = %land.lhs.true8
  %bf.cast205 = and i64 %bf.load4, 1048576, !dbg !11707
  %tobool21 = icmp eq i64 %bf.cast205, 0, !dbg !11707
  br i1 %tobool21, label %if.end, label %if.then, !dbg !11708

if.then:                                          ; preds = %land.lhs.true15
  %3 = load i32, i32* @input_location, align 4, !dbg !11709
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.375, i64 0, i64 0), %union.tree_node* nonnull %decl.0) #6, !dbg !11711
  %bf.load23 = load i64, i64* %0, align 8, !dbg !11712
  %bf.set = or i64 %bf.load23, 8388608, !dbg !11712
  store i64 %bf.set, i64* %0, align 8, !dbg !11712
  br label %if.end, !dbg !11713

if.end:                                           ; preds = %land.lhs.true15, %land.lhs.true8, %land.lhs.true2, %if.then, %land.lhs.true, %for.body
  tail call void @wrapup_global_declaration_1(%union.tree_node* nonnull %decl.0) #6, !dbg !11714
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11715
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !11715
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11686, metadata !DIExpression()), !dbg !11688
  br label %for.cond, !dbg !11716, !llvm.loop !11717

do.body:                                          ; preds = %do.body.preheader, %do.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !11687, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata %union.tree_node* %globals, metadata !11686, metadata !DIExpression()), !dbg !11688
  br label %for.cond25, !dbg !11719

for.cond25:                                       ; preds = %for.body27, %do.body
  %decl.1 = phi %union.tree_node* [ %globals, %do.body ], [ %5, %for.body27 ], !dbg !11722
  %reconsider.0 = phi i8 [ 0, %do.body ], [ %or1, %for.body27 ], !dbg !11723
  call void @llvm.dbg.value(metadata i8 %reconsider.0, metadata !11687, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.1, metadata !11686, metadata !DIExpression()), !dbg !11688
  %tobool26 = icmp eq %union.tree_node* %decl.1, null, !dbg !11724
  br i1 %tobool26, label %do.cond, label %for.body27, !dbg !11724

for.body27:                                       ; preds = %for.cond25
  %call28 = tail call zeroext i8 @wrapup_global_declaration_2(%union.tree_node* nonnull %decl.1) #6, !dbg !11725
  %or1 = or i8 %reconsider.0, %call28, !dbg !11727
  call void @llvm.dbg.value(metadata i8 %or1, metadata !11687, metadata !DIExpression()), !dbg !11688
  %chain33 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11728
  %5 = load %union.tree_node*, %union.tree_node** %chain33, align 8, !dbg !11728
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11686, metadata !DIExpression()), !dbg !11688
  br label %for.cond25, !dbg !11729, !llvm.loop !11730

do.cond:                                          ; preds = %for.cond25
  %reconsider.0.lcssa = phi i8 [ %reconsider.0, %for.cond25 ], !dbg !11723
  call void @llvm.dbg.value(metadata i8 %reconsider.0.lcssa, metadata !11687, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i8 %reconsider.0.lcssa, metadata !11687, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i8 %reconsider.0.lcssa, metadata !11687, metadata !DIExpression()), !dbg !11688
  %tobool35 = icmp eq i8 %reconsider.0.lcssa, 0, !dbg !11732
  br i1 %tobool35, label %for.cond36.preheader, label %do.body, !dbg !11732, !llvm.loop !11733

for.cond36.preheader:                             ; preds = %do.cond
  br label %for.cond36, !dbg !11735

for.cond36:                                       ; preds = %for.cond36.preheader, %for.body38
  %decl.2 = phi %union.tree_node* [ %6, %for.body38 ], [ %globals, %for.cond36.preheader ], !dbg !11737
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.2, metadata !11686, metadata !DIExpression()), !dbg !11688
  %tobool37 = icmp eq %union.tree_node* %decl.2, null, !dbg !11735
  br i1 %tobool37, label %for.end42, label %for.body38, !dbg !11735

for.body38:                                       ; preds = %for.cond36
  tail call void @check_global_declaration_1(%union.tree_node* nonnull %decl.2) #6, !dbg !11738
  %chain41 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11740
  %6 = load %union.tree_node*, %union.tree_node** %chain41, align 8, !dbg !11740
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11686, metadata !DIExpression()), !dbg !11688
  br label %for.cond36, !dbg !11741, !llvm.loop !11742

for.end42:                                        ; preds = %for.cond36
  ret void, !dbg !11744
}

declare dso_local void @cgraph_finalize_compilation_unit() local_unnamed_addr #2

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_write_global_declarations_2(%union.tree_node* %globals) unnamed_addr #5 !dbg !11745 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %globals, metadata !11747, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.value(metadata %union.tree_node* %globals, metadata !11748, metadata !DIExpression()), !dbg !11749
  br label %for.cond, !dbg !11750

for.cond:                                         ; preds = %for.body, %entry
  %decl.0 = phi %union.tree_node* [ %globals, %entry ], [ %2, %for.body ], !dbg !11752
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !11748, metadata !DIExpression()), !dbg !11749
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !11753
  br i1 %tobool, label %for.end, label %for.body, !dbg !11753

for.body:                                         ; preds = %for.cond
  %0 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !11754
  %global_decl = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %0, i64 0, i32 17, !dbg !11756
  %1 = load void (%union.tree_node*)*, void (%union.tree_node*)** %global_decl, align 8, !dbg !11756
  tail call void %1(%union.tree_node* nonnull %decl.0) #6, !dbg !11754
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11757
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !11757
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11748, metadata !DIExpression()), !dbg !11749
  br label %for.cond, !dbg !11758, !llvm.loop !11759

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11761
}

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_inline_static(i8* %x_p) #5 !dbg !11762 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11764, metadata !DIExpression()), !dbg !11767
  %0 = bitcast i8* %x_p to %struct.c_inline_static*, !dbg !11768
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %0, metadata !11765, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %0, metadata !11766, metadata !DIExpression()), !dbg !11767
  br label %while.cond, !dbg !11769

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !11767
  %xlimit.0 = phi %struct.c_inline_static* [ %0, %entry ], [ %2, %while.body ], !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0, metadata !11766, metadata !DIExpression()), !dbg !11767
  %cmp = icmp ne %struct.c_inline_static* %xlimit.0, null, !dbg !11770
  %cmp1 = icmp ne i8* %1, inttoptr (i64 1 to i8*), !dbg !11770
  %or.cond = and i1 %cmp, %cmp1, !dbg !11770
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !11770

land.rhs:                                         ; preds = %while.cond
  %call = tail call i32 @ggc_set_mark(i8* %1) #6, !dbg !11770
  %tobool = icmp eq i32 %call, 0, !dbg !11770
  br i1 %tobool, label %while.body, label %while.end, !dbg !11769

while.body:                                       ; preds = %land.rhs
  %next = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %xlimit.0, i64 0, i32 4, !dbg !11771
  %2 = load %struct.c_inline_static*, %struct.c_inline_static** %next, align 8, !dbg !11771
  %3 = bitcast %struct.c_inline_static* %2 to i8*, !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %2, metadata !11766, metadata !DIExpression()), !dbg !11767
  br label %while.cond, !dbg !11769, !llvm.loop !11772

while.end:                                        ; preds = %while.cond, %land.rhs
  %xlimit.0.lcssa = phi %struct.c_inline_static* [ %xlimit.0, %while.cond ], [ %xlimit.0, %land.rhs ], !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !11766, metadata !DIExpression()), !dbg !11767
  br label %while.cond2, !dbg !11774

while.cond2:                                      ; preds = %do.end21, %while.end
  %x.0 = phi %struct.c_inline_static* [ %0, %while.end ], [ %10, %do.end21 ], !dbg !11767
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %x.0, metadata !11765, metadata !DIExpression()), !dbg !11767
  %cmp3 = icmp eq %struct.c_inline_static* %x.0, %xlimit.0.lcssa, !dbg !11775
  br i1 %cmp3, label %while.end23, label %do.body, !dbg !11774

do.body:                                          ; preds = %while.cond2
  %function = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 1, !dbg !11776
  %4 = load %union.tree_node*, %union.tree_node** %function, align 8, !dbg !11776
  %cmp5 = icmp eq %union.tree_node* %4, null, !dbg !11776
  br i1 %cmp5, label %do.body7, label %if.then, !dbg !11780

if.then:                                          ; preds = %do.body
  %5 = bitcast %union.tree_node* %4 to i8*, !dbg !11780
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %5) #7, !dbg !11776
  br label %do.body7, !dbg !11776

do.body7:                                         ; preds = %do.body, %if.then
  %static_decl = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 2, !dbg !11781
  %6 = load %union.tree_node*, %union.tree_node** %static_decl, align 8, !dbg !11781
  %cmp8 = icmp eq %union.tree_node* %6, null, !dbg !11781
  br i1 %cmp8, label %do.body14, label %if.then9, !dbg !11784

if.then9:                                         ; preds = %do.body7
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !11784
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %7) #7, !dbg !11781
  br label %do.body14, !dbg !11781

do.body14:                                        ; preds = %do.body7, %if.then9
  %next15 = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 4, !dbg !11785
  %8 = load %struct.c_inline_static*, %struct.c_inline_static** %next15, align 8, !dbg !11785
  %cmp16 = icmp eq %struct.c_inline_static* %8, null, !dbg !11785
  br i1 %cmp16, label %do.end21, label %if.then17, !dbg !11788

if.then17:                                        ; preds = %do.body14
  %9 = bitcast %struct.c_inline_static* %8 to i8*, !dbg !11788
  tail call void @gt_ggc_mx_c_inline_static(i8* nonnull %9) #7, !dbg !11785
  %.pre = load %struct.c_inline_static*, %struct.c_inline_static** %next15, align 8, !dbg !11789
  br label %do.end21, !dbg !11785

do.end21:                                         ; preds = %do.body14, %if.then17
  %10 = phi %struct.c_inline_static* [ null, %do.body14 ], [ %.pre, %if.then17 ], !dbg !11789
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %10, metadata !11765, metadata !DIExpression()), !dbg !11767
  br label %while.cond2, !dbg !11774, !llvm.loop !11790

while.end23:                                      ; preds = %while.cond2
  ret void, !dbg !11792
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_lang_tree_node(i8* %x_p) #5 !dbg !11793 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !11795, metadata !DIExpression()), !dbg !11814
  %0 = bitcast i8* %x_p to %union.lang_tree_node*, !dbg !11815
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %0, metadata !11796, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %0, metadata !11797, metadata !DIExpression()), !dbg !11814
  br label %while.cond, !dbg !11816

while.cond:                                       ; preds = %cond.end, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %8, %cond.end ], !dbg !11814
  %xlimit.0 = phi %union.lang_tree_node* [ %0, %entry ], [ %cond, %cond.end ], !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0, metadata !11797, metadata !DIExpression()), !dbg !11814
  %cmp = icmp ne %union.lang_tree_node* %xlimit.0, null, !dbg !11817
  %cmp1 = icmp ne %union.lang_tree_node* %xlimit.0, inttoptr (i64 1 to %union.lang_tree_node*), !dbg !11817
  %or.cond = and i1 %cmp, %cmp1, !dbg !11817
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !11817

land.rhs:                                         ; preds = %while.cond
  %call = tail call i32 @ggc_set_mark(i8* nonnull %1) #6, !dbg !11817
  %tobool = icmp eq i32 %call, 0, !dbg !11817
  br i1 %tobool, label %while.body, label %while.end, !dbg !11816

while.body:                                       ; preds = %land.rhs
  %2 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11818
  %bf.load = load i64, i64* %2, align 8, !dbg !11818
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !11819
  %cmp2 = icmp eq i64 %bf.cast4, 8, !dbg !11819
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !11818

cond.true:                                        ; preds = %while.body
  %3 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11820
  %4 = bitcast %union.tree_node** %3 to %union.lang_tree_node**, !dbg !11820
  %5 = load %union.lang_tree_node*, %union.lang_tree_node** %4, align 8, !dbg !11820
  br label %cond.end, !dbg !11818

cond.false:                                       ; preds = %while.body
  %chain = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11821
  %6 = bitcast %union.tree_node** %chain to %union.lang_tree_node**, !dbg !11821
  %7 = load %union.lang_tree_node*, %union.lang_tree_node** %6, align 8, !dbg !11821
  br label %cond.end, !dbg !11818

cond.end:                                         ; preds = %cond.false, %cond.true
  %.in = phi %union.lang_tree_node* [ %5, %cond.true ], [ %7, %cond.false ]
  %cond = phi %union.lang_tree_node* [ %5, %cond.true ], [ %7, %cond.false ], !dbg !11818
  %8 = bitcast %union.lang_tree_node* %.in to i8*, !dbg !11818
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %cond, metadata !11797, metadata !DIExpression()), !dbg !11814
  br label %while.cond, !dbg !11816, !llvm.loop !11822

while.end:                                        ; preds = %while.cond, %land.rhs
  %xlimit.0.lcssa = phi %union.lang_tree_node* [ %xlimit.0, %while.cond ], [ %xlimit.0, %land.rhs ], !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !11797, metadata !DIExpression()), !dbg !11814
  br label %while.cond5, !dbg !11824

while.cond5:                                      ; preds = %cond.end4451, %while.end
  %x.0 = phi %union.lang_tree_node* [ %0, %while.end ], [ %cond4452, %cond.end4451 ], !dbg !11814
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %x.0, metadata !11796, metadata !DIExpression()), !dbg !11814
  %cmp6 = icmp eq %union.lang_tree_node* %x.0, %xlimit.0.lcssa, !dbg !11825
  br i1 %cmp6, label %while.end4453, label %while.body7, !dbg !11824

while.body7:                                      ; preds = %while.cond5
  %9 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11826
  %bf.load10 = load i64, i64* %9, align 8, !dbg !11826
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !11827
  %cmp13 = icmp eq i64 %bf.cast122, 1, !dbg !11827
  br i1 %cmp13, label %do.body4293, label %sw.bb, !dbg !11828

sw.bb:                                            ; preds = %while.body7
  %generic14 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, !dbg !11829
  %call15 = tail call i32 @tree_node_structure(%union.tree_node* %generic14) #6, !dbg !11830
  switch i32 %call15, label %sw.epilog4435 [
    i32 33, label %do.body4261
    i32 1, label %do.body
    i32 2, label %do.body39
    i32 3, label %do.body69
    i32 4, label %do.body111
    i32 5, label %do.body153
    i32 6, label %do.body195
    i32 7, label %do.body225
    i32 8, label %do.body279
    i32 9, label %do.body311
    i32 10, label %do.body365
    i32 11, label %do.body501
    i32 12, label %do.body675
    i32 16, label %do.body984
    i32 13, label %do.body1205
    i32 15, label %do.body1441
    i32 14, label %do.body1718
    i32 17, label %do.body1940
    i32 18, label %do.body2137
    i32 19, label %do.body2347
    i32 20, label %do.body2544
    i32 21, label %do.body2896
    i32 22, label %do.body3296
    i32 23, label %do.body3541
    i32 24, label %do.body3595
    i32 25, label %do.body3644
    i32 26, label %do.body3715
    i32 27, label %do.body3781
    i32 28, label %do.body3897
    i32 29, label %do.body4055
    i32 30, label %do.body4109
    i32 31, label %do.body4151
    i32 32, label %do.body4231
  ], !dbg !11831

do.body:                                          ; preds = %sw.bb
  %chain19 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11832
  %10 = load %union.tree_node*, %union.tree_node** %chain19, align 8, !dbg !11832
  %cmp20 = icmp eq %union.tree_node* %10, null, !dbg !11832
  br i1 %cmp20, label %do.body25, label %if.then, !dbg !11835

if.then:                                          ; preds = %do.body
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !11835
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %11) #7, !dbg !11832
  br label %do.body25, !dbg !11832

do.body25:                                        ; preds = %do.body, %if.then
  %type28 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11836
  %12 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !11836
  %cmp29 = icmp eq %union.tree_node* %12, null, !dbg !11836
  br i1 %cmp29, label %sw.epilog4435, label %if.then31, !dbg !11839

if.then31:                                        ; preds = %do.body25
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !11839
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %13) #7, !dbg !11836
  br label %sw.epilog4435, !dbg !11836

do.body39:                                        ; preds = %sw.bb
  %chain42 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11840
  %14 = load %union.tree_node*, %union.tree_node** %chain42, align 8, !dbg !11840
  %cmp43 = icmp eq %union.tree_node* %14, null, !dbg !11840
  br i1 %cmp43, label %do.body53, label %if.then45, !dbg !11843

if.then45:                                        ; preds = %do.body39
  %15 = bitcast %union.tree_node* %14 to i8*, !dbg !11843
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %15) #7, !dbg !11840
  br label %do.body53, !dbg !11840

do.body53:                                        ; preds = %do.body39, %if.then45
  %type57 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11844
  %16 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !11844
  %cmp58 = icmp eq %union.tree_node* %16, null, !dbg !11844
  br i1 %cmp58, label %sw.epilog4435, label %if.then60, !dbg !11847

if.then60:                                        ; preds = %do.body53
  %17 = bitcast %union.tree_node* %16 to i8*, !dbg !11847
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %17) #7, !dbg !11844
  br label %sw.epilog4435, !dbg !11844

do.body69:                                        ; preds = %sw.bb
  %chain72 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11848
  %18 = load %union.tree_node*, %union.tree_node** %chain72, align 8, !dbg !11848
  %cmp73 = icmp eq %union.tree_node* %18, null, !dbg !11848
  br i1 %cmp73, label %do.body83, label %if.then75, !dbg !11851

if.then75:                                        ; preds = %do.body69
  %19 = bitcast %union.tree_node* %18 to i8*, !dbg !11851
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %19) #7, !dbg !11848
  br label %do.body83, !dbg !11848

do.body83:                                        ; preds = %do.body69, %if.then75
  %type87 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11852
  %20 = load %union.tree_node*, %union.tree_node** %type87, align 8, !dbg !11852
  %cmp88 = icmp eq %union.tree_node* %20, null, !dbg !11852
  br i1 %cmp88, label %do.body98, label %if.then90, !dbg !11855

if.then90:                                        ; preds = %do.body83
  %21 = bitcast %union.tree_node* %20 to i8*, !dbg !11855
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %21) #7, !dbg !11852
  br label %do.body98, !dbg !11852

do.body98:                                        ; preds = %do.body83, %if.then90
  %real_cst_ptr = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11856
  %22 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !11856
  %23 = load %struct.real_value*, %struct.real_value** %22, align 8, !dbg !11856
  %cmp101 = icmp eq %struct.real_value* %23, null, !dbg !11856
  br i1 %cmp101, label %sw.epilog4435, label %if.then103, !dbg !11859

if.then103:                                       ; preds = %do.body98
  %24 = bitcast %struct.real_value* %23 to i8*, !dbg !11859
  tail call void @gt_ggc_mx_real_value(i8* nonnull %24) #6, !dbg !11856
  br label %sw.epilog4435, !dbg !11856

do.body111:                                       ; preds = %sw.bb
  %chain114 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11860
  %25 = load %union.tree_node*, %union.tree_node** %chain114, align 8, !dbg !11860
  %cmp115 = icmp eq %union.tree_node* %25, null, !dbg !11860
  br i1 %cmp115, label %do.body125, label %if.then117, !dbg !11863

if.then117:                                       ; preds = %do.body111
  %26 = bitcast %union.tree_node* %25 to i8*, !dbg !11863
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %26) #7, !dbg !11860
  br label %do.body125, !dbg !11860

do.body125:                                       ; preds = %do.body111, %if.then117
  %type129 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11864
  %27 = load %union.tree_node*, %union.tree_node** %type129, align 8, !dbg !11864
  %cmp130 = icmp eq %union.tree_node* %27, null, !dbg !11864
  br i1 %cmp130, label %do.body140, label %if.then132, !dbg !11867

if.then132:                                       ; preds = %do.body125
  %28 = bitcast %union.tree_node* %27 to i8*, !dbg !11867
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %28) #7, !dbg !11864
  br label %do.body140, !dbg !11864

do.body140:                                       ; preds = %do.body125, %if.then132
  %fixed_cst_ptr = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11868
  %29 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !11868
  %30 = load %struct.fixed_value*, %struct.fixed_value** %29, align 8, !dbg !11868
  %cmp143 = icmp eq %struct.fixed_value* %30, null, !dbg !11868
  br i1 %cmp143, label %sw.epilog4435, label %if.then145, !dbg !11871

if.then145:                                       ; preds = %do.body140
  %31 = bitcast %struct.fixed_value* %30 to i8*, !dbg !11871
  tail call void @gt_ggc_mx_fixed_value(i8* nonnull %31) #6, !dbg !11868
  br label %sw.epilog4435, !dbg !11868

do.body153:                                       ; preds = %sw.bb
  %chain156 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11872
  %32 = load %union.tree_node*, %union.tree_node** %chain156, align 8, !dbg !11872
  %cmp157 = icmp eq %union.tree_node* %32, null, !dbg !11872
  br i1 %cmp157, label %do.body167, label %if.then159, !dbg !11875

if.then159:                                       ; preds = %do.body153
  %33 = bitcast %union.tree_node* %32 to i8*, !dbg !11875
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %33) #7, !dbg !11872
  br label %do.body167, !dbg !11872

do.body167:                                       ; preds = %do.body153, %if.then159
  %type171 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11876
  %34 = load %union.tree_node*, %union.tree_node** %type171, align 8, !dbg !11876
  %cmp172 = icmp eq %union.tree_node* %34, null, !dbg !11876
  br i1 %cmp172, label %do.body182, label %if.then174, !dbg !11879

if.then174:                                       ; preds = %do.body167
  %35 = bitcast %union.tree_node* %34 to i8*, !dbg !11879
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %35) #7, !dbg !11876
  br label %do.body182, !dbg !11876

do.body182:                                       ; preds = %do.body167, %if.then174
  %elements = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11880
  %36 = bitcast i32* %elements to %union.tree_node**, !dbg !11880
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8, !dbg !11880
  %cmp185 = icmp eq %union.tree_node* %37, null, !dbg !11880
  br i1 %cmp185, label %sw.epilog4435, label %if.then187, !dbg !11883

if.then187:                                       ; preds = %do.body182
  %38 = bitcast %union.tree_node* %37 to i8*, !dbg !11883
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %38) #7, !dbg !11880
  br label %sw.epilog4435, !dbg !11880

do.body195:                                       ; preds = %sw.bb
  %chain198 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11884
  %39 = load %union.tree_node*, %union.tree_node** %chain198, align 8, !dbg !11884
  %cmp199 = icmp eq %union.tree_node* %39, null, !dbg !11884
  br i1 %cmp199, label %do.body209, label %if.then201, !dbg !11887

if.then201:                                       ; preds = %do.body195
  %40 = bitcast %union.tree_node* %39 to i8*, !dbg !11887
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %40) #7, !dbg !11884
  br label %do.body209, !dbg !11884

do.body209:                                       ; preds = %do.body195, %if.then201
  %type213 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11888
  %41 = load %union.tree_node*, %union.tree_node** %type213, align 8, !dbg !11888
  %cmp214 = icmp eq %union.tree_node* %41, null, !dbg !11888
  br i1 %cmp214, label %sw.epilog4435, label %if.then216, !dbg !11891

if.then216:                                       ; preds = %do.body209
  %42 = bitcast %union.tree_node* %41 to i8*, !dbg !11891
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %42) #7, !dbg !11888
  br label %sw.epilog4435, !dbg !11888

do.body225:                                       ; preds = %sw.bb
  %chain228 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11892
  %43 = load %union.tree_node*, %union.tree_node** %chain228, align 8, !dbg !11892
  %cmp229 = icmp eq %union.tree_node* %43, null, !dbg !11892
  br i1 %cmp229, label %do.body239, label %if.then231, !dbg !11895

if.then231:                                       ; preds = %do.body225
  %44 = bitcast %union.tree_node* %43 to i8*, !dbg !11895
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %44) #7, !dbg !11892
  br label %do.body239, !dbg !11892

do.body239:                                       ; preds = %do.body225, %if.then231
  %type243 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11896
  %45 = load %union.tree_node*, %union.tree_node** %type243, align 8, !dbg !11896
  %cmp244 = icmp eq %union.tree_node* %45, null, !dbg !11896
  br i1 %cmp244, label %do.body254, label %if.then246, !dbg !11899

if.then246:                                       ; preds = %do.body239
  %46 = bitcast %union.tree_node* %45 to i8*, !dbg !11899
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %46) #7, !dbg !11896
  br label %do.body254, !dbg !11896

do.body254:                                       ; preds = %do.body239, %if.then246
  %real = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11900
  %47 = bitcast i32* %real to %union.tree_node**, !dbg !11900
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !11900
  %cmp257 = icmp eq %union.tree_node* %48, null, !dbg !11900
  br i1 %cmp257, label %do.body266, label %if.then259, !dbg !11903

if.then259:                                       ; preds = %do.body254
  %49 = bitcast %union.tree_node* %48 to i8*, !dbg !11903
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %49) #7, !dbg !11900
  br label %do.body266, !dbg !11900

do.body266:                                       ; preds = %do.body254, %if.then259
  %50 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11904
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !11904
  %cmp269 = icmp eq %union.tree_node* %51, null, !dbg !11904
  br i1 %cmp269, label %sw.epilog4435, label %if.then271, !dbg !11907

if.then271:                                       ; preds = %do.body266
  %52 = bitcast %union.tree_node* %51 to i8*, !dbg !11907
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %52) #7, !dbg !11904
  br label %sw.epilog4435, !dbg !11904

do.body279:                                       ; preds = %sw.bb
  %chain282 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11908
  %53 = load %union.tree_node*, %union.tree_node** %chain282, align 8, !dbg !11908
  %cmp283 = icmp eq %union.tree_node* %53, null, !dbg !11908
  br i1 %cmp283, label %do.body293, label %if.then285, !dbg !11911

if.then285:                                       ; preds = %do.body279
  %54 = bitcast %union.tree_node* %53 to i8*, !dbg !11911
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %54) #7, !dbg !11908
  br label %do.body293, !dbg !11908

do.body293:                                       ; preds = %do.body279, %if.then285
  %type297 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11912
  %55 = load %union.tree_node*, %union.tree_node** %type297, align 8, !dbg !11912
  %cmp298 = icmp eq %union.tree_node* %55, null, !dbg !11912
  br i1 %cmp298, label %do.end307, label %if.then300, !dbg !11915

if.then300:                                       ; preds = %do.body293
  %56 = bitcast %union.tree_node* %55 to i8*, !dbg !11915
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %56) #7, !dbg !11912
  br label %do.end307, !dbg !11912

do.end307:                                        ; preds = %do.body293, %if.then300
  %id = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11916
  %str = bitcast i32* %id to i8**, !dbg !11917
  %57 = load i8*, i8** %str, align 8, !dbg !11917
  tail call void @gt_ggc_m_S(i8* %57) #6, !dbg !11918
  br label %sw.epilog4435, !dbg !11919

do.body311:                                       ; preds = %sw.bb
  %chain314 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11920
  %58 = load %union.tree_node*, %union.tree_node** %chain314, align 8, !dbg !11920
  %cmp315 = icmp eq %union.tree_node* %58, null, !dbg !11920
  br i1 %cmp315, label %do.body325, label %if.then317, !dbg !11923

if.then317:                                       ; preds = %do.body311
  %59 = bitcast %union.tree_node* %58 to i8*, !dbg !11923
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %59) #7, !dbg !11920
  br label %do.body325, !dbg !11920

do.body325:                                       ; preds = %do.body311, %if.then317
  %type329 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11924
  %60 = load %union.tree_node*, %union.tree_node** %type329, align 8, !dbg !11924
  %cmp330 = icmp eq %union.tree_node* %60, null, !dbg !11924
  br i1 %cmp330, label %do.body340, label %if.then332, !dbg !11927

if.then332:                                       ; preds = %do.body325
  %61 = bitcast %union.tree_node* %60 to i8*, !dbg !11927
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %61) #7, !dbg !11924
  br label %do.body340, !dbg !11924

do.body340:                                       ; preds = %do.body325, %if.then332
  %name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11928
  %62 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11928
  %cmp343 = icmp eq %union.tree_node* %62, null, !dbg !11928
  br i1 %cmp343, label %do.body352, label %if.then345, !dbg !11931

if.then345:                                       ; preds = %do.body340
  %63 = bitcast %union.tree_node* %62 to i8*, !dbg !11931
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %63) #7, !dbg !11928
  br label %do.body352, !dbg !11928

do.body352:                                       ; preds = %do.body340, %if.then345
  %context = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11932
  %64 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !11932
  %cmp355 = icmp eq %union.tree_node* %64, null, !dbg !11932
  br i1 %cmp355, label %sw.epilog4435, label %if.then357, !dbg !11935

if.then357:                                       ; preds = %do.body352
  %65 = bitcast %union.tree_node* %64 to i8*, !dbg !11935
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %65) #7, !dbg !11932
  br label %sw.epilog4435, !dbg !11932

do.body365:                                       ; preds = %sw.bb
  %chain369 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11936
  %66 = load %union.tree_node*, %union.tree_node** %chain369, align 8, !dbg !11936
  %cmp370 = icmp eq %union.tree_node* %66, null, !dbg !11936
  br i1 %cmp370, label %do.body381, label %if.then372, !dbg !11939

if.then372:                                       ; preds = %do.body365
  %67 = bitcast %union.tree_node* %66 to i8*, !dbg !11939
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %67) #7, !dbg !11936
  br label %do.body381, !dbg !11936

do.body381:                                       ; preds = %do.body365, %if.then372
  %type386 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11940
  %68 = load %union.tree_node*, %union.tree_node** %type386, align 8, !dbg !11940
  %cmp387 = icmp eq %union.tree_node* %68, null, !dbg !11940
  br i1 %cmp387, label %do.body398, label %if.then389, !dbg !11943

if.then389:                                       ; preds = %do.body381
  %69 = bitcast %union.tree_node* %68 to i8*, !dbg !11943
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %69) #7, !dbg !11940
  br label %do.body398, !dbg !11940

do.body398:                                       ; preds = %do.body381, %if.then389
  %name402 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11944
  %70 = load %union.tree_node*, %union.tree_node** %name402, align 8, !dbg !11944
  %cmp403 = icmp eq %union.tree_node* %70, null, !dbg !11944
  br i1 %cmp403, label %do.body413, label %if.then405, !dbg !11947

if.then405:                                       ; preds = %do.body398
  %71 = bitcast %union.tree_node* %70 to i8*, !dbg !11947
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %71) #7, !dbg !11944
  br label %do.body413, !dbg !11944

do.body413:                                       ; preds = %do.body398, %if.then405
  %context417 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11948
  %72 = load %union.tree_node*, %union.tree_node** %context417, align 8, !dbg !11948
  %cmp418 = icmp eq %union.tree_node* %72, null, !dbg !11948
  br i1 %cmp418, label %do.body428, label %if.then420, !dbg !11951

if.then420:                                       ; preds = %do.body413
  %73 = bitcast %union.tree_node* %72 to i8*, !dbg !11951
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %73) #7, !dbg !11948
  br label %do.body428, !dbg !11948

do.body428:                                       ; preds = %do.body413, %if.then420
  %size = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11952
  %74 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !11952
  %cmp431 = icmp eq %union.tree_node* %74, null, !dbg !11952
  br i1 %cmp431, label %do.body440, label %if.then433, !dbg !11955

if.then433:                                       ; preds = %do.body428
  %75 = bitcast %union.tree_node* %74 to i8*, !dbg !11955
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %75) #7, !dbg !11952
  br label %do.body440, !dbg !11952

do.body440:                                       ; preds = %do.body428, %if.then433
  %size_unit = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11956
  %76 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !11956
  %cmp443 = icmp eq %union.tree_node* %76, null, !dbg !11956
  br i1 %cmp443, label %do.body452, label %if.then445, !dbg !11959

if.then445:                                       ; preds = %do.body440
  %77 = bitcast %union.tree_node* %76 to i8*, !dbg !11959
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %77) #7, !dbg !11956
  br label %do.body452, !dbg !11956

do.body452:                                       ; preds = %do.body440, %if.then445
  %initial = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11960
  %78 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !11960
  %cmp455 = icmp eq %union.tree_node* %78, null, !dbg !11960
  br i1 %cmp455, label %do.body464, label %if.then457, !dbg !11963

if.then457:                                       ; preds = %do.body452
  %79 = bitcast %union.tree_node* %78 to i8*, !dbg !11963
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %79) #7, !dbg !11960
  br label %do.body464, !dbg !11960

do.body464:                                       ; preds = %do.body452, %if.then457
  %attributes = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !11964
  %80 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !11964
  %cmp467 = icmp eq %union.tree_node* %80, null, !dbg !11964
  br i1 %cmp467, label %do.body476, label %if.then469, !dbg !11967

if.then469:                                       ; preds = %do.body464
  %81 = bitcast %union.tree_node* %80 to i8*, !dbg !11967
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %81) #7, !dbg !11964
  br label %do.body476, !dbg !11964

do.body476:                                       ; preds = %do.body464, %if.then469
  %abstract_origin = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !11968
  %82 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !11968
  %cmp479 = icmp eq %union.tree_node* %82, null, !dbg !11968
  br i1 %cmp479, label %do.body488, label %if.then481, !dbg !11971

if.then481:                                       ; preds = %do.body476
  %83 = bitcast %union.tree_node* %82 to i8*, !dbg !11971
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %83) #7, !dbg !11968
  br label %do.body488, !dbg !11968

do.body488:                                       ; preds = %do.body476, %if.then481
  %lang_specific = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !11972
  %84 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8, !dbg !11972
  %cmp491 = icmp eq %struct.lang_decl* %84, null, !dbg !11972
  br i1 %cmp491, label %sw.epilog4435, label %if.then493, !dbg !11975

if.then493:                                       ; preds = %do.body488
  %85 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %84, i64 0, i32 0, !dbg !11975
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %85) #7, !dbg !11972
  br label %sw.epilog4435, !dbg !11972

do.body501:                                       ; preds = %sw.bb
  %chain506 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11976
  %86 = load %union.tree_node*, %union.tree_node** %chain506, align 8, !dbg !11976
  %cmp507 = icmp eq %union.tree_node* %86, null, !dbg !11976
  br i1 %cmp507, label %do.body519, label %if.then509, !dbg !11979

if.then509:                                       ; preds = %do.body501
  %87 = bitcast %union.tree_node* %86 to i8*, !dbg !11979
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %87) #7, !dbg !11976
  br label %do.body519, !dbg !11976

do.body519:                                       ; preds = %do.body501, %if.then509
  %type525 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11980
  %88 = load %union.tree_node*, %union.tree_node** %type525, align 8, !dbg !11980
  %cmp526 = icmp eq %union.tree_node* %88, null, !dbg !11980
  br i1 %cmp526, label %do.body538, label %if.then528, !dbg !11983

if.then528:                                       ; preds = %do.body519
  %89 = bitcast %union.tree_node* %88 to i8*, !dbg !11983
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %89) #7, !dbg !11980
  br label %do.body538, !dbg !11980

do.body538:                                       ; preds = %do.body519, %if.then528
  %name543 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11984
  %90 = load %union.tree_node*, %union.tree_node** %name543, align 8, !dbg !11984
  %cmp544 = icmp eq %union.tree_node* %90, null, !dbg !11984
  br i1 %cmp544, label %do.body555, label %if.then546, !dbg !11987

if.then546:                                       ; preds = %do.body538
  %91 = bitcast %union.tree_node* %90 to i8*, !dbg !11987
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %91) #7, !dbg !11984
  br label %do.body555, !dbg !11984

do.body555:                                       ; preds = %do.body538, %if.then546
  %context560 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11988
  %92 = load %union.tree_node*, %union.tree_node** %context560, align 8, !dbg !11988
  %cmp561 = icmp eq %union.tree_node* %92, null, !dbg !11988
  br i1 %cmp561, label %do.body572, label %if.then563, !dbg !11991

if.then563:                                       ; preds = %do.body555
  %93 = bitcast %union.tree_node* %92 to i8*, !dbg !11991
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %93) #7, !dbg !11988
  br label %do.body572, !dbg !11988

do.body572:                                       ; preds = %do.body555, %if.then563
  %size576 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11992
  %94 = load %union.tree_node*, %union.tree_node** %size576, align 8, !dbg !11992
  %cmp577 = icmp eq %union.tree_node* %94, null, !dbg !11992
  br i1 %cmp577, label %do.body587, label %if.then579, !dbg !11995

if.then579:                                       ; preds = %do.body572
  %95 = bitcast %union.tree_node* %94 to i8*, !dbg !11995
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %95) #7, !dbg !11992
  br label %do.body587, !dbg !11992

do.body587:                                       ; preds = %do.body572, %if.then579
  %size_unit591 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11996
  %96 = load %union.tree_node*, %union.tree_node** %size_unit591, align 8, !dbg !11996
  %cmp592 = icmp eq %union.tree_node* %96, null, !dbg !11996
  br i1 %cmp592, label %do.body602, label %if.then594, !dbg !11999

if.then594:                                       ; preds = %do.body587
  %97 = bitcast %union.tree_node* %96 to i8*, !dbg !11999
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %97) #7, !dbg !11996
  br label %do.body602, !dbg !11996

do.body602:                                       ; preds = %do.body587, %if.then594
  %initial606 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12000
  %98 = load %union.tree_node*, %union.tree_node** %initial606, align 8, !dbg !12000
  %cmp607 = icmp eq %union.tree_node* %98, null, !dbg !12000
  br i1 %cmp607, label %do.body617, label %if.then609, !dbg !12003

if.then609:                                       ; preds = %do.body602
  %99 = bitcast %union.tree_node* %98 to i8*, !dbg !12003
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %99) #7, !dbg !12000
  br label %do.body617, !dbg !12000

do.body617:                                       ; preds = %do.body602, %if.then609
  %attributes621 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12004
  %100 = load %union.tree_node*, %union.tree_node** %attributes621, align 8, !dbg !12004
  %cmp622 = icmp eq %union.tree_node* %100, null, !dbg !12004
  br i1 %cmp622, label %do.body632, label %if.then624, !dbg !12007

if.then624:                                       ; preds = %do.body617
  %101 = bitcast %union.tree_node* %100 to i8*, !dbg !12007
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %101) #7, !dbg !12004
  br label %do.body632, !dbg !12004

do.body632:                                       ; preds = %do.body617, %if.then624
  %abstract_origin636 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12008
  %102 = load %union.tree_node*, %union.tree_node** %abstract_origin636, align 8, !dbg !12008
  %cmp637 = icmp eq %union.tree_node* %102, null, !dbg !12008
  br i1 %cmp637, label %do.body647, label %if.then639, !dbg !12011

if.then639:                                       ; preds = %do.body632
  %103 = bitcast %union.tree_node* %102 to i8*, !dbg !12011
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %103) #7, !dbg !12008
  br label %do.body647, !dbg !12008

do.body647:                                       ; preds = %do.body632, %if.then639
  %lang_specific651 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12012
  %104 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific651, align 8, !dbg !12012
  %cmp652 = icmp eq %struct.lang_decl* %104, null, !dbg !12012
  br i1 %cmp652, label %do.body662, label %if.then654, !dbg !12015

if.then654:                                       ; preds = %do.body647
  %105 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %104, i64 0, i32 0, !dbg !12015
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %105) #7, !dbg !12012
  br label %do.body662, !dbg !12012

do.body662:                                       ; preds = %do.body647, %if.then654
  %rtl = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12016
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12016
  %cmp665 = icmp eq %struct.rtx_def* %106, null, !dbg !12016
  br i1 %cmp665, label %sw.epilog4435, label %if.then667, !dbg !12019

if.then667:                                       ; preds = %do.body662
  %107 = bitcast %struct.rtx_def* %106 to i8*, !dbg !12019
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %107) #6, !dbg !12016
  br label %sw.epilog4435, !dbg !12016

do.body675:                                       ; preds = %sw.bb
  %chain682 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12020
  %108 = load %union.tree_node*, %union.tree_node** %chain682, align 8, !dbg !12020
  %cmp683 = icmp eq %union.tree_node* %108, null, !dbg !12020
  br i1 %cmp683, label %do.body697, label %if.then685, !dbg !12023

if.then685:                                       ; preds = %do.body675
  %109 = bitcast %union.tree_node* %108 to i8*, !dbg !12023
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %109) #7, !dbg !12020
  br label %do.body697, !dbg !12020

do.body697:                                       ; preds = %do.body675, %if.then685
  %type705 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12024
  %110 = load %union.tree_node*, %union.tree_node** %type705, align 8, !dbg !12024
  %cmp706 = icmp eq %union.tree_node* %110, null, !dbg !12024
  br i1 %cmp706, label %do.body720, label %if.then708, !dbg !12027

if.then708:                                       ; preds = %do.body697
  %111 = bitcast %union.tree_node* %110 to i8*, !dbg !12027
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %111) #7, !dbg !12024
  br label %do.body720, !dbg !12024

do.body720:                                       ; preds = %do.body697, %if.then708
  %name727 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12028
  %112 = load %union.tree_node*, %union.tree_node** %name727, align 8, !dbg !12028
  %cmp728 = icmp eq %union.tree_node* %112, null, !dbg !12028
  br i1 %cmp728, label %do.body741, label %if.then730, !dbg !12031

if.then730:                                       ; preds = %do.body720
  %113 = bitcast %union.tree_node* %112 to i8*, !dbg !12031
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %113) #7, !dbg !12028
  br label %do.body741, !dbg !12028

do.body741:                                       ; preds = %do.body720, %if.then730
  %context748 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12032
  %114 = load %union.tree_node*, %union.tree_node** %context748, align 8, !dbg !12032
  %cmp749 = icmp eq %union.tree_node* %114, null, !dbg !12032
  br i1 %cmp749, label %do.body762, label %if.then751, !dbg !12035

if.then751:                                       ; preds = %do.body741
  %115 = bitcast %union.tree_node* %114 to i8*, !dbg !12035
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %115) #7, !dbg !12032
  br label %do.body762, !dbg !12032

do.body762:                                       ; preds = %do.body741, %if.then751
  %size768 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12036
  %116 = load %union.tree_node*, %union.tree_node** %size768, align 8, !dbg !12036
  %cmp769 = icmp eq %union.tree_node* %116, null, !dbg !12036
  br i1 %cmp769, label %do.body781, label %if.then771, !dbg !12039

if.then771:                                       ; preds = %do.body762
  %117 = bitcast %union.tree_node* %116 to i8*, !dbg !12039
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %117) #7, !dbg !12036
  br label %do.body781, !dbg !12036

do.body781:                                       ; preds = %do.body762, %if.then771
  %size_unit787 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12040
  %118 = load %union.tree_node*, %union.tree_node** %size_unit787, align 8, !dbg !12040
  %cmp788 = icmp eq %union.tree_node* %118, null, !dbg !12040
  br i1 %cmp788, label %do.body800, label %if.then790, !dbg !12043

if.then790:                                       ; preds = %do.body781
  %119 = bitcast %union.tree_node* %118 to i8*, !dbg !12043
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %119) #7, !dbg !12040
  br label %do.body800, !dbg !12040

do.body800:                                       ; preds = %do.body781, %if.then790
  %initial806 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12044
  %120 = load %union.tree_node*, %union.tree_node** %initial806, align 8, !dbg !12044
  %cmp807 = icmp eq %union.tree_node* %120, null, !dbg !12044
  br i1 %cmp807, label %do.body819, label %if.then809, !dbg !12047

if.then809:                                       ; preds = %do.body800
  %121 = bitcast %union.tree_node* %120 to i8*, !dbg !12047
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %121) #7, !dbg !12044
  br label %do.body819, !dbg !12044

do.body819:                                       ; preds = %do.body800, %if.then809
  %attributes825 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12048
  %122 = load %union.tree_node*, %union.tree_node** %attributes825, align 8, !dbg !12048
  %cmp826 = icmp eq %union.tree_node* %122, null, !dbg !12048
  br i1 %cmp826, label %do.body838, label %if.then828, !dbg !12051

if.then828:                                       ; preds = %do.body819
  %123 = bitcast %union.tree_node* %122 to i8*, !dbg !12051
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %123) #7, !dbg !12048
  br label %do.body838, !dbg !12048

do.body838:                                       ; preds = %do.body819, %if.then828
  %abstract_origin844 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12052
  %124 = load %union.tree_node*, %union.tree_node** %abstract_origin844, align 8, !dbg !12052
  %cmp845 = icmp eq %union.tree_node* %124, null, !dbg !12052
  br i1 %cmp845, label %do.body857, label %if.then847, !dbg !12055

if.then847:                                       ; preds = %do.body838
  %125 = bitcast %union.tree_node* %124 to i8*, !dbg !12055
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %125) #7, !dbg !12052
  br label %do.body857, !dbg !12052

do.body857:                                       ; preds = %do.body838, %if.then847
  %lang_specific863 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12056
  %126 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific863, align 8, !dbg !12056
  %cmp864 = icmp eq %struct.lang_decl* %126, null, !dbg !12056
  br i1 %cmp864, label %do.body876, label %if.then866, !dbg !12059

if.then866:                                       ; preds = %do.body857
  %127 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %126, i64 0, i32 0, !dbg !12059
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %127) #7, !dbg !12056
  br label %do.body876, !dbg !12056

do.body876:                                       ; preds = %do.body857, %if.then866
  %rtl881 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12060
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtl881, align 8, !dbg !12060
  %cmp882 = icmp eq %struct.rtx_def* %128, null, !dbg !12060
  br i1 %cmp882, label %do.body893, label %if.then884, !dbg !12063

if.then884:                                       ; preds = %do.body876
  %129 = bitcast %struct.rtx_def* %128 to i8*, !dbg !12063
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %129) #6, !dbg !12060
  br label %do.body893, !dbg !12060

do.body893:                                       ; preds = %do.body876, %if.then884
  %assembler_name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12064
  %130 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !12064
  %cmp897 = icmp eq %union.tree_node* %130, null, !dbg !12064
  br i1 %cmp897, label %do.body907, label %if.then899, !dbg !12067

if.then899:                                       ; preds = %do.body893
  %131 = bitcast %union.tree_node* %130 to i8*, !dbg !12067
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %131) #7, !dbg !12064
  br label %do.body907, !dbg !12064

do.body907:                                       ; preds = %do.body893, %if.then899
  %section_name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12068
  %132 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !12068
  %cmp911 = icmp eq %union.tree_node* %132, null, !dbg !12068
  br i1 %cmp911, label %do.body921, label %if.then913, !dbg !12071

if.then913:                                       ; preds = %do.body907
  %133 = bitcast %union.tree_node* %132 to i8*, !dbg !12071
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %133) #7, !dbg !12068
  br label %do.body921, !dbg !12068

do.body921:                                       ; preds = %do.body907, %if.then913
  %comdat_group = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12072
  %134 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !12072
  %cmp925 = icmp eq %union.tree_node* %134, null, !dbg !12072
  br i1 %cmp925, label %do.body935, label %if.then927, !dbg !12075

if.then927:                                       ; preds = %do.body921
  %135 = bitcast %union.tree_node* %134 to i8*, !dbg !12075
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %135) #7, !dbg !12072
  br label %do.body935, !dbg !12072

do.body935:                                       ; preds = %do.body921, %if.then927
  %saved_tree = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !12076
  %136 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !12076
  %cmp938 = icmp eq %union.tree_node* %136, null, !dbg !12076
  br i1 %cmp938, label %do.body947, label %if.then940, !dbg !12079

if.then940:                                       ; preds = %do.body935
  %137 = bitcast %union.tree_node* %136 to i8*, !dbg !12079
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %137) #7, !dbg !12076
  br label %do.body947, !dbg !12076

do.body947:                                       ; preds = %do.body935, %if.then940
  %arguments = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12080
  %138 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !12080
  %cmp950 = icmp eq %union.tree_node* %138, null, !dbg !12080
  br i1 %cmp950, label %do.body959, label %if.then952, !dbg !12083

if.then952:                                       ; preds = %do.body947
  %139 = bitcast %union.tree_node* %138 to i8*, !dbg !12083
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %139) #7, !dbg !12080
  br label %do.body959, !dbg !12080

do.body959:                                       ; preds = %do.body947, %if.then952
  %result = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12084
  %140 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !12084
  %cmp962 = icmp eq %union.tree_node* %140, null, !dbg !12084
  br i1 %cmp962, label %do.body971, label %if.then964, !dbg !12087

if.then964:                                       ; preds = %do.body959
  %141 = bitcast %union.tree_node* %140 to i8*, !dbg !12087
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %141) #7, !dbg !12084
  br label %do.body971, !dbg !12084

do.body971:                                       ; preds = %do.body959, %if.then964
  %vindex = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !12088
  %142 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !12088
  %cmp974 = icmp eq %union.tree_node* %142, null, !dbg !12088
  br i1 %cmp974, label %sw.epilog4435, label %if.then976, !dbg !12091

if.then976:                                       ; preds = %do.body971
  %143 = bitcast %union.tree_node* %142 to i8*, !dbg !12091
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %143) #7, !dbg !12088
  br label %sw.epilog4435, !dbg !12088

do.body984:                                       ; preds = %sw.bb
  %chain990 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12092
  %144 = load %union.tree_node*, %union.tree_node** %chain990, align 8, !dbg !12092
  %cmp991 = icmp eq %union.tree_node* %144, null, !dbg !12092
  br i1 %cmp991, label %do.body1004, label %if.then993, !dbg !12095

if.then993:                                       ; preds = %do.body984
  %145 = bitcast %union.tree_node* %144 to i8*, !dbg !12095
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %145) #7, !dbg !12092
  br label %do.body1004, !dbg !12092

do.body1004:                                      ; preds = %do.body984, %if.then993
  %type1011 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12096
  %146 = load %union.tree_node*, %union.tree_node** %type1011, align 8, !dbg !12096
  %cmp1012 = icmp eq %union.tree_node* %146, null, !dbg !12096
  br i1 %cmp1012, label %do.body1025, label %if.then1014, !dbg !12099

if.then1014:                                      ; preds = %do.body1004
  %147 = bitcast %union.tree_node* %146 to i8*, !dbg !12099
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %147) #7, !dbg !12096
  br label %do.body1025, !dbg !12096

do.body1025:                                      ; preds = %do.body1004, %if.then1014
  %name1031 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12100
  %148 = load %union.tree_node*, %union.tree_node** %name1031, align 8, !dbg !12100
  %cmp1032 = icmp eq %union.tree_node* %148, null, !dbg !12100
  br i1 %cmp1032, label %do.body1044, label %if.then1034, !dbg !12103

if.then1034:                                      ; preds = %do.body1025
  %149 = bitcast %union.tree_node* %148 to i8*, !dbg !12103
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %149) #7, !dbg !12100
  br label %do.body1044, !dbg !12100

do.body1044:                                      ; preds = %do.body1025, %if.then1034
  %context1050 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12104
  %150 = load %union.tree_node*, %union.tree_node** %context1050, align 8, !dbg !12104
  %cmp1051 = icmp eq %union.tree_node* %150, null, !dbg !12104
  br i1 %cmp1051, label %do.body1063, label %if.then1053, !dbg !12107

if.then1053:                                      ; preds = %do.body1044
  %151 = bitcast %union.tree_node* %150 to i8*, !dbg !12107
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %151) #7, !dbg !12104
  br label %do.body1063, !dbg !12104

do.body1063:                                      ; preds = %do.body1044, %if.then1053
  %size1068 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12108
  %152 = load %union.tree_node*, %union.tree_node** %size1068, align 8, !dbg !12108
  %cmp1069 = icmp eq %union.tree_node* %152, null, !dbg !12108
  br i1 %cmp1069, label %do.body1080, label %if.then1071, !dbg !12111

if.then1071:                                      ; preds = %do.body1063
  %153 = bitcast %union.tree_node* %152 to i8*, !dbg !12111
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %153) #7, !dbg !12108
  br label %do.body1080, !dbg !12108

do.body1080:                                      ; preds = %do.body1063, %if.then1071
  %size_unit1085 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12112
  %154 = load %union.tree_node*, %union.tree_node** %size_unit1085, align 8, !dbg !12112
  %cmp1086 = icmp eq %union.tree_node* %154, null, !dbg !12112
  br i1 %cmp1086, label %do.body1097, label %if.then1088, !dbg !12115

if.then1088:                                      ; preds = %do.body1080
  %155 = bitcast %union.tree_node* %154 to i8*, !dbg !12115
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %155) #7, !dbg !12112
  br label %do.body1097, !dbg !12112

do.body1097:                                      ; preds = %do.body1080, %if.then1088
  %initial1102 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12116
  %156 = load %union.tree_node*, %union.tree_node** %initial1102, align 8, !dbg !12116
  %cmp1103 = icmp eq %union.tree_node* %156, null, !dbg !12116
  br i1 %cmp1103, label %do.body1114, label %if.then1105, !dbg !12119

if.then1105:                                      ; preds = %do.body1097
  %157 = bitcast %union.tree_node* %156 to i8*, !dbg !12119
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %157) #7, !dbg !12116
  br label %do.body1114, !dbg !12116

do.body1114:                                      ; preds = %do.body1097, %if.then1105
  %attributes1119 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12120
  %158 = load %union.tree_node*, %union.tree_node** %attributes1119, align 8, !dbg !12120
  %cmp1120 = icmp eq %union.tree_node* %158, null, !dbg !12120
  br i1 %cmp1120, label %do.body1131, label %if.then1122, !dbg !12123

if.then1122:                                      ; preds = %do.body1114
  %159 = bitcast %union.tree_node* %158 to i8*, !dbg !12123
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %159) #7, !dbg !12120
  br label %do.body1131, !dbg !12120

do.body1131:                                      ; preds = %do.body1114, %if.then1122
  %abstract_origin1136 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12124
  %160 = load %union.tree_node*, %union.tree_node** %abstract_origin1136, align 8, !dbg !12124
  %cmp1137 = icmp eq %union.tree_node* %160, null, !dbg !12124
  br i1 %cmp1137, label %do.body1148, label %if.then1139, !dbg !12127

if.then1139:                                      ; preds = %do.body1131
  %161 = bitcast %union.tree_node* %160 to i8*, !dbg !12127
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %161) #7, !dbg !12124
  br label %do.body1148, !dbg !12124

do.body1148:                                      ; preds = %do.body1131, %if.then1139
  %lang_specific1153 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12128
  %162 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1153, align 8, !dbg !12128
  %cmp1154 = icmp eq %struct.lang_decl* %162, null, !dbg !12128
  br i1 %cmp1154, label %do.body1165, label %if.then1156, !dbg !12131

if.then1156:                                      ; preds = %do.body1148
  %163 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %162, i64 0, i32 0, !dbg !12131
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %163) #7, !dbg !12128
  br label %do.body1165, !dbg !12128

do.body1165:                                      ; preds = %do.body1148, %if.then1156
  %rtl1169 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12132
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtl1169, align 8, !dbg !12132
  %cmp1170 = icmp eq %struct.rtx_def* %164, null, !dbg !12132
  br i1 %cmp1170, label %do.body1180, label %if.then1172, !dbg !12135

if.then1172:                                      ; preds = %do.body1165
  %165 = bitcast %struct.rtx_def* %164 to i8*, !dbg !12135
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %165) #6, !dbg !12132
  br label %do.body1180, !dbg !12132

do.body1180:                                      ; preds = %do.body1165, %if.then1172
  %incoming_rtl = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12136
  %166 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !12136
  %167 = load %struct.rtx_def*, %struct.rtx_def** %166, align 8, !dbg !12136
  %cmp1183 = icmp eq %struct.rtx_def* %167, null, !dbg !12136
  br i1 %cmp1183, label %do.body1192, label %if.then1185, !dbg !12139

if.then1185:                                      ; preds = %do.body1180
  %168 = bitcast %struct.rtx_def* %167 to i8*, !dbg !12139
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %168) #6, !dbg !12136
  br label %do.body1192, !dbg !12136

do.body1192:                                      ; preds = %do.body1180, %if.then1185
  %ann = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12140
  %169 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !12140
  %170 = load %struct.var_ann_d*, %struct.var_ann_d** %169, align 8, !dbg !12140
  %cmp1195 = icmp eq %struct.var_ann_d* %170, null, !dbg !12140
  br i1 %cmp1195, label %sw.epilog4435, label %if.then1197, !dbg !12143

if.then1197:                                      ; preds = %do.body1192
  %171 = bitcast %struct.var_ann_d* %170 to i8*, !dbg !12143
  tail call void @gt_ggc_mx_var_ann_d(i8* nonnull %171) #6, !dbg !12140
  br label %sw.epilog4435, !dbg !12140

do.body1205:                                      ; preds = %sw.bb
  %chain1211 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12144
  %172 = load %union.tree_node*, %union.tree_node** %chain1211, align 8, !dbg !12144
  %cmp1212 = icmp eq %union.tree_node* %172, null, !dbg !12144
  br i1 %cmp1212, label %do.body1225, label %if.then1214, !dbg !12147

if.then1214:                                      ; preds = %do.body1205
  %173 = bitcast %union.tree_node* %172 to i8*, !dbg !12147
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %173) #7, !dbg !12144
  br label %do.body1225, !dbg !12144

do.body1225:                                      ; preds = %do.body1205, %if.then1214
  %type1232 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12148
  %174 = load %union.tree_node*, %union.tree_node** %type1232, align 8, !dbg !12148
  %cmp1233 = icmp eq %union.tree_node* %174, null, !dbg !12148
  br i1 %cmp1233, label %do.body1246, label %if.then1235, !dbg !12151

if.then1235:                                      ; preds = %do.body1225
  %175 = bitcast %union.tree_node* %174 to i8*, !dbg !12151
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %175) #7, !dbg !12148
  br label %do.body1246, !dbg !12148

do.body1246:                                      ; preds = %do.body1225, %if.then1235
  %name1252 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12152
  %176 = load %union.tree_node*, %union.tree_node** %name1252, align 8, !dbg !12152
  %cmp1253 = icmp eq %union.tree_node* %176, null, !dbg !12152
  br i1 %cmp1253, label %do.body1265, label %if.then1255, !dbg !12155

if.then1255:                                      ; preds = %do.body1246
  %177 = bitcast %union.tree_node* %176 to i8*, !dbg !12155
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %177) #7, !dbg !12152
  br label %do.body1265, !dbg !12152

do.body1265:                                      ; preds = %do.body1246, %if.then1255
  %context1271 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12156
  %178 = load %union.tree_node*, %union.tree_node** %context1271, align 8, !dbg !12156
  %cmp1272 = icmp eq %union.tree_node* %178, null, !dbg !12156
  br i1 %cmp1272, label %do.body1284, label %if.then1274, !dbg !12159

if.then1274:                                      ; preds = %do.body1265
  %179 = bitcast %union.tree_node* %178 to i8*, !dbg !12159
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %179) #7, !dbg !12156
  br label %do.body1284, !dbg !12156

do.body1284:                                      ; preds = %do.body1265, %if.then1274
  %size1289 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12160
  %180 = load %union.tree_node*, %union.tree_node** %size1289, align 8, !dbg !12160
  %cmp1290 = icmp eq %union.tree_node* %180, null, !dbg !12160
  br i1 %cmp1290, label %do.body1301, label %if.then1292, !dbg !12163

if.then1292:                                      ; preds = %do.body1284
  %181 = bitcast %union.tree_node* %180 to i8*, !dbg !12163
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %181) #7, !dbg !12160
  br label %do.body1301, !dbg !12160

do.body1301:                                      ; preds = %do.body1284, %if.then1292
  %size_unit1306 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12164
  %182 = load %union.tree_node*, %union.tree_node** %size_unit1306, align 8, !dbg !12164
  %cmp1307 = icmp eq %union.tree_node* %182, null, !dbg !12164
  br i1 %cmp1307, label %do.body1318, label %if.then1309, !dbg !12167

if.then1309:                                      ; preds = %do.body1301
  %183 = bitcast %union.tree_node* %182 to i8*, !dbg !12167
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %183) #7, !dbg !12164
  br label %do.body1318, !dbg !12164

do.body1318:                                      ; preds = %do.body1301, %if.then1309
  %initial1323 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12168
  %184 = load %union.tree_node*, %union.tree_node** %initial1323, align 8, !dbg !12168
  %cmp1324 = icmp eq %union.tree_node* %184, null, !dbg !12168
  br i1 %cmp1324, label %do.body1335, label %if.then1326, !dbg !12171

if.then1326:                                      ; preds = %do.body1318
  %185 = bitcast %union.tree_node* %184 to i8*, !dbg !12171
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %185) #7, !dbg !12168
  br label %do.body1335, !dbg !12168

do.body1335:                                      ; preds = %do.body1318, %if.then1326
  %attributes1340 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12172
  %186 = load %union.tree_node*, %union.tree_node** %attributes1340, align 8, !dbg !12172
  %cmp1341 = icmp eq %union.tree_node* %186, null, !dbg !12172
  br i1 %cmp1341, label %do.body1352, label %if.then1343, !dbg !12175

if.then1343:                                      ; preds = %do.body1335
  %187 = bitcast %union.tree_node* %186 to i8*, !dbg !12175
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %187) #7, !dbg !12172
  br label %do.body1352, !dbg !12172

do.body1352:                                      ; preds = %do.body1335, %if.then1343
  %abstract_origin1357 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12176
  %188 = load %union.tree_node*, %union.tree_node** %abstract_origin1357, align 8, !dbg !12176
  %cmp1358 = icmp eq %union.tree_node* %188, null, !dbg !12176
  br i1 %cmp1358, label %do.body1369, label %if.then1360, !dbg !12179

if.then1360:                                      ; preds = %do.body1352
  %189 = bitcast %union.tree_node* %188 to i8*, !dbg !12179
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %189) #7, !dbg !12176
  br label %do.body1369, !dbg !12176

do.body1369:                                      ; preds = %do.body1352, %if.then1360
  %lang_specific1374 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12180
  %190 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1374, align 8, !dbg !12180
  %cmp1375 = icmp eq %struct.lang_decl* %190, null, !dbg !12180
  br i1 %cmp1375, label %do.body1386, label %if.then1377, !dbg !12183

if.then1377:                                      ; preds = %do.body1369
  %191 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %190, i64 0, i32 0, !dbg !12183
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %191) #7, !dbg !12180
  br label %do.body1386, !dbg !12180

do.body1386:                                      ; preds = %do.body1369, %if.then1377
  %rtl1390 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12184
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtl1390, align 8, !dbg !12184
  %cmp1391 = icmp eq %struct.rtx_def* %192, null, !dbg !12184
  br i1 %cmp1391, label %do.body1401, label %if.then1393, !dbg !12187

if.then1393:                                      ; preds = %do.body1386
  %193 = bitcast %struct.rtx_def* %192 to i8*, !dbg !12187
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %193) #6, !dbg !12184
  br label %do.body1401, !dbg !12184

do.body1401:                                      ; preds = %do.body1386, %if.then1393
  %assembler_name1404 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12188
  %194 = load %union.tree_node*, %union.tree_node** %assembler_name1404, align 8, !dbg !12188
  %cmp1405 = icmp eq %union.tree_node* %194, null, !dbg !12188
  br i1 %cmp1405, label %do.body1414, label %if.then1407, !dbg !12191

if.then1407:                                      ; preds = %do.body1401
  %195 = bitcast %union.tree_node* %194 to i8*, !dbg !12191
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %195) #7, !dbg !12188
  br label %do.body1414, !dbg !12188

do.body1414:                                      ; preds = %do.body1401, %if.then1407
  %section_name1417 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12192
  %196 = load %union.tree_node*, %union.tree_node** %section_name1417, align 8, !dbg !12192
  %cmp1418 = icmp eq %union.tree_node* %196, null, !dbg !12192
  br i1 %cmp1418, label %do.body1427, label %if.then1420, !dbg !12195

if.then1420:                                      ; preds = %do.body1414
  %197 = bitcast %union.tree_node* %196 to i8*, !dbg !12195
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %197) #7, !dbg !12192
  br label %do.body1427, !dbg !12192

do.body1427:                                      ; preds = %do.body1414, %if.then1420
  %comdat_group1430 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12196
  %198 = load %union.tree_node*, %union.tree_node** %comdat_group1430, align 8, !dbg !12196
  %cmp1431 = icmp eq %union.tree_node* %198, null, !dbg !12196
  br i1 %cmp1431, label %sw.epilog4435, label %if.then1433, !dbg !12199

if.then1433:                                      ; preds = %do.body1427
  %199 = bitcast %union.tree_node* %198 to i8*, !dbg !12199
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %199) #7, !dbg !12196
  br label %sw.epilog4435, !dbg !12196

do.body1441:                                      ; preds = %sw.bb
  %chain1448 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12200
  %200 = load %union.tree_node*, %union.tree_node** %chain1448, align 8, !dbg !12200
  %cmp1449 = icmp eq %union.tree_node* %200, null, !dbg !12200
  br i1 %cmp1449, label %do.body1463, label %if.then1451, !dbg !12203

if.then1451:                                      ; preds = %do.body1441
  %201 = bitcast %union.tree_node* %200 to i8*, !dbg !12203
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %201) #7, !dbg !12200
  br label %do.body1463, !dbg !12200

do.body1463:                                      ; preds = %do.body1441, %if.then1451
  %type1471 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12204
  %202 = load %union.tree_node*, %union.tree_node** %type1471, align 8, !dbg !12204
  %cmp1472 = icmp eq %union.tree_node* %202, null, !dbg !12204
  br i1 %cmp1472, label %do.body1486, label %if.then1474, !dbg !12207

if.then1474:                                      ; preds = %do.body1463
  %203 = bitcast %union.tree_node* %202 to i8*, !dbg !12207
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %203) #7, !dbg !12204
  br label %do.body1486, !dbg !12204

do.body1486:                                      ; preds = %do.body1463, %if.then1474
  %name1493 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12208
  %204 = load %union.tree_node*, %union.tree_node** %name1493, align 8, !dbg !12208
  %cmp1494 = icmp eq %union.tree_node* %204, null, !dbg !12208
  br i1 %cmp1494, label %do.body1507, label %if.then1496, !dbg !12211

if.then1496:                                      ; preds = %do.body1486
  %205 = bitcast %union.tree_node* %204 to i8*, !dbg !12211
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %205) #7, !dbg !12208
  br label %do.body1507, !dbg !12208

do.body1507:                                      ; preds = %do.body1486, %if.then1496
  %context1514 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12212
  %206 = load %union.tree_node*, %union.tree_node** %context1514, align 8, !dbg !12212
  %cmp1515 = icmp eq %union.tree_node* %206, null, !dbg !12212
  br i1 %cmp1515, label %do.body1528, label %if.then1517, !dbg !12215

if.then1517:                                      ; preds = %do.body1507
  %207 = bitcast %union.tree_node* %206 to i8*, !dbg !12215
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %207) #7, !dbg !12212
  br label %do.body1528, !dbg !12212

do.body1528:                                      ; preds = %do.body1507, %if.then1517
  %size1534 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12216
  %208 = load %union.tree_node*, %union.tree_node** %size1534, align 8, !dbg !12216
  %cmp1535 = icmp eq %union.tree_node* %208, null, !dbg !12216
  br i1 %cmp1535, label %do.body1547, label %if.then1537, !dbg !12219

if.then1537:                                      ; preds = %do.body1528
  %209 = bitcast %union.tree_node* %208 to i8*, !dbg !12219
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %209) #7, !dbg !12216
  br label %do.body1547, !dbg !12216

do.body1547:                                      ; preds = %do.body1528, %if.then1537
  %size_unit1553 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12220
  %210 = load %union.tree_node*, %union.tree_node** %size_unit1553, align 8, !dbg !12220
  %cmp1554 = icmp eq %union.tree_node* %210, null, !dbg !12220
  br i1 %cmp1554, label %do.body1566, label %if.then1556, !dbg !12223

if.then1556:                                      ; preds = %do.body1547
  %211 = bitcast %union.tree_node* %210 to i8*, !dbg !12223
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %211) #7, !dbg !12220
  br label %do.body1566, !dbg !12220

do.body1566:                                      ; preds = %do.body1547, %if.then1556
  %initial1572 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12224
  %212 = load %union.tree_node*, %union.tree_node** %initial1572, align 8, !dbg !12224
  %cmp1573 = icmp eq %union.tree_node* %212, null, !dbg !12224
  br i1 %cmp1573, label %do.body1585, label %if.then1575, !dbg !12227

if.then1575:                                      ; preds = %do.body1566
  %213 = bitcast %union.tree_node* %212 to i8*, !dbg !12227
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %213) #7, !dbg !12224
  br label %do.body1585, !dbg !12224

do.body1585:                                      ; preds = %do.body1566, %if.then1575
  %attributes1591 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12228
  %214 = load %union.tree_node*, %union.tree_node** %attributes1591, align 8, !dbg !12228
  %cmp1592 = icmp eq %union.tree_node* %214, null, !dbg !12228
  br i1 %cmp1592, label %do.body1604, label %if.then1594, !dbg !12231

if.then1594:                                      ; preds = %do.body1585
  %215 = bitcast %union.tree_node* %214 to i8*, !dbg !12231
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %215) #7, !dbg !12228
  br label %do.body1604, !dbg !12228

do.body1604:                                      ; preds = %do.body1585, %if.then1594
  %abstract_origin1610 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12232
  %216 = load %union.tree_node*, %union.tree_node** %abstract_origin1610, align 8, !dbg !12232
  %cmp1611 = icmp eq %union.tree_node* %216, null, !dbg !12232
  br i1 %cmp1611, label %do.body1623, label %if.then1613, !dbg !12235

if.then1613:                                      ; preds = %do.body1604
  %217 = bitcast %union.tree_node* %216 to i8*, !dbg !12235
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %217) #7, !dbg !12232
  br label %do.body1623, !dbg !12232

do.body1623:                                      ; preds = %do.body1604, %if.then1613
  %lang_specific1629 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12236
  %218 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1629, align 8, !dbg !12236
  %cmp1630 = icmp eq %struct.lang_decl* %218, null, !dbg !12236
  br i1 %cmp1630, label %do.body1642, label %if.then1632, !dbg !12239

if.then1632:                                      ; preds = %do.body1623
  %219 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %218, i64 0, i32 0, !dbg !12239
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %219) #7, !dbg !12236
  br label %do.body1642, !dbg !12236

do.body1642:                                      ; preds = %do.body1623, %if.then1632
  %rtl1647 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12240
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtl1647, align 8, !dbg !12240
  %cmp1648 = icmp eq %struct.rtx_def* %220, null, !dbg !12240
  br i1 %cmp1648, label %do.body1659, label %if.then1650, !dbg !12243

if.then1650:                                      ; preds = %do.body1642
  %221 = bitcast %struct.rtx_def* %220 to i8*, !dbg !12243
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %221) #6, !dbg !12240
  br label %do.body1659, !dbg !12240

do.body1659:                                      ; preds = %do.body1642, %if.then1650
  %assembler_name1663 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12244
  %222 = load %union.tree_node*, %union.tree_node** %assembler_name1663, align 8, !dbg !12244
  %cmp1664 = icmp eq %union.tree_node* %222, null, !dbg !12244
  br i1 %cmp1664, label %do.body1674, label %if.then1666, !dbg !12247

if.then1666:                                      ; preds = %do.body1659
  %223 = bitcast %union.tree_node* %222 to i8*, !dbg !12247
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %223) #7, !dbg !12244
  br label %do.body1674, !dbg !12244

do.body1674:                                      ; preds = %do.body1659, %if.then1666
  %section_name1678 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12248
  %224 = load %union.tree_node*, %union.tree_node** %section_name1678, align 8, !dbg !12248
  %cmp1679 = icmp eq %union.tree_node* %224, null, !dbg !12248
  br i1 %cmp1679, label %do.body1689, label %if.then1681, !dbg !12251

if.then1681:                                      ; preds = %do.body1674
  %225 = bitcast %union.tree_node* %224 to i8*, !dbg !12251
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %225) #7, !dbg !12248
  br label %do.body1689, !dbg !12248

do.body1689:                                      ; preds = %do.body1674, %if.then1681
  %comdat_group1693 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12252
  %226 = load %union.tree_node*, %union.tree_node** %comdat_group1693, align 8, !dbg !12252
  %cmp1694 = icmp eq %union.tree_node* %226, null, !dbg !12252
  br i1 %cmp1694, label %do.body1704, label %if.then1696, !dbg !12255

if.then1696:                                      ; preds = %do.body1689
  %227 = bitcast %union.tree_node* %226 to i8*, !dbg !12255
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %227) #7, !dbg !12252
  br label %do.body1704, !dbg !12252

do.body1704:                                      ; preds = %do.body1689, %if.then1696
  %ann1707 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !12256
  %228 = bitcast %union.tree_node** %ann1707 to %struct.var_ann_d**, !dbg !12256
  %229 = load %struct.var_ann_d*, %struct.var_ann_d** %228, align 8, !dbg !12256
  %cmp1708 = icmp eq %struct.var_ann_d* %229, null, !dbg !12256
  br i1 %cmp1708, label %sw.epilog4435, label %if.then1710, !dbg !12259

if.then1710:                                      ; preds = %do.body1704
  %230 = bitcast %struct.var_ann_d* %229 to i8*, !dbg !12259
  tail call void @gt_ggc_mx_var_ann_d(i8* nonnull %230) #6, !dbg !12256
  br label %sw.epilog4435, !dbg !12256

do.body1718:                                      ; preds = %sw.bb
  %chain1723 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12260
  %231 = load %union.tree_node*, %union.tree_node** %chain1723, align 8, !dbg !12260
  %cmp1724 = icmp eq %union.tree_node* %231, null, !dbg !12260
  br i1 %cmp1724, label %do.body1736, label %if.then1726, !dbg !12263

if.then1726:                                      ; preds = %do.body1718
  %232 = bitcast %union.tree_node* %231 to i8*, !dbg !12263
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %232) #7, !dbg !12260
  br label %do.body1736, !dbg !12260

do.body1736:                                      ; preds = %do.body1718, %if.then1726
  %type1742 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12264
  %233 = load %union.tree_node*, %union.tree_node** %type1742, align 8, !dbg !12264
  %cmp1743 = icmp eq %union.tree_node* %233, null, !dbg !12264
  br i1 %cmp1743, label %do.body1755, label %if.then1745, !dbg !12267

if.then1745:                                      ; preds = %do.body1736
  %234 = bitcast %union.tree_node* %233 to i8*, !dbg !12267
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %234) #7, !dbg !12264
  br label %do.body1755, !dbg !12264

do.body1755:                                      ; preds = %do.body1736, %if.then1745
  %name1760 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12268
  %235 = load %union.tree_node*, %union.tree_node** %name1760, align 8, !dbg !12268
  %cmp1761 = icmp eq %union.tree_node* %235, null, !dbg !12268
  br i1 %cmp1761, label %do.body1772, label %if.then1763, !dbg !12271

if.then1763:                                      ; preds = %do.body1755
  %236 = bitcast %union.tree_node* %235 to i8*, !dbg !12271
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %236) #7, !dbg !12268
  br label %do.body1772, !dbg !12268

do.body1772:                                      ; preds = %do.body1755, %if.then1763
  %context1777 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12272
  %237 = load %union.tree_node*, %union.tree_node** %context1777, align 8, !dbg !12272
  %cmp1778 = icmp eq %union.tree_node* %237, null, !dbg !12272
  br i1 %cmp1778, label %do.body1789, label %if.then1780, !dbg !12275

if.then1780:                                      ; preds = %do.body1772
  %238 = bitcast %union.tree_node* %237 to i8*, !dbg !12275
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %238) #7, !dbg !12272
  br label %do.body1789, !dbg !12272

do.body1789:                                      ; preds = %do.body1772, %if.then1780
  %size1793 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12276
  %239 = load %union.tree_node*, %union.tree_node** %size1793, align 8, !dbg !12276
  %cmp1794 = icmp eq %union.tree_node* %239, null, !dbg !12276
  br i1 %cmp1794, label %do.body1804, label %if.then1796, !dbg !12279

if.then1796:                                      ; preds = %do.body1789
  %240 = bitcast %union.tree_node* %239 to i8*, !dbg !12279
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %240) #7, !dbg !12276
  br label %do.body1804, !dbg !12276

do.body1804:                                      ; preds = %do.body1789, %if.then1796
  %size_unit1808 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12280
  %241 = load %union.tree_node*, %union.tree_node** %size_unit1808, align 8, !dbg !12280
  %cmp1809 = icmp eq %union.tree_node* %241, null, !dbg !12280
  br i1 %cmp1809, label %do.body1819, label %if.then1811, !dbg !12283

if.then1811:                                      ; preds = %do.body1804
  %242 = bitcast %union.tree_node* %241 to i8*, !dbg !12283
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %242) #7, !dbg !12280
  br label %do.body1819, !dbg !12280

do.body1819:                                      ; preds = %do.body1804, %if.then1811
  %initial1823 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12284
  %243 = load %union.tree_node*, %union.tree_node** %initial1823, align 8, !dbg !12284
  %cmp1824 = icmp eq %union.tree_node* %243, null, !dbg !12284
  br i1 %cmp1824, label %do.body1834, label %if.then1826, !dbg !12287

if.then1826:                                      ; preds = %do.body1819
  %244 = bitcast %union.tree_node* %243 to i8*, !dbg !12287
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %244) #7, !dbg !12284
  br label %do.body1834, !dbg !12284

do.body1834:                                      ; preds = %do.body1819, %if.then1826
  %attributes1838 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12288
  %245 = load %union.tree_node*, %union.tree_node** %attributes1838, align 8, !dbg !12288
  %cmp1839 = icmp eq %union.tree_node* %245, null, !dbg !12288
  br i1 %cmp1839, label %do.body1849, label %if.then1841, !dbg !12291

if.then1841:                                      ; preds = %do.body1834
  %246 = bitcast %union.tree_node* %245 to i8*, !dbg !12291
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %246) #7, !dbg !12288
  br label %do.body1849, !dbg !12288

do.body1849:                                      ; preds = %do.body1834, %if.then1841
  %abstract_origin1853 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12292
  %247 = load %union.tree_node*, %union.tree_node** %abstract_origin1853, align 8, !dbg !12292
  %cmp1854 = icmp eq %union.tree_node* %247, null, !dbg !12292
  br i1 %cmp1854, label %do.body1864, label %if.then1856, !dbg !12295

if.then1856:                                      ; preds = %do.body1849
  %248 = bitcast %union.tree_node* %247 to i8*, !dbg !12295
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %248) #7, !dbg !12292
  br label %do.body1864, !dbg !12292

do.body1864:                                      ; preds = %do.body1849, %if.then1856
  %lang_specific1868 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12296
  %249 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1868, align 8, !dbg !12296
  %cmp1869 = icmp eq %struct.lang_decl* %249, null, !dbg !12296
  br i1 %cmp1869, label %do.body1879, label %if.then1871, !dbg !12299

if.then1871:                                      ; preds = %do.body1864
  %250 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %249, i64 0, i32 0, !dbg !12299
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %250) #7, !dbg !12296
  br label %do.body1879, !dbg !12296

do.body1879:                                      ; preds = %do.body1864, %if.then1871
  %offset = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12300
  %251 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !12300
  %252 = load %union.tree_node*, %union.tree_node** %251, align 8, !dbg !12300
  %cmp1882 = icmp eq %union.tree_node* %252, null, !dbg !12300
  br i1 %cmp1882, label %do.body1891, label %if.then1884, !dbg !12303

if.then1884:                                      ; preds = %do.body1879
  %253 = bitcast %union.tree_node* %252 to i8*, !dbg !12303
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %253) #7, !dbg !12300
  br label %do.body1891, !dbg !12300

do.body1891:                                      ; preds = %do.body1879, %if.then1884
  %254 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12304
  %255 = load %union.tree_node*, %union.tree_node** %254, align 8, !dbg !12304
  %cmp1894 = icmp eq %union.tree_node* %255, null, !dbg !12304
  br i1 %cmp1894, label %do.body1903, label %if.then1896, !dbg !12307

if.then1896:                                      ; preds = %do.body1891
  %256 = bitcast %union.tree_node* %255 to i8*, !dbg !12307
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %256) #7, !dbg !12304
  br label %do.body1903, !dbg !12304

do.body1903:                                      ; preds = %do.body1891, %if.then1896
  %257 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12308
  %258 = load %union.tree_node*, %union.tree_node** %257, align 8, !dbg !12308
  %cmp1906 = icmp eq %union.tree_node* %258, null, !dbg !12308
  br i1 %cmp1906, label %do.body1915, label %if.then1908, !dbg !12311

if.then1908:                                      ; preds = %do.body1903
  %259 = bitcast %union.tree_node* %258 to i8*, !dbg !12311
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %259) #7, !dbg !12308
  br label %do.body1915, !dbg !12308

do.body1915:                                      ; preds = %do.body1903, %if.then1908
  %260 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12312
  %261 = load %union.tree_node*, %union.tree_node** %260, align 8, !dbg !12312
  %cmp1918 = icmp eq %union.tree_node* %261, null, !dbg !12312
  br i1 %cmp1918, label %do.body1927, label %if.then1920, !dbg !12315

if.then1920:                                      ; preds = %do.body1915
  %262 = bitcast %union.tree_node* %261 to i8*, !dbg !12315
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %262) #7, !dbg !12312
  br label %do.body1927, !dbg !12312

do.body1927:                                      ; preds = %do.body1915, %if.then1920
  %fcontext = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12316
  %263 = bitcast i24* %fcontext to %union.tree_node**, !dbg !12316
  %264 = load %union.tree_node*, %union.tree_node** %263, align 8, !dbg !12316
  %cmp1930 = icmp eq %union.tree_node* %264, null, !dbg !12316
  br i1 %cmp1930, label %sw.epilog4435, label %if.then1932, !dbg !12319

if.then1932:                                      ; preds = %do.body1927
  %265 = bitcast %union.tree_node* %264 to i8*, !dbg !12319
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %265) #7, !dbg !12316
  br label %sw.epilog4435, !dbg !12316

do.body1940:                                      ; preds = %sw.bb
  %chain1946 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12320
  %266 = load %union.tree_node*, %union.tree_node** %chain1946, align 8, !dbg !12320
  %cmp1947 = icmp eq %union.tree_node* %266, null, !dbg !12320
  br i1 %cmp1947, label %do.body1960, label %if.then1949, !dbg !12323

if.then1949:                                      ; preds = %do.body1940
  %267 = bitcast %union.tree_node* %266 to i8*, !dbg !12323
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %267) #7, !dbg !12320
  br label %do.body1960, !dbg !12320

do.body1960:                                      ; preds = %do.body1940, %if.then1949
  %type1967 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12324
  %268 = load %union.tree_node*, %union.tree_node** %type1967, align 8, !dbg !12324
  %cmp1968 = icmp eq %union.tree_node* %268, null, !dbg !12324
  br i1 %cmp1968, label %do.body1981, label %if.then1970, !dbg !12327

if.then1970:                                      ; preds = %do.body1960
  %269 = bitcast %union.tree_node* %268 to i8*, !dbg !12327
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %269) #7, !dbg !12324
  br label %do.body1981, !dbg !12324

do.body1981:                                      ; preds = %do.body1960, %if.then1970
  %name1987 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12328
  %270 = load %union.tree_node*, %union.tree_node** %name1987, align 8, !dbg !12328
  %cmp1988 = icmp eq %union.tree_node* %270, null, !dbg !12328
  br i1 %cmp1988, label %do.body2000, label %if.then1990, !dbg !12331

if.then1990:                                      ; preds = %do.body1981
  %271 = bitcast %union.tree_node* %270 to i8*, !dbg !12331
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %271) #7, !dbg !12328
  br label %do.body2000, !dbg !12328

do.body2000:                                      ; preds = %do.body1981, %if.then1990
  %context2006 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12332
  %272 = load %union.tree_node*, %union.tree_node** %context2006, align 8, !dbg !12332
  %cmp2007 = icmp eq %union.tree_node* %272, null, !dbg !12332
  br i1 %cmp2007, label %do.body2019, label %if.then2009, !dbg !12335

if.then2009:                                      ; preds = %do.body2000
  %273 = bitcast %union.tree_node* %272 to i8*, !dbg !12335
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %273) #7, !dbg !12332
  br label %do.body2019, !dbg !12332

do.body2019:                                      ; preds = %do.body2000, %if.then2009
  %size2024 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12336
  %274 = load %union.tree_node*, %union.tree_node** %size2024, align 8, !dbg !12336
  %cmp2025 = icmp eq %union.tree_node* %274, null, !dbg !12336
  br i1 %cmp2025, label %do.body2036, label %if.then2027, !dbg !12339

if.then2027:                                      ; preds = %do.body2019
  %275 = bitcast %union.tree_node* %274 to i8*, !dbg !12339
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %275) #7, !dbg !12336
  br label %do.body2036, !dbg !12336

do.body2036:                                      ; preds = %do.body2019, %if.then2027
  %size_unit2041 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12340
  %276 = load %union.tree_node*, %union.tree_node** %size_unit2041, align 8, !dbg !12340
  %cmp2042 = icmp eq %union.tree_node* %276, null, !dbg !12340
  br i1 %cmp2042, label %do.body2053, label %if.then2044, !dbg !12343

if.then2044:                                      ; preds = %do.body2036
  %277 = bitcast %union.tree_node* %276 to i8*, !dbg !12343
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %277) #7, !dbg !12340
  br label %do.body2053, !dbg !12340

do.body2053:                                      ; preds = %do.body2036, %if.then2044
  %initial2058 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12344
  %278 = load %union.tree_node*, %union.tree_node** %initial2058, align 8, !dbg !12344
  %cmp2059 = icmp eq %union.tree_node* %278, null, !dbg !12344
  br i1 %cmp2059, label %do.body2070, label %if.then2061, !dbg !12347

if.then2061:                                      ; preds = %do.body2053
  %279 = bitcast %union.tree_node* %278 to i8*, !dbg !12347
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %279) #7, !dbg !12344
  br label %do.body2070, !dbg !12344

do.body2070:                                      ; preds = %do.body2053, %if.then2061
  %attributes2075 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12348
  %280 = load %union.tree_node*, %union.tree_node** %attributes2075, align 8, !dbg !12348
  %cmp2076 = icmp eq %union.tree_node* %280, null, !dbg !12348
  br i1 %cmp2076, label %do.body2087, label %if.then2078, !dbg !12351

if.then2078:                                      ; preds = %do.body2070
  %281 = bitcast %union.tree_node* %280 to i8*, !dbg !12351
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %281) #7, !dbg !12348
  br label %do.body2087, !dbg !12348

do.body2087:                                      ; preds = %do.body2070, %if.then2078
  %abstract_origin2092 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12352
  %282 = load %union.tree_node*, %union.tree_node** %abstract_origin2092, align 8, !dbg !12352
  %cmp2093 = icmp eq %union.tree_node* %282, null, !dbg !12352
  br i1 %cmp2093, label %do.body2104, label %if.then2095, !dbg !12355

if.then2095:                                      ; preds = %do.body2087
  %283 = bitcast %union.tree_node* %282 to i8*, !dbg !12355
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %283) #7, !dbg !12352
  br label %do.body2104, !dbg !12352

do.body2104:                                      ; preds = %do.body2087, %if.then2095
  %lang_specific2109 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12356
  %284 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2109, align 8, !dbg !12356
  %cmp2110 = icmp eq %struct.lang_decl* %284, null, !dbg !12356
  br i1 %cmp2110, label %do.body2121, label %if.then2112, !dbg !12359

if.then2112:                                      ; preds = %do.body2104
  %285 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %284, i64 0, i32 0, !dbg !12359
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %285) #7, !dbg !12356
  br label %do.body2121, !dbg !12356

do.body2121:                                      ; preds = %do.body2104, %if.then2112
  %rtl2125 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12360
  %286 = load %struct.rtx_def*, %struct.rtx_def** %rtl2125, align 8, !dbg !12360
  %cmp2126 = icmp eq %struct.rtx_def* %286, null, !dbg !12360
  br i1 %cmp2126, label %sw.epilog4435, label %if.then2128, !dbg !12363

if.then2128:                                      ; preds = %do.body2121
  %287 = bitcast %struct.rtx_def* %286 to i8*, !dbg !12363
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %287) #6, !dbg !12360
  br label %sw.epilog4435, !dbg !12360

do.body2137:                                      ; preds = %sw.bb
  %chain2143 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12364
  %288 = load %union.tree_node*, %union.tree_node** %chain2143, align 8, !dbg !12364
  %cmp2144 = icmp eq %union.tree_node* %288, null, !dbg !12364
  br i1 %cmp2144, label %do.body2157, label %if.then2146, !dbg !12367

if.then2146:                                      ; preds = %do.body2137
  %289 = bitcast %union.tree_node* %288 to i8*, !dbg !12367
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %289) #7, !dbg !12364
  br label %do.body2157, !dbg !12364

do.body2157:                                      ; preds = %do.body2137, %if.then2146
  %type2164 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12368
  %290 = load %union.tree_node*, %union.tree_node** %type2164, align 8, !dbg !12368
  %cmp2165 = icmp eq %union.tree_node* %290, null, !dbg !12368
  br i1 %cmp2165, label %do.body2178, label %if.then2167, !dbg !12371

if.then2167:                                      ; preds = %do.body2157
  %291 = bitcast %union.tree_node* %290 to i8*, !dbg !12371
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %291) #7, !dbg !12368
  br label %do.body2178, !dbg !12368

do.body2178:                                      ; preds = %do.body2157, %if.then2167
  %name2184 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12372
  %292 = load %union.tree_node*, %union.tree_node** %name2184, align 8, !dbg !12372
  %cmp2185 = icmp eq %union.tree_node* %292, null, !dbg !12372
  br i1 %cmp2185, label %do.body2197, label %if.then2187, !dbg !12375

if.then2187:                                      ; preds = %do.body2178
  %293 = bitcast %union.tree_node* %292 to i8*, !dbg !12375
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %293) #7, !dbg !12372
  br label %do.body2197, !dbg !12372

do.body2197:                                      ; preds = %do.body2178, %if.then2187
  %context2203 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12376
  %294 = load %union.tree_node*, %union.tree_node** %context2203, align 8, !dbg !12376
  %cmp2204 = icmp eq %union.tree_node* %294, null, !dbg !12376
  br i1 %cmp2204, label %do.body2216, label %if.then2206, !dbg !12379

if.then2206:                                      ; preds = %do.body2197
  %295 = bitcast %union.tree_node* %294 to i8*, !dbg !12379
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %295) #7, !dbg !12376
  br label %do.body2216, !dbg !12376

do.body2216:                                      ; preds = %do.body2197, %if.then2206
  %size2221 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12380
  %296 = load %union.tree_node*, %union.tree_node** %size2221, align 8, !dbg !12380
  %cmp2222 = icmp eq %union.tree_node* %296, null, !dbg !12380
  br i1 %cmp2222, label %do.body2233, label %if.then2224, !dbg !12383

if.then2224:                                      ; preds = %do.body2216
  %297 = bitcast %union.tree_node* %296 to i8*, !dbg !12383
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %297) #7, !dbg !12380
  br label %do.body2233, !dbg !12380

do.body2233:                                      ; preds = %do.body2216, %if.then2224
  %size_unit2238 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12384
  %298 = load %union.tree_node*, %union.tree_node** %size_unit2238, align 8, !dbg !12384
  %cmp2239 = icmp eq %union.tree_node* %298, null, !dbg !12384
  br i1 %cmp2239, label %do.body2250, label %if.then2241, !dbg !12387

if.then2241:                                      ; preds = %do.body2233
  %299 = bitcast %union.tree_node* %298 to i8*, !dbg !12387
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %299) #7, !dbg !12384
  br label %do.body2250, !dbg !12384

do.body2250:                                      ; preds = %do.body2233, %if.then2241
  %initial2255 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12388
  %300 = load %union.tree_node*, %union.tree_node** %initial2255, align 8, !dbg !12388
  %cmp2256 = icmp eq %union.tree_node* %300, null, !dbg !12388
  br i1 %cmp2256, label %do.body2267, label %if.then2258, !dbg !12391

if.then2258:                                      ; preds = %do.body2250
  %301 = bitcast %union.tree_node* %300 to i8*, !dbg !12391
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %301) #7, !dbg !12388
  br label %do.body2267, !dbg !12388

do.body2267:                                      ; preds = %do.body2250, %if.then2258
  %attributes2272 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12392
  %302 = load %union.tree_node*, %union.tree_node** %attributes2272, align 8, !dbg !12392
  %cmp2273 = icmp eq %union.tree_node* %302, null, !dbg !12392
  br i1 %cmp2273, label %do.body2284, label %if.then2275, !dbg !12395

if.then2275:                                      ; preds = %do.body2267
  %303 = bitcast %union.tree_node* %302 to i8*, !dbg !12395
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %303) #7, !dbg !12392
  br label %do.body2284, !dbg !12392

do.body2284:                                      ; preds = %do.body2267, %if.then2275
  %abstract_origin2289 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12396
  %304 = load %union.tree_node*, %union.tree_node** %abstract_origin2289, align 8, !dbg !12396
  %cmp2290 = icmp eq %union.tree_node* %304, null, !dbg !12396
  br i1 %cmp2290, label %do.body2301, label %if.then2292, !dbg !12399

if.then2292:                                      ; preds = %do.body2284
  %305 = bitcast %union.tree_node* %304 to i8*, !dbg !12399
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %305) #7, !dbg !12396
  br label %do.body2301, !dbg !12396

do.body2301:                                      ; preds = %do.body2284, %if.then2292
  %lang_specific2306 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12400
  %306 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2306, align 8, !dbg !12400
  %cmp2307 = icmp eq %struct.lang_decl* %306, null, !dbg !12400
  br i1 %cmp2307, label %do.body2318, label %if.then2309, !dbg !12403

if.then2309:                                      ; preds = %do.body2301
  %307 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %306, i64 0, i32 0, !dbg !12403
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %307) #7, !dbg !12400
  br label %do.body2318, !dbg !12400

do.body2318:                                      ; preds = %do.body2301, %if.then2309
  %rtl2322 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12404
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtl2322, align 8, !dbg !12404
  %cmp2323 = icmp eq %struct.rtx_def* %308, null, !dbg !12404
  br i1 %cmp2323, label %do.body2333, label %if.then2325, !dbg !12407

if.then2325:                                      ; preds = %do.body2318
  %309 = bitcast %struct.rtx_def* %308 to i8*, !dbg !12407
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %309) #6, !dbg !12404
  br label %do.body2333, !dbg !12404

do.body2333:                                      ; preds = %do.body2318, %if.then2325
  %ann2336 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12408
  %310 = bitcast %union.tree_node** %ann2336 to %struct.var_ann_d**, !dbg !12408
  %311 = load %struct.var_ann_d*, %struct.var_ann_d** %310, align 8, !dbg !12408
  %cmp2337 = icmp eq %struct.var_ann_d* %311, null, !dbg !12408
  br i1 %cmp2337, label %sw.epilog4435, label %if.then2339, !dbg !12411

if.then2339:                                      ; preds = %do.body2333
  %312 = bitcast %struct.var_ann_d* %311 to i8*, !dbg !12411
  tail call void @gt_ggc_mx_var_ann_d(i8* nonnull %312) #6, !dbg !12408
  br label %sw.epilog4435, !dbg !12408

do.body2347:                                      ; preds = %sw.bb
  %chain2353 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12412
  %313 = load %union.tree_node*, %union.tree_node** %chain2353, align 8, !dbg !12412
  %cmp2354 = icmp eq %union.tree_node* %313, null, !dbg !12412
  br i1 %cmp2354, label %do.body2367, label %if.then2356, !dbg !12415

if.then2356:                                      ; preds = %do.body2347
  %314 = bitcast %union.tree_node* %313 to i8*, !dbg !12415
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %314) #7, !dbg !12412
  br label %do.body2367, !dbg !12412

do.body2367:                                      ; preds = %do.body2347, %if.then2356
  %type2374 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12416
  %315 = load %union.tree_node*, %union.tree_node** %type2374, align 8, !dbg !12416
  %cmp2375 = icmp eq %union.tree_node* %315, null, !dbg !12416
  br i1 %cmp2375, label %do.body2388, label %if.then2377, !dbg !12419

if.then2377:                                      ; preds = %do.body2367
  %316 = bitcast %union.tree_node* %315 to i8*, !dbg !12419
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %316) #7, !dbg !12416
  br label %do.body2388, !dbg !12416

do.body2388:                                      ; preds = %do.body2367, %if.then2377
  %name2394 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12420
  %317 = load %union.tree_node*, %union.tree_node** %name2394, align 8, !dbg !12420
  %cmp2395 = icmp eq %union.tree_node* %317, null, !dbg !12420
  br i1 %cmp2395, label %do.body2407, label %if.then2397, !dbg !12423

if.then2397:                                      ; preds = %do.body2388
  %318 = bitcast %union.tree_node* %317 to i8*, !dbg !12423
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %318) #7, !dbg !12420
  br label %do.body2407, !dbg !12420

do.body2407:                                      ; preds = %do.body2388, %if.then2397
  %context2413 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12424
  %319 = load %union.tree_node*, %union.tree_node** %context2413, align 8, !dbg !12424
  %cmp2414 = icmp eq %union.tree_node* %319, null, !dbg !12424
  br i1 %cmp2414, label %do.body2426, label %if.then2416, !dbg !12427

if.then2416:                                      ; preds = %do.body2407
  %320 = bitcast %union.tree_node* %319 to i8*, !dbg !12427
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %320) #7, !dbg !12424
  br label %do.body2426, !dbg !12424

do.body2426:                                      ; preds = %do.body2407, %if.then2416
  %size2431 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12428
  %321 = load %union.tree_node*, %union.tree_node** %size2431, align 8, !dbg !12428
  %cmp2432 = icmp eq %union.tree_node* %321, null, !dbg !12428
  br i1 %cmp2432, label %do.body2443, label %if.then2434, !dbg !12431

if.then2434:                                      ; preds = %do.body2426
  %322 = bitcast %union.tree_node* %321 to i8*, !dbg !12431
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %322) #7, !dbg !12428
  br label %do.body2443, !dbg !12428

do.body2443:                                      ; preds = %do.body2426, %if.then2434
  %size_unit2448 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12432
  %323 = load %union.tree_node*, %union.tree_node** %size_unit2448, align 8, !dbg !12432
  %cmp2449 = icmp eq %union.tree_node* %323, null, !dbg !12432
  br i1 %cmp2449, label %do.body2460, label %if.then2451, !dbg !12435

if.then2451:                                      ; preds = %do.body2443
  %324 = bitcast %union.tree_node* %323 to i8*, !dbg !12435
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %324) #7, !dbg !12432
  br label %do.body2460, !dbg !12432

do.body2460:                                      ; preds = %do.body2443, %if.then2451
  %initial2465 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12436
  %325 = load %union.tree_node*, %union.tree_node** %initial2465, align 8, !dbg !12436
  %cmp2466 = icmp eq %union.tree_node* %325, null, !dbg !12436
  br i1 %cmp2466, label %do.body2477, label %if.then2468, !dbg !12439

if.then2468:                                      ; preds = %do.body2460
  %326 = bitcast %union.tree_node* %325 to i8*, !dbg !12439
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %326) #7, !dbg !12436
  br label %do.body2477, !dbg !12436

do.body2477:                                      ; preds = %do.body2460, %if.then2468
  %attributes2482 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12440
  %327 = load %union.tree_node*, %union.tree_node** %attributes2482, align 8, !dbg !12440
  %cmp2483 = icmp eq %union.tree_node* %327, null, !dbg !12440
  br i1 %cmp2483, label %do.body2494, label %if.then2485, !dbg !12443

if.then2485:                                      ; preds = %do.body2477
  %328 = bitcast %union.tree_node* %327 to i8*, !dbg !12443
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %328) #7, !dbg !12440
  br label %do.body2494, !dbg !12440

do.body2494:                                      ; preds = %do.body2477, %if.then2485
  %abstract_origin2499 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12444
  %329 = load %union.tree_node*, %union.tree_node** %abstract_origin2499, align 8, !dbg !12444
  %cmp2500 = icmp eq %union.tree_node* %329, null, !dbg !12444
  br i1 %cmp2500, label %do.body2511, label %if.then2502, !dbg !12447

if.then2502:                                      ; preds = %do.body2494
  %330 = bitcast %union.tree_node* %329 to i8*, !dbg !12447
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %330) #7, !dbg !12444
  br label %do.body2511, !dbg !12444

do.body2511:                                      ; preds = %do.body2494, %if.then2502
  %lang_specific2516 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12448
  %331 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2516, align 8, !dbg !12448
  %cmp2517 = icmp eq %struct.lang_decl* %331, null, !dbg !12448
  br i1 %cmp2517, label %do.body2528, label %if.then2519, !dbg !12451

if.then2519:                                      ; preds = %do.body2511
  %332 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %331, i64 0, i32 0, !dbg !12451
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %332) #7, !dbg !12448
  br label %do.body2528, !dbg !12448

do.body2528:                                      ; preds = %do.body2511, %if.then2519
  %rtl2532 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12452
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtl2532, align 8, !dbg !12452
  %cmp2533 = icmp eq %struct.rtx_def* %333, null, !dbg !12452
  br i1 %cmp2533, label %sw.epilog4435, label %if.then2535, !dbg !12455

if.then2535:                                      ; preds = %do.body2528
  %334 = bitcast %struct.rtx_def* %333 to i8*, !dbg !12455
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %334) #6, !dbg !12452
  br label %sw.epilog4435, !dbg !12452

do.body2544:                                      ; preds = %sw.bb
  %chain2552 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12456
  %335 = load %union.tree_node*, %union.tree_node** %chain2552, align 8, !dbg !12456
  %cmp2553 = icmp eq %union.tree_node* %335, null, !dbg !12456
  br i1 %cmp2553, label %do.body2568, label %if.then2555, !dbg !12459

if.then2555:                                      ; preds = %do.body2544
  %336 = bitcast %union.tree_node* %335 to i8*, !dbg !12459
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %336) #7, !dbg !12456
  br label %do.body2568, !dbg !12456

do.body2568:                                      ; preds = %do.body2544, %if.then2555
  %type2577 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12460
  %337 = load %union.tree_node*, %union.tree_node** %type2577, align 8, !dbg !12460
  %cmp2578 = icmp eq %union.tree_node* %337, null, !dbg !12460
  br i1 %cmp2578, label %do.body2593, label %if.then2580, !dbg !12463

if.then2580:                                      ; preds = %do.body2568
  %338 = bitcast %union.tree_node* %337 to i8*, !dbg !12463
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %338) #7, !dbg !12460
  br label %do.body2593, !dbg !12460

do.body2593:                                      ; preds = %do.body2568, %if.then2580
  %name2601 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12464
  %339 = load %union.tree_node*, %union.tree_node** %name2601, align 8, !dbg !12464
  %cmp2602 = icmp eq %union.tree_node* %339, null, !dbg !12464
  br i1 %cmp2602, label %do.body2616, label %if.then2604, !dbg !12467

if.then2604:                                      ; preds = %do.body2593
  %340 = bitcast %union.tree_node* %339 to i8*, !dbg !12467
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %340) #7, !dbg !12464
  br label %do.body2616, !dbg !12464

do.body2616:                                      ; preds = %do.body2593, %if.then2604
  %context2624 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12468
  %341 = load %union.tree_node*, %union.tree_node** %context2624, align 8, !dbg !12468
  %cmp2625 = icmp eq %union.tree_node* %341, null, !dbg !12468
  br i1 %cmp2625, label %do.body2639, label %if.then2627, !dbg !12471

if.then2627:                                      ; preds = %do.body2616
  %342 = bitcast %union.tree_node* %341 to i8*, !dbg !12471
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %342) #7, !dbg !12468
  br label %do.body2639, !dbg !12468

do.body2639:                                      ; preds = %do.body2616, %if.then2627
  %size2646 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12472
  %343 = load %union.tree_node*, %union.tree_node** %size2646, align 8, !dbg !12472
  %cmp2647 = icmp eq %union.tree_node* %343, null, !dbg !12472
  br i1 %cmp2647, label %do.body2660, label %if.then2649, !dbg !12475

if.then2649:                                      ; preds = %do.body2639
  %344 = bitcast %union.tree_node* %343 to i8*, !dbg !12475
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %344) #7, !dbg !12472
  br label %do.body2660, !dbg !12472

do.body2660:                                      ; preds = %do.body2639, %if.then2649
  %size_unit2667 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12476
  %345 = load %union.tree_node*, %union.tree_node** %size_unit2667, align 8, !dbg !12476
  %cmp2668 = icmp eq %union.tree_node* %345, null, !dbg !12476
  br i1 %cmp2668, label %do.body2681, label %if.then2670, !dbg !12479

if.then2670:                                      ; preds = %do.body2660
  %346 = bitcast %union.tree_node* %345 to i8*, !dbg !12479
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %346) #7, !dbg !12476
  br label %do.body2681, !dbg !12476

do.body2681:                                      ; preds = %do.body2660, %if.then2670
  %initial2688 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12480
  %347 = load %union.tree_node*, %union.tree_node** %initial2688, align 8, !dbg !12480
  %cmp2689 = icmp eq %union.tree_node* %347, null, !dbg !12480
  br i1 %cmp2689, label %do.body2702, label %if.then2691, !dbg !12483

if.then2691:                                      ; preds = %do.body2681
  %348 = bitcast %union.tree_node* %347 to i8*, !dbg !12483
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %348) #7, !dbg !12480
  br label %do.body2702, !dbg !12480

do.body2702:                                      ; preds = %do.body2681, %if.then2691
  %attributes2709 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12484
  %349 = load %union.tree_node*, %union.tree_node** %attributes2709, align 8, !dbg !12484
  %cmp2710 = icmp eq %union.tree_node* %349, null, !dbg !12484
  br i1 %cmp2710, label %do.body2723, label %if.then2712, !dbg !12487

if.then2712:                                      ; preds = %do.body2702
  %350 = bitcast %union.tree_node* %349 to i8*, !dbg !12487
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %350) #7, !dbg !12484
  br label %do.body2723, !dbg !12484

do.body2723:                                      ; preds = %do.body2702, %if.then2712
  %abstract_origin2730 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12488
  %351 = load %union.tree_node*, %union.tree_node** %abstract_origin2730, align 8, !dbg !12488
  %cmp2731 = icmp eq %union.tree_node* %351, null, !dbg !12488
  br i1 %cmp2731, label %do.body2744, label %if.then2733, !dbg !12491

if.then2733:                                      ; preds = %do.body2723
  %352 = bitcast %union.tree_node* %351 to i8*, !dbg !12491
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %352) #7, !dbg !12488
  br label %do.body2744, !dbg !12488

do.body2744:                                      ; preds = %do.body2723, %if.then2733
  %lang_specific2751 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12492
  %353 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2751, align 8, !dbg !12492
  %cmp2752 = icmp eq %struct.lang_decl* %353, null, !dbg !12492
  br i1 %cmp2752, label %do.body2765, label %if.then2754, !dbg !12495

if.then2754:                                      ; preds = %do.body2744
  %354 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %353, i64 0, i32 0, !dbg !12495
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %354) #7, !dbg !12492
  br label %do.body2765, !dbg !12492

do.body2765:                                      ; preds = %do.body2744, %if.then2754
  %rtl2771 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12496
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rtl2771, align 8, !dbg !12496
  %cmp2772 = icmp eq %struct.rtx_def* %355, null, !dbg !12496
  br i1 %cmp2772, label %do.body2784, label %if.then2774, !dbg !12499

if.then2774:                                      ; preds = %do.body2765
  %356 = bitcast %struct.rtx_def* %355 to i8*, !dbg !12499
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %356) #6, !dbg !12496
  br label %do.body2784, !dbg !12496

do.body2784:                                      ; preds = %do.body2765, %if.then2774
  %assembler_name2789 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12500
  %357 = load %union.tree_node*, %union.tree_node** %assembler_name2789, align 8, !dbg !12500
  %cmp2790 = icmp eq %union.tree_node* %357, null, !dbg !12500
  br i1 %cmp2790, label %do.body2801, label %if.then2792, !dbg !12503

if.then2792:                                      ; preds = %do.body2784
  %358 = bitcast %union.tree_node* %357 to i8*, !dbg !12503
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %358) #7, !dbg !12500
  br label %do.body2801, !dbg !12500

do.body2801:                                      ; preds = %do.body2784, %if.then2792
  %section_name2806 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12504
  %359 = load %union.tree_node*, %union.tree_node** %section_name2806, align 8, !dbg !12504
  %cmp2807 = icmp eq %union.tree_node* %359, null, !dbg !12504
  br i1 %cmp2807, label %do.body2818, label %if.then2809, !dbg !12507

if.then2809:                                      ; preds = %do.body2801
  %360 = bitcast %union.tree_node* %359 to i8*, !dbg !12507
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %360) #7, !dbg !12504
  br label %do.body2818, !dbg !12504

do.body2818:                                      ; preds = %do.body2801, %if.then2809
  %comdat_group2823 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12508
  %361 = load %union.tree_node*, %union.tree_node** %comdat_group2823, align 8, !dbg !12508
  %cmp2824 = icmp eq %union.tree_node* %361, null, !dbg !12508
  br i1 %cmp2824, label %do.body2835, label %if.then2826, !dbg !12511

if.then2826:                                      ; preds = %do.body2818
  %362 = bitcast %union.tree_node* %361 to i8*, !dbg !12511
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %362) #7, !dbg !12508
  br label %do.body2835, !dbg !12508

do.body2835:                                      ; preds = %do.body2818, %if.then2826
  %saved_tree2839 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !12512
  %363 = load %union.tree_node*, %union.tree_node** %saved_tree2839, align 8, !dbg !12512
  %cmp2840 = icmp eq %union.tree_node* %363, null, !dbg !12512
  br i1 %cmp2840, label %do.body2850, label %if.then2842, !dbg !12515

if.then2842:                                      ; preds = %do.body2835
  %364 = bitcast %union.tree_node* %363 to i8*, !dbg !12515
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %364) #7, !dbg !12512
  br label %do.body2850, !dbg !12512

do.body2850:                                      ; preds = %do.body2835, %if.then2842
  %arguments2854 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12516
  %365 = load %union.tree_node*, %union.tree_node** %arguments2854, align 8, !dbg !12516
  %cmp2855 = icmp eq %union.tree_node* %365, null, !dbg !12516
  br i1 %cmp2855, label %do.body2865, label %if.then2857, !dbg !12519

if.then2857:                                      ; preds = %do.body2850
  %366 = bitcast %union.tree_node* %365 to i8*, !dbg !12519
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %366) #7, !dbg !12516
  br label %do.body2865, !dbg !12516

do.body2865:                                      ; preds = %do.body2850, %if.then2857
  %result2869 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12520
  %367 = load %union.tree_node*, %union.tree_node** %result2869, align 8, !dbg !12520
  %cmp2870 = icmp eq %union.tree_node* %367, null, !dbg !12520
  br i1 %cmp2870, label %do.body2880, label %if.then2872, !dbg !12523

if.then2872:                                      ; preds = %do.body2865
  %368 = bitcast %union.tree_node* %367 to i8*, !dbg !12523
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %368) #7, !dbg !12520
  br label %do.body2880, !dbg !12520

do.body2880:                                      ; preds = %do.body2865, %if.then2872
  %vindex2884 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !12524
  %369 = load %union.tree_node*, %union.tree_node** %vindex2884, align 8, !dbg !12524
  %cmp2885 = icmp eq %union.tree_node* %369, null, !dbg !12524
  br i1 %cmp2885, label %sw.epilog4435, label %if.then2887, !dbg !12527

if.then2887:                                      ; preds = %do.body2880
  %370 = bitcast %union.tree_node* %369 to i8*, !dbg !12527
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %370) #7, !dbg !12524
  br label %sw.epilog4435, !dbg !12524

do.body2896:                                      ; preds = %sw.bb
  %chain2904 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12528
  %371 = load %union.tree_node*, %union.tree_node** %chain2904, align 8, !dbg !12528
  %cmp2905 = icmp eq %union.tree_node* %371, null, !dbg !12528
  br i1 %cmp2905, label %do.body2920, label %if.then2907, !dbg !12531

if.then2907:                                      ; preds = %do.body2896
  %372 = bitcast %union.tree_node* %371 to i8*, !dbg !12531
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %372) #7, !dbg !12528
  br label %do.body2920, !dbg !12528

do.body2920:                                      ; preds = %do.body2896, %if.then2907
  %type2929 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12532
  %373 = load %union.tree_node*, %union.tree_node** %type2929, align 8, !dbg !12532
  %cmp2930 = icmp eq %union.tree_node* %373, null, !dbg !12532
  br i1 %cmp2930, label %do.body2945, label %if.then2932, !dbg !12535

if.then2932:                                      ; preds = %do.body2920
  %374 = bitcast %union.tree_node* %373 to i8*, !dbg !12535
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %374) #7, !dbg !12532
  br label %do.body2945, !dbg !12532

do.body2945:                                      ; preds = %do.body2920, %if.then2932
  %name2953 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12536
  %375 = load %union.tree_node*, %union.tree_node** %name2953, align 8, !dbg !12536
  %cmp2954 = icmp eq %union.tree_node* %375, null, !dbg !12536
  br i1 %cmp2954, label %do.body2968, label %if.then2956, !dbg !12539

if.then2956:                                      ; preds = %do.body2945
  %376 = bitcast %union.tree_node* %375 to i8*, !dbg !12539
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %376) #7, !dbg !12536
  br label %do.body2968, !dbg !12536

do.body2968:                                      ; preds = %do.body2945, %if.then2956
  %context2976 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12540
  %377 = load %union.tree_node*, %union.tree_node** %context2976, align 8, !dbg !12540
  %cmp2977 = icmp eq %union.tree_node* %377, null, !dbg !12540
  br i1 %cmp2977, label %do.body2991, label %if.then2979, !dbg !12543

if.then2979:                                      ; preds = %do.body2968
  %378 = bitcast %union.tree_node* %377 to i8*, !dbg !12543
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %378) #7, !dbg !12540
  br label %do.body2991, !dbg !12540

do.body2991:                                      ; preds = %do.body2968, %if.then2979
  %size2998 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12544
  %379 = load %union.tree_node*, %union.tree_node** %size2998, align 8, !dbg !12544
  %cmp2999 = icmp eq %union.tree_node* %379, null, !dbg !12544
  br i1 %cmp2999, label %do.body3012, label %if.then3001, !dbg !12547

if.then3001:                                      ; preds = %do.body2991
  %380 = bitcast %union.tree_node* %379 to i8*, !dbg !12547
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %380) #7, !dbg !12544
  br label %do.body3012, !dbg !12544

do.body3012:                                      ; preds = %do.body2991, %if.then3001
  %size_unit3019 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12548
  %381 = load %union.tree_node*, %union.tree_node** %size_unit3019, align 8, !dbg !12548
  %cmp3020 = icmp eq %union.tree_node* %381, null, !dbg !12548
  br i1 %cmp3020, label %do.body3033, label %if.then3022, !dbg !12551

if.then3022:                                      ; preds = %do.body3012
  %382 = bitcast %union.tree_node* %381 to i8*, !dbg !12551
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %382) #7, !dbg !12548
  br label %do.body3033, !dbg !12548

do.body3033:                                      ; preds = %do.body3012, %if.then3022
  %initial3040 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12552
  %383 = load %union.tree_node*, %union.tree_node** %initial3040, align 8, !dbg !12552
  %cmp3041 = icmp eq %union.tree_node* %383, null, !dbg !12552
  br i1 %cmp3041, label %do.body3054, label %if.then3043, !dbg !12555

if.then3043:                                      ; preds = %do.body3033
  %384 = bitcast %union.tree_node* %383 to i8*, !dbg !12555
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %384) #7, !dbg !12552
  br label %do.body3054, !dbg !12552

do.body3054:                                      ; preds = %do.body3033, %if.then3043
  %attributes3061 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12556
  %385 = load %union.tree_node*, %union.tree_node** %attributes3061, align 8, !dbg !12556
  %cmp3062 = icmp eq %union.tree_node* %385, null, !dbg !12556
  br i1 %cmp3062, label %do.body3075, label %if.then3064, !dbg !12559

if.then3064:                                      ; preds = %do.body3054
  %386 = bitcast %union.tree_node* %385 to i8*, !dbg !12559
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %386) #7, !dbg !12556
  br label %do.body3075, !dbg !12556

do.body3075:                                      ; preds = %do.body3054, %if.then3064
  %abstract_origin3082 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12560
  %387 = load %union.tree_node*, %union.tree_node** %abstract_origin3082, align 8, !dbg !12560
  %cmp3083 = icmp eq %union.tree_node* %387, null, !dbg !12560
  br i1 %cmp3083, label %do.body3096, label %if.then3085, !dbg !12563

if.then3085:                                      ; preds = %do.body3075
  %388 = bitcast %union.tree_node* %387 to i8*, !dbg !12563
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %388) #7, !dbg !12560
  br label %do.body3096, !dbg !12560

do.body3096:                                      ; preds = %do.body3075, %if.then3085
  %lang_specific3103 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12564
  %389 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific3103, align 8, !dbg !12564
  %cmp3104 = icmp eq %struct.lang_decl* %389, null, !dbg !12564
  br i1 %cmp3104, label %do.body3117, label %if.then3106, !dbg !12567

if.then3106:                                      ; preds = %do.body3096
  %390 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %389, i64 0, i32 0, !dbg !12567
  tail call void @gt_ggc_mx_lang_decl(i8* nonnull %390) #7, !dbg !12564
  br label %do.body3117, !dbg !12564

do.body3117:                                      ; preds = %do.body3096, %if.then3106
  %rtl3123 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12568
  %391 = load %struct.rtx_def*, %struct.rtx_def** %rtl3123, align 8, !dbg !12568
  %cmp3124 = icmp eq %struct.rtx_def* %391, null, !dbg !12568
  br i1 %cmp3124, label %do.body3136, label %if.then3126, !dbg !12571

if.then3126:                                      ; preds = %do.body3117
  %392 = bitcast %struct.rtx_def* %391 to i8*, !dbg !12571
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %392) #6, !dbg !12568
  br label %do.body3136, !dbg !12568

do.body3136:                                      ; preds = %do.body3117, %if.then3126
  %assembler_name3141 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12572
  %393 = load %union.tree_node*, %union.tree_node** %assembler_name3141, align 8, !dbg !12572
  %cmp3142 = icmp eq %union.tree_node* %393, null, !dbg !12572
  br i1 %cmp3142, label %do.body3153, label %if.then3144, !dbg !12575

if.then3144:                                      ; preds = %do.body3136
  %394 = bitcast %union.tree_node* %393 to i8*, !dbg !12575
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %394) #7, !dbg !12572
  br label %do.body3153, !dbg !12572

do.body3153:                                      ; preds = %do.body3136, %if.then3144
  %section_name3158 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12576
  %395 = load %union.tree_node*, %union.tree_node** %section_name3158, align 8, !dbg !12576
  %cmp3159 = icmp eq %union.tree_node* %395, null, !dbg !12576
  br i1 %cmp3159, label %do.body3170, label %if.then3161, !dbg !12579

if.then3161:                                      ; preds = %do.body3153
  %396 = bitcast %union.tree_node* %395 to i8*, !dbg !12579
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %396) #7, !dbg !12576
  br label %do.body3170, !dbg !12576

do.body3170:                                      ; preds = %do.body3153, %if.then3161
  %comdat_group3175 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12580
  %397 = load %union.tree_node*, %union.tree_node** %comdat_group3175, align 8, !dbg !12580
  %cmp3176 = icmp eq %union.tree_node* %397, null, !dbg !12580
  br i1 %cmp3176, label %do.body3187, label %if.then3178, !dbg !12583

if.then3178:                                      ; preds = %do.body3170
  %398 = bitcast %union.tree_node* %397 to i8*, !dbg !12583
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %398) #7, !dbg !12580
  br label %do.body3187, !dbg !12580

do.body3187:                                      ; preds = %do.body3170, %if.then3178
  %saved_tree3191 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !12584
  %399 = load %union.tree_node*, %union.tree_node** %saved_tree3191, align 8, !dbg !12584
  %cmp3192 = icmp eq %union.tree_node* %399, null, !dbg !12584
  br i1 %cmp3192, label %do.body3202, label %if.then3194, !dbg !12587

if.then3194:                                      ; preds = %do.body3187
  %400 = bitcast %union.tree_node* %399 to i8*, !dbg !12587
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %400) #7, !dbg !12584
  br label %do.body3202, !dbg !12584

do.body3202:                                      ; preds = %do.body3187, %if.then3194
  %arguments3206 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12588
  %401 = load %union.tree_node*, %union.tree_node** %arguments3206, align 8, !dbg !12588
  %cmp3207 = icmp eq %union.tree_node* %401, null, !dbg !12588
  br i1 %cmp3207, label %do.body3217, label %if.then3209, !dbg !12591

if.then3209:                                      ; preds = %do.body3202
  %402 = bitcast %union.tree_node* %401 to i8*, !dbg !12591
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %402) #7, !dbg !12588
  br label %do.body3217, !dbg !12588

do.body3217:                                      ; preds = %do.body3202, %if.then3209
  %result3221 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12592
  %403 = load %union.tree_node*, %union.tree_node** %result3221, align 8, !dbg !12592
  %cmp3222 = icmp eq %union.tree_node* %403, null, !dbg !12592
  br i1 %cmp3222, label %do.body3232, label %if.then3224, !dbg !12595

if.then3224:                                      ; preds = %do.body3217
  %404 = bitcast %union.tree_node* %403 to i8*, !dbg !12595
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %404) #7, !dbg !12592
  br label %do.body3232, !dbg !12592

do.body3232:                                      ; preds = %do.body3217, %if.then3224
  %vindex3236 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !12596
  %405 = load %union.tree_node*, %union.tree_node** %vindex3236, align 8, !dbg !12596
  %cmp3237 = icmp eq %union.tree_node* %405, null, !dbg !12596
  br i1 %cmp3237, label %do.body3247, label %if.then3239, !dbg !12599

if.then3239:                                      ; preds = %do.body3232
  %406 = bitcast %union.tree_node* %405 to i8*, !dbg !12599
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %406) #7, !dbg !12596
  br label %do.body3247, !dbg !12596

do.body3247:                                      ; preds = %do.body3232, %if.then3239
  %f = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 1, !dbg !12600
  %407 = load %struct.function*, %struct.function** %f, align 8, !dbg !12600
  %cmp3250 = icmp eq %struct.function* %407, null, !dbg !12600
  br i1 %cmp3250, label %do.body3259, label %if.then3252, !dbg !12603

if.then3252:                                      ; preds = %do.body3247
  %408 = bitcast %struct.function* %407 to i8*, !dbg !12603
  tail call void @gt_ggc_mx_function(i8* nonnull %408) #6, !dbg !12600
  br label %do.body3259, !dbg !12600

do.body3259:                                      ; preds = %do.body3247, %if.then3252
  %personality = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 2, !dbg !12604
  %409 = load %union.tree_node*, %union.tree_node** %personality, align 8, !dbg !12604
  %cmp3262 = icmp eq %union.tree_node* %409, null, !dbg !12604
  br i1 %cmp3262, label %do.body3271, label %if.then3264, !dbg !12607

if.then3264:                                      ; preds = %do.body3259
  %410 = bitcast %union.tree_node* %409 to i8*, !dbg !12607
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %410) #7, !dbg !12604
  br label %do.body3271, !dbg !12604

do.body3271:                                      ; preds = %do.body3259, %if.then3264
  %function_specific_target = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 3, !dbg !12608
  %411 = load %union.tree_node*, %union.tree_node** %function_specific_target, align 8, !dbg !12608
  %cmp3274 = icmp eq %union.tree_node* %411, null, !dbg !12608
  br i1 %cmp3274, label %do.body3283, label %if.then3276, !dbg !12611

if.then3276:                                      ; preds = %do.body3271
  %412 = bitcast %union.tree_node* %411 to i8*, !dbg !12611
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %412) #7, !dbg !12608
  br label %do.body3283, !dbg !12608

do.body3283:                                      ; preds = %do.body3271, %if.then3276
  %function_specific_optimization = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 4, !dbg !12612
  %413 = load %union.tree_node*, %union.tree_node** %function_specific_optimization, align 8, !dbg !12612
  %cmp3286 = icmp eq %union.tree_node* %413, null, !dbg !12612
  br i1 %cmp3286, label %sw.epilog4435, label %if.then3288, !dbg !12615

if.then3288:                                      ; preds = %do.body3283
  %414 = bitcast %union.tree_node* %413 to i8*, !dbg !12615
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %414) #7, !dbg !12612
  br label %sw.epilog4435, !dbg !12612

do.body3296:                                      ; preds = %sw.bb
  %chain3300 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12616
  %415 = load %union.tree_node*, %union.tree_node** %chain3300, align 8, !dbg !12616
  %cmp3301 = icmp eq %union.tree_node* %415, null, !dbg !12616
  br i1 %cmp3301, label %do.body3311, label %if.then3303, !dbg !12619

if.then3303:                                      ; preds = %do.body3296
  %416 = bitcast %union.tree_node* %415 to i8*, !dbg !12619
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %416) #7, !dbg !12616
  br label %do.body3311, !dbg !12616

do.body3311:                                      ; preds = %do.body3296, %if.then3303
  %type3315 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12620
  %417 = load %union.tree_node*, %union.tree_node** %type3315, align 8, !dbg !12620
  %cmp3316 = icmp eq %union.tree_node* %417, null, !dbg !12620
  br i1 %cmp3316, label %do.body3326, label %if.then3318, !dbg !12623

if.then3318:                                      ; preds = %do.body3311
  %418 = bitcast %union.tree_node* %417 to i8*, !dbg !12623
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %418) #7, !dbg !12620
  br label %do.body3326, !dbg !12620

do.body3326:                                      ; preds = %do.body3311, %if.then3318
  %values = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12624
  %419 = bitcast i32* %values to %union.tree_node**, !dbg !12624
  %420 = load %union.tree_node*, %union.tree_node** %419, align 8, !dbg !12624
  %cmp3329 = icmp eq %union.tree_node* %420, null, !dbg !12624
  br i1 %cmp3329, label %do.body3338, label %if.then3331, !dbg !12627

if.then3331:                                      ; preds = %do.body3326
  %421 = bitcast %union.tree_node* %420 to i8*, !dbg !12627
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %421) #7, !dbg !12624
  br label %do.body3338, !dbg !12624

do.body3338:                                      ; preds = %do.body3326, %if.then3331
  %422 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12628
  %423 = load %union.tree_node*, %union.tree_node** %422, align 8, !dbg !12628
  %cmp3342 = icmp eq %union.tree_node* %423, null, !dbg !12628
  br i1 %cmp3342, label %do.body3351, label %if.then3344, !dbg !12631

if.then3344:                                      ; preds = %do.body3338
  %424 = bitcast %union.tree_node* %423 to i8*, !dbg !12631
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %424) #7, !dbg !12628
  br label %do.body3351, !dbg !12628

do.body3351:                                      ; preds = %do.body3338, %if.then3344
  %425 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12632
  %426 = load %union.tree_node*, %union.tree_node** %425, align 8, !dbg !12632
  %cmp3355 = icmp eq %union.tree_node* %426, null, !dbg !12632
  br i1 %cmp3355, label %do.body3364, label %if.then3357, !dbg !12635

if.then3357:                                      ; preds = %do.body3351
  %427 = bitcast %union.tree_node* %426 to i8*, !dbg !12635
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %427) #7, !dbg !12632
  br label %do.body3364, !dbg !12632

do.body3364:                                      ; preds = %do.body3351, %if.then3357
  %428 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12636
  %429 = load %union.tree_node*, %union.tree_node** %428, align 8, !dbg !12636
  %cmp3368 = icmp eq %union.tree_node* %429, null, !dbg !12636
  br i1 %cmp3368, label %do.body3377, label %if.then3370, !dbg !12639

if.then3370:                                      ; preds = %do.body3364
  %430 = bitcast %union.tree_node* %429 to i8*, !dbg !12639
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %430) #7, !dbg !12636
  br label %do.body3377, !dbg !12636

do.body3377:                                      ; preds = %do.body3364, %if.then3370
  %431 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12640
  %432 = load %union.tree_node*, %union.tree_node** %431, align 8, !dbg !12640
  %cmp3380 = icmp eq %union.tree_node* %432, null, !dbg !12640
  br i1 %cmp3380, label %do.body3389, label %if.then3382, !dbg !12643

if.then3382:                                      ; preds = %do.body3377
  %433 = bitcast %union.tree_node* %432 to i8*, !dbg !12643
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %433) #7, !dbg !12640
  br label %do.body3389, !dbg !12640

do.body3389:                                      ; preds = %do.body3377, %if.then3382
  %434 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12644
  %435 = load %union.tree_node*, %union.tree_node** %434, align 8, !dbg !12644
  %cmp3392 = icmp eq %union.tree_node* %435, null, !dbg !12644
  br i1 %cmp3392, label %do.end3400, label %if.then3394, !dbg !12647

if.then3394:                                      ; preds = %do.body3389
  %436 = bitcast %union.tree_node* %435 to i8*, !dbg !12647
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %436) #7, !dbg !12644
  br label %do.end3400, !dbg !12644

do.end3400:                                       ; preds = %do.body3389, %if.then3394
  %437 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !12648
  %cmp3401 = icmp eq %struct.gcc_debug_hooks* %437, @sdb_debug_hooks, !dbg !12649
  br i1 %cmp3401, label %cond.end3408, label %cond.false3404, !dbg !12648

cond.false3404:                                   ; preds = %do.end3400
  %cmp3405 = icmp eq %struct.gcc_debug_hooks* %437, @dwarf2_debug_hooks, !dbg !12650
  %cond3407 = select i1 %cmp3405, i32 2, i32 0, !dbg !12651
  br label %cond.end3408, !dbg !12648

cond.end3408:                                     ; preds = %do.end3400, %cond.false3404
  %cond3409 = phi i32 [ %cond3407, %cond.false3404 ], [ 1, %do.end3400 ], !dbg !12648
  switch i32 %cond3409, label %do.body3428 [
    i32 2, label %do.body3414
    i32 1, label %sw.bb3410
  ], !dbg !12652

sw.bb3410:                                        ; preds = %cond.end3408
  %symtab = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12653
  %pointer = bitcast %union.tree_node** %symtab to i8**, !dbg !12655
  %438 = load i8*, i8** %pointer, align 8, !dbg !12655
  tail call void @gt_ggc_m_S(i8* %438) #6, !dbg !12656
  br label %do.body3428, !dbg !12657

do.body3414:                                      ; preds = %cond.end3408
  %symtab3417 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12658
  %die = bitcast %union.tree_node** %symtab3417 to %struct.die_struct**, !dbg !12658
  %439 = load %struct.die_struct*, %struct.die_struct** %die, align 8, !dbg !12658
  %cmp3418 = icmp eq %struct.die_struct* %439, null, !dbg !12658
  br i1 %cmp3418, label %do.body3428, label %if.then3420, !dbg !12661

if.then3420:                                      ; preds = %do.body3414
  %440 = bitcast %struct.die_struct* %439 to i8*, !dbg !12661
  tail call void @gt_ggc_mx_die_struct(i8* nonnull %440) #6, !dbg !12658
  br label %do.body3428, !dbg !12658

do.body3428:                                      ; preds = %do.body3414, %sw.bb3410, %if.then3420, %cond.end3408
  %441 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !12662
  %442 = load %union.tree_node*, %union.tree_node** %441, align 8, !dbg !12662
  %cmp3432 = icmp eq %union.tree_node* %442, null, !dbg !12662
  br i1 %cmp3432, label %do.body3441, label %if.then3434, !dbg !12665

if.then3434:                                      ; preds = %do.body3428
  %443 = bitcast %union.tree_node* %442 to i8*, !dbg !12665
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %443) #7, !dbg !12662
  br label %do.body3441, !dbg !12662

do.body3441:                                      ; preds = %do.body3428, %if.then3434
  %minval = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12666
  %444 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !12666
  %445 = load %union.tree_node*, %union.tree_node** %444, align 8, !dbg !12666
  %cmp3444 = icmp eq %union.tree_node* %445, null, !dbg !12666
  br i1 %cmp3444, label %do.body3453, label %if.then3446, !dbg !12669

if.then3446:                                      ; preds = %do.body3441
  %446 = bitcast %union.tree_node* %445 to i8*, !dbg !12669
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %446) #7, !dbg !12666
  br label %do.body3453, !dbg !12666

do.body3453:                                      ; preds = %do.body3441, %if.then3446
  %maxval = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12670
  %447 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !12670
  %448 = load %union.tree_node*, %union.tree_node** %447, align 8, !dbg !12670
  %cmp3456 = icmp eq %union.tree_node* %448, null, !dbg !12670
  br i1 %cmp3456, label %do.body3465, label %if.then3458, !dbg !12673

if.then3458:                                      ; preds = %do.body3453
  %449 = bitcast %union.tree_node* %448 to i8*, !dbg !12673
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %449) #7, !dbg !12670
  br label %do.body3465, !dbg !12670

do.body3465:                                      ; preds = %do.body3453, %if.then3458
  %450 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12674
  %451 = load %union.tree_node*, %union.tree_node** %450, align 8, !dbg !12674
  %cmp3469 = icmp eq %union.tree_node* %451, null, !dbg !12674
  br i1 %cmp3469, label %do.body3478, label %if.then3471, !dbg !12677

if.then3471:                                      ; preds = %do.body3465
  %452 = bitcast %union.tree_node* %451 to i8*, !dbg !12677
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %452) #7, !dbg !12674
  br label %do.body3478, !dbg !12674

do.body3478:                                      ; preds = %do.body3465, %if.then3471
  %453 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12678
  %454 = load %union.tree_node*, %union.tree_node** %453, align 8, !dbg !12678
  %cmp3481 = icmp eq %union.tree_node* %454, null, !dbg !12678
  br i1 %cmp3481, label %do.body3490, label %if.then3483, !dbg !12681

if.then3483:                                      ; preds = %do.body3478
  %455 = bitcast %union.tree_node* %454 to i8*, !dbg !12681
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %455) #7, !dbg !12678
  br label %do.body3490, !dbg !12678

do.body3490:                                      ; preds = %do.body3478, %if.then3483
  %456 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12682
  %457 = load %union.tree_node*, %union.tree_node** %456, align 8, !dbg !12682
  %cmp3493 = icmp eq %union.tree_node* %457, null, !dbg !12682
  br i1 %cmp3493, label %do.body3502, label %if.then3495, !dbg !12685

if.then3495:                                      ; preds = %do.body3490
  %458 = bitcast %union.tree_node* %457 to i8*, !dbg !12685
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %458) #7, !dbg !12682
  br label %do.body3502, !dbg !12682

do.body3502:                                      ; preds = %do.body3490, %if.then3495
  %context3505 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12686
  %459 = bitcast i24* %context3505 to %union.tree_node**, !dbg !12686
  %460 = load %union.tree_node*, %union.tree_node** %459, align 8, !dbg !12686
  %cmp3506 = icmp eq %union.tree_node* %460, null, !dbg !12686
  br i1 %cmp3506, label %do.body3515, label %if.then3508, !dbg !12689

if.then3508:                                      ; preds = %do.body3502
  %461 = bitcast %union.tree_node* %460 to i8*, !dbg !12689
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %461) #7, !dbg !12686
  br label %do.body3515, !dbg !12686

do.body3515:                                      ; preds = %do.body3502, %if.then3508
  %462 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !12690
  %463 = load %union.tree_node*, %union.tree_node** %462, align 8, !dbg !12690
  %cmp3518 = icmp eq %union.tree_node* %463, null, !dbg !12690
  br i1 %cmp3518, label %do.body3527, label %if.then3520, !dbg !12693

if.then3520:                                      ; preds = %do.body3515
  %464 = bitcast %union.tree_node* %463 to i8*, !dbg !12693
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %464) #7, !dbg !12690
  br label %do.body3527, !dbg !12690

do.body3527:                                      ; preds = %do.body3515, %if.then3520
  %lang_specific3530 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12694
  %465 = bitcast %union.tree_node** %lang_specific3530 to %struct.lang_type**, !dbg !12694
  %466 = load %struct.lang_type*, %struct.lang_type** %465, align 8, !dbg !12694
  %cmp3531 = icmp eq %struct.lang_type* %466, null, !dbg !12694
  br i1 %cmp3531, label %sw.epilog4435, label %if.then3533, !dbg !12697

if.then3533:                                      ; preds = %do.body3527
  %467 = bitcast %struct.lang_type* %466 to i8*, !dbg !12697
  tail call void @gt_ggc_mx_lang_type(i8* nonnull %467) #7, !dbg !12694
  br label %sw.epilog4435, !dbg !12694

do.body3541:                                      ; preds = %sw.bb
  %chain3544 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12698
  %468 = load %union.tree_node*, %union.tree_node** %chain3544, align 8, !dbg !12698
  %cmp3545 = icmp eq %union.tree_node* %468, null, !dbg !12698
  br i1 %cmp3545, label %do.body3555, label %if.then3547, !dbg !12701

if.then3547:                                      ; preds = %do.body3541
  %469 = bitcast %union.tree_node* %468 to i8*, !dbg !12701
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %469) #7, !dbg !12698
  br label %do.body3555, !dbg !12698

do.body3555:                                      ; preds = %do.body3541, %if.then3547
  %type3559 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12702
  %470 = load %union.tree_node*, %union.tree_node** %type3559, align 8, !dbg !12702
  %cmp3560 = icmp eq %union.tree_node* %470, null, !dbg !12702
  br i1 %cmp3560, label %do.body3570, label %if.then3562, !dbg !12705

if.then3562:                                      ; preds = %do.body3555
  %471 = bitcast %union.tree_node* %470 to i8*, !dbg !12705
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %471) #7, !dbg !12702
  br label %do.body3570, !dbg !12702

do.body3570:                                      ; preds = %do.body3555, %if.then3562
  %purpose = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12706
  %472 = bitcast i32* %purpose to %union.tree_node**, !dbg !12706
  %473 = load %union.tree_node*, %union.tree_node** %472, align 8, !dbg !12706
  %cmp3573 = icmp eq %union.tree_node* %473, null, !dbg !12706
  br i1 %cmp3573, label %do.body3582, label %if.then3575, !dbg !12709

if.then3575:                                      ; preds = %do.body3570
  %474 = bitcast %union.tree_node* %473 to i8*, !dbg !12709
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %474) #7, !dbg !12706
  br label %do.body3582, !dbg !12706

do.body3582:                                      ; preds = %do.body3570, %if.then3575
  %475 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12710
  %476 = load %union.tree_node*, %union.tree_node** %475, align 8, !dbg !12710
  %cmp3585 = icmp eq %union.tree_node* %476, null, !dbg !12710
  br i1 %cmp3585, label %sw.epilog4435, label %if.then3587, !dbg !12713

if.then3587:                                      ; preds = %do.body3582
  %477 = bitcast %union.tree_node* %476 to i8*, !dbg !12713
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %477) #7, !dbg !12710
  br label %sw.epilog4435, !dbg !12710

do.body3595:                                      ; preds = %sw.bb
  %chain3598 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12714
  %478 = load %union.tree_node*, %union.tree_node** %chain3598, align 8, !dbg !12714
  %cmp3599 = icmp eq %union.tree_node* %478, null, !dbg !12714
  br i1 %cmp3599, label %do.body3609, label %if.then3601, !dbg !12717

if.then3601:                                      ; preds = %do.body3595
  %479 = bitcast %union.tree_node* %478 to i8*, !dbg !12717
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %479) #7, !dbg !12714
  br label %do.body3609, !dbg !12714

do.body3609:                                      ; preds = %do.body3595, %if.then3601
  %type3613 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12718
  %480 = load %union.tree_node*, %union.tree_node** %type3613, align 8, !dbg !12718
  %cmp3614 = icmp eq %union.tree_node* %480, null, !dbg !12718
  br i1 %cmp3614, label %do.end3623, label %if.then3616, !dbg !12721

if.then3616:                                      ; preds = %do.body3609
  %481 = bitcast %union.tree_node* %480 to i8*, !dbg !12721
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %481) #7, !dbg !12718
  br label %do.end3623, !dbg !12718

do.end3623:                                       ; preds = %do.body3609, %if.then3616
  %482 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12722
  %483 = load i32, i32* %482, align 8, !dbg !12722
  %conv3627 = sext i32 %483 to i64, !dbg !12723
  call void @llvm.dbg.value(metadata i64 %conv3627, metadata !11803, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i64 0, metadata !11798, metadata !DIExpression()), !dbg !12724
  %a = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12725
  br label %for.cond, !dbg !12731

for.cond:                                         ; preds = %for.inc, %do.end3623
  %i1.0 = phi i64 [ 0, %do.end3623 ], [ %inc, %for.inc ], !dbg !12732
  call void @llvm.dbg.value(metadata i64 %i1.0, metadata !11798, metadata !DIExpression()), !dbg !12724
  %cmp3628 = icmp eq i64 %i1.0, %conv3627, !dbg !12733
  br i1 %cmp3628, label %sw.epilog4435.loopexit, label %do.body3630, !dbg !12734

do.body3630:                                      ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %i1.0, !dbg !12735
  %484 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12735
  %cmp3633 = icmp eq %union.tree_node* %484, null, !dbg !12735
  br i1 %cmp3633, label %for.inc, label %if.then3635, !dbg !12736

if.then3635:                                      ; preds = %do.body3630
  %485 = bitcast %union.tree_node* %484 to i8*, !dbg !12736
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %485) #7, !dbg !12735
  br label %for.inc, !dbg !12735

for.inc:                                          ; preds = %do.body3630, %if.then3635
  %inc = add i64 %i1.0, 1, !dbg !12737
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11798, metadata !DIExpression()), !dbg !12724
  br label %for.cond, !dbg !12738, !llvm.loop !12739

do.body3644:                                      ; preds = %sw.bb
  %chain3647 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12741
  %486 = load %union.tree_node*, %union.tree_node** %chain3647, align 8, !dbg !12741
  %cmp3648 = icmp eq %union.tree_node* %486, null, !dbg !12741
  br i1 %cmp3648, label %do.body3658, label %if.then3650, !dbg !12744

if.then3650:                                      ; preds = %do.body3644
  %487 = bitcast %union.tree_node* %486 to i8*, !dbg !12744
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %487) #7, !dbg !12741
  br label %do.body3658, !dbg !12741

do.body3658:                                      ; preds = %do.body3644, %if.then3650
  %type3662 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12745
  %488 = load %union.tree_node*, %union.tree_node** %type3662, align 8, !dbg !12745
  %cmp3663 = icmp eq %union.tree_node* %488, null, !dbg !12745
  br i1 %cmp3663, label %do.body3673, label %if.then3665, !dbg !12748

if.then3665:                                      ; preds = %do.body3658
  %489 = bitcast %union.tree_node* %488 to i8*, !dbg !12748
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %489) #7, !dbg !12745
  br label %do.body3673, !dbg !12745

do.body3673:                                      ; preds = %do.body3658, %if.then3665
  %490 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12749
  %491 = load %union.tree_node*, %union.tree_node** %490, align 8, !dbg !12749
  %cmp3676 = icmp eq %union.tree_node* %491, null, !dbg !12749
  br i1 %cmp3676, label %sw.default3689, label %if.then3678, !dbg !12752

if.then3678:                                      ; preds = %do.body3673
  %492 = bitcast %union.tree_node* %491 to i8*, !dbg !12752
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %492) #7, !dbg !12749
  br label %sw.default3689, !dbg !12749

sw.default3689:                                   ; preds = %do.body3673, %if.then3678
  %call3690 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %generic14) #7, !dbg !12753
  %conv3691 = sext i32 %call3690 to i64, !dbg !12754
  call void @llvm.dbg.value(metadata i64 %conv3691, metadata !11807, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.value(metadata i64 0, metadata !11804, metadata !DIExpression()), !dbg !12755
  %operands = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12756
  br label %for.cond3692, !dbg !12762

for.cond3692:                                     ; preds = %for.inc3710, %sw.default3689
  %i2.0 = phi i64 [ 0, %sw.default3689 ], [ %inc3711, %for.inc3710 ], !dbg !12763
  call void @llvm.dbg.value(metadata i64 %i2.0, metadata !11804, metadata !DIExpression()), !dbg !12755
  %cmp3693 = icmp eq i64 %i2.0, %conv3691, !dbg !12764
  br i1 %cmp3693, label %sw.epilog4435.loopexit5, label %do.body3696, !dbg !12765

do.body3696:                                      ; preds = %for.cond3692
  %arrayidx3699 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %i2.0, !dbg !12766
  %493 = load %union.tree_node*, %union.tree_node** %arrayidx3699, align 8, !dbg !12766
  %cmp3700 = icmp eq %union.tree_node* %493, null, !dbg !12766
  br i1 %cmp3700, label %for.inc3710, label %if.then3702, !dbg !12767

if.then3702:                                      ; preds = %do.body3696
  %494 = bitcast %union.tree_node* %493 to i8*, !dbg !12767
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %494) #7, !dbg !12766
  br label %for.inc3710, !dbg !12766

for.inc3710:                                      ; preds = %do.body3696, %if.then3702
  %inc3711 = add i64 %i2.0, 1, !dbg !12768
  call void @llvm.dbg.value(metadata i64 %inc3711, metadata !11804, metadata !DIExpression()), !dbg !12755
  br label %for.cond3692, !dbg !12769, !llvm.loop !12770

do.body3715:                                      ; preds = %sw.bb
  %chain3718 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12772
  %495 = load %union.tree_node*, %union.tree_node** %chain3718, align 8, !dbg !12772
  %cmp3719 = icmp eq %union.tree_node* %495, null, !dbg !12772
  br i1 %cmp3719, label %do.body3729, label %if.then3721, !dbg !12775

if.then3721:                                      ; preds = %do.body3715
  %496 = bitcast %union.tree_node* %495 to i8*, !dbg !12775
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %496) #7, !dbg !12772
  br label %do.body3729, !dbg !12772

do.body3729:                                      ; preds = %do.body3715, %if.then3721
  %type3733 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12776
  %497 = load %union.tree_node*, %union.tree_node** %type3733, align 8, !dbg !12776
  %cmp3734 = icmp eq %union.tree_node* %497, null, !dbg !12776
  br i1 %cmp3734, label %do.body3744, label %if.then3736, !dbg !12779

if.then3736:                                      ; preds = %do.body3729
  %498 = bitcast %union.tree_node* %497 to i8*, !dbg !12779
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %498) #7, !dbg !12776
  br label %do.body3744, !dbg !12776

do.body3744:                                      ; preds = %do.body3729, %if.then3736
  %var = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12780
  %499 = bitcast i32* %var to %union.tree_node**, !dbg !12780
  %500 = load %union.tree_node*, %union.tree_node** %499, align 8, !dbg !12780
  %cmp3747 = icmp eq %union.tree_node* %500, null, !dbg !12780
  br i1 %cmp3747, label %do.body3756, label %if.then3749, !dbg !12783

if.then3749:                                      ; preds = %do.body3744
  %501 = bitcast %union.tree_node* %500 to i8*, !dbg !12783
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %501) #7, !dbg !12780
  br label %do.body3756, !dbg !12780

do.body3756:                                      ; preds = %do.body3744, %if.then3749
  %def_stmt = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12784
  %502 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !12784
  %503 = load %union.gimple_statement_d*, %union.gimple_statement_d** %502, align 8, !dbg !12784
  %cmp3759 = icmp eq %union.gimple_statement_d* %503, null, !dbg !12784
  br i1 %cmp3759, label %do.body3768, label %if.then3761, !dbg !12787

if.then3761:                                      ; preds = %do.body3756
  %504 = bitcast %union.gimple_statement_d* %503 to i8*, !dbg !12787
  tail call void @gt_ggc_mx_gimple_statement_d(i8* nonnull %504) #6, !dbg !12784
  br label %do.body3768, !dbg !12784

do.body3768:                                      ; preds = %do.body3756, %if.then3761
  %ptr_info = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12788
  %505 = bitcast %union.tree_node** %ptr_info to %struct.ptr_info_def**, !dbg !12788
  %506 = load %struct.ptr_info_def*, %struct.ptr_info_def** %505, align 8, !dbg !12788
  %cmp3771 = icmp eq %struct.ptr_info_def* %506, null, !dbg !12788
  br i1 %cmp3771, label %sw.epilog4435, label %if.then3773, !dbg !12791

if.then3773:                                      ; preds = %do.body3768
  %507 = bitcast %struct.ptr_info_def* %506 to i8*, !dbg !12791
  tail call void @gt_ggc_mx_ptr_info_def(i8* nonnull %507) #6, !dbg !12788
  br label %sw.epilog4435, !dbg !12788

do.body3781:                                      ; preds = %sw.bb
  %chain3785 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12792
  %508 = load %union.tree_node*, %union.tree_node** %chain3785, align 8, !dbg !12792
  %cmp3786 = icmp eq %union.tree_node* %508, null, !dbg !12792
  br i1 %cmp3786, label %do.body3796, label %if.then3788, !dbg !12795

if.then3788:                                      ; preds = %do.body3781
  %509 = bitcast %union.tree_node* %508 to i8*, !dbg !12795
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %509) #7, !dbg !12792
  br label %do.body3796, !dbg !12792

do.body3796:                                      ; preds = %do.body3781, %if.then3788
  %type3800 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12796
  %510 = load %union.tree_node*, %union.tree_node** %type3800, align 8, !dbg !12796
  %cmp3801 = icmp eq %union.tree_node* %510, null, !dbg !12796
  br i1 %cmp3801, label %do.body3811, label %if.then3803, !dbg !12799

if.then3803:                                      ; preds = %do.body3796
  %511 = bitcast %union.tree_node* %510 to i8*, !dbg !12799
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %511) #7, !dbg !12796
  br label %do.body3811, !dbg !12796

do.body3811:                                      ; preds = %do.body3796, %if.then3803
  %512 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12800
  %513 = load %union.tree_node*, %union.tree_node** %512, align 8, !dbg !12800
  %cmp3814 = icmp eq %union.tree_node* %513, null, !dbg !12800
  br i1 %cmp3814, label %do.body3823, label %if.then3816, !dbg !12803

if.then3816:                                      ; preds = %do.body3811
  %514 = bitcast %union.tree_node* %513 to i8*, !dbg !12803
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %514) #7, !dbg !12800
  br label %do.body3823, !dbg !12800

do.body3823:                                      ; preds = %do.body3811, %if.then3816
  %nonlocalized_vars = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12804
  %515 = bitcast %union.tree_node** %nonlocalized_vars to %struct.VEC_tree_gc**, !dbg !12804
  %516 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %515, align 8, !dbg !12804
  %cmp3826 = icmp eq %struct.VEC_tree_gc* %516, null, !dbg !12804
  br i1 %cmp3826, label %do.body3835, label %if.then3828, !dbg !12807

if.then3828:                                      ; preds = %do.body3823
  %517 = bitcast %struct.VEC_tree_gc* %516 to i8*, !dbg !12807
  tail call void @gt_ggc_mx_VEC_tree_gc(i8* nonnull %517) #6, !dbg !12804
  br label %do.body3835, !dbg !12804

do.body3835:                                      ; preds = %do.body3823, %if.then3828
  %518 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12808
  %519 = load %union.tree_node*, %union.tree_node** %518, align 8, !dbg !12808
  %cmp3838 = icmp eq %union.tree_node* %519, null, !dbg !12808
  br i1 %cmp3838, label %do.body3847, label %if.then3840, !dbg !12811

if.then3840:                                      ; preds = %do.body3835
  %520 = bitcast %union.tree_node* %519 to i8*, !dbg !12811
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %520) #7, !dbg !12808
  br label %do.body3847, !dbg !12808

do.body3847:                                      ; preds = %do.body3835, %if.then3840
  %supercontext = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12812
  %521 = bitcast i40* %supercontext to %union.tree_node**, !dbg !12812
  %522 = load %union.tree_node*, %union.tree_node** %521, align 8, !dbg !12812
  %cmp3850 = icmp eq %union.tree_node* %522, null, !dbg !12812
  br i1 %cmp3850, label %do.body3859, label %if.then3852, !dbg !12815

if.then3852:                                      ; preds = %do.body3847
  %523 = bitcast %union.tree_node* %522 to i8*, !dbg !12815
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %523) #7, !dbg !12812
  br label %do.body3859, !dbg !12812

do.body3859:                                      ; preds = %do.body3847, %if.then3852
  %abstract_origin3862 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12816
  %524 = bitcast i32* %abstract_origin3862 to %union.tree_node**, !dbg !12816
  %525 = load %union.tree_node*, %union.tree_node** %524, align 8, !dbg !12816
  %cmp3863 = icmp eq %union.tree_node* %525, null, !dbg !12816
  br i1 %cmp3863, label %do.body3872, label %if.then3865, !dbg !12819

if.then3865:                                      ; preds = %do.body3859
  %526 = bitcast %union.tree_node* %525 to i8*, !dbg !12819
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %526) #7, !dbg !12816
  br label %do.body3872, !dbg !12816

do.body3872:                                      ; preds = %do.body3859, %if.then3865
  %527 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12820
  %528 = load %union.tree_node*, %union.tree_node** %527, align 8, !dbg !12820
  %cmp3875 = icmp eq %union.tree_node* %528, null, !dbg !12820
  br i1 %cmp3875, label %do.body3884, label %if.then3877, !dbg !12823

if.then3877:                                      ; preds = %do.body3872
  %529 = bitcast %union.tree_node* %528 to i8*, !dbg !12823
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %529) #7, !dbg !12820
  br label %do.body3884, !dbg !12820

do.body3884:                                      ; preds = %do.body3872, %if.then3877
  %530 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12824
  %531 = load %union.tree_node*, %union.tree_node** %530, align 8, !dbg !12824
  %cmp3887 = icmp eq %union.tree_node* %531, null, !dbg !12824
  br i1 %cmp3887, label %sw.epilog4435, label %if.then3889, !dbg !12827

if.then3889:                                      ; preds = %do.body3884
  %532 = bitcast %union.tree_node* %531 to i8*, !dbg !12827
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %532) #7, !dbg !12824
  br label %sw.epilog4435, !dbg !12824

do.body3897:                                      ; preds = %sw.bb
  %chain3901 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12828
  %533 = load %union.tree_node*, %union.tree_node** %chain3901, align 8, !dbg !12828
  %cmp3902 = icmp eq %union.tree_node* %533, null, !dbg !12828
  br i1 %cmp3902, label %do.body3912, label %if.then3904, !dbg !12831

if.then3904:                                      ; preds = %do.body3897
  %534 = bitcast %union.tree_node* %533 to i8*, !dbg !12831
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %534) #7, !dbg !12828
  br label %do.body3912, !dbg !12828

do.body3912:                                      ; preds = %do.body3897, %if.then3904
  %type3916 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12832
  %535 = load %union.tree_node*, %union.tree_node** %type3916, align 8, !dbg !12832
  %cmp3917 = icmp eq %union.tree_node* %535, null, !dbg !12832
  br i1 %cmp3917, label %do.body3927, label %if.then3919, !dbg !12835

if.then3919:                                      ; preds = %do.body3912
  %536 = bitcast %union.tree_node* %535 to i8*, !dbg !12835
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %536) #7, !dbg !12832
  br label %do.body3927, !dbg !12832

do.body3927:                                      ; preds = %do.body3912, %if.then3919
  %offset3930 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12836
  %537 = bitcast i32* %offset3930 to %union.tree_node**, !dbg !12836
  %538 = load %union.tree_node*, %union.tree_node** %537, align 8, !dbg !12836
  %cmp3931 = icmp eq %union.tree_node* %538, null, !dbg !12836
  br i1 %cmp3931, label %do.body3940, label %if.then3933, !dbg !12839

if.then3933:                                      ; preds = %do.body3927
  %539 = bitcast %union.tree_node* %538 to i8*, !dbg !12839
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %539) #7, !dbg !12836
  br label %do.body3940, !dbg !12836

do.body3940:                                      ; preds = %do.body3927, %if.then3933
  %540 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12840
  %541 = load %union.tree_node*, %union.tree_node** %540, align 8, !dbg !12840
  %cmp3943 = icmp eq %union.tree_node* %541, null, !dbg !12840
  br i1 %cmp3943, label %do.body3952, label %if.then3945, !dbg !12843

if.then3945:                                      ; preds = %do.body3940
  %542 = bitcast %union.tree_node* %541 to i8*, !dbg !12843
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %542) #7, !dbg !12840
  br label %do.body3952, !dbg !12840

do.body3952:                                      ; preds = %do.body3940, %if.then3945
  %543 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12844
  %544 = load %union.tree_node*, %union.tree_node** %543, align 8, !dbg !12844
  %cmp3955 = icmp eq %union.tree_node* %544, null, !dbg !12844
  br i1 %cmp3955, label %do.body3964, label %if.then3957, !dbg !12847

if.then3957:                                      ; preds = %do.body3952
  %545 = bitcast %union.tree_node* %544 to i8*, !dbg !12847
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %545) #7, !dbg !12844
  br label %do.body3964, !dbg !12844

do.body3964:                                      ; preds = %do.body3952, %if.then3957
  %546 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12848
  %547 = load %union.tree_node*, %union.tree_node** %546, align 8, !dbg !12848
  %cmp3967 = icmp eq %union.tree_node* %547, null, !dbg !12848
  br i1 %cmp3967, label %do.body3976, label %if.then3969, !dbg !12851

if.then3969:                                      ; preds = %do.body3964
  %548 = bitcast %union.tree_node* %547 to i8*, !dbg !12851
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %548) #7, !dbg !12848
  br label %do.body3976, !dbg !12848

do.body3976:                                      ; preds = %do.body3964, %if.then3969
  %base_accesses = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12852
  %549 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !12852
  %550 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %549, align 8, !dbg !12852
  %cmp3979 = icmp eq %struct.VEC_tree_gc* %550, null, !dbg !12852
  br i1 %cmp3979, label %do.body3988, label %if.then3981, !dbg !12855

if.then3981:                                      ; preds = %do.body3976
  %551 = bitcast %struct.VEC_tree_gc* %550 to i8*, !dbg !12855
  tail call void @gt_ggc_mx_VEC_tree_gc(i8* nonnull %551) #6, !dbg !12852
  br label %do.body3988, !dbg !12852

do.body3988:                                      ; preds = %do.body3976, %if.then3981
  %inheritance = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12856
  %552 = bitcast i32* %inheritance to %union.tree_node**, !dbg !12856
  %553 = load %union.tree_node*, %union.tree_node** %552, align 8, !dbg !12856
  %cmp3991 = icmp eq %union.tree_node* %553, null, !dbg !12856
  br i1 %cmp3991, label %do.body4000, label %if.then3993, !dbg !12859

if.then3993:                                      ; preds = %do.body3988
  %554 = bitcast %union.tree_node* %553 to i8*, !dbg !12859
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %554) #7, !dbg !12856
  br label %do.body4000, !dbg !12856

do.body4000:                                      ; preds = %do.body3988, %if.then3993
  %555 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12860
  %556 = load %union.tree_node*, %union.tree_node** %555, align 8, !dbg !12860
  %cmp4003 = icmp eq %union.tree_node* %556, null, !dbg !12860
  br i1 %cmp4003, label %do.body4012, label %if.then4005, !dbg !12863

if.then4005:                                      ; preds = %do.body4000
  %557 = bitcast %union.tree_node* %556 to i8*, !dbg !12863
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %557) #7, !dbg !12860
  br label %do.body4012, !dbg !12860

do.body4012:                                      ; preds = %do.body4000, %if.then4005
  %558 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !12864
  %559 = load %union.tree_node*, %union.tree_node** %558, align 8, !dbg !12864
  %cmp4015 = icmp eq %union.tree_node* %559, null, !dbg !12864
  br i1 %cmp4015, label %do.end4023, label %if.then4017, !dbg !12867

if.then4017:                                      ; preds = %do.body4012
  %560 = bitcast %union.tree_node* %559 to i8*, !dbg !12867
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %560) #7, !dbg !12864
  br label %do.end4023, !dbg !12864

do.end4023:                                       ; preds = %do.body4012, %if.then4017
  %base_binfos = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !12868
  %num = bitcast %union.tree_node** %base_binfos to i32*, !dbg !12869
  %561 = load i32, i32* %num, align 8, !dbg !12869
  %conv4027 = zext i32 %561 to i64, !dbg !12870
  call void @llvm.dbg.value(metadata i64 %conv4027, metadata !11810, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i64 0, metadata !11808, metadata !DIExpression()), !dbg !12871
  %vec4037 = getelementptr inbounds %union.tree_node*, %union.tree_node** %base_binfos, i64 1, !dbg !12872
  br label %for.cond4028, !dbg !12878

for.cond4028:                                     ; preds = %for.inc4051, %do.end4023
  %i3.0 = phi i64 [ 0, %do.end4023 ], [ %inc4052, %for.inc4051 ], !dbg !12879
  call void @llvm.dbg.value(metadata i64 %i3.0, metadata !11808, metadata !DIExpression()), !dbg !12871
  %cmp4029 = icmp eq i64 %i3.0, %conv4027, !dbg !12880
  br i1 %cmp4029, label %sw.epilog4435.loopexit6, label %do.body4032, !dbg !12881

do.body4032:                                      ; preds = %for.cond4028
  %arrayidx4038 = getelementptr inbounds %union.tree_node*, %union.tree_node** %vec4037, i64 %i3.0, !dbg !12882
  %562 = load %union.tree_node*, %union.tree_node** %arrayidx4038, align 8, !dbg !12882
  %cmp4039 = icmp eq %union.tree_node* %562, null, !dbg !12882
  br i1 %cmp4039, label %for.inc4051, label %if.then4041, !dbg !12883

if.then4041:                                      ; preds = %do.body4032
  %563 = bitcast %union.tree_node* %562 to i8*, !dbg !12883
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %563) #7, !dbg !12882
  br label %for.inc4051, !dbg !12882

for.inc4051:                                      ; preds = %do.body4032, %if.then4041
  %inc4052 = add nuw nsw i64 %i3.0, 1, !dbg !12884
  call void @llvm.dbg.value(metadata i64 %inc4052, metadata !11808, metadata !DIExpression()), !dbg !12871
  br label %for.cond4028, !dbg !12885, !llvm.loop !12886

do.body4055:                                      ; preds = %sw.bb
  %chain4058 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12888
  %564 = load %union.tree_node*, %union.tree_node** %chain4058, align 8, !dbg !12888
  %cmp4059 = icmp eq %union.tree_node* %564, null, !dbg !12888
  br i1 %cmp4059, label %do.body4069, label %if.then4061, !dbg !12891

if.then4061:                                      ; preds = %do.body4055
  %565 = bitcast %union.tree_node* %564 to i8*, !dbg !12891
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %565) #7, !dbg !12888
  br label %do.body4069, !dbg !12888

do.body4069:                                      ; preds = %do.body4055, %if.then4061
  %type4073 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12892
  %566 = load %union.tree_node*, %union.tree_node** %type4073, align 8, !dbg !12892
  %cmp4074 = icmp eq %union.tree_node* %566, null, !dbg !12892
  br i1 %cmp4074, label %do.body4084, label %if.then4076, !dbg !12895

if.then4076:                                      ; preds = %do.body4069
  %567 = bitcast %union.tree_node* %566 to i8*, !dbg !12895
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %567) #7, !dbg !12892
  br label %do.body4084, !dbg !12892

do.body4084:                                      ; preds = %do.body4069, %if.then4076
  %head = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12896
  %568 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !12896
  %569 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %568, align 8, !dbg !12896
  %cmp4087 = icmp eq %struct.tree_statement_list_node* %569, null, !dbg !12896
  br i1 %cmp4087, label %do.body4096, label %if.then4089, !dbg !12899

if.then4089:                                      ; preds = %do.body4084
  %570 = bitcast %struct.tree_statement_list_node* %569 to i8*, !dbg !12899
  tail call void @gt_ggc_mx_tree_statement_list_node(i8* nonnull %570) #6, !dbg !12896
  br label %do.body4096, !dbg !12896

do.body4096:                                      ; preds = %do.body4084, %if.then4089
  %tail = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12900
  %571 = bitcast %union.tree_node** %tail to %struct.tree_statement_list_node**, !dbg !12900
  %572 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %571, align 8, !dbg !12900
  %cmp4099 = icmp eq %struct.tree_statement_list_node* %572, null, !dbg !12900
  br i1 %cmp4099, label %sw.epilog4435, label %if.then4101, !dbg !12903

if.then4101:                                      ; preds = %do.body4096
  %573 = bitcast %struct.tree_statement_list_node* %572 to i8*, !dbg !12903
  tail call void @gt_ggc_mx_tree_statement_list_node(i8* nonnull %573) #6, !dbg !12900
  br label %sw.epilog4435, !dbg !12900

do.body4109:                                      ; preds = %sw.bb
  %chain4112 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12904
  %574 = load %union.tree_node*, %union.tree_node** %chain4112, align 8, !dbg !12904
  %cmp4113 = icmp eq %union.tree_node* %574, null, !dbg !12904
  br i1 %cmp4113, label %do.body4123, label %if.then4115, !dbg !12907

if.then4115:                                      ; preds = %do.body4109
  %575 = bitcast %union.tree_node* %574 to i8*, !dbg !12907
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %575) #7, !dbg !12904
  br label %do.body4123, !dbg !12904

do.body4123:                                      ; preds = %do.body4109, %if.then4115
  %type4127 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12908
  %576 = load %union.tree_node*, %union.tree_node** %type4127, align 8, !dbg !12908
  %cmp4128 = icmp eq %union.tree_node* %576, null, !dbg !12908
  br i1 %cmp4128, label %do.body4138, label %if.then4130, !dbg !12911

if.then4130:                                      ; preds = %do.body4123
  %577 = bitcast %union.tree_node* %576 to i8*, !dbg !12911
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %577) #7, !dbg !12908
  br label %do.body4138, !dbg !12908

do.body4138:                                      ; preds = %do.body4123, %if.then4130
  %elts = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12912
  %578 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !12912
  %579 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %578, align 8, !dbg !12912
  %cmp4141 = icmp eq %struct.VEC_constructor_elt_gc* %579, null, !dbg !12912
  br i1 %cmp4141, label %sw.epilog4435, label %if.then4143, !dbg !12915

if.then4143:                                      ; preds = %do.body4138
  %580 = bitcast %struct.VEC_constructor_elt_gc* %579 to i8*, !dbg !12915
  tail call void @gt_ggc_mx_VEC_constructor_elt_gc(i8* nonnull %580) #6, !dbg !12912
  br label %sw.epilog4435, !dbg !12912

do.body4151:                                      ; preds = %sw.bb
  %chain4154 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12916
  %581 = load %union.tree_node*, %union.tree_node** %chain4154, align 8, !dbg !12916
  %cmp4155 = icmp eq %union.tree_node* %581, null, !dbg !12916
  br i1 %cmp4155, label %do.body4165, label %if.then4157, !dbg !12919

if.then4157:                                      ; preds = %do.body4151
  %582 = bitcast %union.tree_node* %581 to i8*, !dbg !12919
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %582) #7, !dbg !12916
  br label %do.body4165, !dbg !12916

do.body4165:                                      ; preds = %do.body4151, %if.then4157
  %type4169 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12920
  %583 = load %union.tree_node*, %union.tree_node** %type4169, align 8, !dbg !12920
  %cmp4170 = icmp eq %union.tree_node* %583, null, !dbg !12920
  br i1 %cmp4170, label %do.body4180, label %if.then4172, !dbg !12923

if.then4172:                                      ; preds = %do.body4165
  %584 = bitcast %union.tree_node* %583 to i8*, !dbg !12923
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %584) #7, !dbg !12920
  br label %do.body4180, !dbg !12920

do.body4180:                                      ; preds = %do.body4165, %if.then4172
  %gimple_reduction_init = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12924
  %585 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !12924
  %586 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %585, align 8, !dbg !12924
  %cmp4183 = icmp eq %struct.gimple_seq_d* %586, null, !dbg !12924
  br i1 %cmp4183, label %do.body4192, label %if.then4185, !dbg !12927

if.then4185:                                      ; preds = %do.body4180
  %587 = bitcast %struct.gimple_seq_d* %586 to i8*, !dbg !12927
  tail call void @gt_ggc_mx_gimple_seq_d(i8* nonnull %587) #6, !dbg !12924
  br label %do.body4192, !dbg !12924

do.body4192:                                      ; preds = %do.body4180, %if.then4185
  %gimple_reduction_merge = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12928
  %588 = bitcast %union.tree_node** %gimple_reduction_merge to %struct.gimple_seq_d**, !dbg !12928
  %589 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %588, align 8, !dbg !12928
  %cmp4195 = icmp eq %struct.gimple_seq_d* %589, null, !dbg !12928
  br i1 %cmp4195, label %do.end4203, label %if.then4197, !dbg !12931

if.then4197:                                      ; preds = %do.body4192
  %590 = bitcast %struct.gimple_seq_d* %589 to i8*, !dbg !12931
  tail call void @gt_ggc_mx_gimple_seq_d(i8* nonnull %590) #6, !dbg !12928
  br label %do.end4203, !dbg !12928

do.end4203:                                       ; preds = %do.body4192, %if.then4197
  %591 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12932
  %592 = load i32, i32* %591, align 4, !dbg !12932
  %idxprom = zext i32 %592 to i64, !dbg !12933
  %arrayidx4207 = getelementptr inbounds [0 x i8], [0 x i8]* @omp_clause_num_ops, i64 0, i64 %idxprom, !dbg !12933
  %593 = load i8, i8* %arrayidx4207, align 1, !dbg !12933
  %conv4208 = zext i8 %593 to i64, !dbg !12934
  call void @llvm.dbg.value(metadata i64 %conv4208, metadata !11813, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i64 0, metadata !11811, metadata !DIExpression()), !dbg !12935
  %ops = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12936
  %594 = bitcast i40* %ops to [1 x %union.tree_node*]*, !dbg !12936
  br label %for.cond4209, !dbg !12942

for.cond4209:                                     ; preds = %for.inc4227, %do.end4203
  %i4.0 = phi i64 [ 0, %do.end4203 ], [ %inc4228, %for.inc4227 ], !dbg !12943
  call void @llvm.dbg.value(metadata i64 %i4.0, metadata !11811, metadata !DIExpression()), !dbg !12935
  %cmp4210 = icmp eq i64 %i4.0, %conv4208, !dbg !12944
  br i1 %cmp4210, label %sw.epilog4435.loopexit7, label %do.body4213, !dbg !12945

do.body4213:                                      ; preds = %for.cond4209
  %arrayidx4216 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %594, i64 0, i64 %i4.0, !dbg !12946
  %595 = load %union.tree_node*, %union.tree_node** %arrayidx4216, align 8, !dbg !12946
  %cmp4217 = icmp eq %union.tree_node* %595, null, !dbg !12946
  br i1 %cmp4217, label %for.inc4227, label %if.then4219, !dbg !12947

if.then4219:                                      ; preds = %do.body4213
  %596 = bitcast %union.tree_node* %595 to i8*, !dbg !12947
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %596) #7, !dbg !12946
  br label %for.inc4227, !dbg !12946

for.inc4227:                                      ; preds = %do.body4213, %if.then4219
  %inc4228 = add nuw nsw i64 %i4.0, 1, !dbg !12948
  call void @llvm.dbg.value(metadata i64 %inc4228, metadata !11811, metadata !DIExpression()), !dbg !12935
  br label %for.cond4209, !dbg !12949, !llvm.loop !12950

do.body4231:                                      ; preds = %sw.bb
  %chain4234 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12952
  %597 = load %union.tree_node*, %union.tree_node** %chain4234, align 8, !dbg !12952
  %cmp4235 = icmp eq %union.tree_node* %597, null, !dbg !12952
  br i1 %cmp4235, label %do.body4245, label %if.then4237, !dbg !12955

if.then4237:                                      ; preds = %do.body4231
  %598 = bitcast %union.tree_node* %597 to i8*, !dbg !12955
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %598) #7, !dbg !12952
  br label %do.body4245, !dbg !12952

do.body4245:                                      ; preds = %do.body4231, %if.then4237
  %type4249 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12956
  %599 = load %union.tree_node*, %union.tree_node** %type4249, align 8, !dbg !12956
  %cmp4250 = icmp eq %union.tree_node* %599, null, !dbg !12956
  br i1 %cmp4250, label %sw.epilog4435, label %if.then4252, !dbg !12959

if.then4252:                                      ; preds = %do.body4245
  %600 = bitcast %union.tree_node* %599 to i8*, !dbg !12959
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %600) #7, !dbg !12956
  br label %sw.epilog4435, !dbg !12956

do.body4261:                                      ; preds = %sw.bb
  %chain4264 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12960
  %601 = load %union.tree_node*, %union.tree_node** %chain4264, align 8, !dbg !12960
  %cmp4265 = icmp eq %union.tree_node* %601, null, !dbg !12960
  br i1 %cmp4265, label %do.body4275, label %if.then4267, !dbg !12963

if.then4267:                                      ; preds = %do.body4261
  %602 = bitcast %union.tree_node* %601 to i8*, !dbg !12963
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %602) #7, !dbg !12960
  br label %do.body4275, !dbg !12960

do.body4275:                                      ; preds = %do.body4261, %if.then4267
  %type4279 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12964
  %603 = load %union.tree_node*, %union.tree_node** %type4279, align 8, !dbg !12964
  %cmp4280 = icmp eq %union.tree_node* %603, null, !dbg !12964
  br i1 %cmp4280, label %sw.epilog4435, label %if.then4282, !dbg !12967

if.then4282:                                      ; preds = %do.body4275
  %604 = bitcast %union.tree_node* %603 to i8*, !dbg !12967
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %604) #7, !dbg !12964
  br label %sw.epilog4435, !dbg !12964

do.body4293:                                      ; preds = %while.body7
  %chain4296 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12968
  %605 = load %union.tree_node*, %union.tree_node** %chain4296, align 8, !dbg !12968
  %cmp4297 = icmp eq %union.tree_node* %605, null, !dbg !12968
  br i1 %cmp4297, label %do.body4307, label %if.then4299, !dbg !12971

if.then4299:                                      ; preds = %do.body4293
  %606 = bitcast %union.tree_node* %605 to i8*, !dbg !12971
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %606) #7, !dbg !12968
  br label %do.body4307, !dbg !12968

do.body4307:                                      ; preds = %do.body4293, %if.then4299
  %type4311 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12972
  %607 = load %union.tree_node*, %union.tree_node** %type4311, align 8, !dbg !12972
  %cmp4312 = icmp eq %union.tree_node* %607, null, !dbg !12972
  br i1 %cmp4312, label %do.end4321, label %if.then4314, !dbg !12975

if.then4314:                                      ; preds = %do.body4307
  %608 = bitcast %union.tree_node* %607 to i8*, !dbg !12975
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %608) #7, !dbg !12972
  br label %do.end4321, !dbg !12972

do.end4321:                                       ; preds = %do.body4307, %if.then4314
  %node = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12976
  %str4324 = bitcast i32* %node to i8**, !dbg !12977
  %609 = load i8*, i8** %str4324, align 8, !dbg !12977
  tail call void @gt_ggc_m_S(i8* %609) #6, !dbg !12978
  %610 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !12979
  %flags = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %610, i64 0, i32 3, !dbg !12979
  %bf.load4328 = load i16, i16* %flags, align 2, !dbg !12979
  %611 = and i16 %bf.load4328, 4096, !dbg !12979
  %tobool4330 = icmp eq i16 %611, 0, !dbg !12979
  br i1 %tobool4330, label %cond.false4332, label %cond.end4366, !dbg !12979

cond.false4332:                                   ; preds = %do.end4321
  %bf.clear4338 = and i16 %bf.load4328, 63, !dbg !12979
  %cmp4340 = icmp eq i16 %bf.clear4338, 1, !dbg !12979
  br i1 %cmp4340, label %cond.true4342, label %cond.false4353, !dbg !12979

cond.true4342:                                    ; preds = %cond.false4332
  %612 = lshr i16 %bf.load4328, 7, !dbg !12979
  %613 = and i16 %612, 2, !dbg !12979
  br label %cond.end4366, !dbg !12979

cond.false4353:                                   ; preds = %cond.false4332
  %cmp4361 = icmp eq i16 %bf.clear4338, 2, !dbg !12979
  %cond4363 = select i1 %cmp4361, i16 1, i16 4, !dbg !12979
  br label %cond.end4366, !dbg !12979

cond.end4366:                                     ; preds = %do.end4321, %cond.true4342, %cond.false4353
  %cond4367 = phi i16 [ 3, %do.end4321 ], [ %613, %cond.true4342 ], [ %cond4363, %cond.false4353 ], !dbg !12979
  switch i16 %cond4367, label %do.body4404 [
    i16 0, label %do.body4369
    i16 1, label %do.body4386
  ], !dbg !12980

do.body4369:                                      ; preds = %cond.end4366
  %value4373 = getelementptr inbounds i32, i32* %node, i64 6, !dbg !12981
  %macro = bitcast i32* %value4373 to %struct.cpp_macro**, !dbg !12981
  %614 = load %struct.cpp_macro*, %struct.cpp_macro** %macro, align 8, !dbg !12981
  %cmp4374 = icmp eq %struct.cpp_macro* %614, null, !dbg !12981
  br i1 %cmp4374, label %do.body4404, label %if.then4376, !dbg !12985

if.then4376:                                      ; preds = %do.body4369
  %615 = bitcast %struct.cpp_macro* %614 to i8*, !dbg !12985
  tail call void @gt_ggc_mx_cpp_macro(i8* nonnull %615) #6, !dbg !12981
  br label %do.body4404, !dbg !12981

do.body4386:                                      ; preds = %cond.end4366
  %value4390 = getelementptr inbounds i32, i32* %node, i64 6, !dbg !12986
  %answers = bitcast i32* %value4390 to %struct.answer**, !dbg !12986
  %616 = load %struct.answer*, %struct.answer** %answers, align 8, !dbg !12986
  %cmp4391 = icmp eq %struct.answer* %616, null, !dbg !12986
  br i1 %cmp4391, label %do.body4404, label %if.then4393, !dbg !12989

if.then4393:                                      ; preds = %do.body4386
  %617 = bitcast %struct.answer* %616 to i8*, !dbg !12989
  tail call void @gt_ggc_mx_answer(i8* nonnull %617) #6, !dbg !12986
  br label %do.body4404, !dbg !12986

do.body4404:                                      ; preds = %do.body4369, %do.body4386, %if.then4376, %if.then4393, %cond.end4366
  %symbol_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12990
  %618 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !12990
  %619 = load %struct.c_binding*, %struct.c_binding** %618, align 8, !dbg !12990
  %cmp4406 = icmp eq %struct.c_binding* %619, null, !dbg !12990
  br i1 %cmp4406, label %do.body4414, label %if.then4408, !dbg !12993

if.then4408:                                      ; preds = %do.body4404
  %620 = bitcast %struct.c_binding* %619 to i8*, !dbg !12993
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %620) #7, !dbg !12990
  br label %do.body4414, !dbg !12990

do.body4414:                                      ; preds = %do.body4404, %if.then4408
  %tag_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12994
  %621 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !12994
  %622 = load %struct.c_binding*, %struct.c_binding** %621, align 8, !dbg !12994
  %cmp4416 = icmp eq %struct.c_binding* %622, null, !dbg !12994
  br i1 %cmp4416, label %do.body4424, label %if.then4418, !dbg !12997

if.then4418:                                      ; preds = %do.body4414
  %623 = bitcast %struct.c_binding* %622 to i8*, !dbg !12997
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %623) #7, !dbg !12994
  br label %do.body4424, !dbg !12994

do.body4424:                                      ; preds = %do.body4414, %if.then4418
  %label_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12998
  %624 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !12998
  %625 = load %struct.c_binding*, %struct.c_binding** %624, align 8, !dbg !12998
  %cmp4426 = icmp eq %struct.c_binding* %625, null, !dbg !12998
  br i1 %cmp4426, label %sw.epilog4435, label %if.then4428, !dbg !13001

if.then4428:                                      ; preds = %do.body4424
  %626 = bitcast %struct.c_binding* %625 to i8*, !dbg !13001
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %626) #7, !dbg !12998
  br label %sw.epilog4435, !dbg !12998

sw.epilog4435.loopexit:                           ; preds = %for.cond
  br label %sw.epilog4435, !dbg !13002

sw.epilog4435.loopexit5:                          ; preds = %for.cond3692
  br label %sw.epilog4435, !dbg !13002

sw.epilog4435.loopexit6:                          ; preds = %for.cond4028
  br label %sw.epilog4435, !dbg !13002

sw.epilog4435.loopexit7:                          ; preds = %for.cond4209
  br label %sw.epilog4435, !dbg !13002

sw.epilog4435:                                    ; preds = %sw.epilog4435.loopexit7, %sw.epilog4435.loopexit6, %sw.epilog4435.loopexit5, %sw.epilog4435.loopexit, %do.body4275, %do.body25, %do.body53, %do.body98, %do.body140, %do.body182, %do.body209, %do.body266, %do.body352, %do.body488, %do.body662, %do.body971, %do.body1192, %do.body1427, %do.body1704, %do.body1927, %do.body2121, %do.body2333, %do.body2528, %do.body2880, %do.body3283, %do.body3527, %do.body3582, %do.body3768, %do.body3884, %do.body4096, %do.body4138, %do.body4245, %do.body4424, %if.then4428, %do.end307, %if.then31, %if.then60, %if.then103, %if.then145, %if.then187, %if.then216, %if.then271, %if.then357, %if.then493, %if.then667, %if.then976, %if.then1197, %if.then1433, %if.then1710, %if.then1932, %if.then2128, %if.then2339, %if.then2535, %if.then2887, %if.then3288, %if.then3533, %if.then3587, %if.then3773, %if.then3889, %if.then4101, %if.then4143, %if.then4252, %if.then4282, %sw.bb
  %bf.load4438 = load i64, i64* %9, align 8, !dbg !13002
  %bf.cast44403 = and i64 %bf.load4438, 65535, !dbg !13003
  %cmp4441 = icmp eq i64 %bf.cast44403, 8, !dbg !13003
  br i1 %cmp4441, label %cond.true4443, label %cond.false4447, !dbg !13002

cond.true4443:                                    ; preds = %sw.epilog4435
  %627 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13004
  br label %cond.end4451, !dbg !13002

cond.false4447:                                   ; preds = %sw.epilog4435
  %chain4450 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13005
  br label %cond.end4451, !dbg !13002

cond.end4451:                                     ; preds = %cond.false4447, %cond.true4443
  %cond4452.in.in = phi %union.tree_node** [ %627, %cond.true4443 ], [ %chain4450, %cond.false4447 ]
  %cond4452.in = bitcast %union.tree_node** %cond4452.in.in to %union.lang_tree_node**, !dbg !13006
  %cond4452 = load %union.lang_tree_node*, %union.lang_tree_node** %cond4452.in, align 8, !dbg !13002
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %cond4452, metadata !11796, metadata !DIExpression()), !dbg !11814
  br label %while.cond5, !dbg !11824, !llvm.loop !13007

while.end4453:                                    ; preds = %while.cond5
  ret void, !dbg !13009
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_VEC_c_goto_bindings_p_gc(i8* %x_p) local_unnamed_addr #5 !dbg !13010 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13012, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13013, metadata !DIExpression()), !dbg !13020
  %cmp = icmp ne i8* %x_p, null, !dbg !13021
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13021
  %or.cond = and i1 %cmp, %cmp1, !dbg !13021
  br i1 %or.cond, label %land.lhs.true2, label %if.end12, !dbg !13021

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13021
  %tobool = icmp eq i32 %call, 0, !dbg !13021
  br i1 %tobool, label %if.then, label %if.end12, !dbg !13022

if.then:                                          ; preds = %land.lhs.true2
  %num = bitcast i8* %x_p to i32*, !dbg !13023
  %0 = load i32, i32* %num, align 8, !dbg !13023
  %conv = zext i32 %0 to i64, !dbg !13024
  call void @llvm.dbg.value(metadata i64 %conv, metadata !13019, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i64 0, metadata !13015, metadata !DIExpression()), !dbg !13025
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13026
  %1 = bitcast i8* %vec to [1 x %struct.c_goto_bindings*]*, !dbg !13026
  br label %for.cond, !dbg !13032

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !13033
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !13015, metadata !DIExpression()), !dbg !13025
  %cmp3 = icmp eq i64 %i0.0, %conv, !dbg !13034
  br i1 %cmp3, label %if.end12.loopexit, label %do.body, !dbg !13035

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.c_goto_bindings*], [1 x %struct.c_goto_bindings*]* %1, i64 0, i64 %i0.0, !dbg !13036
  %2 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %arrayidx, align 8, !dbg !13036
  %cmp6 = icmp eq %struct.c_goto_bindings* %2, null, !dbg !13036
  br i1 %cmp6, label %for.inc, label %if.then8, !dbg !13037

if.then8:                                         ; preds = %do.body
  %3 = bitcast %struct.c_goto_bindings* %2 to i8*, !dbg !13037
  tail call void @gt_ggc_mx_c_goto_bindings(i8* nonnull %3) #7, !dbg !13036
  br label %for.inc, !dbg !13036

for.inc:                                          ; preds = %do.body, %if.then8
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !13038
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13015, metadata !DIExpression()), !dbg !13025
  br label %for.cond, !dbg !13039, !llvm.loop !13040

if.end12.loopexit:                                ; preds = %for.cond
  br label %if.end12, !dbg !13042

if.end12:                                         ; preds = %if.end12.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !13042
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_goto_bindings(i8* %x_p) local_unnamed_addr #5 !dbg !13043 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13045, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13046, metadata !DIExpression()), !dbg !13048
  %cmp = icmp ne i8* %x_p, null, !dbg !13049
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13049
  %or.cond = and i1 %cmp, %cmp1, !dbg !13049
  br i1 %or.cond, label %land.lhs.true2, label %if.end16, !dbg !13049

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13049
  %tobool = icmp eq i32 %call, 0, !dbg !13049
  br i1 %tobool, label %do.body, label %if.end16, !dbg !13051

do.body:                                          ; preds = %land.lhs.true2
  %goto_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13052
  %scope = bitcast i8* %goto_bindings to %struct.c_scope**, !dbg !13052
  %0 = load %struct.c_scope*, %struct.c_scope** %scope, align 8, !dbg !13052
  %cmp3 = icmp eq %struct.c_scope* %0, null, !dbg !13052
  br i1 %cmp3, label %do.body7, label %if.then4, !dbg !13056

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.c_scope* %0 to i8*, !dbg !13056
  tail call void @gt_ggc_mx_c_scope(i8* nonnull %1) #7, !dbg !13052
  br label %do.body7, !dbg !13052

do.body7:                                         ; preds = %do.body, %if.then4
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !13057
  %2 = bitcast i8* %bindings_in_scope to %struct.c_binding**, !dbg !13057
  %3 = load %struct.c_binding*, %struct.c_binding** %2, align 8, !dbg !13057
  %cmp9 = icmp eq %struct.c_binding* %3, null, !dbg !13057
  br i1 %cmp9, label %if.end16, label %if.then10, !dbg !13060

if.then10:                                        ; preds = %do.body7
  %4 = bitcast %struct.c_binding* %3 to i8*, !dbg !13060
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %4) #7, !dbg !13057
  br label %if.end16, !dbg !13057

if.end16:                                         ; preds = %do.body7, %land.lhs.true2, %if.then10, %entry
  ret void, !dbg !13061
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_scope(i8* %x_p) #5 !dbg !13062 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13064, metadata !DIExpression()), !dbg !13067
  %0 = bitcast i8* %x_p to %struct.c_scope*, !dbg !13068
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !13065, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !13066, metadata !DIExpression()), !dbg !13067
  br label %while.cond, !dbg !13069

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !13067
  %xlimit.0 = phi %struct.c_scope* [ %0, %entry ], [ %2, %while.body ], !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0, metadata !13066, metadata !DIExpression()), !dbg !13067
  %cmp = icmp ne %struct.c_scope* %xlimit.0, null, !dbg !13070
  %cmp1 = icmp ne i8* %1, inttoptr (i64 1 to i8*), !dbg !13070
  %or.cond = and i1 %cmp, %cmp1, !dbg !13070
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !13070

land.rhs:                                         ; preds = %while.cond
  %call = tail call i32 @ggc_set_mark(i8* %1) #6, !dbg !13070
  %tobool = icmp eq i32 %call, 0, !dbg !13070
  br i1 %tobool, label %while.body, label %while.end, !dbg !13069

while.body:                                       ; preds = %land.rhs
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %xlimit.0, i64 0, i32 0, !dbg !13071
  %2 = load %struct.c_scope*, %struct.c_scope** %outer, align 8, !dbg !13071
  %3 = bitcast %struct.c_scope* %2 to i8*, !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %2, metadata !13066, metadata !DIExpression()), !dbg !13067
  br label %while.cond, !dbg !13069, !llvm.loop !13072

while.end:                                        ; preds = %while.cond, %land.rhs
  %xlimit.0.lcssa = phi %struct.c_scope* [ %xlimit.0, %while.cond ], [ %xlimit.0, %land.rhs ], !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !13066, metadata !DIExpression()), !dbg !13067
  br label %while.cond2, !dbg !13074

while.cond2:                                      ; preds = %do.end35, %while.end
  %x.0 = phi %struct.c_scope* [ %0, %while.end ], [ %14, %do.end35 ], !dbg !13067
  call void @llvm.dbg.value(metadata %struct.c_scope* %x.0, metadata !13065, metadata !DIExpression()), !dbg !13067
  %cmp3 = icmp eq %struct.c_scope* %x.0, %xlimit.0.lcssa, !dbg !13075
  br i1 %cmp3, label %while.end37, label %do.body, !dbg !13074

do.body:                                          ; preds = %while.cond2
  %outer5 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 0, !dbg !13076
  %4 = load %struct.c_scope*, %struct.c_scope** %outer5, align 8, !dbg !13076
  %cmp6 = icmp eq %struct.c_scope* %4, null, !dbg !13076
  br i1 %cmp6, label %do.body8, label %if.then, !dbg !13080

if.then:                                          ; preds = %do.body
  %5 = bitcast %struct.c_scope* %4 to i8*, !dbg !13080
  tail call void @gt_ggc_mx_c_scope(i8* nonnull %5) #7, !dbg !13076
  br label %do.body8, !dbg !13076

do.body8:                                         ; preds = %do.body, %if.then
  %outer_function = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 1, !dbg !13081
  %6 = load %struct.c_scope*, %struct.c_scope** %outer_function, align 8, !dbg !13081
  %cmp9 = icmp eq %struct.c_scope* %6, null, !dbg !13081
  br i1 %cmp9, label %do.body15, label %if.then10, !dbg !13084

if.then10:                                        ; preds = %do.body8
  %7 = bitcast %struct.c_scope* %6 to i8*, !dbg !13084
  tail call void @gt_ggc_mx_c_scope(i8* nonnull %7) #7, !dbg !13081
  br label %do.body15, !dbg !13081

do.body15:                                        ; preds = %do.body8, %if.then10
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 2, !dbg !13085
  %8 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !13085
  %cmp16 = icmp eq %struct.c_binding* %8, null, !dbg !13085
  br i1 %cmp16, label %do.body22, label %if.then17, !dbg !13088

if.then17:                                        ; preds = %do.body15
  %9 = bitcast %struct.c_binding* %8 to i8*, !dbg !13088
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %9) #7, !dbg !13085
  br label %do.body22, !dbg !13085

do.body22:                                        ; preds = %do.body15, %if.then17
  %blocks = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 3, !dbg !13089
  %10 = load %union.tree_node*, %union.tree_node** %blocks, align 8, !dbg !13089
  %cmp23 = icmp eq %union.tree_node* %10, null, !dbg !13089
  br i1 %cmp23, label %do.body29, label %if.then24, !dbg !13092

if.then24:                                        ; preds = %do.body22
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !13092
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %11) #7, !dbg !13089
  br label %do.body29, !dbg !13089

do.body29:                                        ; preds = %do.body22, %if.then24
  %blocks_last = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 4, !dbg !13093
  %12 = load %union.tree_node*, %union.tree_node** %blocks_last, align 8, !dbg !13093
  %cmp30 = icmp eq %union.tree_node* %12, null, !dbg !13093
  br i1 %cmp30, label %do.end35, label %if.then31, !dbg !13096

if.then31:                                        ; preds = %do.body29
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !13096
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %13) #7, !dbg !13093
  br label %do.end35, !dbg !13093

do.end35:                                         ; preds = %do.body29, %if.then31
  %14 = load %struct.c_scope*, %struct.c_scope** %outer5, align 8, !dbg !13097
  call void @llvm.dbg.value(metadata %struct.c_scope* %14, metadata !13065, metadata !DIExpression()), !dbg !13067
  br label %while.cond2, !dbg !13074, !llvm.loop !13098

while.end37:                                      ; preds = %while.cond2
  ret void, !dbg !13100
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_binding(i8* %x_p) local_unnamed_addr #5 !dbg !13101 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13103, metadata !DIExpression()), !dbg !13106
  %0 = bitcast i8* %x_p to %struct.c_binding*, !dbg !13107
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !13104, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !13105, metadata !DIExpression()), !dbg !13106
  br label %while.cond, !dbg !13108

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !13106
  %xlimit.0 = phi %struct.c_binding* [ %0, %entry ], [ %2, %while.body ], !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0, metadata !13105, metadata !DIExpression()), !dbg !13106
  %cmp = icmp ne %struct.c_binding* %xlimit.0, null, !dbg !13109
  %cmp1 = icmp ne i8* %1, inttoptr (i64 1 to i8*), !dbg !13109
  %or.cond = and i1 %cmp, %cmp1, !dbg !13109
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !13109

land.rhs:                                         ; preds = %while.cond
  %call = tail call i32 @ggc_set_mark(i8* %1) #6, !dbg !13109
  %tobool = icmp eq i32 %call, 0, !dbg !13109
  br i1 %tobool, label %while.body, label %while.end, !dbg !13108

while.body:                                       ; preds = %land.rhs
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %xlimit.0, i64 0, i32 3, !dbg !13110
  %2 = load %struct.c_binding*, %struct.c_binding** %prev, align 8, !dbg !13110
  %3 = bitcast %struct.c_binding* %2 to i8*, !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %2, metadata !13105, metadata !DIExpression()), !dbg !13106
  br label %while.cond, !dbg !13108, !llvm.loop !13111

while.end:                                        ; preds = %while.cond, %land.rhs
  %xlimit.0.lcssa = phi %struct.c_binding* [ %xlimit.0, %while.cond ], [ %xlimit.0, %land.rhs ], !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !13105, metadata !DIExpression()), !dbg !13106
  br label %while.cond2, !dbg !13113

while.cond2:                                      ; preds = %do.end54, %while.end
  %x.0 = phi %struct.c_binding* [ %0, %while.end ], [ %18, %do.end54 ], !dbg !13106
  call void @llvm.dbg.value(metadata %struct.c_binding* %x.0, metadata !13104, metadata !DIExpression()), !dbg !13106
  %cmp3 = icmp eq %struct.c_binding* %x.0, %xlimit.0.lcssa, !dbg !13114
  br i1 %cmp3, label %while.end56, label %while.body4, !dbg !13113

while.body4:                                      ; preds = %while.cond2
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 1, !dbg !13115
  %4 = bitcast %union.tree_node** %decl to i64**, !dbg !13115
  %5 = load i64*, i64** %4, align 8, !dbg !13115
  %bf.load = load i64, i64* %5, align 8, !dbg !13115
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !13117
  %cmp5 = icmp eq i64 %bf.cast2, 30, !dbg !13117
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !13118

do.body:                                          ; preds = %while.body4
  %type = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 0, i32 0, !dbg !13119
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13119
  %cmp6 = icmp eq %union.tree_node* %6, null, !dbg !13119
  br i1 %cmp6, label %do.body21, label %if.then, !dbg !13123

if.then:                                          ; preds = %do.body
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !13123
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %7) #7, !dbg !13119
  br label %do.body21, !dbg !13119

do.body11:                                        ; preds = %while.body4
  %label = bitcast %struct.c_binding* %x.0 to %struct.c_label_vars**, !dbg !13124
  %8 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !13124
  %cmp13 = icmp eq %struct.c_label_vars* %8, null, !dbg !13124
  br i1 %cmp13, label %do.body21, label %if.then15, !dbg !13127

if.then15:                                        ; preds = %do.body11
  %9 = bitcast %struct.c_label_vars* %8 to i8*, !dbg !13127
  tail call void @gt_ggc_mx_c_label_vars(i8* nonnull %9) #7, !dbg !13124
  br label %do.body21, !dbg !13124

do.body21:                                        ; preds = %do.body, %do.body11, %if.then, %if.then15
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !13128
  %cmp23 = icmp eq %union.tree_node* %10, null, !dbg !13128
  br i1 %cmp23, label %do.body30, label %if.then25, !dbg !13131

if.then25:                                        ; preds = %do.body21
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !13131
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %11) #7, !dbg !13128
  br label %do.body30, !dbg !13128

do.body30:                                        ; preds = %do.body21, %if.then25
  %id = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 2, !dbg !13132
  %12 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !13132
  %cmp31 = icmp eq %union.tree_node* %12, null, !dbg !13132
  br i1 %cmp31, label %do.body38, label %if.then33, !dbg !13135

if.then33:                                        ; preds = %do.body30
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !13135
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %13) #7, !dbg !13132
  br label %do.body38, !dbg !13132

do.body38:                                        ; preds = %do.body30, %if.then33
  %prev39 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 3, !dbg !13136
  %14 = load %struct.c_binding*, %struct.c_binding** %prev39, align 8, !dbg !13136
  %cmp40 = icmp eq %struct.c_binding* %14, null, !dbg !13136
  br i1 %cmp40, label %do.body47, label %if.then42, !dbg !13139

if.then42:                                        ; preds = %do.body38
  %15 = bitcast %struct.c_binding* %14 to i8*, !dbg !13139
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %15) #7, !dbg !13136
  br label %do.body47, !dbg !13136

do.body47:                                        ; preds = %do.body38, %if.then42
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 4, !dbg !13140
  %16 = load %struct.c_binding*, %struct.c_binding** %shadowed, align 8, !dbg !13140
  %cmp48 = icmp eq %struct.c_binding* %16, null, !dbg !13140
  br i1 %cmp48, label %do.end54, label %if.then50, !dbg !13143

if.then50:                                        ; preds = %do.body47
  %17 = bitcast %struct.c_binding* %16 to i8*, !dbg !13143
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %17) #7, !dbg !13140
  br label %do.end54, !dbg !13140

do.end54:                                         ; preds = %do.body47, %if.then50
  %18 = load %struct.c_binding*, %struct.c_binding** %prev39, align 8, !dbg !13144
  call void @llvm.dbg.value(metadata %struct.c_binding* %18, metadata !13104, metadata !DIExpression()), !dbg !13106
  br label %while.cond2, !dbg !13113, !llvm.loop !13145

while.end56:                                      ; preds = %while.cond2
  ret void, !dbg !13147
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_label_vars(i8* %x_p) local_unnamed_addr #5 !dbg !13148 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13150, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13151, metadata !DIExpression()), !dbg !13153
  %cmp = icmp ne i8* %x_p, null, !dbg !13154
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13154
  %or.cond = and i1 %cmp, %cmp1, !dbg !13154
  br i1 %or.cond, label %land.lhs.true2, label %if.end37, !dbg !13154

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13154
  %tobool = icmp eq i32 %call, 0, !dbg !13154
  br i1 %tobool, label %do.body, label %if.end37, !dbg !13156

do.body:                                          ; preds = %land.lhs.true2
  %shadowed = bitcast i8* %x_p to %struct.c_label_vars**, !dbg !13157
  %0 = load %struct.c_label_vars*, %struct.c_label_vars** %shadowed, align 8, !dbg !13157
  %cmp3 = icmp eq %struct.c_label_vars* %0, null, !dbg !13157
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !13161

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.c_label_vars* %0 to i8*, !dbg !13161
  tail call void @gt_ggc_mx_c_label_vars(i8* nonnull %1) #7, !dbg !13157
  br label %do.body6, !dbg !13157

do.body6:                                         ; preds = %do.body, %if.then4
  %label_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13162
  %scope = bitcast i8* %label_bindings to %struct.c_scope**, !dbg !13162
  %2 = load %struct.c_scope*, %struct.c_scope** %scope, align 8, !dbg !13162
  %cmp7 = icmp eq %struct.c_scope* %2, null, !dbg !13162
  br i1 %cmp7, label %do.body14, label %if.then8, !dbg !13165

if.then8:                                         ; preds = %do.body6
  %3 = bitcast %struct.c_scope* %2 to i8*, !dbg !13165
  tail call void @gt_ggc_mx_c_scope(i8* nonnull %3) #7, !dbg !13162
  br label %do.body14, !dbg !13162

do.body14:                                        ; preds = %do.body6, %if.then8
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !13166
  %4 = bitcast i8* %bindings_in_scope to %struct.c_binding**, !dbg !13166
  %5 = load %struct.c_binding*, %struct.c_binding** %4, align 8, !dbg !13166
  %cmp16 = icmp eq %struct.c_binding* %5, null, !dbg !13166
  br i1 %cmp16, label %do.body23, label %if.then17, !dbg !13169

if.then17:                                        ; preds = %do.body14
  %6 = bitcast %struct.c_binding* %5 to i8*, !dbg !13169
  tail call void @gt_ggc_mx_c_binding(i8* nonnull %6) #7, !dbg !13166
  br label %do.body23, !dbg !13166

do.body23:                                        ; preds = %do.body14, %if.then17
  %decls_in_scope = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !13170
  %7 = bitcast i8* %decls_in_scope to %struct.VEC_tree_gc**, !dbg !13170
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %7, align 8, !dbg !13170
  %cmp24 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !13170
  br i1 %cmp24, label %do.body30, label %if.then25, !dbg !13173

if.then25:                                        ; preds = %do.body23
  %9 = bitcast %struct.VEC_tree_gc* %8 to i8*, !dbg !13173
  tail call void @gt_ggc_mx_VEC_tree_gc(i8* nonnull %9) #6, !dbg !13170
  br label %do.body30, !dbg !13170

do.body30:                                        ; preds = %do.body23, %if.then25
  %gotos = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !13174
  %10 = bitcast i8* %gotos to %struct.VEC_c_goto_bindings_p_gc**, !dbg !13174
  %11 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %10, align 8, !dbg !13174
  %cmp31 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %11, null, !dbg !13174
  br i1 %cmp31, label %if.end37, label %if.then32, !dbg !13177

if.then32:                                        ; preds = %do.body30
  %12 = bitcast %struct.VEC_c_goto_bindings_p_gc* %11 to i8*, !dbg !13177
  tail call void @gt_ggc_mx_VEC_c_goto_bindings_p_gc(i8* nonnull %12) #7, !dbg !13174
  br label %if.end37, !dbg !13174

if.end37:                                         ; preds = %do.body30, %land.lhs.true2, %if.then32, %entry
  ret void, !dbg !13178
}

declare dso_local void @gt_ggc_mx_VEC_tree_gc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_language_function(i8* %x_p) local_unnamed_addr #5 !dbg !13179 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13181, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13182, metadata !DIExpression()), !dbg !13184
  %cmp = icmp ne i8* %x_p, null, !dbg !13185
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13185
  %or.cond = and i1 %cmp, %cmp1, !dbg !13185
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !13185

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13185
  %tobool = icmp eq i32 %call, 0, !dbg !13185
  br i1 %tobool, label %do.body, label %if.end22, !dbg !13187

do.body:                                          ; preds = %land.lhs.true2
  %x_cur_stmt_list = bitcast i8* %x_p to %union.tree_node**, !dbg !13188
  %0 = load %union.tree_node*, %union.tree_node** %x_cur_stmt_list, align 8, !dbg !13188
  %cmp3 = icmp eq %union.tree_node* %0, null, !dbg !13188
  br i1 %cmp3, label %do.body8, label %if.then4, !dbg !13192

if.then4:                                         ; preds = %do.body
  %1 = bitcast %union.tree_node* %0 to i8*, !dbg !13192
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %1) #7, !dbg !13188
  br label %do.body8, !dbg !13188

do.body8:                                         ; preds = %do.body, %if.then4
  %x_break_label = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !13193
  %2 = bitcast i8* %x_break_label to %union.tree_node**, !dbg !13193
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !13193
  %cmp9 = icmp eq %union.tree_node* %3, null, !dbg !13193
  br i1 %cmp9, label %do.body15, label %if.then10, !dbg !13196

if.then10:                                        ; preds = %do.body8
  %4 = bitcast %union.tree_node* %3 to i8*, !dbg !13196
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %4) #7, !dbg !13193
  br label %do.body15, !dbg !13193

do.body15:                                        ; preds = %do.body8, %if.then10
  %x_cont_label = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !13197
  %5 = bitcast i8* %x_cont_label to %union.tree_node**, !dbg !13197
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !13197
  %cmp16 = icmp eq %union.tree_node* %6, null, !dbg !13197
  br i1 %cmp16, label %if.end22, label %if.then17, !dbg !13200

if.then17:                                        ; preds = %do.body15
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !13200
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %7) #7, !dbg !13197
  br label %if.end22, !dbg !13197

if.end22:                                         ; preds = %do.body15, %land.lhs.true2, %if.then17, %entry
  ret void, !dbg !13201
}

declare dso_local i32 @tree_node_structure(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_real_value(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_fixed_value(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_m_S(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_lang_decl(i8* %x_p) local_unnamed_addr #5 !dbg !13202 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13204, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13205, metadata !DIExpression()), !dbg !13207
  %cmp = icmp ne i8* %x_p, null, !dbg !13208
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13208
  %or.cond = and i1 %cmp, %cmp1, !dbg !13208
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !13208

land.lhs.true2:                                   ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13205, metadata !DIExpression()), !dbg !13207
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13208
  ret void, !dbg !13210

if.end:                                           ; preds = %entry
  ret void, !dbg !13211
}

declare dso_local void @gt_ggc_mx_rtx_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_var_ann_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_function(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_die_struct(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_lang_type(i8* %x_p) local_unnamed_addr #5 !dbg !13212 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13214, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13215, metadata !DIExpression()), !dbg !13217
  %cmp = icmp ne i8* %x_p, null, !dbg !13218
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13218
  %or.cond = and i1 %cmp, %cmp1, !dbg !13218
  br i1 %or.cond, label %land.lhs.true2, label %if.end27, !dbg !13218

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !13218
  %tobool = icmp eq i32 %call, 0, !dbg !13218
  br i1 %tobool, label %do.body, label %if.end27, !dbg !13220

do.body:                                          ; preds = %land.lhs.true2
  %s = bitcast i8* %x_p to %struct.sorted_fields_type**, !dbg !13221
  %0 = load %struct.sorted_fields_type*, %struct.sorted_fields_type** %s, align 8, !dbg !13221
  %cmp3 = icmp eq %struct.sorted_fields_type* %0, null, !dbg !13221
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !13225

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.sorted_fields_type* %0 to i8*, !dbg !13225
  tail call void @gt_ggc_mx_sorted_fields_type(i8* nonnull %1) #6, !dbg !13221
  br label %do.body6, !dbg !13221

do.body6:                                         ; preds = %do.body, %if.then4
  %enum_min = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13226
  %2 = bitcast i8* %enum_min to %union.tree_node**, !dbg !13226
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !13226
  %cmp7 = icmp eq %union.tree_node* %3, null, !dbg !13226
  br i1 %cmp7, label %do.body13, label %if.then8, !dbg !13229

if.then8:                                         ; preds = %do.body6
  %4 = bitcast %union.tree_node* %3 to i8*, !dbg !13229
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %4) #7, !dbg !13226
  br label %do.body13, !dbg !13226

do.body13:                                        ; preds = %do.body6, %if.then8
  %enum_max = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !13230
  %5 = bitcast i8* %enum_max to %union.tree_node**, !dbg !13230
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !13230
  %cmp14 = icmp eq %union.tree_node* %6, null, !dbg !13230
  br i1 %cmp14, label %do.body20, label %if.then15, !dbg !13233

if.then15:                                        ; preds = %do.body13
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !13233
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %7) #7, !dbg !13230
  br label %do.body20, !dbg !13230

do.body20:                                        ; preds = %do.body13, %if.then15
  %objc_info = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !13234
  %8 = bitcast i8* %objc_info to %union.tree_node**, !dbg !13234
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !13234
  %cmp21 = icmp eq %union.tree_node* %9, null, !dbg !13234
  br i1 %cmp21, label %if.end27, label %if.then22, !dbg !13237

if.then22:                                        ; preds = %do.body20
  %10 = bitcast %union.tree_node* %9 to i8*, !dbg !13237
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %10) #7, !dbg !13234
  br label %if.end27, !dbg !13234

if.end27:                                         ; preds = %do.body20, %land.lhs.true2, %if.then22, %entry
  ret void, !dbg !13238
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !13239 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !13246, metadata !DIExpression()), !dbg !13247
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13248
  %bf.load = load i64, i64* %0, align 8, !dbg !13248
  %bf.cast = and i64 %bf.load, 65535, !dbg !13248
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !13248
  %1 = load i32, i32* %arrayidx, align 4, !dbg !13248
  %cmp = icmp eq i32 %1, 9, !dbg !13248
  br i1 %cmp, label %if.then, label %if.else, !dbg !13250

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13251
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !13251
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !13251
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !13251
  %4 = load i64, i64* %low, align 8, !dbg !13251
  %conv = trunc i64 %4 to i32, !dbg !13251
  br label %return, !dbg !13252

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !13253
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !13253
  %conv9 = zext i8 %5 to i32, !dbg !13253
  br label %return, !dbg !13254

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !13255
  ret i32 %retval.0, !dbg !13256
}

declare dso_local void @gt_ggc_mx_gimple_statement_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_ptr_info_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_tree_statement_list_node(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_VEC_constructor_elt_gc(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_gimple_seq_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_cpp_macro(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_answer(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_sorted_fields_type(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_inline_static(i8* %x_p) #5 !dbg !13257 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13259, metadata !DIExpression()), !dbg !13262
  %0 = bitcast i8* %x_p to %struct.c_inline_static*, !dbg !13263
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %0, metadata !13260, metadata !DIExpression()), !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  br label %while.cond, !dbg !13264

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !13262
  %xlimit.0 = phi %struct.c_inline_static* [ %0, %entry ], [ %2, %while.body ], !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0, metadata !13261, metadata !DIExpression()), !dbg !13262
  %call = tail call i32 @gt_pch_note_object(i8* %1, i8* %1, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_15c_inline_static, i32 3) #6, !dbg !13265
  %tobool = icmp eq i32 %call, 0, !dbg !13264
  br i1 %tobool, label %while.cond1.preheader, label %while.body, !dbg !13264

while.cond1.preheader:                            ; preds = %while.cond
  %xlimit.0.lcssa = phi %struct.c_inline_static* [ %xlimit.0, %while.cond ], !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !13261, metadata !DIExpression()), !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !13261, metadata !DIExpression()), !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %xlimit.0.lcssa, metadata !13261, metadata !DIExpression()), !dbg !13262
  br label %while.cond1, !dbg !13266

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %xlimit.0, i64 0, i32 4, !dbg !13267
  %2 = load %struct.c_inline_static*, %struct.c_inline_static** %next, align 8, !dbg !13267
  %3 = bitcast %struct.c_inline_static* %2 to i8*, !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %2, metadata !13261, metadata !DIExpression()), !dbg !13262
  br label %while.cond, !dbg !13264, !llvm.loop !13268

while.cond1:                                      ; preds = %while.cond1.preheader, %do.end19
  %x.0 = phi %struct.c_inline_static* [ %10, %do.end19 ], [ %0, %while.cond1.preheader ], !dbg !13262
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %x.0, metadata !13260, metadata !DIExpression()), !dbg !13262
  %cmp = icmp eq %struct.c_inline_static* %x.0, %xlimit.0.lcssa, !dbg !13270
  br i1 %cmp, label %while.end21, label %do.body, !dbg !13266

do.body:                                          ; preds = %while.cond1
  %function = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 1, !dbg !13271
  %4 = load %union.tree_node*, %union.tree_node** %function, align 8, !dbg !13271
  %cmp3 = icmp eq %union.tree_node* %4, null, !dbg !13271
  br i1 %cmp3, label %do.body5, label %if.then, !dbg !13275

if.then:                                          ; preds = %do.body
  %5 = bitcast %union.tree_node* %4 to i8*, !dbg !13275
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %5) #7, !dbg !13271
  br label %do.body5, !dbg !13271

do.body5:                                         ; preds = %do.body, %if.then
  %static_decl = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 2, !dbg !13276
  %6 = load %union.tree_node*, %union.tree_node** %static_decl, align 8, !dbg !13276
  %cmp6 = icmp eq %union.tree_node* %6, null, !dbg !13276
  br i1 %cmp6, label %do.body12, label %if.then7, !dbg !13279

if.then7:                                         ; preds = %do.body5
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !13279
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %7) #7, !dbg !13276
  br label %do.body12, !dbg !13276

do.body12:                                        ; preds = %do.body5, %if.then7
  %next13 = getelementptr inbounds %struct.c_inline_static, %struct.c_inline_static* %x.0, i64 0, i32 4, !dbg !13280
  %8 = load %struct.c_inline_static*, %struct.c_inline_static** %next13, align 8, !dbg !13280
  %cmp14 = icmp eq %struct.c_inline_static* %8, null, !dbg !13280
  br i1 %cmp14, label %do.end19, label %if.then15, !dbg !13283

if.then15:                                        ; preds = %do.body12
  %9 = bitcast %struct.c_inline_static* %8 to i8*, !dbg !13283
  tail call void @gt_pch_nx_c_inline_static(i8* nonnull %9) #7, !dbg !13280
  %.pre = load %struct.c_inline_static*, %struct.c_inline_static** %next13, align 8, !dbg !13284
  br label %do.end19, !dbg !13280

do.end19:                                         ; preds = %do.body12, %if.then15
  %10 = phi %struct.c_inline_static* [ null, %do.body12 ], [ %.pre, %if.then15 ], !dbg !13284
  call void @llvm.dbg.value(metadata %struct.c_inline_static* %10, metadata !13260, metadata !DIExpression()), !dbg !13262
  br label %while.cond1, !dbg !13266, !llvm.loop !13285

while.end21:                                      ; preds = %while.cond1
  ret void, !dbg !13287
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_15c_inline_static(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !13288 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !13293, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13294, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !13295, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !13296, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13297, metadata !DIExpression()), !dbg !13299
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !13300
  br i1 %cmp, label %if.then, label %if.end, !dbg !13302

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13297, metadata !DIExpression()), !dbg !13299
  %function = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13303
  tail call void %op(i8* nonnull %function, i8* %cookie) #6, !dbg !13304
  br label %if.end, !dbg !13304

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13305

if.then2:                                         ; preds = %if.end
  %static_decl = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !13306
  tail call void %op(i8* nonnull %static_decl, i8* %cookie) #6, !dbg !13308
  br label %if.end3, !dbg !13308

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !13309

if.then5:                                         ; preds = %if.end3
  %next = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !13310
  tail call void %op(i8* nonnull %next, i8* %cookie) #6, !dbg !13312
  br label %if.end6, !dbg !13312

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !13313
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_lang_tree_node(i8* %x_p) #5 !dbg !13314 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13316, metadata !DIExpression()), !dbg !13335
  %0 = bitcast i8* %x_p to %union.lang_tree_node*, !dbg !13336
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %0, metadata !13317, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %0, metadata !13318, metadata !DIExpression()), !dbg !13335
  br label %while.cond, !dbg !13337

while.cond:                                       ; preds = %cond.end, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %8, %cond.end ], !dbg !13335
  %xlimit.0 = phi %union.lang_tree_node* [ %0, %entry ], [ %cond, %cond.end ], !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0, metadata !13318, metadata !DIExpression()), !dbg !13335
  %call = tail call i32 @gt_pch_note_object(i8* %1, i8* %1, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_14lang_tree_node, i32 133) #6, !dbg !13338
  %tobool = icmp eq i32 %call, 0, !dbg !13337
  br i1 %tobool, label %while.cond3.preheader, label %while.body, !dbg !13337

while.cond3.preheader:                            ; preds = %while.cond
  %xlimit.0.lcssa = phi %union.lang_tree_node* [ %xlimit.0, %while.cond ], !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !13318, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !13318, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %xlimit.0.lcssa, metadata !13318, metadata !DIExpression()), !dbg !13335
  br label %while.cond3, !dbg !13339

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13340
  %bf.load = load i64, i64* %2, align 8, !dbg !13340
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !13341
  %cmp = icmp eq i64 %bf.cast4, 8, !dbg !13341
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13340

cond.true:                                        ; preds = %while.body
  %3 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13342
  %4 = bitcast %union.tree_node** %3 to %union.lang_tree_node**, !dbg !13342
  %5 = load %union.lang_tree_node*, %union.lang_tree_node** %4, align 8, !dbg !13342
  br label %cond.end, !dbg !13340

cond.false:                                       ; preds = %while.body
  %chain = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %xlimit.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13343
  %6 = bitcast %union.tree_node** %chain to %union.lang_tree_node**, !dbg !13343
  %7 = load %union.lang_tree_node*, %union.lang_tree_node** %6, align 8, !dbg !13343
  br label %cond.end, !dbg !13340

cond.end:                                         ; preds = %cond.false, %cond.true
  %.in = phi %union.lang_tree_node* [ %5, %cond.true ], [ %7, %cond.false ]
  %cond = phi %union.lang_tree_node* [ %5, %cond.true ], [ %7, %cond.false ], !dbg !13340
  %8 = bitcast %union.lang_tree_node* %.in to i8*, !dbg !13340
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %cond, metadata !13318, metadata !DIExpression()), !dbg !13335
  br label %while.cond, !dbg !13337, !llvm.loop !13344

while.cond3:                                      ; preds = %while.cond3.preheader, %cond.end4449
  %x.0 = phi %union.lang_tree_node* [ %cond4450, %cond.end4449 ], [ %0, %while.cond3.preheader ], !dbg !13335
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %x.0, metadata !13317, metadata !DIExpression()), !dbg !13335
  %cmp4 = icmp eq %union.lang_tree_node* %x.0, %xlimit.0.lcssa, !dbg !13346
  br i1 %cmp4, label %while.end4451, label %while.body5, !dbg !13339

while.body5:                                      ; preds = %while.cond3
  %9 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13347
  %bf.load8 = load i64, i64* %9, align 8, !dbg !13347
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !13348
  %cmp11 = icmp eq i64 %bf.cast102, 1, !dbg !13348
  br i1 %cmp11, label %do.body4291, label %sw.bb, !dbg !13349

sw.bb:                                            ; preds = %while.body5
  %generic12 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, !dbg !13350
  %call13 = tail call i32 @tree_node_structure(%union.tree_node* %generic12) #6, !dbg !13351
  switch i32 %call13, label %sw.epilog4433 [
    i32 33, label %do.body4259
    i32 1, label %do.body
    i32 2, label %do.body37
    i32 3, label %do.body67
    i32 4, label %do.body109
    i32 5, label %do.body151
    i32 6, label %do.body193
    i32 7, label %do.body223
    i32 8, label %do.body277
    i32 9, label %do.body309
    i32 10, label %do.body363
    i32 11, label %do.body499
    i32 12, label %do.body673
    i32 16, label %do.body982
    i32 13, label %do.body1203
    i32 15, label %do.body1439
    i32 14, label %do.body1716
    i32 17, label %do.body1938
    i32 18, label %do.body2135
    i32 19, label %do.body2345
    i32 20, label %do.body2542
    i32 21, label %do.body2894
    i32 22, label %do.body3294
    i32 23, label %do.body3539
    i32 24, label %do.body3593
    i32 25, label %do.body3642
    i32 26, label %do.body3713
    i32 27, label %do.body3779
    i32 28, label %do.body3895
    i32 29, label %do.body4053
    i32 30, label %do.body4107
    i32 31, label %do.body4149
    i32 32, label %do.body4229
  ], !dbg !13352

do.body:                                          ; preds = %sw.bb
  %chain17 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13353
  %10 = load %union.tree_node*, %union.tree_node** %chain17, align 8, !dbg !13353
  %cmp18 = icmp eq %union.tree_node* %10, null, !dbg !13353
  br i1 %cmp18, label %do.body23, label %if.then, !dbg !13356

if.then:                                          ; preds = %do.body
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !13356
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %11) #7, !dbg !13353
  br label %do.body23, !dbg !13353

do.body23:                                        ; preds = %do.body, %if.then
  %type26 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13357
  %12 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !13357
  %cmp27 = icmp eq %union.tree_node* %12, null, !dbg !13357
  br i1 %cmp27, label %sw.epilog4433, label %if.then29, !dbg !13360

if.then29:                                        ; preds = %do.body23
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !13360
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %13) #7, !dbg !13357
  br label %sw.epilog4433, !dbg !13357

do.body37:                                        ; preds = %sw.bb
  %chain40 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13361
  %14 = load %union.tree_node*, %union.tree_node** %chain40, align 8, !dbg !13361
  %cmp41 = icmp eq %union.tree_node* %14, null, !dbg !13361
  br i1 %cmp41, label %do.body51, label %if.then43, !dbg !13364

if.then43:                                        ; preds = %do.body37
  %15 = bitcast %union.tree_node* %14 to i8*, !dbg !13364
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %15) #7, !dbg !13361
  br label %do.body51, !dbg !13361

do.body51:                                        ; preds = %do.body37, %if.then43
  %type55 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13365
  %16 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !13365
  %cmp56 = icmp eq %union.tree_node* %16, null, !dbg !13365
  br i1 %cmp56, label %sw.epilog4433, label %if.then58, !dbg !13368

if.then58:                                        ; preds = %do.body51
  %17 = bitcast %union.tree_node* %16 to i8*, !dbg !13368
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %17) #7, !dbg !13365
  br label %sw.epilog4433, !dbg !13365

do.body67:                                        ; preds = %sw.bb
  %chain70 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13369
  %18 = load %union.tree_node*, %union.tree_node** %chain70, align 8, !dbg !13369
  %cmp71 = icmp eq %union.tree_node* %18, null, !dbg !13369
  br i1 %cmp71, label %do.body81, label %if.then73, !dbg !13372

if.then73:                                        ; preds = %do.body67
  %19 = bitcast %union.tree_node* %18 to i8*, !dbg !13372
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %19) #7, !dbg !13369
  br label %do.body81, !dbg !13369

do.body81:                                        ; preds = %do.body67, %if.then73
  %type85 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13373
  %20 = load %union.tree_node*, %union.tree_node** %type85, align 8, !dbg !13373
  %cmp86 = icmp eq %union.tree_node* %20, null, !dbg !13373
  br i1 %cmp86, label %do.body96, label %if.then88, !dbg !13376

if.then88:                                        ; preds = %do.body81
  %21 = bitcast %union.tree_node* %20 to i8*, !dbg !13376
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %21) #7, !dbg !13373
  br label %do.body96, !dbg !13373

do.body96:                                        ; preds = %do.body81, %if.then88
  %real_cst_ptr = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13377
  %22 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !13377
  %23 = load %struct.real_value*, %struct.real_value** %22, align 8, !dbg !13377
  %cmp99 = icmp eq %struct.real_value* %23, null, !dbg !13377
  br i1 %cmp99, label %sw.epilog4433, label %if.then101, !dbg !13380

if.then101:                                       ; preds = %do.body96
  %24 = bitcast %struct.real_value* %23 to i8*, !dbg !13380
  tail call void @gt_pch_nx_real_value(i8* nonnull %24) #6, !dbg !13377
  br label %sw.epilog4433, !dbg !13377

do.body109:                                       ; preds = %sw.bb
  %chain112 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13381
  %25 = load %union.tree_node*, %union.tree_node** %chain112, align 8, !dbg !13381
  %cmp113 = icmp eq %union.tree_node* %25, null, !dbg !13381
  br i1 %cmp113, label %do.body123, label %if.then115, !dbg !13384

if.then115:                                       ; preds = %do.body109
  %26 = bitcast %union.tree_node* %25 to i8*, !dbg !13384
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %26) #7, !dbg !13381
  br label %do.body123, !dbg !13381

do.body123:                                       ; preds = %do.body109, %if.then115
  %type127 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13385
  %27 = load %union.tree_node*, %union.tree_node** %type127, align 8, !dbg !13385
  %cmp128 = icmp eq %union.tree_node* %27, null, !dbg !13385
  br i1 %cmp128, label %do.body138, label %if.then130, !dbg !13388

if.then130:                                       ; preds = %do.body123
  %28 = bitcast %union.tree_node* %27 to i8*, !dbg !13388
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %28) #7, !dbg !13385
  br label %do.body138, !dbg !13385

do.body138:                                       ; preds = %do.body123, %if.then130
  %fixed_cst_ptr = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13389
  %29 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !13389
  %30 = load %struct.fixed_value*, %struct.fixed_value** %29, align 8, !dbg !13389
  %cmp141 = icmp eq %struct.fixed_value* %30, null, !dbg !13389
  br i1 %cmp141, label %sw.epilog4433, label %if.then143, !dbg !13392

if.then143:                                       ; preds = %do.body138
  %31 = bitcast %struct.fixed_value* %30 to i8*, !dbg !13392
  tail call void @gt_pch_nx_fixed_value(i8* nonnull %31) #6, !dbg !13389
  br label %sw.epilog4433, !dbg !13389

do.body151:                                       ; preds = %sw.bb
  %chain154 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13393
  %32 = load %union.tree_node*, %union.tree_node** %chain154, align 8, !dbg !13393
  %cmp155 = icmp eq %union.tree_node* %32, null, !dbg !13393
  br i1 %cmp155, label %do.body165, label %if.then157, !dbg !13396

if.then157:                                       ; preds = %do.body151
  %33 = bitcast %union.tree_node* %32 to i8*, !dbg !13396
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %33) #7, !dbg !13393
  br label %do.body165, !dbg !13393

do.body165:                                       ; preds = %do.body151, %if.then157
  %type169 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13397
  %34 = load %union.tree_node*, %union.tree_node** %type169, align 8, !dbg !13397
  %cmp170 = icmp eq %union.tree_node* %34, null, !dbg !13397
  br i1 %cmp170, label %do.body180, label %if.then172, !dbg !13400

if.then172:                                       ; preds = %do.body165
  %35 = bitcast %union.tree_node* %34 to i8*, !dbg !13400
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %35) #7, !dbg !13397
  br label %do.body180, !dbg !13397

do.body180:                                       ; preds = %do.body165, %if.then172
  %elements = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13401
  %36 = bitcast i32* %elements to %union.tree_node**, !dbg !13401
  %37 = load %union.tree_node*, %union.tree_node** %36, align 8, !dbg !13401
  %cmp183 = icmp eq %union.tree_node* %37, null, !dbg !13401
  br i1 %cmp183, label %sw.epilog4433, label %if.then185, !dbg !13404

if.then185:                                       ; preds = %do.body180
  %38 = bitcast %union.tree_node* %37 to i8*, !dbg !13404
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %38) #7, !dbg !13401
  br label %sw.epilog4433, !dbg !13401

do.body193:                                       ; preds = %sw.bb
  %chain196 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13405
  %39 = load %union.tree_node*, %union.tree_node** %chain196, align 8, !dbg !13405
  %cmp197 = icmp eq %union.tree_node* %39, null, !dbg !13405
  br i1 %cmp197, label %do.body207, label %if.then199, !dbg !13408

if.then199:                                       ; preds = %do.body193
  %40 = bitcast %union.tree_node* %39 to i8*, !dbg !13408
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %40) #7, !dbg !13405
  br label %do.body207, !dbg !13405

do.body207:                                       ; preds = %do.body193, %if.then199
  %type211 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13409
  %41 = load %union.tree_node*, %union.tree_node** %type211, align 8, !dbg !13409
  %cmp212 = icmp eq %union.tree_node* %41, null, !dbg !13409
  br i1 %cmp212, label %sw.epilog4433, label %if.then214, !dbg !13412

if.then214:                                       ; preds = %do.body207
  %42 = bitcast %union.tree_node* %41 to i8*, !dbg !13412
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %42) #7, !dbg !13409
  br label %sw.epilog4433, !dbg !13409

do.body223:                                       ; preds = %sw.bb
  %chain226 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13413
  %43 = load %union.tree_node*, %union.tree_node** %chain226, align 8, !dbg !13413
  %cmp227 = icmp eq %union.tree_node* %43, null, !dbg !13413
  br i1 %cmp227, label %do.body237, label %if.then229, !dbg !13416

if.then229:                                       ; preds = %do.body223
  %44 = bitcast %union.tree_node* %43 to i8*, !dbg !13416
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %44) #7, !dbg !13413
  br label %do.body237, !dbg !13413

do.body237:                                       ; preds = %do.body223, %if.then229
  %type241 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13417
  %45 = load %union.tree_node*, %union.tree_node** %type241, align 8, !dbg !13417
  %cmp242 = icmp eq %union.tree_node* %45, null, !dbg !13417
  br i1 %cmp242, label %do.body252, label %if.then244, !dbg !13420

if.then244:                                       ; preds = %do.body237
  %46 = bitcast %union.tree_node* %45 to i8*, !dbg !13420
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %46) #7, !dbg !13417
  br label %do.body252, !dbg !13417

do.body252:                                       ; preds = %do.body237, %if.then244
  %real = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13421
  %47 = bitcast i32* %real to %union.tree_node**, !dbg !13421
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !13421
  %cmp255 = icmp eq %union.tree_node* %48, null, !dbg !13421
  br i1 %cmp255, label %do.body264, label %if.then257, !dbg !13424

if.then257:                                       ; preds = %do.body252
  %49 = bitcast %union.tree_node* %48 to i8*, !dbg !13424
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %49) #7, !dbg !13421
  br label %do.body264, !dbg !13421

do.body264:                                       ; preds = %do.body252, %if.then257
  %50 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13425
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !13425
  %cmp267 = icmp eq %union.tree_node* %51, null, !dbg !13425
  br i1 %cmp267, label %sw.epilog4433, label %if.then269, !dbg !13428

if.then269:                                       ; preds = %do.body264
  %52 = bitcast %union.tree_node* %51 to i8*, !dbg !13428
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %52) #7, !dbg !13425
  br label %sw.epilog4433, !dbg !13425

do.body277:                                       ; preds = %sw.bb
  %chain280 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13429
  %53 = load %union.tree_node*, %union.tree_node** %chain280, align 8, !dbg !13429
  %cmp281 = icmp eq %union.tree_node* %53, null, !dbg !13429
  br i1 %cmp281, label %do.body291, label %if.then283, !dbg !13432

if.then283:                                       ; preds = %do.body277
  %54 = bitcast %union.tree_node* %53 to i8*, !dbg !13432
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %54) #7, !dbg !13429
  br label %do.body291, !dbg !13429

do.body291:                                       ; preds = %do.body277, %if.then283
  %type295 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13433
  %55 = load %union.tree_node*, %union.tree_node** %type295, align 8, !dbg !13433
  %cmp296 = icmp eq %union.tree_node* %55, null, !dbg !13433
  br i1 %cmp296, label %do.end305, label %if.then298, !dbg !13436

if.then298:                                       ; preds = %do.body291
  %56 = bitcast %union.tree_node* %55 to i8*, !dbg !13436
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %56) #7, !dbg !13433
  br label %do.end305, !dbg !13433

do.end305:                                        ; preds = %do.body291, %if.then298
  %id = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13437
  %str = bitcast i32* %id to i8**, !dbg !13438
  %57 = load i8*, i8** %str, align 8, !dbg !13438
  tail call void @gt_pch_n_S(i8* %57) #6, !dbg !13439
  br label %sw.epilog4433, !dbg !13440

do.body309:                                       ; preds = %sw.bb
  %chain312 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13441
  %58 = load %union.tree_node*, %union.tree_node** %chain312, align 8, !dbg !13441
  %cmp313 = icmp eq %union.tree_node* %58, null, !dbg !13441
  br i1 %cmp313, label %do.body323, label %if.then315, !dbg !13444

if.then315:                                       ; preds = %do.body309
  %59 = bitcast %union.tree_node* %58 to i8*, !dbg !13444
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %59) #7, !dbg !13441
  br label %do.body323, !dbg !13441

do.body323:                                       ; preds = %do.body309, %if.then315
  %type327 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13445
  %60 = load %union.tree_node*, %union.tree_node** %type327, align 8, !dbg !13445
  %cmp328 = icmp eq %union.tree_node* %60, null, !dbg !13445
  br i1 %cmp328, label %do.body338, label %if.then330, !dbg !13448

if.then330:                                       ; preds = %do.body323
  %61 = bitcast %union.tree_node* %60 to i8*, !dbg !13448
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %61) #7, !dbg !13445
  br label %do.body338, !dbg !13445

do.body338:                                       ; preds = %do.body323, %if.then330
  %name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13449
  %62 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !13449
  %cmp341 = icmp eq %union.tree_node* %62, null, !dbg !13449
  br i1 %cmp341, label %do.body350, label %if.then343, !dbg !13452

if.then343:                                       ; preds = %do.body338
  %63 = bitcast %union.tree_node* %62 to i8*, !dbg !13452
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %63) #7, !dbg !13449
  br label %do.body350, !dbg !13449

do.body350:                                       ; preds = %do.body338, %if.then343
  %context = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13453
  %64 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !13453
  %cmp353 = icmp eq %union.tree_node* %64, null, !dbg !13453
  br i1 %cmp353, label %sw.epilog4433, label %if.then355, !dbg !13456

if.then355:                                       ; preds = %do.body350
  %65 = bitcast %union.tree_node* %64 to i8*, !dbg !13456
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %65) #7, !dbg !13453
  br label %sw.epilog4433, !dbg !13453

do.body363:                                       ; preds = %sw.bb
  %chain367 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13457
  %66 = load %union.tree_node*, %union.tree_node** %chain367, align 8, !dbg !13457
  %cmp368 = icmp eq %union.tree_node* %66, null, !dbg !13457
  br i1 %cmp368, label %do.body379, label %if.then370, !dbg !13460

if.then370:                                       ; preds = %do.body363
  %67 = bitcast %union.tree_node* %66 to i8*, !dbg !13460
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %67) #7, !dbg !13457
  br label %do.body379, !dbg !13457

do.body379:                                       ; preds = %do.body363, %if.then370
  %type384 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13461
  %68 = load %union.tree_node*, %union.tree_node** %type384, align 8, !dbg !13461
  %cmp385 = icmp eq %union.tree_node* %68, null, !dbg !13461
  br i1 %cmp385, label %do.body396, label %if.then387, !dbg !13464

if.then387:                                       ; preds = %do.body379
  %69 = bitcast %union.tree_node* %68 to i8*, !dbg !13464
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %69) #7, !dbg !13461
  br label %do.body396, !dbg !13461

do.body396:                                       ; preds = %do.body379, %if.then387
  %name400 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13465
  %70 = load %union.tree_node*, %union.tree_node** %name400, align 8, !dbg !13465
  %cmp401 = icmp eq %union.tree_node* %70, null, !dbg !13465
  br i1 %cmp401, label %do.body411, label %if.then403, !dbg !13468

if.then403:                                       ; preds = %do.body396
  %71 = bitcast %union.tree_node* %70 to i8*, !dbg !13468
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %71) #7, !dbg !13465
  br label %do.body411, !dbg !13465

do.body411:                                       ; preds = %do.body396, %if.then403
  %context415 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13469
  %72 = load %union.tree_node*, %union.tree_node** %context415, align 8, !dbg !13469
  %cmp416 = icmp eq %union.tree_node* %72, null, !dbg !13469
  br i1 %cmp416, label %do.body426, label %if.then418, !dbg !13472

if.then418:                                       ; preds = %do.body411
  %73 = bitcast %union.tree_node* %72 to i8*, !dbg !13472
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %73) #7, !dbg !13469
  br label %do.body426, !dbg !13469

do.body426:                                       ; preds = %do.body411, %if.then418
  %size = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13473
  %74 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !13473
  %cmp429 = icmp eq %union.tree_node* %74, null, !dbg !13473
  br i1 %cmp429, label %do.body438, label %if.then431, !dbg !13476

if.then431:                                       ; preds = %do.body426
  %75 = bitcast %union.tree_node* %74 to i8*, !dbg !13476
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %75) #7, !dbg !13473
  br label %do.body438, !dbg !13473

do.body438:                                       ; preds = %do.body426, %if.then431
  %size_unit = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13477
  %76 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !13477
  %cmp441 = icmp eq %union.tree_node* %76, null, !dbg !13477
  br i1 %cmp441, label %do.body450, label %if.then443, !dbg !13480

if.then443:                                       ; preds = %do.body438
  %77 = bitcast %union.tree_node* %76 to i8*, !dbg !13480
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %77) #7, !dbg !13477
  br label %do.body450, !dbg !13477

do.body450:                                       ; preds = %do.body438, %if.then443
  %initial = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13481
  %78 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !13481
  %cmp453 = icmp eq %union.tree_node* %78, null, !dbg !13481
  br i1 %cmp453, label %do.body462, label %if.then455, !dbg !13484

if.then455:                                       ; preds = %do.body450
  %79 = bitcast %union.tree_node* %78 to i8*, !dbg !13484
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %79) #7, !dbg !13481
  br label %do.body462, !dbg !13481

do.body462:                                       ; preds = %do.body450, %if.then455
  %attributes = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13485
  %80 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !13485
  %cmp465 = icmp eq %union.tree_node* %80, null, !dbg !13485
  br i1 %cmp465, label %do.body474, label %if.then467, !dbg !13488

if.then467:                                       ; preds = %do.body462
  %81 = bitcast %union.tree_node* %80 to i8*, !dbg !13488
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %81) #7, !dbg !13485
  br label %do.body474, !dbg !13485

do.body474:                                       ; preds = %do.body462, %if.then467
  %abstract_origin = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13489
  %82 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !13489
  %cmp477 = icmp eq %union.tree_node* %82, null, !dbg !13489
  br i1 %cmp477, label %do.body486, label %if.then479, !dbg !13492

if.then479:                                       ; preds = %do.body474
  %83 = bitcast %union.tree_node* %82 to i8*, !dbg !13492
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %83) #7, !dbg !13489
  br label %do.body486, !dbg !13489

do.body486:                                       ; preds = %do.body474, %if.then479
  %lang_specific = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13493
  %84 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8, !dbg !13493
  %cmp489 = icmp eq %struct.lang_decl* %84, null, !dbg !13493
  br i1 %cmp489, label %sw.epilog4433, label %if.then491, !dbg !13496

if.then491:                                       ; preds = %do.body486
  %85 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %84, i64 0, i32 0, !dbg !13496
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %85) #7, !dbg !13493
  br label %sw.epilog4433, !dbg !13493

do.body499:                                       ; preds = %sw.bb
  %chain504 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13497
  %86 = load %union.tree_node*, %union.tree_node** %chain504, align 8, !dbg !13497
  %cmp505 = icmp eq %union.tree_node* %86, null, !dbg !13497
  br i1 %cmp505, label %do.body517, label %if.then507, !dbg !13500

if.then507:                                       ; preds = %do.body499
  %87 = bitcast %union.tree_node* %86 to i8*, !dbg !13500
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %87) #7, !dbg !13497
  br label %do.body517, !dbg !13497

do.body517:                                       ; preds = %do.body499, %if.then507
  %type523 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13501
  %88 = load %union.tree_node*, %union.tree_node** %type523, align 8, !dbg !13501
  %cmp524 = icmp eq %union.tree_node* %88, null, !dbg !13501
  br i1 %cmp524, label %do.body536, label %if.then526, !dbg !13504

if.then526:                                       ; preds = %do.body517
  %89 = bitcast %union.tree_node* %88 to i8*, !dbg !13504
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %89) #7, !dbg !13501
  br label %do.body536, !dbg !13501

do.body536:                                       ; preds = %do.body517, %if.then526
  %name541 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13505
  %90 = load %union.tree_node*, %union.tree_node** %name541, align 8, !dbg !13505
  %cmp542 = icmp eq %union.tree_node* %90, null, !dbg !13505
  br i1 %cmp542, label %do.body553, label %if.then544, !dbg !13508

if.then544:                                       ; preds = %do.body536
  %91 = bitcast %union.tree_node* %90 to i8*, !dbg !13508
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %91) #7, !dbg !13505
  br label %do.body553, !dbg !13505

do.body553:                                       ; preds = %do.body536, %if.then544
  %context558 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13509
  %92 = load %union.tree_node*, %union.tree_node** %context558, align 8, !dbg !13509
  %cmp559 = icmp eq %union.tree_node* %92, null, !dbg !13509
  br i1 %cmp559, label %do.body570, label %if.then561, !dbg !13512

if.then561:                                       ; preds = %do.body553
  %93 = bitcast %union.tree_node* %92 to i8*, !dbg !13512
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %93) #7, !dbg !13509
  br label %do.body570, !dbg !13509

do.body570:                                       ; preds = %do.body553, %if.then561
  %size574 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13513
  %94 = load %union.tree_node*, %union.tree_node** %size574, align 8, !dbg !13513
  %cmp575 = icmp eq %union.tree_node* %94, null, !dbg !13513
  br i1 %cmp575, label %do.body585, label %if.then577, !dbg !13516

if.then577:                                       ; preds = %do.body570
  %95 = bitcast %union.tree_node* %94 to i8*, !dbg !13516
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %95) #7, !dbg !13513
  br label %do.body585, !dbg !13513

do.body585:                                       ; preds = %do.body570, %if.then577
  %size_unit589 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13517
  %96 = load %union.tree_node*, %union.tree_node** %size_unit589, align 8, !dbg !13517
  %cmp590 = icmp eq %union.tree_node* %96, null, !dbg !13517
  br i1 %cmp590, label %do.body600, label %if.then592, !dbg !13520

if.then592:                                       ; preds = %do.body585
  %97 = bitcast %union.tree_node* %96 to i8*, !dbg !13520
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %97) #7, !dbg !13517
  br label %do.body600, !dbg !13517

do.body600:                                       ; preds = %do.body585, %if.then592
  %initial604 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13521
  %98 = load %union.tree_node*, %union.tree_node** %initial604, align 8, !dbg !13521
  %cmp605 = icmp eq %union.tree_node* %98, null, !dbg !13521
  br i1 %cmp605, label %do.body615, label %if.then607, !dbg !13524

if.then607:                                       ; preds = %do.body600
  %99 = bitcast %union.tree_node* %98 to i8*, !dbg !13524
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %99) #7, !dbg !13521
  br label %do.body615, !dbg !13521

do.body615:                                       ; preds = %do.body600, %if.then607
  %attributes619 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13525
  %100 = load %union.tree_node*, %union.tree_node** %attributes619, align 8, !dbg !13525
  %cmp620 = icmp eq %union.tree_node* %100, null, !dbg !13525
  br i1 %cmp620, label %do.body630, label %if.then622, !dbg !13528

if.then622:                                       ; preds = %do.body615
  %101 = bitcast %union.tree_node* %100 to i8*, !dbg !13528
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %101) #7, !dbg !13525
  br label %do.body630, !dbg !13525

do.body630:                                       ; preds = %do.body615, %if.then622
  %abstract_origin634 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13529
  %102 = load %union.tree_node*, %union.tree_node** %abstract_origin634, align 8, !dbg !13529
  %cmp635 = icmp eq %union.tree_node* %102, null, !dbg !13529
  br i1 %cmp635, label %do.body645, label %if.then637, !dbg !13532

if.then637:                                       ; preds = %do.body630
  %103 = bitcast %union.tree_node* %102 to i8*, !dbg !13532
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %103) #7, !dbg !13529
  br label %do.body645, !dbg !13529

do.body645:                                       ; preds = %do.body630, %if.then637
  %lang_specific649 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13533
  %104 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific649, align 8, !dbg !13533
  %cmp650 = icmp eq %struct.lang_decl* %104, null, !dbg !13533
  br i1 %cmp650, label %do.body660, label %if.then652, !dbg !13536

if.then652:                                       ; preds = %do.body645
  %105 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %104, i64 0, i32 0, !dbg !13536
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %105) #7, !dbg !13533
  br label %do.body660, !dbg !13533

do.body660:                                       ; preds = %do.body645, %if.then652
  %rtl = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13537
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13537
  %cmp663 = icmp eq %struct.rtx_def* %106, null, !dbg !13537
  br i1 %cmp663, label %sw.epilog4433, label %if.then665, !dbg !13540

if.then665:                                       ; preds = %do.body660
  %107 = bitcast %struct.rtx_def* %106 to i8*, !dbg !13540
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %107) #6, !dbg !13537
  br label %sw.epilog4433, !dbg !13537

do.body673:                                       ; preds = %sw.bb
  %chain680 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13541
  %108 = load %union.tree_node*, %union.tree_node** %chain680, align 8, !dbg !13541
  %cmp681 = icmp eq %union.tree_node* %108, null, !dbg !13541
  br i1 %cmp681, label %do.body695, label %if.then683, !dbg !13544

if.then683:                                       ; preds = %do.body673
  %109 = bitcast %union.tree_node* %108 to i8*, !dbg !13544
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %109) #7, !dbg !13541
  br label %do.body695, !dbg !13541

do.body695:                                       ; preds = %do.body673, %if.then683
  %type703 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13545
  %110 = load %union.tree_node*, %union.tree_node** %type703, align 8, !dbg !13545
  %cmp704 = icmp eq %union.tree_node* %110, null, !dbg !13545
  br i1 %cmp704, label %do.body718, label %if.then706, !dbg !13548

if.then706:                                       ; preds = %do.body695
  %111 = bitcast %union.tree_node* %110 to i8*, !dbg !13548
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %111) #7, !dbg !13545
  br label %do.body718, !dbg !13545

do.body718:                                       ; preds = %do.body695, %if.then706
  %name725 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13549
  %112 = load %union.tree_node*, %union.tree_node** %name725, align 8, !dbg !13549
  %cmp726 = icmp eq %union.tree_node* %112, null, !dbg !13549
  br i1 %cmp726, label %do.body739, label %if.then728, !dbg !13552

if.then728:                                       ; preds = %do.body718
  %113 = bitcast %union.tree_node* %112 to i8*, !dbg !13552
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %113) #7, !dbg !13549
  br label %do.body739, !dbg !13549

do.body739:                                       ; preds = %do.body718, %if.then728
  %context746 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13553
  %114 = load %union.tree_node*, %union.tree_node** %context746, align 8, !dbg !13553
  %cmp747 = icmp eq %union.tree_node* %114, null, !dbg !13553
  br i1 %cmp747, label %do.body760, label %if.then749, !dbg !13556

if.then749:                                       ; preds = %do.body739
  %115 = bitcast %union.tree_node* %114 to i8*, !dbg !13556
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %115) #7, !dbg !13553
  br label %do.body760, !dbg !13553

do.body760:                                       ; preds = %do.body739, %if.then749
  %size766 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13557
  %116 = load %union.tree_node*, %union.tree_node** %size766, align 8, !dbg !13557
  %cmp767 = icmp eq %union.tree_node* %116, null, !dbg !13557
  br i1 %cmp767, label %do.body779, label %if.then769, !dbg !13560

if.then769:                                       ; preds = %do.body760
  %117 = bitcast %union.tree_node* %116 to i8*, !dbg !13560
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %117) #7, !dbg !13557
  br label %do.body779, !dbg !13557

do.body779:                                       ; preds = %do.body760, %if.then769
  %size_unit785 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13561
  %118 = load %union.tree_node*, %union.tree_node** %size_unit785, align 8, !dbg !13561
  %cmp786 = icmp eq %union.tree_node* %118, null, !dbg !13561
  br i1 %cmp786, label %do.body798, label %if.then788, !dbg !13564

if.then788:                                       ; preds = %do.body779
  %119 = bitcast %union.tree_node* %118 to i8*, !dbg !13564
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %119) #7, !dbg !13561
  br label %do.body798, !dbg !13561

do.body798:                                       ; preds = %do.body779, %if.then788
  %initial804 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13565
  %120 = load %union.tree_node*, %union.tree_node** %initial804, align 8, !dbg !13565
  %cmp805 = icmp eq %union.tree_node* %120, null, !dbg !13565
  br i1 %cmp805, label %do.body817, label %if.then807, !dbg !13568

if.then807:                                       ; preds = %do.body798
  %121 = bitcast %union.tree_node* %120 to i8*, !dbg !13568
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %121) #7, !dbg !13565
  br label %do.body817, !dbg !13565

do.body817:                                       ; preds = %do.body798, %if.then807
  %attributes823 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13569
  %122 = load %union.tree_node*, %union.tree_node** %attributes823, align 8, !dbg !13569
  %cmp824 = icmp eq %union.tree_node* %122, null, !dbg !13569
  br i1 %cmp824, label %do.body836, label %if.then826, !dbg !13572

if.then826:                                       ; preds = %do.body817
  %123 = bitcast %union.tree_node* %122 to i8*, !dbg !13572
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %123) #7, !dbg !13569
  br label %do.body836, !dbg !13569

do.body836:                                       ; preds = %do.body817, %if.then826
  %abstract_origin842 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13573
  %124 = load %union.tree_node*, %union.tree_node** %abstract_origin842, align 8, !dbg !13573
  %cmp843 = icmp eq %union.tree_node* %124, null, !dbg !13573
  br i1 %cmp843, label %do.body855, label %if.then845, !dbg !13576

if.then845:                                       ; preds = %do.body836
  %125 = bitcast %union.tree_node* %124 to i8*, !dbg !13576
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %125) #7, !dbg !13573
  br label %do.body855, !dbg !13573

do.body855:                                       ; preds = %do.body836, %if.then845
  %lang_specific861 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13577
  %126 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific861, align 8, !dbg !13577
  %cmp862 = icmp eq %struct.lang_decl* %126, null, !dbg !13577
  br i1 %cmp862, label %do.body874, label %if.then864, !dbg !13580

if.then864:                                       ; preds = %do.body855
  %127 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %126, i64 0, i32 0, !dbg !13580
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %127) #7, !dbg !13577
  br label %do.body874, !dbg !13577

do.body874:                                       ; preds = %do.body855, %if.then864
  %rtl879 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13581
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtl879, align 8, !dbg !13581
  %cmp880 = icmp eq %struct.rtx_def* %128, null, !dbg !13581
  br i1 %cmp880, label %do.body891, label %if.then882, !dbg !13584

if.then882:                                       ; preds = %do.body874
  %129 = bitcast %struct.rtx_def* %128 to i8*, !dbg !13584
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %129) #6, !dbg !13581
  br label %do.body891, !dbg !13581

do.body891:                                       ; preds = %do.body874, %if.then882
  %assembler_name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13585
  %130 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !13585
  %cmp895 = icmp eq %union.tree_node* %130, null, !dbg !13585
  br i1 %cmp895, label %do.body905, label %if.then897, !dbg !13588

if.then897:                                       ; preds = %do.body891
  %131 = bitcast %union.tree_node* %130 to i8*, !dbg !13588
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %131) #7, !dbg !13585
  br label %do.body905, !dbg !13585

do.body905:                                       ; preds = %do.body891, %if.then897
  %section_name = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13589
  %132 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !13589
  %cmp909 = icmp eq %union.tree_node* %132, null, !dbg !13589
  br i1 %cmp909, label %do.body919, label %if.then911, !dbg !13592

if.then911:                                       ; preds = %do.body905
  %133 = bitcast %union.tree_node* %132 to i8*, !dbg !13592
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %133) #7, !dbg !13589
  br label %do.body919, !dbg !13589

do.body919:                                       ; preds = %do.body905, %if.then911
  %comdat_group = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13593
  %134 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !13593
  %cmp923 = icmp eq %union.tree_node* %134, null, !dbg !13593
  br i1 %cmp923, label %do.body933, label %if.then925, !dbg !13596

if.then925:                                       ; preds = %do.body919
  %135 = bitcast %union.tree_node* %134 to i8*, !dbg !13596
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %135) #7, !dbg !13593
  br label %do.body933, !dbg !13593

do.body933:                                       ; preds = %do.body919, %if.then925
  %saved_tree = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !13597
  %136 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !13597
  %cmp936 = icmp eq %union.tree_node* %136, null, !dbg !13597
  br i1 %cmp936, label %do.body945, label %if.then938, !dbg !13600

if.then938:                                       ; preds = %do.body933
  %137 = bitcast %union.tree_node* %136 to i8*, !dbg !13600
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %137) #7, !dbg !13597
  br label %do.body945, !dbg !13597

do.body945:                                       ; preds = %do.body933, %if.then938
  %arguments = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13601
  %138 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !13601
  %cmp948 = icmp eq %union.tree_node* %138, null, !dbg !13601
  br i1 %cmp948, label %do.body957, label %if.then950, !dbg !13604

if.then950:                                       ; preds = %do.body945
  %139 = bitcast %union.tree_node* %138 to i8*, !dbg !13604
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %139) #7, !dbg !13601
  br label %do.body957, !dbg !13601

do.body957:                                       ; preds = %do.body945, %if.then950
  %result = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13605
  %140 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !13605
  %cmp960 = icmp eq %union.tree_node* %140, null, !dbg !13605
  br i1 %cmp960, label %do.body969, label %if.then962, !dbg !13608

if.then962:                                       ; preds = %do.body957
  %141 = bitcast %union.tree_node* %140 to i8*, !dbg !13608
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %141) #7, !dbg !13605
  br label %do.body969, !dbg !13605

do.body969:                                       ; preds = %do.body957, %if.then962
  %vindex = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !13609
  %142 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !13609
  %cmp972 = icmp eq %union.tree_node* %142, null, !dbg !13609
  br i1 %cmp972, label %sw.epilog4433, label %if.then974, !dbg !13612

if.then974:                                       ; preds = %do.body969
  %143 = bitcast %union.tree_node* %142 to i8*, !dbg !13612
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %143) #7, !dbg !13609
  br label %sw.epilog4433, !dbg !13609

do.body982:                                       ; preds = %sw.bb
  %chain988 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13613
  %144 = load %union.tree_node*, %union.tree_node** %chain988, align 8, !dbg !13613
  %cmp989 = icmp eq %union.tree_node* %144, null, !dbg !13613
  br i1 %cmp989, label %do.body1002, label %if.then991, !dbg !13616

if.then991:                                       ; preds = %do.body982
  %145 = bitcast %union.tree_node* %144 to i8*, !dbg !13616
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %145) #7, !dbg !13613
  br label %do.body1002, !dbg !13613

do.body1002:                                      ; preds = %do.body982, %if.then991
  %type1009 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13617
  %146 = load %union.tree_node*, %union.tree_node** %type1009, align 8, !dbg !13617
  %cmp1010 = icmp eq %union.tree_node* %146, null, !dbg !13617
  br i1 %cmp1010, label %do.body1023, label %if.then1012, !dbg !13620

if.then1012:                                      ; preds = %do.body1002
  %147 = bitcast %union.tree_node* %146 to i8*, !dbg !13620
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %147) #7, !dbg !13617
  br label %do.body1023, !dbg !13617

do.body1023:                                      ; preds = %do.body1002, %if.then1012
  %name1029 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13621
  %148 = load %union.tree_node*, %union.tree_node** %name1029, align 8, !dbg !13621
  %cmp1030 = icmp eq %union.tree_node* %148, null, !dbg !13621
  br i1 %cmp1030, label %do.body1042, label %if.then1032, !dbg !13624

if.then1032:                                      ; preds = %do.body1023
  %149 = bitcast %union.tree_node* %148 to i8*, !dbg !13624
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %149) #7, !dbg !13621
  br label %do.body1042, !dbg !13621

do.body1042:                                      ; preds = %do.body1023, %if.then1032
  %context1048 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13625
  %150 = load %union.tree_node*, %union.tree_node** %context1048, align 8, !dbg !13625
  %cmp1049 = icmp eq %union.tree_node* %150, null, !dbg !13625
  br i1 %cmp1049, label %do.body1061, label %if.then1051, !dbg !13628

if.then1051:                                      ; preds = %do.body1042
  %151 = bitcast %union.tree_node* %150 to i8*, !dbg !13628
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %151) #7, !dbg !13625
  br label %do.body1061, !dbg !13625

do.body1061:                                      ; preds = %do.body1042, %if.then1051
  %size1066 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13629
  %152 = load %union.tree_node*, %union.tree_node** %size1066, align 8, !dbg !13629
  %cmp1067 = icmp eq %union.tree_node* %152, null, !dbg !13629
  br i1 %cmp1067, label %do.body1078, label %if.then1069, !dbg !13632

if.then1069:                                      ; preds = %do.body1061
  %153 = bitcast %union.tree_node* %152 to i8*, !dbg !13632
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %153) #7, !dbg !13629
  br label %do.body1078, !dbg !13629

do.body1078:                                      ; preds = %do.body1061, %if.then1069
  %size_unit1083 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13633
  %154 = load %union.tree_node*, %union.tree_node** %size_unit1083, align 8, !dbg !13633
  %cmp1084 = icmp eq %union.tree_node* %154, null, !dbg !13633
  br i1 %cmp1084, label %do.body1095, label %if.then1086, !dbg !13636

if.then1086:                                      ; preds = %do.body1078
  %155 = bitcast %union.tree_node* %154 to i8*, !dbg !13636
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %155) #7, !dbg !13633
  br label %do.body1095, !dbg !13633

do.body1095:                                      ; preds = %do.body1078, %if.then1086
  %initial1100 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13637
  %156 = load %union.tree_node*, %union.tree_node** %initial1100, align 8, !dbg !13637
  %cmp1101 = icmp eq %union.tree_node* %156, null, !dbg !13637
  br i1 %cmp1101, label %do.body1112, label %if.then1103, !dbg !13640

if.then1103:                                      ; preds = %do.body1095
  %157 = bitcast %union.tree_node* %156 to i8*, !dbg !13640
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %157) #7, !dbg !13637
  br label %do.body1112, !dbg !13637

do.body1112:                                      ; preds = %do.body1095, %if.then1103
  %attributes1117 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13641
  %158 = load %union.tree_node*, %union.tree_node** %attributes1117, align 8, !dbg !13641
  %cmp1118 = icmp eq %union.tree_node* %158, null, !dbg !13641
  br i1 %cmp1118, label %do.body1129, label %if.then1120, !dbg !13644

if.then1120:                                      ; preds = %do.body1112
  %159 = bitcast %union.tree_node* %158 to i8*, !dbg !13644
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %159) #7, !dbg !13641
  br label %do.body1129, !dbg !13641

do.body1129:                                      ; preds = %do.body1112, %if.then1120
  %abstract_origin1134 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13645
  %160 = load %union.tree_node*, %union.tree_node** %abstract_origin1134, align 8, !dbg !13645
  %cmp1135 = icmp eq %union.tree_node* %160, null, !dbg !13645
  br i1 %cmp1135, label %do.body1146, label %if.then1137, !dbg !13648

if.then1137:                                      ; preds = %do.body1129
  %161 = bitcast %union.tree_node* %160 to i8*, !dbg !13648
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %161) #7, !dbg !13645
  br label %do.body1146, !dbg !13645

do.body1146:                                      ; preds = %do.body1129, %if.then1137
  %lang_specific1151 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13649
  %162 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1151, align 8, !dbg !13649
  %cmp1152 = icmp eq %struct.lang_decl* %162, null, !dbg !13649
  br i1 %cmp1152, label %do.body1163, label %if.then1154, !dbg !13652

if.then1154:                                      ; preds = %do.body1146
  %163 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %162, i64 0, i32 0, !dbg !13652
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %163) #7, !dbg !13649
  br label %do.body1163, !dbg !13649

do.body1163:                                      ; preds = %do.body1146, %if.then1154
  %rtl1167 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13653
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtl1167, align 8, !dbg !13653
  %cmp1168 = icmp eq %struct.rtx_def* %164, null, !dbg !13653
  br i1 %cmp1168, label %do.body1178, label %if.then1170, !dbg !13656

if.then1170:                                      ; preds = %do.body1163
  %165 = bitcast %struct.rtx_def* %164 to i8*, !dbg !13656
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %165) #6, !dbg !13653
  br label %do.body1178, !dbg !13653

do.body1178:                                      ; preds = %do.body1163, %if.then1170
  %incoming_rtl = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13657
  %166 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !13657
  %167 = load %struct.rtx_def*, %struct.rtx_def** %166, align 8, !dbg !13657
  %cmp1181 = icmp eq %struct.rtx_def* %167, null, !dbg !13657
  br i1 %cmp1181, label %do.body1190, label %if.then1183, !dbg !13660

if.then1183:                                      ; preds = %do.body1178
  %168 = bitcast %struct.rtx_def* %167 to i8*, !dbg !13660
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %168) #6, !dbg !13657
  br label %do.body1190, !dbg !13657

do.body1190:                                      ; preds = %do.body1178, %if.then1183
  %ann = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13661
  %169 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !13661
  %170 = load %struct.var_ann_d*, %struct.var_ann_d** %169, align 8, !dbg !13661
  %cmp1193 = icmp eq %struct.var_ann_d* %170, null, !dbg !13661
  br i1 %cmp1193, label %sw.epilog4433, label %if.then1195, !dbg !13664

if.then1195:                                      ; preds = %do.body1190
  %171 = bitcast %struct.var_ann_d* %170 to i8*, !dbg !13664
  tail call void @gt_pch_nx_var_ann_d(i8* nonnull %171) #6, !dbg !13661
  br label %sw.epilog4433, !dbg !13661

do.body1203:                                      ; preds = %sw.bb
  %chain1209 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13665
  %172 = load %union.tree_node*, %union.tree_node** %chain1209, align 8, !dbg !13665
  %cmp1210 = icmp eq %union.tree_node* %172, null, !dbg !13665
  br i1 %cmp1210, label %do.body1223, label %if.then1212, !dbg !13668

if.then1212:                                      ; preds = %do.body1203
  %173 = bitcast %union.tree_node* %172 to i8*, !dbg !13668
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %173) #7, !dbg !13665
  br label %do.body1223, !dbg !13665

do.body1223:                                      ; preds = %do.body1203, %if.then1212
  %type1230 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13669
  %174 = load %union.tree_node*, %union.tree_node** %type1230, align 8, !dbg !13669
  %cmp1231 = icmp eq %union.tree_node* %174, null, !dbg !13669
  br i1 %cmp1231, label %do.body1244, label %if.then1233, !dbg !13672

if.then1233:                                      ; preds = %do.body1223
  %175 = bitcast %union.tree_node* %174 to i8*, !dbg !13672
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %175) #7, !dbg !13669
  br label %do.body1244, !dbg !13669

do.body1244:                                      ; preds = %do.body1223, %if.then1233
  %name1250 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13673
  %176 = load %union.tree_node*, %union.tree_node** %name1250, align 8, !dbg !13673
  %cmp1251 = icmp eq %union.tree_node* %176, null, !dbg !13673
  br i1 %cmp1251, label %do.body1263, label %if.then1253, !dbg !13676

if.then1253:                                      ; preds = %do.body1244
  %177 = bitcast %union.tree_node* %176 to i8*, !dbg !13676
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %177) #7, !dbg !13673
  br label %do.body1263, !dbg !13673

do.body1263:                                      ; preds = %do.body1244, %if.then1253
  %context1269 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13677
  %178 = load %union.tree_node*, %union.tree_node** %context1269, align 8, !dbg !13677
  %cmp1270 = icmp eq %union.tree_node* %178, null, !dbg !13677
  br i1 %cmp1270, label %do.body1282, label %if.then1272, !dbg !13680

if.then1272:                                      ; preds = %do.body1263
  %179 = bitcast %union.tree_node* %178 to i8*, !dbg !13680
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %179) #7, !dbg !13677
  br label %do.body1282, !dbg !13677

do.body1282:                                      ; preds = %do.body1263, %if.then1272
  %size1287 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13681
  %180 = load %union.tree_node*, %union.tree_node** %size1287, align 8, !dbg !13681
  %cmp1288 = icmp eq %union.tree_node* %180, null, !dbg !13681
  br i1 %cmp1288, label %do.body1299, label %if.then1290, !dbg !13684

if.then1290:                                      ; preds = %do.body1282
  %181 = bitcast %union.tree_node* %180 to i8*, !dbg !13684
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %181) #7, !dbg !13681
  br label %do.body1299, !dbg !13681

do.body1299:                                      ; preds = %do.body1282, %if.then1290
  %size_unit1304 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13685
  %182 = load %union.tree_node*, %union.tree_node** %size_unit1304, align 8, !dbg !13685
  %cmp1305 = icmp eq %union.tree_node* %182, null, !dbg !13685
  br i1 %cmp1305, label %do.body1316, label %if.then1307, !dbg !13688

if.then1307:                                      ; preds = %do.body1299
  %183 = bitcast %union.tree_node* %182 to i8*, !dbg !13688
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %183) #7, !dbg !13685
  br label %do.body1316, !dbg !13685

do.body1316:                                      ; preds = %do.body1299, %if.then1307
  %initial1321 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13689
  %184 = load %union.tree_node*, %union.tree_node** %initial1321, align 8, !dbg !13689
  %cmp1322 = icmp eq %union.tree_node* %184, null, !dbg !13689
  br i1 %cmp1322, label %do.body1333, label %if.then1324, !dbg !13692

if.then1324:                                      ; preds = %do.body1316
  %185 = bitcast %union.tree_node* %184 to i8*, !dbg !13692
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %185) #7, !dbg !13689
  br label %do.body1333, !dbg !13689

do.body1333:                                      ; preds = %do.body1316, %if.then1324
  %attributes1338 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13693
  %186 = load %union.tree_node*, %union.tree_node** %attributes1338, align 8, !dbg !13693
  %cmp1339 = icmp eq %union.tree_node* %186, null, !dbg !13693
  br i1 %cmp1339, label %do.body1350, label %if.then1341, !dbg !13696

if.then1341:                                      ; preds = %do.body1333
  %187 = bitcast %union.tree_node* %186 to i8*, !dbg !13696
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %187) #7, !dbg !13693
  br label %do.body1350, !dbg !13693

do.body1350:                                      ; preds = %do.body1333, %if.then1341
  %abstract_origin1355 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13697
  %188 = load %union.tree_node*, %union.tree_node** %abstract_origin1355, align 8, !dbg !13697
  %cmp1356 = icmp eq %union.tree_node* %188, null, !dbg !13697
  br i1 %cmp1356, label %do.body1367, label %if.then1358, !dbg !13700

if.then1358:                                      ; preds = %do.body1350
  %189 = bitcast %union.tree_node* %188 to i8*, !dbg !13700
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %189) #7, !dbg !13697
  br label %do.body1367, !dbg !13697

do.body1367:                                      ; preds = %do.body1350, %if.then1358
  %lang_specific1372 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13701
  %190 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1372, align 8, !dbg !13701
  %cmp1373 = icmp eq %struct.lang_decl* %190, null, !dbg !13701
  br i1 %cmp1373, label %do.body1384, label %if.then1375, !dbg !13704

if.then1375:                                      ; preds = %do.body1367
  %191 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %190, i64 0, i32 0, !dbg !13704
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %191) #7, !dbg !13701
  br label %do.body1384, !dbg !13701

do.body1384:                                      ; preds = %do.body1367, %if.then1375
  %rtl1388 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13705
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtl1388, align 8, !dbg !13705
  %cmp1389 = icmp eq %struct.rtx_def* %192, null, !dbg !13705
  br i1 %cmp1389, label %do.body1399, label %if.then1391, !dbg !13708

if.then1391:                                      ; preds = %do.body1384
  %193 = bitcast %struct.rtx_def* %192 to i8*, !dbg !13708
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %193) #6, !dbg !13705
  br label %do.body1399, !dbg !13705

do.body1399:                                      ; preds = %do.body1384, %if.then1391
  %assembler_name1402 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13709
  %194 = load %union.tree_node*, %union.tree_node** %assembler_name1402, align 8, !dbg !13709
  %cmp1403 = icmp eq %union.tree_node* %194, null, !dbg !13709
  br i1 %cmp1403, label %do.body1412, label %if.then1405, !dbg !13712

if.then1405:                                      ; preds = %do.body1399
  %195 = bitcast %union.tree_node* %194 to i8*, !dbg !13712
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %195) #7, !dbg !13709
  br label %do.body1412, !dbg !13709

do.body1412:                                      ; preds = %do.body1399, %if.then1405
  %section_name1415 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13713
  %196 = load %union.tree_node*, %union.tree_node** %section_name1415, align 8, !dbg !13713
  %cmp1416 = icmp eq %union.tree_node* %196, null, !dbg !13713
  br i1 %cmp1416, label %do.body1425, label %if.then1418, !dbg !13716

if.then1418:                                      ; preds = %do.body1412
  %197 = bitcast %union.tree_node* %196 to i8*, !dbg !13716
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %197) #7, !dbg !13713
  br label %do.body1425, !dbg !13713

do.body1425:                                      ; preds = %do.body1412, %if.then1418
  %comdat_group1428 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13717
  %198 = load %union.tree_node*, %union.tree_node** %comdat_group1428, align 8, !dbg !13717
  %cmp1429 = icmp eq %union.tree_node* %198, null, !dbg !13717
  br i1 %cmp1429, label %sw.epilog4433, label %if.then1431, !dbg !13720

if.then1431:                                      ; preds = %do.body1425
  %199 = bitcast %union.tree_node* %198 to i8*, !dbg !13720
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %199) #7, !dbg !13717
  br label %sw.epilog4433, !dbg !13717

do.body1439:                                      ; preds = %sw.bb
  %chain1446 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13721
  %200 = load %union.tree_node*, %union.tree_node** %chain1446, align 8, !dbg !13721
  %cmp1447 = icmp eq %union.tree_node* %200, null, !dbg !13721
  br i1 %cmp1447, label %do.body1461, label %if.then1449, !dbg !13724

if.then1449:                                      ; preds = %do.body1439
  %201 = bitcast %union.tree_node* %200 to i8*, !dbg !13724
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %201) #7, !dbg !13721
  br label %do.body1461, !dbg !13721

do.body1461:                                      ; preds = %do.body1439, %if.then1449
  %type1469 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13725
  %202 = load %union.tree_node*, %union.tree_node** %type1469, align 8, !dbg !13725
  %cmp1470 = icmp eq %union.tree_node* %202, null, !dbg !13725
  br i1 %cmp1470, label %do.body1484, label %if.then1472, !dbg !13728

if.then1472:                                      ; preds = %do.body1461
  %203 = bitcast %union.tree_node* %202 to i8*, !dbg !13728
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %203) #7, !dbg !13725
  br label %do.body1484, !dbg !13725

do.body1484:                                      ; preds = %do.body1461, %if.then1472
  %name1491 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13729
  %204 = load %union.tree_node*, %union.tree_node** %name1491, align 8, !dbg !13729
  %cmp1492 = icmp eq %union.tree_node* %204, null, !dbg !13729
  br i1 %cmp1492, label %do.body1505, label %if.then1494, !dbg !13732

if.then1494:                                      ; preds = %do.body1484
  %205 = bitcast %union.tree_node* %204 to i8*, !dbg !13732
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %205) #7, !dbg !13729
  br label %do.body1505, !dbg !13729

do.body1505:                                      ; preds = %do.body1484, %if.then1494
  %context1512 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13733
  %206 = load %union.tree_node*, %union.tree_node** %context1512, align 8, !dbg !13733
  %cmp1513 = icmp eq %union.tree_node* %206, null, !dbg !13733
  br i1 %cmp1513, label %do.body1526, label %if.then1515, !dbg !13736

if.then1515:                                      ; preds = %do.body1505
  %207 = bitcast %union.tree_node* %206 to i8*, !dbg !13736
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %207) #7, !dbg !13733
  br label %do.body1526, !dbg !13733

do.body1526:                                      ; preds = %do.body1505, %if.then1515
  %size1532 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13737
  %208 = load %union.tree_node*, %union.tree_node** %size1532, align 8, !dbg !13737
  %cmp1533 = icmp eq %union.tree_node* %208, null, !dbg !13737
  br i1 %cmp1533, label %do.body1545, label %if.then1535, !dbg !13740

if.then1535:                                      ; preds = %do.body1526
  %209 = bitcast %union.tree_node* %208 to i8*, !dbg !13740
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %209) #7, !dbg !13737
  br label %do.body1545, !dbg !13737

do.body1545:                                      ; preds = %do.body1526, %if.then1535
  %size_unit1551 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13741
  %210 = load %union.tree_node*, %union.tree_node** %size_unit1551, align 8, !dbg !13741
  %cmp1552 = icmp eq %union.tree_node* %210, null, !dbg !13741
  br i1 %cmp1552, label %do.body1564, label %if.then1554, !dbg !13744

if.then1554:                                      ; preds = %do.body1545
  %211 = bitcast %union.tree_node* %210 to i8*, !dbg !13744
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %211) #7, !dbg !13741
  br label %do.body1564, !dbg !13741

do.body1564:                                      ; preds = %do.body1545, %if.then1554
  %initial1570 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13745
  %212 = load %union.tree_node*, %union.tree_node** %initial1570, align 8, !dbg !13745
  %cmp1571 = icmp eq %union.tree_node* %212, null, !dbg !13745
  br i1 %cmp1571, label %do.body1583, label %if.then1573, !dbg !13748

if.then1573:                                      ; preds = %do.body1564
  %213 = bitcast %union.tree_node* %212 to i8*, !dbg !13748
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %213) #7, !dbg !13745
  br label %do.body1583, !dbg !13745

do.body1583:                                      ; preds = %do.body1564, %if.then1573
  %attributes1589 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13749
  %214 = load %union.tree_node*, %union.tree_node** %attributes1589, align 8, !dbg !13749
  %cmp1590 = icmp eq %union.tree_node* %214, null, !dbg !13749
  br i1 %cmp1590, label %do.body1602, label %if.then1592, !dbg !13752

if.then1592:                                      ; preds = %do.body1583
  %215 = bitcast %union.tree_node* %214 to i8*, !dbg !13752
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %215) #7, !dbg !13749
  br label %do.body1602, !dbg !13749

do.body1602:                                      ; preds = %do.body1583, %if.then1592
  %abstract_origin1608 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13753
  %216 = load %union.tree_node*, %union.tree_node** %abstract_origin1608, align 8, !dbg !13753
  %cmp1609 = icmp eq %union.tree_node* %216, null, !dbg !13753
  br i1 %cmp1609, label %do.body1621, label %if.then1611, !dbg !13756

if.then1611:                                      ; preds = %do.body1602
  %217 = bitcast %union.tree_node* %216 to i8*, !dbg !13756
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %217) #7, !dbg !13753
  br label %do.body1621, !dbg !13753

do.body1621:                                      ; preds = %do.body1602, %if.then1611
  %lang_specific1627 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13757
  %218 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1627, align 8, !dbg !13757
  %cmp1628 = icmp eq %struct.lang_decl* %218, null, !dbg !13757
  br i1 %cmp1628, label %do.body1640, label %if.then1630, !dbg !13760

if.then1630:                                      ; preds = %do.body1621
  %219 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %218, i64 0, i32 0, !dbg !13760
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %219) #7, !dbg !13757
  br label %do.body1640, !dbg !13757

do.body1640:                                      ; preds = %do.body1621, %if.then1630
  %rtl1645 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13761
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rtl1645, align 8, !dbg !13761
  %cmp1646 = icmp eq %struct.rtx_def* %220, null, !dbg !13761
  br i1 %cmp1646, label %do.body1657, label %if.then1648, !dbg !13764

if.then1648:                                      ; preds = %do.body1640
  %221 = bitcast %struct.rtx_def* %220 to i8*, !dbg !13764
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %221) #6, !dbg !13761
  br label %do.body1657, !dbg !13761

do.body1657:                                      ; preds = %do.body1640, %if.then1648
  %assembler_name1661 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13765
  %222 = load %union.tree_node*, %union.tree_node** %assembler_name1661, align 8, !dbg !13765
  %cmp1662 = icmp eq %union.tree_node* %222, null, !dbg !13765
  br i1 %cmp1662, label %do.body1672, label %if.then1664, !dbg !13768

if.then1664:                                      ; preds = %do.body1657
  %223 = bitcast %union.tree_node* %222 to i8*, !dbg !13768
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %223) #7, !dbg !13765
  br label %do.body1672, !dbg !13765

do.body1672:                                      ; preds = %do.body1657, %if.then1664
  %section_name1676 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13769
  %224 = load %union.tree_node*, %union.tree_node** %section_name1676, align 8, !dbg !13769
  %cmp1677 = icmp eq %union.tree_node* %224, null, !dbg !13769
  br i1 %cmp1677, label %do.body1687, label %if.then1679, !dbg !13772

if.then1679:                                      ; preds = %do.body1672
  %225 = bitcast %union.tree_node* %224 to i8*, !dbg !13772
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %225) #7, !dbg !13769
  br label %do.body1687, !dbg !13769

do.body1687:                                      ; preds = %do.body1672, %if.then1679
  %comdat_group1691 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13773
  %226 = load %union.tree_node*, %union.tree_node** %comdat_group1691, align 8, !dbg !13773
  %cmp1692 = icmp eq %union.tree_node* %226, null, !dbg !13773
  br i1 %cmp1692, label %do.body1702, label %if.then1694, !dbg !13776

if.then1694:                                      ; preds = %do.body1687
  %227 = bitcast %union.tree_node* %226 to i8*, !dbg !13776
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %227) #7, !dbg !13773
  br label %do.body1702, !dbg !13773

do.body1702:                                      ; preds = %do.body1687, %if.then1694
  %ann1705 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !13777
  %228 = bitcast %union.tree_node** %ann1705 to %struct.var_ann_d**, !dbg !13777
  %229 = load %struct.var_ann_d*, %struct.var_ann_d** %228, align 8, !dbg !13777
  %cmp1706 = icmp eq %struct.var_ann_d* %229, null, !dbg !13777
  br i1 %cmp1706, label %sw.epilog4433, label %if.then1708, !dbg !13780

if.then1708:                                      ; preds = %do.body1702
  %230 = bitcast %struct.var_ann_d* %229 to i8*, !dbg !13780
  tail call void @gt_pch_nx_var_ann_d(i8* nonnull %230) #6, !dbg !13777
  br label %sw.epilog4433, !dbg !13777

do.body1716:                                      ; preds = %sw.bb
  %chain1721 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13781
  %231 = load %union.tree_node*, %union.tree_node** %chain1721, align 8, !dbg !13781
  %cmp1722 = icmp eq %union.tree_node* %231, null, !dbg !13781
  br i1 %cmp1722, label %do.body1734, label %if.then1724, !dbg !13784

if.then1724:                                      ; preds = %do.body1716
  %232 = bitcast %union.tree_node* %231 to i8*, !dbg !13784
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %232) #7, !dbg !13781
  br label %do.body1734, !dbg !13781

do.body1734:                                      ; preds = %do.body1716, %if.then1724
  %type1740 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13785
  %233 = load %union.tree_node*, %union.tree_node** %type1740, align 8, !dbg !13785
  %cmp1741 = icmp eq %union.tree_node* %233, null, !dbg !13785
  br i1 %cmp1741, label %do.body1753, label %if.then1743, !dbg !13788

if.then1743:                                      ; preds = %do.body1734
  %234 = bitcast %union.tree_node* %233 to i8*, !dbg !13788
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %234) #7, !dbg !13785
  br label %do.body1753, !dbg !13785

do.body1753:                                      ; preds = %do.body1734, %if.then1743
  %name1758 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13789
  %235 = load %union.tree_node*, %union.tree_node** %name1758, align 8, !dbg !13789
  %cmp1759 = icmp eq %union.tree_node* %235, null, !dbg !13789
  br i1 %cmp1759, label %do.body1770, label %if.then1761, !dbg !13792

if.then1761:                                      ; preds = %do.body1753
  %236 = bitcast %union.tree_node* %235 to i8*, !dbg !13792
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %236) #7, !dbg !13789
  br label %do.body1770, !dbg !13789

do.body1770:                                      ; preds = %do.body1753, %if.then1761
  %context1775 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13793
  %237 = load %union.tree_node*, %union.tree_node** %context1775, align 8, !dbg !13793
  %cmp1776 = icmp eq %union.tree_node* %237, null, !dbg !13793
  br i1 %cmp1776, label %do.body1787, label %if.then1778, !dbg !13796

if.then1778:                                      ; preds = %do.body1770
  %238 = bitcast %union.tree_node* %237 to i8*, !dbg !13796
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %238) #7, !dbg !13793
  br label %do.body1787, !dbg !13793

do.body1787:                                      ; preds = %do.body1770, %if.then1778
  %size1791 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13797
  %239 = load %union.tree_node*, %union.tree_node** %size1791, align 8, !dbg !13797
  %cmp1792 = icmp eq %union.tree_node* %239, null, !dbg !13797
  br i1 %cmp1792, label %do.body1802, label %if.then1794, !dbg !13800

if.then1794:                                      ; preds = %do.body1787
  %240 = bitcast %union.tree_node* %239 to i8*, !dbg !13800
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %240) #7, !dbg !13797
  br label %do.body1802, !dbg !13797

do.body1802:                                      ; preds = %do.body1787, %if.then1794
  %size_unit1806 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13801
  %241 = load %union.tree_node*, %union.tree_node** %size_unit1806, align 8, !dbg !13801
  %cmp1807 = icmp eq %union.tree_node* %241, null, !dbg !13801
  br i1 %cmp1807, label %do.body1817, label %if.then1809, !dbg !13804

if.then1809:                                      ; preds = %do.body1802
  %242 = bitcast %union.tree_node* %241 to i8*, !dbg !13804
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %242) #7, !dbg !13801
  br label %do.body1817, !dbg !13801

do.body1817:                                      ; preds = %do.body1802, %if.then1809
  %initial1821 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13805
  %243 = load %union.tree_node*, %union.tree_node** %initial1821, align 8, !dbg !13805
  %cmp1822 = icmp eq %union.tree_node* %243, null, !dbg !13805
  br i1 %cmp1822, label %do.body1832, label %if.then1824, !dbg !13808

if.then1824:                                      ; preds = %do.body1817
  %244 = bitcast %union.tree_node* %243 to i8*, !dbg !13808
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %244) #7, !dbg !13805
  br label %do.body1832, !dbg !13805

do.body1832:                                      ; preds = %do.body1817, %if.then1824
  %attributes1836 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13809
  %245 = load %union.tree_node*, %union.tree_node** %attributes1836, align 8, !dbg !13809
  %cmp1837 = icmp eq %union.tree_node* %245, null, !dbg !13809
  br i1 %cmp1837, label %do.body1847, label %if.then1839, !dbg !13812

if.then1839:                                      ; preds = %do.body1832
  %246 = bitcast %union.tree_node* %245 to i8*, !dbg !13812
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %246) #7, !dbg !13809
  br label %do.body1847, !dbg !13809

do.body1847:                                      ; preds = %do.body1832, %if.then1839
  %abstract_origin1851 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13813
  %247 = load %union.tree_node*, %union.tree_node** %abstract_origin1851, align 8, !dbg !13813
  %cmp1852 = icmp eq %union.tree_node* %247, null, !dbg !13813
  br i1 %cmp1852, label %do.body1862, label %if.then1854, !dbg !13816

if.then1854:                                      ; preds = %do.body1847
  %248 = bitcast %union.tree_node* %247 to i8*, !dbg !13816
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %248) #7, !dbg !13813
  br label %do.body1862, !dbg !13813

do.body1862:                                      ; preds = %do.body1847, %if.then1854
  %lang_specific1866 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13817
  %249 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1866, align 8, !dbg !13817
  %cmp1867 = icmp eq %struct.lang_decl* %249, null, !dbg !13817
  br i1 %cmp1867, label %do.body1877, label %if.then1869, !dbg !13820

if.then1869:                                      ; preds = %do.body1862
  %250 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %249, i64 0, i32 0, !dbg !13820
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %250) #7, !dbg !13817
  br label %do.body1877, !dbg !13817

do.body1877:                                      ; preds = %do.body1862, %if.then1869
  %offset = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13821
  %251 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !13821
  %252 = load %union.tree_node*, %union.tree_node** %251, align 8, !dbg !13821
  %cmp1880 = icmp eq %union.tree_node* %252, null, !dbg !13821
  br i1 %cmp1880, label %do.body1889, label %if.then1882, !dbg !13824

if.then1882:                                      ; preds = %do.body1877
  %253 = bitcast %union.tree_node* %252 to i8*, !dbg !13824
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %253) #7, !dbg !13821
  br label %do.body1889, !dbg !13821

do.body1889:                                      ; preds = %do.body1877, %if.then1882
  %254 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13825
  %255 = load %union.tree_node*, %union.tree_node** %254, align 8, !dbg !13825
  %cmp1892 = icmp eq %union.tree_node* %255, null, !dbg !13825
  br i1 %cmp1892, label %do.body1901, label %if.then1894, !dbg !13828

if.then1894:                                      ; preds = %do.body1889
  %256 = bitcast %union.tree_node* %255 to i8*, !dbg !13828
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %256) #7, !dbg !13825
  br label %do.body1901, !dbg !13825

do.body1901:                                      ; preds = %do.body1889, %if.then1894
  %257 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13829
  %258 = load %union.tree_node*, %union.tree_node** %257, align 8, !dbg !13829
  %cmp1904 = icmp eq %union.tree_node* %258, null, !dbg !13829
  br i1 %cmp1904, label %do.body1913, label %if.then1906, !dbg !13832

if.then1906:                                      ; preds = %do.body1901
  %259 = bitcast %union.tree_node* %258 to i8*, !dbg !13832
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %259) #7, !dbg !13829
  br label %do.body1913, !dbg !13829

do.body1913:                                      ; preds = %do.body1901, %if.then1906
  %260 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13833
  %261 = load %union.tree_node*, %union.tree_node** %260, align 8, !dbg !13833
  %cmp1916 = icmp eq %union.tree_node* %261, null, !dbg !13833
  br i1 %cmp1916, label %do.body1925, label %if.then1918, !dbg !13836

if.then1918:                                      ; preds = %do.body1913
  %262 = bitcast %union.tree_node* %261 to i8*, !dbg !13836
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %262) #7, !dbg !13833
  br label %do.body1925, !dbg !13833

do.body1925:                                      ; preds = %do.body1913, %if.then1918
  %fcontext = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13837
  %263 = bitcast i24* %fcontext to %union.tree_node**, !dbg !13837
  %264 = load %union.tree_node*, %union.tree_node** %263, align 8, !dbg !13837
  %cmp1928 = icmp eq %union.tree_node* %264, null, !dbg !13837
  br i1 %cmp1928, label %sw.epilog4433, label %if.then1930, !dbg !13840

if.then1930:                                      ; preds = %do.body1925
  %265 = bitcast %union.tree_node* %264 to i8*, !dbg !13840
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %265) #7, !dbg !13837
  br label %sw.epilog4433, !dbg !13837

do.body1938:                                      ; preds = %sw.bb
  %chain1944 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13841
  %266 = load %union.tree_node*, %union.tree_node** %chain1944, align 8, !dbg !13841
  %cmp1945 = icmp eq %union.tree_node* %266, null, !dbg !13841
  br i1 %cmp1945, label %do.body1958, label %if.then1947, !dbg !13844

if.then1947:                                      ; preds = %do.body1938
  %267 = bitcast %union.tree_node* %266 to i8*, !dbg !13844
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %267) #7, !dbg !13841
  br label %do.body1958, !dbg !13841

do.body1958:                                      ; preds = %do.body1938, %if.then1947
  %type1965 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13845
  %268 = load %union.tree_node*, %union.tree_node** %type1965, align 8, !dbg !13845
  %cmp1966 = icmp eq %union.tree_node* %268, null, !dbg !13845
  br i1 %cmp1966, label %do.body1979, label %if.then1968, !dbg !13848

if.then1968:                                      ; preds = %do.body1958
  %269 = bitcast %union.tree_node* %268 to i8*, !dbg !13848
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %269) #7, !dbg !13845
  br label %do.body1979, !dbg !13845

do.body1979:                                      ; preds = %do.body1958, %if.then1968
  %name1985 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13849
  %270 = load %union.tree_node*, %union.tree_node** %name1985, align 8, !dbg !13849
  %cmp1986 = icmp eq %union.tree_node* %270, null, !dbg !13849
  br i1 %cmp1986, label %do.body1998, label %if.then1988, !dbg !13852

if.then1988:                                      ; preds = %do.body1979
  %271 = bitcast %union.tree_node* %270 to i8*, !dbg !13852
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %271) #7, !dbg !13849
  br label %do.body1998, !dbg !13849

do.body1998:                                      ; preds = %do.body1979, %if.then1988
  %context2004 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13853
  %272 = load %union.tree_node*, %union.tree_node** %context2004, align 8, !dbg !13853
  %cmp2005 = icmp eq %union.tree_node* %272, null, !dbg !13853
  br i1 %cmp2005, label %do.body2017, label %if.then2007, !dbg !13856

if.then2007:                                      ; preds = %do.body1998
  %273 = bitcast %union.tree_node* %272 to i8*, !dbg !13856
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %273) #7, !dbg !13853
  br label %do.body2017, !dbg !13853

do.body2017:                                      ; preds = %do.body1998, %if.then2007
  %size2022 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13857
  %274 = load %union.tree_node*, %union.tree_node** %size2022, align 8, !dbg !13857
  %cmp2023 = icmp eq %union.tree_node* %274, null, !dbg !13857
  br i1 %cmp2023, label %do.body2034, label %if.then2025, !dbg !13860

if.then2025:                                      ; preds = %do.body2017
  %275 = bitcast %union.tree_node* %274 to i8*, !dbg !13860
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %275) #7, !dbg !13857
  br label %do.body2034, !dbg !13857

do.body2034:                                      ; preds = %do.body2017, %if.then2025
  %size_unit2039 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13861
  %276 = load %union.tree_node*, %union.tree_node** %size_unit2039, align 8, !dbg !13861
  %cmp2040 = icmp eq %union.tree_node* %276, null, !dbg !13861
  br i1 %cmp2040, label %do.body2051, label %if.then2042, !dbg !13864

if.then2042:                                      ; preds = %do.body2034
  %277 = bitcast %union.tree_node* %276 to i8*, !dbg !13864
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %277) #7, !dbg !13861
  br label %do.body2051, !dbg !13861

do.body2051:                                      ; preds = %do.body2034, %if.then2042
  %initial2056 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13865
  %278 = load %union.tree_node*, %union.tree_node** %initial2056, align 8, !dbg !13865
  %cmp2057 = icmp eq %union.tree_node* %278, null, !dbg !13865
  br i1 %cmp2057, label %do.body2068, label %if.then2059, !dbg !13868

if.then2059:                                      ; preds = %do.body2051
  %279 = bitcast %union.tree_node* %278 to i8*, !dbg !13868
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %279) #7, !dbg !13865
  br label %do.body2068, !dbg !13865

do.body2068:                                      ; preds = %do.body2051, %if.then2059
  %attributes2073 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13869
  %280 = load %union.tree_node*, %union.tree_node** %attributes2073, align 8, !dbg !13869
  %cmp2074 = icmp eq %union.tree_node* %280, null, !dbg !13869
  br i1 %cmp2074, label %do.body2085, label %if.then2076, !dbg !13872

if.then2076:                                      ; preds = %do.body2068
  %281 = bitcast %union.tree_node* %280 to i8*, !dbg !13872
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %281) #7, !dbg !13869
  br label %do.body2085, !dbg !13869

do.body2085:                                      ; preds = %do.body2068, %if.then2076
  %abstract_origin2090 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13873
  %282 = load %union.tree_node*, %union.tree_node** %abstract_origin2090, align 8, !dbg !13873
  %cmp2091 = icmp eq %union.tree_node* %282, null, !dbg !13873
  br i1 %cmp2091, label %do.body2102, label %if.then2093, !dbg !13876

if.then2093:                                      ; preds = %do.body2085
  %283 = bitcast %union.tree_node* %282 to i8*, !dbg !13876
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %283) #7, !dbg !13873
  br label %do.body2102, !dbg !13873

do.body2102:                                      ; preds = %do.body2085, %if.then2093
  %lang_specific2107 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13877
  %284 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2107, align 8, !dbg !13877
  %cmp2108 = icmp eq %struct.lang_decl* %284, null, !dbg !13877
  br i1 %cmp2108, label %do.body2119, label %if.then2110, !dbg !13880

if.then2110:                                      ; preds = %do.body2102
  %285 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %284, i64 0, i32 0, !dbg !13880
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %285) #7, !dbg !13877
  br label %do.body2119, !dbg !13877

do.body2119:                                      ; preds = %do.body2102, %if.then2110
  %rtl2123 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13881
  %286 = load %struct.rtx_def*, %struct.rtx_def** %rtl2123, align 8, !dbg !13881
  %cmp2124 = icmp eq %struct.rtx_def* %286, null, !dbg !13881
  br i1 %cmp2124, label %sw.epilog4433, label %if.then2126, !dbg !13884

if.then2126:                                      ; preds = %do.body2119
  %287 = bitcast %struct.rtx_def* %286 to i8*, !dbg !13884
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %287) #6, !dbg !13881
  br label %sw.epilog4433, !dbg !13881

do.body2135:                                      ; preds = %sw.bb
  %chain2141 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13885
  %288 = load %union.tree_node*, %union.tree_node** %chain2141, align 8, !dbg !13885
  %cmp2142 = icmp eq %union.tree_node* %288, null, !dbg !13885
  br i1 %cmp2142, label %do.body2155, label %if.then2144, !dbg !13888

if.then2144:                                      ; preds = %do.body2135
  %289 = bitcast %union.tree_node* %288 to i8*, !dbg !13888
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %289) #7, !dbg !13885
  br label %do.body2155, !dbg !13885

do.body2155:                                      ; preds = %do.body2135, %if.then2144
  %type2162 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13889
  %290 = load %union.tree_node*, %union.tree_node** %type2162, align 8, !dbg !13889
  %cmp2163 = icmp eq %union.tree_node* %290, null, !dbg !13889
  br i1 %cmp2163, label %do.body2176, label %if.then2165, !dbg !13892

if.then2165:                                      ; preds = %do.body2155
  %291 = bitcast %union.tree_node* %290 to i8*, !dbg !13892
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %291) #7, !dbg !13889
  br label %do.body2176, !dbg !13889

do.body2176:                                      ; preds = %do.body2155, %if.then2165
  %name2182 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13893
  %292 = load %union.tree_node*, %union.tree_node** %name2182, align 8, !dbg !13893
  %cmp2183 = icmp eq %union.tree_node* %292, null, !dbg !13893
  br i1 %cmp2183, label %do.body2195, label %if.then2185, !dbg !13896

if.then2185:                                      ; preds = %do.body2176
  %293 = bitcast %union.tree_node* %292 to i8*, !dbg !13896
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %293) #7, !dbg !13893
  br label %do.body2195, !dbg !13893

do.body2195:                                      ; preds = %do.body2176, %if.then2185
  %context2201 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13897
  %294 = load %union.tree_node*, %union.tree_node** %context2201, align 8, !dbg !13897
  %cmp2202 = icmp eq %union.tree_node* %294, null, !dbg !13897
  br i1 %cmp2202, label %do.body2214, label %if.then2204, !dbg !13900

if.then2204:                                      ; preds = %do.body2195
  %295 = bitcast %union.tree_node* %294 to i8*, !dbg !13900
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %295) #7, !dbg !13897
  br label %do.body2214, !dbg !13897

do.body2214:                                      ; preds = %do.body2195, %if.then2204
  %size2219 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13901
  %296 = load %union.tree_node*, %union.tree_node** %size2219, align 8, !dbg !13901
  %cmp2220 = icmp eq %union.tree_node* %296, null, !dbg !13901
  br i1 %cmp2220, label %do.body2231, label %if.then2222, !dbg !13904

if.then2222:                                      ; preds = %do.body2214
  %297 = bitcast %union.tree_node* %296 to i8*, !dbg !13904
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %297) #7, !dbg !13901
  br label %do.body2231, !dbg !13901

do.body2231:                                      ; preds = %do.body2214, %if.then2222
  %size_unit2236 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13905
  %298 = load %union.tree_node*, %union.tree_node** %size_unit2236, align 8, !dbg !13905
  %cmp2237 = icmp eq %union.tree_node* %298, null, !dbg !13905
  br i1 %cmp2237, label %do.body2248, label %if.then2239, !dbg !13908

if.then2239:                                      ; preds = %do.body2231
  %299 = bitcast %union.tree_node* %298 to i8*, !dbg !13908
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %299) #7, !dbg !13905
  br label %do.body2248, !dbg !13905

do.body2248:                                      ; preds = %do.body2231, %if.then2239
  %initial2253 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13909
  %300 = load %union.tree_node*, %union.tree_node** %initial2253, align 8, !dbg !13909
  %cmp2254 = icmp eq %union.tree_node* %300, null, !dbg !13909
  br i1 %cmp2254, label %do.body2265, label %if.then2256, !dbg !13912

if.then2256:                                      ; preds = %do.body2248
  %301 = bitcast %union.tree_node* %300 to i8*, !dbg !13912
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %301) #7, !dbg !13909
  br label %do.body2265, !dbg !13909

do.body2265:                                      ; preds = %do.body2248, %if.then2256
  %attributes2270 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13913
  %302 = load %union.tree_node*, %union.tree_node** %attributes2270, align 8, !dbg !13913
  %cmp2271 = icmp eq %union.tree_node* %302, null, !dbg !13913
  br i1 %cmp2271, label %do.body2282, label %if.then2273, !dbg !13916

if.then2273:                                      ; preds = %do.body2265
  %303 = bitcast %union.tree_node* %302 to i8*, !dbg !13916
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %303) #7, !dbg !13913
  br label %do.body2282, !dbg !13913

do.body2282:                                      ; preds = %do.body2265, %if.then2273
  %abstract_origin2287 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13917
  %304 = load %union.tree_node*, %union.tree_node** %abstract_origin2287, align 8, !dbg !13917
  %cmp2288 = icmp eq %union.tree_node* %304, null, !dbg !13917
  br i1 %cmp2288, label %do.body2299, label %if.then2290, !dbg !13920

if.then2290:                                      ; preds = %do.body2282
  %305 = bitcast %union.tree_node* %304 to i8*, !dbg !13920
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %305) #7, !dbg !13917
  br label %do.body2299, !dbg !13917

do.body2299:                                      ; preds = %do.body2282, %if.then2290
  %lang_specific2304 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13921
  %306 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2304, align 8, !dbg !13921
  %cmp2305 = icmp eq %struct.lang_decl* %306, null, !dbg !13921
  br i1 %cmp2305, label %do.body2316, label %if.then2307, !dbg !13924

if.then2307:                                      ; preds = %do.body2299
  %307 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %306, i64 0, i32 0, !dbg !13924
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %307) #7, !dbg !13921
  br label %do.body2316, !dbg !13921

do.body2316:                                      ; preds = %do.body2299, %if.then2307
  %rtl2320 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13925
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtl2320, align 8, !dbg !13925
  %cmp2321 = icmp eq %struct.rtx_def* %308, null, !dbg !13925
  br i1 %cmp2321, label %do.body2331, label %if.then2323, !dbg !13928

if.then2323:                                      ; preds = %do.body2316
  %309 = bitcast %struct.rtx_def* %308 to i8*, !dbg !13928
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %309) #6, !dbg !13925
  br label %do.body2331, !dbg !13925

do.body2331:                                      ; preds = %do.body2316, %if.then2323
  %ann2334 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13929
  %310 = bitcast %union.tree_node** %ann2334 to %struct.var_ann_d**, !dbg !13929
  %311 = load %struct.var_ann_d*, %struct.var_ann_d** %310, align 8, !dbg !13929
  %cmp2335 = icmp eq %struct.var_ann_d* %311, null, !dbg !13929
  br i1 %cmp2335, label %sw.epilog4433, label %if.then2337, !dbg !13932

if.then2337:                                      ; preds = %do.body2331
  %312 = bitcast %struct.var_ann_d* %311 to i8*, !dbg !13932
  tail call void @gt_pch_nx_var_ann_d(i8* nonnull %312) #6, !dbg !13929
  br label %sw.epilog4433, !dbg !13929

do.body2345:                                      ; preds = %sw.bb
  %chain2351 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13933
  %313 = load %union.tree_node*, %union.tree_node** %chain2351, align 8, !dbg !13933
  %cmp2352 = icmp eq %union.tree_node* %313, null, !dbg !13933
  br i1 %cmp2352, label %do.body2365, label %if.then2354, !dbg !13936

if.then2354:                                      ; preds = %do.body2345
  %314 = bitcast %union.tree_node* %313 to i8*, !dbg !13936
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %314) #7, !dbg !13933
  br label %do.body2365, !dbg !13933

do.body2365:                                      ; preds = %do.body2345, %if.then2354
  %type2372 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13937
  %315 = load %union.tree_node*, %union.tree_node** %type2372, align 8, !dbg !13937
  %cmp2373 = icmp eq %union.tree_node* %315, null, !dbg !13937
  br i1 %cmp2373, label %do.body2386, label %if.then2375, !dbg !13940

if.then2375:                                      ; preds = %do.body2365
  %316 = bitcast %union.tree_node* %315 to i8*, !dbg !13940
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %316) #7, !dbg !13937
  br label %do.body2386, !dbg !13937

do.body2386:                                      ; preds = %do.body2365, %if.then2375
  %name2392 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13941
  %317 = load %union.tree_node*, %union.tree_node** %name2392, align 8, !dbg !13941
  %cmp2393 = icmp eq %union.tree_node* %317, null, !dbg !13941
  br i1 %cmp2393, label %do.body2405, label %if.then2395, !dbg !13944

if.then2395:                                      ; preds = %do.body2386
  %318 = bitcast %union.tree_node* %317 to i8*, !dbg !13944
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %318) #7, !dbg !13941
  br label %do.body2405, !dbg !13941

do.body2405:                                      ; preds = %do.body2386, %if.then2395
  %context2411 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13945
  %319 = load %union.tree_node*, %union.tree_node** %context2411, align 8, !dbg !13945
  %cmp2412 = icmp eq %union.tree_node* %319, null, !dbg !13945
  br i1 %cmp2412, label %do.body2424, label %if.then2414, !dbg !13948

if.then2414:                                      ; preds = %do.body2405
  %320 = bitcast %union.tree_node* %319 to i8*, !dbg !13948
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %320) #7, !dbg !13945
  br label %do.body2424, !dbg !13945

do.body2424:                                      ; preds = %do.body2405, %if.then2414
  %size2429 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13949
  %321 = load %union.tree_node*, %union.tree_node** %size2429, align 8, !dbg !13949
  %cmp2430 = icmp eq %union.tree_node* %321, null, !dbg !13949
  br i1 %cmp2430, label %do.body2441, label %if.then2432, !dbg !13952

if.then2432:                                      ; preds = %do.body2424
  %322 = bitcast %union.tree_node* %321 to i8*, !dbg !13952
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %322) #7, !dbg !13949
  br label %do.body2441, !dbg !13949

do.body2441:                                      ; preds = %do.body2424, %if.then2432
  %size_unit2446 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13953
  %323 = load %union.tree_node*, %union.tree_node** %size_unit2446, align 8, !dbg !13953
  %cmp2447 = icmp eq %union.tree_node* %323, null, !dbg !13953
  br i1 %cmp2447, label %do.body2458, label %if.then2449, !dbg !13956

if.then2449:                                      ; preds = %do.body2441
  %324 = bitcast %union.tree_node* %323 to i8*, !dbg !13956
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %324) #7, !dbg !13953
  br label %do.body2458, !dbg !13953

do.body2458:                                      ; preds = %do.body2441, %if.then2449
  %initial2463 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13957
  %325 = load %union.tree_node*, %union.tree_node** %initial2463, align 8, !dbg !13957
  %cmp2464 = icmp eq %union.tree_node* %325, null, !dbg !13957
  br i1 %cmp2464, label %do.body2475, label %if.then2466, !dbg !13960

if.then2466:                                      ; preds = %do.body2458
  %326 = bitcast %union.tree_node* %325 to i8*, !dbg !13960
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %326) #7, !dbg !13957
  br label %do.body2475, !dbg !13957

do.body2475:                                      ; preds = %do.body2458, %if.then2466
  %attributes2480 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13961
  %327 = load %union.tree_node*, %union.tree_node** %attributes2480, align 8, !dbg !13961
  %cmp2481 = icmp eq %union.tree_node* %327, null, !dbg !13961
  br i1 %cmp2481, label %do.body2492, label %if.then2483, !dbg !13964

if.then2483:                                      ; preds = %do.body2475
  %328 = bitcast %union.tree_node* %327 to i8*, !dbg !13964
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %328) #7, !dbg !13961
  br label %do.body2492, !dbg !13961

do.body2492:                                      ; preds = %do.body2475, %if.then2483
  %abstract_origin2497 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13965
  %329 = load %union.tree_node*, %union.tree_node** %abstract_origin2497, align 8, !dbg !13965
  %cmp2498 = icmp eq %union.tree_node* %329, null, !dbg !13965
  br i1 %cmp2498, label %do.body2509, label %if.then2500, !dbg !13968

if.then2500:                                      ; preds = %do.body2492
  %330 = bitcast %union.tree_node* %329 to i8*, !dbg !13968
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %330) #7, !dbg !13965
  br label %do.body2509, !dbg !13965

do.body2509:                                      ; preds = %do.body2492, %if.then2500
  %lang_specific2514 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !13969
  %331 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2514, align 8, !dbg !13969
  %cmp2515 = icmp eq %struct.lang_decl* %331, null, !dbg !13969
  br i1 %cmp2515, label %do.body2526, label %if.then2517, !dbg !13972

if.then2517:                                      ; preds = %do.body2509
  %332 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %331, i64 0, i32 0, !dbg !13972
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %332) #7, !dbg !13969
  br label %do.body2526, !dbg !13969

do.body2526:                                      ; preds = %do.body2509, %if.then2517
  %rtl2530 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13973
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtl2530, align 8, !dbg !13973
  %cmp2531 = icmp eq %struct.rtx_def* %333, null, !dbg !13973
  br i1 %cmp2531, label %sw.epilog4433, label %if.then2533, !dbg !13976

if.then2533:                                      ; preds = %do.body2526
  %334 = bitcast %struct.rtx_def* %333 to i8*, !dbg !13976
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %334) #6, !dbg !13973
  br label %sw.epilog4433, !dbg !13973

do.body2542:                                      ; preds = %sw.bb
  %chain2550 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13977
  %335 = load %union.tree_node*, %union.tree_node** %chain2550, align 8, !dbg !13977
  %cmp2551 = icmp eq %union.tree_node* %335, null, !dbg !13977
  br i1 %cmp2551, label %do.body2566, label %if.then2553, !dbg !13980

if.then2553:                                      ; preds = %do.body2542
  %336 = bitcast %union.tree_node* %335 to i8*, !dbg !13980
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %336) #7, !dbg !13977
  br label %do.body2566, !dbg !13977

do.body2566:                                      ; preds = %do.body2542, %if.then2553
  %type2575 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13981
  %337 = load %union.tree_node*, %union.tree_node** %type2575, align 8, !dbg !13981
  %cmp2576 = icmp eq %union.tree_node* %337, null, !dbg !13981
  br i1 %cmp2576, label %do.body2591, label %if.then2578, !dbg !13984

if.then2578:                                      ; preds = %do.body2566
  %338 = bitcast %union.tree_node* %337 to i8*, !dbg !13984
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %338) #7, !dbg !13981
  br label %do.body2591, !dbg !13981

do.body2591:                                      ; preds = %do.body2566, %if.then2578
  %name2599 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13985
  %339 = load %union.tree_node*, %union.tree_node** %name2599, align 8, !dbg !13985
  %cmp2600 = icmp eq %union.tree_node* %339, null, !dbg !13985
  br i1 %cmp2600, label %do.body2614, label %if.then2602, !dbg !13988

if.then2602:                                      ; preds = %do.body2591
  %340 = bitcast %union.tree_node* %339 to i8*, !dbg !13988
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %340) #7, !dbg !13985
  br label %do.body2614, !dbg !13985

do.body2614:                                      ; preds = %do.body2591, %if.then2602
  %context2622 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13989
  %341 = load %union.tree_node*, %union.tree_node** %context2622, align 8, !dbg !13989
  %cmp2623 = icmp eq %union.tree_node* %341, null, !dbg !13989
  br i1 %cmp2623, label %do.body2637, label %if.then2625, !dbg !13992

if.then2625:                                      ; preds = %do.body2614
  %342 = bitcast %union.tree_node* %341 to i8*, !dbg !13992
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %342) #7, !dbg !13989
  br label %do.body2637, !dbg !13989

do.body2637:                                      ; preds = %do.body2614, %if.then2625
  %size2644 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13993
  %343 = load %union.tree_node*, %union.tree_node** %size2644, align 8, !dbg !13993
  %cmp2645 = icmp eq %union.tree_node* %343, null, !dbg !13993
  br i1 %cmp2645, label %do.body2658, label %if.then2647, !dbg !13996

if.then2647:                                      ; preds = %do.body2637
  %344 = bitcast %union.tree_node* %343 to i8*, !dbg !13996
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %344) #7, !dbg !13993
  br label %do.body2658, !dbg !13993

do.body2658:                                      ; preds = %do.body2637, %if.then2647
  %size_unit2665 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13997
  %345 = load %union.tree_node*, %union.tree_node** %size_unit2665, align 8, !dbg !13997
  %cmp2666 = icmp eq %union.tree_node* %345, null, !dbg !13997
  br i1 %cmp2666, label %do.body2679, label %if.then2668, !dbg !14000

if.then2668:                                      ; preds = %do.body2658
  %346 = bitcast %union.tree_node* %345 to i8*, !dbg !14000
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %346) #7, !dbg !13997
  br label %do.body2679, !dbg !13997

do.body2679:                                      ; preds = %do.body2658, %if.then2668
  %initial2686 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14001
  %347 = load %union.tree_node*, %union.tree_node** %initial2686, align 8, !dbg !14001
  %cmp2687 = icmp eq %union.tree_node* %347, null, !dbg !14001
  br i1 %cmp2687, label %do.body2700, label %if.then2689, !dbg !14004

if.then2689:                                      ; preds = %do.body2679
  %348 = bitcast %union.tree_node* %347 to i8*, !dbg !14004
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %348) #7, !dbg !14001
  br label %do.body2700, !dbg !14001

do.body2700:                                      ; preds = %do.body2679, %if.then2689
  %attributes2707 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14005
  %349 = load %union.tree_node*, %union.tree_node** %attributes2707, align 8, !dbg !14005
  %cmp2708 = icmp eq %union.tree_node* %349, null, !dbg !14005
  br i1 %cmp2708, label %do.body2721, label %if.then2710, !dbg !14008

if.then2710:                                      ; preds = %do.body2700
  %350 = bitcast %union.tree_node* %349 to i8*, !dbg !14008
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %350) #7, !dbg !14005
  br label %do.body2721, !dbg !14005

do.body2721:                                      ; preds = %do.body2700, %if.then2710
  %abstract_origin2728 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14009
  %351 = load %union.tree_node*, %union.tree_node** %abstract_origin2728, align 8, !dbg !14009
  %cmp2729 = icmp eq %union.tree_node* %351, null, !dbg !14009
  br i1 %cmp2729, label %do.body2742, label %if.then2731, !dbg !14012

if.then2731:                                      ; preds = %do.body2721
  %352 = bitcast %union.tree_node* %351 to i8*, !dbg !14012
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %352) #7, !dbg !14009
  br label %do.body2742, !dbg !14009

do.body2742:                                      ; preds = %do.body2721, %if.then2731
  %lang_specific2749 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !14013
  %353 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific2749, align 8, !dbg !14013
  %cmp2750 = icmp eq %struct.lang_decl* %353, null, !dbg !14013
  br i1 %cmp2750, label %do.body2763, label %if.then2752, !dbg !14016

if.then2752:                                      ; preds = %do.body2742
  %354 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %353, i64 0, i32 0, !dbg !14016
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %354) #7, !dbg !14013
  br label %do.body2763, !dbg !14013

do.body2763:                                      ; preds = %do.body2742, %if.then2752
  %rtl2769 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14017
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rtl2769, align 8, !dbg !14017
  %cmp2770 = icmp eq %struct.rtx_def* %355, null, !dbg !14017
  br i1 %cmp2770, label %do.body2782, label %if.then2772, !dbg !14020

if.then2772:                                      ; preds = %do.body2763
  %356 = bitcast %struct.rtx_def* %355 to i8*, !dbg !14020
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %356) #6, !dbg !14017
  br label %do.body2782, !dbg !14017

do.body2782:                                      ; preds = %do.body2763, %if.then2772
  %assembler_name2787 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14021
  %357 = load %union.tree_node*, %union.tree_node** %assembler_name2787, align 8, !dbg !14021
  %cmp2788 = icmp eq %union.tree_node* %357, null, !dbg !14021
  br i1 %cmp2788, label %do.body2799, label %if.then2790, !dbg !14024

if.then2790:                                      ; preds = %do.body2782
  %358 = bitcast %union.tree_node* %357 to i8*, !dbg !14024
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %358) #7, !dbg !14021
  br label %do.body2799, !dbg !14021

do.body2799:                                      ; preds = %do.body2782, %if.then2790
  %section_name2804 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14025
  %359 = load %union.tree_node*, %union.tree_node** %section_name2804, align 8, !dbg !14025
  %cmp2805 = icmp eq %union.tree_node* %359, null, !dbg !14025
  br i1 %cmp2805, label %do.body2816, label %if.then2807, !dbg !14028

if.then2807:                                      ; preds = %do.body2799
  %360 = bitcast %union.tree_node* %359 to i8*, !dbg !14028
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %360) #7, !dbg !14025
  br label %do.body2816, !dbg !14025

do.body2816:                                      ; preds = %do.body2799, %if.then2807
  %comdat_group2821 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14029
  %361 = load %union.tree_node*, %union.tree_node** %comdat_group2821, align 8, !dbg !14029
  %cmp2822 = icmp eq %union.tree_node* %361, null, !dbg !14029
  br i1 %cmp2822, label %do.body2833, label %if.then2824, !dbg !14032

if.then2824:                                      ; preds = %do.body2816
  %362 = bitcast %union.tree_node* %361 to i8*, !dbg !14032
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %362) #7, !dbg !14029
  br label %do.body2833, !dbg !14029

do.body2833:                                      ; preds = %do.body2816, %if.then2824
  %saved_tree2837 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !14033
  %363 = load %union.tree_node*, %union.tree_node** %saved_tree2837, align 8, !dbg !14033
  %cmp2838 = icmp eq %union.tree_node* %363, null, !dbg !14033
  br i1 %cmp2838, label %do.body2848, label %if.then2840, !dbg !14036

if.then2840:                                      ; preds = %do.body2833
  %364 = bitcast %union.tree_node* %363 to i8*, !dbg !14036
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %364) #7, !dbg !14033
  br label %do.body2848, !dbg !14033

do.body2848:                                      ; preds = %do.body2833, %if.then2840
  %arguments2852 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14037
  %365 = load %union.tree_node*, %union.tree_node** %arguments2852, align 8, !dbg !14037
  %cmp2853 = icmp eq %union.tree_node* %365, null, !dbg !14037
  br i1 %cmp2853, label %do.body2863, label %if.then2855, !dbg !14040

if.then2855:                                      ; preds = %do.body2848
  %366 = bitcast %union.tree_node* %365 to i8*, !dbg !14040
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %366) #7, !dbg !14037
  br label %do.body2863, !dbg !14037

do.body2863:                                      ; preds = %do.body2848, %if.then2855
  %result2867 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14041
  %367 = load %union.tree_node*, %union.tree_node** %result2867, align 8, !dbg !14041
  %cmp2868 = icmp eq %union.tree_node* %367, null, !dbg !14041
  br i1 %cmp2868, label %do.body2878, label %if.then2870, !dbg !14044

if.then2870:                                      ; preds = %do.body2863
  %368 = bitcast %union.tree_node* %367 to i8*, !dbg !14044
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %368) #7, !dbg !14041
  br label %do.body2878, !dbg !14041

do.body2878:                                      ; preds = %do.body2863, %if.then2870
  %vindex2882 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14045
  %369 = load %union.tree_node*, %union.tree_node** %vindex2882, align 8, !dbg !14045
  %cmp2883 = icmp eq %union.tree_node* %369, null, !dbg !14045
  br i1 %cmp2883, label %sw.epilog4433, label %if.then2885, !dbg !14048

if.then2885:                                      ; preds = %do.body2878
  %370 = bitcast %union.tree_node* %369 to i8*, !dbg !14048
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %370) #7, !dbg !14045
  br label %sw.epilog4433, !dbg !14045

do.body2894:                                      ; preds = %sw.bb
  %chain2902 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14049
  %371 = load %union.tree_node*, %union.tree_node** %chain2902, align 8, !dbg !14049
  %cmp2903 = icmp eq %union.tree_node* %371, null, !dbg !14049
  br i1 %cmp2903, label %do.body2918, label %if.then2905, !dbg !14052

if.then2905:                                      ; preds = %do.body2894
  %372 = bitcast %union.tree_node* %371 to i8*, !dbg !14052
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %372) #7, !dbg !14049
  br label %do.body2918, !dbg !14049

do.body2918:                                      ; preds = %do.body2894, %if.then2905
  %type2927 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14053
  %373 = load %union.tree_node*, %union.tree_node** %type2927, align 8, !dbg !14053
  %cmp2928 = icmp eq %union.tree_node* %373, null, !dbg !14053
  br i1 %cmp2928, label %do.body2943, label %if.then2930, !dbg !14056

if.then2930:                                      ; preds = %do.body2918
  %374 = bitcast %union.tree_node* %373 to i8*, !dbg !14056
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %374) #7, !dbg !14053
  br label %do.body2943, !dbg !14053

do.body2943:                                      ; preds = %do.body2918, %if.then2930
  %name2951 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14057
  %375 = load %union.tree_node*, %union.tree_node** %name2951, align 8, !dbg !14057
  %cmp2952 = icmp eq %union.tree_node* %375, null, !dbg !14057
  br i1 %cmp2952, label %do.body2966, label %if.then2954, !dbg !14060

if.then2954:                                      ; preds = %do.body2943
  %376 = bitcast %union.tree_node* %375 to i8*, !dbg !14060
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %376) #7, !dbg !14057
  br label %do.body2966, !dbg !14057

do.body2966:                                      ; preds = %do.body2943, %if.then2954
  %context2974 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14061
  %377 = load %union.tree_node*, %union.tree_node** %context2974, align 8, !dbg !14061
  %cmp2975 = icmp eq %union.tree_node* %377, null, !dbg !14061
  br i1 %cmp2975, label %do.body2989, label %if.then2977, !dbg !14064

if.then2977:                                      ; preds = %do.body2966
  %378 = bitcast %union.tree_node* %377 to i8*, !dbg !14064
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %378) #7, !dbg !14061
  br label %do.body2989, !dbg !14061

do.body2989:                                      ; preds = %do.body2966, %if.then2977
  %size2996 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14065
  %379 = load %union.tree_node*, %union.tree_node** %size2996, align 8, !dbg !14065
  %cmp2997 = icmp eq %union.tree_node* %379, null, !dbg !14065
  br i1 %cmp2997, label %do.body3010, label %if.then2999, !dbg !14068

if.then2999:                                      ; preds = %do.body2989
  %380 = bitcast %union.tree_node* %379 to i8*, !dbg !14068
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %380) #7, !dbg !14065
  br label %do.body3010, !dbg !14065

do.body3010:                                      ; preds = %do.body2989, %if.then2999
  %size_unit3017 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14069
  %381 = load %union.tree_node*, %union.tree_node** %size_unit3017, align 8, !dbg !14069
  %cmp3018 = icmp eq %union.tree_node* %381, null, !dbg !14069
  br i1 %cmp3018, label %do.body3031, label %if.then3020, !dbg !14072

if.then3020:                                      ; preds = %do.body3010
  %382 = bitcast %union.tree_node* %381 to i8*, !dbg !14072
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %382) #7, !dbg !14069
  br label %do.body3031, !dbg !14069

do.body3031:                                      ; preds = %do.body3010, %if.then3020
  %initial3038 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14073
  %383 = load %union.tree_node*, %union.tree_node** %initial3038, align 8, !dbg !14073
  %cmp3039 = icmp eq %union.tree_node* %383, null, !dbg !14073
  br i1 %cmp3039, label %do.body3052, label %if.then3041, !dbg !14076

if.then3041:                                      ; preds = %do.body3031
  %384 = bitcast %union.tree_node* %383 to i8*, !dbg !14076
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %384) #7, !dbg !14073
  br label %do.body3052, !dbg !14073

do.body3052:                                      ; preds = %do.body3031, %if.then3041
  %attributes3059 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14077
  %385 = load %union.tree_node*, %union.tree_node** %attributes3059, align 8, !dbg !14077
  %cmp3060 = icmp eq %union.tree_node* %385, null, !dbg !14077
  br i1 %cmp3060, label %do.body3073, label %if.then3062, !dbg !14080

if.then3062:                                      ; preds = %do.body3052
  %386 = bitcast %union.tree_node* %385 to i8*, !dbg !14080
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %386) #7, !dbg !14077
  br label %do.body3073, !dbg !14077

do.body3073:                                      ; preds = %do.body3052, %if.then3062
  %abstract_origin3080 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14081
  %387 = load %union.tree_node*, %union.tree_node** %abstract_origin3080, align 8, !dbg !14081
  %cmp3081 = icmp eq %union.tree_node* %387, null, !dbg !14081
  br i1 %cmp3081, label %do.body3094, label %if.then3083, !dbg !14084

if.then3083:                                      ; preds = %do.body3073
  %388 = bitcast %union.tree_node* %387 to i8*, !dbg !14084
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %388) #7, !dbg !14081
  br label %do.body3094, !dbg !14081

do.body3094:                                      ; preds = %do.body3073, %if.then3083
  %lang_specific3101 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !14085
  %389 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific3101, align 8, !dbg !14085
  %cmp3102 = icmp eq %struct.lang_decl* %389, null, !dbg !14085
  br i1 %cmp3102, label %do.body3115, label %if.then3104, !dbg !14088

if.then3104:                                      ; preds = %do.body3094
  %390 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %389, i64 0, i32 0, !dbg !14088
  tail call void @gt_pch_nx_lang_decl(i8* nonnull %390) #7, !dbg !14085
  br label %do.body3115, !dbg !14085

do.body3115:                                      ; preds = %do.body3094, %if.then3104
  %rtl3121 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14089
  %391 = load %struct.rtx_def*, %struct.rtx_def** %rtl3121, align 8, !dbg !14089
  %cmp3122 = icmp eq %struct.rtx_def* %391, null, !dbg !14089
  br i1 %cmp3122, label %do.body3134, label %if.then3124, !dbg !14092

if.then3124:                                      ; preds = %do.body3115
  %392 = bitcast %struct.rtx_def* %391 to i8*, !dbg !14092
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %392) #6, !dbg !14089
  br label %do.body3134, !dbg !14089

do.body3134:                                      ; preds = %do.body3115, %if.then3124
  %assembler_name3139 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14093
  %393 = load %union.tree_node*, %union.tree_node** %assembler_name3139, align 8, !dbg !14093
  %cmp3140 = icmp eq %union.tree_node* %393, null, !dbg !14093
  br i1 %cmp3140, label %do.body3151, label %if.then3142, !dbg !14096

if.then3142:                                      ; preds = %do.body3134
  %394 = bitcast %union.tree_node* %393 to i8*, !dbg !14096
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %394) #7, !dbg !14093
  br label %do.body3151, !dbg !14093

do.body3151:                                      ; preds = %do.body3134, %if.then3142
  %section_name3156 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14097
  %395 = load %union.tree_node*, %union.tree_node** %section_name3156, align 8, !dbg !14097
  %cmp3157 = icmp eq %union.tree_node* %395, null, !dbg !14097
  br i1 %cmp3157, label %do.body3168, label %if.then3159, !dbg !14100

if.then3159:                                      ; preds = %do.body3151
  %396 = bitcast %union.tree_node* %395 to i8*, !dbg !14100
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %396) #7, !dbg !14097
  br label %do.body3168, !dbg !14097

do.body3168:                                      ; preds = %do.body3151, %if.then3159
  %comdat_group3173 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14101
  %397 = load %union.tree_node*, %union.tree_node** %comdat_group3173, align 8, !dbg !14101
  %cmp3174 = icmp eq %union.tree_node* %397, null, !dbg !14101
  br i1 %cmp3174, label %do.body3185, label %if.then3176, !dbg !14104

if.then3176:                                      ; preds = %do.body3168
  %398 = bitcast %union.tree_node* %397 to i8*, !dbg !14104
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %398) #7, !dbg !14101
  br label %do.body3185, !dbg !14101

do.body3185:                                      ; preds = %do.body3168, %if.then3176
  %saved_tree3189 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !14105
  %399 = load %union.tree_node*, %union.tree_node** %saved_tree3189, align 8, !dbg !14105
  %cmp3190 = icmp eq %union.tree_node* %399, null, !dbg !14105
  br i1 %cmp3190, label %do.body3200, label %if.then3192, !dbg !14108

if.then3192:                                      ; preds = %do.body3185
  %400 = bitcast %union.tree_node* %399 to i8*, !dbg !14108
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %400) #7, !dbg !14105
  br label %do.body3200, !dbg !14105

do.body3200:                                      ; preds = %do.body3185, %if.then3192
  %arguments3204 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14109
  %401 = load %union.tree_node*, %union.tree_node** %arguments3204, align 8, !dbg !14109
  %cmp3205 = icmp eq %union.tree_node* %401, null, !dbg !14109
  br i1 %cmp3205, label %do.body3215, label %if.then3207, !dbg !14112

if.then3207:                                      ; preds = %do.body3200
  %402 = bitcast %union.tree_node* %401 to i8*, !dbg !14112
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %402) #7, !dbg !14109
  br label %do.body3215, !dbg !14109

do.body3215:                                      ; preds = %do.body3200, %if.then3207
  %result3219 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14113
  %403 = load %union.tree_node*, %union.tree_node** %result3219, align 8, !dbg !14113
  %cmp3220 = icmp eq %union.tree_node* %403, null, !dbg !14113
  br i1 %cmp3220, label %do.body3230, label %if.then3222, !dbg !14116

if.then3222:                                      ; preds = %do.body3215
  %404 = bitcast %union.tree_node* %403 to i8*, !dbg !14116
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %404) #7, !dbg !14113
  br label %do.body3230, !dbg !14113

do.body3230:                                      ; preds = %do.body3215, %if.then3222
  %vindex3234 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14117
  %405 = load %union.tree_node*, %union.tree_node** %vindex3234, align 8, !dbg !14117
  %cmp3235 = icmp eq %union.tree_node* %405, null, !dbg !14117
  br i1 %cmp3235, label %do.body3245, label %if.then3237, !dbg !14120

if.then3237:                                      ; preds = %do.body3230
  %406 = bitcast %union.tree_node* %405 to i8*, !dbg !14120
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %406) #7, !dbg !14117
  br label %do.body3245, !dbg !14117

do.body3245:                                      ; preds = %do.body3230, %if.then3237
  %f = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 1, !dbg !14121
  %407 = load %struct.function*, %struct.function** %f, align 8, !dbg !14121
  %cmp3248 = icmp eq %struct.function* %407, null, !dbg !14121
  br i1 %cmp3248, label %do.body3257, label %if.then3250, !dbg !14124

if.then3250:                                      ; preds = %do.body3245
  %408 = bitcast %struct.function* %407 to i8*, !dbg !14124
  tail call void @gt_pch_nx_function(i8* nonnull %408) #6, !dbg !14121
  br label %do.body3257, !dbg !14121

do.body3257:                                      ; preds = %do.body3245, %if.then3250
  %personality = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 2, !dbg !14125
  %409 = load %union.tree_node*, %union.tree_node** %personality, align 8, !dbg !14125
  %cmp3260 = icmp eq %union.tree_node* %409, null, !dbg !14125
  br i1 %cmp3260, label %do.body3269, label %if.then3262, !dbg !14128

if.then3262:                                      ; preds = %do.body3257
  %410 = bitcast %union.tree_node* %409 to i8*, !dbg !14128
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %410) #7, !dbg !14125
  br label %do.body3269, !dbg !14125

do.body3269:                                      ; preds = %do.body3257, %if.then3262
  %function_specific_target = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 3, !dbg !14129
  %411 = load %union.tree_node*, %union.tree_node** %function_specific_target, align 8, !dbg !14129
  %cmp3272 = icmp eq %union.tree_node* %411, null, !dbg !14129
  br i1 %cmp3272, label %do.body3281, label %if.then3274, !dbg !14132

if.then3274:                                      ; preds = %do.body3269
  %412 = bitcast %union.tree_node* %411 to i8*, !dbg !14132
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %412) #7, !dbg !14129
  br label %do.body3281, !dbg !14129

do.body3281:                                      ; preds = %do.body3269, %if.then3274
  %function_specific_optimization = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 4, !dbg !14133
  %413 = load %union.tree_node*, %union.tree_node** %function_specific_optimization, align 8, !dbg !14133
  %cmp3284 = icmp eq %union.tree_node* %413, null, !dbg !14133
  br i1 %cmp3284, label %sw.epilog4433, label %if.then3286, !dbg !14136

if.then3286:                                      ; preds = %do.body3281
  %414 = bitcast %union.tree_node* %413 to i8*, !dbg !14136
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %414) #7, !dbg !14133
  br label %sw.epilog4433, !dbg !14133

do.body3294:                                      ; preds = %sw.bb
  %chain3298 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14137
  %415 = load %union.tree_node*, %union.tree_node** %chain3298, align 8, !dbg !14137
  %cmp3299 = icmp eq %union.tree_node* %415, null, !dbg !14137
  br i1 %cmp3299, label %do.body3309, label %if.then3301, !dbg !14140

if.then3301:                                      ; preds = %do.body3294
  %416 = bitcast %union.tree_node* %415 to i8*, !dbg !14140
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %416) #7, !dbg !14137
  br label %do.body3309, !dbg !14137

do.body3309:                                      ; preds = %do.body3294, %if.then3301
  %type3313 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14141
  %417 = load %union.tree_node*, %union.tree_node** %type3313, align 8, !dbg !14141
  %cmp3314 = icmp eq %union.tree_node* %417, null, !dbg !14141
  br i1 %cmp3314, label %do.body3324, label %if.then3316, !dbg !14144

if.then3316:                                      ; preds = %do.body3309
  %418 = bitcast %union.tree_node* %417 to i8*, !dbg !14144
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %418) #7, !dbg !14141
  br label %do.body3324, !dbg !14141

do.body3324:                                      ; preds = %do.body3309, %if.then3316
  %values = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14145
  %419 = bitcast i32* %values to %union.tree_node**, !dbg !14145
  %420 = load %union.tree_node*, %union.tree_node** %419, align 8, !dbg !14145
  %cmp3327 = icmp eq %union.tree_node* %420, null, !dbg !14145
  br i1 %cmp3327, label %do.body3336, label %if.then3329, !dbg !14148

if.then3329:                                      ; preds = %do.body3324
  %421 = bitcast %union.tree_node* %420 to i8*, !dbg !14148
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %421) #7, !dbg !14145
  br label %do.body3336, !dbg !14145

do.body3336:                                      ; preds = %do.body3324, %if.then3329
  %422 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14149
  %423 = load %union.tree_node*, %union.tree_node** %422, align 8, !dbg !14149
  %cmp3340 = icmp eq %union.tree_node* %423, null, !dbg !14149
  br i1 %cmp3340, label %do.body3349, label %if.then3342, !dbg !14152

if.then3342:                                      ; preds = %do.body3336
  %424 = bitcast %union.tree_node* %423 to i8*, !dbg !14152
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %424) #7, !dbg !14149
  br label %do.body3349, !dbg !14149

do.body3349:                                      ; preds = %do.body3336, %if.then3342
  %425 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14153
  %426 = load %union.tree_node*, %union.tree_node** %425, align 8, !dbg !14153
  %cmp3353 = icmp eq %union.tree_node* %426, null, !dbg !14153
  br i1 %cmp3353, label %do.body3362, label %if.then3355, !dbg !14156

if.then3355:                                      ; preds = %do.body3349
  %427 = bitcast %union.tree_node* %426 to i8*, !dbg !14156
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %427) #7, !dbg !14153
  br label %do.body3362, !dbg !14153

do.body3362:                                      ; preds = %do.body3349, %if.then3355
  %428 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14157
  %429 = load %union.tree_node*, %union.tree_node** %428, align 8, !dbg !14157
  %cmp3366 = icmp eq %union.tree_node* %429, null, !dbg !14157
  br i1 %cmp3366, label %do.body3375, label %if.then3368, !dbg !14160

if.then3368:                                      ; preds = %do.body3362
  %430 = bitcast %union.tree_node* %429 to i8*, !dbg !14160
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %430) #7, !dbg !14157
  br label %do.body3375, !dbg !14157

do.body3375:                                      ; preds = %do.body3362, %if.then3368
  %431 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14161
  %432 = load %union.tree_node*, %union.tree_node** %431, align 8, !dbg !14161
  %cmp3378 = icmp eq %union.tree_node* %432, null, !dbg !14161
  br i1 %cmp3378, label %do.body3387, label %if.then3380, !dbg !14164

if.then3380:                                      ; preds = %do.body3375
  %433 = bitcast %union.tree_node* %432 to i8*, !dbg !14164
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %433) #7, !dbg !14161
  br label %do.body3387, !dbg !14161

do.body3387:                                      ; preds = %do.body3375, %if.then3380
  %434 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14165
  %435 = load %union.tree_node*, %union.tree_node** %434, align 8, !dbg !14165
  %cmp3390 = icmp eq %union.tree_node* %435, null, !dbg !14165
  br i1 %cmp3390, label %do.end3398, label %if.then3392, !dbg !14168

if.then3392:                                      ; preds = %do.body3387
  %436 = bitcast %union.tree_node* %435 to i8*, !dbg !14168
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %436) #7, !dbg !14165
  br label %do.end3398, !dbg !14165

do.end3398:                                       ; preds = %do.body3387, %if.then3392
  %437 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !14169
  %cmp3399 = icmp eq %struct.gcc_debug_hooks* %437, @sdb_debug_hooks, !dbg !14170
  br i1 %cmp3399, label %cond.end3406, label %cond.false3402, !dbg !14169

cond.false3402:                                   ; preds = %do.end3398
  %cmp3403 = icmp eq %struct.gcc_debug_hooks* %437, @dwarf2_debug_hooks, !dbg !14171
  %cond3405 = select i1 %cmp3403, i32 2, i32 0, !dbg !14172
  br label %cond.end3406, !dbg !14169

cond.end3406:                                     ; preds = %do.end3398, %cond.false3402
  %cond3407 = phi i32 [ %cond3405, %cond.false3402 ], [ 1, %do.end3398 ], !dbg !14169
  switch i32 %cond3407, label %do.body3426 [
    i32 2, label %do.body3412
    i32 1, label %sw.bb3408
  ], !dbg !14173

sw.bb3408:                                        ; preds = %cond.end3406
  %symtab = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14174
  %pointer = bitcast %union.tree_node** %symtab to i8**, !dbg !14176
  %438 = load i8*, i8** %pointer, align 8, !dbg !14176
  tail call void @gt_pch_n_S(i8* %438) #6, !dbg !14177
  br label %do.body3426, !dbg !14178

do.body3412:                                      ; preds = %cond.end3406
  %symtab3415 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14179
  %die = bitcast %union.tree_node** %symtab3415 to %struct.die_struct**, !dbg !14179
  %439 = load %struct.die_struct*, %struct.die_struct** %die, align 8, !dbg !14179
  %cmp3416 = icmp eq %struct.die_struct* %439, null, !dbg !14179
  br i1 %cmp3416, label %do.body3426, label %if.then3418, !dbg !14182

if.then3418:                                      ; preds = %do.body3412
  %440 = bitcast %struct.die_struct* %439 to i8*, !dbg !14182
  tail call void @gt_pch_nx_die_struct(i8* nonnull %440) #6, !dbg !14179
  br label %do.body3426, !dbg !14179

do.body3426:                                      ; preds = %do.body3412, %sw.bb3408, %if.then3418, %cond.end3406
  %441 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14183
  %442 = load %union.tree_node*, %union.tree_node** %441, align 8, !dbg !14183
  %cmp3430 = icmp eq %union.tree_node* %442, null, !dbg !14183
  br i1 %cmp3430, label %do.body3439, label %if.then3432, !dbg !14186

if.then3432:                                      ; preds = %do.body3426
  %443 = bitcast %union.tree_node* %442 to i8*, !dbg !14186
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %443) #7, !dbg !14183
  br label %do.body3439, !dbg !14183

do.body3439:                                      ; preds = %do.body3426, %if.then3432
  %minval = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !14187
  %444 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !14187
  %445 = load %union.tree_node*, %union.tree_node** %444, align 8, !dbg !14187
  %cmp3442 = icmp eq %union.tree_node* %445, null, !dbg !14187
  br i1 %cmp3442, label %do.body3451, label %if.then3444, !dbg !14190

if.then3444:                                      ; preds = %do.body3439
  %446 = bitcast %union.tree_node* %445 to i8*, !dbg !14190
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %446) #7, !dbg !14187
  br label %do.body3451, !dbg !14187

do.body3451:                                      ; preds = %do.body3439, %if.then3444
  %maxval = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14191
  %447 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !14191
  %448 = load %union.tree_node*, %union.tree_node** %447, align 8, !dbg !14191
  %cmp3454 = icmp eq %union.tree_node* %448, null, !dbg !14191
  br i1 %cmp3454, label %do.body3463, label %if.then3456, !dbg !14194

if.then3456:                                      ; preds = %do.body3451
  %449 = bitcast %union.tree_node* %448 to i8*, !dbg !14194
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %449) #7, !dbg !14191
  br label %do.body3463, !dbg !14191

do.body3463:                                      ; preds = %do.body3451, %if.then3456
  %450 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14195
  %451 = load %union.tree_node*, %union.tree_node** %450, align 8, !dbg !14195
  %cmp3467 = icmp eq %union.tree_node* %451, null, !dbg !14195
  br i1 %cmp3467, label %do.body3476, label %if.then3469, !dbg !14198

if.then3469:                                      ; preds = %do.body3463
  %452 = bitcast %union.tree_node* %451 to i8*, !dbg !14198
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %452) #7, !dbg !14195
  br label %do.body3476, !dbg !14195

do.body3476:                                      ; preds = %do.body3463, %if.then3469
  %453 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14199
  %454 = load %union.tree_node*, %union.tree_node** %453, align 8, !dbg !14199
  %cmp3479 = icmp eq %union.tree_node* %454, null, !dbg !14199
  br i1 %cmp3479, label %do.body3488, label %if.then3481, !dbg !14202

if.then3481:                                      ; preds = %do.body3476
  %455 = bitcast %union.tree_node* %454 to i8*, !dbg !14202
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %455) #7, !dbg !14199
  br label %do.body3488, !dbg !14199

do.body3488:                                      ; preds = %do.body3476, %if.then3481
  %456 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14203
  %457 = load %union.tree_node*, %union.tree_node** %456, align 8, !dbg !14203
  %cmp3491 = icmp eq %union.tree_node* %457, null, !dbg !14203
  br i1 %cmp3491, label %do.body3500, label %if.then3493, !dbg !14206

if.then3493:                                      ; preds = %do.body3488
  %458 = bitcast %union.tree_node* %457 to i8*, !dbg !14206
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %458) #7, !dbg !14203
  br label %do.body3500, !dbg !14203

do.body3500:                                      ; preds = %do.body3488, %if.then3493
  %context3503 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14207
  %459 = bitcast i24* %context3503 to %union.tree_node**, !dbg !14207
  %460 = load %union.tree_node*, %union.tree_node** %459, align 8, !dbg !14207
  %cmp3504 = icmp eq %union.tree_node* %460, null, !dbg !14207
  br i1 %cmp3504, label %do.body3513, label %if.then3506, !dbg !14210

if.then3506:                                      ; preds = %do.body3500
  %461 = bitcast %union.tree_node* %460 to i8*, !dbg !14210
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %461) #7, !dbg !14207
  br label %do.body3513, !dbg !14207

do.body3513:                                      ; preds = %do.body3500, %if.then3506
  %462 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !14211
  %463 = load %union.tree_node*, %union.tree_node** %462, align 8, !dbg !14211
  %cmp3516 = icmp eq %union.tree_node* %463, null, !dbg !14211
  br i1 %cmp3516, label %do.body3525, label %if.then3518, !dbg !14214

if.then3518:                                      ; preds = %do.body3513
  %464 = bitcast %union.tree_node* %463 to i8*, !dbg !14214
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %464) #7, !dbg !14211
  br label %do.body3525, !dbg !14211

do.body3525:                                      ; preds = %do.body3513, %if.then3518
  %lang_specific3528 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14215
  %465 = bitcast %union.tree_node** %lang_specific3528 to %struct.lang_type**, !dbg !14215
  %466 = load %struct.lang_type*, %struct.lang_type** %465, align 8, !dbg !14215
  %cmp3529 = icmp eq %struct.lang_type* %466, null, !dbg !14215
  br i1 %cmp3529, label %sw.epilog4433, label %if.then3531, !dbg !14218

if.then3531:                                      ; preds = %do.body3525
  %467 = bitcast %struct.lang_type* %466 to i8*, !dbg !14218
  tail call void @gt_pch_nx_lang_type(i8* nonnull %467) #7, !dbg !14215
  br label %sw.epilog4433, !dbg !14215

do.body3539:                                      ; preds = %sw.bb
  %chain3542 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14219
  %468 = load %union.tree_node*, %union.tree_node** %chain3542, align 8, !dbg !14219
  %cmp3543 = icmp eq %union.tree_node* %468, null, !dbg !14219
  br i1 %cmp3543, label %do.body3553, label %if.then3545, !dbg !14222

if.then3545:                                      ; preds = %do.body3539
  %469 = bitcast %union.tree_node* %468 to i8*, !dbg !14222
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %469) #7, !dbg !14219
  br label %do.body3553, !dbg !14219

do.body3553:                                      ; preds = %do.body3539, %if.then3545
  %type3557 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14223
  %470 = load %union.tree_node*, %union.tree_node** %type3557, align 8, !dbg !14223
  %cmp3558 = icmp eq %union.tree_node* %470, null, !dbg !14223
  br i1 %cmp3558, label %do.body3568, label %if.then3560, !dbg !14226

if.then3560:                                      ; preds = %do.body3553
  %471 = bitcast %union.tree_node* %470 to i8*, !dbg !14226
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %471) #7, !dbg !14223
  br label %do.body3568, !dbg !14223

do.body3568:                                      ; preds = %do.body3553, %if.then3560
  %purpose = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14227
  %472 = bitcast i32* %purpose to %union.tree_node**, !dbg !14227
  %473 = load %union.tree_node*, %union.tree_node** %472, align 8, !dbg !14227
  %cmp3571 = icmp eq %union.tree_node* %473, null, !dbg !14227
  br i1 %cmp3571, label %do.body3580, label %if.then3573, !dbg !14230

if.then3573:                                      ; preds = %do.body3568
  %474 = bitcast %union.tree_node* %473 to i8*, !dbg !14230
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %474) #7, !dbg !14227
  br label %do.body3580, !dbg !14227

do.body3580:                                      ; preds = %do.body3568, %if.then3573
  %475 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14231
  %476 = load %union.tree_node*, %union.tree_node** %475, align 8, !dbg !14231
  %cmp3583 = icmp eq %union.tree_node* %476, null, !dbg !14231
  br i1 %cmp3583, label %sw.epilog4433, label %if.then3585, !dbg !14234

if.then3585:                                      ; preds = %do.body3580
  %477 = bitcast %union.tree_node* %476 to i8*, !dbg !14234
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %477) #7, !dbg !14231
  br label %sw.epilog4433, !dbg !14231

do.body3593:                                      ; preds = %sw.bb
  %chain3596 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14235
  %478 = load %union.tree_node*, %union.tree_node** %chain3596, align 8, !dbg !14235
  %cmp3597 = icmp eq %union.tree_node* %478, null, !dbg !14235
  br i1 %cmp3597, label %do.body3607, label %if.then3599, !dbg !14238

if.then3599:                                      ; preds = %do.body3593
  %479 = bitcast %union.tree_node* %478 to i8*, !dbg !14238
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %479) #7, !dbg !14235
  br label %do.body3607, !dbg !14235

do.body3607:                                      ; preds = %do.body3593, %if.then3599
  %type3611 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14239
  %480 = load %union.tree_node*, %union.tree_node** %type3611, align 8, !dbg !14239
  %cmp3612 = icmp eq %union.tree_node* %480, null, !dbg !14239
  br i1 %cmp3612, label %do.end3621, label %if.then3614, !dbg !14242

if.then3614:                                      ; preds = %do.body3607
  %481 = bitcast %union.tree_node* %480 to i8*, !dbg !14242
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %481) #7, !dbg !14239
  br label %do.end3621, !dbg !14239

do.end3621:                                       ; preds = %do.body3607, %if.then3614
  %482 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14243
  %483 = load i32, i32* %482, align 8, !dbg !14243
  %conv3625 = sext i32 %483 to i64, !dbg !14244
  call void @llvm.dbg.value(metadata i64 %conv3625, metadata !13324, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i64 0, metadata !13319, metadata !DIExpression()), !dbg !14245
  %a = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14246
  br label %for.cond, !dbg !14252

for.cond:                                         ; preds = %for.inc, %do.end3621
  %i1.0 = phi i64 [ 0, %do.end3621 ], [ %inc, %for.inc ], !dbg !14253
  call void @llvm.dbg.value(metadata i64 %i1.0, metadata !13319, metadata !DIExpression()), !dbg !14245
  %cmp3626 = icmp eq i64 %i1.0, %conv3625, !dbg !14254
  br i1 %cmp3626, label %sw.epilog4433.loopexit, label %do.body3628, !dbg !14255

do.body3628:                                      ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %i1.0, !dbg !14256
  %484 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14256
  %cmp3631 = icmp eq %union.tree_node* %484, null, !dbg !14256
  br i1 %cmp3631, label %for.inc, label %if.then3633, !dbg !14257

if.then3633:                                      ; preds = %do.body3628
  %485 = bitcast %union.tree_node* %484 to i8*, !dbg !14257
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %485) #7, !dbg !14256
  br label %for.inc, !dbg !14256

for.inc:                                          ; preds = %do.body3628, %if.then3633
  %inc = add i64 %i1.0, 1, !dbg !14258
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13319, metadata !DIExpression()), !dbg !14245
  br label %for.cond, !dbg !14259, !llvm.loop !14260

do.body3642:                                      ; preds = %sw.bb
  %chain3645 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14262
  %486 = load %union.tree_node*, %union.tree_node** %chain3645, align 8, !dbg !14262
  %cmp3646 = icmp eq %union.tree_node* %486, null, !dbg !14262
  br i1 %cmp3646, label %do.body3656, label %if.then3648, !dbg !14265

if.then3648:                                      ; preds = %do.body3642
  %487 = bitcast %union.tree_node* %486 to i8*, !dbg !14265
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %487) #7, !dbg !14262
  br label %do.body3656, !dbg !14262

do.body3656:                                      ; preds = %do.body3642, %if.then3648
  %type3660 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14266
  %488 = load %union.tree_node*, %union.tree_node** %type3660, align 8, !dbg !14266
  %cmp3661 = icmp eq %union.tree_node* %488, null, !dbg !14266
  br i1 %cmp3661, label %do.body3671, label %if.then3663, !dbg !14269

if.then3663:                                      ; preds = %do.body3656
  %489 = bitcast %union.tree_node* %488 to i8*, !dbg !14269
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %489) #7, !dbg !14266
  br label %do.body3671, !dbg !14266

do.body3671:                                      ; preds = %do.body3656, %if.then3663
  %490 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14270
  %491 = load %union.tree_node*, %union.tree_node** %490, align 8, !dbg !14270
  %cmp3674 = icmp eq %union.tree_node* %491, null, !dbg !14270
  br i1 %cmp3674, label %sw.default3687, label %if.then3676, !dbg !14273

if.then3676:                                      ; preds = %do.body3671
  %492 = bitcast %union.tree_node* %491 to i8*, !dbg !14273
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %492) #7, !dbg !14270
  br label %sw.default3687, !dbg !14270

sw.default3687:                                   ; preds = %do.body3671, %if.then3676
  %call3688 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %generic12) #7, !dbg !14274
  %conv3689 = sext i32 %call3688 to i64, !dbg !14275
  call void @llvm.dbg.value(metadata i64 %conv3689, metadata !13328, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i64 0, metadata !13325, metadata !DIExpression()), !dbg !14276
  %operands = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14277
  br label %for.cond3690, !dbg !14283

for.cond3690:                                     ; preds = %for.inc3708, %sw.default3687
  %i2.0 = phi i64 [ 0, %sw.default3687 ], [ %inc3709, %for.inc3708 ], !dbg !14284
  call void @llvm.dbg.value(metadata i64 %i2.0, metadata !13325, metadata !DIExpression()), !dbg !14276
  %cmp3691 = icmp eq i64 %i2.0, %conv3689, !dbg !14285
  br i1 %cmp3691, label %sw.epilog4433.loopexit5, label %do.body3694, !dbg !14286

do.body3694:                                      ; preds = %for.cond3690
  %arrayidx3697 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %i2.0, !dbg !14287
  %493 = load %union.tree_node*, %union.tree_node** %arrayidx3697, align 8, !dbg !14287
  %cmp3698 = icmp eq %union.tree_node* %493, null, !dbg !14287
  br i1 %cmp3698, label %for.inc3708, label %if.then3700, !dbg !14288

if.then3700:                                      ; preds = %do.body3694
  %494 = bitcast %union.tree_node* %493 to i8*, !dbg !14288
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %494) #7, !dbg !14287
  br label %for.inc3708, !dbg !14287

for.inc3708:                                      ; preds = %do.body3694, %if.then3700
  %inc3709 = add i64 %i2.0, 1, !dbg !14289
  call void @llvm.dbg.value(metadata i64 %inc3709, metadata !13325, metadata !DIExpression()), !dbg !14276
  br label %for.cond3690, !dbg !14290, !llvm.loop !14291

do.body3713:                                      ; preds = %sw.bb
  %chain3716 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14293
  %495 = load %union.tree_node*, %union.tree_node** %chain3716, align 8, !dbg !14293
  %cmp3717 = icmp eq %union.tree_node* %495, null, !dbg !14293
  br i1 %cmp3717, label %do.body3727, label %if.then3719, !dbg !14296

if.then3719:                                      ; preds = %do.body3713
  %496 = bitcast %union.tree_node* %495 to i8*, !dbg !14296
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %496) #7, !dbg !14293
  br label %do.body3727, !dbg !14293

do.body3727:                                      ; preds = %do.body3713, %if.then3719
  %type3731 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14297
  %497 = load %union.tree_node*, %union.tree_node** %type3731, align 8, !dbg !14297
  %cmp3732 = icmp eq %union.tree_node* %497, null, !dbg !14297
  br i1 %cmp3732, label %do.body3742, label %if.then3734, !dbg !14300

if.then3734:                                      ; preds = %do.body3727
  %498 = bitcast %union.tree_node* %497 to i8*, !dbg !14300
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %498) #7, !dbg !14297
  br label %do.body3742, !dbg !14297

do.body3742:                                      ; preds = %do.body3727, %if.then3734
  %var = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14301
  %499 = bitcast i32* %var to %union.tree_node**, !dbg !14301
  %500 = load %union.tree_node*, %union.tree_node** %499, align 8, !dbg !14301
  %cmp3745 = icmp eq %union.tree_node* %500, null, !dbg !14301
  br i1 %cmp3745, label %do.body3754, label %if.then3747, !dbg !14304

if.then3747:                                      ; preds = %do.body3742
  %501 = bitcast %union.tree_node* %500 to i8*, !dbg !14304
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %501) #7, !dbg !14301
  br label %do.body3754, !dbg !14301

do.body3754:                                      ; preds = %do.body3742, %if.then3747
  %def_stmt = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14305
  %502 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !14305
  %503 = load %union.gimple_statement_d*, %union.gimple_statement_d** %502, align 8, !dbg !14305
  %cmp3757 = icmp eq %union.gimple_statement_d* %503, null, !dbg !14305
  br i1 %cmp3757, label %do.body3766, label %if.then3759, !dbg !14308

if.then3759:                                      ; preds = %do.body3754
  %504 = bitcast %union.gimple_statement_d* %503 to i8*, !dbg !14308
  tail call void @gt_pch_nx_gimple_statement_d(i8* nonnull %504) #6, !dbg !14305
  br label %do.body3766, !dbg !14305

do.body3766:                                      ; preds = %do.body3754, %if.then3759
  %ptr_info = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14309
  %505 = bitcast %union.tree_node** %ptr_info to %struct.ptr_info_def**, !dbg !14309
  %506 = load %struct.ptr_info_def*, %struct.ptr_info_def** %505, align 8, !dbg !14309
  %cmp3769 = icmp eq %struct.ptr_info_def* %506, null, !dbg !14309
  br i1 %cmp3769, label %sw.epilog4433, label %if.then3771, !dbg !14312

if.then3771:                                      ; preds = %do.body3766
  %507 = bitcast %struct.ptr_info_def* %506 to i8*, !dbg !14312
  tail call void @gt_pch_nx_ptr_info_def(i8* nonnull %507) #6, !dbg !14309
  br label %sw.epilog4433, !dbg !14309

do.body3779:                                      ; preds = %sw.bb
  %chain3783 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14313
  %508 = load %union.tree_node*, %union.tree_node** %chain3783, align 8, !dbg !14313
  %cmp3784 = icmp eq %union.tree_node* %508, null, !dbg !14313
  br i1 %cmp3784, label %do.body3794, label %if.then3786, !dbg !14316

if.then3786:                                      ; preds = %do.body3779
  %509 = bitcast %union.tree_node* %508 to i8*, !dbg !14316
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %509) #7, !dbg !14313
  br label %do.body3794, !dbg !14313

do.body3794:                                      ; preds = %do.body3779, %if.then3786
  %type3798 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14317
  %510 = load %union.tree_node*, %union.tree_node** %type3798, align 8, !dbg !14317
  %cmp3799 = icmp eq %union.tree_node* %510, null, !dbg !14317
  br i1 %cmp3799, label %do.body3809, label %if.then3801, !dbg !14320

if.then3801:                                      ; preds = %do.body3794
  %511 = bitcast %union.tree_node* %510 to i8*, !dbg !14320
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %511) #7, !dbg !14317
  br label %do.body3809, !dbg !14317

do.body3809:                                      ; preds = %do.body3794, %if.then3801
  %512 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14321
  %513 = load %union.tree_node*, %union.tree_node** %512, align 8, !dbg !14321
  %cmp3812 = icmp eq %union.tree_node* %513, null, !dbg !14321
  br i1 %cmp3812, label %do.body3821, label %if.then3814, !dbg !14324

if.then3814:                                      ; preds = %do.body3809
  %514 = bitcast %union.tree_node* %513 to i8*, !dbg !14324
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %514) #7, !dbg !14321
  br label %do.body3821, !dbg !14321

do.body3821:                                      ; preds = %do.body3809, %if.then3814
  %nonlocalized_vars = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14325
  %515 = bitcast %union.tree_node** %nonlocalized_vars to %struct.VEC_tree_gc**, !dbg !14325
  %516 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %515, align 8, !dbg !14325
  %cmp3824 = icmp eq %struct.VEC_tree_gc* %516, null, !dbg !14325
  br i1 %cmp3824, label %do.body3833, label %if.then3826, !dbg !14328

if.then3826:                                      ; preds = %do.body3821
  %517 = bitcast %struct.VEC_tree_gc* %516 to i8*, !dbg !14328
  tail call void @gt_pch_nx_VEC_tree_gc(i8* nonnull %517) #6, !dbg !14325
  br label %do.body3833, !dbg !14325

do.body3833:                                      ; preds = %do.body3821, %if.then3826
  %518 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14329
  %519 = load %union.tree_node*, %union.tree_node** %518, align 8, !dbg !14329
  %cmp3836 = icmp eq %union.tree_node* %519, null, !dbg !14329
  br i1 %cmp3836, label %do.body3845, label %if.then3838, !dbg !14332

if.then3838:                                      ; preds = %do.body3833
  %520 = bitcast %union.tree_node* %519 to i8*, !dbg !14332
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %520) #7, !dbg !14329
  br label %do.body3845, !dbg !14329

do.body3845:                                      ; preds = %do.body3833, %if.then3838
  %supercontext = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14333
  %521 = bitcast i40* %supercontext to %union.tree_node**, !dbg !14333
  %522 = load %union.tree_node*, %union.tree_node** %521, align 8, !dbg !14333
  %cmp3848 = icmp eq %union.tree_node* %522, null, !dbg !14333
  br i1 %cmp3848, label %do.body3857, label %if.then3850, !dbg !14336

if.then3850:                                      ; preds = %do.body3845
  %523 = bitcast %union.tree_node* %522 to i8*, !dbg !14336
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %523) #7, !dbg !14333
  br label %do.body3857, !dbg !14333

do.body3857:                                      ; preds = %do.body3845, %if.then3850
  %abstract_origin3860 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14337
  %524 = bitcast i32* %abstract_origin3860 to %union.tree_node**, !dbg !14337
  %525 = load %union.tree_node*, %union.tree_node** %524, align 8, !dbg !14337
  %cmp3861 = icmp eq %union.tree_node* %525, null, !dbg !14337
  br i1 %cmp3861, label %do.body3870, label %if.then3863, !dbg !14340

if.then3863:                                      ; preds = %do.body3857
  %526 = bitcast %union.tree_node* %525 to i8*, !dbg !14340
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %526) #7, !dbg !14337
  br label %do.body3870, !dbg !14337

do.body3870:                                      ; preds = %do.body3857, %if.then3863
  %527 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14341
  %528 = load %union.tree_node*, %union.tree_node** %527, align 8, !dbg !14341
  %cmp3873 = icmp eq %union.tree_node* %528, null, !dbg !14341
  br i1 %cmp3873, label %do.body3882, label %if.then3875, !dbg !14344

if.then3875:                                      ; preds = %do.body3870
  %529 = bitcast %union.tree_node* %528 to i8*, !dbg !14344
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %529) #7, !dbg !14341
  br label %do.body3882, !dbg !14341

do.body3882:                                      ; preds = %do.body3870, %if.then3875
  %530 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14345
  %531 = load %union.tree_node*, %union.tree_node** %530, align 8, !dbg !14345
  %cmp3885 = icmp eq %union.tree_node* %531, null, !dbg !14345
  br i1 %cmp3885, label %sw.epilog4433, label %if.then3887, !dbg !14348

if.then3887:                                      ; preds = %do.body3882
  %532 = bitcast %union.tree_node* %531 to i8*, !dbg !14348
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %532) #7, !dbg !14345
  br label %sw.epilog4433, !dbg !14345

do.body3895:                                      ; preds = %sw.bb
  %chain3899 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14349
  %533 = load %union.tree_node*, %union.tree_node** %chain3899, align 8, !dbg !14349
  %cmp3900 = icmp eq %union.tree_node* %533, null, !dbg !14349
  br i1 %cmp3900, label %do.body3910, label %if.then3902, !dbg !14352

if.then3902:                                      ; preds = %do.body3895
  %534 = bitcast %union.tree_node* %533 to i8*, !dbg !14352
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %534) #7, !dbg !14349
  br label %do.body3910, !dbg !14349

do.body3910:                                      ; preds = %do.body3895, %if.then3902
  %type3914 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14353
  %535 = load %union.tree_node*, %union.tree_node** %type3914, align 8, !dbg !14353
  %cmp3915 = icmp eq %union.tree_node* %535, null, !dbg !14353
  br i1 %cmp3915, label %do.body3925, label %if.then3917, !dbg !14356

if.then3917:                                      ; preds = %do.body3910
  %536 = bitcast %union.tree_node* %535 to i8*, !dbg !14356
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %536) #7, !dbg !14353
  br label %do.body3925, !dbg !14353

do.body3925:                                      ; preds = %do.body3910, %if.then3917
  %offset3928 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14357
  %537 = bitcast i32* %offset3928 to %union.tree_node**, !dbg !14357
  %538 = load %union.tree_node*, %union.tree_node** %537, align 8, !dbg !14357
  %cmp3929 = icmp eq %union.tree_node* %538, null, !dbg !14357
  br i1 %cmp3929, label %do.body3938, label %if.then3931, !dbg !14360

if.then3931:                                      ; preds = %do.body3925
  %539 = bitcast %union.tree_node* %538 to i8*, !dbg !14360
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %539) #7, !dbg !14357
  br label %do.body3938, !dbg !14357

do.body3938:                                      ; preds = %do.body3925, %if.then3931
  %540 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14361
  %541 = load %union.tree_node*, %union.tree_node** %540, align 8, !dbg !14361
  %cmp3941 = icmp eq %union.tree_node* %541, null, !dbg !14361
  br i1 %cmp3941, label %do.body3950, label %if.then3943, !dbg !14364

if.then3943:                                      ; preds = %do.body3938
  %542 = bitcast %union.tree_node* %541 to i8*, !dbg !14364
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %542) #7, !dbg !14361
  br label %do.body3950, !dbg !14361

do.body3950:                                      ; preds = %do.body3938, %if.then3943
  %543 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14365
  %544 = load %union.tree_node*, %union.tree_node** %543, align 8, !dbg !14365
  %cmp3953 = icmp eq %union.tree_node* %544, null, !dbg !14365
  br i1 %cmp3953, label %do.body3962, label %if.then3955, !dbg !14368

if.then3955:                                      ; preds = %do.body3950
  %545 = bitcast %union.tree_node* %544 to i8*, !dbg !14368
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %545) #7, !dbg !14365
  br label %do.body3962, !dbg !14365

do.body3962:                                      ; preds = %do.body3950, %if.then3955
  %546 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14369
  %547 = load %union.tree_node*, %union.tree_node** %546, align 8, !dbg !14369
  %cmp3965 = icmp eq %union.tree_node* %547, null, !dbg !14369
  br i1 %cmp3965, label %do.body3974, label %if.then3967, !dbg !14372

if.then3967:                                      ; preds = %do.body3962
  %548 = bitcast %union.tree_node* %547 to i8*, !dbg !14372
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %548) #7, !dbg !14369
  br label %do.body3974, !dbg !14369

do.body3974:                                      ; preds = %do.body3962, %if.then3967
  %base_accesses = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14373
  %549 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !14373
  %550 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %549, align 8, !dbg !14373
  %cmp3977 = icmp eq %struct.VEC_tree_gc* %550, null, !dbg !14373
  br i1 %cmp3977, label %do.body3986, label %if.then3979, !dbg !14376

if.then3979:                                      ; preds = %do.body3974
  %551 = bitcast %struct.VEC_tree_gc* %550 to i8*, !dbg !14376
  tail call void @gt_pch_nx_VEC_tree_gc(i8* nonnull %551) #6, !dbg !14373
  br label %do.body3986, !dbg !14373

do.body3986:                                      ; preds = %do.body3974, %if.then3979
  %inheritance = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14377
  %552 = bitcast i32* %inheritance to %union.tree_node**, !dbg !14377
  %553 = load %union.tree_node*, %union.tree_node** %552, align 8, !dbg !14377
  %cmp3989 = icmp eq %union.tree_node* %553, null, !dbg !14377
  br i1 %cmp3989, label %do.body3998, label %if.then3991, !dbg !14380

if.then3991:                                      ; preds = %do.body3986
  %554 = bitcast %union.tree_node* %553 to i8*, !dbg !14380
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %554) #7, !dbg !14377
  br label %do.body3998, !dbg !14377

do.body3998:                                      ; preds = %do.body3986, %if.then3991
  %555 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14381
  %556 = load %union.tree_node*, %union.tree_node** %555, align 8, !dbg !14381
  %cmp4001 = icmp eq %union.tree_node* %556, null, !dbg !14381
  br i1 %cmp4001, label %do.body4010, label %if.then4003, !dbg !14384

if.then4003:                                      ; preds = %do.body3998
  %557 = bitcast %union.tree_node* %556 to i8*, !dbg !14384
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %557) #7, !dbg !14381
  br label %do.body4010, !dbg !14381

do.body4010:                                      ; preds = %do.body3998, %if.then4003
  %558 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14385
  %559 = load %union.tree_node*, %union.tree_node** %558, align 8, !dbg !14385
  %cmp4013 = icmp eq %union.tree_node* %559, null, !dbg !14385
  br i1 %cmp4013, label %do.end4021, label %if.then4015, !dbg !14388

if.then4015:                                      ; preds = %do.body4010
  %560 = bitcast %union.tree_node* %559 to i8*, !dbg !14388
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %560) #7, !dbg !14385
  br label %do.end4021, !dbg !14385

do.end4021:                                       ; preds = %do.body4010, %if.then4015
  %base_binfos = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14389
  %num = bitcast %union.tree_node** %base_binfos to i32*, !dbg !14390
  %561 = load i32, i32* %num, align 8, !dbg !14390
  %conv4025 = zext i32 %561 to i64, !dbg !14391
  call void @llvm.dbg.value(metadata i64 %conv4025, metadata !13331, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata i64 0, metadata !13329, metadata !DIExpression()), !dbg !14392
  %vec4035 = getelementptr inbounds %union.tree_node*, %union.tree_node** %base_binfos, i64 1, !dbg !14393
  br label %for.cond4026, !dbg !14399

for.cond4026:                                     ; preds = %for.inc4049, %do.end4021
  %i3.0 = phi i64 [ 0, %do.end4021 ], [ %inc4050, %for.inc4049 ], !dbg !14400
  call void @llvm.dbg.value(metadata i64 %i3.0, metadata !13329, metadata !DIExpression()), !dbg !14392
  %cmp4027 = icmp eq i64 %i3.0, %conv4025, !dbg !14401
  br i1 %cmp4027, label %sw.epilog4433.loopexit6, label %do.body4030, !dbg !14402

do.body4030:                                      ; preds = %for.cond4026
  %arrayidx4036 = getelementptr inbounds %union.tree_node*, %union.tree_node** %vec4035, i64 %i3.0, !dbg !14403
  %562 = load %union.tree_node*, %union.tree_node** %arrayidx4036, align 8, !dbg !14403
  %cmp4037 = icmp eq %union.tree_node* %562, null, !dbg !14403
  br i1 %cmp4037, label %for.inc4049, label %if.then4039, !dbg !14404

if.then4039:                                      ; preds = %do.body4030
  %563 = bitcast %union.tree_node* %562 to i8*, !dbg !14404
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %563) #7, !dbg !14403
  br label %for.inc4049, !dbg !14403

for.inc4049:                                      ; preds = %do.body4030, %if.then4039
  %inc4050 = add nuw nsw i64 %i3.0, 1, !dbg !14405
  call void @llvm.dbg.value(metadata i64 %inc4050, metadata !13329, metadata !DIExpression()), !dbg !14392
  br label %for.cond4026, !dbg !14406, !llvm.loop !14407

do.body4053:                                      ; preds = %sw.bb
  %chain4056 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14409
  %564 = load %union.tree_node*, %union.tree_node** %chain4056, align 8, !dbg !14409
  %cmp4057 = icmp eq %union.tree_node* %564, null, !dbg !14409
  br i1 %cmp4057, label %do.body4067, label %if.then4059, !dbg !14412

if.then4059:                                      ; preds = %do.body4053
  %565 = bitcast %union.tree_node* %564 to i8*, !dbg !14412
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %565) #7, !dbg !14409
  br label %do.body4067, !dbg !14409

do.body4067:                                      ; preds = %do.body4053, %if.then4059
  %type4071 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14413
  %566 = load %union.tree_node*, %union.tree_node** %type4071, align 8, !dbg !14413
  %cmp4072 = icmp eq %union.tree_node* %566, null, !dbg !14413
  br i1 %cmp4072, label %do.body4082, label %if.then4074, !dbg !14416

if.then4074:                                      ; preds = %do.body4067
  %567 = bitcast %union.tree_node* %566 to i8*, !dbg !14416
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %567) #7, !dbg !14413
  br label %do.body4082, !dbg !14413

do.body4082:                                      ; preds = %do.body4067, %if.then4074
  %head = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14417
  %568 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !14417
  %569 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %568, align 8, !dbg !14417
  %cmp4085 = icmp eq %struct.tree_statement_list_node* %569, null, !dbg !14417
  br i1 %cmp4085, label %do.body4094, label %if.then4087, !dbg !14420

if.then4087:                                      ; preds = %do.body4082
  %570 = bitcast %struct.tree_statement_list_node* %569 to i8*, !dbg !14420
  tail call void @gt_pch_nx_tree_statement_list_node(i8* nonnull %570) #6, !dbg !14417
  br label %do.body4094, !dbg !14417

do.body4094:                                      ; preds = %do.body4082, %if.then4087
  %tail = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14421
  %571 = bitcast %union.tree_node** %tail to %struct.tree_statement_list_node**, !dbg !14421
  %572 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %571, align 8, !dbg !14421
  %cmp4097 = icmp eq %struct.tree_statement_list_node* %572, null, !dbg !14421
  br i1 %cmp4097, label %sw.epilog4433, label %if.then4099, !dbg !14424

if.then4099:                                      ; preds = %do.body4094
  %573 = bitcast %struct.tree_statement_list_node* %572 to i8*, !dbg !14424
  tail call void @gt_pch_nx_tree_statement_list_node(i8* nonnull %573) #6, !dbg !14421
  br label %sw.epilog4433, !dbg !14421

do.body4107:                                      ; preds = %sw.bb
  %chain4110 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14425
  %574 = load %union.tree_node*, %union.tree_node** %chain4110, align 8, !dbg !14425
  %cmp4111 = icmp eq %union.tree_node* %574, null, !dbg !14425
  br i1 %cmp4111, label %do.body4121, label %if.then4113, !dbg !14428

if.then4113:                                      ; preds = %do.body4107
  %575 = bitcast %union.tree_node* %574 to i8*, !dbg !14428
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %575) #7, !dbg !14425
  br label %do.body4121, !dbg !14425

do.body4121:                                      ; preds = %do.body4107, %if.then4113
  %type4125 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14429
  %576 = load %union.tree_node*, %union.tree_node** %type4125, align 8, !dbg !14429
  %cmp4126 = icmp eq %union.tree_node* %576, null, !dbg !14429
  br i1 %cmp4126, label %do.body4136, label %if.then4128, !dbg !14432

if.then4128:                                      ; preds = %do.body4121
  %577 = bitcast %union.tree_node* %576 to i8*, !dbg !14432
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %577) #7, !dbg !14429
  br label %do.body4136, !dbg !14429

do.body4136:                                      ; preds = %do.body4121, %if.then4128
  %elts = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14433
  %578 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !14433
  %579 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %578, align 8, !dbg !14433
  %cmp4139 = icmp eq %struct.VEC_constructor_elt_gc* %579, null, !dbg !14433
  br i1 %cmp4139, label %sw.epilog4433, label %if.then4141, !dbg !14436

if.then4141:                                      ; preds = %do.body4136
  %580 = bitcast %struct.VEC_constructor_elt_gc* %579 to i8*, !dbg !14436
  tail call void @gt_pch_nx_VEC_constructor_elt_gc(i8* nonnull %580) #6, !dbg !14433
  br label %sw.epilog4433, !dbg !14433

do.body4149:                                      ; preds = %sw.bb
  %chain4152 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14437
  %581 = load %union.tree_node*, %union.tree_node** %chain4152, align 8, !dbg !14437
  %cmp4153 = icmp eq %union.tree_node* %581, null, !dbg !14437
  br i1 %cmp4153, label %do.body4163, label %if.then4155, !dbg !14440

if.then4155:                                      ; preds = %do.body4149
  %582 = bitcast %union.tree_node* %581 to i8*, !dbg !14440
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %582) #7, !dbg !14437
  br label %do.body4163, !dbg !14437

do.body4163:                                      ; preds = %do.body4149, %if.then4155
  %type4167 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14441
  %583 = load %union.tree_node*, %union.tree_node** %type4167, align 8, !dbg !14441
  %cmp4168 = icmp eq %union.tree_node* %583, null, !dbg !14441
  br i1 %cmp4168, label %do.body4178, label %if.then4170, !dbg !14444

if.then4170:                                      ; preds = %do.body4163
  %584 = bitcast %union.tree_node* %583 to i8*, !dbg !14444
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %584) #7, !dbg !14441
  br label %do.body4178, !dbg !14441

do.body4178:                                      ; preds = %do.body4163, %if.then4170
  %gimple_reduction_init = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14445
  %585 = bitcast %union.tree_node** %gimple_reduction_init to %struct.gimple_seq_d**, !dbg !14445
  %586 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %585, align 8, !dbg !14445
  %cmp4181 = icmp eq %struct.gimple_seq_d* %586, null, !dbg !14445
  br i1 %cmp4181, label %do.body4190, label %if.then4183, !dbg !14448

if.then4183:                                      ; preds = %do.body4178
  %587 = bitcast %struct.gimple_seq_d* %586 to i8*, !dbg !14448
  tail call void @gt_pch_nx_gimple_seq_d(i8* nonnull %587) #6, !dbg !14445
  br label %do.body4190, !dbg !14445

do.body4190:                                      ; preds = %do.body4178, %if.then4183
  %gimple_reduction_merge = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14449
  %588 = bitcast %union.tree_node** %gimple_reduction_merge to %struct.gimple_seq_d**, !dbg !14449
  %589 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %588, align 8, !dbg !14449
  %cmp4193 = icmp eq %struct.gimple_seq_d* %589, null, !dbg !14449
  br i1 %cmp4193, label %do.end4201, label %if.then4195, !dbg !14452

if.then4195:                                      ; preds = %do.body4190
  %590 = bitcast %struct.gimple_seq_d* %589 to i8*, !dbg !14452
  tail call void @gt_pch_nx_gimple_seq_d(i8* nonnull %590) #6, !dbg !14449
  br label %do.end4201, !dbg !14449

do.end4201:                                       ; preds = %do.body4190, %if.then4195
  %591 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14453
  %592 = load i32, i32* %591, align 4, !dbg !14453
  %idxprom = zext i32 %592 to i64, !dbg !14454
  %arrayidx4205 = getelementptr inbounds [0 x i8], [0 x i8]* @omp_clause_num_ops, i64 0, i64 %idxprom, !dbg !14454
  %593 = load i8, i8* %arrayidx4205, align 1, !dbg !14454
  %conv4206 = zext i8 %593 to i64, !dbg !14455
  call void @llvm.dbg.value(metadata i64 %conv4206, metadata !13334, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.value(metadata i64 0, metadata !13332, metadata !DIExpression()), !dbg !14456
  %ops = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14457
  %594 = bitcast i40* %ops to [1 x %union.tree_node*]*, !dbg !14457
  br label %for.cond4207, !dbg !14463

for.cond4207:                                     ; preds = %for.inc4225, %do.end4201
  %i4.0 = phi i64 [ 0, %do.end4201 ], [ %inc4226, %for.inc4225 ], !dbg !14464
  call void @llvm.dbg.value(metadata i64 %i4.0, metadata !13332, metadata !DIExpression()), !dbg !14456
  %cmp4208 = icmp eq i64 %i4.0, %conv4206, !dbg !14465
  br i1 %cmp4208, label %sw.epilog4433.loopexit7, label %do.body4211, !dbg !14466

do.body4211:                                      ; preds = %for.cond4207
  %arrayidx4214 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %594, i64 0, i64 %i4.0, !dbg !14467
  %595 = load %union.tree_node*, %union.tree_node** %arrayidx4214, align 8, !dbg !14467
  %cmp4215 = icmp eq %union.tree_node* %595, null, !dbg !14467
  br i1 %cmp4215, label %for.inc4225, label %if.then4217, !dbg !14468

if.then4217:                                      ; preds = %do.body4211
  %596 = bitcast %union.tree_node* %595 to i8*, !dbg !14468
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %596) #7, !dbg !14467
  br label %for.inc4225, !dbg !14467

for.inc4225:                                      ; preds = %do.body4211, %if.then4217
  %inc4226 = add nuw nsw i64 %i4.0, 1, !dbg !14469
  call void @llvm.dbg.value(metadata i64 %inc4226, metadata !13332, metadata !DIExpression()), !dbg !14456
  br label %for.cond4207, !dbg !14470, !llvm.loop !14471

do.body4229:                                      ; preds = %sw.bb
  %chain4232 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14473
  %597 = load %union.tree_node*, %union.tree_node** %chain4232, align 8, !dbg !14473
  %cmp4233 = icmp eq %union.tree_node* %597, null, !dbg !14473
  br i1 %cmp4233, label %do.body4243, label %if.then4235, !dbg !14476

if.then4235:                                      ; preds = %do.body4229
  %598 = bitcast %union.tree_node* %597 to i8*, !dbg !14476
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %598) #7, !dbg !14473
  br label %do.body4243, !dbg !14473

do.body4243:                                      ; preds = %do.body4229, %if.then4235
  %type4247 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14477
  %599 = load %union.tree_node*, %union.tree_node** %type4247, align 8, !dbg !14477
  %cmp4248 = icmp eq %union.tree_node* %599, null, !dbg !14477
  br i1 %cmp4248, label %sw.epilog4433, label %if.then4250, !dbg !14480

if.then4250:                                      ; preds = %do.body4243
  %600 = bitcast %union.tree_node* %599 to i8*, !dbg !14480
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %600) #7, !dbg !14477
  br label %sw.epilog4433, !dbg !14477

do.body4259:                                      ; preds = %sw.bb
  %chain4262 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14481
  %601 = load %union.tree_node*, %union.tree_node** %chain4262, align 8, !dbg !14481
  %cmp4263 = icmp eq %union.tree_node* %601, null, !dbg !14481
  br i1 %cmp4263, label %do.body4273, label %if.then4265, !dbg !14484

if.then4265:                                      ; preds = %do.body4259
  %602 = bitcast %union.tree_node* %601 to i8*, !dbg !14484
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %602) #7, !dbg !14481
  br label %do.body4273, !dbg !14481

do.body4273:                                      ; preds = %do.body4259, %if.then4265
  %type4277 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14485
  %603 = load %union.tree_node*, %union.tree_node** %type4277, align 8, !dbg !14485
  %cmp4278 = icmp eq %union.tree_node* %603, null, !dbg !14485
  br i1 %cmp4278, label %sw.epilog4433, label %if.then4280, !dbg !14488

if.then4280:                                      ; preds = %do.body4273
  %604 = bitcast %union.tree_node* %603 to i8*, !dbg !14488
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %604) #7, !dbg !14485
  br label %sw.epilog4433, !dbg !14485

do.body4291:                                      ; preds = %while.body5
  %chain4294 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14489
  %605 = load %union.tree_node*, %union.tree_node** %chain4294, align 8, !dbg !14489
  %cmp4295 = icmp eq %union.tree_node* %605, null, !dbg !14489
  br i1 %cmp4295, label %do.body4305, label %if.then4297, !dbg !14492

if.then4297:                                      ; preds = %do.body4291
  %606 = bitcast %union.tree_node* %605 to i8*, !dbg !14492
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %606) #7, !dbg !14489
  br label %do.body4305, !dbg !14489

do.body4305:                                      ; preds = %do.body4291, %if.then4297
  %type4309 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14493
  %607 = load %union.tree_node*, %union.tree_node** %type4309, align 8, !dbg !14493
  %cmp4310 = icmp eq %union.tree_node* %607, null, !dbg !14493
  br i1 %cmp4310, label %do.end4319, label %if.then4312, !dbg !14496

if.then4312:                                      ; preds = %do.body4305
  %608 = bitcast %union.tree_node* %607 to i8*, !dbg !14496
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %608) #7, !dbg !14493
  br label %do.end4319, !dbg !14493

do.end4319:                                       ; preds = %do.body4305, %if.then4312
  %node = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14497
  %str4322 = bitcast i32* %node to i8**, !dbg !14498
  %609 = load i8*, i8** %str4322, align 8, !dbg !14498
  tail call void @gt_pch_n_S(i8* %609) #6, !dbg !14499
  %610 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !14500
  %flags = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %610, i64 0, i32 3, !dbg !14500
  %bf.load4326 = load i16, i16* %flags, align 2, !dbg !14500
  %611 = and i16 %bf.load4326, 4096, !dbg !14500
  %tobool4328 = icmp eq i16 %611, 0, !dbg !14500
  br i1 %tobool4328, label %cond.false4330, label %cond.end4364, !dbg !14500

cond.false4330:                                   ; preds = %do.end4319
  %bf.clear4336 = and i16 %bf.load4326, 63, !dbg !14500
  %cmp4338 = icmp eq i16 %bf.clear4336, 1, !dbg !14500
  br i1 %cmp4338, label %cond.true4340, label %cond.false4351, !dbg !14500

cond.true4340:                                    ; preds = %cond.false4330
  %612 = lshr i16 %bf.load4326, 7, !dbg !14500
  %613 = and i16 %612, 2, !dbg !14500
  br label %cond.end4364, !dbg !14500

cond.false4351:                                   ; preds = %cond.false4330
  %cmp4359 = icmp eq i16 %bf.clear4336, 2, !dbg !14500
  %cond4361 = select i1 %cmp4359, i16 1, i16 4, !dbg !14500
  br label %cond.end4364, !dbg !14500

cond.end4364:                                     ; preds = %do.end4319, %cond.true4340, %cond.false4351
  %cond4365 = phi i16 [ 3, %do.end4319 ], [ %613, %cond.true4340 ], [ %cond4361, %cond.false4351 ], !dbg !14500
  switch i16 %cond4365, label %do.body4402 [
    i16 0, label %do.body4367
    i16 1, label %do.body4384
  ], !dbg !14501

do.body4367:                                      ; preds = %cond.end4364
  %value4371 = getelementptr inbounds i32, i32* %node, i64 6, !dbg !14502
  %macro = bitcast i32* %value4371 to %struct.cpp_macro**, !dbg !14502
  %614 = load %struct.cpp_macro*, %struct.cpp_macro** %macro, align 8, !dbg !14502
  %cmp4372 = icmp eq %struct.cpp_macro* %614, null, !dbg !14502
  br i1 %cmp4372, label %do.body4402, label %if.then4374, !dbg !14506

if.then4374:                                      ; preds = %do.body4367
  %615 = bitcast %struct.cpp_macro* %614 to i8*, !dbg !14506
  tail call void @gt_pch_nx_cpp_macro(i8* nonnull %615) #6, !dbg !14502
  br label %do.body4402, !dbg !14502

do.body4384:                                      ; preds = %cond.end4364
  %value4388 = getelementptr inbounds i32, i32* %node, i64 6, !dbg !14507
  %answers = bitcast i32* %value4388 to %struct.answer**, !dbg !14507
  %616 = load %struct.answer*, %struct.answer** %answers, align 8, !dbg !14507
  %cmp4389 = icmp eq %struct.answer* %616, null, !dbg !14507
  br i1 %cmp4389, label %do.body4402, label %if.then4391, !dbg !14510

if.then4391:                                      ; preds = %do.body4384
  %617 = bitcast %struct.answer* %616 to i8*, !dbg !14510
  tail call void @gt_pch_nx_answer(i8* nonnull %617) #6, !dbg !14507
  br label %do.body4402, !dbg !14507

do.body4402:                                      ; preds = %do.body4367, %do.body4384, %if.then4374, %if.then4391, %cond.end4364
  %symbol_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14511
  %618 = bitcast i40* %symbol_binding to %struct.c_binding**, !dbg !14511
  %619 = load %struct.c_binding*, %struct.c_binding** %618, align 8, !dbg !14511
  %cmp4404 = icmp eq %struct.c_binding* %619, null, !dbg !14511
  br i1 %cmp4404, label %do.body4412, label %if.then4406, !dbg !14514

if.then4406:                                      ; preds = %do.body4402
  %620 = bitcast %struct.c_binding* %619 to i8*, !dbg !14514
  tail call void @gt_pch_nx_c_binding(i8* nonnull %620) #7, !dbg !14511
  br label %do.body4412, !dbg !14511

do.body4412:                                      ; preds = %do.body4402, %if.then4406
  %tag_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14515
  %621 = bitcast i32* %tag_binding to %struct.c_binding**, !dbg !14515
  %622 = load %struct.c_binding*, %struct.c_binding** %621, align 8, !dbg !14515
  %cmp4414 = icmp eq %struct.c_binding* %622, null, !dbg !14515
  br i1 %cmp4414, label %do.body4422, label %if.then4416, !dbg !14518

if.then4416:                                      ; preds = %do.body4412
  %623 = bitcast %struct.c_binding* %622 to i8*, !dbg !14518
  tail call void @gt_pch_nx_c_binding(i8* nonnull %623) #7, !dbg !14515
  br label %do.body4422, !dbg !14515

do.body4422:                                      ; preds = %do.body4412, %if.then4416
  %label_binding = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14519
  %624 = bitcast %union.tree_node** %label_binding to %struct.c_binding**, !dbg !14519
  %625 = load %struct.c_binding*, %struct.c_binding** %624, align 8, !dbg !14519
  %cmp4424 = icmp eq %struct.c_binding* %625, null, !dbg !14519
  br i1 %cmp4424, label %sw.epilog4433, label %if.then4426, !dbg !14522

if.then4426:                                      ; preds = %do.body4422
  %626 = bitcast %struct.c_binding* %625 to i8*, !dbg !14522
  tail call void @gt_pch_nx_c_binding(i8* nonnull %626) #7, !dbg !14519
  br label %sw.epilog4433, !dbg !14519

sw.epilog4433.loopexit:                           ; preds = %for.cond
  br label %sw.epilog4433, !dbg !14523

sw.epilog4433.loopexit5:                          ; preds = %for.cond3690
  br label %sw.epilog4433, !dbg !14523

sw.epilog4433.loopexit6:                          ; preds = %for.cond4026
  br label %sw.epilog4433, !dbg !14523

sw.epilog4433.loopexit7:                          ; preds = %for.cond4207
  br label %sw.epilog4433, !dbg !14523

sw.epilog4433:                                    ; preds = %sw.epilog4433.loopexit7, %sw.epilog4433.loopexit6, %sw.epilog4433.loopexit5, %sw.epilog4433.loopexit, %do.body4273, %do.body23, %do.body51, %do.body96, %do.body138, %do.body180, %do.body207, %do.body264, %do.body350, %do.body486, %do.body660, %do.body969, %do.body1190, %do.body1425, %do.body1702, %do.body1925, %do.body2119, %do.body2331, %do.body2526, %do.body2878, %do.body3281, %do.body3525, %do.body3580, %do.body3766, %do.body3882, %do.body4094, %do.body4136, %do.body4243, %do.body4422, %if.then4426, %do.end305, %if.then29, %if.then58, %if.then101, %if.then143, %if.then185, %if.then214, %if.then269, %if.then355, %if.then491, %if.then665, %if.then974, %if.then1195, %if.then1431, %if.then1708, %if.then1930, %if.then2126, %if.then2337, %if.then2533, %if.then2885, %if.then3286, %if.then3531, %if.then3585, %if.then3771, %if.then3887, %if.then4099, %if.then4141, %if.then4250, %if.then4280, %sw.bb
  %bf.load4436 = load i64, i64* %9, align 8, !dbg !14523
  %bf.cast44383 = and i64 %bf.load4436, 65535, !dbg !14524
  %cmp4439 = icmp eq i64 %bf.cast44383, 8, !dbg !14524
  br i1 %cmp4439, label %cond.true4441, label %cond.false4445, !dbg !14523

cond.true4441:                                    ; preds = %sw.epilog4433
  %627 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14525
  br label %cond.end4449, !dbg !14523

cond.false4445:                                   ; preds = %sw.epilog4433
  %chain4448 = getelementptr inbounds %union.lang_tree_node, %union.lang_tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14526
  br label %cond.end4449, !dbg !14523

cond.end4449:                                     ; preds = %cond.false4445, %cond.true4441
  %cond4450.in.in = phi %union.tree_node** [ %627, %cond.true4441 ], [ %chain4448, %cond.false4445 ]
  %cond4450.in = bitcast %union.tree_node** %cond4450.in.in to %union.lang_tree_node**, !dbg !14527
  %cond4450 = load %union.lang_tree_node*, %union.lang_tree_node** %cond4450.in, align 8, !dbg !14523
  call void @llvm.dbg.value(metadata %union.lang_tree_node* %cond4450, metadata !13317, metadata !DIExpression()), !dbg !13335
  br label %while.cond3, !dbg !13339, !llvm.loop !14528

while.end4451:                                    ; preds = %while.cond3
  ret void, !dbg !14530
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_VEC_c_goto_bindings_p_gc(i8* %x_p) local_unnamed_addr #5 !dbg !14531 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14533, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14534, metadata !DIExpression()), !dbg !14540
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_24VEC_c_goto_bindings_p_gc, i32 4) #6, !dbg !14541
  %tobool = icmp eq i32 %call, 0, !dbg !14541
  br i1 %tobool, label %if.end9, label %if.then, !dbg !14542

if.then:                                          ; preds = %entry
  %num = bitcast i8* %x_p to i32*, !dbg !14543
  %0 = load i32, i32* %num, align 8, !dbg !14543
  %conv = zext i32 %0 to i64, !dbg !14544
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14539, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata i64 0, metadata !14535, metadata !DIExpression()), !dbg !14545
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14546
  %1 = bitcast i8* %vec to [1 x %struct.c_goto_bindings*]*, !dbg !14546
  br label %for.cond, !dbg !14552

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !14553
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !14535, metadata !DIExpression()), !dbg !14545
  %cmp = icmp eq i64 %i0.0, %conv, !dbg !14554
  br i1 %cmp, label %if.end9.loopexit, label %do.body, !dbg !14555

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.c_goto_bindings*], [1 x %struct.c_goto_bindings*]* %1, i64 0, i64 %i0.0, !dbg !14556
  %2 = load %struct.c_goto_bindings*, %struct.c_goto_bindings** %arrayidx, align 8, !dbg !14556
  %cmp3 = icmp eq %struct.c_goto_bindings* %2, null, !dbg !14556
  br i1 %cmp3, label %for.inc, label %if.then5, !dbg !14557

if.then5:                                         ; preds = %do.body
  %3 = bitcast %struct.c_goto_bindings* %2 to i8*, !dbg !14557
  tail call void @gt_pch_nx_c_goto_bindings(i8* nonnull %3) #7, !dbg !14556
  br label %for.inc, !dbg !14556

for.inc:                                          ; preds = %do.body, %if.then5
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !14558
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14535, metadata !DIExpression()), !dbg !14545
  br label %for.cond, !dbg !14559, !llvm.loop !14560

if.end9.loopexit:                                 ; preds = %for.cond
  br label %if.end9, !dbg !14562

if.end9:                                          ; preds = %if.end9.loopexit, %entry
  ret void, !dbg !14562
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_24VEC_c_goto_bindings_p_gc(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14563 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14565, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14566, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14567, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14568, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14569, metadata !DIExpression()), !dbg !14573
  %num = bitcast i8* %x_p to i32*, !dbg !14574
  %0 = load i32, i32* %num, align 8, !dbg !14574
  %conv = zext i32 %0 to i64, !dbg !14575
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14572, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !14576
  %cmp2 = icmp eq i8* %x_p, %this_obj, !dbg !14577
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14577
  %1 = bitcast i8* %vec to [1 x %struct.c_goto_bindings*]*, !dbg !14577
  br i1 %cmp2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !14582

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !14582

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !14582

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !14583
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !14570, metadata !DIExpression()), !dbg !14576
  %cmp.us = icmp eq i64 %i0.0.us, %conv, !dbg !14584
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !14585

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x %struct.c_goto_bindings*], [1 x %struct.c_goto_bindings*]* %1, i64 0, i64 %i0.0.us, !dbg !14586
  %2 = bitcast %struct.c_goto_bindings** %arrayidx.us to i8*, !dbg !14587
  tail call void %op(i8* nonnull %2, i8* %cookie) #6, !dbg !14588
  %inc.us = add nuw nsw i64 %i0.0.us, 1, !dbg !14589
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !14570, metadata !DIExpression()), !dbg !14576
  br label %for.cond.us, !dbg !14590, !llvm.loop !14591

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !14593

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14570, metadata !DIExpression()), !dbg !14576
  br label %for.end, !dbg !14593

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !14593
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_goto_bindings(i8* %x_p) local_unnamed_addr #5 !dbg !14594 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14596, metadata !DIExpression()), !dbg !14598
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14597, metadata !DIExpression()), !dbg !14598
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_15c_goto_bindings, i32 5) #6, !dbg !14599
  %tobool = icmp eq i32 %call, 0, !dbg !14599
  br i1 %tobool, label %if.end13, label %do.body, !dbg !14601

do.body:                                          ; preds = %entry
  %goto_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14602
  %scope = bitcast i8* %goto_bindings to %struct.c_scope**, !dbg !14602
  %0 = load %struct.c_scope*, %struct.c_scope** %scope, align 8, !dbg !14602
  %cmp = icmp eq %struct.c_scope* %0, null, !dbg !14602
  br i1 %cmp, label %do.body4, label %if.then1, !dbg !14606

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.c_scope* %0 to i8*, !dbg !14606
  tail call void @gt_pch_nx_c_scope(i8* nonnull %1) #7, !dbg !14602
  br label %do.body4, !dbg !14602

do.body4:                                         ; preds = %do.body, %if.then1
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14607
  %2 = bitcast i8* %bindings_in_scope to %struct.c_binding**, !dbg !14607
  %3 = load %struct.c_binding*, %struct.c_binding** %2, align 8, !dbg !14607
  %cmp6 = icmp eq %struct.c_binding* %3, null, !dbg !14607
  br i1 %cmp6, label %if.end13, label %if.then7, !dbg !14610

if.then7:                                         ; preds = %do.body4
  %4 = bitcast %struct.c_binding* %3 to i8*, !dbg !14610
  tail call void @gt_pch_nx_c_binding(i8* nonnull %4) #7, !dbg !14607
  br label %if.end13, !dbg !14607

if.end13:                                         ; preds = %do.body4, %entry, %if.then7
  ret void, !dbg !14611
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_15c_goto_bindings(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14612 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14614, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14615, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14616, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14617, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14618, metadata !DIExpression()), !dbg !14619
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !14620
  br i1 %cmp, label %if.then, label %if.end, !dbg !14622

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14618, metadata !DIExpression()), !dbg !14619
  %goto_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14623
  tail call void %op(i8* nonnull %goto_bindings, i8* %cookie) #6, !dbg !14624
  br label %if.end, !dbg !14624

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !14625

if.then2:                                         ; preds = %if.end
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14626
  tail call void %op(i8* nonnull %bindings_in_scope, i8* %cookie) #6, !dbg !14628
  br label %if.end4, !dbg !14628

if.end4:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !14629
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_scope(i8* %x_p) #5 !dbg !14630 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14632, metadata !DIExpression()), !dbg !14635
  %0 = bitcast i8* %x_p to %struct.c_scope*, !dbg !14636
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !14633, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %0, metadata !14634, metadata !DIExpression()), !dbg !14635
  br label %while.cond, !dbg !14637

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !14635
  %xlimit.0 = phi %struct.c_scope* [ %0, %entry ], [ %2, %while.body ], !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0, metadata !14634, metadata !DIExpression()), !dbg !14635
  %call = tail call i32 @gt_pch_note_object(i8* %1, i8* %1, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_7c_scope, i32 6) #6, !dbg !14638
  %tobool = icmp eq i32 %call, 0, !dbg !14637
  br i1 %tobool, label %while.cond1.preheader, label %while.body, !dbg !14637

while.cond1.preheader:                            ; preds = %while.cond
  %xlimit.0.lcssa = phi %struct.c_scope* [ %xlimit.0, %while.cond ], !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !14634, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !14634, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %xlimit.0.lcssa, metadata !14634, metadata !DIExpression()), !dbg !14635
  br label %while.cond1, !dbg !14639

while.body:                                       ; preds = %while.cond
  %outer = getelementptr inbounds %struct.c_scope, %struct.c_scope* %xlimit.0, i64 0, i32 0, !dbg !14640
  %2 = load %struct.c_scope*, %struct.c_scope** %outer, align 8, !dbg !14640
  %3 = bitcast %struct.c_scope* %2 to i8*, !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %2, metadata !14634, metadata !DIExpression()), !dbg !14635
  br label %while.cond, !dbg !14637, !llvm.loop !14641

while.cond1:                                      ; preds = %while.cond1.preheader, %do.end33
  %x.0 = phi %struct.c_scope* [ %14, %do.end33 ], [ %0, %while.cond1.preheader ], !dbg !14635
  call void @llvm.dbg.value(metadata %struct.c_scope* %x.0, metadata !14633, metadata !DIExpression()), !dbg !14635
  %cmp = icmp eq %struct.c_scope* %x.0, %xlimit.0.lcssa, !dbg !14643
  br i1 %cmp, label %while.end35, label %do.body, !dbg !14639

do.body:                                          ; preds = %while.cond1
  %outer3 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 0, !dbg !14644
  %4 = load %struct.c_scope*, %struct.c_scope** %outer3, align 8, !dbg !14644
  %cmp4 = icmp eq %struct.c_scope* %4, null, !dbg !14644
  br i1 %cmp4, label %do.body6, label %if.then, !dbg !14648

if.then:                                          ; preds = %do.body
  %5 = bitcast %struct.c_scope* %4 to i8*, !dbg !14648
  tail call void @gt_pch_nx_c_scope(i8* nonnull %5) #7, !dbg !14644
  br label %do.body6, !dbg !14644

do.body6:                                         ; preds = %do.body, %if.then
  %outer_function = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 1, !dbg !14649
  %6 = load %struct.c_scope*, %struct.c_scope** %outer_function, align 8, !dbg !14649
  %cmp7 = icmp eq %struct.c_scope* %6, null, !dbg !14649
  br i1 %cmp7, label %do.body13, label %if.then8, !dbg !14652

if.then8:                                         ; preds = %do.body6
  %7 = bitcast %struct.c_scope* %6 to i8*, !dbg !14652
  tail call void @gt_pch_nx_c_scope(i8* nonnull %7) #7, !dbg !14649
  br label %do.body13, !dbg !14649

do.body13:                                        ; preds = %do.body6, %if.then8
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 2, !dbg !14653
  %8 = load %struct.c_binding*, %struct.c_binding** %bindings, align 8, !dbg !14653
  %cmp14 = icmp eq %struct.c_binding* %8, null, !dbg !14653
  br i1 %cmp14, label %do.body20, label %if.then15, !dbg !14656

if.then15:                                        ; preds = %do.body13
  %9 = bitcast %struct.c_binding* %8 to i8*, !dbg !14656
  tail call void @gt_pch_nx_c_binding(i8* nonnull %9) #7, !dbg !14653
  br label %do.body20, !dbg !14653

do.body20:                                        ; preds = %do.body13, %if.then15
  %blocks = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 3, !dbg !14657
  %10 = load %union.tree_node*, %union.tree_node** %blocks, align 8, !dbg !14657
  %cmp21 = icmp eq %union.tree_node* %10, null, !dbg !14657
  br i1 %cmp21, label %do.body27, label %if.then22, !dbg !14660

if.then22:                                        ; preds = %do.body20
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !14660
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %11) #7, !dbg !14657
  br label %do.body27, !dbg !14657

do.body27:                                        ; preds = %do.body20, %if.then22
  %blocks_last = getelementptr inbounds %struct.c_scope, %struct.c_scope* %x.0, i64 0, i32 4, !dbg !14661
  %12 = load %union.tree_node*, %union.tree_node** %blocks_last, align 8, !dbg !14661
  %cmp28 = icmp eq %union.tree_node* %12, null, !dbg !14661
  br i1 %cmp28, label %do.end33, label %if.then29, !dbg !14664

if.then29:                                        ; preds = %do.body27
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !14664
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %13) #7, !dbg !14661
  br label %do.end33, !dbg !14661

do.end33:                                         ; preds = %do.body27, %if.then29
  %14 = load %struct.c_scope*, %struct.c_scope** %outer3, align 8, !dbg !14665
  call void @llvm.dbg.value(metadata %struct.c_scope* %14, metadata !14633, metadata !DIExpression()), !dbg !14635
  br label %while.cond1, !dbg !14639, !llvm.loop !14666

while.end35:                                      ; preds = %while.cond1
  ret void, !dbg !14668
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_binding(i8* %x_p) local_unnamed_addr #5 !dbg !14669 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14671, metadata !DIExpression()), !dbg !14674
  %0 = bitcast i8* %x_p to %struct.c_binding*, !dbg !14675
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !14672, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %0, metadata !14673, metadata !DIExpression()), !dbg !14674
  br label %while.cond, !dbg !14676

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !14674
  %xlimit.0 = phi %struct.c_binding* [ %0, %entry ], [ %2, %while.body ], !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0, metadata !14673, metadata !DIExpression()), !dbg !14674
  %call = tail call i32 @gt_pch_note_object(i8* %1, i8* %1, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_9c_binding, i32 7) #6, !dbg !14677
  %tobool = icmp eq i32 %call, 0, !dbg !14676
  br i1 %tobool, label %while.cond1.preheader, label %while.body, !dbg !14676

while.cond1.preheader:                            ; preds = %while.cond
  %xlimit.0.lcssa = phi %struct.c_binding* [ %xlimit.0, %while.cond ], !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !14673, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !14673, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %xlimit.0.lcssa, metadata !14673, metadata !DIExpression()), !dbg !14674
  br label %while.cond1, !dbg !14678

while.body:                                       ; preds = %while.cond
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %xlimit.0, i64 0, i32 3, !dbg !14679
  %2 = load %struct.c_binding*, %struct.c_binding** %prev, align 8, !dbg !14679
  %3 = bitcast %struct.c_binding* %2 to i8*, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %2, metadata !14673, metadata !DIExpression()), !dbg !14674
  br label %while.cond, !dbg !14676, !llvm.loop !14680

while.cond1:                                      ; preds = %while.cond1.preheader, %do.end52
  %x.0 = phi %struct.c_binding* [ %18, %do.end52 ], [ %0, %while.cond1.preheader ], !dbg !14674
  call void @llvm.dbg.value(metadata %struct.c_binding* %x.0, metadata !14672, metadata !DIExpression()), !dbg !14674
  %cmp = icmp eq %struct.c_binding* %x.0, %xlimit.0.lcssa, !dbg !14682
  br i1 %cmp, label %while.end54, label %while.body2, !dbg !14678

while.body2:                                      ; preds = %while.cond1
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 1, !dbg !14683
  %4 = bitcast %union.tree_node** %decl to i64**, !dbg !14683
  %5 = load i64*, i64** %4, align 8, !dbg !14683
  %bf.load = load i64, i64* %5, align 8, !dbg !14683
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !14685
  %cmp3 = icmp eq i64 %bf.cast2, 30, !dbg !14685
  br i1 %cmp3, label %do.body9, label %do.body, !dbg !14686

do.body:                                          ; preds = %while.body2
  %type = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 0, i32 0, !dbg !14687
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !14687
  %cmp4 = icmp eq %union.tree_node* %6, null, !dbg !14687
  br i1 %cmp4, label %do.body19, label %if.then, !dbg !14691

if.then:                                          ; preds = %do.body
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !14691
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %7) #7, !dbg !14687
  br label %do.body19, !dbg !14687

do.body9:                                         ; preds = %while.body2
  %label = bitcast %struct.c_binding* %x.0 to %struct.c_label_vars**, !dbg !14692
  %8 = load %struct.c_label_vars*, %struct.c_label_vars** %label, align 8, !dbg !14692
  %cmp11 = icmp eq %struct.c_label_vars* %8, null, !dbg !14692
  br i1 %cmp11, label %do.body19, label %if.then13, !dbg !14695

if.then13:                                        ; preds = %do.body9
  %9 = bitcast %struct.c_label_vars* %8 to i8*, !dbg !14695
  tail call void @gt_pch_nx_c_label_vars(i8* nonnull %9) #7, !dbg !14692
  br label %do.body19, !dbg !14692

do.body19:                                        ; preds = %do.body, %do.body9, %if.then, %if.then13
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14696
  %cmp21 = icmp eq %union.tree_node* %10, null, !dbg !14696
  br i1 %cmp21, label %do.body28, label %if.then23, !dbg !14699

if.then23:                                        ; preds = %do.body19
  %11 = bitcast %union.tree_node* %10 to i8*, !dbg !14699
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %11) #7, !dbg !14696
  br label %do.body28, !dbg !14696

do.body28:                                        ; preds = %do.body19, %if.then23
  %id = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 2, !dbg !14700
  %12 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !14700
  %cmp29 = icmp eq %union.tree_node* %12, null, !dbg !14700
  br i1 %cmp29, label %do.body36, label %if.then31, !dbg !14703

if.then31:                                        ; preds = %do.body28
  %13 = bitcast %union.tree_node* %12 to i8*, !dbg !14703
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %13) #7, !dbg !14700
  br label %do.body36, !dbg !14700

do.body36:                                        ; preds = %do.body28, %if.then31
  %prev37 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 3, !dbg !14704
  %14 = load %struct.c_binding*, %struct.c_binding** %prev37, align 8, !dbg !14704
  %cmp38 = icmp eq %struct.c_binding* %14, null, !dbg !14704
  br i1 %cmp38, label %do.body45, label %if.then40, !dbg !14707

if.then40:                                        ; preds = %do.body36
  %15 = bitcast %struct.c_binding* %14 to i8*, !dbg !14707
  tail call void @gt_pch_nx_c_binding(i8* nonnull %15) #7, !dbg !14704
  br label %do.body45, !dbg !14704

do.body45:                                        ; preds = %do.body36, %if.then40
  %shadowed = getelementptr inbounds %struct.c_binding, %struct.c_binding* %x.0, i64 0, i32 4, !dbg !14708
  %16 = load %struct.c_binding*, %struct.c_binding** %shadowed, align 8, !dbg !14708
  %cmp46 = icmp eq %struct.c_binding* %16, null, !dbg !14708
  br i1 %cmp46, label %do.end52, label %if.then48, !dbg !14711

if.then48:                                        ; preds = %do.body45
  %17 = bitcast %struct.c_binding* %16 to i8*, !dbg !14711
  tail call void @gt_pch_nx_c_binding(i8* nonnull %17) #7, !dbg !14708
  br label %do.end52, !dbg !14708

do.end52:                                         ; preds = %do.body45, %if.then48
  %18 = load %struct.c_binding*, %struct.c_binding** %prev37, align 8, !dbg !14712
  call void @llvm.dbg.value(metadata %struct.c_binding* %18, metadata !14672, metadata !DIExpression()), !dbg !14674
  br label %while.cond1, !dbg !14678, !llvm.loop !14713

while.end54:                                      ; preds = %while.cond1
  ret void, !dbg !14715
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_7c_scope(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14716 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14718, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14719, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14720, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14721, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14722, metadata !DIExpression()), !dbg !14724
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !14725
  br i1 %cmp, label %if.then, label %if.end, !dbg !14727

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14722, metadata !DIExpression()), !dbg !14724
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !14728
  br label %if.end, !dbg !14728

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14729

if.then2:                                         ; preds = %if.end
  %outer_function = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14730
  tail call void %op(i8* nonnull %outer_function, i8* %cookie) #6, !dbg !14732
  br label %if.end3, !dbg !14732

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !14733

if.then5:                                         ; preds = %if.end3
  %bindings = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14734
  tail call void %op(i8* nonnull %bindings, i8* %cookie) #6, !dbg !14736
  br label %if.end6, !dbg !14736

if.end6:                                          ; preds = %if.then5, %if.end3
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !14737

if.then8:                                         ; preds = %if.end6
  %blocks = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14738
  tail call void %op(i8* nonnull %blocks, i8* %cookie) #6, !dbg !14740
  br label %if.end9, !dbg !14740

if.end9:                                          ; preds = %if.then8, %if.end6
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !14741

if.then11:                                        ; preds = %if.end9
  %blocks_last = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !14742
  tail call void %op(i8* nonnull %blocks_last, i8* %cookie) #6, !dbg !14744
  br label %if.end12, !dbg !14744

if.end12:                                         ; preds = %if.then11, %if.end9
  ret void, !dbg !14745
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_9c_binding(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14746 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14748, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14749, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14750, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14751, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14752, metadata !DIExpression()), !dbg !14754
  %decl = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14755
  %0 = bitcast i8* %decl to i64**, !dbg !14755
  %1 = load i64*, i64** %0, align 8, !dbg !14755
  %bf.load = load i64, i64* %1, align 8, !dbg !14755
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !14756
  %cmp = icmp eq i64 %bf.cast2, 30, !dbg !14756
  %cmp1 = icmp eq i8* %x_p, %this_obj, !dbg !14757
  br i1 %cmp, label %sw.bb3, label %sw.bb, !dbg !14759

sw.bb:                                            ; preds = %entry
  br i1 %cmp1, label %if.then, label %sw.epilog, !dbg !14760

if.then:                                          ; preds = %sw.bb
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !14761
  br label %sw.epilog, !dbg !14761

sw.bb3:                                           ; preds = %entry
  br i1 %cmp1, label %if.then6, label %sw.epilog, !dbg !14763

if.then6:                                         ; preds = %sw.bb3
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !14764
  br label %sw.epilog, !dbg !14764

sw.epilog:                                        ; preds = %sw.bb3, %if.then6, %sw.bb, %if.then
  br i1 %cmp1, label %if.then11, label %if.end13, !dbg !14766

if.then11:                                        ; preds = %sw.epilog
  tail call void %op(i8* nonnull %decl, i8* %cookie) #6, !dbg !14767
  br label %if.end13, !dbg !14767

if.end13:                                         ; preds = %if.then11, %sw.epilog
  br i1 %cmp1, label %if.then16, label %if.end17, !dbg !14769

if.then16:                                        ; preds = %if.end13
  %id = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14770
  tail call void %op(i8* nonnull %id, i8* %cookie) #6, !dbg !14772
  br label %if.end17, !dbg !14772

if.end17:                                         ; preds = %if.then16, %if.end13
  br i1 %cmp1, label %if.then20, label %if.end21, !dbg !14773

if.then20:                                        ; preds = %if.end17
  %prev = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14774
  tail call void %op(i8* nonnull %prev, i8* %cookie) #6, !dbg !14776
  br label %if.end21, !dbg !14776

if.end21:                                         ; preds = %if.then20, %if.end17
  br i1 %cmp1, label %if.then24, label %if.end25, !dbg !14777

if.then24:                                        ; preds = %if.end21
  %shadowed = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !14778
  tail call void %op(i8* nonnull %shadowed, i8* %cookie) #6, !dbg !14780
  br label %if.end25, !dbg !14780

if.end25:                                         ; preds = %if.then24, %if.end21
  ret void, !dbg !14781
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_label_vars(i8* %x_p) local_unnamed_addr #5 !dbg !14782 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14784, metadata !DIExpression()), !dbg !14786
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14785, metadata !DIExpression()), !dbg !14786
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_12c_label_vars, i32 8) #6, !dbg !14787
  %tobool = icmp eq i32 %call, 0, !dbg !14787
  br i1 %tobool, label %if.end34, label %do.body, !dbg !14789

do.body:                                          ; preds = %entry
  %shadowed = bitcast i8* %x_p to %struct.c_label_vars**, !dbg !14790
  %0 = load %struct.c_label_vars*, %struct.c_label_vars** %shadowed, align 8, !dbg !14790
  %cmp = icmp eq %struct.c_label_vars* %0, null, !dbg !14790
  br i1 %cmp, label %do.body3, label %if.then1, !dbg !14794

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.c_label_vars* %0 to i8*, !dbg !14794
  tail call void @gt_pch_nx_c_label_vars(i8* nonnull %1) #7, !dbg !14790
  br label %do.body3, !dbg !14790

do.body3:                                         ; preds = %do.body, %if.then1
  %label_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14795
  %scope = bitcast i8* %label_bindings to %struct.c_scope**, !dbg !14795
  %2 = load %struct.c_scope*, %struct.c_scope** %scope, align 8, !dbg !14795
  %cmp4 = icmp eq %struct.c_scope* %2, null, !dbg !14795
  br i1 %cmp4, label %do.body11, label %if.then5, !dbg !14798

if.then5:                                         ; preds = %do.body3
  %3 = bitcast %struct.c_scope* %2 to i8*, !dbg !14798
  tail call void @gt_pch_nx_c_scope(i8* nonnull %3) #7, !dbg !14795
  br label %do.body11, !dbg !14795

do.body11:                                        ; preds = %do.body3, %if.then5
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14799
  %4 = bitcast i8* %bindings_in_scope to %struct.c_binding**, !dbg !14799
  %5 = load %struct.c_binding*, %struct.c_binding** %4, align 8, !dbg !14799
  %cmp13 = icmp eq %struct.c_binding* %5, null, !dbg !14799
  br i1 %cmp13, label %do.body20, label %if.then14, !dbg !14802

if.then14:                                        ; preds = %do.body11
  %6 = bitcast %struct.c_binding* %5 to i8*, !dbg !14802
  tail call void @gt_pch_nx_c_binding(i8* nonnull %6) #7, !dbg !14799
  br label %do.body20, !dbg !14799

do.body20:                                        ; preds = %do.body11, %if.then14
  %decls_in_scope = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !14803
  %7 = bitcast i8* %decls_in_scope to %struct.VEC_tree_gc**, !dbg !14803
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %7, align 8, !dbg !14803
  %cmp21 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !14803
  br i1 %cmp21, label %do.body27, label %if.then22, !dbg !14806

if.then22:                                        ; preds = %do.body20
  %9 = bitcast %struct.VEC_tree_gc* %8 to i8*, !dbg !14806
  tail call void @gt_pch_nx_VEC_tree_gc(i8* nonnull %9) #6, !dbg !14803
  br label %do.body27, !dbg !14803

do.body27:                                        ; preds = %do.body20, %if.then22
  %gotos = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !14807
  %10 = bitcast i8* %gotos to %struct.VEC_c_goto_bindings_p_gc**, !dbg !14807
  %11 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %10, align 8, !dbg !14807
  %cmp28 = icmp eq %struct.VEC_c_goto_bindings_p_gc* %11, null, !dbg !14807
  br i1 %cmp28, label %if.end34, label %if.then29, !dbg !14810

if.then29:                                        ; preds = %do.body27
  %12 = bitcast %struct.VEC_c_goto_bindings_p_gc* %11 to i8*, !dbg !14810
  tail call void @gt_pch_nx_VEC_c_goto_bindings_p_gc(i8* nonnull %12) #7, !dbg !14807
  br label %if.end34, !dbg !14807

if.end34:                                         ; preds = %do.body27, %entry, %if.then29
  ret void, !dbg !14811
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_12c_label_vars(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14812 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14814, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14815, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14816, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14817, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14818, metadata !DIExpression()), !dbg !14819
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !14820
  br i1 %cmp, label %if.then, label %if.end, !dbg !14822

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14818, metadata !DIExpression()), !dbg !14819
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !14823
  br label %if.end, !dbg !14823

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14824

if.then2:                                         ; preds = %if.end
  %label_bindings = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14825
  tail call void %op(i8* nonnull %label_bindings, i8* %cookie) #6, !dbg !14827
  br label %if.end3, !dbg !14827

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !14828

if.then5:                                         ; preds = %if.end3
  %bindings_in_scope = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14829
  tail call void %op(i8* nonnull %bindings_in_scope, i8* %cookie) #6, !dbg !14831
  br label %if.end7, !dbg !14831

if.end7:                                          ; preds = %if.then5, %if.end3
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !14832

if.then9:                                         ; preds = %if.end7
  %decls_in_scope = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !14833
  tail call void %op(i8* nonnull %decls_in_scope, i8* %cookie) #6, !dbg !14835
  br label %if.end10, !dbg !14835

if.end10:                                         ; preds = %if.then9, %if.end7
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !14836

if.then12:                                        ; preds = %if.end10
  %gotos = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !14837
  tail call void %op(i8* nonnull %gotos, i8* %cookie) #6, !dbg !14839
  br label %if.end13, !dbg !14839

if.end13:                                         ; preds = %if.then12, %if.end10
  ret void, !dbg !14840
}

declare dso_local void @gt_pch_nx_VEC_tree_gc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_language_function(i8* %x_p) local_unnamed_addr #5 !dbg !14841 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14843, metadata !DIExpression()), !dbg !14845
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14844, metadata !DIExpression()), !dbg !14845
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_17language_function, i32 117) #6, !dbg !14846
  %tobool = icmp eq i32 %call, 0, !dbg !14846
  br i1 %tobool, label %if.end19, label %do.body, !dbg !14848

do.body:                                          ; preds = %entry
  %x_cur_stmt_list = bitcast i8* %x_p to %union.tree_node**, !dbg !14849
  %0 = load %union.tree_node*, %union.tree_node** %x_cur_stmt_list, align 8, !dbg !14849
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !14849
  br i1 %cmp, label %do.body5, label %if.then1, !dbg !14853

if.then1:                                         ; preds = %do.body
  %1 = bitcast %union.tree_node* %0 to i8*, !dbg !14853
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %1) #7, !dbg !14849
  br label %do.body5, !dbg !14849

do.body5:                                         ; preds = %do.body, %if.then1
  %x_break_label = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14854
  %2 = bitcast i8* %x_break_label to %union.tree_node**, !dbg !14854
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !14854
  %cmp6 = icmp eq %union.tree_node* %3, null, !dbg !14854
  br i1 %cmp6, label %do.body12, label %if.then7, !dbg !14857

if.then7:                                         ; preds = %do.body5
  %4 = bitcast %union.tree_node* %3 to i8*, !dbg !14857
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %4) #7, !dbg !14854
  br label %do.body12, !dbg !14854

do.body12:                                        ; preds = %do.body5, %if.then7
  %x_cont_label = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14858
  %5 = bitcast i8* %x_cont_label to %union.tree_node**, !dbg !14858
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !14858
  %cmp13 = icmp eq %union.tree_node* %6, null, !dbg !14858
  br i1 %cmp13, label %if.end19, label %if.then14, !dbg !14861

if.then14:                                        ; preds = %do.body12
  %7 = bitcast %union.tree_node* %6 to i8*, !dbg !14861
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %7) #7, !dbg !14858
  br label %if.end19, !dbg !14858

if.end19:                                         ; preds = %do.body12, %entry, %if.then14
  ret void, !dbg !14862
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_17language_function(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14863 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14865, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14866, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14867, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14868, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14869, metadata !DIExpression()), !dbg !14870
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !14871
  br i1 %cmp, label %if.then, label %if.end, !dbg !14873

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14869, metadata !DIExpression()), !dbg !14870
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !14874
  br label %if.end, !dbg !14874

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14875

if.then2:                                         ; preds = %if.end
  %x_break_label = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14876
  tail call void %op(i8* nonnull %x_break_label, i8* %cookie) #6, !dbg !14878
  br label %if.end3, !dbg !14878

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !14879

if.then5:                                         ; preds = %if.end3
  %x_cont_label = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14880
  tail call void %op(i8* nonnull %x_cont_label, i8* %cookie) #6, !dbg !14882
  br label %if.end6, !dbg !14882

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !14883
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_14lang_tree_node(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !14884 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !14886, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14887, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !14888, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !14889, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !14890, metadata !DIExpression()), !dbg !14907
  %0 = bitcast i8* %x_p to i64*, !dbg !14908
  %bf.load = load i64, i64* %0, align 8, !dbg !14908
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !14909
  %cmp = icmp eq i64 %bf.cast2, 1, !dbg !14909
  br i1 %cmp, label %sw.bb2271, label %sw.bb, !dbg !14910

sw.bb:                                            ; preds = %entry
  %generic1 = bitcast i8* %x_p to %union.tree_node*, !dbg !14911
  %call = tail call i32 @tree_node_structure(%union.tree_node* %generic1) #6, !dbg !14912
  switch i32 %call, label %sw.epilog2372 [
    i32 33, label %sw.bb2253
    i32 1, label %sw.bb2
    i32 2, label %sw.bb12
    i32 3, label %sw.bb28
    i32 4, label %sw.bb50
    i32 5, label %sw.bb72
    i32 6, label %sw.bb94
    i32 7, label %sw.bb110
    i32 8, label %sw.bb138
    i32 9, label %sw.bb160
    i32 10, label %sw.bb188
    i32 11, label %sw.bb258
    i32 12, label %sw.bb350
    i32 16, label %sw.bb510
    i32 13, label %sw.bb626
    i32 15, label %sw.bb751
    i32 14, label %sw.bb897
    i32 17, label %sw.bb1013
    i32 18, label %sw.bb1117
    i32 19, label %sw.bb1228
    i32 20, label %sw.bb1332
    i32 21, label %sw.bb1517
    i32 22, label %sw.bb1726
    i32 23, label %sw.bb1859
    i32 24, label %sw.bb1887
    i32 25, label %sw.bb1915
    i32 26, label %sw.bb1959
    i32 27, label %sw.bb1993
    i32 28, label %sw.bb2053
    i32 29, label %sw.bb2140
    i32 30, label %sw.bb2168
    i32 31, label %sw.bb2190
    i32 32, label %sw.bb2237
  ], !dbg !14913

sw.bb2:                                           ; preds = %sw.bb
  %cmp3 = icmp eq i8* %x_p, %this_obj, !dbg !14914
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14916

if.then:                                          ; preds = %sw.bb2
  %chain = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14917
  tail call void %op(i8* nonnull %chain, i8* %cookie) #6, !dbg !14918
  br label %if.end, !dbg !14918

if.end:                                           ; preds = %if.then, %sw.bb2
  br i1 %cmp3, label %if.then8, label %sw.epilog2372, !dbg !14919

if.then8:                                         ; preds = %if.end
  %type = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14920
  tail call void %op(i8* nonnull %type, i8* %cookie) #6, !dbg !14922
  br label %sw.epilog2372, !dbg !14922

sw.bb12:                                          ; preds = %sw.bb
  %cmp13 = icmp eq i8* %x_p, %this_obj, !dbg !14923
  br i1 %cmp13, label %if.then15, label %if.end19, !dbg !14925

if.then15:                                        ; preds = %sw.bb12
  %chain18 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14926
  tail call void %op(i8* nonnull %chain18, i8* %cookie) #6, !dbg !14927
  br label %if.end19, !dbg !14927

if.end19:                                         ; preds = %if.then15, %sw.bb12
  br i1 %cmp13, label %if.then22, label %sw.epilog2372, !dbg !14928

if.then22:                                        ; preds = %if.end19
  %type26 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14929
  tail call void %op(i8* nonnull %type26, i8* %cookie) #6, !dbg !14931
  br label %sw.epilog2372, !dbg !14931

sw.bb28:                                          ; preds = %sw.bb
  %cmp29 = icmp eq i8* %x_p, %this_obj, !dbg !14932
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !14934

if.then31:                                        ; preds = %sw.bb28
  %chain34 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14935
  tail call void %op(i8* nonnull %chain34, i8* %cookie) #6, !dbg !14936
  br label %if.end35, !dbg !14936

if.end35:                                         ; preds = %if.then31, %sw.bb28
  br i1 %cmp29, label %if.then38, label %if.end43, !dbg !14937

if.then38:                                        ; preds = %if.end35
  %type42 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14938
  tail call void %op(i8* nonnull %type42, i8* %cookie) #6, !dbg !14940
  br label %if.end43, !dbg !14940

if.end43:                                         ; preds = %if.then38, %if.end35
  br i1 %cmp29, label %if.then46, label %sw.epilog2372, !dbg !14941

if.then46:                                        ; preds = %if.end43
  %real_cst_ptr = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14942
  tail call void %op(i8* nonnull %real_cst_ptr, i8* %cookie) #6, !dbg !14944
  br label %sw.epilog2372, !dbg !14944

sw.bb50:                                          ; preds = %sw.bb
  %cmp51 = icmp eq i8* %x_p, %this_obj, !dbg !14945
  br i1 %cmp51, label %if.then53, label %if.end57, !dbg !14947

if.then53:                                        ; preds = %sw.bb50
  %chain56 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14948
  tail call void %op(i8* nonnull %chain56, i8* %cookie) #6, !dbg !14949
  br label %if.end57, !dbg !14949

if.end57:                                         ; preds = %if.then53, %sw.bb50
  br i1 %cmp51, label %if.then60, label %if.end65, !dbg !14950

if.then60:                                        ; preds = %if.end57
  %type64 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14951
  tail call void %op(i8* nonnull %type64, i8* %cookie) #6, !dbg !14953
  br label %if.end65, !dbg !14953

if.end65:                                         ; preds = %if.then60, %if.end57
  br i1 %cmp51, label %if.then68, label %sw.epilog2372, !dbg !14954

if.then68:                                        ; preds = %if.end65
  %fixed_cst_ptr = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14955
  tail call void %op(i8* nonnull %fixed_cst_ptr, i8* %cookie) #6, !dbg !14957
  br label %sw.epilog2372, !dbg !14957

sw.bb72:                                          ; preds = %sw.bb
  %cmp73 = icmp eq i8* %x_p, %this_obj, !dbg !14958
  br i1 %cmp73, label %if.then75, label %if.end79, !dbg !14960

if.then75:                                        ; preds = %sw.bb72
  %chain78 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14961
  tail call void %op(i8* nonnull %chain78, i8* %cookie) #6, !dbg !14962
  br label %if.end79, !dbg !14962

if.end79:                                         ; preds = %if.then75, %sw.bb72
  br i1 %cmp73, label %if.then82, label %if.end87, !dbg !14963

if.then82:                                        ; preds = %if.end79
  %type86 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14964
  tail call void %op(i8* nonnull %type86, i8* %cookie) #6, !dbg !14966
  br label %if.end87, !dbg !14966

if.end87:                                         ; preds = %if.then82, %if.end79
  br i1 %cmp73, label %if.then90, label %sw.epilog2372, !dbg !14967

if.then90:                                        ; preds = %if.end87
  %elements = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14968
  tail call void %op(i8* nonnull %elements, i8* %cookie) #6, !dbg !14970
  br label %sw.epilog2372, !dbg !14970

sw.bb94:                                          ; preds = %sw.bb
  %cmp95 = icmp eq i8* %x_p, %this_obj, !dbg !14971
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !14973

if.then97:                                        ; preds = %sw.bb94
  %chain100 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14974
  tail call void %op(i8* nonnull %chain100, i8* %cookie) #6, !dbg !14975
  br label %if.end101, !dbg !14975

if.end101:                                        ; preds = %if.then97, %sw.bb94
  br i1 %cmp95, label %if.then104, label %sw.epilog2372, !dbg !14976

if.then104:                                       ; preds = %if.end101
  %type108 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14977
  tail call void %op(i8* nonnull %type108, i8* %cookie) #6, !dbg !14979
  br label %sw.epilog2372, !dbg !14979

sw.bb110:                                         ; preds = %sw.bb
  %cmp111 = icmp eq i8* %x_p, %this_obj, !dbg !14980
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !14982

if.then113:                                       ; preds = %sw.bb110
  %chain116 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !14983
  tail call void %op(i8* nonnull %chain116, i8* %cookie) #6, !dbg !14984
  br label %if.end117, !dbg !14984

if.end117:                                        ; preds = %if.then113, %sw.bb110
  br i1 %cmp111, label %if.then120, label %if.end125, !dbg !14985

if.then120:                                       ; preds = %if.end117
  %type124 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !14986
  tail call void %op(i8* nonnull %type124, i8* %cookie) #6, !dbg !14988
  br label %if.end125, !dbg !14988

if.end125:                                        ; preds = %if.then120, %if.end117
  br i1 %cmp111, label %if.then128, label %if.end131, !dbg !14989

if.then128:                                       ; preds = %if.end125
  %real = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !14990
  tail call void %op(i8* nonnull %real, i8* %cookie) #6, !dbg !14992
  br label %if.end131, !dbg !14992

if.end131:                                        ; preds = %if.then128, %if.end125
  br i1 %cmp111, label %if.then134, label %sw.epilog2372, !dbg !14993

if.then134:                                       ; preds = %if.end131
  %imag = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !14994
  tail call void %op(i8* nonnull %imag, i8* %cookie) #6, !dbg !14996
  br label %sw.epilog2372, !dbg !14996

sw.bb138:                                         ; preds = %sw.bb
  %cmp139 = icmp eq i8* %x_p, %this_obj, !dbg !14997
  br i1 %cmp139, label %if.then141, label %if.end145, !dbg !14999

if.then141:                                       ; preds = %sw.bb138
  %chain144 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15000
  tail call void %op(i8* nonnull %chain144, i8* %cookie) #6, !dbg !15001
  br label %if.end145, !dbg !15001

if.end145:                                        ; preds = %if.then141, %sw.bb138
  br i1 %cmp139, label %if.then148, label %if.end153, !dbg !15002

if.then148:                                       ; preds = %if.end145
  %type152 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15003
  tail call void %op(i8* nonnull %type152, i8* %cookie) #6, !dbg !15005
  br label %if.end153, !dbg !15005

if.end153:                                        ; preds = %if.then148, %if.end145
  br i1 %cmp139, label %if.then156, label %sw.epilog2372, !dbg !15006

if.then156:                                       ; preds = %if.end153
  %id = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15007
  tail call void %op(i8* nonnull %id, i8* %cookie) #6, !dbg !15009
  br label %sw.epilog2372, !dbg !15009

sw.bb160:                                         ; preds = %sw.bb
  %cmp161 = icmp eq i8* %x_p, %this_obj, !dbg !15010
  br i1 %cmp161, label %if.then163, label %if.end167, !dbg !15012

if.then163:                                       ; preds = %sw.bb160
  %chain166 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15013
  tail call void %op(i8* nonnull %chain166, i8* %cookie) #6, !dbg !15014
  br label %if.end167, !dbg !15014

if.end167:                                        ; preds = %if.then163, %sw.bb160
  br i1 %cmp161, label %if.then170, label %if.end175, !dbg !15015

if.then170:                                       ; preds = %if.end167
  %type174 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15016
  tail call void %op(i8* nonnull %type174, i8* %cookie) #6, !dbg !15018
  br label %if.end175, !dbg !15018

if.end175:                                        ; preds = %if.then170, %if.end167
  br i1 %cmp161, label %if.then178, label %if.end181, !dbg !15019

if.then178:                                       ; preds = %if.end175
  %name = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15020
  tail call void %op(i8* nonnull %name, i8* %cookie) #6, !dbg !15022
  br label %if.end181, !dbg !15022

if.end181:                                        ; preds = %if.then178, %if.end175
  br i1 %cmp161, label %if.then184, label %sw.epilog2372, !dbg !15023

if.then184:                                       ; preds = %if.end181
  %context = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15024
  tail call void %op(i8* nonnull %context, i8* %cookie) #6, !dbg !15026
  br label %sw.epilog2372, !dbg !15026

sw.bb188:                                         ; preds = %sw.bb
  %cmp189 = icmp eq i8* %x_p, %this_obj, !dbg !15027
  br i1 %cmp189, label %if.then191, label %if.end196, !dbg !15029

if.then191:                                       ; preds = %sw.bb188
  %chain195 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15030
  tail call void %op(i8* nonnull %chain195, i8* %cookie) #6, !dbg !15031
  br label %if.end196, !dbg !15031

if.end196:                                        ; preds = %if.then191, %sw.bb188
  br i1 %cmp189, label %if.then199, label %if.end205, !dbg !15032

if.then199:                                       ; preds = %if.end196
  %type204 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15033
  tail call void %op(i8* nonnull %type204, i8* %cookie) #6, !dbg !15035
  br label %if.end205, !dbg !15035

if.end205:                                        ; preds = %if.then199, %if.end196
  br i1 %cmp189, label %if.then208, label %if.end213, !dbg !15036

if.then208:                                       ; preds = %if.end205
  %name212 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15037
  tail call void %op(i8* nonnull %name212, i8* %cookie) #6, !dbg !15039
  br label %if.end213, !dbg !15039

if.end213:                                        ; preds = %if.then208, %if.end205
  br i1 %cmp189, label %if.then216, label %if.end221, !dbg !15040

if.then216:                                       ; preds = %if.end213
  %context220 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15041
  tail call void %op(i8* nonnull %context220, i8* %cookie) #6, !dbg !15043
  br label %if.end221, !dbg !15043

if.end221:                                        ; preds = %if.then216, %if.end213
  br i1 %cmp189, label %if.then224, label %if.end227, !dbg !15044

if.then224:                                       ; preds = %if.end221
  %size = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15045
  tail call void %op(i8* nonnull %size, i8* %cookie) #6, !dbg !15047
  br label %if.end227, !dbg !15047

if.end227:                                        ; preds = %if.then224, %if.end221
  br i1 %cmp189, label %if.then230, label %if.end233, !dbg !15048

if.then230:                                       ; preds = %if.end227
  %size_unit = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15049
  tail call void %op(i8* nonnull %size_unit, i8* %cookie) #6, !dbg !15051
  br label %if.end233, !dbg !15051

if.end233:                                        ; preds = %if.then230, %if.end227
  br i1 %cmp189, label %if.then236, label %if.end239, !dbg !15052

if.then236:                                       ; preds = %if.end233
  %initial = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15053
  tail call void %op(i8* nonnull %initial, i8* %cookie) #6, !dbg !15055
  br label %if.end239, !dbg !15055

if.end239:                                        ; preds = %if.then236, %if.end233
  br i1 %cmp189, label %if.then242, label %if.end245, !dbg !15056

if.then242:                                       ; preds = %if.end239
  %attributes = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15057
  tail call void %op(i8* nonnull %attributes, i8* %cookie) #6, !dbg !15059
  br label %if.end245, !dbg !15059

if.end245:                                        ; preds = %if.then242, %if.end239
  br i1 %cmp189, label %if.then248, label %if.end251, !dbg !15060

if.then248:                                       ; preds = %if.end245
  %abstract_origin = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15061
  tail call void %op(i8* nonnull %abstract_origin, i8* %cookie) #6, !dbg !15063
  br label %if.end251, !dbg !15063

if.end251:                                        ; preds = %if.then248, %if.end245
  br i1 %cmp189, label %if.then254, label %sw.epilog2372, !dbg !15064

if.then254:                                       ; preds = %if.end251
  %lang_specific = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15065
  tail call void %op(i8* nonnull %lang_specific, i8* %cookie) #6, !dbg !15067
  br label %sw.epilog2372, !dbg !15067

sw.bb258:                                         ; preds = %sw.bb
  %cmp259 = icmp eq i8* %x_p, %this_obj, !dbg !15068
  br i1 %cmp259, label %if.then261, label %if.end267, !dbg !15070

if.then261:                                       ; preds = %sw.bb258
  %chain266 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15071
  tail call void %op(i8* nonnull %chain266, i8* %cookie) #6, !dbg !15072
  br label %if.end267, !dbg !15072

if.end267:                                        ; preds = %if.then261, %sw.bb258
  br i1 %cmp259, label %if.then270, label %if.end277, !dbg !15073

if.then270:                                       ; preds = %if.end267
  %type276 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15074
  tail call void %op(i8* nonnull %type276, i8* %cookie) #6, !dbg !15076
  br label %if.end277, !dbg !15076

if.end277:                                        ; preds = %if.then270, %if.end267
  br i1 %cmp259, label %if.then280, label %if.end286, !dbg !15077

if.then280:                                       ; preds = %if.end277
  %name285 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15078
  tail call void %op(i8* nonnull %name285, i8* %cookie) #6, !dbg !15080
  br label %if.end286, !dbg !15080

if.end286:                                        ; preds = %if.then280, %if.end277
  br i1 %cmp259, label %if.then289, label %if.end295, !dbg !15081

if.then289:                                       ; preds = %if.end286
  %context294 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15082
  tail call void %op(i8* nonnull %context294, i8* %cookie) #6, !dbg !15084
  br label %if.end295, !dbg !15084

if.end295:                                        ; preds = %if.then289, %if.end286
  br i1 %cmp259, label %if.then298, label %if.end303, !dbg !15085

if.then298:                                       ; preds = %if.end295
  %size302 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15086
  tail call void %op(i8* nonnull %size302, i8* %cookie) #6, !dbg !15088
  br label %if.end303, !dbg !15088

if.end303:                                        ; preds = %if.then298, %if.end295
  br i1 %cmp259, label %if.then306, label %if.end311, !dbg !15089

if.then306:                                       ; preds = %if.end303
  %size_unit310 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15090
  tail call void %op(i8* nonnull %size_unit310, i8* %cookie) #6, !dbg !15092
  br label %if.end311, !dbg !15092

if.end311:                                        ; preds = %if.then306, %if.end303
  br i1 %cmp259, label %if.then314, label %if.end319, !dbg !15093

if.then314:                                       ; preds = %if.end311
  %initial318 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15094
  tail call void %op(i8* nonnull %initial318, i8* %cookie) #6, !dbg !15096
  br label %if.end319, !dbg !15096

if.end319:                                        ; preds = %if.then314, %if.end311
  br i1 %cmp259, label %if.then322, label %if.end327, !dbg !15097

if.then322:                                       ; preds = %if.end319
  %attributes326 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15098
  tail call void %op(i8* nonnull %attributes326, i8* %cookie) #6, !dbg !15100
  br label %if.end327, !dbg !15100

if.end327:                                        ; preds = %if.then322, %if.end319
  br i1 %cmp259, label %if.then330, label %if.end335, !dbg !15101

if.then330:                                       ; preds = %if.end327
  %abstract_origin334 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15102
  tail call void %op(i8* nonnull %abstract_origin334, i8* %cookie) #6, !dbg !15104
  br label %if.end335, !dbg !15104

if.end335:                                        ; preds = %if.then330, %if.end327
  br i1 %cmp259, label %if.then338, label %if.end343, !dbg !15105

if.then338:                                       ; preds = %if.end335
  %lang_specific342 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15106
  tail call void %op(i8* nonnull %lang_specific342, i8* %cookie) #6, !dbg !15108
  br label %if.end343, !dbg !15108

if.end343:                                        ; preds = %if.then338, %if.end335
  br i1 %cmp259, label %if.then346, label %sw.epilog2372, !dbg !15109

if.then346:                                       ; preds = %if.end343
  %rtl = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15110
  tail call void %op(i8* nonnull %rtl, i8* %cookie) #6, !dbg !15112
  br label %sw.epilog2372, !dbg !15112

sw.bb350:                                         ; preds = %sw.bb
  %cmp351 = icmp eq i8* %x_p, %this_obj, !dbg !15113
  br i1 %cmp351, label %if.then353, label %if.end361, !dbg !15115

if.then353:                                       ; preds = %sw.bb350
  %chain360 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15116
  tail call void %op(i8* nonnull %chain360, i8* %cookie) #6, !dbg !15117
  br label %if.end361, !dbg !15117

if.end361:                                        ; preds = %if.then353, %sw.bb350
  br i1 %cmp351, label %if.then364, label %if.end373, !dbg !15118

if.then364:                                       ; preds = %if.end361
  %type372 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15119
  tail call void %op(i8* nonnull %type372, i8* %cookie) #6, !dbg !15121
  br label %if.end373, !dbg !15121

if.end373:                                        ; preds = %if.then364, %if.end361
  br i1 %cmp351, label %if.then376, label %if.end384, !dbg !15122

if.then376:                                       ; preds = %if.end373
  %name383 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15123
  tail call void %op(i8* nonnull %name383, i8* %cookie) #6, !dbg !15125
  br label %if.end384, !dbg !15125

if.end384:                                        ; preds = %if.then376, %if.end373
  br i1 %cmp351, label %if.then387, label %if.end395, !dbg !15126

if.then387:                                       ; preds = %if.end384
  %context394 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15127
  tail call void %op(i8* nonnull %context394, i8* %cookie) #6, !dbg !15129
  br label %if.end395, !dbg !15129

if.end395:                                        ; preds = %if.then387, %if.end384
  br i1 %cmp351, label %if.then398, label %if.end405, !dbg !15130

if.then398:                                       ; preds = %if.end395
  %size404 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15131
  tail call void %op(i8* nonnull %size404, i8* %cookie) #6, !dbg !15133
  br label %if.end405, !dbg !15133

if.end405:                                        ; preds = %if.then398, %if.end395
  br i1 %cmp351, label %if.then408, label %if.end415, !dbg !15134

if.then408:                                       ; preds = %if.end405
  %size_unit414 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15135
  tail call void %op(i8* nonnull %size_unit414, i8* %cookie) #6, !dbg !15137
  br label %if.end415, !dbg !15137

if.end415:                                        ; preds = %if.then408, %if.end405
  br i1 %cmp351, label %if.then418, label %if.end425, !dbg !15138

if.then418:                                       ; preds = %if.end415
  %initial424 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15139
  tail call void %op(i8* nonnull %initial424, i8* %cookie) #6, !dbg !15141
  br label %if.end425, !dbg !15141

if.end425:                                        ; preds = %if.then418, %if.end415
  br i1 %cmp351, label %if.then428, label %if.end435, !dbg !15142

if.then428:                                       ; preds = %if.end425
  %attributes434 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15143
  tail call void %op(i8* nonnull %attributes434, i8* %cookie) #6, !dbg !15145
  br label %if.end435, !dbg !15145

if.end435:                                        ; preds = %if.then428, %if.end425
  br i1 %cmp351, label %if.then438, label %if.end445, !dbg !15146

if.then438:                                       ; preds = %if.end435
  %abstract_origin444 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15147
  tail call void %op(i8* nonnull %abstract_origin444, i8* %cookie) #6, !dbg !15149
  br label %if.end445, !dbg !15149

if.end445:                                        ; preds = %if.then438, %if.end435
  br i1 %cmp351, label %if.then448, label %if.end455, !dbg !15150

if.then448:                                       ; preds = %if.end445
  %lang_specific454 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15151
  tail call void %op(i8* nonnull %lang_specific454, i8* %cookie) #6, !dbg !15153
  br label %if.end455, !dbg !15153

if.end455:                                        ; preds = %if.then448, %if.end445
  br i1 %cmp351, label %if.then458, label %if.end464, !dbg !15154

if.then458:                                       ; preds = %if.end455
  %rtl463 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15155
  tail call void %op(i8* nonnull %rtl463, i8* %cookie) #6, !dbg !15157
  br label %if.end464, !dbg !15157

if.end464:                                        ; preds = %if.then458, %if.end455
  br i1 %cmp351, label %if.then467, label %if.end471, !dbg !15158

if.then467:                                       ; preds = %if.end464
  %assembler_name = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15159
  tail call void %op(i8* nonnull %assembler_name, i8* %cookie) #6, !dbg !15161
  br label %if.end471, !dbg !15161

if.end471:                                        ; preds = %if.then467, %if.end464
  br i1 %cmp351, label %if.then474, label %if.end478, !dbg !15162

if.then474:                                       ; preds = %if.end471
  %section_name = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15163
  tail call void %op(i8* nonnull %section_name, i8* %cookie) #6, !dbg !15165
  br label %if.end478, !dbg !15165

if.end478:                                        ; preds = %if.then474, %if.end471
  br i1 %cmp351, label %if.then481, label %if.end485, !dbg !15166

if.then481:                                       ; preds = %if.end478
  %comdat_group = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15167
  tail call void %op(i8* nonnull %comdat_group, i8* %cookie) #6, !dbg !15169
  br label %if.end485, !dbg !15169

if.end485:                                        ; preds = %if.then481, %if.end478
  br i1 %cmp351, label %if.then488, label %if.end491, !dbg !15170

if.then488:                                       ; preds = %if.end485
  %saved_tree = getelementptr inbounds i8, i8* %x_p, i64 152, !dbg !15171
  tail call void %op(i8* nonnull %saved_tree, i8* %cookie) #6, !dbg !15173
  br label %if.end491, !dbg !15173

if.end491:                                        ; preds = %if.then488, %if.end485
  br i1 %cmp351, label %if.then494, label %if.end497, !dbg !15174

if.then494:                                       ; preds = %if.end491
  %arguments = getelementptr inbounds i8, i8* %x_p, i64 160, !dbg !15175
  tail call void %op(i8* nonnull %arguments, i8* %cookie) #6, !dbg !15177
  br label %if.end497, !dbg !15177

if.end497:                                        ; preds = %if.then494, %if.end491
  br i1 %cmp351, label %if.then500, label %if.end503, !dbg !15178

if.then500:                                       ; preds = %if.end497
  %result = getelementptr inbounds i8, i8* %x_p, i64 168, !dbg !15179
  tail call void %op(i8* nonnull %result, i8* %cookie) #6, !dbg !15181
  br label %if.end503, !dbg !15181

if.end503:                                        ; preds = %if.then500, %if.end497
  br i1 %cmp351, label %if.then506, label %sw.epilog2372, !dbg !15182

if.then506:                                       ; preds = %if.end503
  %vindex = getelementptr inbounds i8, i8* %x_p, i64 176, !dbg !15183
  tail call void %op(i8* nonnull %vindex, i8* %cookie) #6, !dbg !15185
  br label %sw.epilog2372, !dbg !15185

sw.bb510:                                         ; preds = %sw.bb
  %cmp511 = icmp eq i8* %x_p, %this_obj, !dbg !15186
  br i1 %cmp511, label %if.then513, label %if.end520, !dbg !15188

if.then513:                                       ; preds = %sw.bb510
  %chain519 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15189
  tail call void %op(i8* nonnull %chain519, i8* %cookie) #6, !dbg !15190
  br label %if.end520, !dbg !15190

if.end520:                                        ; preds = %if.then513, %sw.bb510
  br i1 %cmp511, label %if.then523, label %if.end531, !dbg !15191

if.then523:                                       ; preds = %if.end520
  %type530 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15192
  tail call void %op(i8* nonnull %type530, i8* %cookie) #6, !dbg !15194
  br label %if.end531, !dbg !15194

if.end531:                                        ; preds = %if.then523, %if.end520
  br i1 %cmp511, label %if.then534, label %if.end541, !dbg !15195

if.then534:                                       ; preds = %if.end531
  %name540 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15196
  tail call void %op(i8* nonnull %name540, i8* %cookie) #6, !dbg !15198
  br label %if.end541, !dbg !15198

if.end541:                                        ; preds = %if.then534, %if.end531
  br i1 %cmp511, label %if.then544, label %if.end551, !dbg !15199

if.then544:                                       ; preds = %if.end541
  %context550 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15200
  tail call void %op(i8* nonnull %context550, i8* %cookie) #6, !dbg !15202
  br label %if.end551, !dbg !15202

if.end551:                                        ; preds = %if.then544, %if.end541
  br i1 %cmp511, label %if.then554, label %if.end560, !dbg !15203

if.then554:                                       ; preds = %if.end551
  %size559 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15204
  tail call void %op(i8* nonnull %size559, i8* %cookie) #6, !dbg !15206
  br label %if.end560, !dbg !15206

if.end560:                                        ; preds = %if.then554, %if.end551
  br i1 %cmp511, label %if.then563, label %if.end569, !dbg !15207

if.then563:                                       ; preds = %if.end560
  %size_unit568 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15208
  tail call void %op(i8* nonnull %size_unit568, i8* %cookie) #6, !dbg !15210
  br label %if.end569, !dbg !15210

if.end569:                                        ; preds = %if.then563, %if.end560
  br i1 %cmp511, label %if.then572, label %if.end578, !dbg !15211

if.then572:                                       ; preds = %if.end569
  %initial577 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15212
  tail call void %op(i8* nonnull %initial577, i8* %cookie) #6, !dbg !15214
  br label %if.end578, !dbg !15214

if.end578:                                        ; preds = %if.then572, %if.end569
  br i1 %cmp511, label %if.then581, label %if.end587, !dbg !15215

if.then581:                                       ; preds = %if.end578
  %attributes586 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15216
  tail call void %op(i8* nonnull %attributes586, i8* %cookie) #6, !dbg !15218
  br label %if.end587, !dbg !15218

if.end587:                                        ; preds = %if.then581, %if.end578
  br i1 %cmp511, label %if.then590, label %if.end596, !dbg !15219

if.then590:                                       ; preds = %if.end587
  %abstract_origin595 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15220
  tail call void %op(i8* nonnull %abstract_origin595, i8* %cookie) #6, !dbg !15222
  br label %if.end596, !dbg !15222

if.end596:                                        ; preds = %if.then590, %if.end587
  br i1 %cmp511, label %if.then599, label %if.end605, !dbg !15223

if.then599:                                       ; preds = %if.end596
  %lang_specific604 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15224
  tail call void %op(i8* nonnull %lang_specific604, i8* %cookie) #6, !dbg !15226
  br label %if.end605, !dbg !15226

if.end605:                                        ; preds = %if.then599, %if.end596
  br i1 %cmp511, label %if.then608, label %if.end613, !dbg !15227

if.then608:                                       ; preds = %if.end605
  %rtl612 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15228
  tail call void %op(i8* nonnull %rtl612, i8* %cookie) #6, !dbg !15230
  br label %if.end613, !dbg !15230

if.end613:                                        ; preds = %if.then608, %if.end605
  br i1 %cmp511, label %if.then616, label %if.end619, !dbg !15231

if.then616:                                       ; preds = %if.end613
  %incoming_rtl = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15232
  tail call void %op(i8* nonnull %incoming_rtl, i8* %cookie) #6, !dbg !15234
  br label %if.end619, !dbg !15234

if.end619:                                        ; preds = %if.then616, %if.end613
  br i1 %cmp511, label %if.then622, label %sw.epilog2372, !dbg !15235

if.then622:                                       ; preds = %if.end619
  %ann = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15236
  tail call void %op(i8* nonnull %ann, i8* %cookie) #6, !dbg !15238
  br label %sw.epilog2372, !dbg !15238

sw.bb626:                                         ; preds = %sw.bb
  %cmp627 = icmp eq i8* %x_p, %this_obj, !dbg !15239
  br i1 %cmp627, label %if.then629, label %if.end636, !dbg !15241

if.then629:                                       ; preds = %sw.bb626
  %chain635 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15242
  tail call void %op(i8* nonnull %chain635, i8* %cookie) #6, !dbg !15243
  br label %if.end636, !dbg !15243

if.end636:                                        ; preds = %if.then629, %sw.bb626
  br i1 %cmp627, label %if.then639, label %if.end647, !dbg !15244

if.then639:                                       ; preds = %if.end636
  %type646 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15245
  tail call void %op(i8* nonnull %type646, i8* %cookie) #6, !dbg !15247
  br label %if.end647, !dbg !15247

if.end647:                                        ; preds = %if.then639, %if.end636
  br i1 %cmp627, label %if.then650, label %if.end657, !dbg !15248

if.then650:                                       ; preds = %if.end647
  %name656 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15249
  tail call void %op(i8* nonnull %name656, i8* %cookie) #6, !dbg !15251
  br label %if.end657, !dbg !15251

if.end657:                                        ; preds = %if.then650, %if.end647
  br i1 %cmp627, label %if.then660, label %if.end667, !dbg !15252

if.then660:                                       ; preds = %if.end657
  %context666 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15253
  tail call void %op(i8* nonnull %context666, i8* %cookie) #6, !dbg !15255
  br label %if.end667, !dbg !15255

if.end667:                                        ; preds = %if.then660, %if.end657
  br i1 %cmp627, label %if.then670, label %if.end676, !dbg !15256

if.then670:                                       ; preds = %if.end667
  %size675 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15257
  tail call void %op(i8* nonnull %size675, i8* %cookie) #6, !dbg !15259
  br label %if.end676, !dbg !15259

if.end676:                                        ; preds = %if.then670, %if.end667
  br i1 %cmp627, label %if.then679, label %if.end685, !dbg !15260

if.then679:                                       ; preds = %if.end676
  %size_unit684 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15261
  tail call void %op(i8* nonnull %size_unit684, i8* %cookie) #6, !dbg !15263
  br label %if.end685, !dbg !15263

if.end685:                                        ; preds = %if.then679, %if.end676
  br i1 %cmp627, label %if.then688, label %if.end694, !dbg !15264

if.then688:                                       ; preds = %if.end685
  %initial693 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15265
  tail call void %op(i8* nonnull %initial693, i8* %cookie) #6, !dbg !15267
  br label %if.end694, !dbg !15267

if.end694:                                        ; preds = %if.then688, %if.end685
  br i1 %cmp627, label %if.then697, label %if.end703, !dbg !15268

if.then697:                                       ; preds = %if.end694
  %attributes702 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15269
  tail call void %op(i8* nonnull %attributes702, i8* %cookie) #6, !dbg !15271
  br label %if.end703, !dbg !15271

if.end703:                                        ; preds = %if.then697, %if.end694
  br i1 %cmp627, label %if.then706, label %if.end712, !dbg !15272

if.then706:                                       ; preds = %if.end703
  %abstract_origin711 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15273
  tail call void %op(i8* nonnull %abstract_origin711, i8* %cookie) #6, !dbg !15275
  br label %if.end712, !dbg !15275

if.end712:                                        ; preds = %if.then706, %if.end703
  br i1 %cmp627, label %if.then715, label %if.end721, !dbg !15276

if.then715:                                       ; preds = %if.end712
  %lang_specific720 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15277
  tail call void %op(i8* nonnull %lang_specific720, i8* %cookie) #6, !dbg !15279
  br label %if.end721, !dbg !15279

if.end721:                                        ; preds = %if.then715, %if.end712
  br i1 %cmp627, label %if.then724, label %if.end729, !dbg !15280

if.then724:                                       ; preds = %if.end721
  %rtl728 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15281
  tail call void %op(i8* nonnull %rtl728, i8* %cookie) #6, !dbg !15283
  br label %if.end729, !dbg !15283

if.end729:                                        ; preds = %if.then724, %if.end721
  br i1 %cmp627, label %if.then732, label %if.end736, !dbg !15284

if.then732:                                       ; preds = %if.end729
  %assembler_name735 = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15285
  tail call void %op(i8* nonnull %assembler_name735, i8* %cookie) #6, !dbg !15287
  br label %if.end736, !dbg !15287

if.end736:                                        ; preds = %if.then732, %if.end729
  br i1 %cmp627, label %if.then739, label %if.end743, !dbg !15288

if.then739:                                       ; preds = %if.end736
  %section_name742 = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15289
  tail call void %op(i8* nonnull %section_name742, i8* %cookie) #6, !dbg !15291
  br label %if.end743, !dbg !15291

if.end743:                                        ; preds = %if.then739, %if.end736
  br i1 %cmp627, label %if.then746, label %sw.epilog2372, !dbg !15292

if.then746:                                       ; preds = %if.end743
  %comdat_group749 = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15293
  tail call void %op(i8* nonnull %comdat_group749, i8* %cookie) #6, !dbg !15295
  br label %sw.epilog2372, !dbg !15295

sw.bb751:                                         ; preds = %sw.bb
  %cmp752 = icmp eq i8* %x_p, %this_obj, !dbg !15296
  br i1 %cmp752, label %if.then754, label %if.end762, !dbg !15298

if.then754:                                       ; preds = %sw.bb751
  %chain761 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15299
  tail call void %op(i8* nonnull %chain761, i8* %cookie) #6, !dbg !15300
  br label %if.end762, !dbg !15300

if.end762:                                        ; preds = %if.then754, %sw.bb751
  br i1 %cmp752, label %if.then765, label %if.end774, !dbg !15301

if.then765:                                       ; preds = %if.end762
  %type773 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15302
  tail call void %op(i8* nonnull %type773, i8* %cookie) #6, !dbg !15304
  br label %if.end774, !dbg !15304

if.end774:                                        ; preds = %if.then765, %if.end762
  br i1 %cmp752, label %if.then777, label %if.end785, !dbg !15305

if.then777:                                       ; preds = %if.end774
  %name784 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15306
  tail call void %op(i8* nonnull %name784, i8* %cookie) #6, !dbg !15308
  br label %if.end785, !dbg !15308

if.end785:                                        ; preds = %if.then777, %if.end774
  br i1 %cmp752, label %if.then788, label %if.end796, !dbg !15309

if.then788:                                       ; preds = %if.end785
  %context795 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15310
  tail call void %op(i8* nonnull %context795, i8* %cookie) #6, !dbg !15312
  br label %if.end796, !dbg !15312

if.end796:                                        ; preds = %if.then788, %if.end785
  br i1 %cmp752, label %if.then799, label %if.end806, !dbg !15313

if.then799:                                       ; preds = %if.end796
  %size805 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15314
  tail call void %op(i8* nonnull %size805, i8* %cookie) #6, !dbg !15316
  br label %if.end806, !dbg !15316

if.end806:                                        ; preds = %if.then799, %if.end796
  br i1 %cmp752, label %if.then809, label %if.end816, !dbg !15317

if.then809:                                       ; preds = %if.end806
  %size_unit815 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15318
  tail call void %op(i8* nonnull %size_unit815, i8* %cookie) #6, !dbg !15320
  br label %if.end816, !dbg !15320

if.end816:                                        ; preds = %if.then809, %if.end806
  br i1 %cmp752, label %if.then819, label %if.end826, !dbg !15321

if.then819:                                       ; preds = %if.end816
  %initial825 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15322
  tail call void %op(i8* nonnull %initial825, i8* %cookie) #6, !dbg !15324
  br label %if.end826, !dbg !15324

if.end826:                                        ; preds = %if.then819, %if.end816
  br i1 %cmp752, label %if.then829, label %if.end836, !dbg !15325

if.then829:                                       ; preds = %if.end826
  %attributes835 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15326
  tail call void %op(i8* nonnull %attributes835, i8* %cookie) #6, !dbg !15328
  br label %if.end836, !dbg !15328

if.end836:                                        ; preds = %if.then829, %if.end826
  br i1 %cmp752, label %if.then839, label %if.end846, !dbg !15329

if.then839:                                       ; preds = %if.end836
  %abstract_origin845 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15330
  tail call void %op(i8* nonnull %abstract_origin845, i8* %cookie) #6, !dbg !15332
  br label %if.end846, !dbg !15332

if.end846:                                        ; preds = %if.then839, %if.end836
  br i1 %cmp752, label %if.then849, label %if.end856, !dbg !15333

if.then849:                                       ; preds = %if.end846
  %lang_specific855 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15334
  tail call void %op(i8* nonnull %lang_specific855, i8* %cookie) #6, !dbg !15336
  br label %if.end856, !dbg !15336

if.end856:                                        ; preds = %if.then849, %if.end846
  br i1 %cmp752, label %if.then859, label %if.end865, !dbg !15337

if.then859:                                       ; preds = %if.end856
  %rtl864 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15338
  tail call void %op(i8* nonnull %rtl864, i8* %cookie) #6, !dbg !15340
  br label %if.end865, !dbg !15340

if.end865:                                        ; preds = %if.then859, %if.end856
  br i1 %cmp752, label %if.then868, label %if.end873, !dbg !15341

if.then868:                                       ; preds = %if.end865
  %assembler_name872 = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15342
  tail call void %op(i8* nonnull %assembler_name872, i8* %cookie) #6, !dbg !15344
  br label %if.end873, !dbg !15344

if.end873:                                        ; preds = %if.then868, %if.end865
  br i1 %cmp752, label %if.then876, label %if.end881, !dbg !15345

if.then876:                                       ; preds = %if.end873
  %section_name880 = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15346
  tail call void %op(i8* nonnull %section_name880, i8* %cookie) #6, !dbg !15348
  br label %if.end881, !dbg !15348

if.end881:                                        ; preds = %if.then876, %if.end873
  br i1 %cmp752, label %if.then884, label %if.end889, !dbg !15349

if.then884:                                       ; preds = %if.end881
  %comdat_group888 = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15350
  tail call void %op(i8* nonnull %comdat_group888, i8* %cookie) #6, !dbg !15352
  br label %if.end889, !dbg !15352

if.end889:                                        ; preds = %if.then884, %if.end881
  br i1 %cmp752, label %if.then892, label %sw.epilog2372, !dbg !15353

if.then892:                                       ; preds = %if.end889
  %ann895 = getelementptr inbounds i8, i8* %x_p, i64 152, !dbg !15354
  tail call void %op(i8* nonnull %ann895, i8* %cookie) #6, !dbg !15356
  br label %sw.epilog2372, !dbg !15356

sw.bb897:                                         ; preds = %sw.bb
  %cmp898 = icmp eq i8* %x_p, %this_obj, !dbg !15357
  br i1 %cmp898, label %if.then900, label %if.end906, !dbg !15359

if.then900:                                       ; preds = %sw.bb897
  %chain905 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15360
  tail call void %op(i8* nonnull %chain905, i8* %cookie) #6, !dbg !15361
  br label %if.end906, !dbg !15361

if.end906:                                        ; preds = %if.then900, %sw.bb897
  br i1 %cmp898, label %if.then909, label %if.end916, !dbg !15362

if.then909:                                       ; preds = %if.end906
  %type915 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15363
  tail call void %op(i8* nonnull %type915, i8* %cookie) #6, !dbg !15365
  br label %if.end916, !dbg !15365

if.end916:                                        ; preds = %if.then909, %if.end906
  br i1 %cmp898, label %if.then919, label %if.end925, !dbg !15366

if.then919:                                       ; preds = %if.end916
  %name924 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15367
  tail call void %op(i8* nonnull %name924, i8* %cookie) #6, !dbg !15369
  br label %if.end925, !dbg !15369

if.end925:                                        ; preds = %if.then919, %if.end916
  br i1 %cmp898, label %if.then928, label %if.end934, !dbg !15370

if.then928:                                       ; preds = %if.end925
  %context933 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15371
  tail call void %op(i8* nonnull %context933, i8* %cookie) #6, !dbg !15373
  br label %if.end934, !dbg !15373

if.end934:                                        ; preds = %if.then928, %if.end925
  br i1 %cmp898, label %if.then937, label %if.end942, !dbg !15374

if.then937:                                       ; preds = %if.end934
  %size941 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15375
  tail call void %op(i8* nonnull %size941, i8* %cookie) #6, !dbg !15377
  br label %if.end942, !dbg !15377

if.end942:                                        ; preds = %if.then937, %if.end934
  br i1 %cmp898, label %if.then945, label %if.end950, !dbg !15378

if.then945:                                       ; preds = %if.end942
  %size_unit949 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15379
  tail call void %op(i8* nonnull %size_unit949, i8* %cookie) #6, !dbg !15381
  br label %if.end950, !dbg !15381

if.end950:                                        ; preds = %if.then945, %if.end942
  br i1 %cmp898, label %if.then953, label %if.end958, !dbg !15382

if.then953:                                       ; preds = %if.end950
  %initial957 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15383
  tail call void %op(i8* nonnull %initial957, i8* %cookie) #6, !dbg !15385
  br label %if.end958, !dbg !15385

if.end958:                                        ; preds = %if.then953, %if.end950
  br i1 %cmp898, label %if.then961, label %if.end966, !dbg !15386

if.then961:                                       ; preds = %if.end958
  %attributes965 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15387
  tail call void %op(i8* nonnull %attributes965, i8* %cookie) #6, !dbg !15389
  br label %if.end966, !dbg !15389

if.end966:                                        ; preds = %if.then961, %if.end958
  br i1 %cmp898, label %if.then969, label %if.end974, !dbg !15390

if.then969:                                       ; preds = %if.end966
  %abstract_origin973 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15391
  tail call void %op(i8* nonnull %abstract_origin973, i8* %cookie) #6, !dbg !15393
  br label %if.end974, !dbg !15393

if.end974:                                        ; preds = %if.then969, %if.end966
  br i1 %cmp898, label %if.then977, label %if.end982, !dbg !15394

if.then977:                                       ; preds = %if.end974
  %lang_specific981 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15395
  tail call void %op(i8* nonnull %lang_specific981, i8* %cookie) #6, !dbg !15397
  br label %if.end982, !dbg !15397

if.end982:                                        ; preds = %if.then977, %if.end974
  br i1 %cmp898, label %if.then985, label %if.end988, !dbg !15398

if.then985:                                       ; preds = %if.end982
  %offset = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15399
  tail call void %op(i8* nonnull %offset, i8* %cookie) #6, !dbg !15401
  br label %if.end988, !dbg !15401

if.end988:                                        ; preds = %if.then985, %if.end982
  br i1 %cmp898, label %if.then991, label %if.end994, !dbg !15402

if.then991:                                       ; preds = %if.end988
  %bit_field_type = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15403
  tail call void %op(i8* nonnull %bit_field_type, i8* %cookie) #6, !dbg !15405
  br label %if.end994, !dbg !15405

if.end994:                                        ; preds = %if.then991, %if.end988
  br i1 %cmp898, label %if.then997, label %if.end1000, !dbg !15406

if.then997:                                       ; preds = %if.end994
  %qualifier = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15407
  tail call void %op(i8* nonnull %qualifier, i8* %cookie) #6, !dbg !15409
  br label %if.end1000, !dbg !15409

if.end1000:                                       ; preds = %if.then997, %if.end994
  br i1 %cmp898, label %if.then1003, label %if.end1006, !dbg !15410

if.then1003:                                      ; preds = %if.end1000
  %bit_offset = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15411
  tail call void %op(i8* nonnull %bit_offset, i8* %cookie) #6, !dbg !15413
  br label %if.end1006, !dbg !15413

if.end1006:                                       ; preds = %if.then1003, %if.end1000
  br i1 %cmp898, label %if.then1009, label %sw.epilog2372, !dbg !15414

if.then1009:                                      ; preds = %if.end1006
  %fcontext = getelementptr inbounds i8, i8* %x_p, i64 144, !dbg !15415
  tail call void %op(i8* nonnull %fcontext, i8* %cookie) #6, !dbg !15417
  br label %sw.epilog2372, !dbg !15417

sw.bb1013:                                        ; preds = %sw.bb
  %cmp1014 = icmp eq i8* %x_p, %this_obj, !dbg !15418
  br i1 %cmp1014, label %if.then1016, label %if.end1023, !dbg !15420

if.then1016:                                      ; preds = %sw.bb1013
  %chain1022 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15421
  tail call void %op(i8* nonnull %chain1022, i8* %cookie) #6, !dbg !15422
  br label %if.end1023, !dbg !15422

if.end1023:                                       ; preds = %if.then1016, %sw.bb1013
  br i1 %cmp1014, label %if.then1026, label %if.end1034, !dbg !15423

if.then1026:                                      ; preds = %if.end1023
  %type1033 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15424
  tail call void %op(i8* nonnull %type1033, i8* %cookie) #6, !dbg !15426
  br label %if.end1034, !dbg !15426

if.end1034:                                       ; preds = %if.then1026, %if.end1023
  br i1 %cmp1014, label %if.then1037, label %if.end1044, !dbg !15427

if.then1037:                                      ; preds = %if.end1034
  %name1043 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15428
  tail call void %op(i8* nonnull %name1043, i8* %cookie) #6, !dbg !15430
  br label %if.end1044, !dbg !15430

if.end1044:                                       ; preds = %if.then1037, %if.end1034
  br i1 %cmp1014, label %if.then1047, label %if.end1054, !dbg !15431

if.then1047:                                      ; preds = %if.end1044
  %context1053 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15432
  tail call void %op(i8* nonnull %context1053, i8* %cookie) #6, !dbg !15434
  br label %if.end1054, !dbg !15434

if.end1054:                                       ; preds = %if.then1047, %if.end1044
  br i1 %cmp1014, label %if.then1057, label %if.end1063, !dbg !15435

if.then1057:                                      ; preds = %if.end1054
  %size1062 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15436
  tail call void %op(i8* nonnull %size1062, i8* %cookie) #6, !dbg !15438
  br label %if.end1063, !dbg !15438

if.end1063:                                       ; preds = %if.then1057, %if.end1054
  br i1 %cmp1014, label %if.then1066, label %if.end1072, !dbg !15439

if.then1066:                                      ; preds = %if.end1063
  %size_unit1071 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15440
  tail call void %op(i8* nonnull %size_unit1071, i8* %cookie) #6, !dbg !15442
  br label %if.end1072, !dbg !15442

if.end1072:                                       ; preds = %if.then1066, %if.end1063
  br i1 %cmp1014, label %if.then1075, label %if.end1081, !dbg !15443

if.then1075:                                      ; preds = %if.end1072
  %initial1080 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15444
  tail call void %op(i8* nonnull %initial1080, i8* %cookie) #6, !dbg !15446
  br label %if.end1081, !dbg !15446

if.end1081:                                       ; preds = %if.then1075, %if.end1072
  br i1 %cmp1014, label %if.then1084, label %if.end1090, !dbg !15447

if.then1084:                                      ; preds = %if.end1081
  %attributes1089 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15448
  tail call void %op(i8* nonnull %attributes1089, i8* %cookie) #6, !dbg !15450
  br label %if.end1090, !dbg !15450

if.end1090:                                       ; preds = %if.then1084, %if.end1081
  br i1 %cmp1014, label %if.then1093, label %if.end1099, !dbg !15451

if.then1093:                                      ; preds = %if.end1090
  %abstract_origin1098 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15452
  tail call void %op(i8* nonnull %abstract_origin1098, i8* %cookie) #6, !dbg !15454
  br label %if.end1099, !dbg !15454

if.end1099:                                       ; preds = %if.then1093, %if.end1090
  br i1 %cmp1014, label %if.then1102, label %if.end1108, !dbg !15455

if.then1102:                                      ; preds = %if.end1099
  %lang_specific1107 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15456
  tail call void %op(i8* nonnull %lang_specific1107, i8* %cookie) #6, !dbg !15458
  br label %if.end1108, !dbg !15458

if.end1108:                                       ; preds = %if.then1102, %if.end1099
  br i1 %cmp1014, label %if.then1111, label %sw.epilog2372, !dbg !15459

if.then1111:                                      ; preds = %if.end1108
  %rtl1115 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15460
  tail call void %op(i8* nonnull %rtl1115, i8* %cookie) #6, !dbg !15462
  br label %sw.epilog2372, !dbg !15462

sw.bb1117:                                        ; preds = %sw.bb
  %cmp1118 = icmp eq i8* %x_p, %this_obj, !dbg !15463
  br i1 %cmp1118, label %if.then1120, label %if.end1127, !dbg !15465

if.then1120:                                      ; preds = %sw.bb1117
  %chain1126 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15466
  tail call void %op(i8* nonnull %chain1126, i8* %cookie) #6, !dbg !15467
  br label %if.end1127, !dbg !15467

if.end1127:                                       ; preds = %if.then1120, %sw.bb1117
  br i1 %cmp1118, label %if.then1130, label %if.end1138, !dbg !15468

if.then1130:                                      ; preds = %if.end1127
  %type1137 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15469
  tail call void %op(i8* nonnull %type1137, i8* %cookie) #6, !dbg !15471
  br label %if.end1138, !dbg !15471

if.end1138:                                       ; preds = %if.then1130, %if.end1127
  br i1 %cmp1118, label %if.then1141, label %if.end1148, !dbg !15472

if.then1141:                                      ; preds = %if.end1138
  %name1147 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15473
  tail call void %op(i8* nonnull %name1147, i8* %cookie) #6, !dbg !15475
  br label %if.end1148, !dbg !15475

if.end1148:                                       ; preds = %if.then1141, %if.end1138
  br i1 %cmp1118, label %if.then1151, label %if.end1158, !dbg !15476

if.then1151:                                      ; preds = %if.end1148
  %context1157 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15477
  tail call void %op(i8* nonnull %context1157, i8* %cookie) #6, !dbg !15479
  br label %if.end1158, !dbg !15479

if.end1158:                                       ; preds = %if.then1151, %if.end1148
  br i1 %cmp1118, label %if.then1161, label %if.end1167, !dbg !15480

if.then1161:                                      ; preds = %if.end1158
  %size1166 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15481
  tail call void %op(i8* nonnull %size1166, i8* %cookie) #6, !dbg !15483
  br label %if.end1167, !dbg !15483

if.end1167:                                       ; preds = %if.then1161, %if.end1158
  br i1 %cmp1118, label %if.then1170, label %if.end1176, !dbg !15484

if.then1170:                                      ; preds = %if.end1167
  %size_unit1175 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15485
  tail call void %op(i8* nonnull %size_unit1175, i8* %cookie) #6, !dbg !15487
  br label %if.end1176, !dbg !15487

if.end1176:                                       ; preds = %if.then1170, %if.end1167
  br i1 %cmp1118, label %if.then1179, label %if.end1185, !dbg !15488

if.then1179:                                      ; preds = %if.end1176
  %initial1184 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15489
  tail call void %op(i8* nonnull %initial1184, i8* %cookie) #6, !dbg !15491
  br label %if.end1185, !dbg !15491

if.end1185:                                       ; preds = %if.then1179, %if.end1176
  br i1 %cmp1118, label %if.then1188, label %if.end1194, !dbg !15492

if.then1188:                                      ; preds = %if.end1185
  %attributes1193 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15493
  tail call void %op(i8* nonnull %attributes1193, i8* %cookie) #6, !dbg !15495
  br label %if.end1194, !dbg !15495

if.end1194:                                       ; preds = %if.then1188, %if.end1185
  br i1 %cmp1118, label %if.then1197, label %if.end1203, !dbg !15496

if.then1197:                                      ; preds = %if.end1194
  %abstract_origin1202 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15497
  tail call void %op(i8* nonnull %abstract_origin1202, i8* %cookie) #6, !dbg !15499
  br label %if.end1203, !dbg !15499

if.end1203:                                       ; preds = %if.then1197, %if.end1194
  br i1 %cmp1118, label %if.then1206, label %if.end1212, !dbg !15500

if.then1206:                                      ; preds = %if.end1203
  %lang_specific1211 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15501
  tail call void %op(i8* nonnull %lang_specific1211, i8* %cookie) #6, !dbg !15503
  br label %if.end1212, !dbg !15503

if.end1212:                                       ; preds = %if.then1206, %if.end1203
  br i1 %cmp1118, label %if.then1215, label %if.end1220, !dbg !15504

if.then1215:                                      ; preds = %if.end1212
  %rtl1219 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15505
  tail call void %op(i8* nonnull %rtl1219, i8* %cookie) #6, !dbg !15507
  br label %if.end1220, !dbg !15507

if.end1220:                                       ; preds = %if.then1215, %if.end1212
  br i1 %cmp1118, label %if.then1223, label %sw.epilog2372, !dbg !15508

if.then1223:                                      ; preds = %if.end1220
  %ann1226 = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15509
  tail call void %op(i8* nonnull %ann1226, i8* %cookie) #6, !dbg !15511
  br label %sw.epilog2372, !dbg !15511

sw.bb1228:                                        ; preds = %sw.bb
  %cmp1229 = icmp eq i8* %x_p, %this_obj, !dbg !15512
  br i1 %cmp1229, label %if.then1231, label %if.end1238, !dbg !15514

if.then1231:                                      ; preds = %sw.bb1228
  %chain1237 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15515
  tail call void %op(i8* nonnull %chain1237, i8* %cookie) #6, !dbg !15516
  br label %if.end1238, !dbg !15516

if.end1238:                                       ; preds = %if.then1231, %sw.bb1228
  br i1 %cmp1229, label %if.then1241, label %if.end1249, !dbg !15517

if.then1241:                                      ; preds = %if.end1238
  %type1248 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15518
  tail call void %op(i8* nonnull %type1248, i8* %cookie) #6, !dbg !15520
  br label %if.end1249, !dbg !15520

if.end1249:                                       ; preds = %if.then1241, %if.end1238
  br i1 %cmp1229, label %if.then1252, label %if.end1259, !dbg !15521

if.then1252:                                      ; preds = %if.end1249
  %name1258 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15522
  tail call void %op(i8* nonnull %name1258, i8* %cookie) #6, !dbg !15524
  br label %if.end1259, !dbg !15524

if.end1259:                                       ; preds = %if.then1252, %if.end1249
  br i1 %cmp1229, label %if.then1262, label %if.end1269, !dbg !15525

if.then1262:                                      ; preds = %if.end1259
  %context1268 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15526
  tail call void %op(i8* nonnull %context1268, i8* %cookie) #6, !dbg !15528
  br label %if.end1269, !dbg !15528

if.end1269:                                       ; preds = %if.then1262, %if.end1259
  br i1 %cmp1229, label %if.then1272, label %if.end1278, !dbg !15529

if.then1272:                                      ; preds = %if.end1269
  %size1277 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15530
  tail call void %op(i8* nonnull %size1277, i8* %cookie) #6, !dbg !15532
  br label %if.end1278, !dbg !15532

if.end1278:                                       ; preds = %if.then1272, %if.end1269
  br i1 %cmp1229, label %if.then1281, label %if.end1287, !dbg !15533

if.then1281:                                      ; preds = %if.end1278
  %size_unit1286 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15534
  tail call void %op(i8* nonnull %size_unit1286, i8* %cookie) #6, !dbg !15536
  br label %if.end1287, !dbg !15536

if.end1287:                                       ; preds = %if.then1281, %if.end1278
  br i1 %cmp1229, label %if.then1290, label %if.end1296, !dbg !15537

if.then1290:                                      ; preds = %if.end1287
  %initial1295 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15538
  tail call void %op(i8* nonnull %initial1295, i8* %cookie) #6, !dbg !15540
  br label %if.end1296, !dbg !15540

if.end1296:                                       ; preds = %if.then1290, %if.end1287
  br i1 %cmp1229, label %if.then1299, label %if.end1305, !dbg !15541

if.then1299:                                      ; preds = %if.end1296
  %attributes1304 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15542
  tail call void %op(i8* nonnull %attributes1304, i8* %cookie) #6, !dbg !15544
  br label %if.end1305, !dbg !15544

if.end1305:                                       ; preds = %if.then1299, %if.end1296
  br i1 %cmp1229, label %if.then1308, label %if.end1314, !dbg !15545

if.then1308:                                      ; preds = %if.end1305
  %abstract_origin1313 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15546
  tail call void %op(i8* nonnull %abstract_origin1313, i8* %cookie) #6, !dbg !15548
  br label %if.end1314, !dbg !15548

if.end1314:                                       ; preds = %if.then1308, %if.end1305
  br i1 %cmp1229, label %if.then1317, label %if.end1323, !dbg !15549

if.then1317:                                      ; preds = %if.end1314
  %lang_specific1322 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15550
  tail call void %op(i8* nonnull %lang_specific1322, i8* %cookie) #6, !dbg !15552
  br label %if.end1323, !dbg !15552

if.end1323:                                       ; preds = %if.then1317, %if.end1314
  br i1 %cmp1229, label %if.then1326, label %sw.epilog2372, !dbg !15553

if.then1326:                                      ; preds = %if.end1323
  %rtl1330 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15554
  tail call void %op(i8* nonnull %rtl1330, i8* %cookie) #6, !dbg !15556
  br label %sw.epilog2372, !dbg !15556

sw.bb1332:                                        ; preds = %sw.bb
  %cmp1333 = icmp eq i8* %x_p, %this_obj, !dbg !15557
  br i1 %cmp1333, label %if.then1335, label %if.end1344, !dbg !15559

if.then1335:                                      ; preds = %sw.bb1332
  %chain1343 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15560
  tail call void %op(i8* nonnull %chain1343, i8* %cookie) #6, !dbg !15561
  br label %if.end1344, !dbg !15561

if.end1344:                                       ; preds = %if.then1335, %sw.bb1332
  br i1 %cmp1333, label %if.then1347, label %if.end1357, !dbg !15562

if.then1347:                                      ; preds = %if.end1344
  %type1356 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15563
  tail call void %op(i8* nonnull %type1356, i8* %cookie) #6, !dbg !15565
  br label %if.end1357, !dbg !15565

if.end1357:                                       ; preds = %if.then1347, %if.end1344
  br i1 %cmp1333, label %if.then1360, label %if.end1369, !dbg !15566

if.then1360:                                      ; preds = %if.end1357
  %name1368 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15567
  tail call void %op(i8* nonnull %name1368, i8* %cookie) #6, !dbg !15569
  br label %if.end1369, !dbg !15569

if.end1369:                                       ; preds = %if.then1360, %if.end1357
  br i1 %cmp1333, label %if.then1372, label %if.end1381, !dbg !15570

if.then1372:                                      ; preds = %if.end1369
  %context1380 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15571
  tail call void %op(i8* nonnull %context1380, i8* %cookie) #6, !dbg !15573
  br label %if.end1381, !dbg !15573

if.end1381:                                       ; preds = %if.then1372, %if.end1369
  br i1 %cmp1333, label %if.then1384, label %if.end1392, !dbg !15574

if.then1384:                                      ; preds = %if.end1381
  %size1391 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15575
  tail call void %op(i8* nonnull %size1391, i8* %cookie) #6, !dbg !15577
  br label %if.end1392, !dbg !15577

if.end1392:                                       ; preds = %if.then1384, %if.end1381
  br i1 %cmp1333, label %if.then1395, label %if.end1403, !dbg !15578

if.then1395:                                      ; preds = %if.end1392
  %size_unit1402 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15579
  tail call void %op(i8* nonnull %size_unit1402, i8* %cookie) #6, !dbg !15581
  br label %if.end1403, !dbg !15581

if.end1403:                                       ; preds = %if.then1395, %if.end1392
  br i1 %cmp1333, label %if.then1406, label %if.end1414, !dbg !15582

if.then1406:                                      ; preds = %if.end1403
  %initial1413 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15583
  tail call void %op(i8* nonnull %initial1413, i8* %cookie) #6, !dbg !15585
  br label %if.end1414, !dbg !15585

if.end1414:                                       ; preds = %if.then1406, %if.end1403
  br i1 %cmp1333, label %if.then1417, label %if.end1425, !dbg !15586

if.then1417:                                      ; preds = %if.end1414
  %attributes1424 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15587
  tail call void %op(i8* nonnull %attributes1424, i8* %cookie) #6, !dbg !15589
  br label %if.end1425, !dbg !15589

if.end1425:                                       ; preds = %if.then1417, %if.end1414
  br i1 %cmp1333, label %if.then1428, label %if.end1436, !dbg !15590

if.then1428:                                      ; preds = %if.end1425
  %abstract_origin1435 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15591
  tail call void %op(i8* nonnull %abstract_origin1435, i8* %cookie) #6, !dbg !15593
  br label %if.end1436, !dbg !15593

if.end1436:                                       ; preds = %if.then1428, %if.end1425
  br i1 %cmp1333, label %if.then1439, label %if.end1447, !dbg !15594

if.then1439:                                      ; preds = %if.end1436
  %lang_specific1446 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15595
  tail call void %op(i8* nonnull %lang_specific1446, i8* %cookie) #6, !dbg !15597
  br label %if.end1447, !dbg !15597

if.end1447:                                       ; preds = %if.then1439, %if.end1436
  br i1 %cmp1333, label %if.then1450, label %if.end1457, !dbg !15598

if.then1450:                                      ; preds = %if.end1447
  %rtl1456 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15599
  tail call void %op(i8* nonnull %rtl1456, i8* %cookie) #6, !dbg !15601
  br label %if.end1457, !dbg !15601

if.end1457:                                       ; preds = %if.then1450, %if.end1447
  br i1 %cmp1333, label %if.then1460, label %if.end1466, !dbg !15602

if.then1460:                                      ; preds = %if.end1457
  %assembler_name1465 = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15603
  tail call void %op(i8* nonnull %assembler_name1465, i8* %cookie) #6, !dbg !15605
  br label %if.end1466, !dbg !15605

if.end1466:                                       ; preds = %if.then1460, %if.end1457
  br i1 %cmp1333, label %if.then1469, label %if.end1475, !dbg !15606

if.then1469:                                      ; preds = %if.end1466
  %section_name1474 = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15607
  tail call void %op(i8* nonnull %section_name1474, i8* %cookie) #6, !dbg !15609
  br label %if.end1475, !dbg !15609

if.end1475:                                       ; preds = %if.then1469, %if.end1466
  br i1 %cmp1333, label %if.then1478, label %if.end1484, !dbg !15610

if.then1478:                                      ; preds = %if.end1475
  %comdat_group1483 = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15611
  tail call void %op(i8* nonnull %comdat_group1483, i8* %cookie) #6, !dbg !15613
  br label %if.end1484, !dbg !15613

if.end1484:                                       ; preds = %if.then1478, %if.end1475
  br i1 %cmp1333, label %if.then1487, label %if.end1492, !dbg !15614

if.then1487:                                      ; preds = %if.end1484
  %saved_tree1491 = getelementptr inbounds i8, i8* %x_p, i64 152, !dbg !15615
  tail call void %op(i8* nonnull %saved_tree1491, i8* %cookie) #6, !dbg !15617
  br label %if.end1492, !dbg !15617

if.end1492:                                       ; preds = %if.then1487, %if.end1484
  br i1 %cmp1333, label %if.then1495, label %if.end1500, !dbg !15618

if.then1495:                                      ; preds = %if.end1492
  %arguments1499 = getelementptr inbounds i8, i8* %x_p, i64 160, !dbg !15619
  tail call void %op(i8* nonnull %arguments1499, i8* %cookie) #6, !dbg !15621
  br label %if.end1500, !dbg !15621

if.end1500:                                       ; preds = %if.then1495, %if.end1492
  br i1 %cmp1333, label %if.then1503, label %if.end1508, !dbg !15622

if.then1503:                                      ; preds = %if.end1500
  %result1507 = getelementptr inbounds i8, i8* %x_p, i64 168, !dbg !15623
  tail call void %op(i8* nonnull %result1507, i8* %cookie) #6, !dbg !15625
  br label %if.end1508, !dbg !15625

if.end1508:                                       ; preds = %if.then1503, %if.end1500
  br i1 %cmp1333, label %if.then1511, label %sw.epilog2372, !dbg !15626

if.then1511:                                      ; preds = %if.end1508
  %vindex1515 = getelementptr inbounds i8, i8* %x_p, i64 176, !dbg !15627
  tail call void %op(i8* nonnull %vindex1515, i8* %cookie) #6, !dbg !15629
  br label %sw.epilog2372, !dbg !15629

sw.bb1517:                                        ; preds = %sw.bb
  %cmp1518 = icmp eq i8* %x_p, %this_obj, !dbg !15630
  br i1 %cmp1518, label %if.then1520, label %if.end1529, !dbg !15632

if.then1520:                                      ; preds = %sw.bb1517
  %chain1528 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15633
  tail call void %op(i8* nonnull %chain1528, i8* %cookie) #6, !dbg !15634
  br label %if.end1529, !dbg !15634

if.end1529:                                       ; preds = %if.then1520, %sw.bb1517
  br i1 %cmp1518, label %if.then1532, label %if.end1542, !dbg !15635

if.then1532:                                      ; preds = %if.end1529
  %type1541 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15636
  tail call void %op(i8* nonnull %type1541, i8* %cookie) #6, !dbg !15638
  br label %if.end1542, !dbg !15638

if.end1542:                                       ; preds = %if.then1532, %if.end1529
  br i1 %cmp1518, label %if.then1545, label %if.end1554, !dbg !15639

if.then1545:                                      ; preds = %if.end1542
  %name1553 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15640
  tail call void %op(i8* nonnull %name1553, i8* %cookie) #6, !dbg !15642
  br label %if.end1554, !dbg !15642

if.end1554:                                       ; preds = %if.then1545, %if.end1542
  br i1 %cmp1518, label %if.then1557, label %if.end1566, !dbg !15643

if.then1557:                                      ; preds = %if.end1554
  %context1565 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15644
  tail call void %op(i8* nonnull %context1565, i8* %cookie) #6, !dbg !15646
  br label %if.end1566, !dbg !15646

if.end1566:                                       ; preds = %if.then1557, %if.end1554
  br i1 %cmp1518, label %if.then1569, label %if.end1577, !dbg !15647

if.then1569:                                      ; preds = %if.end1566
  %size1576 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15648
  tail call void %op(i8* nonnull %size1576, i8* %cookie) #6, !dbg !15650
  br label %if.end1577, !dbg !15650

if.end1577:                                       ; preds = %if.then1569, %if.end1566
  br i1 %cmp1518, label %if.then1580, label %if.end1588, !dbg !15651

if.then1580:                                      ; preds = %if.end1577
  %size_unit1587 = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15652
  tail call void %op(i8* nonnull %size_unit1587, i8* %cookie) #6, !dbg !15654
  br label %if.end1588, !dbg !15654

if.end1588:                                       ; preds = %if.then1580, %if.end1577
  br i1 %cmp1518, label %if.then1591, label %if.end1599, !dbg !15655

if.then1591:                                      ; preds = %if.end1588
  %initial1598 = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15656
  tail call void %op(i8* nonnull %initial1598, i8* %cookie) #6, !dbg !15658
  br label %if.end1599, !dbg !15658

if.end1599:                                       ; preds = %if.then1591, %if.end1588
  br i1 %cmp1518, label %if.then1602, label %if.end1610, !dbg !15659

if.then1602:                                      ; preds = %if.end1599
  %attributes1609 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15660
  tail call void %op(i8* nonnull %attributes1609, i8* %cookie) #6, !dbg !15662
  br label %if.end1610, !dbg !15662

if.end1610:                                       ; preds = %if.then1602, %if.end1599
  br i1 %cmp1518, label %if.then1613, label %if.end1621, !dbg !15663

if.then1613:                                      ; preds = %if.end1610
  %abstract_origin1620 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15664
  tail call void %op(i8* nonnull %abstract_origin1620, i8* %cookie) #6, !dbg !15666
  br label %if.end1621, !dbg !15666

if.end1621:                                       ; preds = %if.then1613, %if.end1610
  br i1 %cmp1518, label %if.then1624, label %if.end1632, !dbg !15667

if.then1624:                                      ; preds = %if.end1621
  %lang_specific1631 = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15668
  tail call void %op(i8* nonnull %lang_specific1631, i8* %cookie) #6, !dbg !15670
  br label %if.end1632, !dbg !15670

if.end1632:                                       ; preds = %if.then1624, %if.end1621
  br i1 %cmp1518, label %if.then1635, label %if.end1642, !dbg !15671

if.then1635:                                      ; preds = %if.end1632
  %rtl1641 = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15672
  tail call void %op(i8* nonnull %rtl1641, i8* %cookie) #6, !dbg !15674
  br label %if.end1642, !dbg !15674

if.end1642:                                       ; preds = %if.then1635, %if.end1632
  br i1 %cmp1518, label %if.then1645, label %if.end1651, !dbg !15675

if.then1645:                                      ; preds = %if.end1642
  %assembler_name1650 = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15676
  tail call void %op(i8* nonnull %assembler_name1650, i8* %cookie) #6, !dbg !15678
  br label %if.end1651, !dbg !15678

if.end1651:                                       ; preds = %if.then1645, %if.end1642
  br i1 %cmp1518, label %if.then1654, label %if.end1660, !dbg !15679

if.then1654:                                      ; preds = %if.end1651
  %section_name1659 = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15680
  tail call void %op(i8* nonnull %section_name1659, i8* %cookie) #6, !dbg !15682
  br label %if.end1660, !dbg !15682

if.end1660:                                       ; preds = %if.then1654, %if.end1651
  br i1 %cmp1518, label %if.then1663, label %if.end1669, !dbg !15683

if.then1663:                                      ; preds = %if.end1660
  %comdat_group1668 = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15684
  tail call void %op(i8* nonnull %comdat_group1668, i8* %cookie) #6, !dbg !15686
  br label %if.end1669, !dbg !15686

if.end1669:                                       ; preds = %if.then1663, %if.end1660
  br i1 %cmp1518, label %if.then1672, label %if.end1677, !dbg !15687

if.then1672:                                      ; preds = %if.end1669
  %saved_tree1676 = getelementptr inbounds i8, i8* %x_p, i64 152, !dbg !15688
  tail call void %op(i8* nonnull %saved_tree1676, i8* %cookie) #6, !dbg !15690
  br label %if.end1677, !dbg !15690

if.end1677:                                       ; preds = %if.then1672, %if.end1669
  br i1 %cmp1518, label %if.then1680, label %if.end1685, !dbg !15691

if.then1680:                                      ; preds = %if.end1677
  %arguments1684 = getelementptr inbounds i8, i8* %x_p, i64 160, !dbg !15692
  tail call void %op(i8* nonnull %arguments1684, i8* %cookie) #6, !dbg !15694
  br label %if.end1685, !dbg !15694

if.end1685:                                       ; preds = %if.then1680, %if.end1677
  br i1 %cmp1518, label %if.then1688, label %if.end1693, !dbg !15695

if.then1688:                                      ; preds = %if.end1685
  %result1692 = getelementptr inbounds i8, i8* %x_p, i64 168, !dbg !15696
  tail call void %op(i8* nonnull %result1692, i8* %cookie) #6, !dbg !15698
  br label %if.end1693, !dbg !15698

if.end1693:                                       ; preds = %if.then1688, %if.end1685
  br i1 %cmp1518, label %if.then1696, label %if.end1701, !dbg !15699

if.then1696:                                      ; preds = %if.end1693
  %vindex1700 = getelementptr inbounds i8, i8* %x_p, i64 176, !dbg !15700
  tail call void %op(i8* nonnull %vindex1700, i8* %cookie) #6, !dbg !15702
  br label %if.end1701, !dbg !15702

if.end1701:                                       ; preds = %if.then1696, %if.end1693
  br i1 %cmp1518, label %if.then1704, label %if.end1707, !dbg !15703

if.then1704:                                      ; preds = %if.end1701
  %f = getelementptr inbounds i8, i8* %x_p, i64 184, !dbg !15704
  tail call void %op(i8* nonnull %f, i8* %cookie) #6, !dbg !15706
  br label %if.end1707, !dbg !15706

if.end1707:                                       ; preds = %if.then1704, %if.end1701
  br i1 %cmp1518, label %if.then1710, label %if.end1713, !dbg !15707

if.then1710:                                      ; preds = %if.end1707
  %personality = getelementptr inbounds i8, i8* %x_p, i64 192, !dbg !15708
  tail call void %op(i8* nonnull %personality, i8* %cookie) #6, !dbg !15710
  br label %if.end1713, !dbg !15710

if.end1713:                                       ; preds = %if.then1710, %if.end1707
  br i1 %cmp1518, label %if.then1716, label %if.end1719, !dbg !15711

if.then1716:                                      ; preds = %if.end1713
  %function_specific_target = getelementptr inbounds i8, i8* %x_p, i64 200, !dbg !15712
  tail call void %op(i8* nonnull %function_specific_target, i8* %cookie) #6, !dbg !15714
  br label %if.end1719, !dbg !15714

if.end1719:                                       ; preds = %if.then1716, %if.end1713
  br i1 %cmp1518, label %if.then1722, label %sw.epilog2372, !dbg !15715

if.then1722:                                      ; preds = %if.end1719
  %function_specific_optimization = getelementptr inbounds i8, i8* %x_p, i64 208, !dbg !15716
  tail call void %op(i8* nonnull %function_specific_optimization, i8* %cookie) #6, !dbg !15718
  br label %sw.epilog2372, !dbg !15718

sw.bb1726:                                        ; preds = %sw.bb
  %cmp1727 = icmp eq i8* %x_p, %this_obj, !dbg !15719
  br i1 %cmp1727, label %if.then1729, label %if.end1734, !dbg !15721

if.then1729:                                      ; preds = %sw.bb1726
  %chain1733 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15722
  tail call void %op(i8* nonnull %chain1733, i8* %cookie) #6, !dbg !15723
  br label %if.end1734, !dbg !15723

if.end1734:                                       ; preds = %if.then1729, %sw.bb1726
  br i1 %cmp1727, label %if.then1737, label %if.end1742, !dbg !15724

if.then1737:                                      ; preds = %if.end1734
  %type1741 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15725
  tail call void %op(i8* nonnull %type1741, i8* %cookie) #6, !dbg !15727
  br label %if.end1742, !dbg !15727

if.end1742:                                       ; preds = %if.then1737, %if.end1734
  br i1 %cmp1727, label %if.then1745, label %if.end1748, !dbg !15728

if.then1745:                                      ; preds = %if.end1742
  %values = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15729
  tail call void %op(i8* nonnull %values, i8* %cookie) #6, !dbg !15731
  br label %if.end1748, !dbg !15731

if.end1748:                                       ; preds = %if.then1745, %if.end1742
  br i1 %cmp1727, label %if.then1751, label %if.end1755, !dbg !15732

if.then1751:                                      ; preds = %if.end1748
  %size1754 = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15733
  tail call void %op(i8* nonnull %size1754, i8* %cookie) #6, !dbg !15735
  br label %if.end1755, !dbg !15735

if.end1755:                                       ; preds = %if.then1751, %if.end1748
  br i1 %cmp1727, label %if.then1758, label %if.end1762, !dbg !15736

if.then1758:                                      ; preds = %if.end1755
  %size_unit1761 = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15737
  tail call void %op(i8* nonnull %size_unit1761, i8* %cookie) #6, !dbg !15739
  br label %if.end1762, !dbg !15739

if.end1762:                                       ; preds = %if.then1758, %if.end1755
  br i1 %cmp1727, label %if.then1765, label %if.end1769, !dbg !15740

if.then1765:                                      ; preds = %if.end1762
  %attributes1768 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15741
  tail call void %op(i8* nonnull %attributes1768, i8* %cookie) #6, !dbg !15743
  br label %if.end1769, !dbg !15743

if.end1769:                                       ; preds = %if.then1765, %if.end1762
  br i1 %cmp1727, label %if.then1772, label %if.end1775, !dbg !15744

if.then1772:                                      ; preds = %if.end1769
  %pointer_to = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15745
  tail call void %op(i8* nonnull %pointer_to, i8* %cookie) #6, !dbg !15747
  br label %if.end1775, !dbg !15747

if.end1775:                                       ; preds = %if.then1772, %if.end1769
  br i1 %cmp1727, label %if.then1778, label %if.end1781, !dbg !15748

if.then1778:                                      ; preds = %if.end1775
  %reference_to = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15749
  tail call void %op(i8* nonnull %reference_to, i8* %cookie) #6, !dbg !15751
  br label %if.end1781, !dbg !15751

if.end1781:                                       ; preds = %if.then1778, %if.end1775
  %1 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !15752
  %cmp1782 = icmp eq %struct.gcc_debug_hooks* %1, @sdb_debug_hooks, !dbg !15753
  br i1 %cmp1782, label %cond.end, label %cond.false, !dbg !15752

cond.false:                                       ; preds = %if.end1781
  %cmp1784 = icmp eq %struct.gcc_debug_hooks* %1, @dwarf2_debug_hooks, !dbg !15754
  %cond = select i1 %cmp1784, i32 2, i32 0, !dbg !15755
  br label %cond.end, !dbg !15752

cond.end:                                         ; preds = %if.end1781, %cond.false
  %cond1786 = phi i32 [ %cond, %cond.false ], [ 1, %if.end1781 ], !dbg !15752
  switch i32 %cond1786, label %sw.epilog [
    i32 2, label %sw.bb1794
    i32 1, label %sw.bb1787
  ], !dbg !15756

sw.bb1787:                                        ; preds = %cond.end
  br i1 %cmp1727, label %if.then1790, label %sw.epilog, !dbg !15757

if.then1790:                                      ; preds = %sw.bb1787
  %symtab = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15759
  tail call void %op(i8* nonnull %symtab, i8* %cookie) #6, !dbg !15761
  br label %sw.epilog, !dbg !15761

sw.bb1794:                                        ; preds = %cond.end
  br i1 %cmp1727, label %if.then1797, label %sw.epilog, !dbg !15762

if.then1797:                                      ; preds = %sw.bb1794
  %symtab1800 = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15763
  tail call void %op(i8* nonnull %symtab1800, i8* %cookie) #6, !dbg !15765
  br label %sw.epilog, !dbg !15765

sw.epilog:                                        ; preds = %cond.end, %sw.bb1794, %if.then1797, %sw.bb1787, %if.then1790
  br i1 %cmp1727, label %if.then1804, label %if.end1808, !dbg !15766

if.then1804:                                      ; preds = %sw.epilog
  %name1807 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15767
  tail call void %op(i8* nonnull %name1807, i8* %cookie) #6, !dbg !15769
  br label %if.end1808, !dbg !15769

if.end1808:                                       ; preds = %if.then1804, %sw.epilog
  br i1 %cmp1727, label %if.then1811, label %if.end1814, !dbg !15770

if.then1811:                                      ; preds = %if.end1808
  %minval = getelementptr inbounds i8, i8* %x_p, i64 104, !dbg !15771
  tail call void %op(i8* nonnull %minval, i8* %cookie) #6, !dbg !15773
  br label %if.end1814, !dbg !15773

if.end1814:                                       ; preds = %if.then1811, %if.end1808
  br i1 %cmp1727, label %if.then1817, label %if.end1820, !dbg !15774

if.then1817:                                      ; preds = %if.end1814
  %maxval = getelementptr inbounds i8, i8* %x_p, i64 112, !dbg !15775
  tail call void %op(i8* nonnull %maxval, i8* %cookie) #6, !dbg !15777
  br label %if.end1820, !dbg !15777

if.end1820:                                       ; preds = %if.then1817, %if.end1814
  br i1 %cmp1727, label %if.then1823, label %if.end1826, !dbg !15778

if.then1823:                                      ; preds = %if.end1820
  %next_variant = getelementptr inbounds i8, i8* %x_p, i64 120, !dbg !15779
  tail call void %op(i8* nonnull %next_variant, i8* %cookie) #6, !dbg !15781
  br label %if.end1826, !dbg !15781

if.end1826:                                       ; preds = %if.then1823, %if.end1820
  br i1 %cmp1727, label %if.then1829, label %if.end1832, !dbg !15782

if.then1829:                                      ; preds = %if.end1826
  %main_variant = getelementptr inbounds i8, i8* %x_p, i64 128, !dbg !15783
  tail call void %op(i8* nonnull %main_variant, i8* %cookie) #6, !dbg !15785
  br label %if.end1832, !dbg !15785

if.end1832:                                       ; preds = %if.then1829, %if.end1826
  br i1 %cmp1727, label %if.then1835, label %if.end1838, !dbg !15786

if.then1835:                                      ; preds = %if.end1832
  %binfo = getelementptr inbounds i8, i8* %x_p, i64 136, !dbg !15787
  tail call void %op(i8* nonnull %binfo, i8* %cookie) #6, !dbg !15789
  br label %if.end1838, !dbg !15789

if.end1838:                                       ; preds = %if.then1835, %if.end1832
  br i1 %cmp1727, label %if.then1841, label %if.end1845, !dbg !15790

if.then1841:                                      ; preds = %if.end1838
  %context1844 = getelementptr inbounds i8, i8* %x_p, i64 144, !dbg !15791
  tail call void %op(i8* nonnull %context1844, i8* %cookie) #6, !dbg !15793
  br label %if.end1845, !dbg !15793

if.end1845:                                       ; preds = %if.then1841, %if.end1838
  br i1 %cmp1727, label %if.then1848, label %if.end1851, !dbg !15794

if.then1848:                                      ; preds = %if.end1845
  %canonical = getelementptr inbounds i8, i8* %x_p, i64 152, !dbg !15795
  tail call void %op(i8* nonnull %canonical, i8* %cookie) #6, !dbg !15797
  br label %if.end1851, !dbg !15797

if.end1851:                                       ; preds = %if.then1848, %if.end1845
  br i1 %cmp1727, label %if.then1854, label %sw.epilog2372, !dbg !15798

if.then1854:                                      ; preds = %if.end1851
  %lang_specific1857 = getelementptr inbounds i8, i8* %x_p, i64 160, !dbg !15799
  tail call void %op(i8* nonnull %lang_specific1857, i8* %cookie) #6, !dbg !15801
  br label %sw.epilog2372, !dbg !15801

sw.bb1859:                                        ; preds = %sw.bb
  %cmp1860 = icmp eq i8* %x_p, %this_obj, !dbg !15802
  br i1 %cmp1860, label %if.then1862, label %if.end1866, !dbg !15804

if.then1862:                                      ; preds = %sw.bb1859
  %chain1865 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15805
  tail call void %op(i8* nonnull %chain1865, i8* %cookie) #6, !dbg !15806
  br label %if.end1866, !dbg !15806

if.end1866:                                       ; preds = %if.then1862, %sw.bb1859
  br i1 %cmp1860, label %if.then1869, label %if.end1874, !dbg !15807

if.then1869:                                      ; preds = %if.end1866
  %type1873 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15808
  tail call void %op(i8* nonnull %type1873, i8* %cookie) #6, !dbg !15810
  br label %if.end1874, !dbg !15810

if.end1874:                                       ; preds = %if.then1869, %if.end1866
  br i1 %cmp1860, label %if.then1877, label %if.end1880, !dbg !15811

if.then1877:                                      ; preds = %if.end1874
  %purpose = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15812
  tail call void %op(i8* nonnull %purpose, i8* %cookie) #6, !dbg !15814
  br label %if.end1880, !dbg !15814

if.end1880:                                       ; preds = %if.then1877, %if.end1874
  br i1 %cmp1860, label %if.then1883, label %sw.epilog2372, !dbg !15815

if.then1883:                                      ; preds = %if.end1880
  %value = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15816
  tail call void %op(i8* nonnull %value, i8* %cookie) #6, !dbg !15818
  br label %sw.epilog2372, !dbg !15818

sw.bb1887:                                        ; preds = %sw.bb
  %cmp1888 = icmp eq i8* %x_p, %this_obj, !dbg !15819
  br i1 %cmp1888, label %if.then1890, label %if.end1894, !dbg !15821

if.then1890:                                      ; preds = %sw.bb1887
  %chain1893 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15822
  tail call void %op(i8* nonnull %chain1893, i8* %cookie) #6, !dbg !15823
  br label %if.end1894, !dbg !15823

if.end1894:                                       ; preds = %if.then1890, %sw.bb1887
  br i1 %cmp1888, label %if.then1897, label %if.end1902, !dbg !15824

if.then1897:                                      ; preds = %if.end1894
  %type1901 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15825
  tail call void %op(i8* nonnull %type1901, i8* %cookie) #6, !dbg !15827
  br label %if.end1902, !dbg !15827

if.end1902:                                       ; preds = %if.then1897, %if.end1894
  %length = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15828
  %2 = bitcast i8* %length to i32*, !dbg !15828
  %3 = load i32, i32* %2, align 8, !dbg !15828
  %conv1906 = sext i32 %3 to i64, !dbg !15829
  call void @llvm.dbg.value(metadata i64 %conv1906, metadata !14896, metadata !DIExpression()), !dbg !15830
  call void @llvm.dbg.value(metadata i64 0, metadata !14892, metadata !DIExpression()), !dbg !15830
  %a = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15831
  %4 = bitcast i8* %a to [1 x %union.tree_node*]*, !dbg !15831
  br i1 %cmp1888, label %if.end1902.split.us, label %if.end1902.if.end1902.split_crit_edge, !dbg !15836

if.end1902.if.end1902.split_crit_edge:            ; preds = %if.end1902
  br label %sw.epilog2372.loopexit.us-lcssa, !dbg !15836

if.end1902.split.us:                              ; preds = %if.end1902
  br label %for.cond.us, !dbg !15836

for.cond.us:                                      ; preds = %for.body.us, %if.end1902.split.us
  %i1.0.us = phi i64 [ 0, %if.end1902.split.us ], [ %inc.us, %for.body.us ], !dbg !15837
  call void @llvm.dbg.value(metadata i64 %i1.0.us, metadata !14892, metadata !DIExpression()), !dbg !15830
  %cmp1907.us = icmp eq i64 %i1.0.us, %conv1906, !dbg !15838
  br i1 %cmp1907.us, label %sw.epilog2372.loopexit.us-lcssa.us, label %for.body.us, !dbg !15839

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %4, i64 0, i64 %i1.0.us, !dbg !15840
  %5 = bitcast %union.tree_node** %arrayidx.us to i8*, !dbg !15841
  tail call void %op(i8* nonnull %5, i8* %cookie) #6, !dbg !15842
  %inc.us = add i64 %i1.0.us, 1, !dbg !15843
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !14892, metadata !DIExpression()), !dbg !15830
  br label %for.cond.us, !dbg !15844, !llvm.loop !15845

sw.epilog2372.loopexit.us-lcssa.us:               ; preds = %for.cond.us
  br label %sw.epilog2372.loopexit, !dbg !15847

sw.bb1915:                                        ; preds = %sw.bb
  %cmp1916 = icmp eq i8* %x_p, %this_obj, !dbg !15848
  br i1 %cmp1916, label %if.then1918, label %if.end1922, !dbg !15850

if.then1918:                                      ; preds = %sw.bb1915
  %chain1921 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15851
  tail call void %op(i8* nonnull %chain1921, i8* %cookie) #6, !dbg !15852
  br label %if.end1922, !dbg !15852

if.end1922:                                       ; preds = %if.then1918, %sw.bb1915
  br i1 %cmp1916, label %if.then1925, label %if.end1930, !dbg !15853

if.then1925:                                      ; preds = %if.end1922
  %type1929 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15854
  tail call void %op(i8* nonnull %type1929, i8* %cookie) #6, !dbg !15856
  br label %if.end1930, !dbg !15856

if.end1930:                                       ; preds = %if.then1925, %if.end1922
  br i1 %cmp1916, label %if.then1933, label %sw.default1941, !dbg !15857

if.then1933:                                      ; preds = %if.end1930
  %block = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15858
  tail call void %op(i8* nonnull %block, i8* %cookie) #6, !dbg !15860
  br label %sw.default1941, !dbg !15860

sw.default1941:                                   ; preds = %if.end1930, %if.then1933
  %call1942 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %generic1) #7, !dbg !15861
  %conv1943 = sext i32 %call1942 to i64, !dbg !15862
  call void @llvm.dbg.value(metadata i64 %conv1943, metadata !14900, metadata !DIExpression()), !dbg !15863
  call void @llvm.dbg.value(metadata i64 0, metadata !14897, metadata !DIExpression()), !dbg !15863
  %operands = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15864
  %6 = bitcast i8* %operands to [1 x %union.tree_node*]*, !dbg !15864
  br i1 %cmp1916, label %sw.default1941.split.us, label %sw.default1941.sw.default1941.split_crit_edge, !dbg !15869

sw.default1941.sw.default1941.split_crit_edge:    ; preds = %sw.default1941
  br label %sw.epilog2372.loopexit3.us-lcssa, !dbg !15869

sw.default1941.split.us:                          ; preds = %sw.default1941
  br label %for.cond1944.us, !dbg !15869

for.cond1944.us:                                  ; preds = %for.body1947.us, %sw.default1941.split.us
  %i2.0.us = phi i64 [ 0, %sw.default1941.split.us ], [ %inc1956.us, %for.body1947.us ], !dbg !15870
  call void @llvm.dbg.value(metadata i64 %i2.0.us, metadata !14897, metadata !DIExpression()), !dbg !15863
  %cmp1945.us = icmp eq i64 %i2.0.us, %conv1943, !dbg !15871
  br i1 %cmp1945.us, label %sw.epilog2372.loopexit3.us-lcssa.us, label %for.body1947.us, !dbg !15872

for.body1947.us:                                  ; preds = %for.cond1944.us
  %arrayidx1953.us = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %6, i64 0, i64 %i2.0.us, !dbg !15873
  %7 = bitcast %union.tree_node** %arrayidx1953.us to i8*, !dbg !15874
  tail call void %op(i8* nonnull %7, i8* %cookie) #6, !dbg !15875
  %inc1956.us = add i64 %i2.0.us, 1, !dbg !15876
  call void @llvm.dbg.value(metadata i64 %inc1956.us, metadata !14897, metadata !DIExpression()), !dbg !15863
  br label %for.cond1944.us, !dbg !15877, !llvm.loop !15878

sw.epilog2372.loopexit3.us-lcssa.us:              ; preds = %for.cond1944.us
  br label %sw.epilog2372.loopexit3, !dbg !15847

sw.bb1959:                                        ; preds = %sw.bb
  %cmp1960 = icmp eq i8* %x_p, %this_obj, !dbg !15880
  br i1 %cmp1960, label %if.then1962, label %if.end1966, !dbg !15882

if.then1962:                                      ; preds = %sw.bb1959
  %chain1965 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15883
  tail call void %op(i8* nonnull %chain1965, i8* %cookie) #6, !dbg !15884
  br label %if.end1966, !dbg !15884

if.end1966:                                       ; preds = %if.then1962, %sw.bb1959
  br i1 %cmp1960, label %if.then1969, label %if.end1974, !dbg !15885

if.then1969:                                      ; preds = %if.end1966
  %type1973 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15886
  tail call void %op(i8* nonnull %type1973, i8* %cookie) #6, !dbg !15888
  br label %if.end1974, !dbg !15888

if.end1974:                                       ; preds = %if.then1969, %if.end1966
  br i1 %cmp1960, label %if.then1977, label %if.end1980, !dbg !15889

if.then1977:                                      ; preds = %if.end1974
  %var = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15890
  tail call void %op(i8* nonnull %var, i8* %cookie) #6, !dbg !15892
  br label %if.end1980, !dbg !15892

if.end1980:                                       ; preds = %if.then1977, %if.end1974
  br i1 %cmp1960, label %if.then1983, label %if.end1986, !dbg !15893

if.then1983:                                      ; preds = %if.end1980
  %def_stmt = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15894
  tail call void %op(i8* nonnull %def_stmt, i8* %cookie) #6, !dbg !15896
  br label %if.end1986, !dbg !15896

if.end1986:                                       ; preds = %if.then1983, %if.end1980
  br i1 %cmp1960, label %if.then1989, label %sw.epilog2372, !dbg !15897

if.then1989:                                      ; preds = %if.end1986
  %ptr_info = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15898
  tail call void %op(i8* nonnull %ptr_info, i8* %cookie) #6, !dbg !15900
  br label %sw.epilog2372, !dbg !15900

sw.bb1993:                                        ; preds = %sw.bb
  %cmp1994 = icmp eq i8* %x_p, %this_obj, !dbg !15901
  br i1 %cmp1994, label %if.then1996, label %if.end2001, !dbg !15903

if.then1996:                                      ; preds = %sw.bb1993
  %chain2000 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15904
  tail call void %op(i8* nonnull %chain2000, i8* %cookie) #6, !dbg !15905
  br label %if.end2001, !dbg !15905

if.end2001:                                       ; preds = %if.then1996, %sw.bb1993
  br i1 %cmp1994, label %if.then2004, label %if.end2009, !dbg !15906

if.then2004:                                      ; preds = %if.end2001
  %type2008 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15907
  tail call void %op(i8* nonnull %type2008, i8* %cookie) #6, !dbg !15909
  br label %if.end2009, !dbg !15909

if.end2009:                                       ; preds = %if.then2004, %if.end2001
  br i1 %cmp1994, label %if.then2012, label %if.end2015, !dbg !15910

if.then2012:                                      ; preds = %if.end2009
  %vars = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15911
  tail call void %op(i8* nonnull %vars, i8* %cookie) #6, !dbg !15913
  br label %if.end2015, !dbg !15913

if.end2015:                                       ; preds = %if.then2012, %if.end2009
  br i1 %cmp1994, label %if.then2018, label %if.end2021, !dbg !15914

if.then2018:                                      ; preds = %if.end2015
  %nonlocalized_vars = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15915
  tail call void %op(i8* nonnull %nonlocalized_vars, i8* %cookie) #6, !dbg !15917
  br label %if.end2021, !dbg !15917

if.end2021:                                       ; preds = %if.then2018, %if.end2015
  br i1 %cmp1994, label %if.then2024, label %if.end2027, !dbg !15918

if.then2024:                                      ; preds = %if.end2021
  %subblocks = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15919
  tail call void %op(i8* nonnull %subblocks, i8* %cookie) #6, !dbg !15921
  br label %if.end2027, !dbg !15921

if.end2027:                                       ; preds = %if.then2024, %if.end2021
  br i1 %cmp1994, label %if.then2030, label %if.end2033, !dbg !15922

if.then2030:                                      ; preds = %if.end2027
  %supercontext = getelementptr inbounds i8, i8* %x_p, i64 56, !dbg !15923
  tail call void %op(i8* nonnull %supercontext, i8* %cookie) #6, !dbg !15925
  br label %if.end2033, !dbg !15925

if.end2033:                                       ; preds = %if.then2030, %if.end2027
  br i1 %cmp1994, label %if.then2036, label %if.end2040, !dbg !15926

if.then2036:                                      ; preds = %if.end2033
  %abstract_origin2039 = getelementptr inbounds i8, i8* %x_p, i64 64, !dbg !15927
  tail call void %op(i8* nonnull %abstract_origin2039, i8* %cookie) #6, !dbg !15929
  br label %if.end2040, !dbg !15929

if.end2040:                                       ; preds = %if.then2036, %if.end2033
  br i1 %cmp1994, label %if.then2043, label %if.end2046, !dbg !15930

if.then2043:                                      ; preds = %if.end2040
  %fragment_origin = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15931
  tail call void %op(i8* nonnull %fragment_origin, i8* %cookie) #6, !dbg !15933
  br label %if.end2046, !dbg !15933

if.end2046:                                       ; preds = %if.then2043, %if.end2040
  br i1 %cmp1994, label %if.then2049, label %sw.epilog2372, !dbg !15934

if.then2049:                                      ; preds = %if.end2046
  %fragment_chain = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15935
  tail call void %op(i8* nonnull %fragment_chain, i8* %cookie) #6, !dbg !15937
  br label %sw.epilog2372, !dbg !15937

sw.bb2053:                                        ; preds = %sw.bb
  %cmp2054 = icmp eq i8* %x_p, %this_obj, !dbg !15938
  br i1 %cmp2054, label %if.then2056, label %if.end2061, !dbg !15940

if.then2056:                                      ; preds = %sw.bb2053
  %chain2060 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !15941
  tail call void %op(i8* nonnull %chain2060, i8* %cookie) #6, !dbg !15942
  br label %if.end2061, !dbg !15942

if.end2061:                                       ; preds = %if.then2056, %sw.bb2053
  br i1 %cmp2054, label %if.then2064, label %if.end2069, !dbg !15943

if.then2064:                                      ; preds = %if.end2061
  %type2068 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !15944
  tail call void %op(i8* nonnull %type2068, i8* %cookie) #6, !dbg !15946
  br label %if.end2069, !dbg !15946

if.end2069:                                       ; preds = %if.then2064, %if.end2061
  br i1 %cmp2054, label %if.then2072, label %if.end2076, !dbg !15947

if.then2072:                                      ; preds = %if.end2069
  %offset2075 = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !15948
  tail call void %op(i8* nonnull %offset2075, i8* %cookie) #6, !dbg !15950
  br label %if.end2076, !dbg !15950

if.end2076:                                       ; preds = %if.then2072, %if.end2069
  br i1 %cmp2054, label %if.then2079, label %if.end2082, !dbg !15951

if.then2079:                                      ; preds = %if.end2076
  %vtable = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !15952
  tail call void %op(i8* nonnull %vtable, i8* %cookie) #6, !dbg !15954
  br label %if.end2082, !dbg !15954

if.end2082:                                       ; preds = %if.then2079, %if.end2076
  br i1 %cmp2054, label %if.then2085, label %if.end2088, !dbg !15955

if.then2085:                                      ; preds = %if.end2082
  %virtuals = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !15956
  tail call void %op(i8* nonnull %virtuals, i8* %cookie) #6, !dbg !15958
  br label %if.end2088, !dbg !15958

if.end2088:                                       ; preds = %if.then2085, %if.end2082
  br i1 %cmp2054, label %if.then2091, label %if.end2094, !dbg !15959

if.then2091:                                      ; preds = %if.end2088
  %vptr_field = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !15960
  tail call void %op(i8* nonnull %vptr_field, i8* %cookie) #6, !dbg !15962
  br label %if.end2094, !dbg !15962

if.end2094:                                       ; preds = %if.then2091, %if.end2088
  br i1 %cmp2054, label %if.then2097, label %if.end2100, !dbg !15963

if.then2097:                                      ; preds = %if.end2094
  %base_accesses = getelementptr inbounds i8, i8* %x_p, i64 56, !dbg !15964
  tail call void %op(i8* nonnull %base_accesses, i8* %cookie) #6, !dbg !15966
  br label %if.end2100, !dbg !15966

if.end2100:                                       ; preds = %if.then2097, %if.end2094
  br i1 %cmp2054, label %if.then2103, label %if.end2106, !dbg !15967

if.then2103:                                      ; preds = %if.end2100
  %inheritance = getelementptr inbounds i8, i8* %x_p, i64 64, !dbg !15968
  tail call void %op(i8* nonnull %inheritance, i8* %cookie) #6, !dbg !15970
  br label %if.end2106, !dbg !15970

if.end2106:                                       ; preds = %if.then2103, %if.end2100
  br i1 %cmp2054, label %if.then2109, label %if.end2112, !dbg !15971

if.then2109:                                      ; preds = %if.end2106
  %vtt_subvtt = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !15972
  tail call void %op(i8* nonnull %vtt_subvtt, i8* %cookie) #6, !dbg !15974
  br label %if.end2112, !dbg !15974

if.end2112:                                       ; preds = %if.then2109, %if.end2106
  br i1 %cmp2054, label %if.then2115, label %if.end2118, !dbg !15975

if.then2115:                                      ; preds = %if.end2112
  %vtt_vptr = getelementptr inbounds i8, i8* %x_p, i64 80, !dbg !15976
  tail call void %op(i8* nonnull %vtt_vptr, i8* %cookie) #6, !dbg !15978
  br label %if.end2118, !dbg !15978

if.end2118:                                       ; preds = %if.then2115, %if.end2112
  %base_binfos = getelementptr inbounds i8, i8* %x_p, i64 88, !dbg !15979
  %num = bitcast i8* %base_binfos to i32*, !dbg !15980
  %8 = load i32, i32* %num, align 8, !dbg !15980
  %conv2122 = zext i32 %8 to i64, !dbg !15981
  call void @llvm.dbg.value(metadata i64 %conv2122, metadata !14903, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i64 0, metadata !14901, metadata !DIExpression()), !dbg !15982
  %vec2134 = getelementptr inbounds i8, i8* %x_p, i64 96, !dbg !15983
  %9 = bitcast i8* %vec2134 to [1 x %union.tree_node*]*, !dbg !15983
  br i1 %cmp2054, label %if.end2118.split.us, label %if.end2118.if.end2118.split_crit_edge, !dbg !15988

if.end2118.if.end2118.split_crit_edge:            ; preds = %if.end2118
  br label %sw.epilog2372.loopexit4.us-lcssa, !dbg !15988

if.end2118.split.us:                              ; preds = %if.end2118
  br label %for.cond2123.us, !dbg !15988

for.cond2123.us:                                  ; preds = %for.body2126.us, %if.end2118.split.us
  %i3.0.us = phi i64 [ 0, %if.end2118.split.us ], [ %inc2138.us, %for.body2126.us ], !dbg !15989
  call void @llvm.dbg.value(metadata i64 %i3.0.us, metadata !14901, metadata !DIExpression()), !dbg !15982
  %cmp2124.us = icmp eq i64 %i3.0.us, %conv2122, !dbg !15990
  br i1 %cmp2124.us, label %sw.epilog2372.loopexit4.us-lcssa.us, label %for.body2126.us, !dbg !15991

for.body2126.us:                                  ; preds = %for.cond2123.us
  %arrayidx2135.us = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %9, i64 0, i64 %i3.0.us, !dbg !15992
  %10 = bitcast %union.tree_node** %arrayidx2135.us to i8*, !dbg !15993
  tail call void %op(i8* nonnull %10, i8* %cookie) #6, !dbg !15994
  %inc2138.us = add nuw nsw i64 %i3.0.us, 1, !dbg !15995
  call void @llvm.dbg.value(metadata i64 %inc2138.us, metadata !14901, metadata !DIExpression()), !dbg !15982
  br label %for.cond2123.us, !dbg !15996, !llvm.loop !15997

sw.epilog2372.loopexit4.us-lcssa.us:              ; preds = %for.cond2123.us
  br label %sw.epilog2372.loopexit4, !dbg !15847

sw.bb2140:                                        ; preds = %sw.bb
  %cmp2141 = icmp eq i8* %x_p, %this_obj, !dbg !15999
  br i1 %cmp2141, label %if.then2143, label %if.end2147, !dbg !16001

if.then2143:                                      ; preds = %sw.bb2140
  %chain2146 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16002
  tail call void %op(i8* nonnull %chain2146, i8* %cookie) #6, !dbg !16003
  br label %if.end2147, !dbg !16003

if.end2147:                                       ; preds = %if.then2143, %sw.bb2140
  br i1 %cmp2141, label %if.then2150, label %if.end2155, !dbg !16004

if.then2150:                                      ; preds = %if.end2147
  %type2154 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16005
  tail call void %op(i8* nonnull %type2154, i8* %cookie) #6, !dbg !16007
  br label %if.end2155, !dbg !16007

if.end2155:                                       ; preds = %if.then2150, %if.end2147
  br i1 %cmp2141, label %if.then2158, label %if.end2161, !dbg !16008

if.then2158:                                      ; preds = %if.end2155
  %head = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !16009
  tail call void %op(i8* nonnull %head, i8* %cookie) #6, !dbg !16011
  br label %if.end2161, !dbg !16011

if.end2161:                                       ; preds = %if.then2158, %if.end2155
  br i1 %cmp2141, label %if.then2164, label %sw.epilog2372, !dbg !16012

if.then2164:                                      ; preds = %if.end2161
  %tail = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !16013
  tail call void %op(i8* nonnull %tail, i8* %cookie) #6, !dbg !16015
  br label %sw.epilog2372, !dbg !16015

sw.bb2168:                                        ; preds = %sw.bb
  %cmp2169 = icmp eq i8* %x_p, %this_obj, !dbg !16016
  br i1 %cmp2169, label %if.then2171, label %if.end2175, !dbg !16018

if.then2171:                                      ; preds = %sw.bb2168
  %chain2174 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16019
  tail call void %op(i8* nonnull %chain2174, i8* %cookie) #6, !dbg !16020
  br label %if.end2175, !dbg !16020

if.end2175:                                       ; preds = %if.then2171, %sw.bb2168
  br i1 %cmp2169, label %if.then2178, label %if.end2183, !dbg !16021

if.then2178:                                      ; preds = %if.end2175
  %type2182 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16022
  tail call void %op(i8* nonnull %type2182, i8* %cookie) #6, !dbg !16024
  br label %if.end2183, !dbg !16024

if.end2183:                                       ; preds = %if.then2178, %if.end2175
  br i1 %cmp2169, label %if.then2186, label %sw.epilog2372, !dbg !16025

if.then2186:                                      ; preds = %if.end2183
  %elts = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !16026
  tail call void %op(i8* nonnull %elts, i8* %cookie) #6, !dbg !16028
  br label %sw.epilog2372, !dbg !16028

sw.bb2190:                                        ; preds = %sw.bb
  %cmp2191 = icmp eq i8* %x_p, %this_obj, !dbg !16029
  br i1 %cmp2191, label %if.then2193, label %if.end2197, !dbg !16031

if.then2193:                                      ; preds = %sw.bb2190
  %chain2196 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16032
  tail call void %op(i8* nonnull %chain2196, i8* %cookie) #6, !dbg !16033
  br label %if.end2197, !dbg !16033

if.end2197:                                       ; preds = %if.then2193, %sw.bb2190
  br i1 %cmp2191, label %if.then2200, label %if.end2205, !dbg !16034

if.then2200:                                      ; preds = %if.end2197
  %type2204 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16035
  tail call void %op(i8* nonnull %type2204, i8* %cookie) #6, !dbg !16037
  br label %if.end2205, !dbg !16037

if.end2205:                                       ; preds = %if.then2200, %if.end2197
  br i1 %cmp2191, label %if.then2208, label %if.end2211, !dbg !16038

if.then2208:                                      ; preds = %if.end2205
  %gimple_reduction_init = getelementptr inbounds i8, i8* %x_p, i64 40, !dbg !16039
  tail call void %op(i8* nonnull %gimple_reduction_init, i8* %cookie) #6, !dbg !16041
  br label %if.end2211, !dbg !16041

if.end2211:                                       ; preds = %if.then2208, %if.end2205
  br i1 %cmp2191, label %if.then2214, label %if.end2217, !dbg !16042

if.then2214:                                      ; preds = %if.end2211
  %gimple_reduction_merge = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !16043
  tail call void %op(i8* nonnull %gimple_reduction_merge, i8* %cookie) #6, !dbg !16045
  br label %if.end2217, !dbg !16045

if.end2217:                                       ; preds = %if.then2214, %if.end2211
  %code = getelementptr inbounds i8, i8* %x_p, i64 28, !dbg !16046
  %11 = bitcast i8* %code to i32*, !dbg !16046
  %12 = load i32, i32* %11, align 4, !dbg !16046
  %idxprom = zext i32 %12 to i64, !dbg !16047
  %arrayidx2221 = getelementptr inbounds [0 x i8], [0 x i8]* @omp_clause_num_ops, i64 0, i64 %idxprom, !dbg !16047
  %13 = load i8, i8* %arrayidx2221, align 1, !dbg !16047
  %conv2222 = zext i8 %13 to i64, !dbg !16048
  call void @llvm.dbg.value(metadata i64 %conv2222, metadata !14906, metadata !DIExpression()), !dbg !16049
  call void @llvm.dbg.value(metadata i64 0, metadata !14904, metadata !DIExpression()), !dbg !16049
  %ops = getelementptr inbounds i8, i8* %x_p, i64 56, !dbg !16050
  %14 = bitcast i8* %ops to [1 x %union.tree_node*]*, !dbg !16050
  br i1 %cmp2191, label %if.end2217.split.us, label %if.end2217.if.end2217.split_crit_edge, !dbg !16055

if.end2217.if.end2217.split_crit_edge:            ; preds = %if.end2217
  br label %sw.epilog2372.loopexit5.us-lcssa, !dbg !16055

if.end2217.split.us:                              ; preds = %if.end2217
  br label %for.cond2223.us, !dbg !16055

for.cond2223.us:                                  ; preds = %for.body2226.us, %if.end2217.split.us
  %i4.0.us = phi i64 [ 0, %if.end2217.split.us ], [ %inc2235.us, %for.body2226.us ], !dbg !16056
  call void @llvm.dbg.value(metadata i64 %i4.0.us, metadata !14904, metadata !DIExpression()), !dbg !16049
  %cmp2224.us = icmp eq i64 %i4.0.us, %conv2222, !dbg !16057
  br i1 %cmp2224.us, label %sw.epilog2372.loopexit5.us-lcssa.us, label %for.body2226.us, !dbg !16058

for.body2226.us:                                  ; preds = %for.cond2223.us
  %arrayidx2232.us = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %14, i64 0, i64 %i4.0.us, !dbg !16059
  %15 = bitcast %union.tree_node** %arrayidx2232.us to i8*, !dbg !16060
  tail call void %op(i8* nonnull %15, i8* %cookie) #6, !dbg !16061
  %inc2235.us = add nuw nsw i64 %i4.0.us, 1, !dbg !16062
  call void @llvm.dbg.value(metadata i64 %inc2235.us, metadata !14904, metadata !DIExpression()), !dbg !16049
  br label %for.cond2223.us, !dbg !16063, !llvm.loop !16064

sw.epilog2372.loopexit5.us-lcssa.us:              ; preds = %for.cond2223.us
  br label %sw.epilog2372.loopexit5, !dbg !15847

sw.bb2237:                                        ; preds = %sw.bb
  %cmp2238 = icmp eq i8* %x_p, %this_obj, !dbg !16066
  br i1 %cmp2238, label %if.then2240, label %if.end2244, !dbg !16068

if.then2240:                                      ; preds = %sw.bb2237
  %chain2243 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16069
  tail call void %op(i8* nonnull %chain2243, i8* %cookie) #6, !dbg !16070
  br label %if.end2244, !dbg !16070

if.end2244:                                       ; preds = %if.then2240, %sw.bb2237
  br i1 %cmp2238, label %if.then2247, label %sw.epilog2372, !dbg !16071

if.then2247:                                      ; preds = %if.end2244
  %type2251 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16072
  tail call void %op(i8* nonnull %type2251, i8* %cookie) #6, !dbg !16074
  br label %sw.epilog2372, !dbg !16074

sw.bb2253:                                        ; preds = %sw.bb
  %cmp2254 = icmp eq i8* %x_p, %this_obj, !dbg !16075
  br i1 %cmp2254, label %if.then2256, label %if.end2260, !dbg !16077

if.then2256:                                      ; preds = %sw.bb2253
  %chain2259 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16078
  tail call void %op(i8* nonnull %chain2259, i8* %cookie) #6, !dbg !16079
  br label %if.end2260, !dbg !16079

if.end2260:                                       ; preds = %if.then2256, %sw.bb2253
  br i1 %cmp2254, label %if.then2263, label %sw.epilog2372, !dbg !16080

if.then2263:                                      ; preds = %if.end2260
  %type2267 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16081
  tail call void %op(i8* nonnull %type2267, i8* %cookie) #6, !dbg !16083
  br label %sw.epilog2372, !dbg !16083

sw.bb2271:                                        ; preds = %entry
  %cmp2272 = icmp eq i8* %x_p, %this_obj, !dbg !16084
  br i1 %cmp2272, label %if.then2274, label %if.end2278, !dbg !16086

if.then2274:                                      ; preds = %sw.bb2271
  %chain2277 = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16087
  tail call void %op(i8* nonnull %chain2277, i8* %cookie) #6, !dbg !16088
  br label %if.end2278, !dbg !16088

if.end2278:                                       ; preds = %if.then2274, %sw.bb2271
  br i1 %cmp2272, label %if.then2281, label %if.end2286, !dbg !16089

if.then2281:                                      ; preds = %if.end2278
  %type2285 = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16090
  tail call void %op(i8* nonnull %type2285, i8* %cookie) #6, !dbg !16092
  br label %if.end2286, !dbg !16092

if.end2286:                                       ; preds = %if.then2281, %if.end2278
  br i1 %cmp2272, label %if.then2289, label %if.end2293, !dbg !16093

if.then2289:                                      ; preds = %if.end2286
  %node = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !16094
  tail call void %op(i8* nonnull %node, i8* %cookie) #6, !dbg !16096
  br label %if.end2293, !dbg !16096

if.end2293:                                       ; preds = %if.then2289, %if.end2286
  %flags = getelementptr inbounds i8, i8* %x_p, i64 42, !dbg !16097
  %16 = bitcast i8* %flags to i16*, !dbg !16097
  %bf.load2297 = load i16, i16* %16, align 2, !dbg !16097
  %17 = and i16 %bf.load2297, 4096, !dbg !16097
  %tobool = icmp eq i16 %17, 0, !dbg !16097
  br i1 %tobool, label %cond.false2300, label %cond.end2334, !dbg !16097

cond.false2300:                                   ; preds = %if.end2293
  %bf.clear2306 = and i16 %bf.load2297, 63, !dbg !16097
  %cmp2308 = icmp eq i16 %bf.clear2306, 1, !dbg !16097
  br i1 %cmp2308, label %cond.true2310, label %cond.false2321, !dbg !16097

cond.true2310:                                    ; preds = %cond.false2300
  %18 = lshr i16 %bf.load2297, 7, !dbg !16097
  %19 = and i16 %18, 2, !dbg !16097
  br label %cond.end2334, !dbg !16097

cond.false2321:                                   ; preds = %cond.false2300
  %cmp2329 = icmp eq i16 %bf.clear2306, 2, !dbg !16097
  %cond2331 = select i1 %cmp2329, i16 1, i16 4, !dbg !16097
  br label %cond.end2334, !dbg !16097

cond.end2334:                                     ; preds = %if.end2293, %cond.true2310, %cond.false2321
  %cond2335 = phi i16 [ 3, %if.end2293 ], [ %19, %cond.true2310 ], [ %cond2331, %cond.false2321 ], !dbg !16097
  switch i16 %cond2335, label %sw.epilog2355 [
    i16 0, label %sw.bb2336
    i16 1, label %sw.bb2345
  ], !dbg !16098

sw.bb2336:                                        ; preds = %cond.end2334
  br i1 %cmp2272, label %if.then2339, label %sw.epilog2355, !dbg !16099

if.then2339:                                      ; preds = %sw.bb2336
  %value2343 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !16101
  tail call void %op(i8* nonnull %value2343, i8* %cookie) #6, !dbg !16103
  br label %sw.epilog2355, !dbg !16103

sw.bb2345:                                        ; preds = %cond.end2334
  br i1 %cmp2272, label %if.then2348, label %sw.epilog2355, !dbg !16104

if.then2348:                                      ; preds = %sw.bb2345
  %value2352 = getelementptr inbounds i8, i8* %x_p, i64 48, !dbg !16105
  tail call void %op(i8* nonnull %value2352, i8* %cookie) #6, !dbg !16107
  br label %sw.epilog2355, !dbg !16107

sw.epilog2355:                                    ; preds = %cond.end2334, %sw.bb2345, %if.then2348, %sw.bb2336, %if.then2339
  br i1 %cmp2272, label %if.then2358, label %if.end2360, !dbg !16108

if.then2358:                                      ; preds = %sw.epilog2355
  %symbol_binding = getelementptr inbounds i8, i8* %x_p, i64 56, !dbg !16109
  tail call void %op(i8* nonnull %symbol_binding, i8* %cookie) #6, !dbg !16111
  br label %if.end2360, !dbg !16111

if.end2360:                                       ; preds = %if.then2358, %sw.epilog2355
  br i1 %cmp2272, label %if.then2363, label %if.end2365, !dbg !16112

if.then2363:                                      ; preds = %if.end2360
  %tag_binding = getelementptr inbounds i8, i8* %x_p, i64 64, !dbg !16113
  tail call void %op(i8* nonnull %tag_binding, i8* %cookie) #6, !dbg !16115
  br label %if.end2365, !dbg !16115

if.end2365:                                       ; preds = %if.then2363, %if.end2360
  br i1 %cmp2272, label %if.then2368, label %sw.epilog2372, !dbg !16116

if.then2368:                                      ; preds = %if.end2365
  %label_binding = getelementptr inbounds i8, i8* %x_p, i64 72, !dbg !16117
  tail call void %op(i8* nonnull %label_binding, i8* %cookie) #6, !dbg !16119
  br label %sw.epilog2372, !dbg !16119

sw.epilog2372.loopexit.us-lcssa:                  ; preds = %if.end1902.if.end1902.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14892, metadata !DIExpression()), !dbg !15830
  br label %sw.epilog2372.loopexit, !dbg !15847

sw.epilog2372.loopexit:                           ; preds = %sw.epilog2372.loopexit.us-lcssa.us, %sw.epilog2372.loopexit.us-lcssa
  br label %sw.epilog2372, !dbg !15847

sw.epilog2372.loopexit3.us-lcssa:                 ; preds = %sw.default1941.sw.default1941.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14897, metadata !DIExpression()), !dbg !15863
  br label %sw.epilog2372.loopexit3, !dbg !15847

sw.epilog2372.loopexit3:                          ; preds = %sw.epilog2372.loopexit3.us-lcssa.us, %sw.epilog2372.loopexit3.us-lcssa
  br label %sw.epilog2372, !dbg !15847

sw.epilog2372.loopexit4.us-lcssa:                 ; preds = %if.end2118.if.end2118.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14901, metadata !DIExpression()), !dbg !15982
  br label %sw.epilog2372.loopexit4, !dbg !15847

sw.epilog2372.loopexit4:                          ; preds = %sw.epilog2372.loopexit4.us-lcssa.us, %sw.epilog2372.loopexit4.us-lcssa
  br label %sw.epilog2372, !dbg !15847

sw.epilog2372.loopexit5.us-lcssa:                 ; preds = %if.end2217.if.end2217.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !14904, metadata !DIExpression()), !dbg !16049
  br label %sw.epilog2372.loopexit5, !dbg !15847

sw.epilog2372.loopexit5:                          ; preds = %sw.epilog2372.loopexit5.us-lcssa.us, %sw.epilog2372.loopexit5.us-lcssa
  br label %sw.epilog2372, !dbg !15847

sw.epilog2372:                                    ; preds = %sw.epilog2372.loopexit5, %sw.epilog2372.loopexit4, %sw.epilog2372.loopexit3, %sw.epilog2372.loopexit, %if.end2365, %if.then2368, %if.then8, %if.end, %if.then22, %if.end19, %if.then46, %if.end43, %if.then68, %if.end65, %if.then90, %if.end87, %if.then104, %if.end101, %if.then134, %if.end131, %if.then156, %if.end153, %if.then184, %if.end181, %if.then254, %if.end251, %if.then346, %if.end343, %if.then506, %if.end503, %if.then622, %if.end619, %if.then746, %if.end743, %if.then892, %if.end889, %if.then1009, %if.end1006, %if.then1111, %if.end1108, %if.then1223, %if.end1220, %if.then1326, %if.end1323, %if.then1511, %if.end1508, %if.then1722, %if.end1719, %if.then1854, %if.end1851, %if.then1883, %if.end1880, %if.then1989, %if.end1986, %if.then2049, %if.end2046, %if.then2164, %if.end2161, %if.then2186, %if.end2183, %if.then2247, %if.end2244, %if.then2263, %if.end2260, %sw.bb
  ret void, !dbg !15847
}

declare dso_local void @gt_pch_nx_real_value(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_fixed_value(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_n_S(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_lang_decl(i8* %x_p) local_unnamed_addr #5 !dbg !16120 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16122, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16123, metadata !DIExpression()), !dbg !16124
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_9lang_decl, i32 136) #6, !dbg !16125
  ret void, !dbg !16127
}

declare dso_local void @gt_pch_nx_rtx_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_var_ann_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_function(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_die_struct(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_lang_type(i8* %x_p) local_unnamed_addr #5 !dbg !16128 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16130, metadata !DIExpression()), !dbg !16132
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16131, metadata !DIExpression()), !dbg !16132
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_9lang_type, i32 137) #6, !dbg !16133
  %tobool = icmp eq i32 %call, 0, !dbg !16133
  br i1 %tobool, label %if.end26, label %do.body, !dbg !16135

do.body:                                          ; preds = %entry
  %s = bitcast i8* %x_p to %struct.sorted_fields_type**, !dbg !16136
  %0 = load %struct.sorted_fields_type*, %struct.sorted_fields_type** %s, align 8, !dbg !16136
  %cmp = icmp eq %struct.sorted_fields_type* %0, null, !dbg !16136
  %1 = bitcast %struct.sorted_fields_type* %0 to i8*, !dbg !16140
  br i1 %cmp, label %do.body.do.end_crit_edge, label %if.then1, !dbg !16140

do.body.do.end_crit_edge:                         ; preds = %do.body
  br label %do.end, !dbg !16140

if.then1:                                         ; preds = %do.body
  %2 = bitcast i8* %x_p to i8**, !dbg !16136
  tail call void @gt_pch_nx_sorted_fields_type(i8* nonnull %1) #6, !dbg !16136
  %.pre = load i8*, i8** %2, align 8, !dbg !16141
  br label %do.end, !dbg !16136

do.end:                                           ; preds = %do.body.do.end_crit_edge, %if.then1
  %3 = phi i8* [ %1, %do.body.do.end_crit_edge ], [ %.pre, %if.then1 ], !dbg !16141
  tail call void @gt_pch_note_reorder(i8* %3, i8* %3, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @resort_sorted_fields) #6, !dbg !16142
  %enum_min = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16143
  %4 = bitcast i8* %enum_min to %union.tree_node**, !dbg !16143
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !16143
  %cmp6 = icmp eq %union.tree_node* %5, null, !dbg !16143
  br i1 %cmp6, label %do.body12, label %if.then7, !dbg !16146

if.then7:                                         ; preds = %do.end
  %6 = bitcast %union.tree_node* %5 to i8*, !dbg !16146
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %6) #7, !dbg !16143
  br label %do.body12, !dbg !16143

do.body12:                                        ; preds = %do.end, %if.then7
  %enum_max = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16147
  %7 = bitcast i8* %enum_max to %union.tree_node**, !dbg !16147
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !16147
  %cmp13 = icmp eq %union.tree_node* %8, null, !dbg !16147
  br i1 %cmp13, label %do.body19, label %if.then14, !dbg !16150

if.then14:                                        ; preds = %do.body12
  %9 = bitcast %union.tree_node* %8 to i8*, !dbg !16150
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %9) #7, !dbg !16147
  br label %do.body19, !dbg !16147

do.body19:                                        ; preds = %do.body12, %if.then14
  %objc_info = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !16151
  %10 = bitcast i8* %objc_info to %union.tree_node**, !dbg !16151
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !16151
  %cmp20 = icmp eq %union.tree_node* %11, null, !dbg !16151
  br i1 %cmp20, label %if.end26, label %if.then21, !dbg !16154

if.then21:                                        ; preds = %do.body19
  %12 = bitcast %union.tree_node* %11 to i8*, !dbg !16154
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %12) #7, !dbg !16151
  br label %if.end26, !dbg !16151

if.end26:                                         ; preds = %do.body19, %entry, %if.then21
  ret void, !dbg !16155
}

declare dso_local void @gt_pch_nx_gimple_statement_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_ptr_info_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_tree_statement_list_node(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_VEC_constructor_elt_gc(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_gimple_seq_d(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_cpp_macro(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_nx_answer(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_9lang_decl(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !16156 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !16158, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16159, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !16160, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !16161, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16162, metadata !DIExpression()), !dbg !16163
  ret void, !dbg !16164
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_9lang_type(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !16165 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !16167, metadata !DIExpression()), !dbg !16172
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16168, metadata !DIExpression()), !dbg !16172
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !16169, metadata !DIExpression()), !dbg !16172
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !16170, metadata !DIExpression()), !dbg !16172
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16171, metadata !DIExpression()), !dbg !16172
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !16173
  br i1 %cmp, label %if.then, label %if.end, !dbg !16175

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !16171, metadata !DIExpression()), !dbg !16172
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !16176
  br label %if.end, !dbg !16176

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16177

if.then2:                                         ; preds = %if.end
  %enum_min = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !16178
  tail call void %op(i8* nonnull %enum_min, i8* %cookie) #6, !dbg !16180
  br label %if.end3, !dbg !16180

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16181

if.then5:                                         ; preds = %if.end3
  %enum_max = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !16182
  tail call void %op(i8* nonnull %enum_max, i8* %cookie) #6, !dbg !16184
  br label %if.end6, !dbg !16184

if.end6:                                          ; preds = %if.then5, %if.end3
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !16185

if.then8:                                         ; preds = %if.end6
  %objc_info = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !16186
  tail call void %op(i8* nonnull %objc_info, i8* %cookie) #6, !dbg !16188
  br label %if.end9, !dbg !16188

if.end9:                                          ; preds = %if.then8, %if.end6
  ret void, !dbg !16189
}

declare dso_local void @gt_pch_nx_sorted_fields_type(i8*) local_unnamed_addr #2

declare dso_local void @gt_pch_note_reorder(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*) local_unnamed_addr #2

declare dso_local void @resort_sorted_fields(i8*, i8*, void (i8*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @update_spot_bindings(%struct.c_scope* %scope, %struct.c_spot_bindings* %p) unnamed_addr #5 !dbg !16190 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_scope* %scope, metadata !16194, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct.c_spot_bindings* %p, metadata !16195, metadata !DIExpression()), !dbg !16196
  %scope1 = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 0, !dbg !16197
  %0 = load %struct.c_scope*, %struct.c_scope** %scope1, align 8, !dbg !16197
  %cmp = icmp eq %struct.c_scope* %0, %scope, !dbg !16199
  br i1 %cmp, label %if.end, label %return, !dbg !16200

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.c_scope* %scope to i64*, !dbg !16201
  %2 = load i64, i64* %1, align 8, !dbg !16201
  %3 = bitcast %struct.c_spot_bindings* %p to i64*, !dbg !16202
  store i64 %2, i64* %3, align 8, !dbg !16202
  %.cast = inttoptr i64 %2 to %struct.c_scope*, !dbg !16203
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %.cast, i64 0, i32 2, !dbg !16204
  %4 = bitcast %struct.c_binding** %bindings to i64*, !dbg !16204
  %5 = load i64, i64* %4, align 8, !dbg !16204
  %bindings_in_scope = getelementptr inbounds %struct.c_spot_bindings, %struct.c_spot_bindings* %p, i64 0, i32 1, !dbg !16205
  %6 = bitcast %struct.c_binding** %bindings_in_scope to i64*, !dbg !16206
  store i64 %5, i64* %6, align 8, !dbg !16206
  br label %return, !dbg !16207

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %entry ], !dbg !16196
  ret i8 %retval.0, !dbg !16208
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !16209 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !16213, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !16214, metadata !DIExpression()), !dbg !16215
  %call = tail call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 1) #7, !dbg !16216
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !16216
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !16216
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !16216

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !16216
  br label %cond.end, !dbg !16216

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !16216
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !16216
  ret %union.tree_node** %call1, !dbg !16216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !16217 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !16221, metadata !DIExpression()), !dbg !16224
  call void @llvm.dbg.value(metadata i32 1, metadata !16222, metadata !DIExpression()), !dbg !16224
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !16225
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !16225
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !16225

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !16225
  br label %cond.end, !dbg !16225

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !16225
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !16225
  %tobool1 = icmp eq i32 %call, 0, !dbg !16225
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !16223, metadata !DIExpression()), !dbg !16224
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16225

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !16226
  %2 = load i8*, i8** %1, align 8, !dbg !16226
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !16226
  store i8* %call3, i8** %1, align 8, !dbg !16226
  br label %if.end, !dbg !16226

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !16225
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !16228 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !16232, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata i32 1, metadata !16233, metadata !DIExpression()), !dbg !16234
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !16235
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !16235

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !16235
  %0 = load i32, i32* %alloc, align 4, !dbg !16235
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !16235
  %1 = load i32, i32* %num, align 8, !dbg !16235
  %cmp1 = icmp ne i32 %0, %1, !dbg !16235
  %phitmp = zext i1 %cmp1 to i32, !dbg !16235
  br label %cond.end, !dbg !16235

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !16235
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @diagnose_mismatched_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node** %newtypep, %union.tree_node** %oldtypep) unnamed_addr #5 !dbg !16236 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  %tmp284 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !16240, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !16241, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node** %newtypep, metadata !16242, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node** %oldtypep, metadata !16243, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata i8 0, metadata !16246, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata i8 0, metadata !16247, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata i8 1, metadata !16248, metadata !DIExpression()), !dbg !16271
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !16272
  %cmp = icmp eq %union.tree_node* %0, %olddecl, !dbg !16274
  %cmp2 = icmp eq %union.tree_node* %0, %newdecl, !dbg !16275
  %or.cond = or i1 %cmp, %cmp2, !dbg !16276
  br i1 %or.cond, label %cleanup969, label %if.end, !dbg !16276

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16277
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !16277
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !16245, metadata !DIExpression()), !dbg !16271
  store %union.tree_node* %1, %union.tree_node** %oldtypep, align 8, !dbg !16278
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16279
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !16279
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !16244, metadata !DIExpression()), !dbg !16271
  store %union.tree_node* %2, %union.tree_node** %newtypep, align 8, !dbg !16280
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !16281
  %cmp5 = icmp eq %union.tree_node* %1, %3, !dbg !16283
  %cmp7 = icmp eq %union.tree_node* %2, %3, !dbg !16284
  %or.cond2 = or i1 %cmp5, %cmp7, !dbg !16285
  br i1 %or.cond2, label %cleanup969, label %if.end9, !dbg !16285

if.end9:                                          ; preds = %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16286
  %bf.load = load i64, i64* %4, align 8, !dbg !16286
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16288
  %bf.load11 = load i64, i64* %5, align 8, !dbg !16288
  %6 = xor i64 %bf.load, %bf.load11, !dbg !16289
  %7 = and i64 %6, 65535, !dbg !16289
  %cmp14 = icmp eq i64 %7, 0, !dbg !16289
  %8 = trunc i64 %bf.load to i32, !dbg !16271
  %bf.cast19 = and i32 %8, 65535, !dbg !16271
  br i1 %cmp14, label %if.end41, label %if.then15, !dbg !16290

if.then15:                                        ; preds = %if.end9
  %cmp20 = icmp eq i32 %bf.cast19, 29, !dbg !16291
  br i1 %cmp20, label %land.lhs.true, label %if.then29, !dbg !16294

land.lhs.true:                                    ; preds = %if.then15
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16295
  %bf.load21 = load i32, i32* %built_in_class, align 8, !dbg !16295
  %bf.clear22 = and i32 %bf.load21, 6144, !dbg !16295
  %cmp23 = icmp eq i32 %bf.clear22, 0, !dbg !16295
  br i1 %cmp23, label %if.then29, label %land.lhs.true24, !dbg !16296

land.lhs.true24:                                  ; preds = %land.lhs.true
  %lang_flag_3 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16297
  %9 = bitcast i40* %lang_flag_3 to i64*, !dbg !16297
  %bf.load25 = load i64, i64* %9, align 8, !dbg !16297
  %bf.cast2864 = and i64 %bf.load25, 262144, !dbg !16297
  %tobool = icmp eq i64 %bf.cast2864, 0, !dbg !16297
  br i1 %tobool, label %if.else, label %if.then29, !dbg !16298

if.then29:                                        ; preds = %land.lhs.true24, %land.lhs.true, %if.then15
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.218, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16299
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16301
  br label %cleanup969, !dbg !16302

if.else:                                          ; preds = %land.lhs.true24
  %bf.cast3465 = and i64 %bf.load11, 134217728, !dbg !16303
  %tobool35 = icmp eq i64 %bf.cast3465, 0, !dbg !16303
  br i1 %tobool35, label %if.else37, label %if.then36, !dbg !16305

if.then36:                                        ; preds = %if.else
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.219, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16306
  br label %cleanup969, !dbg !16306

if.else37:                                        ; preds = %if.else
  %call38 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.220, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16307
  br label %cleanup969

if.end41:                                         ; preds = %if.end9
  %cmp46 = icmp eq i32 %bf.cast19, 33, !dbg !16308
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !16310

if.then47:                                        ; preds = %if.end41
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.221, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16311
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16313
  br label %cleanup969, !dbg !16314

if.end48:                                         ; preds = %if.end41
  %call49 = tail call i32 @comptypes(%union.tree_node* %1, %union.tree_node* %2) #6, !dbg !16315
  %tobool50 = icmp eq i32 %call49, 0, !dbg !16315
  br i1 %tobool50, label %if.then51, label %if.end268, !dbg !16316

if.then51:                                        ; preds = %if.end48
  %bf.load53 = load i64, i64* %4, align 8, !dbg !16317
  %bf.cast556 = and i64 %bf.load53, 65535, !dbg !16318
  %cmp56 = icmp eq i64 %bf.cast556, 29, !dbg !16318
  br i1 %cmp56, label %land.lhs.true57, label %if.else82, !dbg !16319

land.lhs.true57:                                  ; preds = %if.then51
  %built_in_class59 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16320
  %bf.load60 = load i32, i32* %built_in_class59, align 8, !dbg !16320
  %bf.clear62 = and i32 %bf.load60, 6144, !dbg !16320
  %cmp63 = icmp eq i32 %bf.clear62, 0, !dbg !16320
  br i1 %cmp63, label %if.else82, label %land.lhs.true64, !dbg !16321

land.lhs.true64:                                  ; preds = %land.lhs.true57
  %lang_flag_366 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16322
  %10 = bitcast i40* %lang_flag_366 to i64*, !dbg !16322
  %bf.load67 = load i64, i64* %10, align 8, !dbg !16322
  %bf.cast7063 = and i64 %bf.load67, 262144, !dbg !16322
  %tobool71 = icmp eq i64 %bf.cast7063, 0, !dbg !16322
  br i1 %tobool71, label %if.then72, label %if.else82, !dbg !16323

if.then72:                                        ; preds = %land.lhs.true64
  %call73 = tail call fastcc %union.tree_node* @match_builtin_function_types(%union.tree_node* %2, %union.tree_node* %1) #7, !dbg !16324
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !16249, metadata !DIExpression()), !dbg !16325
  %tobool74 = icmp eq %union.tree_node* %call73, null, !dbg !16326
  br i1 %tobool74, label %if.else79, label %land.lhs.true75, !dbg !16328

land.lhs.true75:                                  ; preds = %if.then72
  %call76 = tail call i32 @comptypes(%union.tree_node* %2, %union.tree_node* nonnull %call73) #6, !dbg !16329
  %tobool77 = icmp eq i32 %call76, 0, !dbg !16329
  br i1 %tobool77, label %if.else79, label %if.then78, !dbg !16330

if.then78:                                        ; preds = %land.lhs.true75
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !16245, metadata !DIExpression()), !dbg !16271
  store %union.tree_node* %call73, %union.tree_node** %oldtypep, align 8, !dbg !16331
  br label %cleanup, !dbg !16332

if.else79:                                        ; preds = %land.lhs.true75, %if.then72
  %call80 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.222, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16333
  br label %cleanup, !dbg !16335

cleanup:                                          ; preds = %if.then78, %if.else79
  %oldtype.0 = phi %union.tree_node* [ %call73, %if.then78 ], [ %1, %if.else79 ], !dbg !16271
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then78 ], [ false, %if.else79 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype.0, metadata !16245, metadata !DIExpression()), !dbg !16271
  br i1 %cleanup.dest.slot.0, label %if.end268, label %cleanup969

if.else82:                                        ; preds = %land.lhs.true64, %land.lhs.true57, %if.then51
  br i1 %cmp56, label %land.lhs.true88, label %if.else103, !dbg !16336

land.lhs.true88:                                  ; preds = %if.else82
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16337
  %11 = load i32, i32* %locus, align 8, !dbg !16337
  %cmp89 = icmp ult i32 %11, 2, !dbg !16337
  br i1 %cmp89, label %if.then90, label %if.else103, !dbg !16338

if.then90:                                        ; preds = %land.lhs.true88
  %bf.load97 = load i64, i64* %5, align 8, !dbg !16339
  %12 = and i64 %bf.load53, 524288, !dbg !16339
  %bf.set = or i64 %12, %bf.load97, !dbg !16339
  store i64 %bf.set, i64* %5, align 8, !dbg !16339
  br label %cleanup969, !dbg !16341

if.else103:                                       ; preds = %land.lhs.true88, %if.else82
  %bf.load105 = load i64, i64* %5, align 8, !dbg !16342
  %bf.cast1078 = and i64 %bf.load105, 65535, !dbg !16343
  %cmp108 = icmp eq i64 %bf.cast1078, 29, !dbg !16343
  br i1 %cmp108, label %land.lhs.true109, label %if.else142, !dbg !16344

land.lhs.true109:                                 ; preds = %if.else103
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16345
  %13 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !16345
  %tobool111 = icmp eq %union.tree_node* %13, null, !dbg !16345
  br i1 %tobool111, label %if.else142, label %land.lhs.true112, !dbg !16346

land.lhs.true112:                                 ; preds = %land.lhs.true109
  %type114 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16347
  %14 = bitcast %union.tree_node** %type114 to %struct.tree_type**, !dbg !16347
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !16347
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 16, !dbg !16347
  %16 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !16347
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !16348
  %cmp116 = icmp eq %union.tree_node* %16, %17, !dbg !16349
  br i1 %cmp116, label %land.lhs.true117, label %if.else142, !dbg !16350

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %type119 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16351
  %18 = bitcast %union.tree_node** %type119 to %struct.tree_type**, !dbg !16351
  %19 = load %struct.tree_type*, %struct.tree_type** %18, align 8, !dbg !16351
  %main_variant121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 16, !dbg !16351
  %20 = load %union.tree_node*, %union.tree_node** %main_variant121, align 8, !dbg !16351
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !16352
  %cmp122 = icmp eq %union.tree_node* %20, %21, !dbg !16353
  br i1 %cmp122, label %land.lhs.true123, label %if.else142, !dbg !16354

land.lhs.true123:                                 ; preds = %land.lhs.true117
  %lang_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16355
  %22 = bitcast i40* %lang_flag_1 to i64*, !dbg !16355
  %bf.load125 = load i64, i64* %22, align 8, !dbg !16355
  %bf.cast12859 = and i64 %bf.load125, 65536, !dbg !16355
  %tobool129 = icmp eq i64 %bf.cast12859, 0, !dbg !16355
  br i1 %tobool129, label %if.else142, label %land.lhs.true130, !dbg !16356

land.lhs.true130:                                 ; preds = %land.lhs.true123
  %initial132 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16357
  %23 = load %union.tree_node*, %union.tree_node** %initial132, align 8, !dbg !16357
  %tobool133 = icmp eq %union.tree_node* %23, null, !dbg !16357
  br i1 %tobool133, label %if.then134, label %if.else142, !dbg !16358

if.then134:                                       ; preds = %land.lhs.true130
  %24 = load i32, i32* @input_location, align 4, !dbg !16359
  %call135 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %24, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16361
  call void @llvm.dbg.value(metadata i8 %call135, metadata !16246, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !16244, metadata !DIExpression()), !dbg !16271
  store %union.tree_node* %1, %union.tree_node** %newtypep, align 8, !dbg !16362
  store %union.tree_node* %1, %union.tree_node** %type4, align 8, !dbg !16363
  %bf.load140 = load i64, i64* %22, align 8, !dbg !16364
  %bf.clear141 = and i64 %bf.load140, -65537, !dbg !16364
  store i64 %bf.clear141, i64* %22, align 8, !dbg !16364
  br label %if.end268, !dbg !16365

if.else142:                                       ; preds = %land.lhs.true130, %land.lhs.true123, %land.lhs.true109, %land.lhs.true117, %land.lhs.true112, %if.else103
  br i1 %cmp108, label %land.lhs.true148, label %if.else175, !dbg !16366

land.lhs.true148:                                 ; preds = %if.else142
  %type150 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16367
  %25 = bitcast %union.tree_node** %type150 to %struct.tree_type**, !dbg !16367
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !16367
  %main_variant152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 16, !dbg !16367
  %27 = load %union.tree_node*, %union.tree_node** %main_variant152, align 8, !dbg !16367
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !16368
  %cmp153 = icmp eq %union.tree_node* %27, %28, !dbg !16369
  br i1 %cmp153, label %land.lhs.true154, label %if.else175, !dbg !16370

land.lhs.true154:                                 ; preds = %land.lhs.true148
  %type156 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16371
  %29 = bitcast %union.tree_node** %type156 to %struct.tree_type**, !dbg !16371
  %30 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !16371
  %main_variant158 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 16, !dbg !16371
  %31 = load %union.tree_node*, %union.tree_node** %main_variant158, align 8, !dbg !16371
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !16372
  %cmp159 = icmp eq %union.tree_node* %31, %32, !dbg !16373
  br i1 %cmp159, label %land.lhs.true160, label %if.else175, !dbg !16374

land.lhs.true160:                                 ; preds = %land.lhs.true154
  %lang_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16375
  %33 = bitcast i40* %lang_flag_2 to i64*, !dbg !16375
  %bf.load162 = load i64, i64* %33, align 8, !dbg !16375
  %bf.cast16516 = and i64 %bf.load162, 131072, !dbg !16375
  %tobool166 = icmp eq i64 %bf.cast16516, 0, !dbg !16375
  br i1 %tobool166, label %if.else175, label %land.lhs.true167, !dbg !16376

land.lhs.true167:                                 ; preds = %land.lhs.true160
  %initial169 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16377
  %34 = load %union.tree_node*, %union.tree_node** %initial169, align 8, !dbg !16377
  %tobool170 = icmp eq %union.tree_node* %34, null, !dbg !16377
  br i1 %tobool170, label %if.then171, label %if.else175, !dbg !16378

if.then171:                                       ; preds = %land.lhs.true167
  %35 = load i32, i32* @input_location, align 4, !dbg !16379
  %call172 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %35, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16381
  call void @llvm.dbg.value(metadata i8 %call172, metadata !16246, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !16245, metadata !DIExpression()), !dbg !16271
  store %union.tree_node* %2, %union.tree_node** %oldtypep, align 8, !dbg !16382
  store %union.tree_node* %2, %union.tree_node** %type, align 8, !dbg !16383
  br label %if.end268

if.else175:                                       ; preds = %land.lhs.true167, %land.lhs.true160, %land.lhs.true154, %land.lhs.true148, %if.else142
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16384
  %bf.load177 = load i64, i64* %36, align 8, !dbg !16384
  %bf.lshr178 = lshr i64 %bf.load177, 20, !dbg !16384
  %37 = trunc i64 %bf.lshr178 to i32, !dbg !16384
  %bf.cast180 = and i32 %37, 1, !dbg !16384
  %38 = lshr i64 %bf.load177, 18, !dbg !16384
  %39 = trunc i64 %38 to i32, !dbg !16384
  %mul186 = and i32 %39, 2, !dbg !16384
  %or187 = or i32 %bf.cast180, %mul186, !dbg !16384
  %type188 = bitcast %union.tree_node* %2 to %struct.tree_type*, !dbg !16384
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type188, i64 0, i32 6, !dbg !16384
  %bf.load189 = load i32, i32* %restrict_flag, align 4, !dbg !16384
  %40 = lshr i32 %bf.load189, 11, !dbg !16384
  %mul192 = and i32 %40, 4, !dbg !16384
  %or193 = or i32 %or187, %mul192, !dbg !16384
  %41 = lshr i64 %bf.load177, 48, !dbg !16384
  %42 = trunc i64 %41 to i32, !dbg !16384
  %shl = and i32 %42, 65280, !dbg !16384
  %or198 = or i32 %or193, %shl, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %or198, metadata !16254, metadata !DIExpression()), !dbg !16385
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16386
  %bf.load200 = load i64, i64* %43, align 8, !dbg !16386
  %bf.lshr201 = lshr i64 %bf.load200, 20, !dbg !16386
  %44 = trunc i64 %bf.lshr201 to i32, !dbg !16386
  %bf.cast203 = and i32 %44, 1, !dbg !16386
  %45 = lshr i64 %bf.load200, 18, !dbg !16386
  %46 = trunc i64 %45 to i32, !dbg !16386
  %mul210 = and i32 %46, 2, !dbg !16386
  %or211 = or i32 %bf.cast203, %mul210, !dbg !16386
  %type212 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !16386
  %restrict_flag213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type212, i64 0, i32 6, !dbg !16386
  %bf.load214 = load i32, i32* %restrict_flag213, align 4, !dbg !16386
  %47 = lshr i32 %bf.load214, 11, !dbg !16386
  %mul217 = and i32 %47, 4, !dbg !16386
  %or218 = or i32 %or211, %mul217, !dbg !16386
  %48 = lshr i64 %bf.load200, 48, !dbg !16386
  %49 = trunc i64 %48 to i32, !dbg !16386
  %shl224 = and i32 %49, 65280, !dbg !16386
  %or225 = or i32 %or218, %shl224, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %or225, metadata !16259, metadata !DIExpression()), !dbg !16385
  %cmp226 = icmp eq i32 %or198, %or225, !dbg !16387
  br i1 %cmp226, label %if.else260, label %if.then227, !dbg !16388

if.then227:                                       ; preds = %if.else175
  %50 = lshr i64 %bf.load177, 56, !dbg !16389
  %conv = trunc i64 %50 to i8, !dbg !16389
  call void @llvm.dbg.value(metadata i8 %conv, metadata !16260, metadata !DIExpression()), !dbg !16390
  %51 = lshr i64 %bf.load200, 56, !dbg !16391
  %conv231 = trunc i64 %51 to i8, !dbg !16391
  call void @llvm.dbg.value(metadata i8 %conv231, metadata !16263, metadata !DIExpression()), !dbg !16390
  %52 = trunc i64 %50 to i32, !dbg !16392
  %53 = trunc i64 %51 to i32, !dbg !16394
  %cmp234 = icmp eq i32 %52, %53, !dbg !16395
  br i1 %cmp234, label %if.end253, label %if.then236, !dbg !16396

if.then236:                                       ; preds = %if.then227
  %cmp238 = icmp eq i64 %50, 0, !dbg !16397
  br i1 %cmp238, label %if.then240, label %if.else242, !dbg !16400

if.then240:                                       ; preds = %if.then236
  %call241 = tail call i8* @c_addr_space_name(i8 zeroext %conv231) #6, !dbg !16401
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.224, i64 0, i64 0), i8* %call241, %union.tree_node* %newdecl) #6, !dbg !16402
  br label %if.end253, !dbg !16402

if.else242:                                       ; preds = %if.then236
  %cmp244 = icmp eq i64 %51, 0, !dbg !16403
  %call247 = tail call i8* @c_addr_space_name(i8 zeroext %conv) #6, !dbg !16405
  br i1 %cmp244, label %if.then246, label %if.else248, !dbg !16406

if.then246:                                       ; preds = %if.else242
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.225, i64 0, i64 0), i8* %call247, %union.tree_node* %newdecl) #6, !dbg !16407
  br label %if.end253, !dbg !16407

if.else248:                                       ; preds = %if.else242
  %call250 = tail call i8* @c_addr_space_name(i8 zeroext %conv231) #6, !dbg !16408
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.226, i64 0, i64 0), i8* %call247, i8* %call250, %union.tree_node* %newdecl) #6, !dbg !16409
  br label %if.end253

if.end253:                                        ; preds = %if.then227, %if.then240, %if.else248, %if.then246
  %cmp256 = icmp eq i32 %or193, %or218, !dbg !16410
  br i1 %cmp256, label %if.end261, label %if.then258, !dbg !16412

if.then258:                                       ; preds = %if.end253
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.227, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16413
  br label %if.end261, !dbg !16413

if.else260:                                       ; preds = %if.else175
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16414
  br label %if.end261

if.end261:                                        ; preds = %if.end253, %if.then258, %if.else260
  tail call fastcc void @diagnose_arglist_conflict(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node* %2, %union.tree_node* %1) #7, !dbg !16415
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16416
  br label %cleanup969

if.end268:                                        ; preds = %if.end48, %cleanup, %if.then134, %if.then171
  %newtype.2 = phi %union.tree_node* [ %2, %if.end48 ], [ %2, %cleanup ], [ %2, %if.then171 ], [ %1, %if.then134 ], !dbg !16417
  %oldtype.3 = phi %union.tree_node* [ %1, %if.end48 ], [ %oldtype.0, %cleanup ], [ %2, %if.then171 ], [ %1, %if.then134 ], !dbg !16271
  %pedwarned.2 = phi i8 [ 0, %if.end48 ], [ 0, %cleanup ], [ %call172, %if.then171 ], [ %call135, %if.then134 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %pedwarned.2, metadata !16246, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype.3, metadata !16245, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype.2, metadata !16244, metadata !DIExpression()), !dbg !16271
  %bf.load270 = load i64, i64* %5, align 8, !dbg !16418
  %bf.cast27217 = and i64 %bf.load270, 65535, !dbg !16419
  %cmp273 = icmp eq i64 %bf.cast27217, 35, !dbg !16419
  br i1 %cmp273, label %if.then275, label %if.else305, !dbg !16420

if.then275:                                       ; preds = %if.end268
  %locus277 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16421
  %54 = load i32, i32* %locus277, align 8, !dbg !16421
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %54) #6, !dbg !16421
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !16421
  %55 = load i8, i8* %sysp, align 8, !dbg !16421
  %cmp279 = icmp eq i8 %55, 0, !dbg !16421
  br i1 %cmp279, label %lor.lhs.false281, label %cleanup969, !dbg !16424

lor.lhs.false281:                                 ; preds = %if.then275
  %locus283 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16425
  %56 = load i32, i32* %locus283, align 8, !dbg !16425
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp284, i32 %56) #6, !dbg !16425
  %sysp285 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp284, i64 0, i32 3, !dbg !16425
  %57 = load i8, i8* %sysp285, align 8, !dbg !16425
  %cmp287 = icmp eq i8 %57, 0, !dbg !16425
  br i1 %cmp287, label %lor.lhs.false289, label %cleanup969, !dbg !16426

lor.lhs.false289:                                 ; preds = %lor.lhs.false281
  %bf.load291 = load i64, i64* %5, align 8, !dbg !16427
  %bf.cast29457 = and i64 %bf.load291, 8388608, !dbg !16427
  %tobool295 = icmp eq i64 %bf.cast29457, 0, !dbg !16427
  br i1 %tobool295, label %lor.lhs.false296, label %cleanup969, !dbg !16428

lor.lhs.false296:                                 ; preds = %lor.lhs.false289
  %bf.load298 = load i64, i64* %4, align 8, !dbg !16429
  %bf.cast30158 = and i64 %bf.load298, 8388608, !dbg !16429
  %tobool302 = icmp eq i64 %bf.cast30158, 0, !dbg !16429
  br i1 %tobool302, label %if.end304, label %cleanup969, !dbg !16430

if.end304:                                        ; preds = %lor.lhs.false296
  call void (i8*, ...) @error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.228, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16431
  call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16432
  br label %cleanup969, !dbg !16433

if.else305:                                       ; preds = %if.end268
  %cmp310 = icmp eq i64 %bf.cast27217, 29, !dbg !16434
  br i1 %cmp310, label %if.then312, label %if.else542, !dbg !16435

if.then312:                                       ; preds = %if.else305
  %built_in_class314 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16436
  %bf.load315 = load i32, i32* %built_in_class314, align 8, !dbg !16436
  %bf.clear317 = and i32 %bf.load315, 6144, !dbg !16436
  %cmp318 = icmp eq i32 %bf.clear317, 0, !dbg !16436
  br i1 %cmp318, label %if.end346, label %land.lhs.true320, !dbg !16438

land.lhs.true320:                                 ; preds = %if.then312
  %lang_flag_3322 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16439
  %58 = bitcast i40* %lang_flag_3322 to i64*, !dbg !16439
  %bf.load323 = load i64, i64* %58, align 8, !dbg !16439
  %bf.cast32655 = and i64 %bf.load323, 262144, !dbg !16439
  %tobool327 = icmp eq i64 %bf.cast32655, 0, !dbg !16439
  br i1 %tobool327, label %land.lhs.true328, label %if.end346, !dbg !16440

land.lhs.true328:                                 ; preds = %land.lhs.true320
  %bf.cast33356 = and i64 %bf.load270, 134217728, !dbg !16441
  %tobool334 = icmp eq i64 %bf.cast33356, 0, !dbg !16441
  br i1 %tobool334, label %if.then344, label %lor.lhs.false335, !dbg !16442

lor.lhs.false335:                                 ; preds = %land.lhs.true328
  %initial337 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16443
  %59 = load %union.tree_node*, %union.tree_node** %initial337, align 8, !dbg !16443
  %tobool338 = icmp eq %union.tree_node* %59, null, !dbg !16443
  br i1 %tobool338, label %if.end346, label %land.lhs.true339, !dbg !16444

land.lhs.true339:                                 ; preds = %lor.lhs.false335
  %60 = bitcast %union.tree_node** %type4 to %struct.tree_type**, !dbg !16445
  %61 = load %struct.tree_type*, %struct.tree_type** %60, align 8, !dbg !16445
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %61, i64 0, i32 1, !dbg !16445
  %62 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !16445
  %tobool343 = icmp eq %union.tree_node* %62, null, !dbg !16445
  br i1 %tobool343, label %if.then344, label %if.end346, !dbg !16446

if.then344:                                       ; preds = %land.lhs.true339, %land.lhs.true328
  %call345 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 176, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.220, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16447
  br label %cleanup969, !dbg !16449

if.end346:                                        ; preds = %land.lhs.true339, %lor.lhs.false335, %land.lhs.true320, %if.then312
  %initial348 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16450
  %63 = load %union.tree_node*, %union.tree_node** %initial348, align 8, !dbg !16450
  %tobool349 = icmp eq %union.tree_node* %63, null, !dbg !16450
  %initial352 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16452
  %64 = load %union.tree_node*, %union.tree_node** %initial352, align 8, !dbg !16452
  %tobool353 = icmp ne %union.tree_node* %64, null, !dbg !16452
  br i1 %tobool349, label %if.else413, label %if.then350, !dbg !16453

if.then350:                                       ; preds = %if.end346
  br i1 %tobool353, label %if.then354, label %if.end433, !dbg !16454

if.then354:                                       ; preds = %if.then350
  %bf.clear358 = and i32 %bf.load315, 2097152, !dbg !16456
  %tobool359 = icmp eq i32 %bf.clear358, 0, !dbg !16456
  br i1 %tobool359, label %land.lhs.true407, label %land.lhs.true360, !dbg !16456

land.lhs.true360:                                 ; preds = %if.then354
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16456
  %65 = bitcast i40* %decl_flag_1 to i64*, !dbg !16456
  %bf.load362 = load i64, i64* %65, align 8, !dbg !16456
  %bf.cast36553 = and i64 %bf.load362, 33554432, !dbg !16456
  %tobool366 = icmp eq i64 %bf.cast36553, 0, !dbg !16456
  br i1 %tobool366, label %land.lhs.true407, label %lor.lhs.false367, !dbg !16460

lor.lhs.false367:                                 ; preds = %land.lhs.true360
  %declared_inline_flag369 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16461
  %bf.load370 = load i32, i32* %declared_inline_flag369, align 8, !dbg !16461
  %bf.clear372 = and i32 %bf.load370, 2097152, !dbg !16461
  %tobool373 = icmp eq i32 %bf.clear372, 0, !dbg !16461
  br i1 %tobool373, label %lor.lhs.false382, label %land.lhs.true374, !dbg !16461

land.lhs.true374:                                 ; preds = %lor.lhs.false367
  %decl_flag_1376 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16461
  %66 = bitcast i40* %decl_flag_1376 to i64*, !dbg !16461
  %bf.load377 = load i64, i64* %66, align 8, !dbg !16461
  %bf.cast38054 = and i64 %bf.load377, 33554432, !dbg !16461
  %tobool381 = icmp eq i64 %bf.cast38054, 0, !dbg !16461
  br i1 %tobool381, label %lor.lhs.false382, label %land.lhs.true407, !dbg !16462

lor.lhs.false382:                                 ; preds = %land.lhs.true374, %lor.lhs.false367
  %67 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !16463
  %tobool383 = icmp eq i32 %67, 0, !dbg !16463
  br i1 %tobool383, label %land.lhs.true384, label %if.end433, !dbg !16464

land.lhs.true384:                                 ; preds = %lor.lhs.false382
  br i1 false, label %land.lhs.true384.land.lhs.true395_crit_edge, label %lor.lhs.false391, !dbg !16465

land.lhs.true384.land.lhs.true395_crit_edge:      ; preds = %land.lhs.true384
  br label %land.lhs.true395, !dbg !16465

lor.lhs.false391:                                 ; preds = %land.lhs.true384
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16466
  %68 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !16466
  %call393 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %68) #6, !dbg !16467
  %tobool394 = icmp eq %union.tree_node* %call393, null, !dbg !16467
  br i1 %tobool394, label %lor.lhs.false391.land.lhs.true395_crit_edge, label %if.end433, !dbg !16468

lor.lhs.false391.land.lhs.true395_crit_edge:      ; preds = %lor.lhs.false391
  %bf.load398.pre = load i32, i32* %declared_inline_flag369, align 8, !dbg !16469
  %.pre74 = and i32 %bf.load398.pre, 2097152, !dbg !16469
  br label %land.lhs.true395, !dbg !16468

land.lhs.true395:                                 ; preds = %lor.lhs.false391.land.lhs.true395_crit_edge, %land.lhs.true384.land.lhs.true395_crit_edge
  %bf.clear400.pre-phi = phi i32 [ %.pre74, %lor.lhs.false391.land.lhs.true395_crit_edge ], [ %bf.clear372, %land.lhs.true384.land.lhs.true395_crit_edge ], !dbg !16469
  %tobool401 = icmp eq i32 %bf.clear400.pre-phi, 0, !dbg !16469
  br i1 %tobool401, label %land.lhs.true407, label %lor.lhs.false402, !dbg !16470

lor.lhs.false402:                                 ; preds = %land.lhs.true395
  %attributes404 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16471
  %69 = load %union.tree_node*, %union.tree_node** %attributes404, align 8, !dbg !16471
  %call405 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %69) #6, !dbg !16472
  %tobool406 = icmp eq %union.tree_node* %call405, null, !dbg !16472
  br i1 %tobool406, label %land.lhs.true407, label %if.end433, !dbg !16473

land.lhs.true407:                                 ; preds = %land.lhs.true374, %lor.lhs.false402, %land.lhs.true395, %land.lhs.true360, %if.then354
  %call408 = tail call i32 @same_translation_unit_p(%union.tree_node* %newdecl, %union.tree_node* %olddecl) #6, !dbg !16474
  %tobool409 = icmp eq i32 %call408, 0, !dbg !16474
  br i1 %tobool409, label %if.end433, label %if.then410, !dbg !16475

if.then410:                                       ; preds = %land.lhs.true407
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.229, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16476
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16478
  br label %cleanup969, !dbg !16479

if.else413:                                       ; preds = %if.end346
  br i1 %tobool353, label %land.lhs.true417, label %if.end433, !dbg !16480

land.lhs.true417:                                 ; preds = %if.else413
  %values419 = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16482
  %70 = bitcast i32* %values419 to %union.tree_node**, !dbg !16482
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8, !dbg !16482
  %tobool420 = icmp eq %union.tree_node* %71, null, !dbg !16482
  br i1 %tobool420, label %land.lhs.true421, label %if.end433, !dbg !16483

land.lhs.true421:                                 ; preds = %land.lhs.true417
  %values423 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16484
  %72 = bitcast i32* %values423 to %union.tree_node**, !dbg !16484
  %73 = load %union.tree_node*, %union.tree_node** %72, align 8, !dbg !16484
  %tobool424 = icmp eq %union.tree_node* %73, null, !dbg !16484
  br i1 %tobool424, label %if.end433, label %land.lhs.true425, !dbg !16485

land.lhs.true425:                                 ; preds = %land.lhs.true421
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype.3, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !16486
  %75 = load %union.tree_node*, %union.tree_node** %74, align 8, !dbg !16486
  %tobool427 = icmp eq %union.tree_node* %75, null, !dbg !16486
  br i1 %tobool427, label %if.end433, label %land.lhs.true428, !dbg !16487

land.lhs.true428:                                 ; preds = %land.lhs.true425
  %call429 = tail call fastcc zeroext i8 @validate_proto_after_old_defn(%union.tree_node* %newdecl, %union.tree_node* %newtype.2, %union.tree_node* %oldtype.3) #7, !dbg !16488
  %tobool430 = icmp eq i8 %call429, 0, !dbg !16488
  br i1 %tobool430, label %if.then431, label %if.end433, !dbg !16489

if.then431:                                       ; preds = %land.lhs.true428
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16490
  br label %cleanup969, !dbg !16492

if.end433:                                        ; preds = %lor.lhs.false391, %lor.lhs.false402, %lor.lhs.false382, %land.lhs.true407, %land.lhs.true428, %land.lhs.true425, %land.lhs.true421, %land.lhs.true417, %if.else413, %if.then350
  %bf.load435 = load i64, i64* %4, align 8, !dbg !16493
  %bf.cast43848 = and i64 %bf.load435, 134217728, !dbg !16493
  %tobool439 = icmp eq i64 %bf.cast43848, 0, !dbg !16493
  br i1 %tobool439, label %if.end433.if.else469_crit_edge, label %land.lhs.true440, !dbg !16495

if.end433.if.else469_crit_edge:                   ; preds = %if.end433
  %bf.load471.pre = load i64, i64* %5, align 8, !dbg !16496
  %.pre = and i64 %bf.load471.pre, 134217728, !dbg !16496
  br label %if.else469, !dbg !16495

land.lhs.true440:                                 ; preds = %if.end433
  %bf.load442 = load i64, i64* %5, align 8, !dbg !16498
  %bf.cast44551 = and i64 %bf.load442, 134217728, !dbg !16498
  %tobool446 = icmp eq i64 %bf.cast44551, 0, !dbg !16498
  br i1 %tobool446, label %if.then447, label %if.else469, !dbg !16499

if.then447:                                       ; preds = %land.lhs.true440
  %locus449 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16500
  %76 = load i32, i32* %locus449, align 8, !dbg !16500
  %cmp450 = icmp ult i32 %76, 2, !dbg !16500
  br i1 %cmp450, label %cleanup969, label %land.lhs.true452, !dbg !16503

land.lhs.true452:                                 ; preds = %if.then447
  %bf.load455 = load i32, i32* %built_in_class314, align 8, !dbg !16504
  %bf.clear457 = and i32 %bf.load455, 2097152, !dbg !16504
  %tobool458 = icmp eq i32 %bf.clear457, 0, !dbg !16504
  br i1 %tobool458, label %if.then467, label %land.lhs.true459, !dbg !16504

land.lhs.true459:                                 ; preds = %land.lhs.true452
  %decl_flag_1461 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16504
  %77 = bitcast i40* %decl_flag_1461 to i64*, !dbg !16504
  %bf.load462 = load i64, i64* %77, align 8, !dbg !16504
  %bf.cast46552 = and i64 %bf.load462, 33554432, !dbg !16504
  %tobool466 = icmp eq i64 %bf.cast46552, 0, !dbg !16504
  br i1 %tobool466, label %if.then467, label %cleanup969, !dbg !16505

if.then467:                                       ; preds = %land.lhs.true459, %land.lhs.true452
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.230, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16506
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16508
  br label %cleanup969, !dbg !16509

if.else469:                                       ; preds = %if.end433.if.else469_crit_edge, %land.lhs.true440
  %bf.cast47449.pre-phi = phi i64 [ %.pre, %if.end433.if.else469_crit_edge ], [ %bf.cast44551, %land.lhs.true440 ], !dbg !16496
  %tobool475 = icmp eq i64 %bf.cast47449.pre-phi, 0, !dbg !16496
  br i1 %tobool475, label %if.end498, label %land.lhs.true476, !dbg !16510

land.lhs.true476:                                 ; preds = %if.else469
  br i1 %tobool439, label %if.then483, label %if.end498, !dbg !16511

if.then483:                                       ; preds = %land.lhs.true476
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !16512
  %78 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !16512
  %tobool485 = icmp eq %union.tree_node* %78, null, !dbg !16512
  br i1 %tobool485, label %if.else487, label %if.then486, !dbg !16515

if.then486:                                       ; preds = %if.then483
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.231, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16516
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16518
  br label %cleanup969, !dbg !16519

if.else487:                                       ; preds = %if.then483
  %79 = load i32, i32* @warn_traditional, align 4, !dbg !16520
  %tobool488 = icmp eq i32 %79, 0, !dbg !16520
  br i1 %tobool488, label %if.end498, label %if.then489, !dbg !16522

if.then489:                                       ; preds = %if.else487
  %call490 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 202, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.231, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16523
  call void @llvm.dbg.value(metadata i8 %call490, metadata !16247, metadata !DIExpression()), !dbg !16271
  br label %if.end498, !dbg !16525

if.end498:                                        ; preds = %if.else487, %land.lhs.true476, %if.else469, %if.then489
  %warned.1 = phi i8 [ 0, %land.lhs.true476 ], [ 0, %if.else469 ], [ %call490, %if.then489 ], [ 0, %if.else487 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %warned.1, metadata !16247, metadata !DIExpression()), !dbg !16271
  %bf.load501 = load i32, i32* %built_in_class314, align 8, !dbg !16526
  %bf.clear503 = and i32 %bf.load501, 2097152, !dbg !16526
  %tobool504 = icmp eq i32 %bf.clear503, 0, !dbg !16526
  br i1 %tobool504, label %if.end748, label %land.lhs.true505, !dbg !16527

land.lhs.true505:                                 ; preds = %if.end498
  %declared_inline_flag507 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16528
  %bf.load508 = load i32, i32* %declared_inline_flag507, align 8, !dbg !16528
  %bf.clear510 = and i32 %bf.load508, 2097152, !dbg !16528
  %tobool511 = icmp eq i32 %bf.clear510, 0, !dbg !16528
  br i1 %tobool511, label %if.end748, label %if.then512, !dbg !16529

if.then512:                                       ; preds = %land.lhs.true505
  %attributes514 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16530
  %80 = load %union.tree_node*, %union.tree_node** %attributes514, align 8, !dbg !16530
  %call515 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %80) #6, !dbg !16531
  %cmp516 = icmp ne %union.tree_node* %call515, null, !dbg !16532
  call void @llvm.dbg.value(metadata i1 %cmp516, metadata !16264, metadata !DIExpression()), !dbg !16533
  %attributes520 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16534
  %81 = load %union.tree_node*, %union.tree_node** %attributes520, align 8, !dbg !16534
  %call521 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %81) #6, !dbg !16535
  %cmp522 = icmp ne %union.tree_node* %call521, null, !dbg !16536
  call void @llvm.dbg.value(metadata i1 %cmp522, metadata !16270, metadata !DIExpression()), !dbg !16533
  %cmp527 = xor i1 %cmp516, %cmp522, !dbg !16537
  br i1 %cmp527, label %if.then529, label %if.end748, !dbg !16539

if.then529:                                       ; preds = %if.then512
  call void @llvm.dbg.value(metadata i1 %cmp516, metadata !16264, metadata !DIExpression()), !dbg !16533
  %82 = load i32, i32* @input_location, align 4, !dbg !16540
  %newdecl.olddecl = select i1 %cmp516, %union.tree_node* %newdecl, %union.tree_node* %olddecl, !dbg !16542
  tail call void (i32, i8*, ...) @error_at(i32 %82, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.232, i64 0, i64 0), %union.tree_node* %newdecl.olddecl) #6, !dbg !16543
  %cond537 = select i1 %cmp516, %union.tree_node* %olddecl, %union.tree_node* %newdecl, !dbg !16544
  %locus539 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond537, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16544
  %83 = load i32, i32* %locus539, align 8, !dbg !16544
  tail call void (i32, i8*, ...) @error_at(i32 %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i64 0, i64 0)) #6, !dbg !16545
  br label %if.end748, !dbg !16546

if.else542:                                       ; preds = %if.else305
  %cmp547 = icmp eq i64 %bf.cast27217, 32, !dbg !16547
  br i1 %cmp547, label %if.then549, label %if.end748, !dbg !16549

if.then549:                                       ; preds = %if.else542
  %lang_flag_3551 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16550
  %84 = bitcast i40* %lang_flag_3551 to i64*, !dbg !16550
  %bf.load552 = load i64, i64* %84, align 8, !dbg !16550
  %bf.cast55536 = and i64 %bf.load552, 262144, !dbg !16550
  %tobool556 = icmp eq i64 %bf.cast55536, 0, !dbg !16550
  br i1 %tobool556, label %if.then549.if.else564_crit_edge, label %land.lhs.true557, !dbg !16553

if.then549.if.else564_crit_edge:                  ; preds = %if.then549
  %tls_model566.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16554
  %.phi.trans.insert = bitcast i24* %tls_model566.phi.trans.insert to i32*, !dbg !16554
  %bf.load567.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !16556
  br label %if.else564, !dbg !16553

land.lhs.true557:                                 ; preds = %if.then549
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16557
  %85 = bitcast i24* %tls_model to i32*, !dbg !16557
  %bf.load558 = load i32, i32* %85, align 8, !dbg !16557
  %bf.clear560 = and i32 %bf.load558, 49152, !dbg !16557
  %cmp561 = icmp eq i32 %bf.clear560, 0, !dbg !16557
  br i1 %cmp561, label %if.end593, label %if.else564, !dbg !16558

if.else564:                                       ; preds = %if.then549.if.else564_crit_edge, %land.lhs.true557
  %bf.load584 = phi i32 [ %bf.load567.pre, %if.then549.if.else564_crit_edge ], [ %bf.load558, %land.lhs.true557 ], !dbg !16556
  %bf.clear569 = and i32 %bf.load584, 49152, !dbg !16556
  %cmp570 = icmp ne i32 %bf.clear569, 0, !dbg !16556
  %tls_model573 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16559
  %86 = bitcast i24* %tls_model573 to i32*, !dbg !16559
  %bf.load574 = load i32, i32* %86, align 8, !dbg !16559
  %bf.clear576 = and i32 %bf.load574, 49152, !dbg !16559
  %cmp577 = icmp ne i32 %bf.clear576, 0, !dbg !16559
  %cmp579 = xor i1 %cmp570, %cmp577, !dbg !16560
  br i1 %cmp579, label %if.then581, label %if.end593, !dbg !16561

if.then581:                                       ; preds = %if.else564
  %cmp587 = icmp eq i32 %bf.clear569, 0, !dbg !16562
  br i1 %cmp587, label %if.else590, label %if.then589, !dbg !16565

if.then589:                                       ; preds = %if.then581
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.234, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16566
  br label %if.end591, !dbg !16566

if.else590:                                       ; preds = %if.then581
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.235, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16567
  br label %if.end591

if.end591:                                        ; preds = %if.else590, %if.then589
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16568
  br label %cleanup969, !dbg !16569

if.end593:                                        ; preds = %land.lhs.true557, %if.else564
  %initial595 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16570
  %87 = load %union.tree_node*, %union.tree_node** %initial595, align 8, !dbg !16570
  %tobool596 = icmp eq %union.tree_node* %87, null, !dbg !16570
  br i1 %tobool596, label %if.end602, label %land.lhs.true597, !dbg !16572

land.lhs.true597:                                 ; preds = %if.end593
  %initial599 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16573
  %88 = load %union.tree_node*, %union.tree_node** %initial599, align 8, !dbg !16573
  %tobool600 = icmp eq %union.tree_node* %88, null, !dbg !16573
  br i1 %tobool600, label %if.end602, label %if.then601, !dbg !16574

if.then601:                                       ; preds = %land.lhs.true597
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.229, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16575
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16577
  br label %cleanup969, !dbg !16578

if.end602:                                        ; preds = %land.lhs.true597, %if.end593
  %context604 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !16579
  %89 = load %union.tree_node*, %union.tree_node** %context604, align 8, !dbg !16579
  %tobool605 = icmp eq %union.tree_node* %89, null, !dbg !16579
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16579
  br i1 %tobool605, label %land.lhs.true615, label %lor.lhs.false606, !dbg !16579

lor.lhs.false606:                                 ; preds = %if.end602
  %bf.load610 = load i64, i64* %90, align 8, !dbg !16579
  %bf.cast61247 = and i64 %bf.load610, 65535, !dbg !16579
  %cmp613 = icmp eq i64 %bf.cast61247, 40, !dbg !16579
  br i1 %cmp613, label %land.lhs.true615, label %if.else671, !dbg !16581

land.lhs.true615:                                 ; preds = %if.end602, %lor.lhs.false606
  %bf.load622 = load i64, i64* %4, align 8, !dbg !16582
  %bf.lshr61867 = xor i64 %bf.load270, %bf.load622, !dbg !16583
  %91 = and i64 %bf.lshr61867, 134217728, !dbg !16583
  %cmp626 = icmp eq i64 %91, 0, !dbg !16583
  br i1 %cmp626, label %if.else671, label %if.then628, !dbg !16584

if.then628:                                       ; preds = %land.lhs.true615
  %decl_flag_1630 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16585
  %92 = bitcast i40* %decl_flag_1630 to i64*, !dbg !16585
  %bf.load631 = load i64, i64* %92, align 8, !dbg !16585
  %bf.cast63444 = and i64 %bf.load631, 33554432, !dbg !16585
  %tobool635 = icmp eq i64 %bf.cast63444, 0, !dbg !16585
  br i1 %tobool635, label %if.else660, label %if.then636, !dbg !16588

if.then636:                                       ; preds = %if.then628
  %context638 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !16589
  %93 = load %union.tree_node*, %union.tree_node** %context638, align 8, !dbg !16589
  %tobool639 = icmp eq %union.tree_node* %93, null, !dbg !16589
  br i1 %tobool639, label %if.else650, label %lor.lhs.false640, !dbg !16589

lor.lhs.false640:                                 ; preds = %if.then636
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16589
  %bf.load644 = load i64, i64* %94, align 8, !dbg !16589
  %bf.cast64646 = and i64 %bf.load644, 65535, !dbg !16589
  %cmp647 = icmp eq i64 %bf.cast64646, 40, !dbg !16589
  br i1 %cmp647, label %if.else650, label %if.then649, !dbg !16592

if.then649:                                       ; preds = %lor.lhs.false640
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.236, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16593
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16595
  br label %cleanup969, !dbg !16596

if.else650:                                       ; preds = %if.then636, %lor.lhs.false640
  %95 = load i32, i32* @warn_traditional, align 4, !dbg !16597
  %tobool651 = icmp eq i32 %95, 0, !dbg !16597
  br i1 %tobool651, label %if.end706, label %if.then652, !dbg !16599

if.then652:                                       ; preds = %if.else650
  %call653 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 202, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.231, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16600
  call void @llvm.dbg.value(metadata i8 %call653, metadata !16247, metadata !DIExpression()), !dbg !16271
  br label %if.end706, !dbg !16602

if.else660:                                       ; preds = %if.then628
  %bf.cast66545 = and i64 %bf.load270, 134217728, !dbg !16603
  %tobool666 = icmp eq i64 %bf.cast66545, 0, !dbg !16603
  br i1 %tobool666, label %if.else668, label %if.then667, !dbg !16606

if.then667:                                       ; preds = %if.else660
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.231, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16607
  br label %if.end669, !dbg !16607

if.else668:                                       ; preds = %if.else660
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.230, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16608
  br label %if.end669

if.end669:                                        ; preds = %if.else668, %if.then667
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16609
  br label %cleanup969, !dbg !16610

if.else671:                                       ; preds = %land.lhs.true615, %lor.lhs.false606
  br i1 %tobool605, label %if.end706, label %lor.lhs.false675, !dbg !16611

lor.lhs.false675:                                 ; preds = %if.else671
  %bf.load679 = load i64, i64* %90, align 8, !dbg !16611
  %bf.cast68141 = and i64 %bf.load679, 65535, !dbg !16611
  %cmp682 = icmp eq i64 %bf.cast68141, 40, !dbg !16611
  br i1 %cmp682, label %if.end706, label %if.then684, !dbg !16613

if.then684:                                       ; preds = %lor.lhs.false675
  %decl_flag_1686 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16614
  %96 = bitcast i40* %decl_flag_1686 to i64*, !dbg !16614
  %bf.load687 = load i64, i64* %96, align 8, !dbg !16614
  %bf.cast69042 = and i64 %bf.load687, 33554432, !dbg !16614
  %tobool691 = icmp eq i64 %bf.cast69042, 0, !dbg !16614
  br i1 %tobool691, label %if.else693, label %cleanup969, !dbg !16617

if.else693:                                       ; preds = %if.then684
  %bf.cast69943 = and i64 %bf.load552, 33554432, !dbg !16618
  %tobool700 = icmp eq i64 %bf.cast69943, 0, !dbg !16618
  br i1 %tobool700, label %if.else702, label %if.then701, !dbg !16620

if.then701:                                       ; preds = %if.else693
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.237, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16621
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16623
  br label %cleanup969, !dbg !16624

if.else702:                                       ; preds = %if.else693
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.238, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16625
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16627
  br label %cleanup969

if.end706:                                        ; preds = %if.else650, %if.else671, %lor.lhs.false675, %if.then652
  %warned.3 = phi i8 [ %call653, %if.then652 ], [ 0, %if.else650 ], [ 0, %lor.lhs.false675 ], [ 0, %if.else671 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %warned.3, metadata !16247, metadata !DIExpression()), !dbg !16271
  %97 = load i32, i32* @warn_cxx_compat, align 4, !dbg !16628
  %tobool707 = icmp eq i32 %97, 0, !dbg !16628
  br i1 %tobool707, label %if.end748, label %land.lhs.true708, !dbg !16630

land.lhs.true708:                                 ; preds = %if.end706
  %98 = load %union.tree_node*, %union.tree_node** %context604, align 8, !dbg !16631
  %tobool711 = icmp eq %union.tree_node* %98, null, !dbg !16631
  br i1 %tobool711, label %land.lhs.true721, label %lor.lhs.false712, !dbg !16631

lor.lhs.false712:                                 ; preds = %land.lhs.true708
  %99 = getelementptr inbounds %union.tree_node, %union.tree_node* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16631
  %bf.load716 = load i64, i64* %99, align 8, !dbg !16631
  %bf.cast71840 = and i64 %bf.load716, 65535, !dbg !16631
  %cmp719 = icmp eq i64 %bf.cast71840, 40, !dbg !16631
  br i1 %cmp719, label %land.lhs.true721, label %if.end748, !dbg !16632

land.lhs.true721:                                 ; preds = %land.lhs.true708, %lor.lhs.false712
  %decl_flag_1723 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16633
  %100 = bitcast i40* %decl_flag_1723 to i64*, !dbg !16633
  %bf.load724 = load i64, i64* %100, align 8, !dbg !16633
  %bf.cast72737 = and i64 %bf.load724, 33554432, !dbg !16633
  %tobool728 = icmp eq i64 %bf.cast72737, 0, !dbg !16633
  br i1 %tobool728, label %land.lhs.true729, label %if.end748, !dbg !16634

land.lhs.true729:                                 ; preds = %land.lhs.true721
  %bf.load732 = load i64, i64* %84, align 8, !dbg !16635
  %bf.cast73538 = and i64 %bf.load732, 33554432, !dbg !16635
  %tobool736 = icmp eq i64 %bf.cast73538, 0, !dbg !16635
  br i1 %tobool736, label %if.then737, label %if.end748, !dbg !16636

if.then737:                                       ; preds = %land.lhs.true729
  %locus739 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16637
  %101 = load i32, i32* %locus739, align 8, !dbg !16637
  %call740 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %101, i32 49, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.239, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16638
  %or74339 = or i8 %warned.3, %call740, !dbg !16639
  call void @llvm.dbg.value(metadata i8 %or74339, metadata !16247, metadata !DIExpression()), !dbg !16271
  br label %if.end748, !dbg !16640

if.end748:                                        ; preds = %land.lhs.true505, %if.end498, %land.lhs.true729, %land.lhs.true721, %if.end706, %if.then512, %if.then529, %lor.lhs.false712, %if.then737, %if.else542
  %warned.6 = phi i8 [ %warned.1, %if.then512 ], [ %warned.1, %if.then529 ], [ %warned.1, %land.lhs.true505 ], [ %warned.1, %if.end498 ], [ 0, %if.else542 ], [ %warned.3, %land.lhs.true721 ], [ %warned.3, %land.lhs.true729 ], [ %or74339, %if.then737 ], [ %warned.3, %lor.lhs.false712 ], [ %warned.3, %if.end706 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %warned.6, metadata !16247, metadata !DIExpression()), !dbg !16271
  %bf.load750 = load i64, i64* %5, align 8, !dbg !16641
  %bf.cast752 = and i64 %bf.load750, 65535, !dbg !16641
  %arrayidx753 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast752, i64 13, !dbg !16641
  %102 = load i8, i8* %arrayidx753, align 1, !dbg !16641
  %tobool755 = icmp eq i8 %102, 0, !dbg !16641
  br i1 %tobool755, label %if.end787, label %land.lhs.true756, !dbg !16643

land.lhs.true756:                                 ; preds = %if.end748
  %visibility_specified = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16644
  %103 = bitcast i24* %visibility_specified to i32*, !dbg !16644
  %bf.load758 = load i32, i32* %103, align 8, !dbg !16644
  %bf.clear760 = and i32 %bf.load758, 4096, !dbg !16644
  %tobool761 = icmp eq i32 %bf.clear760, 0, !dbg !16644
  br i1 %tobool761, label %if.end787, label %land.lhs.true762, !dbg !16645

land.lhs.true762:                                 ; preds = %land.lhs.true756
  %visibility_specified764 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16646
  %104 = bitcast i24* %visibility_specified764 to i32*, !dbg !16646
  %bf.load765 = load i32, i32* %104, align 8, !dbg !16646
  %bf.clear767 = and i32 %bf.load765, 4096, !dbg !16646
  %tobool768 = icmp eq i32 %bf.clear767, 0, !dbg !16646
  br i1 %tobool768, label %if.end787, label %land.lhs.true769, !dbg !16647

land.lhs.true769:                                 ; preds = %land.lhs.true762
  %bf.lshr77266 = xor i32 %bf.load758, %bf.load765, !dbg !16648
  %105 = and i32 %bf.lshr77266, 3072, !dbg !16648
  %cmp779 = icmp eq i32 %105, 0, !dbg !16648
  br i1 %cmp779, label %if.end787, label %if.then781, !dbg !16649

if.then781:                                       ; preds = %land.lhs.true769
  %call782 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.240, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16650
  %or78535 = or i8 %warned.6, %call782, !dbg !16652
  call void @llvm.dbg.value(metadata i8 %or78535, metadata !16247, metadata !DIExpression()), !dbg !16271
  %bf.load789.pre = load i64, i64* %5, align 8, !dbg !16653
  br label %if.end787, !dbg !16655

if.end787:                                        ; preds = %land.lhs.true769, %land.lhs.true762, %land.lhs.true756, %if.end748, %if.then781
  %bf.load848 = phi i64 [ %bf.load789.pre, %if.then781 ], [ %bf.load750, %land.lhs.true769 ], [ %bf.load750, %land.lhs.true762 ], [ %bf.load750, %land.lhs.true756 ], [ %bf.load750, %if.end748 ], !dbg !16653
  %warned.7 = phi i8 [ %or78535, %if.then781 ], [ %warned.6, %land.lhs.true769 ], [ %warned.6, %land.lhs.true762 ], [ %warned.6, %land.lhs.true756 ], [ %warned.6, %if.end748 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %warned.7, metadata !16247, metadata !DIExpression()), !dbg !16271
  %bf.cast79120 = and i64 %bf.load848, 65535, !dbg !16656
  %cmp792 = icmp eq i64 %bf.cast79120, 29, !dbg !16656
  br i1 %cmp792, label %if.then794, label %if.else832, !dbg !16657

if.then794:                                       ; preds = %if.end787
  %declared_inline_flag796 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16658
  %bf.load797 = load i32, i32* %declared_inline_flag796, align 8, !dbg !16658
  %bf.clear799 = and i32 %bf.load797, 2097152, !dbg !16658
  %tobool800 = icmp eq i32 %bf.clear799, 0, !dbg !16658
  br i1 %tobool800, label %if.else812, label %land.lhs.true801, !dbg !16661

land.lhs.true801:                                 ; preds = %if.then794
  %attributes803 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16662
  %106 = load %union.tree_node*, %union.tree_node** %attributes803, align 8, !dbg !16662
  %call804 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %106) #6, !dbg !16663
  %tobool805 = icmp eq %union.tree_node* %call804, null, !dbg !16663
  br i1 %tobool805, label %if.else812, label %if.then806, !dbg !16664

if.then806:                                       ; preds = %land.lhs.true801
  %call807 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.241, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16665
  %or81034 = or i8 %warned.7, %call807, !dbg !16667
  call void @llvm.dbg.value(metadata i8 %or81034, metadata !16247, metadata !DIExpression()), !dbg !16271
  br label %if.end855, !dbg !16668

if.else812:                                       ; preds = %land.lhs.true801, %if.then794
  %declared_inline_flag814 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16669
  %bf.load815 = load i32, i32* %declared_inline_flag814, align 8, !dbg !16669
  %bf.clear817 = and i32 %bf.load815, 2097152, !dbg !16669
  %tobool818 = icmp eq i32 %bf.clear817, 0, !dbg !16669
  br i1 %tobool818, label %if.end855, label %land.lhs.true819, !dbg !16671

land.lhs.true819:                                 ; preds = %if.else812
  %attributes821 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16672
  %107 = load %union.tree_node*, %union.tree_node** %attributes821, align 8, !dbg !16672
  %call822 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %107) #6, !dbg !16673
  %tobool823 = icmp eq %union.tree_node* %call822, null, !dbg !16673
  br i1 %tobool823, label %if.end855, label %if.then824, !dbg !16674

if.then824:                                       ; preds = %land.lhs.true819
  %call825 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.242, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16675
  %or82833 = or i8 %warned.7, %call825, !dbg !16677
  call void @llvm.dbg.value(metadata i8 %or82833, metadata !16247, metadata !DIExpression()), !dbg !16271
  br label %if.end855, !dbg !16678

if.else832:                                       ; preds = %if.end787
  %cmp837 = icmp eq i64 %bf.cast79120, 34, !dbg !16679
  br i1 %cmp837, label %land.lhs.true839, label %if.end855, !dbg !16682

land.lhs.true839:                                 ; preds = %if.else832
  %bf.load841 = load i64, i64* %4, align 8, !dbg !16683
  %bf.cast84431 = and i64 %bf.load841, 4194304, !dbg !16683
  %tobool845 = icmp eq i64 %bf.cast84431, 0, !dbg !16683
  br i1 %tobool845, label %if.then853, label %lor.lhs.false846, !dbg !16684

lor.lhs.false846:                                 ; preds = %land.lhs.true839
  %bf.cast85132 = and i64 %bf.load848, 4194304, !dbg !16685
  %tobool852 = icmp eq i64 %bf.cast85132, 0, !dbg !16685
  br i1 %tobool852, label %if.end855, label %if.then853, !dbg !16686

if.then853:                                       ; preds = %lor.lhs.false846, %land.lhs.true839
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.243, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16687
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16689
  br label %cleanup969, !dbg !16690

if.end855:                                        ; preds = %land.lhs.true819, %if.else812, %lor.lhs.false846, %if.else832, %if.then806, %if.then824
  %warned.10 = phi i8 [ %or81034, %if.then806 ], [ %or82833, %if.then824 ], [ %warned.7, %land.lhs.true819 ], [ %warned.7, %if.else812 ], [ %warned.7, %lor.lhs.false846 ], [ %warned.7, %if.else832 ], !dbg !16271
  call void @llvm.dbg.value(metadata i8 %warned.10, metadata !16247, metadata !DIExpression()), !dbg !16271
  %108 = or i8 %warned.10, %pedwarned.2, !dbg !16691
  %109 = icmp eq i8 %108, 0, !dbg !16691
  %110 = load i32, i32* @warn_redundant_decls, align 4, !dbg !16693
  %tobool860 = icmp ne i32 %110, 0, !dbg !16693
  %or.cond4 = and i1 %109, %tobool860, !dbg !16691
  br i1 %or.cond4, label %land.lhs.true861, label %if.end961, !dbg !16691

land.lhs.true861:                                 ; preds = %if.end855
  %bf.load863 = load i64, i64* %5, align 8, !dbg !16694
  %bf.cast86522 = and i64 %bf.load863, 65535, !dbg !16695
  %cmp866 = icmp eq i64 %bf.cast86522, 29, !dbg !16695
  br i1 %cmp866, label %land.lhs.true868, label %land.lhs.true876, !dbg !16696

land.lhs.true868:                                 ; preds = %land.lhs.true861
  %initial870 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16697
  %111 = load %union.tree_node*, %union.tree_node** %initial870, align 8, !dbg !16697
  %tobool871 = icmp eq %union.tree_node* %111, null, !dbg !16697
  br i1 %tobool871, label %land.lhs.true876, label %land.lhs.true872, !dbg !16698

land.lhs.true872:                                 ; preds = %land.lhs.true868
  %initial874 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16699
  %112 = load %union.tree_node*, %union.tree_node** %initial874, align 8, !dbg !16699
  %tobool875 = icmp eq %union.tree_node* %112, null, !dbg !16699
  br i1 %tobool875, label %if.end961, label %land.lhs.true876, !dbg !16700

land.lhs.true876:                                 ; preds = %land.lhs.true872, %land.lhs.true868, %land.lhs.true861
  br i1 %cmp866, label %land.lhs.true883, label %land.lhs.true907, !dbg !16701

land.lhs.true883:                                 ; preds = %land.lhs.true876
  %built_in_class885 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16702
  %bf.load886 = load i32, i32* %built_in_class885, align 8, !dbg !16702
  %bf.clear888 = and i32 %bf.load886, 6144, !dbg !16702
  %cmp889 = icmp eq i32 %bf.clear888, 0, !dbg !16702
  br i1 %cmp889, label %land.lhs.true891, label %land.lhs.true907, !dbg !16703

land.lhs.true891:                                 ; preds = %land.lhs.true883
  %built_in_class893 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16704
  %bf.load894 = load i32, i32* %built_in_class893, align 8, !dbg !16704
  %bf.clear896 = and i32 %bf.load894, 6144, !dbg !16704
  %cmp897 = icmp eq i32 %bf.clear896, 0, !dbg !16704
  br i1 %cmp897, label %land.lhs.true907, label %land.lhs.true899, !dbg !16705

land.lhs.true899:                                 ; preds = %land.lhs.true891
  %lang_flag_3901 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16706
  %113 = bitcast i40* %lang_flag_3901 to i64*, !dbg !16706
  %bf.load902 = load i64, i64* %113, align 8, !dbg !16706
  %bf.cast90530 = and i64 %bf.load902, 262144, !dbg !16706
  %tobool906 = icmp eq i64 %bf.cast90530, 0, !dbg !16706
  br i1 %tobool906, label %if.end961, label %land.lhs.true907, !dbg !16707

land.lhs.true907:                                 ; preds = %land.lhs.true899, %land.lhs.true891, %land.lhs.true883, %land.lhs.true876
  %decl_flag_1909 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16708
  %114 = bitcast i40* %decl_flag_1909 to i64*, !dbg !16708
  %bf.load910 = load i64, i64* %114, align 8, !dbg !16708
  %bf.cast91324 = and i64 %bf.load910, 33554432, !dbg !16708
  %tobool914 = icmp eq i64 %bf.cast91324, 0, !dbg !16708
  br i1 %tobool914, label %land.lhs.true923, label %land.lhs.true915, !dbg !16709

land.lhs.true915:                                 ; preds = %land.lhs.true907
  %decl_flag_1917 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16710
  %115 = bitcast i40* %decl_flag_1917 to i64*, !dbg !16710
  %bf.load918 = load i64, i64* %115, align 8, !dbg !16710
  %bf.cast92129 = and i64 %bf.load918, 33554432, !dbg !16710
  %tobool922 = icmp eq i64 %bf.cast92129, 0, !dbg !16710
  br i1 %tobool922, label %if.end961, label %land.lhs.true923, !dbg !16711

land.lhs.true923:                                 ; preds = %land.lhs.true915, %land.lhs.true907
  %cmp928 = icmp eq i64 %bf.cast86522, 34, !dbg !16712
  br i1 %cmp928, label %land.lhs.true930, label %land.lhs.true944, !dbg !16713

land.lhs.true930:                                 ; preds = %land.lhs.true923
  %bf.load932 = load i64, i64* %4, align 8, !dbg !16714
  %bf.cast93527 = and i64 %bf.load932, 4194304, !dbg !16714
  %tobool936 = icmp eq i64 %bf.cast93527, 0, !dbg !16714
  br i1 %tobool936, label %land.lhs.true944, label %land.lhs.true937, !dbg !16715

land.lhs.true937:                                 ; preds = %land.lhs.true930
  %bf.cast94228 = and i64 %bf.load863, 4194304, !dbg !16716
  %tobool943 = icmp eq i64 %bf.cast94228, 0, !dbg !16716
  br i1 %tobool943, label %if.end961, label %land.lhs.true944, !dbg !16717

land.lhs.true944:                                 ; preds = %land.lhs.true937, %land.lhs.true930, %land.lhs.true923
  %cmp949 = icmp eq i64 %bf.cast86522, 32, !dbg !16718
  br i1 %cmp949, label %land.lhs.true951, label %if.then959, !dbg !16719

land.lhs.true951:                                 ; preds = %land.lhs.true944
  %initial953 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16720
  %116 = load %union.tree_node*, %union.tree_node** %initial953, align 8, !dbg !16720
  %tobool954 = icmp eq %union.tree_node* %116, null, !dbg !16720
  br i1 %tobool954, label %if.then959, label %land.lhs.true955, !dbg !16721

land.lhs.true955:                                 ; preds = %land.lhs.true951
  %initial957 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16722
  %117 = load %union.tree_node*, %union.tree_node** %initial957, align 8, !dbg !16722
  %tobool958 = icmp eq %union.tree_node* %117, null, !dbg !16722
  br i1 %tobool958, label %if.end961, label %if.then959, !dbg !16723

if.then959:                                       ; preds = %land.lhs.true955, %land.lhs.true951, %land.lhs.true944
  %call960 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 169, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.244, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !16724
  call void @llvm.dbg.value(metadata i8 %call960, metadata !16247, metadata !DIExpression()), !dbg !16271
  %.pre73 = or i8 %call960, %pedwarned.2, !dbg !16726
  br label %if.end961, !dbg !16728

if.end961:                                        ; preds = %land.lhs.true872, %land.lhs.true899, %land.lhs.true915, %land.lhs.true937, %land.lhs.true955, %if.end855, %if.then959
  %.pre-phi = phi i8 [ 0, %land.lhs.true872 ], [ 0, %land.lhs.true899 ], [ 0, %land.lhs.true915 ], [ 0, %land.lhs.true937 ], [ 0, %land.lhs.true955 ], [ %108, %if.end855 ], [ %.pre73, %if.then959 ], !dbg !16726
  %118 = icmp eq i8 %.pre-phi, 0, !dbg !16726
  br i1 %118, label %cleanup969, label %if.then967, !dbg !16726

if.then967:                                       ; preds = %if.end961
  tail call fastcc void @locate_old_decl(%union.tree_node* %olddecl) #7, !dbg !16729
  br label %cleanup969, !dbg !16729

cleanup969:                                       ; preds = %lor.lhs.false296, %lor.lhs.false289, %lor.lhs.false281, %if.then275, %land.lhs.true459, %if.then684, %if.end961, %if.then967, %if.else702, %if.then701, %if.then447, %if.then467, %if.then29, %if.else37, %if.then36, %if.end, %entry, %cleanup, %if.then853, %if.end669, %if.then649, %if.then601, %if.end591, %if.then486, %if.then431, %if.then410, %if.then344, %if.end304, %if.end261, %if.then90, %if.then47
  %retval.1 = phi i8 [ 0, %if.then47 ], [ 0, %if.end304 ], [ 0, %if.then410 ], [ 0, %if.then853 ], [ 0, %if.then486 ], [ 0, %if.then431 ], [ 0, %if.then344 ], [ 0, %if.end591 ], [ 0, %if.then601 ], [ 0, %if.then649 ], [ 0, %if.end669 ], [ 0, %if.then90 ], [ 0, %if.end261 ], [ 0, %cleanup ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.then36 ], [ 0, %if.else37 ], [ 0, %if.then29 ], [ 1, %lor.lhs.false296 ], [ 1, %lor.lhs.false289 ], [ 1, %lor.lhs.false281 ], [ 1, %if.then275 ], [ 0, %if.then467 ], [ 0, %land.lhs.true459 ], [ 0, %if.then447 ], [ 0, %if.then701 ], [ 0, %if.else702 ], [ 0, %if.then684 ], [ 1, %if.end961 ], [ 1, %if.then967 ]
  ret i8 %retval.1, !dbg !16730
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node* %newtype, %union.tree_node* %oldtype) unnamed_addr #5 !dbg !16731 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  %tmp206 = alloca %struct.expanded_location, align 8
  %tmp229 = alloca %struct.expanded_location, align 8
  %tmp237 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !16735, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !16736, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype, metadata !16737, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype, metadata !16738, metadata !DIExpression()), !dbg !16757
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16758
  %bf.load = load i64, i64* %0, align 8, !dbg !16758
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !16759
  %cmp = icmp eq i64 %bf.cast4, 29, !dbg !16759
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16760

land.rhs:                                         ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16761
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !16761
  %cmp1 = icmp ne %union.tree_node* %1, null, !dbg !16762
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16757
  call void @llvm.dbg.value(metadata i1 %2, metadata !16739, metadata !DIExpression()), !dbg !16757
  br i1 %cmp, label %land.rhs8, label %land.end12, !dbg !16763

land.rhs8:                                        ; preds = %land.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16764
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !16764
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !16764
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 1, !dbg !16764
  %5 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !16764
  %cmp10 = icmp ne %union.tree_node* %5, null, !dbg !16765
  br label %land.end12

land.end12:                                       ; preds = %land.rhs8, %land.end
  %6 = phi i1 [ false, %land.end ], [ %cmp10, %land.rhs8 ], !dbg !16757
  call void @llvm.dbg.value(metadata i1 %6, metadata !16740, metadata !DIExpression()), !dbg !16757
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !16766
  %bf.load16 = load i64, i64* %7, align 8, !dbg !16766
  %bf.cast186 = and i64 %bf.load16, 65535, !dbg !16767
  %cmp19 = icmp eq i64 %bf.cast186, 29, !dbg !16767
  br i1 %cmp19, label %land.rhs21, label %land.end28, !dbg !16768

land.rhs21:                                       ; preds = %land.end12
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16769
  %8 = bitcast %union.tree_node** %type23 to %struct.tree_type**, !dbg !16769
  %9 = load %struct.tree_type*, %struct.tree_type** %8, align 8, !dbg !16769
  %values25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 1, !dbg !16769
  %10 = load %union.tree_node*, %union.tree_node** %values25, align 8, !dbg !16769
  %cmp26 = icmp ne %union.tree_node* %10, null, !dbg !16770
  br label %land.end28

land.end28:                                       ; preds = %land.rhs21, %land.end12
  %11 = phi i1 [ false, %land.end12 ], [ %cmp26, %land.rhs21 ], !dbg !16757
  call void @llvm.dbg.value(metadata i1 %11, metadata !16741, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i8 0, metadata !16742, metadata !DIExpression()), !dbg !16757
  %cmp35 = icmp eq i64 %bf.cast4, 34, !dbg !16771
  br i1 %cmp35, label %land.lhs.true, label %if.end59, !dbg !16772

land.lhs.true:                                    ; preds = %land.end28
  %bf.cast4066 = and i64 %bf.load16, 4194304, !dbg !16773
  %tobool = icmp eq i64 %bf.cast4066, 0, !dbg !16773
  br i1 %tobool, label %if.end59, label %land.lhs.true41, !dbg !16774

land.lhs.true41:                                  ; preds = %land.lhs.true
  %bf.cast4667 = and i64 %bf.load, 4194304, !dbg !16775
  %tobool47 = icmp eq i64 %bf.cast4667, 0, !dbg !16775
  br i1 %tobool47, label %if.then, label %if.end59, !dbg !16776

if.then:                                          ; preds = %land.lhs.true41
  %12 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !16777
  %bindings = getelementptr inbounds %struct.c_scope, %struct.c_scope* %12, i64 0, i32 2, !dbg !16779
  call void @llvm.dbg.value(metadata %struct.c_binding** %bindings, metadata !16746, metadata !DIExpression()), !dbg !16780
  br label %for.cond, !dbg !16781

for.cond:                                         ; preds = %for.inc, %if.then
  %here.0 = phi %struct.c_binding** [ %bindings, %if.then ], [ %prev, %for.inc ], !dbg !16782
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0, metadata !16746, metadata !DIExpression()), !dbg !16780
  %13 = load %struct.c_binding*, %struct.c_binding** %here.0, align 8, !dbg !16783
  %tobool48 = icmp eq %struct.c_binding* %13, null, !dbg !16785
  br i1 %tobool48, label %for.end, label %for.body, !dbg !16785

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.c_binding, %struct.c_binding* %13, i64 0, i32 1, !dbg !16786
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16786
  %cmp49 = icmp eq %union.tree_node* %14, %olddecl, !dbg !16788
  br i1 %cmp49, label %found.loopexit, label %for.inc, !dbg !16789

for.inc:                                          ; preds = %for.body
  %prev = getelementptr inbounds %struct.c_binding, %struct.c_binding* %13, i64 0, i32 3, !dbg !16790
  call void @llvm.dbg.value(metadata %struct.c_binding** %prev, metadata !16746, metadata !DIExpression()), !dbg !16780
  br label %for.cond, !dbg !16791, !llvm.loop !16792

for.end:                                          ; preds = %for.cond
  %here.0.lcssa = phi %struct.c_binding** [ %here.0, %for.cond ], !dbg !16782
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa, metadata !16746, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa, metadata !16746, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa, metadata !16746, metadata !DIExpression()), !dbg !16780
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 2142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !16794
  %.pre = load %struct.c_binding*, %struct.c_binding** %here.0.lcssa, align 8, !dbg !16795
  %.pre70 = load %struct.c_scope*, %struct.c_scope** @current_scope, align 8, !dbg !16796
  br label %found, !dbg !16794

found.loopexit:                                   ; preds = %for.body
  %here.0.lcssa89 = phi %struct.c_binding** [ %here.0, %for.body ], !dbg !16782
  %.lcssa88 = phi %struct.c_binding* [ %13, %for.body ], !dbg !16783
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa89, metadata !16746, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa89, metadata !16746, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct.c_binding** %here.0.lcssa89, metadata !16746, metadata !DIExpression()), !dbg !16780
  br label %found, !dbg !16795

found:                                            ; preds = %found.loopexit, %for.end
  %here.090 = phi %struct.c_binding** [ %here.0.lcssa89, %found.loopexit ], [ %here.0.lcssa, %for.end ]
  %15 = phi %struct.c_scope* [ %12, %found.loopexit ], [ %.pre70, %for.end ], !dbg !16797
  %16 = phi %struct.c_binding* [ %.lcssa88, %found.loopexit ], [ %.pre, %for.end ], !dbg !16795
  call void @llvm.dbg.label(metadata !16756), !dbg !16798
  call void @llvm.dbg.value(metadata %struct.c_binding* %16, metadata !16743, metadata !DIExpression()), !dbg !16780
  %prev52 = getelementptr inbounds %struct.c_binding, %struct.c_binding* %16, i64 0, i32 3, !dbg !16799
  %17 = bitcast %struct.c_binding** %prev52 to i64*, !dbg !16799
  %18 = load i64, i64* %17, align 8, !dbg !16799
  %19 = bitcast %struct.c_binding** %here.090 to i64*, !dbg !16800
  store i64 %18, i64* %19, align 8, !dbg !16800
  %bindings53 = getelementptr inbounds %struct.c_scope, %struct.c_scope* %15, i64 0, i32 2, !dbg !16801
  %20 = bitcast %struct.c_binding** %bindings53 to i64*, !dbg !16801
  %21 = load i64, i64* %20, align 8, !dbg !16801
  store i64 %21, i64* %17, align 8, !dbg !16802
  store %struct.c_binding* %16, %struct.c_binding** %bindings53, align 8, !dbg !16803
  %bf.load57 = load i64, i64* %7, align 8, !dbg !16804
  %bf.clear58 = and i64 %bf.load57, -4194305, !dbg !16804
  store i64 %bf.clear58, i64* %7, align 8, !dbg !16804
  br label %if.end59, !dbg !16805

if.end59:                                         ; preds = %land.lhs.true41, %land.lhs.true, %found, %land.end28
  %22 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 11), align 8, !dbg !16806
  %call = tail call %union.tree_node* %22(%union.tree_node* %olddecl, %union.tree_node* %newdecl) #6, !dbg !16807
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !16808
  store %union.tree_node* %call, %union.tree_node** %attributes, align 8, !dbg !16809
  %call61 = tail call %union.tree_node* @composite_type(%union.tree_node* %newtype, %union.tree_node* %oldtype) #6, !dbg !16810
  %type63 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16811
  store %union.tree_node* %call61, %union.tree_node** %type63, align 8, !dbg !16812
  %type65 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16813
  store %union.tree_node* %call61, %union.tree_node** %type65, align 8, !dbg !16814
  %call68 = tail call i32 @comptypes(%union.tree_node* %oldtype, %union.tree_node* %call61) #6, !dbg !16815
  %tobool69 = icmp eq i32 %call68, 0, !dbg !16815
  br i1 %tobool69, label %if.then70, label %if.else, !dbg !16817

if.then70:                                        ; preds = %if.end59
  %23 = load %union.tree_node*, %union.tree_node** %type65, align 8, !dbg !16818
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !16821
  %cmp73 = icmp eq %union.tree_node* %23, %24, !dbg !16822
  br i1 %cmp73, label %if.end78, label %if.then75, !dbg !16823

if.then75:                                        ; preds = %if.then70
  tail call void @layout_type(%union.tree_node* %23) #6, !dbg !16824
  br label %if.end78, !dbg !16824

if.end78:                                         ; preds = %if.then70, %if.then75
  %bf.load80 = load i64, i64* %0, align 8, !dbg !16825
  %bf.cast828 = and i64 %bf.load80, 65535, !dbg !16827
  %cmp83 = icmp eq i64 %bf.cast828, 29, !dbg !16827
  br i1 %cmp83, label %if.end143, label %land.lhs.true85, !dbg !16828

land.lhs.true85:                                  ; preds = %if.end78
  %cmp90 = icmp eq i64 %bf.cast828, 35, !dbg !16829
  br i1 %cmp90, label %if.end143, label %land.lhs.true92, !dbg !16830

land.lhs.true92:                                  ; preds = %land.lhs.true85
  %cmp97 = icmp eq i64 %bf.cast828, 33, !dbg !16831
  br i1 %cmp97, label %if.end143, label %if.then99, !dbg !16832

if.then99:                                        ; preds = %land.lhs.true92
  tail call void @layout_decl(%union.tree_node* %newdecl, i32 0) #6, !dbg !16833
  br label %if.end143, !dbg !16833

if.else:                                          ; preds = %if.end59
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16834
  %25 = bitcast %union.tree_node** %size to i64*, !dbg !16834
  %26 = load i64, i64* %25, align 8, !dbg !16834
  %size103 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16836
  %27 = bitcast %union.tree_node** %size103 to i64*, !dbg !16837
  store i64 %26, i64* %27, align 8, !dbg !16837
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !16838
  %28 = bitcast %union.tree_node** %size_unit to i64*, !dbg !16838
  %29 = load i64, i64* %28, align 8, !dbg !16838
  %size_unit106 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !16839
  %30 = bitcast %union.tree_node** %size_unit106 to i64*, !dbg !16840
  store i64 %29, i64* %30, align 8, !dbg !16840
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16841
  %31 = bitcast i40* %mode to i64*, !dbg !16841
  %bf.load108 = load i64, i64* %31, align 8, !dbg !16841
  %bf.cast110 = and i64 %bf.load108, 255, !dbg !16841
  %mode112 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16842
  %32 = bitcast i40* %mode112 to i64*, !dbg !16842
  %bf.load113 = load i64, i64* %32, align 8, !dbg !16843
  %bf.clear114 = and i64 %bf.load113, -256, !dbg !16843
  %bf.set = or i64 %bf.clear114, %bf.cast110, !dbg !16843
  store i64 %bf.set, i64* %32, align 8, !dbg !16843
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !16844
  %33 = load i32, i32* %align, align 8, !dbg !16844
  %align117 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !16846
  %34 = load i32, i32* %align117, align 8, !dbg !16846
  %cmp118 = icmp ugt i32 %33, %34, !dbg !16847
  br i1 %cmp118, label %if.then120, label %if.end143, !dbg !16848

if.then120:                                       ; preds = %if.else
  store i32 %33, i32* %align117, align 8, !dbg !16849
  %bf.load127 = load i64, i64* %7, align 8, !dbg !16851
  %bf.load133 = load i64, i64* %0, align 8, !dbg !16852
  %35 = and i64 %bf.load127, 4398046511104, !dbg !16852
  %bf.set140 = or i64 %35, %bf.load133, !dbg !16852
  store i64 %bf.set140, i64* %0, align 8, !dbg !16852
  br label %if.end143, !dbg !16853

if.end143:                                        ; preds = %land.lhs.true92, %land.lhs.true85, %if.end78, %if.else, %if.then120, %if.then99
  %bf.load145 = load i64, i64* %7, align 8, !dbg !16854
  %bf.cast147 = and i64 %bf.load145, 65535, !dbg !16854
  %arrayidx148 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast147, i64 11, !dbg !16854
  %36 = load i8, i8* %arrayidx148, align 1, !dbg !16854
  %tobool149 = icmp eq i8 %36, 0, !dbg !16854
  br i1 %tobool149, label %if.end153, label %if.then150, !dbg !16856

if.then150:                                       ; preds = %if.end143
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16857
  %37 = bitcast %struct.rtx_def** %rtl to i64*, !dbg !16857
  %38 = load i64, i64* %37, align 8, !dbg !16857
  %rtl152 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16857
  %39 = bitcast %struct.rtx_def** %rtl152 to i64*, !dbg !16857
  store i64 %38, i64* %39, align 8, !dbg !16857
  br label %if.end153, !dbg !16857

if.end153:                                        ; preds = %if.end143, %if.then150
  %bf.load155 = load i64, i64* %0, align 8, !dbg !16858
  %bf.cast1589 = and i64 %bf.load155, 1048576, !dbg !16858
  %tobool159 = icmp eq i64 %bf.cast1589, 0, !dbg !16858
  br i1 %tobool159, label %if.end165, label %if.then160, !dbg !16860

if.then160:                                       ; preds = %if.end153
  %bf.load162 = load i64, i64* %7, align 8, !dbg !16861
  %bf.set164 = or i64 %bf.load162, 1048576, !dbg !16861
  store i64 %bf.set164, i64* %7, align 8, !dbg !16861
  %bf.load167.pre = load i64, i64* %0, align 8, !dbg !16862
  br label %if.end165, !dbg !16864

if.end165:                                        ; preds = %if.end153, %if.then160
  %bf.load167 = phi i64 [ %bf.load155, %if.end153 ], [ %bf.load167.pre, %if.then160 ], !dbg !16862
  %bf.cast17010 = and i64 %bf.load167, 524288, !dbg !16862
  %tobool171 = icmp eq i64 %bf.cast17010, 0, !dbg !16862
  br i1 %tobool171, label %if.end177, label %if.then172, !dbg !16865

if.then172:                                       ; preds = %if.end165
  %bf.load174 = load i64, i64* %7, align 8, !dbg !16866
  %bf.set176 = or i64 %bf.load174, 524288, !dbg !16866
  store i64 %bf.set176, i64* %7, align 8, !dbg !16866
  %bf.load179.pre = load i64, i64* %0, align 8, !dbg !16867
  br label %if.end177, !dbg !16869

if.end177:                                        ; preds = %if.end165, %if.then172
  %bf.load179 = phi i64 [ %bf.load167, %if.end165 ], [ %bf.load179.pre, %if.then172 ], !dbg !16867
  %bf.cast18211 = and i64 %bf.load179, 1073741824, !dbg !16867
  %tobool183 = icmp eq i64 %bf.cast18211, 0, !dbg !16867
  br i1 %tobool183, label %if.end177.if.end189_crit_edge, label %if.then184, !dbg !16870

if.end177.if.end189_crit_edge:                    ; preds = %if.end177
  %bf.load191.pre = load i64, i64* %7, align 8, !dbg !16871
  br label %if.end189, !dbg !16870

if.then184:                                       ; preds = %if.end177
  %bf.load186 = load i64, i64* %7, align 8, !dbg !16873
  %bf.set188 = or i64 %bf.load186, 1073741824, !dbg !16873
  store i64 %bf.set188, i64* %7, align 8, !dbg !16873
  br label %if.end189, !dbg !16874

if.end189:                                        ; preds = %if.end177.if.end189_crit_edge, %if.then184
  %bf.load191 = phi i64 [ %bf.load191.pre, %if.end177.if.end189_crit_edge ], [ %bf.set188, %if.then184 ], !dbg !16871
  %bf.cast193 = and i64 %bf.load191, 65535, !dbg !16871
  %arrayidx196 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast193, i64 13, !dbg !16871
  %40 = load i8, i8* %arrayidx196, align 1, !dbg !16871
  %tobool198 = icmp eq i8 %40, 0, !dbg !16871
  br i1 %tobool198, label %if.else216, label %land.lhs.true199, !dbg !16875

land.lhs.true199:                                 ; preds = %if.end189
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16876
  %41 = load i32, i32* %locus, align 8, !dbg !16876
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %41) #6, !dbg !16876
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !16876
  %42 = load i8, i8* %sysp, align 8, !dbg !16876
  %cmp201 = icmp eq i8 %42, 0, !dbg !16876
  br i1 %cmp201, label %if.else216, label %land.lhs.true203, !dbg !16877

land.lhs.true203:                                 ; preds = %land.lhs.true199
  %locus205 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16878
  %43 = load i32, i32* %locus205, align 8, !dbg !16878
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp206, i32 %43) #6, !dbg !16878
  %sysp207 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp206, i64 0, i32 3, !dbg !16878
  %44 = load i8, i8* %sysp207, align 8, !dbg !16878
  %cmp209 = icmp eq i8 %44, 0, !dbg !16878
  br i1 %cmp209, label %if.then211, label %if.else216, !dbg !16879

if.then211:                                       ; preds = %land.lhs.true203
  %45 = load i32, i32* %locus, align 8, !dbg !16880
  store i32 %45, i32* %locus205, align 8, !dbg !16881
  br label %if.end275, !dbg !16882

if.else216:                                       ; preds = %land.lhs.true203, %land.lhs.true199, %if.end189
  %bf.load218 = load i64, i64* %7, align 8, !dbg !16883
  %bf.cast220 = and i64 %bf.load218, 65535, !dbg !16883
  %arrayidx223 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast220, i64 13, !dbg !16883
  %46 = load i8, i8* %arrayidx223, align 1, !dbg !16883
  %tobool225 = icmp eq i8 %46, 0, !dbg !16883
  br i1 %tobool225, label %if.else247, label %land.lhs.true226, !dbg !16885

land.lhs.true226:                                 ; preds = %if.else216
  %locus228 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16886
  %47 = load i32, i32* %locus228, align 8, !dbg !16886
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp229, i32 %47) #6, !dbg !16886
  %sysp230 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp229, i64 0, i32 3, !dbg !16886
  %48 = load i8, i8* %sysp230, align 8, !dbg !16886
  %cmp232 = icmp eq i8 %48, 0, !dbg !16886
  br i1 %cmp232, label %if.else247, label %land.lhs.true234, !dbg !16887

land.lhs.true234:                                 ; preds = %land.lhs.true226
  %locus236 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16888
  %49 = load i32, i32* %locus236, align 8, !dbg !16888
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp237, i32 %49) #6, !dbg !16888
  %sysp238 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp237, i64 0, i32 3, !dbg !16888
  %50 = load i8, i8* %sysp238, align 8, !dbg !16888
  %cmp240 = icmp eq i8 %50, 0, !dbg !16888
  br i1 %cmp240, label %if.then242, label %if.else247, !dbg !16889

if.then242:                                       ; preds = %land.lhs.true234
  %51 = load i32, i32* %locus228, align 8, !dbg !16890
  store i32 %51, i32* %locus236, align 8, !dbg !16891
  br label %if.end275, !dbg !16892

if.else247:                                       ; preds = %land.lhs.true234, %land.lhs.true226, %if.else216
  %initial249 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16893
  %52 = load %union.tree_node*, %union.tree_node** %initial249, align 8, !dbg !16893
  %cmp250 = icmp eq %union.tree_node* %52, null, !dbg !16895
  br i1 %cmp250, label %land.lhs.true252, label %lor.lhs.false, !dbg !16896

land.lhs.true252:                                 ; preds = %if.else247
  %initial254 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16897
  %53 = load %union.tree_node*, %union.tree_node** %initial254, align 8, !dbg !16897
  %cmp255 = icmp eq %union.tree_node* %53, null, !dbg !16898
  br i1 %cmp255, label %lor.lhs.false, label %if.then268, !dbg !16899

lor.lhs.false:                                    ; preds = %land.lhs.true252, %if.else247
  %tobool258 = xor i1 %11, true, !dbg !16900
  %or.cond = or i1 %6, %tobool258, !dbg !16901
  br i1 %or.cond, label %if.end275, label %land.lhs.true261, !dbg !16901

land.lhs.true261:                                 ; preds = %lor.lhs.false
  %lang_flag_6 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16902
  %54 = bitcast i40* %lang_flag_6 to i64*, !dbg !16902
  %bf.load263 = load i64, i64* %54, align 8, !dbg !16902
  %bf.cast26612 = and i64 %bf.load263, 2097152, !dbg !16902
  %tobool267 = icmp eq i64 %bf.cast26612, 0, !dbg !16902
  br i1 %tobool267, label %if.then268, label %if.end275, !dbg !16903

if.then268:                                       ; preds = %land.lhs.true252, %land.lhs.true261
  %locus270 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16904
  %55 = load i32, i32* %locus270, align 8, !dbg !16904
  %locus272 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !16905
  store i32 %55, i32* %locus272, align 8, !dbg !16906
  br label %if.end275, !dbg !16905

if.end275:                                        ; preds = %land.lhs.true261, %if.then242, %lor.lhs.false, %if.then268, %if.then211
  %initial277 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16907
  %56 = load %union.tree_node*, %union.tree_node** %initial277, align 8, !dbg !16907
  %cmp278 = icmp eq %union.tree_node* %56, null, !dbg !16909
  br i1 %cmp278, label %if.then280, label %if.end285, !dbg !16910

if.then280:                                       ; preds = %if.end275
  %initial282 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !16911
  %57 = bitcast %union.tree_node** %initial282 to i64*, !dbg !16911
  %58 = load i64, i64* %57, align 8, !dbg !16911
  %59 = bitcast %union.tree_node** %initial277 to i64*, !dbg !16912
  store i64 %58, i64* %59, align 8, !dbg !16912
  br label %if.end285, !dbg !16913

if.end285:                                        ; preds = %if.then280, %if.end275
  %bf.load287 = load i64, i64* %7, align 8, !dbg !16914
  %bf.cast28913 = and i64 %bf.load287, 65535, !dbg !16916
  %cmp290 = icmp eq i64 %bf.cast28913, 32, !dbg !16916
  br i1 %cmp290, label %land.lhs.true292, label %if.end315, !dbg !16917

land.lhs.true292:                                 ; preds = %if.end285
  %lang_flag_3 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16918
  %60 = bitcast i40* %lang_flag_3 to i64*, !dbg !16918
  %bf.load294 = load i64, i64* %60, align 8, !dbg !16918
  %bf.cast29760 = and i64 %bf.load294, 262144, !dbg !16918
  %tobool298 = icmp eq i64 %bf.cast29760, 0, !dbg !16918
  br i1 %tobool298, label %if.end315, label %if.then299, !dbg !16919

if.then299:                                       ; preds = %land.lhs.true292
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16920
  %61 = bitcast i24* %tls_model to i32*, !dbg !16920
  %bf.load300 = load i32, i32* %61, align 8, !dbg !16920
  %bf.clear302 = and i32 %bf.load300, 57344, !dbg !16920
  %tls_model304 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16922
  %62 = bitcast i24* %tls_model304 to i32*, !dbg !16922
  %bf.load305 = load i32, i32* %62, align 8, !dbg !16923
  %bf.clear308 = and i32 %bf.load305, -57345, !dbg !16923
  %bf.set309 = or i32 %bf.clear308, %bf.clear302, !dbg !16923
  store i32 %bf.set309, i32* %62, align 8, !dbg !16923
  %lang_flag_3311 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !16924
  %63 = bitcast i40* %lang_flag_3311 to i64*, !dbg !16924
  %bf.load312 = load i64, i64* %63, align 8, !dbg !16925
  %bf.set314 = or i64 %bf.load312, 262144, !dbg !16925
  store i64 %bf.set314, i64* %63, align 8, !dbg !16925
  %bf.load317.pre = load i64, i64* %7, align 8, !dbg !16926
  %.pre83 = and i64 %bf.load317.pre, 65535, !dbg !16926
  br label %if.end315, !dbg !16928

if.end315:                                        ; preds = %land.lhs.true292, %if.then299, %if.end285
  %bf.cast319.pre-phi = phi i64 [ 32, %land.lhs.true292 ], [ %.pre83, %if.then299 ], [ %bf.cast28913, %if.end285 ], !dbg !16926
  %arrayidx322 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast319.pre-phi, i64 13, !dbg !16926
  %64 = load i8, i8* %arrayidx322, align 1, !dbg !16926
  %tobool323 = icmp eq i8 %64, 0, !dbg !16926
  br i1 %tobool323, label %if.end582, label %if.then324, !dbg !16929

if.then324:                                       ; preds = %if.end315
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !16930
  %65 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !16930
  %cmp326 = icmp eq %union.tree_node* %65, null, !dbg !16933
  br i1 %cmp326, label %if.then328, label %if.end333, !dbg !16934

if.then328:                                       ; preds = %if.then324
  %section_name330 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !16935
  %66 = bitcast %union.tree_node** %section_name330 to i64*, !dbg !16935
  %67 = load i64, i64* %66, align 8, !dbg !16935
  %68 = bitcast %union.tree_node** %section_name to i64*, !dbg !16936
  store i64 %67, i64* %68, align 8, !dbg !16936
  %bf.load335.pre = load i64, i64* %7, align 8, !dbg !16937
  %.pre84 = and i64 %bf.load335.pre, 65535, !dbg !16937
  br label %if.end333, !dbg !16938

if.end333:                                        ; preds = %if.then328, %if.then324
  %bf.cast337.pre-phi = phi i64 [ %.pre84, %if.then328 ], [ %bf.cast319.pre-phi, %if.then324 ], !dbg !16937
  %arrayidx340 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast337.pre-phi, i64 13, !dbg !16937
  %69 = load i8, i8* %arrayidx340, align 1, !dbg !16937
  %tobool342 = icmp eq i8 %69, 0, !dbg !16937
  br i1 %tobool342, label %cond.end, label %land.lhs.true343, !dbg !16937

land.lhs.true343:                                 ; preds = %if.end333
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !16937
  %70 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !16937
  %cmp345 = icmp eq %union.tree_node* %70, null, !dbg !16937
  br i1 %cmp345, label %cond.end, label %cond.true, !dbg !16937

cond.true:                                        ; preds = %land.lhs.true343
  %call347 = call %union.tree_node* @decl_assembler_name(%union.tree_node* %olddecl) #6, !dbg !16937
  %assembler_name349 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !16937
  store %union.tree_node* %call347, %union.tree_node** %assembler_name349, align 8, !dbg !16937
  br label %cond.end, !dbg !16937

cond.end:                                         ; preds = %land.lhs.true343, %if.end333, %cond.true
  %visibility_specified = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16939
  %71 = bitcast i24* %visibility_specified to i32*, !dbg !16939
  %bf.load351 = load i32, i32* %71, align 8, !dbg !16939
  %bf.clear353 = and i32 %bf.load351, 4096, !dbg !16939
  %tobool354 = icmp eq i32 %bf.clear353, 0, !dbg !16939
  br i1 %tobool354, label %if.end372, label %if.then355, !dbg !16941

if.then355:                                       ; preds = %cond.end
  %bf.clear359 = and i32 %bf.load351, 3072, !dbg !16942
  %visibility361 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !16944
  %72 = bitcast i24* %visibility361 to i32*, !dbg !16944
  %bf.load362 = load i32, i32* %72, align 8, !dbg !16945
  %bf.clear365 = and i32 %bf.load362, -7169, !dbg !16945
  %bf.set366 = or i32 %bf.clear365, %bf.clear359, !dbg !16945
  %bf.set371 = or i32 %bf.set366, 4096, !dbg !16946
  store i32 %bf.set371, i32* %72, align 8, !dbg !16946
  br label %if.end372, !dbg !16947

if.end372:                                        ; preds = %cond.end, %if.then355
  %bf.load374 = load i64, i64* %0, align 8, !dbg !16948
  %bf.cast37633 = and i64 %bf.load374, 65535, !dbg !16950
  %cmp377 = icmp eq i64 %bf.cast37633, 29, !dbg !16950
  br i1 %cmp377, label %if.then379, label %if.end533, !dbg !16951

if.then379:                                       ; preds = %if.end372
  %static_ctor_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16952
  %bf.load380 = load i32, i32* %static_ctor_flag, align 8, !dbg !16952
  %static_ctor_flag384 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16954
  %bf.load385 = load i32, i32* %static_ctor_flag384, align 8, !dbg !16955
  %73 = and i32 %bf.load380, 8192, !dbg !16955
  %bf.set393 = or i32 %73, %bf.load385, !dbg !16955
  store i32 %bf.set393, i32* %static_ctor_flag384, align 8, !dbg !16955
  %bf.load395 = load i32, i32* %static_ctor_flag, align 8, !dbg !16956
  %bf.lshr40141 = or i32 %bf.load385, %bf.load395, !dbg !16957
  %or403 = and i32 %bf.lshr40141, 16384, !dbg !16957
  %bf.clear407 = and i32 %bf.set393, -16385, !dbg !16957
  %bf.set408 = or i32 %bf.clear407, %or403, !dbg !16957
  store i32 %bf.set408, i32* %static_ctor_flag384, align 8, !dbg !16957
  %bf.load410 = load i32, i32* %static_ctor_flag, align 8, !dbg !16958
  %bf.lshr41643 = or i32 %bf.load385, %bf.load410, !dbg !16959
  %or418 = and i32 %bf.lshr41643, 33554432, !dbg !16959
  %bf.clear422 = and i32 %bf.set408, -33554433, !dbg !16959
  %bf.set423 = or i32 %bf.clear422, %or418, !dbg !16959
  store i32 %bf.set423, i32* %static_ctor_flag384, align 8, !dbg !16959
  %bf.load425 = load i32, i32* %static_ctor_flag, align 8, !dbg !16960
  %bf.lshr43145 = or i32 %bf.load385, %bf.load425, !dbg !16961
  %or433 = and i32 %bf.lshr43145, 16777216, !dbg !16961
  %bf.clear437 = and i32 %bf.set423, -16777217, !dbg !16961
  %bf.set438 = or i32 %bf.clear437, %or433, !dbg !16961
  store i32 %bf.set438, i32* %static_ctor_flag384, align 8, !dbg !16961
  %bf.load440 = load i64, i64* %7, align 8, !dbg !16962
  %74 = and i64 %bf.load440, 524288, !dbg !16963
  %bf.set454 = or i64 %74, %bf.load374, !dbg !16963
  store i64 %bf.set454, i64* %0, align 8, !dbg !16963
  %bf.load457 = load i32, i32* %static_ctor_flag, align 8, !dbg !16964
  %75 = and i32 %bf.load457, 524288, !dbg !16965
  %bf.set470 = or i32 %75, %bf.set438, !dbg !16965
  store i32 %bf.set470, i32* %static_ctor_flag384, align 8, !dbg !16965
  %bf.load472 = load i32, i32* %static_ctor_flag, align 8, !dbg !16966
  %bf.lshr47852 = or i32 %bf.load385, %bf.load472, !dbg !16967
  %or480 = and i32 %bf.lshr47852, 1048576, !dbg !16967
  %bf.clear484 = and i32 %bf.set470, -1048577, !dbg !16967
  %bf.set485 = or i32 %bf.clear484, %or480, !dbg !16967
  store i32 %bf.set485, i32* %static_ctor_flag384, align 8, !dbg !16967
  %bf.load487 = load i64, i64* %7, align 8, !dbg !16968
  %76 = and i64 %bf.load487, 1048576, !dbg !16969
  %bf.set501 = or i64 %76, %bf.set454, !dbg !16969
  store i64 %bf.set501, i64* %0, align 8, !dbg !16969
  %bf.load504 = load i32, i32* %static_ctor_flag, align 8, !dbg !16970
  %77 = and i32 %bf.load504, 134217728, !dbg !16971
  %bf.set517 = or i32 %77, %bf.set485, !dbg !16971
  store i32 %bf.set517, i32* %static_ctor_flag384, align 8, !dbg !16971
  %bf.load519 = load i32, i32* %static_ctor_flag, align 8, !dbg !16972
  %bf.lshr52559 = or i32 %bf.load385, %bf.load519, !dbg !16973
  %or527 = and i32 %bf.lshr52559, 131072, !dbg !16973
  %bf.clear531 = and i32 %bf.set517, -131073, !dbg !16973
  %bf.set532 = or i32 %bf.clear531, %or527, !dbg !16973
  store i32 %bf.set532, i32* %static_ctor_flag384, align 8, !dbg !16973
  br label %if.end533, !dbg !16974

if.end533:                                        ; preds = %if.then379, %if.end372
  call void @merge_weak(%union.tree_node* %newdecl, %union.tree_node* %olddecl) #6, !dbg !16975
  %bf.load535 = load i64, i64* %0, align 8, !dbg !16976
  %bf.cast53734 = and i64 %bf.load535, 65535, !dbg !16978
  %cmp538 = icmp eq i64 %bf.cast53734, 29, !dbg !16978
  br i1 %cmp538, label %if.then540, label %if.end582, !dbg !16979

if.then540:                                       ; preds = %if.end533
  %bf.load542 = load i64, i64* %7, align 8, !dbg !16980
  %bf.shl55336 = or i64 %bf.load542, -134217729, !dbg !16982
  %bf.set555 = and i64 %bf.load535, %bf.shl55336, !dbg !16982
  store i64 %bf.set555, i64* %0, align 8, !dbg !16982
  %bf.cast561 = and i64 %bf.set555, 134217728, !dbg !16983
  %bf.load563 = load i64, i64* %7, align 8, !dbg !16984
  %bf.clear566 = and i64 %bf.load563, -134217729, !dbg !16984
  %bf.set567 = or i64 %bf.clear566, %bf.cast561, !dbg !16984
  store i64 %bf.set567, i64* %7, align 8, !dbg !16984
  %tobool574 = icmp eq i64 %bf.cast561, 0, !dbg !16985
  br i1 %tobool574, label %if.then575, label %if.end582, !dbg !16987

if.then575:                                       ; preds = %if.then540
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !16988
  %78 = bitcast %union.tree_node** %name to i64**, !dbg !16988
  %79 = load i64*, i64** %78, align 8, !dbg !16988
  %bf.load578 = load i64, i64* %79, align 8, !dbg !16989
  %bf.clear579 = and i64 %bf.load578, -134217729, !dbg !16989
  store i64 %bf.clear579, i64* %79, align 8, !dbg !16989
  br label %if.end582, !dbg !16988

if.end582:                                        ; preds = %if.then540, %if.end315, %if.end533, %if.then575
  %bf.load584 = load i64, i64* %0, align 8, !dbg !16990
  %bf.cast58614 = and i64 %bf.load584, 65535, !dbg !16992
  %cmp587 = icmp ne i64 %bf.cast58614, 29, !dbg !16992
  %80 = load i32, i32* @flag_gnu89_inline, align 4, !dbg !16993
  %tobool590 = icmp ne i32 %80, 0, !dbg !16993
  %or.cond1 = or i1 %cmp587, %tobool590, !dbg !16994
  br i1 %or.cond1, label %if.end645, label %land.lhs.true591, !dbg !16994

land.lhs.true591:                                 ; preds = %if.end582
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !16995
  %bf.load593 = load i32, i32* %declared_inline_flag, align 8, !dbg !16995
  %bf.clear595 = and i32 %bf.load593, 2097152, !dbg !16995
  %tobool596 = icmp eq i32 %bf.clear595, 0, !dbg !16995
  br i1 %tobool596, label %lor.lhs.false597, label %land.lhs.true604, !dbg !16996

lor.lhs.false597:                                 ; preds = %land.lhs.true591
  %declared_inline_flag599 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !16997
  %bf.load600 = load i32, i32* %declared_inline_flag599, align 8, !dbg !16997
  %bf.clear602 = and i32 %bf.load600, 2097152, !dbg !16997
  %tobool603 = icmp eq i32 %bf.clear602, 0, !dbg !16997
  br i1 %tobool603, label %if.end645, label %land.lhs.true604, !dbg !16998

land.lhs.true604:                                 ; preds = %lor.lhs.false597, %land.lhs.true591
  br i1 %tobool596, label %land.lhs.true625, label %lor.lhs.false611, !dbg !16999

lor.lhs.false611:                                 ; preds = %land.lhs.true604
  %declared_inline_flag613 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17000
  %bf.load614 = load i32, i32* %declared_inline_flag613, align 8, !dbg !17000
  %bf.clear616 = and i32 %bf.load614, 2097152, !dbg !17000
  %tobool617 = icmp eq i32 %bf.clear616, 0, !dbg !17000
  br i1 %tobool617, label %land.lhs.true625, label %lor.lhs.false618, !dbg !17001

lor.lhs.false618:                                 ; preds = %lor.lhs.false611
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17002
  %81 = bitcast i40* %decl_flag_1 to i64*, !dbg !17002
  %bf.load620 = load i64, i64* %81, align 8, !dbg !17002
  %bf.cast62332 = and i64 %bf.load620, 33554432, !dbg !17002
  %tobool624 = icmp eq i64 %bf.cast62332, 0, !dbg !17002
  br i1 %tobool624, label %land.lhs.true625, label %if.end645, !dbg !17003

land.lhs.true625:                                 ; preds = %lor.lhs.false618, %lor.lhs.false611, %land.lhs.true604
  %decl_flag_1627 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17004
  %82 = bitcast i40* %decl_flag_1627 to i64*, !dbg !17004
  %bf.load628 = load i64, i64* %82, align 8, !dbg !17004
  %bf.cast63131 = and i64 %bf.load628, 33554432, !dbg !17004
  %tobool632 = icmp eq i64 %bf.cast63131, 0, !dbg !17004
  br i1 %tobool632, label %if.end645, label %land.lhs.true633, !dbg !17005

land.lhs.true633:                                 ; preds = %land.lhs.true625
  %83 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !17006
  %call636 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %union.tree_node* %83) #6, !dbg !17007
  %tobool637 = icmp ne %union.tree_node* %call636, null, !dbg !17007
  %84 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !17008
  %tobool639 = icmp ne %union.tree_node* %84, null, !dbg !17008
  %or.cond2 = or i1 %tobool637, %tobool639, !dbg !17009
  br i1 %or.cond2, label %if.end645, label %if.then640, !dbg !17009

if.then640:                                       ; preds = %land.lhs.true633
  %bf.load643 = load i64, i64* %82, align 8, !dbg !17010
  %bf.clear644 = and i64 %bf.load643, -33554433, !dbg !17010
  store i64 %bf.clear644, i64* %82, align 8, !dbg !17010
  br label %if.end645, !dbg !17011

if.end645:                                        ; preds = %lor.lhs.false618, %land.lhs.true625, %lor.lhs.false597, %if.end582, %if.then640, %land.lhs.true633
  %decl_flag_1647 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17012
  %85 = bitcast i40* %decl_flag_1647 to i64*, !dbg !17012
  %bf.load648 = load i64, i64* %85, align 8, !dbg !17012
  %bf.cast65115 = and i64 %bf.load648, 33554432, !dbg !17012
  %tobool652 = icmp eq i64 %bf.cast65115, 0, !dbg !17012
  br i1 %tobool652, label %if.else715, label %if.then653, !dbg !17014

if.then653:                                       ; preds = %if.end645
  %bf.load655 = load i64, i64* %7, align 8, !dbg !17015
  %bf.cast658 = and i64 %bf.load655, 67108864, !dbg !17015
  %bf.load660 = load i64, i64* %0, align 8, !dbg !17017
  %bf.clear663 = and i64 %bf.load660, -67108865, !dbg !17017
  %bf.set664 = or i64 %bf.clear663, %bf.cast658, !dbg !17017
  store i64 %bf.set664, i64* %0, align 8, !dbg !17017
  %decl_flag_1667 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17018
  %86 = bitcast i40* %decl_flag_1667 to i64*, !dbg !17018
  %bf.load668 = load i64, i64* %86, align 8, !dbg !17018
  %bf.cast671 = and i64 %bf.load668, 33554432, !dbg !17018
  %bf.clear677 = and i64 %bf.load648, -33554433, !dbg !17019
  %bf.set678 = or i64 %bf.clear677, %bf.cast671, !dbg !17019
  store i64 %bf.set678, i64* %85, align 8, !dbg !17019
  %bf.load681 = load i64, i64* %7, align 8, !dbg !17020
  %bf.cast684 = and i64 %bf.load681, 134217728, !dbg !17020
  %bf.clear689 = and i64 %bf.set664, -134217729, !dbg !17021
  %bf.set690 = or i64 %bf.clear689, %bf.cast684, !dbg !17021
  store i64 %bf.set690, i64* %0, align 8, !dbg !17021
  %tobool698 = icmp eq i64 %bf.cast671, 0, !dbg !17022
  br i1 %tobool698, label %if.then699, label %if.end740, !dbg !17024

if.then699:                                       ; preds = %if.then653
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !17025
  %87 = bitcast %union.tree_node** %context to i64*, !dbg !17025
  %88 = load i64, i64* %87, align 8, !dbg !17025
  %context702 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !17027
  %89 = bitcast %union.tree_node** %context702 to i64*, !dbg !17028
  store i64 %88, i64* %89, align 8, !dbg !17028
  %common_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !17029
  %90 = bitcast i24* %common_flag to i32*, !dbg !17029
  %bf.load704 = load i32, i32* %90, align 8, !dbg !17029
  %bf.clear706 = and i32 %bf.load704, 8, !dbg !17029
  %common_flag708 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !17030
  %91 = bitcast i24* %common_flag708 to i32*, !dbg !17030
  %bf.load709 = load i32, i32* %91, align 8, !dbg !17031
  %bf.clear712 = and i32 %bf.load709, -9, !dbg !17031
  %bf.set713 = or i32 %bf.clear712, %bf.clear706, !dbg !17031
  store i32 %bf.set713, i32* %91, align 8, !dbg !17031
  br label %if.end740, !dbg !17032

if.else715:                                       ; preds = %if.end645
  %bf.load717 = load i64, i64* %0, align 8, !dbg !17033
  %bf.cast720 = and i64 %bf.load717, 67108864, !dbg !17033
  %bf.load722 = load i64, i64* %7, align 8, !dbg !17035
  %bf.clear725 = and i64 %bf.load722, -67108865, !dbg !17035
  %bf.set726 = or i64 %bf.clear725, %bf.cast720, !dbg !17035
  store i64 %bf.set726, i64* %7, align 8, !dbg !17035
  %bf.load729 = load i64, i64* %0, align 8, !dbg !17036
  %bf.cast732 = and i64 %bf.load729, 134217728, !dbg !17036
  %bf.clear737 = and i64 %bf.set726, -134217729, !dbg !17037
  %bf.set738 = or i64 %bf.clear737, %bf.cast732, !dbg !17037
  store i64 %bf.set738, i64* %7, align 8, !dbg !17037
  %bf.load742.pre = load i64, i64* %0, align 8, !dbg !17038
  br label %if.end740

if.end740:                                        ; preds = %if.then653, %if.then699, %if.else715
  %bf.load742 = phi i64 [ %bf.set690, %if.then653 ], [ %bf.set690, %if.then699 ], [ %bf.load742.pre, %if.else715 ], !dbg !17038
  %bf.cast74416 = and i64 %bf.load742, 65535, !dbg !17039
  %cmp745 = icmp eq i64 %bf.cast74416, 29, !dbg !17039
  br i1 %cmp745, label %if.then747, label %if.end953, !dbg !17040

if.then747:                                       ; preds = %if.end740
  br i1 %2, label %land.lhs.true750, label %if.else759, !dbg !17041

land.lhs.true750:                                 ; preds = %if.then747
  %initial752 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !17043
  %92 = load %union.tree_node*, %union.tree_node** %initial752, align 8, !dbg !17043
  %tobool753 = icmp eq %union.tree_node* %92, null, !dbg !17043
  br i1 %tobool753, label %if.else759, label %if.then754, !dbg !17044

if.then754:                                       ; preds = %land.lhs.true750
  %uninlinable = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !17045
  %bf.load756 = load i32, i32* %uninlinable, align 8, !dbg !17046
  %bf.set758 = or i32 %bf.load756, 32768, !dbg !17046
  store i32 %bf.set758, i32* %uninlinable, align 8, !dbg !17046
  br label %if.end834, !dbg !17045

if.else759:                                       ; preds = %land.lhs.true750, %if.then747
  %declared_inline_flag761 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !17047
  %bf.load762 = load i32, i32* %declared_inline_flag761, align 8, !dbg !17047
  %bf.clear764 = and i32 %bf.load762, 2097152, !dbg !17047
  %tobool765 = icmp eq i32 %bf.clear764, 0, !dbg !17047
  br i1 %tobool765, label %lor.lhs.false766, label %if.then773, !dbg !17050

lor.lhs.false766:                                 ; preds = %if.else759
  %declared_inline_flag768 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17051
  %bf.load769 = load i32, i32* %declared_inline_flag768, align 8, !dbg !17051
  %bf.clear771 = and i32 %bf.load769, 2097152, !dbg !17051
  %tobool772 = icmp eq i32 %bf.clear771, 0, !dbg !17051
  br i1 %tobool772, label %if.end779, label %if.then773, !dbg !17052

if.then773:                                       ; preds = %lor.lhs.false766, %if.else759
  %bf.set778 = or i32 %bf.load762, 2097152, !dbg !17053
  store i32 %bf.set778, i32* %declared_inline_flag761, align 8, !dbg !17053
  br label %if.end779, !dbg !17054

if.end779:                                        ; preds = %lor.lhs.false766, %if.then773
  %bf.load782 = phi i32 [ %bf.load762, %lor.lhs.false766 ], [ %bf.set778, %if.then773 ], !dbg !17055
  %93 = trunc i32 %bf.load782 to i16, !dbg !17055
  %tobool785 = icmp slt i16 %93, 0, !dbg !17055
  br i1 %tobool785, label %if.end779.lor.end_crit_edge, label %lor.rhs, !dbg !17056

if.end779.lor.end_crit_edge:                      ; preds = %if.end779
  %uninlinable793.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17057
  %bf.load794.pre = load i32, i32* %uninlinable793.phi.trans.insert, align 8, !dbg !17058
  br label %lor.end, !dbg !17056

lor.rhs:                                          ; preds = %if.end779
  %uninlinable787 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17059
  %bf.load788 = load i32, i32* %uninlinable787, align 8, !dbg !17059
  %94 = trunc i32 %bf.load788 to i16, !dbg !17056
  %tobool791 = icmp slt i16 %94, 0, !dbg !17056
  br label %lor.end, !dbg !17056

lor.end:                                          ; preds = %if.end779.lor.end_crit_edge, %lor.rhs
  %bf.load794 = phi i32 [ %bf.load794.pre, %if.end779.lor.end_crit_edge ], [ %bf.load788, %lor.rhs ], !dbg !17058
  %95 = phi i1 [ true, %if.end779.lor.end_crit_edge ], [ %tobool791, %lor.rhs ]
  %lor.ext = zext i1 %95 to i32, !dbg !17056
  %uninlinable793 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17060
  %bf.shl796 = shl nuw nsw i32 %lor.ext, 15, !dbg !17058
  %bf.clear797 = and i32 %bf.load794, -32769, !dbg !17058
  %bf.set798 = or i32 %bf.clear797, %bf.shl796, !dbg !17058
  store i32 %bf.set798, i32* %uninlinable793, align 8, !dbg !17058
  %bf.load801 = load i32, i32* %declared_inline_flag761, align 8, !dbg !17061
  %bf.clear804 = and i32 %bf.load801, -32769, !dbg !17061
  %bf.set805 = or i32 %bf.clear804, %bf.shl796, !dbg !17061
  store i32 %bf.set805, i32* %declared_inline_flag761, align 8, !dbg !17061
  %bf.clear809 = and i32 %bf.load801, 67108864, !dbg !17062
  %tobool810 = icmp eq i32 %bf.clear809, 0, !dbg !17062
  br i1 %tobool810, label %lor.rhs811, label %lor.end.lor.end818_crit_edge, !dbg !17063

lor.end.lor.end818_crit_edge:                     ; preds = %lor.end
  %bf.load822.pre = load i32, i32* %uninlinable793, align 8, !dbg !17064
  br label %lor.end818, !dbg !17063

lor.rhs811:                                       ; preds = %lor.end
  %bf.load814 = load i32, i32* %uninlinable793, align 8, !dbg !17065
  %bf.clear816 = and i32 %bf.load814, 67108864, !dbg !17065
  %tobool817 = icmp ne i32 %bf.clear816, 0, !dbg !17063
  br label %lor.end818, !dbg !17063

lor.end818:                                       ; preds = %lor.end.lor.end818_crit_edge, %lor.rhs811
  %bf.load822 = phi i32 [ %bf.load822.pre, %lor.end.lor.end818_crit_edge ], [ %bf.load814, %lor.rhs811 ], !dbg !17064
  %96 = phi i1 [ true, %lor.end.lor.end818_crit_edge ], [ %tobool817, %lor.rhs811 ]
  %lor.ext819 = zext i1 %96 to i32, !dbg !17063
  %bf.shl824 = shl nuw nsw i32 %lor.ext819, 26, !dbg !17064
  %bf.clear825 = and i32 %bf.load822, -67108865, !dbg !17064
  %bf.set826 = or i32 %bf.clear825, %bf.shl824, !dbg !17064
  store i32 %bf.set826, i32* %uninlinable793, align 8, !dbg !17064
  %bf.load829 = load i32, i32* %declared_inline_flag761, align 8, !dbg !17066
  %bf.clear832 = and i32 %bf.load829, -67108865, !dbg !17066
  %bf.set833 = or i32 %bf.clear832, %bf.shl824, !dbg !17066
  store i32 %bf.set833, i32* %declared_inline_flag761, align 8, !dbg !17066
  br label %if.end834

if.end834:                                        ; preds = %lor.end818, %if.then754
  %bf.load849 = phi i32 [ %bf.set833, %lor.end818 ], [ %bf.set758, %if.then754 ]
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 5, !dbg !17067
  %bf.load836 = load i32, i32* %built_in_class, align 8, !dbg !17067
  %bf.clear838 = and i32 %bf.load836, 6144, !dbg !17067
  %cmp839 = icmp eq i32 %bf.clear838, 0, !dbg !17067
  br i1 %cmp839, label %if.end890, label %if.then841, !dbg !17069

if.then841:                                       ; preds = %if.end834
  %built_in_class848 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 5, !dbg !17070
  %bf.clear852 = and i32 %bf.load849, -6145, !dbg !17072
  %bf.set853 = or i32 %bf.clear852, %bf.clear838, !dbg !17072
  store i32 %bf.set853, i32* %built_in_class848, align 8, !dbg !17072
  %bf.load855 = load i32, i32* %built_in_class, align 8, !dbg !17073
  %bf.clear856 = and i32 %bf.load855, 2047, !dbg !17073
  %bf.clear861 = and i32 %bf.set853, -2048, !dbg !17074
  %bf.set862 = or i32 %bf.clear861, %bf.clear856, !dbg !17074
  store i32 %bf.set862, i32* %built_in_class848, align 8, !dbg !17074
  %bf.load865 = load i64, i64* %85, align 8, !dbg !17075
  %bf.set867 = or i64 %bf.load865, 262144, !dbg !17075
  store i64 %bf.set867, i64* %85, align 8, !dbg !17075
  br i1 %6, label %if.then869, label %if.else874, !dbg !17076

if.then869:                                       ; preds = %if.then841
  %bf.clear873 = and i64 %bf.set867, -2097153, !dbg !17077
  store i64 %bf.clear873, i64* %85, align 8, !dbg !17077
  br label %if.end890, !dbg !17079

if.else874:                                       ; preds = %if.then841
  %lang_flag_6876 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17080
  %97 = bitcast i40* %lang_flag_6876 to i64*, !dbg !17080
  %bf.load877 = load i64, i64* %97, align 8, !dbg !17080
  %bf.cast880 = and i64 %bf.load877, 2097152, !dbg !17080
  %bf.clear886 = and i64 %bf.set867, -2097153, !dbg !17081
  %bf.set887 = or i64 %bf.clear886, %bf.cast880, !dbg !17081
  store i64 %bf.set887, i64* %85, align 8, !dbg !17081
  br label %if.end890

if.end890:                                        ; preds = %if.end834, %if.then869, %if.else874
  %function_specific_target = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 3, !dbg !17082
  %98 = load %union.tree_node*, %union.tree_node** %function_specific_target, align 8, !dbg !17082
  %tobool892 = icmp eq %union.tree_node* %98, null, !dbg !17082
  %99 = ptrtoint %union.tree_node* %98 to i64, !dbg !17084
  br i1 %tobool892, label %if.end902, label %land.lhs.true893, !dbg !17084

land.lhs.true893:                                 ; preds = %if.end890
  %function_specific_target895 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 3, !dbg !17085
  %100 = load %union.tree_node*, %union.tree_node** %function_specific_target895, align 8, !dbg !17085
  %tobool896 = icmp eq %union.tree_node* %100, null, !dbg !17085
  br i1 %tobool896, label %if.then897, label %if.end902, !dbg !17086

if.then897:                                       ; preds = %land.lhs.true893
  %101 = bitcast %union.tree_node** %function_specific_target895 to i64*, !dbg !17087
  store i64 %99, i64* %101, align 8, !dbg !17087
  br label %if.end902, !dbg !17088

if.end902:                                        ; preds = %land.lhs.true893, %if.end890, %if.then897
  %function_specific_optimization = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 4, !dbg !17089
  %102 = load %union.tree_node*, %union.tree_node** %function_specific_optimization, align 8, !dbg !17089
  %tobool904 = icmp eq %union.tree_node* %102, null, !dbg !17089
  %103 = ptrtoint %union.tree_node* %102 to i64, !dbg !17091
  br i1 %tobool904, label %if.end914, label %land.lhs.true905, !dbg !17091

land.lhs.true905:                                 ; preds = %if.end902
  %function_specific_optimization907 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 4, !dbg !17092
  %104 = load %union.tree_node*, %union.tree_node** %function_specific_optimization907, align 8, !dbg !17092
  %tobool908 = icmp eq %union.tree_node* %104, null, !dbg !17092
  br i1 %tobool908, label %if.then909, label %if.end914, !dbg !17093

if.then909:                                       ; preds = %land.lhs.true905
  %105 = bitcast %union.tree_node** %function_specific_optimization907 to i64*, !dbg !17094
  store i64 %103, i64* %105, align 8, !dbg !17094
  br label %if.end914, !dbg !17095

if.end914:                                        ; preds = %land.lhs.true905, %if.end902, %if.then909
  br i1 %2, label %if.end953, label %if.then916, !dbg !17096

if.then916:                                       ; preds = %if.end914
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 3, !dbg !17097
  %106 = bitcast %union.tree_node** %result to i64*, !dbg !17097
  %107 = load i64, i64* %106, align 8, !dbg !17097
  %result918 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 3, !dbg !17098
  %108 = bitcast %union.tree_node** %result918 to i64*, !dbg !17099
  store i64 %107, i64* %108, align 8, !dbg !17099
  %initial920 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !17100
  %109 = bitcast %union.tree_node** %initial920 to i64*, !dbg !17100
  %110 = load i64, i64* %109, align 8, !dbg !17100
  %111 = bitcast %union.tree_node** %initial277 to i64*, !dbg !17101
  store i64 %110, i64* %111, align 8, !dbg !17101
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 1, !dbg !17102
  %112 = bitcast %struct.function** %f to i64*, !dbg !17102
  %113 = load i64, i64* %112, align 8, !dbg !17102
  %f925 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 1, !dbg !17103
  %114 = bitcast %struct.function** %f925 to i64*, !dbg !17104
  store i64 %113, i64* %114, align 8, !dbg !17104
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 1, !dbg !17105
  %115 = bitcast %union.tree_node** %saved_tree to i64*, !dbg !17105
  %116 = load i64, i64* %115, align 8, !dbg !17105
  %saved_tree928 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 1, !dbg !17106
  %117 = bitcast %union.tree_node** %saved_tree928 to i64*, !dbg !17107
  store i64 %116, i64* %117, align 8, !dbg !17107
  %call929 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %olddecl) #6, !dbg !17108
  call void @gimple_set_body(%union.tree_node* %newdecl, %struct.gimple_seq_d* %call929) #6, !dbg !17109
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 2, !dbg !17110
  %118 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !17110
  %call931 = call %union.tree_node* @copy_list(%union.tree_node* %118) #6, !dbg !17111
  %arguments933 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 2, !dbg !17112
  store %union.tree_node* %call931, %union.tree_node** %arguments933, align 8, !dbg !17113
  call void @llvm.dbg.value(metadata %union.tree_node* %call931, metadata !16747, metadata !DIExpression()), !dbg !17114
  br label %for.cond936, !dbg !17115

for.cond936:                                      ; preds = %for.body938, %if.then916
  %t.0 = phi %union.tree_node* [ %call931, %if.then916 ], [ %119, %for.body938 ], !dbg !17117
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !16747, metadata !DIExpression()), !dbg !17114
  %tobool937 = icmp eq %union.tree_node* %t.0, null, !dbg !17118
  br i1 %tobool937, label %for.end943, label %for.body938, !dbg !17118

for.body938:                                      ; preds = %for.cond936
  %context940 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !17119
  store %union.tree_node* %newdecl, %union.tree_node** %context940, align 8, !dbg !17121
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17122
  %119 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !17122
  call void @llvm.dbg.value(metadata %union.tree_node* %119, metadata !16747, metadata !DIExpression()), !dbg !17114
  br label %for.cond936, !dbg !17123, !llvm.loop !17124

for.end943:                                       ; preds = %for.cond936
  %120 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !17126
  %tobool946 = icmp eq %union.tree_node* %120, null, !dbg !17126
  br i1 %tobool946, label %if.end953, label %if.then947, !dbg !17128

if.then947:                                       ; preds = %for.end943
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !17129
  %121 = bitcast %union.tree_node** %abstract_origin to i64*, !dbg !17129
  %122 = load i64, i64* %121, align 8, !dbg !17129
  %abstract_origin950 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !17130
  %123 = bitcast %union.tree_node** %abstract_origin950 to i64*, !dbg !17131
  store i64 %122, i64* %123, align 8, !dbg !17131
  br label %if.end953, !dbg !17130

if.end953:                                        ; preds = %for.end943, %if.end914, %if.then947, %if.end740
  %decl_flag_1955 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17132
  %124 = bitcast i40* %decl_flag_1955 to i64*, !dbg !17132
  %bf.load956 = load i64, i64* %124, align 8, !dbg !17132
  %bf.cast95917 = and i64 %bf.load956, 33554432, !dbg !17132
  %tobool960 = icmp eq i64 %bf.cast95917, 0, !dbg !17132
  br i1 %tobool960, label %land.end969, label %land.rhs961, !dbg !17133

land.rhs961:                                      ; preds = %if.end953
  %bf.load964 = load i64, i64* %85, align 8, !dbg !17134
  %bf.cast96729 = lshr i64 %bf.load964, 25
  %125 = trunc i64 %bf.cast96729 to i32
  %126 = and i32 %125, 1
  %127 = xor i32 %126, 1
  br label %land.end969

land.end969:                                      ; preds = %if.end953, %land.rhs961
  %128 = phi i32 [ 0, %if.end953 ], [ %127, %land.rhs961 ]
  %bf.load973 = load i64, i64* %7, align 8, !dbg !17135
  %bf.cast97618 = and i64 %bf.load973, 16777216, !dbg !17135
  %tobool977 = icmp eq i64 %bf.cast97618, 0, !dbg !17135
  %bf.load980 = load i64, i64* %0, align 8, !dbg !17137
  br i1 %tobool977, label %if.else983, label %if.then978, !dbg !17138

if.then978:                                       ; preds = %land.end969
  %bf.set982 = or i64 %bf.load980, 16777216, !dbg !17139
  store i64 %bf.set982, i64* %0, align 8, !dbg !17139
  %bf.load998.pre = load i64, i64* %124, align 8, !dbg !17140
  br label %if.end996, !dbg !17142

if.else983:                                       ; preds = %land.end969
  %bf.cast98819 = and i64 %bf.load980, 16777216, !dbg !17143
  %tobool989 = icmp eq i64 %bf.cast98819, 0, !dbg !17143
  br i1 %tobool989, label %if.end996, label %if.then990, !dbg !17145

if.then990:                                       ; preds = %if.else983
  %bf.set994 = or i64 %bf.load973, 16777216, !dbg !17146
  store i64 %bf.set994, i64* %7, align 8, !dbg !17146
  br label %if.end996, !dbg !17147

if.end996:                                        ; preds = %if.else983, %if.then990, %if.then978
  %bf.load1020 = phi i64 [ %bf.load956, %if.else983 ], [ %bf.load956, %if.then990 ], [ %bf.load998.pre, %if.then978 ], !dbg !17140
  %bf.cast100120 = and i64 %bf.load1020, 8192, !dbg !17140
  %tobool1002 = icmp eq i64 %bf.cast100120, 0, !dbg !17140
  %bf.load1006 = load i64, i64* %85, align 8, !dbg !17148
  br i1 %tobool1002, label %if.else1009, label %if.then1003, !dbg !17149

if.then1003:                                      ; preds = %if.end996
  %bf.set1008 = or i64 %bf.load1006, 8192, !dbg !17150
  store i64 %bf.set1008, i64* %85, align 8, !dbg !17150
  br label %if.end1024, !dbg !17151

if.else1009:                                      ; preds = %if.end996
  %bf.cast101521 = and i64 %bf.load1006, 8192, !dbg !17152
  %tobool1016 = icmp eq i64 %bf.cast101521, 0, !dbg !17152
  br i1 %tobool1016, label %if.end1024, label %if.then1017, !dbg !17154

if.then1017:                                      ; preds = %if.else1009
  %bf.set1022 = or i64 %bf.load1020, 8192, !dbg !17155
  store i64 %bf.set1022, i64* %124, align 8, !dbg !17155
  br label %if.end1024, !dbg !17156

if.end1024:                                       ; preds = %if.else1009, %if.then1017, %if.then1003
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17157
  %129 = load i32, i32* %uid, align 4, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %129, metadata !16752, metadata !DIExpression()), !dbg !17158
  %context1027 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !17159
  %130 = bitcast %union.tree_node** %context1027 to i64*, !dbg !17159
  %131 = load i64, i64* %130, align 8, !dbg !17159
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !16755, metadata !DIExpression()), !dbg !17158
  %bf.load1029 = load i64, i64* %7, align 8, !dbg !17160
  %bf.cast103122 = and i64 %bf.load1029, 65535, !dbg !17162
  %cmp1032 = icmp eq i64 %bf.cast103122, 29, !dbg !17162
  br i1 %cmp1032, label %if.then1034, label %if.end1037, !dbg !17163

if.then1034:                                      ; preds = %if.end1024
  %arguments1036 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 2, !dbg !17164
  %132 = load %union.tree_node*, %union.tree_node** %arguments1036, align 8, !dbg !17164
  call void @llvm.dbg.value(metadata %union.tree_node* %132, metadata !16755, metadata !DIExpression()), !dbg !17158
  br label %if.end1037, !dbg !17165

if.end1037:                                       ; preds = %if.then1034, %if.end1024
  %olddecl_arguments.0 = phi %union.tree_node* [ %132, %if.then1034 ], [ null, %if.end1024 ], !dbg !17158
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl_arguments.0, metadata !16755, metadata !DIExpression()), !dbg !17158
  %add.ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17166
  %133 = bitcast i32* %add.ptr to i8*, !dbg !17166
  %add.ptr1038 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17167
  %134 = bitcast i32* %add.ptr1038 to i8*, !dbg !17167
  %call1039 = call i8* @memcpy(i8* nonnull %133, i8* nonnull %134, i64 88) #6, !dbg !17168
  %bf.load1041 = load i64, i64* %7, align 8, !dbg !17169
  %135 = trunc i64 %bf.load1041 to i16, !dbg !17169
  switch i16 %135, label %sw.default [
    i16 29, label %sw.bb
    i16 31, label %sw.bb1045
    i16 32, label %sw.bb1045
    i16 34, label %sw.bb1045
    i16 30, label %sw.bb1045
    i16 36, label %sw.bb1045
    i16 33, label %sw.bb1045
    i16 35, label %sw.bb1045
  ], !dbg !17170

sw.bb:                                            ; preds = %if.end1037
  %call1044 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %newdecl) #6, !dbg !17171
  call void @gimple_set_body(%union.tree_node* %olddecl, %struct.gimple_seq_d* %call1044) #6, !dbg !17173
  %bf.load1049.pre = load i64, i64* %7, align 8, !dbg !17174
  br label %sw.bb1045, !dbg !17173

sw.bb1045:                                        ; preds = %if.end1037, %if.end1037, %if.end1037, %if.end1037, %if.end1037, %if.end1037, %if.end1037, %sw.bb
  %bf.load1049 = phi i64 [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1041, %if.end1037 ], [ %bf.load1049.pre, %sw.bb ], !dbg !17174
  %add.ptr1046 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17175
  %136 = bitcast %struct.rtx_def** %add.ptr1046 to i8*, !dbg !17175
  %add.ptr1047 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17176
  %137 = bitcast %struct.rtx_def** %add.ptr1047 to i8*, !dbg !17176
  %138 = trunc i64 %bf.load1049 to i32, !dbg !17174
  %bf.cast1051 = and i32 %138, 65535, !dbg !17174
  %call1052 = call i64 @tree_code_size(i32 %bf.cast1051) #6, !dbg !17177
  %sub = add i64 %call1052, -112, !dbg !17178
  %call1053 = call i8* @memcpy(i8* nonnull %136, i8* nonnull %137, i64 %sub) #6, !dbg !17179
  br label %sw.epilog, !dbg !17180

sw.default:                                       ; preds = %if.end1037
  %add.ptr1054 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17181
  %139 = bitcast %struct.rtx_def** %add.ptr1054 to i8*, !dbg !17181
  %add.ptr1055 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17182
  %140 = bitcast %struct.rtx_def** %add.ptr1055 to i8*, !dbg !17182
  %call1056 = call i8* @memcpy(i8* nonnull %139, i8* nonnull %140, i64 72) #6, !dbg !17183
  br label %sw.epilog, !dbg !17184

sw.epilog:                                        ; preds = %sw.default, %sw.bb1045
  store i32 %129, i32* %uid, align 4, !dbg !17185
  store i64 %131, i64* %130, align 8, !dbg !17186
  %bf.load1062 = load i64, i64* %7, align 8, !dbg !17187
  %bf.cast106423 = and i64 %bf.load1062, 65535, !dbg !17189
  %cmp1065 = icmp eq i64 %bf.cast106423, 29, !dbg !17189
  br i1 %cmp1065, label %if.then1067, label %if.end1070, !dbg !17190

if.then1067:                                      ; preds = %sw.epilog
  %arguments1069 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 2, !dbg !17191
  store %union.tree_node* %olddecl_arguments.0, %union.tree_node** %arguments1069, align 8, !dbg !17192
  br label %if.end1070, !dbg !17191

if.end1070:                                       ; preds = %if.then1067, %sw.epilog
  %arrayidx1077 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast106423, i64 11, !dbg !17193
  %141 = load i8, i8* %arrayidx1077, align 1, !dbg !17193
  %tobool1079 = icmp eq i8 %141, 0, !dbg !17193
  br i1 %tobool1079, label %if.end1107, label %land.lhs.true1080, !dbg !17193

land.lhs.true1080:                                ; preds = %if.end1070
  %rtl1082 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17193
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtl1082, align 8, !dbg !17193
  %cmp1083 = icmp eq %struct.rtx_def* %142, null, !dbg !17193
  br i1 %cmp1083, label %if.end1107, label %land.lhs.true1085, !dbg !17195

land.lhs.true1085:                                ; preds = %land.lhs.true1080
  br i1 %cmp1065, label %if.then1106, label %lor.lhs.false1092, !dbg !17196

lor.lhs.false1092:                                ; preds = %land.lhs.true1085
  %cmp1097 = icmp eq i64 %bf.cast106423, 32, !dbg !17197
  br i1 %cmp1097, label %land.lhs.true1099, label %if.end1107, !dbg !17198

land.lhs.true1099:                                ; preds = %lor.lhs.false1092
  %bf.cast110428 = and i64 %bf.load1062, 67108864, !dbg !17199
  %tobool1105 = icmp eq i64 %bf.cast110428, 0, !dbg !17199
  br i1 %tobool1105, label %if.end1107, label %if.then1106, !dbg !17200

if.then1106:                                      ; preds = %land.lhs.true1099, %land.lhs.true1085
  call void @make_decl_rtl(%union.tree_node* %olddecl) #6, !dbg !17201
  br label %if.end1107, !dbg !17201

if.end1107:                                       ; preds = %land.lhs.true1099, %land.lhs.true1080, %if.end1070, %if.then1106, %lor.lhs.false1092
  %tobool1109 = icmp eq i32 %128, 0, !dbg !17202
  %or.cond3 = or i1 %tobool1109, %2, !dbg !17204
  br i1 %or.cond3, label %if.end1124, label %land.lhs.true1112, !dbg !17204

land.lhs.true1112:                                ; preds = %if.end1107
  %bf.load1114 = load i64, i64* %7, align 8, !dbg !17205
  %bf.cast111625 = and i64 %bf.load1114, 65535, !dbg !17206
  %cmp1117 = icmp eq i64 %bf.cast111625, 29, !dbg !17206
  br i1 %cmp1117, label %land.lhs.true1119, label %if.end1124, !dbg !17207

land.lhs.true1119:                                ; preds = %land.lhs.true1112
  %initial1121 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !17208
  %143 = load %union.tree_node*, %union.tree_node** %initial1121, align 8, !dbg !17208
  %tobool1122 = icmp eq %union.tree_node* %143, null, !dbg !17208
  br i1 %tobool1122, label %if.end1124, label %if.then1123, !dbg !17209

if.then1123:                                      ; preds = %land.lhs.true1119
  call void @cgraph_mark_if_needed(%union.tree_node* %olddecl) #6, !dbg !17210
  br label %if.end1124, !dbg !17210

if.end1124:                                       ; preds = %land.lhs.true1119, %if.end1107, %if.then1123, %land.lhs.true1112
  ret void, !dbg !17211
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @match_builtin_function_types(%union.tree_node* %newtype, %union.tree_node* %oldtype) unnamed_addr #5 !dbg !17212 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype, metadata !17216, metadata !DIExpression()), !dbg !17224
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype, metadata !17217, metadata !DIExpression()), !dbg !17224
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17225
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !17225
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !17219, metadata !DIExpression()), !dbg !17224
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17226
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !17226
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !17218, metadata !DIExpression()), !dbg !17224
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17227
  %bf.load = load i64, i64* %2, align 8, !dbg !17227
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !17227
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !17227
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17227

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !17227
  br label %cond.end, !dbg !17227

cond.false:                                       ; preds = %entry
  %type3 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !17227
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i64 0, i32 6, !dbg !17227
  %bf.load4 = load i32, i32* %mode, align 4, !dbg !17227
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !17227
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !17227
  br label %cond.end, !dbg !17227

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear5, %cond.false ], !dbg !17227
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17229
  %bf.load7 = load i64, i64* %3, align 8, !dbg !17229
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !17229
  %cmp10 = icmp eq i64 %bf.cast92, 14, !dbg !17229
  br i1 %cmp10, label %cond.true11, label %cond.false13, !dbg !17229

cond.true11:                                      ; preds = %cond.end
  %call12 = tail call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !17229
  br label %cond.end19, !dbg !17229

cond.false13:                                     ; preds = %cond.end
  %type14 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !17229
  %mode15 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !17229
  %bf.load16 = load i32, i32* %mode15, align 4, !dbg !17229
  %bf.lshr17 = lshr i32 %bf.load16, 16, !dbg !17229
  %bf.clear18 = and i32 %bf.lshr17, 255, !dbg !17229
  br label %cond.end19, !dbg !17229

cond.end19:                                       ; preds = %cond.false13, %cond.true11
  %cond20 = phi i32 [ %call12, %cond.true11 ], [ %bf.clear18, %cond.false13 ], !dbg !17229
  %cmp21 = icmp eq i32 %cond, %cond20, !dbg !17230
  br i1 %cmp21, label %if.end, label %cleanup, !dbg !17231

if.end:                                           ; preds = %cond.end19
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17232
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !17232
  %values24 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17233
  %5 = bitcast i32* %values24 to %union.tree_node**, !dbg !17233
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !17233
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !17220, metadata !DIExpression()), !dbg !17224
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !17223, metadata !DIExpression()), !dbg !17224
  br label %while.cond, !dbg !17234

while.cond:                                       ; preds = %if.end79, %if.end
  %newargs.0 = phi %union.tree_node* [ %6, %if.end ], [ %14, %if.end79 ], !dbg !17224
  %oldargs.0.in = phi %union.tree_node** [ %4, %if.end ], [ %chain, %if.end79 ]
  %oldargs.0 = load %union.tree_node*, %union.tree_node** %oldargs.0.in, align 8, !dbg !17224
  call void @llvm.dbg.value(metadata %union.tree_node* %oldargs.0, metadata !17221, metadata !DIExpression()), !dbg !17224
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0, metadata !17220, metadata !DIExpression()), !dbg !17224
  %tobool = icmp ne %union.tree_node* %oldargs.0, null, !dbg !17235
  %tobool25 = icmp ne %union.tree_node* %newargs.0, null, !dbg !17236
  %spec.select = or i1 %tobool25, %tobool, !dbg !17236
  br i1 %spec.select, label %while.body, label %while.end, !dbg !17234

while.body:                                       ; preds = %while.cond
  %or.cond = and i1 %tobool, %tobool25, !dbg !17237
  br i1 %or.cond, label %lor.lhs.false28, label %cleanup.loopexit, !dbg !17237

lor.lhs.false28:                                  ; preds = %while.body
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %oldargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17240
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !17240
  %tobool29 = icmp eq %union.tree_node* %8, null, !dbg !17240
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17241
  br i1 %tobool29, label %cleanup.loopexit, label %lor.lhs.false30, !dbg !17241

lor.lhs.false30:                                  ; preds = %lor.lhs.false28
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %newargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17242
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !17242
  %tobool33 = icmp eq %union.tree_node* %11, null, !dbg !17242
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17243
  br i1 %tobool33, label %cleanup.loopexit, label %lor.lhs.false34, !dbg !17243

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %bf.load38 = load i64, i64* %9, align 8, !dbg !17244
  %bf.cast403 = and i64 %bf.load38, 65535, !dbg !17244
  %cmp41 = icmp eq i64 %bf.cast403, 14, !dbg !17244
  br i1 %cmp41, label %cond.true42, label %cond.false46, !dbg !17244

cond.true42:                                      ; preds = %lor.lhs.false34
  %call45 = tail call i32 @vector_type_mode(%union.tree_node* nonnull %8) #6, !dbg !17244
  %.phi.trans.insert = bitcast %union.tree_node** %10 to i64**, !dbg !17245
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !17246
  br label %cond.end54, !dbg !17244

cond.false46:                                     ; preds = %lor.lhs.false34
  %type49 = bitcast %union.tree_node* %8 to %struct.tree_type*, !dbg !17244
  %mode50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type49, i64 0, i32 6, !dbg !17244
  %bf.load51 = load i32, i32* %mode50, align 4, !dbg !17244
  %bf.lshr52 = lshr i32 %bf.load51, 16, !dbg !17244
  %bf.clear53 = and i32 %bf.lshr52, 255, !dbg !17244
  br label %cond.end54, !dbg !17244

cond.end54:                                       ; preds = %cond.false46, %cond.true42
  %13 = phi i64* [ %.pre, %cond.true42 ], [ %12, %cond.false46 ], !dbg !17246
  %cond55 = phi i32 [ %call45, %cond.true42 ], [ %bf.clear53, %cond.false46 ], !dbg !17244
  %bf.load59 = load i64, i64* %13, align 8, !dbg !17246
  %bf.cast614 = and i64 %bf.load59, 65535, !dbg !17246
  %cmp62 = icmp eq i64 %bf.cast614, 14, !dbg !17246
  br i1 %cmp62, label %cond.true63, label %cond.false67, !dbg !17246

cond.true63:                                      ; preds = %cond.end54
  %.cast5 = bitcast i64* %13 to %union.tree_node*, !dbg !17246
  %call66 = tail call i32 @vector_type_mode(%union.tree_node* %.cast5) #6, !dbg !17246
  br label %cond.end75, !dbg !17246

cond.false67:                                     ; preds = %cond.end54
  %type70 = bitcast i64* %13 to %struct.tree_type*, !dbg !17246
  %mode71 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type70, i64 0, i32 6, !dbg !17246
  %bf.load72 = load i32, i32* %mode71, align 4, !dbg !17246
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !17246
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !17246
  br label %cond.end75, !dbg !17246

cond.end75:                                       ; preds = %cond.false67, %cond.true63
  %cond76 = phi i32 [ %call66, %cond.true63 ], [ %bf.clear74, %cond.false67 ], !dbg !17246
  %cmp77 = icmp eq i32 %cond55, %cond76, !dbg !17247
  br i1 %cmp77, label %if.end79, label %cleanup.loopexit, !dbg !17248

if.end79:                                         ; preds = %cond.end75
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %oldargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17249
  %chain82 = getelementptr inbounds %union.tree_node, %union.tree_node* %newargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17250
  %14 = load %union.tree_node*, %union.tree_node** %chain82, align 8, !dbg !17250
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !17220, metadata !DIExpression()), !dbg !17224
  br label %while.cond, !dbg !17234, !llvm.loop !17251

while.end:                                        ; preds = %while.cond
  %call83 = tail call %union.tree_node* @build_function_type(%union.tree_node* %1, %union.tree_node* %6) #6, !dbg !17253
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !17222, metadata !DIExpression()), !dbg !17224
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17254
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !17254
  %call85 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call83, %union.tree_node* %16) #6, !dbg !17255
  br label %cleanup, !dbg !17256

cleanup.loopexit:                                 ; preds = %while.body, %lor.lhs.false28, %lor.lhs.false30, %cond.end75
  br label %cleanup, !dbg !17257

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end19, %while.end
  %retval.0 = phi %union.tree_node* [ %call85, %while.end ], [ null, %cond.end19 ], [ null, %cleanup.loopexit ], !dbg !17224
  ret %union.tree_node* %retval.0, !dbg !17257
}

; Function Attrs: nounwind uwtable
define internal fastcc void @diagnose_arglist_conflict(%union.tree_node* %newdecl, %union.tree_node* %olddecl, %union.tree_node* %newtype, %union.tree_node* %oldtype) unnamed_addr #5 !dbg !17258 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !17260, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !17261, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype, metadata !17262, metadata !DIExpression()), !dbg !17269
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype, metadata !17263, metadata !DIExpression()), !dbg !17269
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17270
  %bf.load = load i64, i64* %0, align 8, !dbg !17270
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !17272
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !17272
  br i1 %cmp, label %lor.lhs.false, label %cleanup.cont39, !dbg !17273

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17274
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !17274
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17275
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !17275
  %call = tail call i32 @comptypes(%union.tree_node* %1, %union.tree_node* %2) #6, !dbg !17276
  %tobool = icmp eq i32 %call, 0, !dbg !17276
  br i1 %tobool, label %cleanup.cont39, label %lor.lhs.false3, !dbg !17277

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17278
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !17278
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !17278
  %cmp5 = icmp eq %union.tree_node* %4, null, !dbg !17279
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7, !dbg !17280

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !17281
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !17281
  %cmp6 = icmp eq %union.tree_node* %5, null, !dbg !17282
  br i1 %cmp6, label %if.end, label %lor.lhs.false7, !dbg !17283

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false3
  %values9 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17284
  %6 = bitcast i32* %values9 to %union.tree_node**, !dbg !17284
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !17284
  %cmp10 = icmp eq %union.tree_node* %7, null, !dbg !17285
  br i1 %cmp10, label %land.lhs.true11, label %cleanup.cont39, !dbg !17286

land.lhs.true11:                                  ; preds = %lor.lhs.false7
  %initial13 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !17287
  %8 = load %union.tree_node*, %union.tree_node** %initial13, align 8, !dbg !17287
  %cmp14 = icmp eq %union.tree_node* %8, null, !dbg !17288
  br i1 %cmp14, label %if.end, label %cleanup.cont39, !dbg !17289

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !17264, metadata !DIExpression()), !dbg !17269
  br i1 %cmp5, label %if.then18, label %if.end21, !dbg !17290

if.then18:                                        ; preds = %if.end
  %values20 = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17291
  %9 = bitcast i32* %values20 to %union.tree_node**, !dbg !17291
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !17291
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !17264, metadata !DIExpression()), !dbg !17269
  br label %if.end21, !dbg !17293

if.end21:                                         ; preds = %if.then18, %if.end
  %t.0 = phi %union.tree_node* [ %10, %if.then18 ], [ %4, %if.end ], !dbg !17269
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !17264, metadata !DIExpression()), !dbg !17269
  br label %for.cond, !dbg !17294

for.cond:                                         ; preds = %for.inc, %if.end21
  %t.1 = phi %union.tree_node* [ %t.0, %if.end21 ], [ %19, %for.inc ], !dbg !17269
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !17264, metadata !DIExpression()), !dbg !17269
  %tobool22 = icmp eq %union.tree_node* %t.1, null, !dbg !17295
  br i1 %tobool22, label %cleanup.cont39.loopexit, label %for.body, !dbg !17295

for.body:                                         ; preds = %for.cond
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17296
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !17296
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !17265, metadata !DIExpression()), !dbg !17297
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17298
  %13 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !17298
  %cmp25 = icmp eq %union.tree_node* %13, null, !dbg !17300
  br i1 %cmp25, label %land.lhs.true26, label %if.end30, !dbg !17301

land.lhs.true26:                                  ; preds = %for.body
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !17302
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !17302
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !17303
  %cmp28 = icmp eq %union.tree_node* %15, %16, !dbg !17304
  br i1 %cmp28, label %if.end30, label %if.then29, !dbg !17305

if.then29:                                        ; preds = %land.lhs.true26
  %17 = load i32, i32* @input_location, align 4, !dbg !17306
  tail call void (i32, i8*, ...) @inform(i32 %17, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.245, i64 0, i64 0)) #6, !dbg !17308
  br label %cleanup, !dbg !17309

if.end30:                                         ; preds = %land.lhs.true26, %for.body
  %call31 = tail call %union.tree_node* @c_type_promotes_to(%union.tree_node* %12) #6, !dbg !17310
  %cmp32 = icmp eq %union.tree_node* %call31, %12, !dbg !17312
  br i1 %cmp32, label %cleanup, label %if.then33, !dbg !17313

if.then33:                                        ; preds = %if.end30
  %18 = load i32, i32* @input_location, align 4, !dbg !17314
  tail call void (i32, i8*, ...) @inform(i32 %18, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.246, i64 0, i64 0)) #6, !dbg !17316
  br label %cleanup, !dbg !17317

cleanup:                                          ; preds = %if.end30, %if.then33, %if.then29
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then29 ], [ false, %if.then33 ], [ true, %if.end30 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup.cont39.loopexit

for.inc:                                          ; preds = %cleanup
  %19 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !17318
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !17264, metadata !DIExpression()), !dbg !17269
  br label %for.cond, !dbg !17319, !llvm.loop !17320

cleanup.cont39.loopexit:                          ; preds = %cleanup, %for.cond
  br label %cleanup.cont39, !dbg !17322

cleanup.cont39:                                   ; preds = %cleanup.cont39.loopexit, %lor.lhs.false, %entry, %land.lhs.true11, %lor.lhs.false7
  ret void, !dbg !17322
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @validate_proto_after_old_defn(%union.tree_node* %newdecl, %union.tree_node* %newtype, %union.tree_node* %oldtype) unnamed_addr #5 !dbg !17323 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !17327, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %newtype, metadata !17328, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %oldtype, metadata !17329, metadata !DIExpression()), !dbg !17338
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %oldtype, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !17339
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !17339
  %2 = bitcast %union.tree_node* %1 to %struct.tree_list*, !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !17331, metadata !DIExpression()), !dbg !17338
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %newtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17340
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !17340
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !17340
  %5 = bitcast %union.tree_node* %4 to %struct.tree_list*, !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !17330, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata i32 1, metadata !17332, metadata !DIExpression()), !dbg !17338
  br label %for.cond, !dbg !17341

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %i.1, %cleanup ], !dbg !17342
  %6 = phi %struct.tree_list* [ %2, %entry ], [ %20, %cleanup ], !dbg !17343
  %oldargs.0 = phi %union.tree_node* [ %1, %entry ], [ %oldargs.1, %cleanup ], !dbg !17343
  %7 = phi %struct.tree_list* [ %5, %entry ], [ %21, %cleanup ], !dbg !17344
  %newargs.0 = phi %union.tree_node* [ %4, %entry ], [ %newargs.1, %cleanup ], !dbg !17344
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0, metadata !17330, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %oldargs.0, metadata !17331, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !17332, metadata !DIExpression()), !dbg !17338
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %6, i64 0, i32 2, !dbg !17345
  %8 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !17345
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !17333, metadata !DIExpression()), !dbg !17346
  %value3 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %7, i64 0, i32 2, !dbg !17347
  %9 = load %union.tree_node*, %union.tree_node** %value3, align 8, !dbg !17347
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !17337, metadata !DIExpression()), !dbg !17346
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !17348
  %cmp = icmp eq %union.tree_node* %8, %10, !dbg !17350
  %cmp4 = icmp eq %union.tree_node* %9, %10, !dbg !17351
  %or.cond = or i1 %cmp, %cmp4, !dbg !17352
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !17352

if.end:                                           ; preds = %for.cond
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !17353
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !17353
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !17333, metadata !DIExpression()), !dbg !17346
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !17354
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !17354
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !17337, metadata !DIExpression()), !dbg !17346
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !17355
  %cmp8 = icmp eq %union.tree_node* %12, %15, !dbg !17355
  %cmp9 = icmp eq %union.tree_node* %14, %15, !dbg !17357
  %or.cond1 = and i1 %cmp8, %cmp9, !dbg !17358
  br i1 %or.cond1, label %cleanup, label %if.end11, !dbg !17358

if.end11:                                         ; preds = %if.end
  br i1 %cmp8, label %if.then13, label %if.else, !dbg !17359

if.then13:                                        ; preds = %if.end11
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.247, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !17360
  br label %cleanup, !dbg !17363

if.else:                                          ; preds = %if.end11
  br i1 %cmp9, label %if.then15, label %if.else16, !dbg !17364

if.then15:                                        ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.248, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !17365
  br label %cleanup, !dbg !17368

if.else16:                                        ; preds = %if.else
  %call = tail call i32 @comptypes(%union.tree_node* %12, %union.tree_node* %14) #6, !dbg !17369
  %tobool = icmp eq i32 %call, 0, !dbg !17369
  br i1 %tobool, label %if.then17, label %if.end20, !dbg !17371

if.then17:                                        ; preds = %if.else16
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.249, i64 0, i64 0), %union.tree_node* %newdecl, i32 %i.0) #6, !dbg !17372
  br label %cleanup, !dbg !17374

if.end20:                                         ; preds = %if.else16
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %oldargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17375
  %16 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !17375
  %17 = bitcast %union.tree_node* %16 to %struct.tree_list*, !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !17331, metadata !DIExpression()), !dbg !17338
  %chain22 = getelementptr inbounds %union.tree_node, %union.tree_node* %newargs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17376
  %18 = load %union.tree_node*, %union.tree_node** %chain22, align 8, !dbg !17376
  %19 = bitcast %union.tree_node* %18 to %struct.tree_list*, !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !17330, metadata !DIExpression()), !dbg !17338
  %inc = add nsw i32 %i.0, 1, !dbg !17377
  call void @llvm.dbg.value(metadata i32 %inc, metadata !17332, metadata !DIExpression()), !dbg !17338
  br label %cleanup, !dbg !17378

cleanup:                                          ; preds = %if.end, %for.cond, %if.end20, %if.then17, %if.then15, %if.then13
  %i.1 = phi i32 [ %i.0, %if.then13 ], [ %i.0, %if.then15 ], [ %inc, %if.end20 ], [ %i.0, %if.then17 ], [ %i.0, %for.cond ], [ %i.0, %if.end ], !dbg !17338
  %20 = phi %struct.tree_list* [ %6, %if.then13 ], [ %6, %if.then15 ], [ %17, %if.end20 ], [ %6, %if.then17 ], [ %6, %for.cond ], [ %6, %if.end ], !dbg !17338
  %oldargs.1 = phi %union.tree_node* [ %oldargs.0, %if.then13 ], [ %oldargs.0, %if.then15 ], [ %16, %if.end20 ], [ %oldargs.0, %if.then17 ], [ %oldargs.0, %for.cond ], [ %oldargs.0, %if.end ], !dbg !17338
  %21 = phi %struct.tree_list* [ %7, %if.then13 ], [ %7, %if.then15 ], [ %19, %if.end20 ], [ %7, %if.then17 ], [ %7, %for.cond ], [ %7, %if.end ], !dbg !17338
  %newargs.1 = phi %union.tree_node* [ %newargs.0, %if.then13 ], [ %newargs.0, %if.then15 ], [ %18, %if.end20 ], [ %newargs.0, %if.then17 ], [ %newargs.0, %for.cond ], [ %newargs.0, %if.end ], !dbg !17338
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then13 ], [ 1, %if.then15 ], [ 0, %if.end20 ], [ 1, %if.then17 ], [ 1, %for.cond ], [ 2, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.1, metadata !17330, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata %union.tree_node* %oldargs.1, metadata !17331, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !17332, metadata !DIExpression()), !dbg !17338
  switch i32 %cleanup.dest.slot.0, label %cleanup25.loopexit [
    i32 0, label %for.cond
    i32 2, label %for.end
  ], !llvm.loop !17379

for.end:                                          ; preds = %cleanup
  %call24 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.250, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !17382
  br label %cleanup25, !dbg !17383

cleanup25.loopexit:                               ; preds = %cleanup
  br label %cleanup25, !dbg !17384

cleanup25:                                        ; preds = %cleanup25.loopexit, %for.end
  %retval.2 = phi i8 [ 1, %for.end ], [ 0, %cleanup25.loopexit ], !dbg !17338
  ret i8 %retval.2, !dbg !17384
}

declare dso_local %union.tree_node* @c_type_promotes_to(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @merge_weak(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimple_set_body(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_body(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_list(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i64 @tree_code_size(i32) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @cgraph_mark_if_needed(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.VEC_tree_gc* @make_tree_vector() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_c_goto_bindings_p_gc* @VEC_c_goto_bindings_p_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !17385 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !17389, metadata !DIExpression()), !dbg !17390
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 0) #6, !dbg !17391
  %0 = bitcast i8* %call to %struct.VEC_c_goto_bindings_p_gc*, !dbg !17391
  ret %struct.VEC_c_goto_bindings_p_gc* %0, !dbg !17391
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_goto_bindings_p_gc_reserve(%struct.VEC_c_goto_bindings_p_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !17392 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_gc** %vec_, metadata !17396, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 1, metadata !17397, metadata !DIExpression()), !dbg !17399
  %0 = load %struct.VEC_c_goto_bindings_p_gc*, %struct.VEC_c_goto_bindings_p_gc** %vec_, align 8, !dbg !17400
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_gc* %0, null, !dbg !17400
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17400

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_c_goto_bindings_p_gc, %struct.VEC_c_goto_bindings_p_gc* %0, i64 0, i32 0, !dbg !17400
  br label %cond.end, !dbg !17400

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_c_goto_bindings_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !17400
  %call = tail call fastcc i32 @VEC_c_goto_bindings_p_base_space(%struct.VEC_c_goto_bindings_p_base* %cond, i32 1) #7, !dbg !17400
  %tobool1 = icmp eq i32 %call, 0, !dbg !17400
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !17398, metadata !DIExpression()), !dbg !17399
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17400

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_c_goto_bindings_p_gc** %vec_ to i8**, !dbg !17401
  %2 = load i8*, i8** %1, align 8, !dbg !17401
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !17401
  store i8* %call3, i8** %1, align 8, !dbg !17401
  br label %if.end, !dbg !17401

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !17400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.c_goto_bindings** @VEC_c_goto_bindings_p_base_quick_push(%struct.VEC_c_goto_bindings_p_base* %vec_, %struct.c_goto_bindings* %obj_) unnamed_addr #0 !dbg !17403 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_base* %vec_, metadata !17408, metadata !DIExpression()), !dbg !17411
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings* %obj_, metadata !17409, metadata !DIExpression()), !dbg !17411
  %num1 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 0, !dbg !17412
  %0 = load i32, i32* %num1, align 8, !dbg !17412
  %inc = add i32 %0, 1, !dbg !17412
  store i32 %inc, i32* %num1, align 8, !dbg !17412
  %idxprom = zext i32 %0 to i64, !dbg !17412
  %arrayidx = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !17412
  call void @llvm.dbg.value(metadata %struct.c_goto_bindings** %arrayidx, metadata !17410, metadata !DIExpression()), !dbg !17411
  store %struct.c_goto_bindings* %obj_, %struct.c_goto_bindings** %arrayidx, align 8, !dbg !17412
  ret %struct.c_goto_bindings** %arrayidx, !dbg !17412
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_goto_bindings_p_base_space(%struct.VEC_c_goto_bindings_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !17413 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_base* %vec_, metadata !17417, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 1, metadata !17418, metadata !DIExpression()), !dbg !17419
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_base* %vec_, null, !dbg !17420
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !17420

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 1, !dbg !17420
  %0 = load i32, i32* %alloc, align 4, !dbg !17420
  %num = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 0, !dbg !17420
  %1 = load i32, i32* %num, align 8, !dbg !17420
  %cmp1 = icmp ne i32 %0, %1, !dbg !17420
  %phitmp = zext i1 %cmp1 to i32, !dbg !17420
  br label %cond.end, !dbg !17420

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !17420
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_c_goto_bindings_p_base_truncate(%struct.VEC_c_goto_bindings_p_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !17421 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_goto_bindings_p_base* %vec_, metadata !17425, metadata !DIExpression()), !dbg !17427
  call void @llvm.dbg.value(metadata i32 0, metadata !17426, metadata !DIExpression()), !dbg !17427
  %tobool = icmp eq %struct.VEC_c_goto_bindings_p_base* %vec_, null, !dbg !17428
  br label %cond.true, !dbg !17428

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !17428

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !17428

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !17428

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, %struct.VEC_c_goto_bindings_p_base* %vec_, i64 0, i32 0, !dbg !17429
  store i32 0, i32* %num3, align 8, !dbg !17429
  br label %if.end, !dbg !17429

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !17428
}

declare dso_local i8* @fname_as_string(i32) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_index_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !17431 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !17437, metadata !DIExpression()), !dbg !17438
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !17439
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17439

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !17439
  %0 = load i32, i32* %num, align 8, !dbg !17439
  br label %cond.end, !dbg !17439

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !17439
  ret i32 %cond, !dbg !17439
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !17440 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !17446, metadata !DIExpression()), !dbg !17447
  br label %land.end, !dbg !17448

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !17448
  %0 = load i32, i32* %num2, align 8, !dbg !17448
  %sub = add i32 %0, -1, !dbg !17448
  %idxprom = zext i32 %sub to i64, !dbg !17448
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !17448
  ret %struct.constructor_elt_d* %arrayidx, !dbg !17448
}

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

declare dso_local void @warn_deprecated_use(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unsigned_type_for(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @strip_array_types(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_signed_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @warn_variable_length_array(%union.tree_node* %name, %union.tree_node* %size) unnamed_addr #5 !dbg !17449 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !17451, metadata !DIExpression()), !dbg !17454
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !17452, metadata !DIExpression()), !dbg !17454
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %size, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17455
  %bf.load = load i64, i64* %0, align 8, !dbg !17455
  %bf.lshr = lshr i64 %bf.load, 17, !dbg !17455
  %1 = trunc i64 %bf.lshr to i32, !dbg !17455
  %bf.cast = and i32 %1, 1, !dbg !17455
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !17453, metadata !DIExpression()), !dbg !17454
  %2 = load i32, i32* @flag_isoc99, align 4, !dbg !17456
  %tobool = icmp eq i32 %2, 0, !dbg !17456
  %3 = load i32, i32* @pedantic, align 4, !dbg !17458
  %tobool1 = icmp ne i32 %3, 0, !dbg !17458
  %or.cond = and i1 %tobool, %tobool1, !dbg !17459
  %4 = load i32, i32* @warn_vla, align 4, !dbg !17460
  %cmp = icmp ne i32 %4, 0, !dbg !17461
  %or.cond1 = and i1 %or.cond, %cmp, !dbg !17459
  br i1 %or.cond1, label %if.then, label %if.else16, !dbg !17459

if.then:                                          ; preds = %entry
  %tobool3 = icmp eq i32 %bf.cast, 0, !dbg !17462
  %tobool5 = icmp ne %union.tree_node* %name, null, !dbg !17465
  %5 = load i32, i32* @input_location, align 4, !dbg !17465
  br i1 %tobool3, label %if.else8, label %if.then4, !dbg !17466

if.then4:                                         ; preds = %if.then
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !17467

if.then6:                                         ; preds = %if.then4
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 234, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.333, i64 0, i64 0), %union.tree_node* nonnull %name) #6, !dbg !17469
  br label %if.end36, !dbg !17469

if.else:                                          ; preds = %if.then4
  %call7 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 234, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.334, i64 0, i64 0)) #6, !dbg !17471
  br label %if.end36

if.else8:                                         ; preds = %if.then
  br i1 %tobool5, label %if.then10, label %if.else12, !dbg !17472

if.then10:                                        ; preds = %if.else8
  %call11 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 234, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.335, i64 0, i64 0), %union.tree_node* nonnull %name) #6, !dbg !17474
  br label %if.end36, !dbg !17474

if.else12:                                        ; preds = %if.else8
  %call13 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 234, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.336, i64 0, i64 0)) #6, !dbg !17476
  br label %if.end36

if.else16:                                        ; preds = %entry
  %cmp17 = icmp sgt i32 %4, 0, !dbg !17477
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !17479

if.then18:                                        ; preds = %if.else16
  %tobool19 = icmp eq i32 %bf.cast, 0, !dbg !17480
  %tobool21 = icmp ne %union.tree_node* %name, null, !dbg !17483
  br i1 %tobool19, label %if.else27, label %if.then20, !dbg !17484

if.then20:                                        ; preds = %if.then18
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !17485

if.then22:                                        ; preds = %if.then20
  %call23 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 234, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.337, i64 0, i64 0), %union.tree_node* nonnull %name) #6, !dbg !17487
  br label %if.end36, !dbg !17487

if.else24:                                        ; preds = %if.then20
  %call25 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 234, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.338, i64 0, i64 0)) #6, !dbg !17489
  br label %if.end36

if.else27:                                        ; preds = %if.then18
  br i1 %tobool21, label %if.then29, label %if.else31, !dbg !17490

if.then29:                                        ; preds = %if.else27
  %call30 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 234, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.339, i64 0, i64 0), %union.tree_node* nonnull %name) #6, !dbg !17492
  br label %if.end36, !dbg !17492

if.else31:                                        ; preds = %if.else27
  %call32 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 234, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.340, i64 0, i64 0)) #6, !dbg !17494
  br label %if.end36

if.end36:                                         ; preds = %if.else16, %if.then29, %if.else31, %if.then22, %if.else24, %if.else, %if.then6, %if.else12, %if.then10
  ret void, !dbg !17495
}

declare dso_local %union.tree_node* @build_range_type(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_variable_size(%union.tree_node* %size) unnamed_addr #5 !dbg !17496 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !17498, metadata !DIExpression()), !dbg !17500
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %size, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17501
  %bf.load = load i64, i64* %0, align 8, !dbg !17501
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !17501
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !17501
  br i1 %tobool, label %if.end, label %cleanup, !dbg !17503

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* @save_expr(%union.tree_node* %size) #6, !dbg !17504
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !17498, metadata !DIExpression()), !dbg !17500
  %call1 = tail call %union.tree_node* @skip_simple_arithmetic(%union.tree_node* %call) #6, !dbg !17505
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !17499, metadata !DIExpression()), !dbg !17500
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !17506
  %tobool2 = icmp eq %struct.function* %1, null, !dbg !17506
  br i1 %tobool2, label %if.end9, label %land.lhs.true, !dbg !17508

land.lhs.true:                                    ; preds = %if.end
  %dont_save_pending_sizes_p = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 20, !dbg !17509
  %bf.load4 = load i32, i32* %dont_save_pending_sizes_p, align 8, !dbg !17509
  %bf.clear6 = and i32 %bf.load4, 8388608, !dbg !17509
  %tobool7 = icmp eq i32 %bf.clear6, 0, !dbg !17510
  br i1 %tobool7, label %if.end9, label %cleanup, !dbg !17511

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %call10 = tail call i32 @global_bindings_p() #7, !dbg !17512
  %tobool11 = icmp eq i32 %call10, 0, !dbg !17512
  br i1 %tobool11, label %if.then12, label %cleanup, !dbg !17514

if.then12:                                        ; preds = %if.end9
  tail call void @put_pending_size(%union.tree_node* %call1) #6, !dbg !17515
  br label %cleanup, !dbg !17515

cleanup:                                          ; preds = %land.lhs.true, %if.end9, %entry, %if.then12
  %retval.0 = phi %union.tree_node* [ %size, %entry ], [ %call, %land.lhs.true ], [ %call, %if.then12 ], [ %call, %if.end9 ], !dbg !17500
  ret %union.tree_node* %retval.0, !dbg !17516
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_distinct_type_copy(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @grokparms(%struct.c_arg_info* %arg_info, i8 zeroext %funcdef_flag) unnamed_addr #5 !dbg !17517 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %arg_info, metadata !17521, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata i8 %funcdef_flag, metadata !17522, metadata !DIExpression()), !dbg !17532
  %types = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 2, !dbg !17533
  %0 = load %union.tree_node*, %union.tree_node** %types, align 8, !dbg !17533
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !17523, metadata !DIExpression()), !dbg !17532
  %tobool = icmp eq i8 %funcdef_flag, 0, !dbg !17534
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17536

land.lhs.true:                                    ; preds = %entry
  %had_vla_unspec = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 5, !dbg !17537
  %bf.load = load i8, i8* %had_vla_unspec, align 8, !dbg !17537
  %bf.clear = and i8 %bf.load, 1, !dbg !17537
  %tobool1 = icmp eq i8 %bf.clear, 0, !dbg !17538
  br i1 %tobool1, label %if.end, label %if.then, !dbg !17539

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !17540
  br label %if.end, !dbg !17542

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %cmp = icmp ne %union.tree_node* %0, null, !dbg !17543
  %tobool4 = icmp ne i8 %funcdef_flag, 0, !dbg !17545
  %or.cond = or i1 %cmp, %tobool4, !dbg !17546
  br i1 %or.cond, label %if.end10, label %land.lhs.true5, !dbg !17546

land.lhs.true5:                                   ; preds = %if.end
  %1 = load i32, i32* @input_location, align 4, !dbg !17547
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %1) #6, !dbg !17547
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !17547
  %2 = load i8, i8* %sysp, align 8, !dbg !17547
  %cmp7 = icmp eq i8 %2, 0, !dbg !17547
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !17548

if.then9:                                         ; preds = %land.lhs.true5
  %call = call zeroext i8 (i32, i8*, ...) @warning(i32 189, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.114, i64 0, i64 0)) #6, !dbg !17549
  br label %if.end10, !dbg !17549

if.end10:                                         ; preds = %land.lhs.true5, %if.end, %if.then9
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !17550
  %cmp11 = icmp eq %union.tree_node* %0, %3, !dbg !17551
  br i1 %cmp11, label %cleanup, label %if.else, !dbg !17552

if.else:                                          ; preds = %if.end10
  %tobool14 = icmp eq %union.tree_node* %0, null, !dbg !17553
  br i1 %tobool14, label %if.else28, label %land.lhs.true15, !dbg !17554

land.lhs.true15:                                  ; preds = %if.else
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17555
  %5 = bitcast %union.tree_node** %4 to i64**, !dbg !17555
  %6 = load i64*, i64** %5, align 8, !dbg !17555
  %bf.load16 = load i64, i64* %6, align 8, !dbg !17555
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !17556
  %cmp19 = icmp eq i64 %bf.cast183, 1, !dbg !17556
  br i1 %cmp19, label %if.then21, label %if.else28, !dbg !17557

if.then21:                                        ; preds = %land.lhs.true15
  br i1 %tobool, label %if.then23, label %if.end25, !dbg !17558

if.then23:                                        ; preds = %if.then21
  %7 = load i32, i32* @input_location, align 4, !dbg !17560
  %call24 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %7, i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.341, i64 0, i64 0)) #6, !dbg !17562
  br label %if.end25, !dbg !17562

if.end25:                                         ; preds = %if.then21, %if.then23
  %8 = bitcast %union.tree_node** %types to i64*, !dbg !17563
  %9 = load i64, i64* %8, align 8, !dbg !17563
  %10 = bitcast %struct.c_arg_info* %arg_info to i64*, !dbg !17564
  store i64 %9, i64* %10, align 8, !dbg !17564
  store %union.tree_node* null, %union.tree_node** %types, align 8, !dbg !17565
  br label %cleanup, !dbg !17566

if.else28:                                        ; preds = %if.else, %land.lhs.true15
  %parms29 = getelementptr inbounds %struct.c_arg_info, %struct.c_arg_info* %arg_info, i64 0, i32 0, !dbg !17567
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !17529, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata i32 1, metadata !17530, metadata !DIExpression()), !dbg !17569
  br i1 %tobool, label %if.else28.split.us, label %if.else28.if.else28.split_crit_edge, !dbg !17570

if.else28.if.else28.split_crit_edge:              ; preds = %if.else28
  br label %for.cond, !dbg !17570

if.else28.split.us:                               ; preds = %if.else28
  br label %for.cond.us, !dbg !17570

for.cond.us:                                      ; preds = %for.inc.us, %if.else28.split.us
  %parm.0.in.us = phi %union.tree_node** [ %parms29, %if.else28.split.us ], [ %chain.us, %for.inc.us ]
  %arg_types.0.us = phi %union.tree_node* [ %0, %if.else28.split.us ], [ %arg_types.4.us, %for.inc.us ], !dbg !17571
  %typelt.0.us = phi %union.tree_node* [ %0, %if.else28.split.us ], [ %26, %for.inc.us ], !dbg !17572
  %parmno.0.us = phi i32 [ 1, %if.else28.split.us ], [ %inc.us, %for.inc.us ], !dbg !17572
  %parm.0.us = load %union.tree_node*, %union.tree_node** %parm.0.in.us, align 8, !dbg !17572
  call void @llvm.dbg.value(metadata i32 %parmno.0.us, metadata !17530, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata %union.tree_node* %typelt.0.us, metadata !17529, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.us, metadata !17523, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0.us, metadata !17524, metadata !DIExpression()), !dbg !17569
  %tobool30.us = icmp eq %union.tree_node* %parm.0.us, null, !dbg !17573
  br i1 %tobool30.us, label %cleanup.loopexit.us-lcssa.us, label %for.body.us, !dbg !17573

for.body.us:                                      ; preds = %for.cond.us
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %typelt.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17574
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !17574
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !17528, metadata !DIExpression()), !dbg !17569
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !17577
  %cmp33.us = icmp eq %union.tree_node* %12, %13, !dbg !17579
  br i1 %cmp33.us, label %for.inc.us, label %if.end36.us, !dbg !17580

if.end36.us:                                      ; preds = %for.body.us
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17581
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !17581
  %cmp38.us = icmp eq %union.tree_node* %15, null, !dbg !17581
  br i1 %cmp38.us, label %if.then40.us, label %if.end71.us, !dbg !17583

if.then40.us:                                     ; preds = %if.end36.us
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17584
  %bf.load53.us = load i64, i64* %16, align 8, !dbg !17584
  %bf.cast551.us = and i64 %bf.load53.us, 65535, !dbg !17584
  %cmp56.us = icmp eq i64 %bf.cast551.us, 19, !dbg !17584
  br i1 %cmp56.us, label %if.then58.us, label %if.end71.us, !dbg !17588

if.then58.us:                                     ; preds = %if.then40.us
  %name60.us = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17589
  %17 = load %union.tree_node*, %union.tree_node** %name60.us, align 8, !dbg !17589
  %tobool61.us = icmp eq %union.tree_node* %17, null, !dbg !17589
  br i1 %tobool61.us, label %if.else64.us, label %if.then62.us, !dbg !17592

if.then62.us:                                     ; preds = %if.then58.us
  %18 = load i32, i32* @input_location, align 4, !dbg !17593
  %call63.us = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %18, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.344, i64 0, i64 0), i32 %parmno.0.us, %union.tree_node* nonnull %parm.0.us) #6, !dbg !17594
  br label %if.end71.us, !dbg !17594

if.else64.us:                                     ; preds = %if.then58.us
  %locus66.us = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17595
  %19 = load i32, i32* %locus66.us, align 8, !dbg !17595
  %call67.us = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %19, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.345, i64 0, i64 0), i32 %parmno.0.us) #6, !dbg !17596
  br label %if.end71.us

if.end71.us:                                      ; preds = %if.else64.us, %if.then62.us, %if.then40.us, %if.end36.us
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.us, metadata !17523, metadata !DIExpression()), !dbg !17532
  %20 = load i8* (%union.tree_node*)*, i8* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 92), align 8, !dbg !17597
  %call72.us = call i8* %20(%union.tree_node* %12) #6, !dbg !17598
  call void @llvm.dbg.value(metadata i8* %call72.us, metadata !17531, metadata !DIExpression()), !dbg !17569
  %tobool73.us = icmp eq i8* %call72.us, null, !dbg !17599
  br i1 %tobool73.us, label %if.end79.us, label %if.then74.us, !dbg !17601

if.then74.us:                                     ; preds = %if.end71.us
  call void (i8*, ...) @error(i8* nonnull %call72.us) #6, !dbg !17602
  %21 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !17604
  %22 = bitcast %union.tree_node** %11 to i64*, !dbg !17605
  store i64 %21, i64* %22, align 8, !dbg !17605
  %type78.us = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17606
  %23 = bitcast %union.tree_node** %type78.us to i64*, !dbg !17607
  store i64 %21, i64* %23, align 8, !dbg !17607
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %if.end79.us, !dbg !17608

if.end79.us:                                      ; preds = %if.then74.us, %if.end71.us
  %arg_types.3.us = phi %union.tree_node* [ null, %if.then74.us ], [ %arg_types.0.us, %if.end71.us ], !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.3.us, metadata !17523, metadata !DIExpression()), !dbg !17532
  %name81.us = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17609
  %24 = load %union.tree_node*, %union.tree_node** %name81.us, align 8, !dbg !17609
  %tobool82.us = icmp eq %union.tree_node* %24, null, !dbg !17609
  br i1 %tobool82.us, label %for.inc.us, label %land.lhs.true83.us, !dbg !17611

land.lhs.true83.us:                               ; preds = %if.end79.us
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17612
  %bf.load85.us = load i64, i64* %25, align 8, !dbg !17612
  %bf.cast872.us = and i64 %bf.load85.us, 16777216, !dbg !17612
  %tobool88.us = icmp eq i64 %bf.cast872.us, 0, !dbg !17612
  br i1 %tobool88.us, label %for.inc.us, label %if.then89.us, !dbg !17613

if.then89.us:                                     ; preds = %land.lhs.true83.us
  call fastcc void @warn_if_shadowing(%union.tree_node* nonnull %parm.0.us) #7, !dbg !17614
  br label %for.inc.us, !dbg !17614

for.inc.us:                                       ; preds = %if.then89.us, %land.lhs.true83.us, %if.end79.us, %for.body.us
  %arg_types.4.us = phi %union.tree_node* [ %arg_types.0.us, %for.body.us ], [ %arg_types.3.us, %if.then89.us ], [ %arg_types.3.us, %land.lhs.true83.us ], [ %arg_types.3.us, %if.end79.us ], !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.4.us, metadata !17523, metadata !DIExpression()), !dbg !17532
  %chain.us = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17615
  %chain93.us = getelementptr inbounds %union.tree_node, %union.tree_node* %typelt.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17616
  %26 = load %union.tree_node*, %union.tree_node** %chain93.us, align 8, !dbg !17616
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !17529, metadata !DIExpression()), !dbg !17569
  %inc.us = add i32 %parmno.0.us, 1, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !17530, metadata !DIExpression()), !dbg !17569
  br label %for.cond.us, !dbg !17618, !llvm.loop !17619

cleanup.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  %arg_types.0.us.lcssa = phi %union.tree_node* [ %arg_types.0.us, %for.cond.us ], !dbg !17571
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.us.lcssa, metadata !17523, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.us.lcssa, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %cleanup.loopexit, !dbg !17621

for.cond:                                         ; preds = %for.inc, %if.else28.if.else28.split_crit_edge
  %parm.0.in = phi %union.tree_node** [ %parms29, %if.else28.if.else28.split_crit_edge ], [ %chain, %for.inc ]
  %arg_types.0 = phi %union.tree_node* [ %0, %if.else28.if.else28.split_crit_edge ], [ %arg_types.4, %for.inc ], !dbg !17571
  %typelt.0 = phi %union.tree_node* [ %0, %if.else28.if.else28.split_crit_edge ], [ %44, %for.inc ], !dbg !17572
  %parmno.0 = phi i32 [ 1, %if.else28.if.else28.split_crit_edge ], [ %inc, %for.inc ], !dbg !17572
  %parm.0 = load %union.tree_node*, %union.tree_node** %parm.0.in, align 8, !dbg !17572
  call void @llvm.dbg.value(metadata i32 %parmno.0, metadata !17530, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata %union.tree_node* %typelt.0, metadata !17529, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0, metadata !17523, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %parm.0, metadata !17524, metadata !DIExpression()), !dbg !17569
  %tobool30 = icmp eq %union.tree_node* %parm.0, null, !dbg !17573
  br i1 %tobool30, label %cleanup.loopexit.us-lcssa, label %for.body, !dbg !17573

for.body:                                         ; preds = %for.cond
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %typelt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17574
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !17574
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !17528, metadata !DIExpression()), !dbg !17569
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !17577
  %cmp33 = icmp eq %union.tree_node* %28, %29, !dbg !17579
  br i1 %cmp33, label %for.inc, label %if.end36, !dbg !17580

if.end36:                                         ; preds = %for.body
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17581
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8, !dbg !17581
  %cmp38 = icmp eq %union.tree_node* %31, null, !dbg !17581
  br i1 %cmp38, label %if.then40, label %if.end71, !dbg !17583

if.then40:                                        ; preds = %if.end36
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17622
  %32 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !17622
  %tobool43 = icmp eq %union.tree_node* %32, null, !dbg !17622
  br i1 %tobool43, label %if.else45, label %if.then44, !dbg !17625

if.then44:                                        ; preds = %if.then40
  %33 = load i32, i32* @input_location, align 4, !dbg !17626
  call void (i32, i8*, ...) @error_at(i32 %33, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.342, i64 0, i64 0), i32 %parmno.0, %union.tree_node* nonnull %parm.0) #6, !dbg !17627
  br label %if.end47, !dbg !17627

if.else45:                                        ; preds = %if.then40
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17628
  %34 = load i32, i32* %locus, align 8, !dbg !17628
  call void (i32, i8*, ...) @error_at(i32 %34, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.343, i64 0, i64 0), i32 %parmno.0) #6, !dbg !17629
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.then44
  %35 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !17630
  %36 = bitcast %union.tree_node** %27 to i64*, !dbg !17631
  store i64 %35, i64* %36, align 8, !dbg !17631
  %type50 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17632
  %37 = bitcast %union.tree_node** %type50 to i64*, !dbg !17633
  store i64 %35, i64* %37, align 8, !dbg !17633
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %if.end71, !dbg !17634

if.end71:                                         ; preds = %if.end36, %if.end47
  %arg_types.2 = phi %union.tree_node* [ %arg_types.0, %if.end36 ], [ null, %if.end47 ], !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.2, metadata !17523, metadata !DIExpression()), !dbg !17532
  %38 = load i8* (%union.tree_node*)*, i8* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 92), align 8, !dbg !17597
  %call72 = call i8* %38(%union.tree_node* %28) #6, !dbg !17598
  call void @llvm.dbg.value(metadata i8* %call72, metadata !17531, metadata !DIExpression()), !dbg !17569
  %tobool73 = icmp eq i8* %call72, null, !dbg !17599
  br i1 %tobool73, label %if.end79, label %if.then74, !dbg !17601

if.then74:                                        ; preds = %if.end71
  call void (i8*, ...) @error(i8* nonnull %call72) #6, !dbg !17602
  %39 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !17604
  %40 = bitcast %union.tree_node** %27 to i64*, !dbg !17605
  store i64 %39, i64* %40, align 8, !dbg !17605
  %type78 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !17606
  %41 = bitcast %union.tree_node** %type78 to i64*, !dbg !17607
  store i64 %39, i64* %41, align 8, !dbg !17607
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %if.end79, !dbg !17608

if.end79:                                         ; preds = %if.end71, %if.then74
  %arg_types.3 = phi %union.tree_node* [ null, %if.then74 ], [ %arg_types.2, %if.end71 ], !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.3, metadata !17523, metadata !DIExpression()), !dbg !17532
  %name81 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !17609
  %42 = load %union.tree_node*, %union.tree_node** %name81, align 8, !dbg !17609
  %tobool82 = icmp eq %union.tree_node* %42, null, !dbg !17609
  br i1 %tobool82, label %for.inc, label %land.lhs.true83, !dbg !17611

land.lhs.true83:                                  ; preds = %if.end79
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17612
  %bf.load85 = load i64, i64* %43, align 8, !dbg !17612
  %bf.cast872 = and i64 %bf.load85, 16777216, !dbg !17612
  %tobool88 = icmp eq i64 %bf.cast872, 0, !dbg !17612
  br i1 %tobool88, label %for.inc, label %if.then89, !dbg !17613

if.then89:                                        ; preds = %land.lhs.true83
  call fastcc void @warn_if_shadowing(%union.tree_node* nonnull %parm.0) #7, !dbg !17614
  br label %for.inc, !dbg !17614

for.inc:                                          ; preds = %land.lhs.true83, %if.end79, %if.then89, %for.body
  %arg_types.4 = phi %union.tree_node* [ %arg_types.0, %for.body ], [ %arg_types.3, %if.then89 ], [ %arg_types.3, %land.lhs.true83 ], [ %arg_types.3, %if.end79 ], !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.4, metadata !17523, metadata !DIExpression()), !dbg !17532
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parm.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17615
  %chain93 = getelementptr inbounds %union.tree_node, %union.tree_node* %typelt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17616
  %44 = load %union.tree_node*, %union.tree_node** %chain93, align 8, !dbg !17616
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !17529, metadata !DIExpression()), !dbg !17569
  %inc = add i32 %parmno.0, 1, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %inc, metadata !17530, metadata !DIExpression()), !dbg !17569
  br label %for.cond, !dbg !17618, !llvm.loop !17619

cleanup.loopexit.us-lcssa:                        ; preds = %for.cond
  %arg_types.0.lcssa7 = phi %union.tree_node* [ %arg_types.0, %for.cond ], !dbg !17571
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.lcssa7, metadata !17523, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.lcssa7, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %cleanup.loopexit, !dbg !17621

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  %arg_types.0.lcssa = phi %union.tree_node* [ %arg_types.0.lcssa7, %cleanup.loopexit.us-lcssa ], [ %arg_types.0.us.lcssa, %cleanup.loopexit.us-lcssa.us ], !dbg !17571
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types.0.lcssa, metadata !17523, metadata !DIExpression()), !dbg !17532
  br label %cleanup, !dbg !17621

cleanup:                                          ; preds = %cleanup.loopexit, %if.end10, %if.end25
  %retval.0 = phi %union.tree_node* [ null, %if.end25 ], [ null, %if.end10 ], [ %arg_types.0.lcssa, %cleanup.loopexit ], !dbg !17635
  ret %union.tree_node* %retval.0, !dbg !17621
}

declare dso_local void @put_pending_sizes(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_bitfield_type_and_width(%union.tree_node** %type, %union.tree_node** %width, %union.tree_node* %orig_name) unnamed_addr #5 !dbg !17636 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !17640, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata %union.tree_node** %width, metadata !17641, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_name, metadata !17642, metadata !DIExpression()), !dbg !17650
  %tobool = icmp eq %union.tree_node* %orig_name, null, !dbg !17651
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17651

cond.true:                                        ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !17652
  %str = bitcast i32* %id to i8**, !dbg !17652
  %0 = load i8*, i8** %str, align 8, !dbg !17652
  %call = tail call i8* @identifier_to_locale(i8* %0) #6, !dbg !17653
  br label %cond.end, !dbg !17651

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.346, i64 0, i64 0), %entry ], !dbg !17651
  call void @llvm.dbg.value(metadata i8* %cond, metadata !17646, metadata !DIExpression()), !dbg !17650
  %1 = bitcast %union.tree_node** %width to %struct.tree_common**, !dbg !17654
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !17654
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !17654
  %3 = bitcast %union.tree_node** %type1 to i64**, !dbg !17654
  %4 = load i64*, i64** %3, align 8, !dbg !17654
  %bf.load = load i64, i64* %4, align 8, !dbg !17654
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !17654
  %cmp = icmp eq i64 %bf.cast4, 6, !dbg !17654
  %5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 0, i32 0, !dbg !17654
  %6 = bitcast %struct.tree_common* %2 to %union.tree_node*, !dbg !17654
  br i1 %cmp, label %if.else, label %lor.lhs.false, !dbg !17654

lor.lhs.false:                                    ; preds = %cond.end
  %cmp8 = icmp eq i64 %bf.cast4, 7, !dbg !17654
  br i1 %cmp8, label %if.else, label %lor.lhs.false9, !dbg !17654

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast4, 8, !dbg !17654
  br i1 %cmp16, label %if.else, label %if.then, !dbg !17656

if.then:                                          ; preds = %lor.lhs.false9
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.347, i64 0, i64 0), i8* %cond) #6, !dbg !17657
  %7 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !17659
  %8 = bitcast %union.tree_node** %width to i64*, !dbg !17660
  store i64 %7, i64* %8, align 8, !dbg !17660
  br label %if.end49, !dbg !17661

if.else:                                          ; preds = %lor.lhs.false9, %lor.lhs.false, %cond.end
  %9 = bitcast %union.tree_node** %width to i64**, !dbg !17662
  %bf.load18 = load i64, i64* %5, align 8, !dbg !17662
  %bf.cast2011 = and i64 %bf.load18, 65535, !dbg !17665
  %cmp21 = icmp eq i64 %bf.cast2011, 23, !dbg !17665
  br i1 %cmp21, label %if.end31, label %if.then22, !dbg !17666

if.then22:                                        ; preds = %if.else
  %call23 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %6, i8 zeroext 0, i8* null) #6, !dbg !17667
  store %union.tree_node* %call23, %union.tree_node** %width, align 8, !dbg !17669
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !17670
  %bf.load25 = load i64, i64* %.cast, align 8, !dbg !17670
  %bf.cast2713 = and i64 %bf.load25, 65535, !dbg !17672
  %cmp28 = icmp eq i64 %bf.cast2713, 23, !dbg !17672
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !17673

if.then29:                                        ; preds = %if.then22
  %10 = load i32, i32* @input_location, align 4, !dbg !17674
  %call30 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %10, i32 834, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.348, i64 0, i64 0), i8* %cond) #6, !dbg !17675
  %.pre = load i64*, i64** %9, align 8, !dbg !17676
  %bf.load33.pre = load i64, i64* %.pre, align 8, !dbg !17676
  %11 = bitcast i64* %.pre to %union.tree_node*, !dbg !17675
  %.pre15 = and i64 %bf.load33.pre, 65535, !dbg !17678
  br label %if.end31, !dbg !17675

if.end31:                                         ; preds = %if.else, %if.then22, %if.then29
  %bf.cast3512.pre-phi = phi i64 [ %bf.cast2011, %if.else ], [ %bf.cast2713, %if.then22 ], [ %.pre15, %if.then29 ], !dbg !17678
  %12 = phi %union.tree_node* [ %6, %if.else ], [ %call23, %if.then22 ], [ %11, %if.then29 ]
  %cmp36 = icmp eq i64 %bf.cast3512.pre-phi, 23, !dbg !17678
  br i1 %cmp36, label %if.end38, label %if.then37, !dbg !17679

if.then37:                                        ; preds = %if.end31
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.347, i64 0, i64 0), i8* %cond) #6, !dbg !17680
  %13 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !17682
  %14 = bitcast %union.tree_node** %width to i64*, !dbg !17683
  store i64 %13, i64* %14, align 8, !dbg !17683
  %15 = inttoptr i64 %13 to %union.tree_node*, !dbg !17684
  br label %if.end38, !dbg !17684

if.end38:                                         ; preds = %if.end31, %if.then37
  %16 = phi %union.tree_node* [ %12, %if.end31 ], [ %15, %if.then37 ], !dbg !17685
  tail call void @constant_expression_warning(%union.tree_node* %16) #6, !dbg !17686
  %17 = load %union.tree_node*, %union.tree_node** %width, align 8, !dbg !17687
  %call39 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %17) #6, !dbg !17689
  %cmp40 = icmp slt i32 %call39, 0, !dbg !17690
  br i1 %cmp40, label %if.then41, label %if.else42, !dbg !17691

if.then41:                                        ; preds = %if.end38
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.349, i64 0, i64 0), i8* %cond) #6, !dbg !17692
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !17694
  %19 = bitcast %union.tree_node** %width to i64*, !dbg !17695
  store i64 %18, i64* %19, align 8, !dbg !17695
  br label %if.end49, !dbg !17696

if.else42:                                        ; preds = %if.end38
  %20 = load %union.tree_node*, %union.tree_node** %width, align 8, !dbg !17697
  %call43 = tail call i32 @integer_zerop(%union.tree_node* %20) #6, !dbg !17699
  %tobool44 = icmp ne i32 %call43, 0, !dbg !17699
  %tobool45 = icmp ne %union.tree_node* %orig_name, null, !dbg !17700
  %or.cond = and i1 %tobool44, %tobool45, !dbg !17701
  br i1 %or.cond, label %if.then46, label %if.end49, !dbg !17701

if.then46:                                        ; preds = %if.else42
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i64 0, i64 0), i8* %cond) #6, !dbg !17702
  %21 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !17704
  %22 = bitcast %union.tree_node** %width to i64*, !dbg !17705
  store i64 %21, i64* %22, align 8, !dbg !17705
  br label %if.end49, !dbg !17706

if.end49:                                         ; preds = %if.then41, %if.then46, %if.else42, %if.then
  %23 = bitcast %union.tree_node** %type to i64**, !dbg !17707
  %24 = load i64*, i64** %23, align 8, !dbg !17707
  %bf.load51 = load i64, i64* %24, align 8, !dbg !17707
  %bf.cast537 = and i64 %bf.load51, 65535, !dbg !17709
  %cmp54 = icmp eq i64 %bf.cast537, 8, !dbg !17709
  %25 = bitcast i64* %24 to %struct.tree_type*, !dbg !17710
  br i1 %cmp54, label %if.end68, label %land.lhs.true55, !dbg !17710

land.lhs.true55:                                  ; preds = %if.end49
  %cmp60 = icmp eq i64 %bf.cast537, 7, !dbg !17711
  br i1 %cmp60, label %if.end68, label %land.lhs.true61, !dbg !17712

land.lhs.true61:                                  ; preds = %land.lhs.true55
  %cmp66 = icmp eq i64 %bf.cast537, 6, !dbg !17713
  br i1 %cmp66, label %if.end68, label %if.then67, !dbg !17714

if.then67:                                        ; preds = %land.lhs.true61
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.351, i64 0, i64 0), i8* %cond) #6, !dbg !17715
  %26 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6) to i64*), align 16, !dbg !17717
  %27 = bitcast %union.tree_node** %type to i64*, !dbg !17718
  store i64 %26, i64* %27, align 8, !dbg !17718
  %28 = inttoptr i64 %26 to %struct.tree_type*, !dbg !17719
  br label %if.end68, !dbg !17719

if.end68:                                         ; preds = %land.lhs.true61, %land.lhs.true55, %if.end49, %if.then67
  %29 = phi %struct.tree_type* [ %25, %land.lhs.true61 ], [ %25, %land.lhs.true55 ], [ %25, %if.end49 ], [ %28, %if.then67 ], !dbg !17720
  %30 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !17720
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %29, i64 0, i32 16, !dbg !17720
  %31 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !17720
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !17643, metadata !DIExpression()), !dbg !17650
  %32 = load i32, i32* @input_location, align 4, !dbg !17721
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %32) #6, !dbg !17721
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !17721
  %33 = load i8, i8* %sysp, align 8, !dbg !17721
  %cmp70 = icmp eq i8 %33, 0, !dbg !17721
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !17723
  %cmp73 = icmp ne %union.tree_node* %31, %34, !dbg !17724
  %or.cond1 = and i1 %cmp70, %cmp73, !dbg !17725
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !17726
  %cmp76 = icmp ne %union.tree_node* %31, %35, !dbg !17727
  %or.cond2 = and i1 %or.cond1, %cmp76, !dbg !17725
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !17728
  %cmp79 = icmp ne %union.tree_node* %31, %36, !dbg !17729
  %or.cond3 = and i1 %or.cond2, %cmp79, !dbg !17725
  br i1 %or.cond3, label %if.then81, label %if.end83, !dbg !17725

if.then81:                                        ; preds = %if.end68
  %37 = load i32, i32* @input_location, align 4, !dbg !17730
  %call82 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %37, i32 834, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.352, i64 0, i64 0), i8* %cond) #6, !dbg !17731
  br label %if.end83, !dbg !17731

if.end83:                                         ; preds = %if.end68, %if.then81
  %38 = load %struct.tree_type*, %struct.tree_type** %30, align 8, !dbg !17732
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %38, i64 0, i32 6, !dbg !17732
  %bf.load85 = load i32, i32* %precision, align 4, !dbg !17732
  %bf.clear86 = and i32 %bf.load85, 1023, !dbg !17732
  call void @llvm.dbg.value(metadata i32 %bf.clear86, metadata !17644, metadata !DIExpression()), !dbg !17650
  %39 = load %union.tree_node*, %union.tree_node** %width, align 8, !dbg !17733
  %conv87 = zext i32 %bf.clear86 to i64, !dbg !17735
  %call88 = call i32 @compare_tree_int(%union.tree_node* %39, i64 %conv87) #6, !dbg !17736
  %cmp89 = icmp sgt i32 %call88, 0, !dbg !17737
  br i1 %cmp89, label %if.then91, label %if.else94, !dbg !17738

if.then91:                                        ; preds = %if.end83
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.353, i64 0, i64 0), i8* %cond) #6, !dbg !17739
  call void @llvm.dbg.value(metadata i64 %conv87, metadata !17645, metadata !DIExpression()), !dbg !17650
  %call93 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv87) #6, !dbg !17741
  store %union.tree_node* %call93, %union.tree_node** %width, align 8, !dbg !17742
  br label %if.end96, !dbg !17743

if.else94:                                        ; preds = %if.end83
  %40 = load %union.tree_node*, %union.tree_node** %width, align 8, !dbg !17744
  %call95 = call i64 @tree_low_cst(%union.tree_node* %40, i32 1) #6, !dbg !17745
  call void @llvm.dbg.value(metadata i64 %call95, metadata !17645, metadata !DIExpression()), !dbg !17650
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then91
  %w.0 = phi i64 [ %conv87, %if.then91 ], [ %call95, %if.else94 ], !dbg !17746
  call void @llvm.dbg.value(metadata i64 %w.0, metadata !17645, metadata !DIExpression()), !dbg !17650
  %41 = load i64*, i64** %23, align 8, !dbg !17747
  %bf.load98 = load i64, i64* %41, align 8, !dbg !17747
  %bf.cast1008 = and i64 %bf.load98, 65535, !dbg !17748
  %cmp101 = icmp eq i64 %bf.cast1008, 6, !dbg !17748
  br i1 %cmp101, label %if.then103, label %if.end130, !dbg !17749

if.then103:                                       ; preds = %if.end96
  %lang_specific = getelementptr inbounds i64, i64* %41, i64 20, !dbg !17750
  %42 = bitcast i64* %lang_specific to %struct.lang_type**, !dbg !17750
  %43 = load %struct.lang_type*, %struct.lang_type** %42, align 8, !dbg !17750
  call void @llvm.dbg.value(metadata %struct.lang_type* %43, metadata !17647, metadata !DIExpression()), !dbg !17751
  %tobool105 = icmp eq %struct.lang_type* %43, null, !dbg !17752
  br i1 %tobool105, label %if.then127, label %lor.lhs.false106, !dbg !17754

lor.lhs.false106:                                 ; preds = %if.then103
  %enum_min = getelementptr inbounds %struct.lang_type, %struct.lang_type* %43, i64 0, i32 1, !dbg !17755
  %44 = load %union.tree_node*, %union.tree_node** %enum_min, align 8, !dbg !17755
  %bf.lshr = lshr i64 %bf.load98, 21, !dbg !17756
  %45 = trunc i64 %bf.lshr to i8, !dbg !17756
  %bf.cast110 = and i8 %45, 1, !dbg !17756
  %call112 = call i32 @tree_int_cst_min_precision(%union.tree_node* %44, i8 zeroext %bf.cast110) #6, !dbg !17757
  %conv113 = zext i32 %call112 to i64, !dbg !17757
  %cmp114 = icmp ult i64 %w.0, %conv113, !dbg !17758
  br i1 %cmp114, label %if.then127, label %lor.lhs.false116, !dbg !17759

lor.lhs.false116:                                 ; preds = %lor.lhs.false106
  %enum_max = getelementptr inbounds %struct.lang_type, %struct.lang_type* %43, i64 0, i32 2, !dbg !17760
  %46 = load %union.tree_node*, %union.tree_node** %enum_max, align 8, !dbg !17760
  %47 = load i64*, i64** %23, align 8, !dbg !17761
  %bf.load118 = load i64, i64* %47, align 8, !dbg !17761
  %bf.lshr119 = lshr i64 %bf.load118, 21, !dbg !17761
  %48 = trunc i64 %bf.lshr119 to i8, !dbg !17761
  %bf.cast121 = and i8 %48, 1, !dbg !17761
  %call123 = call i32 @tree_int_cst_min_precision(%union.tree_node* %46, i8 zeroext %bf.cast121) #6, !dbg !17762
  %conv124 = zext i32 %call123 to i64, !dbg !17762
  %cmp125 = icmp ult i64 %w.0, %conv124, !dbg !17763
  br i1 %cmp125, label %if.then127, label %if.end130, !dbg !17764

if.then127:                                       ; preds = %if.then103, %lor.lhs.false116, %lor.lhs.false106
  %call128 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.354, i64 0, i64 0), i8* %cond) #6, !dbg !17765
  br label %if.end130, !dbg !17765

if.end130:                                        ; preds = %lor.lhs.false116, %if.then127, %if.end96
  ret void, !dbg !17766
}

declare dso_local %union.tree_node* @build_decl_attribute_variant(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @decl_default_tls_model(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @c_apply_type_quals_to_decl(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @c_mark_addressable(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @save_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @skip_simple_arithmetic(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @put_pending_size(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @identifier_to_locale(i8*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_binding_ptr_heap_reserve(%struct.VEC_c_binding_ptr_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !17767 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_heap** %vec_, metadata !17771, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 1, metadata !17772, metadata !DIExpression()), !dbg !17774
  %0 = load %struct.VEC_c_binding_ptr_heap*, %struct.VEC_c_binding_ptr_heap** %vec_, align 8, !dbg !17775
  %tobool = icmp eq %struct.VEC_c_binding_ptr_heap* %0, null, !dbg !17775
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17775

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_c_binding_ptr_heap, %struct.VEC_c_binding_ptr_heap* %0, i64 0, i32 0, !dbg !17775
  br label %cond.end, !dbg !17775

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_c_binding_ptr_base* [ %base, %cond.true ], [ null, %entry ], !dbg !17775
  %call = tail call fastcc i32 @VEC_c_binding_ptr_base_space(%struct.VEC_c_binding_ptr_base* %cond, i32 1) #7, !dbg !17775
  %tobool1 = icmp eq i32 %call, 0, !dbg !17775
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !17775
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !17773, metadata !DIExpression()), !dbg !17774
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17775

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_c_binding_ptr_heap** %vec_ to i8**, !dbg !17776
  %2 = load i8*, i8** %1, align 8, !dbg !17776
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !17776
  store i8* %call3, i8** %1, align 8, !dbg !17776
  br label %if.end, !dbg !17776

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !17775
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.c_binding** @VEC_c_binding_ptr_base_quick_push(%struct.VEC_c_binding_ptr_base* %vec_, %struct.c_binding* %obj_) unnamed_addr #0 !dbg !17778 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_base* %vec_, metadata !17783, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata %struct.c_binding* %obj_, metadata !17784, metadata !DIExpression()), !dbg !17786
  %num1 = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 0, !dbg !17787
  %0 = load i32, i32* %num1, align 8, !dbg !17787
  %inc = add i32 %0, 1, !dbg !17787
  store i32 %inc, i32* %num1, align 8, !dbg !17787
  %idxprom = zext i32 %0 to i64, !dbg !17787
  %arrayidx = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !17787
  call void @llvm.dbg.value(metadata %struct.c_binding** %arrayidx, metadata !17785, metadata !DIExpression()), !dbg !17786
  store %struct.c_binding* %obj_, %struct.c_binding** %arrayidx, align 8, !dbg !17787
  ret %struct.c_binding** %arrayidx, !dbg !17787
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_binding_ptr_base_space(%struct.VEC_c_binding_ptr_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !17788 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_base* %vec_, metadata !17792, metadata !DIExpression()), !dbg !17794
  call void @llvm.dbg.value(metadata i32 1, metadata !17793, metadata !DIExpression()), !dbg !17794
  %tobool = icmp eq %struct.VEC_c_binding_ptr_base* %vec_, null, !dbg !17795
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !17795

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 1, !dbg !17795
  %0 = load i32, i32* %alloc, align 4, !dbg !17795
  %num = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 0, !dbg !17795
  %1 = load i32, i32* %num, align 8, !dbg !17795
  %cmp1 = icmp ne i32 %0, %1, !dbg !17795
  %phitmp = zext i1 %cmp1 to i32, !dbg !17795
  br label %cond.end, !dbg !17795

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17795

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !17795
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !17796 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !17800, metadata !DIExpression()), !dbg !17801
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !17802
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17802

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !17802
  %0 = load i32, i32* %num, align 8, !dbg !17802
  br label %cond.end, !dbg !17802

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !17802
  ret i32 %cond, !dbg !17802
}

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local i32 @pointer_set_contains(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_c_binding_ptr_base_iterate(%struct.VEC_c_binding_ptr_base* %vec_, i32 %ix_, %struct.c_binding** %ptr) unnamed_addr #0 !dbg !17803 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_c_binding_ptr_base* %vec_, metadata !17809, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !17810, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata %struct.c_binding** %ptr, metadata !17811, metadata !DIExpression()), !dbg !17812
  %tobool = icmp eq %struct.VEC_c_binding_ptr_base* %vec_, null, !dbg !17813
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !17813

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 0, !dbg !17813
  %0 = load i32, i32* %num, align 8, !dbg !17813
  %cmp = icmp ugt i32 %0, %ix_, !dbg !17813
  br i1 %cmp, label %if.then, label %if.else, !dbg !17815

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !17816
  %arrayidx = getelementptr inbounds %struct.VEC_c_binding_ptr_base, %struct.VEC_c_binding_ptr_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !17816
  %1 = load %struct.c_binding*, %struct.c_binding** %arrayidx, align 8, !dbg !17816
  br label %return, !dbg !17816

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !17818

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.c_binding* [ null, %if.else ], [ %1, %if.then ], !dbg !17820
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !17820
  store %struct.c_binding* %storemerge, %struct.c_binding** %ptr, align 8, !dbg !17820
  ret i32 %retval.0, !dbg !17815
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !17821 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !17825, metadata !DIExpression()), !dbg !17828
  call void @llvm.dbg.value(metadata i32 1, metadata !17826, metadata !DIExpression()), !dbg !17828
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !17829
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !17829
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !17829

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !17829
  br label %cond.end, !dbg !17829

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !17829
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !17829
  %tobool1 = icmp eq i32 %call, 0, !dbg !17829
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !17829
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !17827, metadata !DIExpression()), !dbg !17828
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17829

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !17830
  %2 = load i8*, i8** %1, align 8, !dbg !17830
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !17830
  store i8* %call3, i8** %1, align 8, !dbg !17830
  br label %if.end, !dbg !17830

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !17829
}

declare dso_local %union.tree_node* @build_variant_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @wrapup_global_declaration_1(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @wrapup_global_declaration_2(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @check_global_declaration_1(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2362, !2363, !2364}
!llvm.ident = !{!2365}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "c_inline_statics", scope: !2, file: !3, line: 493, type: !2129, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !617, globals: !2230, nameTableKind: None)
!3 = !DIFile(filename: "c-decl.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !336, !342, !347, !352, !370, !377, !384, !397, !563, !568, !582, !590, !597, !601, !610}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !330, line: 30, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335}
!332 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cpp_builtin_type", file: !385, line: 593, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./cpplib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!387 = !DIEnumerator(name: "BT_SPECLINE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "BT_DATE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "BT_FILE", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "BT_BASE_FILE", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "BT_INCLUDE_LEVEL", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "BT_TIME", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "BT_STDC", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "BT_PRAGMA", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "BT_TIMESTAMP", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "BT_COUNTER", value: 9, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rid", file: !398, line: 48, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./c-common.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!400 = !DIEnumerator(name: "RID_STATIC", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "RID_UNSIGNED", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "RID_LONG", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "RID_CONST", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "RID_EXTERN", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "RID_REGISTER", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "RID_TYPEDEF", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "RID_SHORT", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "RID_INLINE", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "RID_VOLATILE", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "RID_SIGNED", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "RID_AUTO", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "RID_RESTRICT", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "RID_COMPLEX", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "RID_THREAD", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "RID_SAT", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "RID_FRIEND", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "RID_VIRTUAL", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "RID_EXPLICIT", value: 18, isUnsigned: true)
!419 = !DIEnumerator(name: "RID_EXPORT", value: 19, isUnsigned: true)
!420 = !DIEnumerator(name: "RID_MUTABLE", value: 20, isUnsigned: true)
!421 = !DIEnumerator(name: "RID_IN", value: 21, isUnsigned: true)
!422 = !DIEnumerator(name: "RID_OUT", value: 22, isUnsigned: true)
!423 = !DIEnumerator(name: "RID_INOUT", value: 23, isUnsigned: true)
!424 = !DIEnumerator(name: "RID_BYCOPY", value: 24, isUnsigned: true)
!425 = !DIEnumerator(name: "RID_BYREF", value: 25, isUnsigned: true)
!426 = !DIEnumerator(name: "RID_ONEWAY", value: 26, isUnsigned: true)
!427 = !DIEnumerator(name: "RID_IMAGINARY", value: 27, isUnsigned: true)
!428 = !DIEnumerator(name: "RID_INT", value: 28, isUnsigned: true)
!429 = !DIEnumerator(name: "RID_CHAR", value: 29, isUnsigned: true)
!430 = !DIEnumerator(name: "RID_FLOAT", value: 30, isUnsigned: true)
!431 = !DIEnumerator(name: "RID_DOUBLE", value: 31, isUnsigned: true)
!432 = !DIEnumerator(name: "RID_VOID", value: 32, isUnsigned: true)
!433 = !DIEnumerator(name: "RID_ENUM", value: 33, isUnsigned: true)
!434 = !DIEnumerator(name: "RID_STRUCT", value: 34, isUnsigned: true)
!435 = !DIEnumerator(name: "RID_UNION", value: 35, isUnsigned: true)
!436 = !DIEnumerator(name: "RID_IF", value: 36, isUnsigned: true)
!437 = !DIEnumerator(name: "RID_ELSE", value: 37, isUnsigned: true)
!438 = !DIEnumerator(name: "RID_WHILE", value: 38, isUnsigned: true)
!439 = !DIEnumerator(name: "RID_DO", value: 39, isUnsigned: true)
!440 = !DIEnumerator(name: "RID_FOR", value: 40, isUnsigned: true)
!441 = !DIEnumerator(name: "RID_SWITCH", value: 41, isUnsigned: true)
!442 = !DIEnumerator(name: "RID_CASE", value: 42, isUnsigned: true)
!443 = !DIEnumerator(name: "RID_DEFAULT", value: 43, isUnsigned: true)
!444 = !DIEnumerator(name: "RID_BREAK", value: 44, isUnsigned: true)
!445 = !DIEnumerator(name: "RID_CONTINUE", value: 45, isUnsigned: true)
!446 = !DIEnumerator(name: "RID_RETURN", value: 46, isUnsigned: true)
!447 = !DIEnumerator(name: "RID_GOTO", value: 47, isUnsigned: true)
!448 = !DIEnumerator(name: "RID_SIZEOF", value: 48, isUnsigned: true)
!449 = !DIEnumerator(name: "RID_ASM", value: 49, isUnsigned: true)
!450 = !DIEnumerator(name: "RID_TYPEOF", value: 50, isUnsigned: true)
!451 = !DIEnumerator(name: "RID_ALIGNOF", value: 51, isUnsigned: true)
!452 = !DIEnumerator(name: "RID_ATTRIBUTE", value: 52, isUnsigned: true)
!453 = !DIEnumerator(name: "RID_VA_ARG", value: 53, isUnsigned: true)
!454 = !DIEnumerator(name: "RID_EXTENSION", value: 54, isUnsigned: true)
!455 = !DIEnumerator(name: "RID_IMAGPART", value: 55, isUnsigned: true)
!456 = !DIEnumerator(name: "RID_REALPART", value: 56, isUnsigned: true)
!457 = !DIEnumerator(name: "RID_LABEL", value: 57, isUnsigned: true)
!458 = !DIEnumerator(name: "RID_CHOOSE_EXPR", value: 58, isUnsigned: true)
!459 = !DIEnumerator(name: "RID_TYPES_COMPATIBLE_P", value: 59, isUnsigned: true)
!460 = !DIEnumerator(name: "RID_DFLOAT32", value: 60, isUnsigned: true)
!461 = !DIEnumerator(name: "RID_DFLOAT64", value: 61, isUnsigned: true)
!462 = !DIEnumerator(name: "RID_DFLOAT128", value: 62, isUnsigned: true)
!463 = !DIEnumerator(name: "RID_FRACT", value: 63, isUnsigned: true)
!464 = !DIEnumerator(name: "RID_ACCUM", value: 64, isUnsigned: true)
!465 = !DIEnumerator(name: "RID_CXX_COMPAT_WARN", value: 65, isUnsigned: true)
!466 = !DIEnumerator(name: "RID_FUNCTION_NAME", value: 66, isUnsigned: true)
!467 = !DIEnumerator(name: "RID_PRETTY_FUNCTION_NAME", value: 67, isUnsigned: true)
!468 = !DIEnumerator(name: "RID_C99_FUNCTION_NAME", value: 68, isUnsigned: true)
!469 = !DIEnumerator(name: "RID_BOOL", value: 69, isUnsigned: true)
!470 = !DIEnumerator(name: "RID_WCHAR", value: 70, isUnsigned: true)
!471 = !DIEnumerator(name: "RID_CLASS", value: 71, isUnsigned: true)
!472 = !DIEnumerator(name: "RID_PUBLIC", value: 72, isUnsigned: true)
!473 = !DIEnumerator(name: "RID_PRIVATE", value: 73, isUnsigned: true)
!474 = !DIEnumerator(name: "RID_PROTECTED", value: 74, isUnsigned: true)
!475 = !DIEnumerator(name: "RID_TEMPLATE", value: 75, isUnsigned: true)
!476 = !DIEnumerator(name: "RID_NULL", value: 76, isUnsigned: true)
!477 = !DIEnumerator(name: "RID_CATCH", value: 77, isUnsigned: true)
!478 = !DIEnumerator(name: "RID_DELETE", value: 78, isUnsigned: true)
!479 = !DIEnumerator(name: "RID_FALSE", value: 79, isUnsigned: true)
!480 = !DIEnumerator(name: "RID_NAMESPACE", value: 80, isUnsigned: true)
!481 = !DIEnumerator(name: "RID_NEW", value: 81, isUnsigned: true)
!482 = !DIEnumerator(name: "RID_OFFSETOF", value: 82, isUnsigned: true)
!483 = !DIEnumerator(name: "RID_OPERATOR", value: 83, isUnsigned: true)
!484 = !DIEnumerator(name: "RID_THIS", value: 84, isUnsigned: true)
!485 = !DIEnumerator(name: "RID_THROW", value: 85, isUnsigned: true)
!486 = !DIEnumerator(name: "RID_TRUE", value: 86, isUnsigned: true)
!487 = !DIEnumerator(name: "RID_TRY", value: 87, isUnsigned: true)
!488 = !DIEnumerator(name: "RID_TYPENAME", value: 88, isUnsigned: true)
!489 = !DIEnumerator(name: "RID_TYPEID", value: 89, isUnsigned: true)
!490 = !DIEnumerator(name: "RID_USING", value: 90, isUnsigned: true)
!491 = !DIEnumerator(name: "RID_CHAR16", value: 91, isUnsigned: true)
!492 = !DIEnumerator(name: "RID_CHAR32", value: 92, isUnsigned: true)
!493 = !DIEnumerator(name: "RID_CONSTCAST", value: 93, isUnsigned: true)
!494 = !DIEnumerator(name: "RID_DYNCAST", value: 94, isUnsigned: true)
!495 = !DIEnumerator(name: "RID_REINTCAST", value: 95, isUnsigned: true)
!496 = !DIEnumerator(name: "RID_STATCAST", value: 96, isUnsigned: true)
!497 = !DIEnumerator(name: "RID_HAS_NOTHROW_ASSIGN", value: 97, isUnsigned: true)
!498 = !DIEnumerator(name: "RID_HAS_NOTHROW_CONSTRUCTOR", value: 98, isUnsigned: true)
!499 = !DIEnumerator(name: "RID_HAS_NOTHROW_COPY", value: 99, isUnsigned: true)
!500 = !DIEnumerator(name: "RID_HAS_TRIVIAL_ASSIGN", value: 100, isUnsigned: true)
!501 = !DIEnumerator(name: "RID_HAS_TRIVIAL_CONSTRUCTOR", value: 101, isUnsigned: true)
!502 = !DIEnumerator(name: "RID_HAS_TRIVIAL_COPY", value: 102, isUnsigned: true)
!503 = !DIEnumerator(name: "RID_HAS_TRIVIAL_DESTRUCTOR", value: 103, isUnsigned: true)
!504 = !DIEnumerator(name: "RID_HAS_VIRTUAL_DESTRUCTOR", value: 104, isUnsigned: true)
!505 = !DIEnumerator(name: "RID_IS_ABSTRACT", value: 105, isUnsigned: true)
!506 = !DIEnumerator(name: "RID_IS_BASE_OF", value: 106, isUnsigned: true)
!507 = !DIEnumerator(name: "RID_IS_CONVERTIBLE_TO", value: 107, isUnsigned: true)
!508 = !DIEnumerator(name: "RID_IS_CLASS", value: 108, isUnsigned: true)
!509 = !DIEnumerator(name: "RID_IS_EMPTY", value: 109, isUnsigned: true)
!510 = !DIEnumerator(name: "RID_IS_ENUM", value: 110, isUnsigned: true)
!511 = !DIEnumerator(name: "RID_IS_POD", value: 111, isUnsigned: true)
!512 = !DIEnumerator(name: "RID_IS_POLYMORPHIC", value: 112, isUnsigned: true)
!513 = !DIEnumerator(name: "RID_IS_STD_LAYOUT", value: 113, isUnsigned: true)
!514 = !DIEnumerator(name: "RID_IS_TRIVIAL", value: 114, isUnsigned: true)
!515 = !DIEnumerator(name: "RID_IS_UNION", value: 115, isUnsigned: true)
!516 = !DIEnumerator(name: "RID_STATIC_ASSERT", value: 116, isUnsigned: true)
!517 = !DIEnumerator(name: "RID_CONSTEXPR", value: 117, isUnsigned: true)
!518 = !DIEnumerator(name: "RID_DECLTYPE", value: 118, isUnsigned: true)
!519 = !DIEnumerator(name: "RID_AT_ENCODE", value: 119, isUnsigned: true)
!520 = !DIEnumerator(name: "RID_AT_END", value: 120, isUnsigned: true)
!521 = !DIEnumerator(name: "RID_AT_CLASS", value: 121, isUnsigned: true)
!522 = !DIEnumerator(name: "RID_AT_ALIAS", value: 122, isUnsigned: true)
!523 = !DIEnumerator(name: "RID_AT_DEFS", value: 123, isUnsigned: true)
!524 = !DIEnumerator(name: "RID_AT_PRIVATE", value: 124, isUnsigned: true)
!525 = !DIEnumerator(name: "RID_AT_PROTECTED", value: 125, isUnsigned: true)
!526 = !DIEnumerator(name: "RID_AT_PUBLIC", value: 126, isUnsigned: true)
!527 = !DIEnumerator(name: "RID_AT_PROTOCOL", value: 127, isUnsigned: true)
!528 = !DIEnumerator(name: "RID_AT_SELECTOR", value: 128, isUnsigned: true)
!529 = !DIEnumerator(name: "RID_AT_THROW", value: 129, isUnsigned: true)
!530 = !DIEnumerator(name: "RID_AT_TRY", value: 130, isUnsigned: true)
!531 = !DIEnumerator(name: "RID_AT_CATCH", value: 131, isUnsigned: true)
!532 = !DIEnumerator(name: "RID_AT_FINALLY", value: 132, isUnsigned: true)
!533 = !DIEnumerator(name: "RID_AT_SYNCHRONIZED", value: 133, isUnsigned: true)
!534 = !DIEnumerator(name: "RID_AT_INTERFACE", value: 134, isUnsigned: true)
!535 = !DIEnumerator(name: "RID_AT_IMPLEMENTATION", value: 135, isUnsigned: true)
!536 = !DIEnumerator(name: "RID_ADDR_SPACE_0", value: 136, isUnsigned: true)
!537 = !DIEnumerator(name: "RID_ADDR_SPACE_1", value: 137, isUnsigned: true)
!538 = !DIEnumerator(name: "RID_ADDR_SPACE_2", value: 138, isUnsigned: true)
!539 = !DIEnumerator(name: "RID_ADDR_SPACE_3", value: 139, isUnsigned: true)
!540 = !DIEnumerator(name: "RID_ADDR_SPACE_4", value: 140, isUnsigned: true)
!541 = !DIEnumerator(name: "RID_ADDR_SPACE_5", value: 141, isUnsigned: true)
!542 = !DIEnumerator(name: "RID_ADDR_SPACE_6", value: 142, isUnsigned: true)
!543 = !DIEnumerator(name: "RID_ADDR_SPACE_7", value: 143, isUnsigned: true)
!544 = !DIEnumerator(name: "RID_ADDR_SPACE_8", value: 144, isUnsigned: true)
!545 = !DIEnumerator(name: "RID_ADDR_SPACE_9", value: 145, isUnsigned: true)
!546 = !DIEnumerator(name: "RID_ADDR_SPACE_10", value: 146, isUnsigned: true)
!547 = !DIEnumerator(name: "RID_ADDR_SPACE_11", value: 147, isUnsigned: true)
!548 = !DIEnumerator(name: "RID_ADDR_SPACE_12", value: 148, isUnsigned: true)
!549 = !DIEnumerator(name: "RID_ADDR_SPACE_13", value: 149, isUnsigned: true)
!550 = !DIEnumerator(name: "RID_ADDR_SPACE_14", value: 150, isUnsigned: true)
!551 = !DIEnumerator(name: "RID_ADDR_SPACE_15", value: 151, isUnsigned: true)
!552 = !DIEnumerator(name: "RID_FIRST_ADDR_SPACE", value: 136, isUnsigned: true)
!553 = !DIEnumerator(name: "RID_LAST_ADDR_SPACE", value: 151, isUnsigned: true)
!554 = !DIEnumerator(name: "RID_MAX", value: 152, isUnsigned: true)
!555 = !DIEnumerator(name: "RID_FIRST_MODIFIER", value: 0, isUnsigned: true)
!556 = !DIEnumerator(name: "RID_LAST_MODIFIER", value: 26, isUnsigned: true)
!557 = !DIEnumerator(name: "RID_FIRST_CXX0X", value: 116, isUnsigned: true)
!558 = !DIEnumerator(name: "RID_LAST_CXX0X", value: 118, isUnsigned: true)
!559 = !DIEnumerator(name: "RID_FIRST_AT", value: 119, isUnsigned: true)
!560 = !DIEnumerator(name: "RID_LAST_AT", value: 135, isUnsigned: true)
!561 = !DIEnumerator(name: "RID_FIRST_PQ", value: 21, isUnsigned: true)
!562 = !DIEnumerator(name: "RID_LAST_PQ", value: 26, isUnsigned: true)
!563 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_inline_static_type", file: !564, line: 382, baseType: !7, size: 32, elements: !565)
!564 = !DIFile(filename: "./c-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!565 = !{!566, !567}
!566 = !DIEnumerator(name: "csi_internal", value: 0, isUnsigned: true)
!567 = !DIEnumerator(name: "csi_modifiable", value: 1, isUnsigned: true)
!568 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_typespec_keyword", file: !564, line: 192, baseType: !7, size: 32, elements: !569)
!569 = !{!570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!570 = !DIEnumerator(name: "cts_none", value: 0, isUnsigned: true)
!571 = !DIEnumerator(name: "cts_void", value: 1, isUnsigned: true)
!572 = !DIEnumerator(name: "cts_bool", value: 2, isUnsigned: true)
!573 = !DIEnumerator(name: "cts_char", value: 3, isUnsigned: true)
!574 = !DIEnumerator(name: "cts_int", value: 4, isUnsigned: true)
!575 = !DIEnumerator(name: "cts_float", value: 5, isUnsigned: true)
!576 = !DIEnumerator(name: "cts_double", value: 6, isUnsigned: true)
!577 = !DIEnumerator(name: "cts_dfloat32", value: 7, isUnsigned: true)
!578 = !DIEnumerator(name: "cts_dfloat64", value: 8, isUnsigned: true)
!579 = !DIEnumerator(name: "cts_dfloat128", value: 9, isUnsigned: true)
!580 = !DIEnumerator(name: "cts_fract", value: 10, isUnsigned: true)
!581 = !DIEnumerator(name: "cts_accum", value: 11, isUnsigned: true)
!582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_storage_class", file: !564, line: 180, baseType: !7, size: 32, elements: !583)
!583 = !{!584, !585, !586, !587, !588, !589}
!584 = !DIEnumerator(name: "csc_none", value: 0, isUnsigned: true)
!585 = !DIEnumerator(name: "csc_auto", value: 1, isUnsigned: true)
!586 = !DIEnumerator(name: "csc_extern", value: 2, isUnsigned: true)
!587 = !DIEnumerator(name: "csc_register", value: 3, isUnsigned: true)
!588 = !DIEnumerator(name: "csc_static", value: 4, isUnsigned: true)
!589 = !DIEnumerator(name: "csc_typedef", value: 5, isUnsigned: true)
!590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_declarator_kind", file: !564, line: 285, baseType: !7, size: 32, elements: !591)
!591 = !{!592, !593, !594, !595, !596}
!592 = !DIEnumerator(name: "cdk_id", value: 0, isUnsigned: true)
!593 = !DIEnumerator(name: "cdk_function", value: 1, isUnsigned: true)
!594 = !DIEnumerator(name: "cdk_array", value: 2, isUnsigned: true)
!595 = !DIEnumerator(name: "cdk_pointer", value: 3, isUnsigned: true)
!596 = !DIEnumerator(name: "cdk_attrs", value: 4, isUnsigned: true)
!597 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "deprecated_states", file: !3, line: 82, baseType: !7, size: 32, elements: !598)
!598 = !{!599, !600}
!599 = !DIEnumerator(name: "DEPRECATED_NORMAL", value: 0, isUnsigned: true)
!600 = !DIEnumerator(name: "DEPRECATED_SUPPRESS", value: 1, isUnsigned: true)
!601 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_typespec_kind", file: !564, line: 137, baseType: !7, size: 32, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !609}
!603 = !DIEnumerator(name: "ctsk_resword", value: 0, isUnsigned: true)
!604 = !DIEnumerator(name: "ctsk_tagref", value: 1, isUnsigned: true)
!605 = !DIEnumerator(name: "ctsk_tagfirstref", value: 2, isUnsigned: true)
!606 = !DIEnumerator(name: "ctsk_tagdef", value: 3, isUnsigned: true)
!607 = !DIEnumerator(name: "ctsk_typedef", value: 4, isUnsigned: true)
!608 = !DIEnumerator(name: "ctsk_objc", value: 5, isUnsigned: true)
!609 = !DIEnumerator(name: "ctsk_typeof", value: 6, isUnsigned: true)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "decl_context", file: !3, line: 70, baseType: !7, size: 32, elements: !611)
!611 = !{!612, !613, !614, !615, !616}
!612 = !DIEnumerator(name: "NORMAL", value: 0, isUnsigned: true)
!613 = !DIEnumerator(name: "FUNCDEF", value: 1, isUnsigned: true)
!614 = !DIEnumerator(name: "PARM", value: 2, isUnsigned: true)
!615 = !DIEnumerator(name: "FIELD", value: 3, isUnsigned: true)
!616 = !DIEnumerator(name: "TYPENAME", value: 4, isUnsigned: true)
!617 = !{!618, !619, !620, !621, !624, !625, !134, !627, !629, !397, !2128, !672, !2129, !2077, !2111, !2137, !2138, !1477, !2059, !2141, !622, !1622, !2162, !1725, !1729, !1605, !2186, !2190, !2224, !1107, !2061, !2069, !2225, !801, !1507, !7, !2110, !2098, !2166, !2172, !2184}
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!620 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !628, line: 44, baseType: !7)
!628 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lang_identifier", file: !3, line: 242, size: 640, elements: !631)
!631 = !{!632, !2060, !2126, !2127}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "common_id", scope: !630, file: !3, line: 243, baseType: !633, size: 448)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_common_identifier", file: !398, line: 261, size: 448, elements: !634)
!634 = !{!635, !2038}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !633, file: !398, line: 262, baseType: !636, size: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !637)
!637 = !{!638, !671, !2037}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !636, file: !135, line: 403, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !639, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !639, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !639, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !639, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !639, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !639, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !639, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !639, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !639, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !639, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !639, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !639, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !639, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !639, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !639, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !639, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !639, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !639, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !639, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !639, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !639, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !639, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !639, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !639, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !639, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !639, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !639, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !639, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !639, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !639, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !636, file: !135, line: 404, baseType: !672, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !673, line: 56, baseType: !674)
!673 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !676)
!676 = !{!677, !678, !679, !692, !711, !722, !727, !736, !742, !755, !765, !806, !1299, !1327, !1335, !1336, !1341, !1350, !1356, !1361, !1365, !1369, !1680, !1737, !1743, !1749, !1756, !1767, !1781, !1798, !1810, !1832, !1847, !2019}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !675, file: !135, line: 3372, baseType: !639, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !675, file: !135, line: 3373, baseType: !636, size: 192)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !675, file: !135, line: 3374, baseType: !680, size: 320)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !681)
!681 = !{!682, !683}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !680, file: !135, line: 1385, baseType: !636, size: 192)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !680, file: !135, line: 1386, baseType: !684, size: 128, offset: 192)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !685, line: 58, baseType: !686)
!685 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 54, size: 128, elements: !687)
!687 = !{!688, !690}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !686, file: !685, line: 56, baseType: !689, size: 64)
!689 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !686, file: !685, line: 57, baseType: !691, size: 64, offset: 64)
!691 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !675, file: !135, line: 3375, baseType: !693, size: 256)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !694)
!694 = !{!695, !696}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !693, file: !135, line: 1398, baseType: !636, size: 192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !693, file: !135, line: 1399, baseType: !697, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !699, line: 52, size: 256, elements: !700)
!699 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!700 = !{!701, !702, !703, !704, !705, !706, !707}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !698, file: !699, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !698, file: !699, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !698, file: !699, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !698, file: !699, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !698, file: !699, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !698, file: !699, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !698, file: !699, line: 62, baseType: !708, size: 192, offset: 64)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, size: 192, elements: !709)
!709 = !{!710}
!710 = !DISubrange(count: 3)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !675, file: !135, line: 3376, baseType: !712, size: 256)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !713)
!713 = !{!714, !715}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !712, file: !135, line: 1409, baseType: !636, size: 192)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !712, file: !135, line: 1410, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !718, line: 27, size: 192, elements: !719)
!718 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!719 = !{!720, !721}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !717, file: !718, line: 29, baseType: !684, size: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !717, file: !718, line: 30, baseType: !5, size: 32, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !675, file: !135, line: 3377, baseType: !723, size: 256)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !724)
!724 = !{!725, !726}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !723, file: !135, line: 1438, baseType: !636, size: 192)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !723, file: !135, line: 1439, baseType: !672, size: 64, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !675, file: !135, line: 3378, baseType: !728, size: 256)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !729)
!729 = !{!730, !731, !732}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !728, file: !135, line: 1419, baseType: !636, size: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !728, file: !135, line: 1420, baseType: !620, size: 32, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !728, file: !135, line: 1421, baseType: !733, size: 8, offset: 224)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 8, elements: !734)
!734 = !{!735}
!735 = !DISubrange(count: 1)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !675, file: !135, line: 3379, baseType: !737, size: 320)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !738)
!738 = !{!739, !740, !741}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !737, file: !135, line: 1429, baseType: !636, size: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !737, file: !135, line: 1430, baseType: !672, size: 64, offset: 192)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !737, file: !135, line: 1431, baseType: !672, size: 64, offset: 256)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !675, file: !135, line: 3380, baseType: !743, size: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !743, file: !135, line: 1461, baseType: !636, size: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !743, file: !135, line: 1462, baseType: !747, size: 128, offset: 192)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !748, line: 31, size: 128, elements: !749)
!748 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!749 = !{!750, !753, !754}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !747, file: !748, line: 32, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !747, file: !748, line: 33, baseType: !7, size: 32, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !747, file: !748, line: 34, baseType: !7, size: 32, offset: 96)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !675, file: !135, line: 3381, baseType: !756, size: 384)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !757)
!757 = !{!758, !759, !762, !763, !764}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !756, file: !135, line: 2508, baseType: !636, size: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !756, file: !135, line: 2509, baseType: !760, size: 32, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !761, line: 58, baseType: !627)
!761 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!762 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !756, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !756, file: !135, line: 2511, baseType: !672, size: 64, offset: 256)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !756, file: !135, line: 2512, baseType: !672, size: 64, offset: 320)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !675, file: !135, line: 3382, baseType: !766, size: 896)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !767)
!767 = !{!768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !766, file: !135, line: 2653, baseType: !756, size: 384)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !766, file: !135, line: 2654, baseType: !672, size: 64, offset: 384)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !766, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !766, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !766, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !766, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !766, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !766, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !766, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !766, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !766, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !766, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !766, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !766, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !766, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !766, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !766, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !766, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !766, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !766, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !766, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !766, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !766, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !766, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !766, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !766, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !766, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !766, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !766, file: !135, line: 2705, baseType: !672, size: 64, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !766, file: !135, line: 2706, baseType: !672, size: 64, offset: 640)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !766, file: !135, line: 2707, baseType: !672, size: 64, offset: 704)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !766, file: !135, line: 2708, baseType: !672, size: 64, offset: 768)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !766, file: !135, line: 2711, baseType: !801, size: 64, offset: 832)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !803, line: 39, size: 8, elements: !804)
!803 = !DIFile(filename: "./c-lang.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!804 = !{!805}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !802, file: !803, line: 40, baseType: !623, size: 8)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !675, file: !135, line: 3383, baseType: !807, size: 960)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !807, file: !135, line: 2757, baseType: !766, size: 896)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !807, file: !135, line: 2758, baseType: !811, size: 64, offset: 896)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !673, line: 50, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !814, line: 240, size: 384, elements: !815)
!814 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!815 = !{!816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !813, file: !814, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !813, file: !814, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !813, file: !814, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !813, file: !814, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !813, file: !814, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !813, file: !814, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !813, file: !814, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !813, file: !814, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !813, file: !814, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !813, file: !814, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !813, file: !814, line: 321, baseType: !827, size: 320, offset: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !814, line: 315, size: 320, elements: !828)
!828 = !{!829, !1232, !1234, !1297, !1298}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !827, file: !814, line: 316, baseType: !830, size: 64)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 64, elements: !734)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !814, line: 183, baseType: !832)
!832 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !814, line: 166, size: 64, elements: !833)
!833 = !{!834, !835, !836, !837, !838, !846, !847, !859, !862, !922, !923, !1209, !1222, !1229}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !832, file: !814, line: 168, baseType: !620, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !832, file: !814, line: 169, baseType: !7, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !832, file: !814, line: 170, baseType: !625, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !832, file: !814, line: 171, baseType: !811, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !832, file: !814, line: 172, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !673, line: 53, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !814, line: 359, size: 128, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !841, file: !814, line: 360, baseType: !620, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !841, file: !814, line: 361, baseType: !845, size: 64, offset: 64)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !734)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !832, file: !814, line: 173, baseType: !5, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !832, file: !814, line: 174, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !814, line: 133, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !814, line: 115, size: 32, elements: !850)
!850 = !{!851, !852, !853, !854, !855, !856, !857, !858}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !849, file: !814, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !849, file: !814, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !849, file: !814, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !849, file: !814, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !849, file: !814, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !849, file: !814, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !849, file: !814, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !849, file: !814, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !832, file: !814, line: 175, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !814, line: 175, flags: DIFlagFwdDecl)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !832, file: !814, line: 176, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !865, line: 75, size: 256, elements: !866)
!865 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!866 = !{!867, !881, !882, !883}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !864, file: !865, line: 76, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !865, line: 68, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !865, line: 63, size: 320, elements: !871)
!871 = !{!872, !874, !875, !876}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !870, file: !865, line: 64, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !870, file: !865, line: 65, baseType: !873, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !870, file: !865, line: 66, baseType: !7, size: 32, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !870, file: !865, line: 67, baseType: !877, size: 128, offset: 192)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !878, size: 128, elements: !879)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !865, line: 29, baseType: !689)
!879 = !{!880}
!880 = !DISubrange(count: 2)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !864, file: !865, line: 77, baseType: !868, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !864, file: !865, line: 78, baseType: !7, size: 32, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !864, file: !865, line: 79, baseType: !884, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !865, line: 49, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !865, line: 45, size: 832, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !886, file: !865, line: 46, baseType: !873, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !886, file: !865, line: 47, baseType: !863, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !886, file: !865, line: 48, baseType: !891, size: 704, offset: 128)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !892, line: 164, size: 704, elements: !893)
!892 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!893 = !{!894, !895, !905, !906, !907, !908, !909, !910, !914, !918, !919, !920, !921}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !891, file: !892, line: 166, baseType: !691, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !891, file: !892, line: 167, baseType: !896, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !892, line: 157, size: 192, elements: !898)
!898 = !{!899, !900, !901}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !897, file: !892, line: 159, baseType: !622, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !897, file: !892, line: 160, baseType: !896, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !897, file: !892, line: 161, baseType: !902, size: 32, offset: 128)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 32, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 4)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !891, file: !892, line: 168, baseType: !622, size: 64, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !891, file: !892, line: 169, baseType: !622, size: 64, offset: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !891, file: !892, line: 170, baseType: !622, size: 64, offset: 256)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !891, file: !892, line: 171, baseType: !691, size: 64, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !891, file: !892, line: 172, baseType: !620, size: 32, offset: 384)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !891, file: !892, line: 176, baseType: !911, size: 64, offset: 448)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!896, !624, !691}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !891, file: !892, line: 177, baseType: !915, size: 64, offset: 512)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !624, !896}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !891, file: !892, line: 178, baseType: !624, size: 64, offset: 576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !891, file: !892, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !891, file: !892, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !891, file: !892, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !832, file: !814, line: 177, baseType: !672, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !832, file: !814, line: 178, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !926)
!926 = !{!927, !1174, !1175, !1176, !1179, !1183, !1184, !1185, !1203, !1204, !1205, !1206, !1207, !1208}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !925, file: !337, line: 219, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !931)
!931 = !{!932}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !930, file: !337, line: 151, baseType: !933, size: 128)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !934, file: !337, line: 150, baseType: !7, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !934, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !934, file: !337, line: 150, baseType: !939, size: 64, offset: 64)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 64, elements: !734)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !673, line: 108, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !943)
!943 = !{!944, !945, !946, !1166, !1167, !1168, !1169, !1170, !1171, !1172}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !942, file: !337, line: 124, baseType: !924, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !942, file: !337, line: 125, baseType: !924, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !942, file: !337, line: 131, baseType: !947, size: 64, offset: 128)
!947 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !948)
!948 = !{!949, !1165}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !947, file: !337, line: 129, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !673, line: 66, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !953, line: 143, size: 192, elements: !954)
!953 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!954 = !{!955, !1163, !1164}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !952, file: !953, line: 145, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !673, line: 69, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !953, line: 136, size: 192, elements: !959)
!959 = !{!960, !1161, !1162}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !958, file: !953, line: 137, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !673, line: 58, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !953, line: 737, size: 768, elements: !964)
!964 = !{!965, !982, !1016, !1022, !1027, !1032, !1039, !1045, !1051, !1056, !1070, !1075, !1081, !1086, !1096, !1101, !1119, !1126, !1133, !1139, !1144, !1150, !1156}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !963, file: !953, line: 738, baseType: !966, size: 256)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !953, line: 271, size: 256, elements: !967)
!967 = !{!968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !966, file: !953, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !966, file: !953, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !966, file: !953, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !966, file: !953, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !966, file: !953, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !966, file: !953, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !966, file: !953, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !966, file: !953, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !966, file: !953, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !966, file: !953, line: 312, baseType: !7, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !966, file: !953, line: 316, baseType: !760, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !966, file: !953, line: 319, baseType: !7, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !966, file: !953, line: 323, baseType: !924, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !966, file: !953, line: 327, baseType: !672, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !963, file: !953, line: 739, baseType: !983, size: 448)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !953, line: 350, size: 448, elements: !984)
!984 = !{!985, !1014}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !983, file: !953, line: 353, baseType: !986, size: 384)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !953, line: 333, size: 384, elements: !987)
!987 = !{!988, !989, !997}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !986, file: !953, line: 336, baseType: !966, size: 256)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !986, file: !953, line: 343, baseType: !990, size: 64, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !992, line: 37, size: 128, elements: !993)
!992 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !991, file: !992, line: 39, baseType: !990, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !991, file: !992, line: 40, baseType: !996, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !986, file: !953, line: 344, baseType: !998, size: 64, offset: 320)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !992, line: 45, size: 320, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !999, file: !992, line: 47, baseType: !998, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !999, file: !992, line: 48, baseType: !1003, size: 256, offset: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1004)
!1004 = !{!1005, !1007, !1008, !1013}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1003, file: !135, line: 1884, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1003, file: !135, line: 1885, baseType: !1006, size: 64, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1003, file: !135, line: 1891, baseType: !1009, size: 64, offset: 128)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1003, file: !135, line: 1891, size: 64, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1009, file: !135, line: 1891, baseType: !961, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1009, file: !135, line: 1891, baseType: !672, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1003, file: !135, line: 1892, baseType: !996, size: 64, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !983, file: !953, line: 359, baseType: !1015, size: 64, offset: 384)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !672, size: 64, elements: !734)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !963, file: !953, line: 740, baseType: !1017, size: 512)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !953, line: 365, size: 512, elements: !1018)
!1018 = !{!1019, !1020, !1021}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1017, file: !953, line: 368, baseType: !986, size: 384)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1017, file: !953, line: 373, baseType: !672, size: 64, offset: 384)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1017, file: !953, line: 374, baseType: !672, size: 64, offset: 448)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !963, file: !953, line: 741, baseType: !1023, size: 576)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !953, line: 380, size: 576, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1023, file: !953, line: 383, baseType: !1017, size: 512)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1023, file: !953, line: 389, baseType: !1015, size: 64, offset: 512)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !963, file: !953, line: 742, baseType: !1028, size: 320)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !953, line: 395, size: 320, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1028, file: !953, line: 397, baseType: !966, size: 256)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1028, file: !953, line: 400, baseType: !950, size: 64, offset: 256)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !963, file: !953, line: 743, baseType: !1033, size: 448)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !953, line: 406, size: 448, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1033, file: !953, line: 408, baseType: !966, size: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1033, file: !953, line: 412, baseType: !672, size: 64, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1033, file: !953, line: 420, baseType: !672, size: 64, offset: 320)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1033, file: !953, line: 423, baseType: !950, size: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !963, file: !953, line: 744, baseType: !1040, size: 384)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !953, line: 429, size: 384, elements: !1041)
!1041 = !{!1042, !1043, !1044}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1040, file: !953, line: 431, baseType: !966, size: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1040, file: !953, line: 434, baseType: !672, size: 64, offset: 256)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1040, file: !953, line: 437, baseType: !950, size: 64, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !963, file: !953, line: 745, baseType: !1046, size: 384)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !953, line: 443, size: 384, elements: !1047)
!1047 = !{!1048, !1049, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1046, file: !953, line: 445, baseType: !966, size: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1046, file: !953, line: 449, baseType: !672, size: 64, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1046, file: !953, line: 453, baseType: !950, size: 64, offset: 320)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !963, file: !953, line: 746, baseType: !1052, size: 320)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !953, line: 459, size: 320, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1052, file: !953, line: 461, baseType: !966, size: 256)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1052, file: !953, line: 464, baseType: !672, size: 64, offset: 256)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !963, file: !953, line: 747, baseType: !1057, size: 768)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !953, line: 469, size: 768, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1063}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1057, file: !953, line: 471, baseType: !966, size: 256)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1057, file: !953, line: 474, baseType: !7, size: 32, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1057, file: !953, line: 475, baseType: !7, size: 32, offset: 288)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1057, file: !953, line: 478, baseType: !672, size: 64, offset: 320)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1057, file: !953, line: 481, baseType: !1064, size: 384, offset: 384)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 384, elements: !734)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1066)
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1065, file: !135, line: 1920, baseType: !1003, size: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1065, file: !135, line: 1921, baseType: !672, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1065, file: !135, line: 1922, baseType: !760, size: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !963, file: !953, line: 748, baseType: !1071, size: 320)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !953, line: 487, size: 320, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1071, file: !953, line: 490, baseType: !966, size: 256)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1071, file: !953, line: 494, baseType: !620, size: 32, offset: 256)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !963, file: !953, line: 749, baseType: !1076, size: 384)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !953, line: 500, size: 384, elements: !1077)
!1077 = !{!1078, !1079, !1080}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1076, file: !953, line: 502, baseType: !966, size: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1076, file: !953, line: 506, baseType: !950, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1076, file: !953, line: 510, baseType: !950, size: 64, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !963, file: !953, line: 750, baseType: !1082, size: 320)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !953, line: 529, size: 320, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1082, file: !953, line: 531, baseType: !966, size: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1082, file: !953, line: 540, baseType: !950, size: 64, offset: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !963, file: !953, line: 751, baseType: !1087, size: 704)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !953, line: 546, size: 704, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1093, !1094, !1095}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1087, file: !953, line: 549, baseType: !1017, size: 512)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1087, file: !953, line: 553, baseType: !625, size: 64, offset: 512)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1087, file: !953, line: 557, baseType: !619, size: 8, offset: 576)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1087, file: !953, line: 558, baseType: !619, size: 8, offset: 584)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1087, file: !953, line: 559, baseType: !619, size: 8, offset: 592)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1087, file: !953, line: 560, baseType: !619, size: 8, offset: 600)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1087, file: !953, line: 566, baseType: !1015, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !963, file: !953, line: 752, baseType: !1097, size: 384)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !953, line: 571, size: 384, elements: !1098)
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1097, file: !953, line: 573, baseType: !1028, size: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1097, file: !953, line: 577, baseType: !672, size: 64, offset: 320)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !963, file: !953, line: 753, baseType: !1102, size: 576)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !953, line: 600, size: 576, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1109, !1118}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1102, file: !953, line: 602, baseType: !1028, size: 320)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1102, file: !953, line: 605, baseType: !672, size: 64, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1102, file: !953, line: 609, baseType: !1107, size: 64, offset: 384)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1108, line: 46, baseType: !689)
!1108 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1102, file: !953, line: 612, baseType: !1110, size: 64, offset: 448)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !953, line: 581, size: 320, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1111, file: !953, line: 583, baseType: !134, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1111, file: !953, line: 586, baseType: !672, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1111, file: !953, line: 589, baseType: !672, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1111, file: !953, line: 592, baseType: !672, size: 64, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1111, file: !953, line: 595, baseType: !672, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1102, file: !953, line: 616, baseType: !950, size: 64, offset: 512)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !963, file: !953, line: 754, baseType: !1120, size: 512)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !953, line: 622, size: 512, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1120, file: !953, line: 624, baseType: !1028, size: 320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1120, file: !953, line: 628, baseType: !672, size: 64, offset: 320)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1120, file: !953, line: 632, baseType: !672, size: 64, offset: 384)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1120, file: !953, line: 636, baseType: !672, size: 64, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !963, file: !953, line: 755, baseType: !1127, size: 704)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !953, line: 642, size: 704, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1127, file: !953, line: 644, baseType: !1120, size: 512)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1127, file: !953, line: 648, baseType: !672, size: 64, offset: 512)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1127, file: !953, line: 652, baseType: !672, size: 64, offset: 576)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1127, file: !953, line: 653, baseType: !672, size: 64, offset: 640)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !963, file: !953, line: 756, baseType: !1134, size: 448)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !953, line: 663, size: 448, elements: !1135)
!1135 = !{!1136, !1137, !1138}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1134, file: !953, line: 665, baseType: !1028, size: 320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1134, file: !953, line: 668, baseType: !672, size: 64, offset: 320)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1134, file: !953, line: 673, baseType: !672, size: 64, offset: 384)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !963, file: !953, line: 757, baseType: !1140, size: 384)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !953, line: 694, size: 384, elements: !1141)
!1141 = !{!1142, !1143}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1140, file: !953, line: 696, baseType: !1028, size: 320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1140, file: !953, line: 699, baseType: !672, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !963, file: !953, line: 758, baseType: !1145, size: 384)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !953, line: 681, size: 384, elements: !1146)
!1146 = !{!1147, !1148, !1149}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1145, file: !953, line: 683, baseType: !966, size: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1145, file: !953, line: 686, baseType: !672, size: 64, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1145, file: !953, line: 689, baseType: !672, size: 64, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !963, file: !953, line: 759, baseType: !1151, size: 384)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !953, line: 707, size: 384, elements: !1152)
!1152 = !{!1153, !1154, !1155}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1151, file: !953, line: 709, baseType: !966, size: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1151, file: !953, line: 712, baseType: !672, size: 64, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1151, file: !953, line: 712, baseType: !672, size: 64, offset: 320)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !963, file: !953, line: 760, baseType: !1157, size: 320)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !953, line: 718, size: 320, elements: !1158)
!1158 = !{!1159, !1160}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1157, file: !953, line: 720, baseType: !966, size: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1157, file: !953, line: 723, baseType: !672, size: 64, offset: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !958, file: !953, line: 138, baseType: !957, size: 64, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !958, file: !953, line: 139, baseType: !957, size: 64, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !952, file: !953, line: 146, baseType: !956, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !952, file: !953, line: 152, baseType: !950, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !947, file: !337, line: 130, baseType: !811, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !942, file: !337, line: 134, baseType: !624, size: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !942, file: !337, line: 137, baseType: !672, size: 64, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !942, file: !337, line: 138, baseType: !760, size: 32, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !942, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !942, file: !337, line: 144, baseType: !620, size: 32, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !942, file: !337, line: 145, baseType: !620, size: 32, offset: 416)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !942, file: !337, line: 146, baseType: !1173, size: 64, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !691)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !925, file: !337, line: 220, baseType: !928, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !925, file: !337, line: 223, baseType: !624, size: 64, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !925, file: !337, line: 226, baseType: !1177, size: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !925, file: !337, line: 229, baseType: !1180, size: 128, offset: 256)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 128, elements: !879)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !925, file: !337, line: 232, baseType: !924, size: 64, offset: 384)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !925, file: !337, line: 233, baseType: !924, size: 64, offset: 448)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !925, file: !337, line: 238, baseType: !1186, size: 64, offset: 512)
!1186 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !1187)
!1187 = !{!1188, !1194}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1186, file: !337, line: 236, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1190, file: !337, line: 275, baseType: !950, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1190, file: !337, line: 278, baseType: !950, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1186, file: !337, line: 237, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !1197)
!1197 = !{!1198, !1199, !1200, !1201, !1202}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1196, file: !337, line: 261, baseType: !811, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1196, file: !337, line: 262, baseType: !811, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1196, file: !337, line: 266, baseType: !811, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1196, file: !337, line: 267, baseType: !811, size: 64, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1196, file: !337, line: 270, baseType: !620, size: 32, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !925, file: !337, line: 241, baseType: !1173, size: 64, offset: 576)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !925, file: !337, line: 244, baseType: !620, size: 32, offset: 640)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !925, file: !337, line: 247, baseType: !620, size: 32, offset: 672)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !925, file: !337, line: 250, baseType: !620, size: 32, offset: 704)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !925, file: !337, line: 253, baseType: !620, size: 32, offset: 736)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !925, file: !337, line: 256, baseType: !620, size: 32, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !832, file: !814, line: 179, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !814, line: 150, baseType: !1212)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !814, line: 142, size: 320, elements: !1213)
!1213 = !{!1214, !1215, !1216, !1217, !1220, !1221}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1212, file: !814, line: 144, baseType: !672, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1212, file: !814, line: 145, baseType: !811, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1212, file: !814, line: 146, baseType: !811, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1212, file: !814, line: 147, baseType: !1218, size: 32, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1219, line: 31, baseType: !620)
!1219 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1212, file: !814, line: 148, baseType: !7, size: 32, offset: 224)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1212, file: !814, line: 149, baseType: !619, size: 8, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !832, file: !814, line: 180, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !814, line: 162, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !814, line: 159, size: 128, elements: !1226)
!1226 = !{!1227, !1228}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1225, file: !814, line: 160, baseType: !672, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1225, file: !814, line: 161, baseType: !691, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !832, file: !814, line: 181, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !814, line: 181, flags: DIFlagFwdDecl)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !827, file: !814, line: 317, baseType: !1233, size: 64)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 64, elements: !734)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !827, file: !814, line: 318, baseType: !1235, size: 320)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !814, line: 188, size: 320, elements: !1236)
!1236 = !{!1237, !1239, !1296}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1235, file: !814, line: 190, baseType: !1238, size: 192)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 192, elements: !709)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1235, file: !814, line: 193, baseType: !1240, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !814, line: 206, size: 320, elements: !1242)
!1242 = !{!1243, !1281, !1282, !1283, !1295}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1241, file: !814, line: 208, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !673, line: 62, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1247, line: 538, size: 256, elements: !1248)
!1247 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1248 = !{!1249, !1253, !1259, !1272}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1246, file: !1247, line: 539, baseType: !1250, size: 32)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1247, line: 482, size: 32, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1250, file: !1247, line: 484, baseType: !7, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1246, file: !1247, line: 540, baseType: !1254, size: 192)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1247, line: 488, size: 192, elements: !1255)
!1255 = !{!1256, !1257, !1258}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1254, file: !1247, line: 489, baseType: !1250, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1254, file: !1247, line: 492, baseType: !625, size: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1254, file: !1247, line: 496, baseType: !672, size: 64, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1246, file: !1247, line: 541, baseType: !1260, size: 256)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1247, line: 504, size: 256, elements: !1261)
!1261 = !{!1262, !1263, !1270, !1271}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1260, file: !1247, line: 505, baseType: !1250, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1260, file: !1247, line: 509, baseType: !1264, size: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1247, line: 501, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{null, !1268}
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1260, file: !1247, line: 510, baseType: !1268, size: 64, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1260, file: !1247, line: 513, baseType: !1244, size: 64, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1246, file: !1247, line: 542, baseType: !1273, size: 128)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1247, line: 530, size: 128, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1273, file: !1247, line: 531, baseType: !1250, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1273, file: !1247, line: 534, baseType: !1277, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1247, line: 525, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!619, !672, !625, !689, !689}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1241, file: !814, line: 211, baseType: !7, size: 32, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1241, file: !814, line: 214, baseType: !691, size: 64, offset: 128)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1241, file: !814, line: 224, baseType: !1284, size: 64, offset: 192)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !814, line: 202, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !814, line: 202, size: 128, elements: !1287)
!1287 = !{!1288}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1286, file: !814, line: 202, baseType: !1289, size: 128)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !814, line: 200, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !814, line: 200, size: 128, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1290, file: !814, line: 200, baseType: !7, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1290, file: !814, line: 200, baseType: !7, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1290, file: !814, line: 200, baseType: !845, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1241, file: !814, line: 234, baseType: !1284, size: 64, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1235, file: !814, line: 197, baseType: !691, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !827, file: !814, line: 319, baseType: !698, size: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !827, file: !814, line: 320, baseType: !717, size: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !675, file: !135, line: 3384, baseType: !1300, size: 1472)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1301)
!1301 = !{!1302, !1323, !1324, !1325, !1326}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1300, file: !135, line: 3115, baseType: !1303, size: 1216)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1303, file: !135, line: 2985, baseType: !807, size: 960)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1303, file: !135, line: 2986, baseType: !672, size: 64, offset: 960)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1303, file: !135, line: 2987, baseType: !672, size: 64, offset: 1024)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1303, file: !135, line: 2988, baseType: !672, size: 64, offset: 1088)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1303, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1303, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1303, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1303, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1303, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1303, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1303, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1303, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1303, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1303, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1303, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1303, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1303, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1303, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1300, file: !135, line: 3117, baseType: !672, size: 64, offset: 1216)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1300, file: !135, line: 3119, baseType: !672, size: 64, offset: 1280)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1300, file: !135, line: 3121, baseType: !672, size: 64, offset: 1344)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1300, file: !135, line: 3123, baseType: !672, size: 64, offset: 1408)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !675, file: !135, line: 3385, baseType: !1328, size: 1088)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1329)
!1329 = !{!1330, !1331, !1332}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1328, file: !135, line: 2875, baseType: !807, size: 960)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1328, file: !135, line: 2876, baseType: !811, size: 64, offset: 960)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1328, file: !135, line: 2877, baseType: !1333, size: 64, offset: 1024)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !135, line: 2856, flags: DIFlagFwdDecl)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !675, file: !135, line: 3386, baseType: !1303, size: 1216)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !675, file: !135, line: 3387, baseType: !1337, size: 1280)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1338)
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1337, file: !135, line: 3094, baseType: !1303, size: 1216)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1337, file: !135, line: 3095, baseType: !1333, size: 64, offset: 1216)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !675, file: !135, line: 3388, baseType: !1342, size: 1216)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1343)
!1343 = !{!1344, !1345, !1346, !1347, !1348, !1349}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1342, file: !135, line: 2825, baseType: !766, size: 896)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1342, file: !135, line: 2827, baseType: !672, size: 64, offset: 896)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1342, file: !135, line: 2828, baseType: !672, size: 64, offset: 960)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1342, file: !135, line: 2829, baseType: !672, size: 64, offset: 1024)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1342, file: !135, line: 2830, baseType: !672, size: 64, offset: 1088)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1342, file: !135, line: 2831, baseType: !672, size: 64, offset: 1152)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !675, file: !135, line: 3389, baseType: !1351, size: 1024)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1352)
!1352 = !{!1353, !1354, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1351, file: !135, line: 2851, baseType: !807, size: 960)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1351, file: !135, line: 2852, baseType: !620, size: 32, offset: 960)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1351, file: !135, line: 2853, baseType: !620, size: 32, offset: 992)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !675, file: !135, line: 3390, baseType: !1357, size: 1024)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1357, file: !135, line: 2858, baseType: !807, size: 960)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1357, file: !135, line: 2859, baseType: !1333, size: 64, offset: 960)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !675, file: !135, line: 3391, baseType: !1362, size: 960)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1363)
!1363 = !{!1364}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1362, file: !135, line: 2863, baseType: !807, size: 960)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !675, file: !135, line: 3392, baseType: !1366, size: 1472)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1367)
!1367 = !{!1368}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1366, file: !135, line: 3305, baseType: !1300, size: 1472)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !675, file: !135, line: 3393, baseType: !1370, size: 1792)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1371)
!1371 = !{!1372, !1373, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1370, file: !135, line: 3249, baseType: !1300, size: 1472)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1370, file: !135, line: 3251, baseType: !1374, size: 64, offset: 1472)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1376, line: 463, size: 1152, elements: !1377)
!1376 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1377 = !{!1378, !1537, !1568, !1569, !1572, !1575, !1576, !1577, !1578, !1579, !1580, !1604, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1375, file: !1376, line: 464, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !330, line: 194, size: 384, elements: !1381)
!1381 = !{!1382, !1431, !1444, !1458, !1506, !1518}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1380, file: !330, line: 197, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !330, line: 182, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !330, line: 116, size: 704, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1392, !1419, !1428, !1429, !1430}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1385, file: !330, line: 119, baseType: !1384, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1385, file: !330, line: 122, baseType: !1384, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1385, file: !330, line: 123, baseType: !1384, size: 64, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1385, file: !330, line: 126, baseType: !620, size: 32, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1385, file: !330, line: 129, baseType: !329, size: 32, offset: 224)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1385, file: !330, line: 165, baseType: !1393, size: 192, offset: 256)
!1393 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !330, line: 132, size: 192, elements: !1394)
!1394 = !{!1395, !1408, !1414}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1393, file: !330, line: 137, baseType: !1396, size: 128)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !330, line: 133, size: 128, elements: !1397)
!1397 = !{!1398, !1407}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1396, file: !330, line: 135, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !330, line: 93, size: 320, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1400, file: !330, line: 96, baseType: !1399, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1400, file: !330, line: 97, baseType: !1399, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1400, file: !330, line: 101, baseType: !672, size: 64, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1400, file: !330, line: 106, baseType: !672, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1400, file: !330, line: 111, baseType: !672, size: 64, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1396, file: !330, line: 136, baseType: !1399, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1393, file: !330, line: 151, baseType: !1409, size: 192)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !330, line: 139, size: 192, elements: !1410)
!1410 = !{!1411, !1412, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1409, file: !330, line: 141, baseType: !672, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1409, file: !330, line: 145, baseType: !672, size: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1409, file: !330, line: 150, baseType: !620, size: 32, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1393, file: !330, line: 164, baseType: !1415, size: 128)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !330, line: 153, size: 128, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1415, file: !330, line: 161, baseType: !672, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1415, file: !330, line: 163, baseType: !760, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1385, file: !330, line: 168, baseType: !1420, size: 64, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !330, line: 67, size: 320, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1421, file: !330, line: 70, baseType: !1420, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1421, file: !330, line: 73, baseType: !1384, size: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1421, file: !330, line: 78, baseType: !672, size: 64, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1421, file: !330, line: 85, baseType: !811, size: 64, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1421, file: !330, line: 88, baseType: !620, size: 32, offset: 256)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1385, file: !330, line: 173, baseType: !811, size: 64, offset: 512)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1385, file: !330, line: 173, baseType: !811, size: 64, offset: 576)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1385, file: !330, line: 177, baseType: !619, size: 8, offset: 640)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1380, file: !330, line: 200, baseType: !1432, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !330, line: 185, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !330, line: 185, size: 128, elements: !1435)
!1435 = !{!1436}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1434, file: !330, line: 185, baseType: !1437, size: 128)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !330, line: 184, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !330, line: 184, size: 128, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1438, file: !330, line: 184, baseType: !7, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1438, file: !330, line: 184, baseType: !7, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1438, file: !330, line: 184, baseType: !1443, size: 64, offset: 64)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 64, elements: !734)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1380, file: !330, line: 203, baseType: !1445, size: 64, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, size: 128, elements: !1448)
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1447, file: !330, line: 189, baseType: !1450, size: 128)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !330, line: 188, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !330, line: 188, size: 128, elements: !1452)
!1452 = !{!1453, !1454, !1455}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1451, file: !330, line: 188, baseType: !7, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1451, file: !330, line: 188, baseType: !7, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1451, file: !330, line: 188, baseType: !1456, size: 64, offset: 64)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1457, size: 64, elements: !734)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !330, line: 180, baseType: !1420)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1380, file: !330, line: 207, baseType: !1459, size: 64, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1460, line: 144, baseType: !1461)
!1460 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1460, line: 100, size: 896, elements: !1463)
!1463 = !{!1464, !1470, !1475, !1480, !1482, !1483, !1484, !1485, !1486, !1487, !1492, !1494, !1495, !1500, !1505}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1462, file: !1460, line: 102, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1460, line: 52, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!1469, !1268}
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1460, line: 47, baseType: !7)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1462, file: !1460, line: 105, baseType: !1471, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1460, line: 59, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!620, !1268, !1268}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1462, file: !1460, line: 108, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1460, line: 63, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{null, !624}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1462, file: !1460, line: 111, baseType: !1481, size: 64, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1462, file: !1460, line: 114, baseType: !1107, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1462, file: !1460, line: 117, baseType: !1107, size: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1462, file: !1460, line: 120, baseType: !1107, size: 64, offset: 384)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1462, file: !1460, line: 124, baseType: !7, size: 32, offset: 448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1462, file: !1460, line: 128, baseType: !7, size: 32, offset: 480)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1462, file: !1460, line: 131, baseType: !1488, size: 64, offset: 512)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1460, line: 75, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!624, !1107, !1107}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1462, file: !1460, line: 132, baseType: !1493, size: 64, offset: 576)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1460, line: 78, baseType: !1477)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1462, file: !1460, line: 135, baseType: !624, size: 64, offset: 640)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1462, file: !1460, line: 136, baseType: !1496, size: 64, offset: 704)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1460, line: 82, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!624, !624, !1107, !1107}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1462, file: !1460, line: 137, baseType: !1501, size: 64, offset: 768)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1460, line: 83, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{null, !624, !624}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1462, file: !1460, line: 141, baseType: !7, size: 32, offset: 832)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1380, file: !330, line: 211, baseType: !1507, size: 64, offset: 256)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1510)
!1510 = !{!1511}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1509, file: !135, line: 183, baseType: !1512, size: 128)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1514)
!1514 = !{!1515, !1516, !1517}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1513, file: !135, line: 182, baseType: !7, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1513, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1513, file: !135, line: 182, baseType: !1015, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1380, file: !330, line: 220, baseType: !1519, size: 64, offset: 320)
!1519 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !330, line: 217, size: 64, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1519, file: !330, line: 218, baseType: !1507, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1519, file: !330, line: 219, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1525, line: 29, baseType: !1526)
!1525 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1525, line: 29, size: 96, elements: !1527)
!1527 = !{!1528}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1526, file: !1525, line: 29, baseType: !1529, size: 96)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1525, line: 27, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1525, line: 27, size: 96, elements: !1531)
!1531 = !{!1532, !1533, !1534}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1530, file: !1525, line: 27, baseType: !7, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1530, file: !1525, line: 27, baseType: !7, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1530, file: !1525, line: 27, baseType: !1535, size: 8, offset: 64)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1536, size: 8, elements: !734)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1525, line: 26, baseType: !619)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1375, file: !1376, line: 467, baseType: !1538, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !1540)
!1540 = !{!1541, !1543, !1544, !1557, !1558, !1559, !1560, !1561, !1562, !1564, !1566, !1567}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1539, file: !337, line: 377, baseType: !1542, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !673, line: 111, baseType: !924)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1539, file: !337, line: 378, baseType: !1542, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1539, file: !337, line: 381, baseType: !1545, size: 64, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !1548)
!1548 = !{!1549}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1547, file: !337, line: 282, baseType: !1550, size: 128)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !1552)
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1551, file: !337, line: 281, baseType: !7, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1551, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1551, file: !337, line: 281, baseType: !1556, size: 64, offset: 64)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 64, elements: !734)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1539, file: !337, line: 384, baseType: !620, size: 32, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1539, file: !337, line: 387, baseType: !620, size: 32, offset: 224)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1539, file: !337, line: 390, baseType: !620, size: 32, offset: 256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1539, file: !337, line: 394, baseType: !1545, size: 64, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1539, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1539, file: !337, line: 399, baseType: !1563, size: 64, offset: 416)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !879)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1539, file: !337, line: 402, baseType: !1565, size: 64, offset: 480)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !879)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1539, file: !337, line: 406, baseType: !620, size: 32, offset: 544)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1539, file: !337, line: 409, baseType: !620, size: 32, offset: 576)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1375, file: !1376, line: 470, baseType: !951, size: 64, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1375, file: !1376, line: 473, baseType: !1570, size: 64, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1376, line: 166, flags: DIFlagFwdDecl)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1375, file: !1376, line: 476, baseType: !1573, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1376, line: 476, flags: DIFlagFwdDecl)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1375, file: !1376, line: 479, baseType: !1459, size: 64, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1375, file: !1376, line: 484, baseType: !672, size: 64, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1375, file: !1376, line: 488, baseType: !672, size: 64, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1375, file: !1376, line: 493, baseType: !672, size: 64, offset: 512)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1375, file: !1376, line: 496, baseType: !672, size: 64, offset: 576)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1375, file: !1376, line: 501, baseType: !1581, size: 64, offset: 640)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !1583)
!1583 = !{!1584, !1587, !1588, !1589, !1590, !1592, !1593, !1598, !1599, !1600, !1601, !1602, !1603}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1582, file: !348, line: 2356, baseType: !1585, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1582, file: !348, line: 2357, baseType: !625, size: 64, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1582, file: !348, line: 2358, baseType: !620, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1582, file: !348, line: 2359, baseType: !620, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1582, file: !348, line: 2360, baseType: !1591, size: 128, offset: 192)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 128, elements: !903)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1582, file: !348, line: 2364, baseType: !620, size: 32, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1582, file: !348, line: 2367, baseType: !1594, size: 128, offset: 384)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !1595)
!1595 = !{!1596, !1597}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1594, file: !348, line: 2351, baseType: !811, size: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1594, file: !348, line: 2352, baseType: !691, size: 64, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1582, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1582, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1582, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1582, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1582, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1582, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1375, file: !1376, line: 504, baseType: !1605, size: 64, offset: 704)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !803, line: 47, size: 512, elements: !1607)
!1607 = !{!1608, !1616, !1617, !1618, !1621, !1631, !1632, !1633, !1634}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1606, file: !803, line: 48, baseType: !1609, size: 128)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_language_function", file: !398, line: 436, size: 128, elements: !1610)
!1610 = !{!1611}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "x_stmt_tree", scope: !1609, file: !398, line: 439, baseType: !1612, size: 128)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stmt_tree_s", file: !398, line: 410, size: 128, elements: !1613)
!1613 = !{!1614, !1615}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "x_cur_stmt_list", scope: !1612, file: !398, line: 412, baseType: !672, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "stmts_are_full_exprs_p", scope: !1612, file: !398, line: 428, baseType: !620, size: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "x_break_label", scope: !1606, file: !803, line: 49, baseType: !672, size: 64, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "x_cont_label", scope: !1606, file: !803, line: 50, baseType: !672, size: 64, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "x_switch_stack", scope: !1606, file: !803, line: 51, baseType: !1619, size: 64, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "c_switch", file: !564, line: 503, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "arg_info", scope: !1606, file: !803, line: 52, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_arg_info", file: !564, line: 299, size: 384, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628, !1629, !1630}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !1623, file: !564, line: 301, baseType: !672, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !1623, file: !564, line: 303, baseType: !672, size: 64, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1623, file: !564, line: 305, baseType: !672, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "others", scope: !1623, file: !564, line: 308, baseType: !672, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sizes", scope: !1623, file: !564, line: 313, baseType: !672, size: 64, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "had_vla_unspec", scope: !1623, file: !564, line: 315, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "returns_value", scope: !1606, file: !803, line: 53, baseType: !620, size: 32, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "returns_null", scope: !1606, file: !803, line: 54, baseType: !620, size: 32, offset: 416)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "returns_abnormally", scope: !1606, file: !803, line: 55, baseType: !620, size: 32, offset: 448)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "warn_about_return_type", scope: !1606, file: !803, line: 56, baseType: !620, size: 32, offset: 480)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1375, file: !1376, line: 507, baseType: !1459, size: 64, offset: 768)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1375, file: !1376, line: 510, baseType: !620, size: 32, offset: 832)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1375, file: !1376, line: 513, baseType: !620, size: 32, offset: 864)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1375, file: !1376, line: 516, baseType: !760, size: 32, offset: 896)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1375, file: !1376, line: 519, baseType: !760, size: 32, offset: 928)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1375, file: !1376, line: 522, baseType: !7, size: 32, offset: 960)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1375, file: !1376, line: 523, baseType: !7, size: 32, offset: 992)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1375, file: !1376, line: 528, baseType: !625, size: 64, offset: 1024)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1375, file: !1376, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1375, file: !1376, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1375, file: !1376, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1375, file: !1376, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1375, file: !1376, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1375, file: !1376, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1375, file: !1376, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1375, file: !1376, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1375, file: !1376, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1375, file: !1376, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1375, file: !1376, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1375, file: !1376, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1375, file: !1376, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1375, file: !1376, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1375, file: !1376, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1375, file: !1376, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1370, file: !135, line: 3254, baseType: !672, size: 64, offset: 1536)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1370, file: !135, line: 3257, baseType: !672, size: 64, offset: 1600)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1370, file: !135, line: 3258, baseType: !672, size: 64, offset: 1664)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1370, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1370, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1370, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1370, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1370, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1370, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1370, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1370, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1370, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1370, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1370, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1370, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1370, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1370, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1370, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1370, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1370, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1370, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !675, file: !135, line: 3394, baseType: !1681, size: 1344)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1681, file: !135, line: 2280, baseType: !636, size: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1681, file: !135, line: 2281, baseType: !672, size: 64, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1681, file: !135, line: 2282, baseType: !672, size: 64, offset: 256)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1681, file: !135, line: 2283, baseType: !672, size: 64, offset: 320)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1681, file: !135, line: 2284, baseType: !672, size: 64, offset: 384)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1681, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1681, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1681, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1681, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1681, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1681, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1681, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1681, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1681, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1681, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1681, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1681, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1681, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1681, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1681, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1681, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1681, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1681, file: !135, line: 2306, baseType: !1218, size: 32, offset: 544)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1681, file: !135, line: 2307, baseType: !672, size: 64, offset: 576)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1681, file: !135, line: 2308, baseType: !672, size: 64, offset: 640)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1681, file: !135, line: 2314, baseType: !1709, size: 64, offset: 704)
!1709 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1710)
!1710 = !{!1711, !1712, !1713}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1709, file: !135, line: 2310, baseType: !620, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1709, file: !135, line: 2311, baseType: !625, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1709, file: !135, line: 2312, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1681, file: !135, line: 2315, baseType: !672, size: 64, offset: 768)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1681, file: !135, line: 2316, baseType: !672, size: 64, offset: 832)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1681, file: !135, line: 2317, baseType: !672, size: 64, offset: 896)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1681, file: !135, line: 2318, baseType: !672, size: 64, offset: 960)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1681, file: !135, line: 2319, baseType: !672, size: 64, offset: 1024)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1681, file: !135, line: 2320, baseType: !672, size: 64, offset: 1088)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1681, file: !135, line: 2321, baseType: !672, size: 64, offset: 1152)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1681, file: !135, line: 2322, baseType: !672, size: 64, offset: 1216)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1681, file: !135, line: 2324, baseType: !1725, size: 64, offset: 1280)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !803, line: 27, size: 256, elements: !1727)
!1727 = !{!1728, !1734, !1735, !1736}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1726, file: !803, line: 29, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sorted_fields_type", file: !398, line: 369, size: 128, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1730, file: !398, line: 370, baseType: !620, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1730, file: !398, line: 371, baseType: !1015, size: 64, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "enum_min", scope: !1726, file: !803, line: 31, baseType: !672, size: 64, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "enum_max", scope: !1726, file: !803, line: 32, baseType: !672, size: 64, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "objc_info", scope: !1726, file: !803, line: 36, baseType: !672, size: 64, offset: 192)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !675, file: !135, line: 3395, baseType: !1738, size: 320)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1739)
!1739 = !{!1740, !1741, !1742}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1738, file: !135, line: 1470, baseType: !636, size: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1738, file: !135, line: 1471, baseType: !672, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1738, file: !135, line: 1472, baseType: !672, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !675, file: !135, line: 3396, baseType: !1744, size: 320)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1745)
!1745 = !{!1746, !1747, !1748}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1744, file: !135, line: 1483, baseType: !636, size: 192)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1744, file: !135, line: 1484, baseType: !620, size: 32, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1744, file: !135, line: 1485, baseType: !1015, size: 64, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !675, file: !135, line: 3397, baseType: !1750, size: 384)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1750, file: !135, line: 1830, baseType: !636, size: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1750, file: !135, line: 1831, baseType: !760, size: 32, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1750, file: !135, line: 1832, baseType: !672, size: 64, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1750, file: !135, line: 1835, baseType: !1015, size: 64, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !675, file: !135, line: 3398, baseType: !1757, size: 704)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1763, !1766}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1757, file: !135, line: 1899, baseType: !636, size: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1757, file: !135, line: 1902, baseType: !672, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1757, file: !135, line: 1905, baseType: !961, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1757, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1757, file: !135, line: 1911, baseType: !1764, size: 64, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !135, line: 1876, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1757, file: !135, line: 1914, baseType: !1003, size: 256, offset: 448)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !675, file: !135, line: 3399, baseType: !1768, size: 704)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1768, file: !135, line: 2009, baseType: !636, size: 192)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1768, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1768, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1768, file: !135, line: 2014, baseType: !760, size: 32, offset: 224)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1768, file: !135, line: 2016, baseType: !672, size: 64, offset: 256)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1768, file: !135, line: 2017, baseType: !1507, size: 64, offset: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1768, file: !135, line: 2019, baseType: !672, size: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1768, file: !135, line: 2020, baseType: !672, size: 64, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1768, file: !135, line: 2021, baseType: !672, size: 64, offset: 512)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1768, file: !135, line: 2022, baseType: !672, size: 64, offset: 576)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1768, file: !135, line: 2023, baseType: !672, size: 64, offset: 640)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !675, file: !135, line: 3400, baseType: !1782, size: 832)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1782, file: !135, line: 2431, baseType: !636, size: 192)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1782, file: !135, line: 2433, baseType: !672, size: 64, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1782, file: !135, line: 2434, baseType: !672, size: 64, offset: 256)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1782, file: !135, line: 2435, baseType: !672, size: 64, offset: 320)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1782, file: !135, line: 2436, baseType: !672, size: 64, offset: 384)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1782, file: !135, line: 2437, baseType: !1507, size: 64, offset: 448)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1782, file: !135, line: 2438, baseType: !672, size: 64, offset: 512)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1782, file: !135, line: 2440, baseType: !672, size: 64, offset: 576)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1782, file: !135, line: 2441, baseType: !672, size: 64, offset: 640)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1782, file: !135, line: 2443, baseType: !1794, size: 128, offset: 704)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1796)
!1796 = !{!1797}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1795, file: !135, line: 182, baseType: !1512, size: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !675, file: !135, line: 3401, baseType: !1799, size: 320)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1800)
!1800 = !{!1801, !1802, !1809}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1799, file: !135, line: 3329, baseType: !636, size: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1799, file: !135, line: 3330, baseType: !1803, size: 64, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1805)
!1805 = !{!1806, !1807, !1808}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1804, file: !135, line: 3322, baseType: !1803, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1804, file: !135, line: 3323, baseType: !1803, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1804, file: !135, line: 3324, baseType: !672, size: 64, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1799, file: !135, line: 3331, baseType: !1803, size: 64, offset: 256)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !675, file: !135, line: 3402, baseType: !1811, size: 256)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1812)
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1811, file: !135, line: 1541, baseType: !636, size: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1811, file: !135, line: 1542, baseType: !1815, size: 64, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1817, file: !135, line: 1538, baseType: !1820, size: 192)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1822)
!1822 = !{!1823, !1824, !1825}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1821, file: !135, line: 1537, baseType: !7, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1821, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1821, file: !135, line: 1537, baseType: !1826, size: 128, offset: 64)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 128, elements: !734)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1828, file: !135, line: 1533, baseType: !672, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1828, file: !135, line: 1534, baseType: !672, size: 64, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !675, file: !135, line: 3403, baseType: !1833, size: 512)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838, !1844, !1845, !1846}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1833, file: !135, line: 1939, baseType: !636, size: 192)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1833, file: !135, line: 1940, baseType: !760, size: 32, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1833, file: !135, line: 1941, baseType: !352, size: 32, offset: 224)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1833, file: !135, line: 1946, baseType: !1839, size: 32, offset: 256)
!1839 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1840)
!1840 = !{!1841, !1842, !1843}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1839, file: !135, line: 1943, baseType: !370, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1839, file: !135, line: 1944, baseType: !377, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1839, file: !135, line: 1945, baseType: !134, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1833, file: !135, line: 1950, baseType: !950, size: 64, offset: 320)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1833, file: !135, line: 1951, baseType: !950, size: 64, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1833, file: !135, line: 1953, baseType: !1015, size: 64, offset: 448)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !675, file: !135, line: 3404, baseType: !1848, size: 1664)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1848, file: !135, line: 3338, baseType: !636, size: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1848, file: !135, line: 3341, baseType: !1852, size: 1472, offset: 192)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1853, line: 410, size: 1472, elements: !1854)
!1853 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1854 = !{!1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1852, file: !1853, line: 412, baseType: !620, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1852, file: !1853, line: 413, baseType: !620, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1852, file: !1853, line: 414, baseType: !620, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1852, file: !1853, line: 415, baseType: !620, size: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1852, file: !1853, line: 416, baseType: !620, size: 32, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1852, file: !1853, line: 417, baseType: !620, size: 32, offset: 160)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1852, file: !1853, line: 418, baseType: !619, size: 8, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1852, file: !1853, line: 419, baseType: !619, size: 8, offset: 200)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1852, file: !1853, line: 420, baseType: !1864, size: 8, offset: 208)
!1864 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1852, file: !1853, line: 421, baseType: !1864, size: 8, offset: 216)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1852, file: !1853, line: 422, baseType: !1864, size: 8, offset: 224)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1852, file: !1853, line: 423, baseType: !1864, size: 8, offset: 232)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1852, file: !1853, line: 424, baseType: !1864, size: 8, offset: 240)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1852, file: !1853, line: 425, baseType: !1864, size: 8, offset: 248)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1852, file: !1853, line: 426, baseType: !1864, size: 8, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1852, file: !1853, line: 427, baseType: !1864, size: 8, offset: 264)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1852, file: !1853, line: 428, baseType: !1864, size: 8, offset: 272)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1852, file: !1853, line: 429, baseType: !1864, size: 8, offset: 280)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1852, file: !1853, line: 430, baseType: !1864, size: 8, offset: 288)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1852, file: !1853, line: 431, baseType: !1864, size: 8, offset: 296)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1852, file: !1853, line: 432, baseType: !1864, size: 8, offset: 304)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1852, file: !1853, line: 433, baseType: !1864, size: 8, offset: 312)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1852, file: !1853, line: 434, baseType: !1864, size: 8, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1852, file: !1853, line: 435, baseType: !1864, size: 8, offset: 328)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1852, file: !1853, line: 436, baseType: !1864, size: 8, offset: 336)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1852, file: !1853, line: 437, baseType: !1864, size: 8, offset: 344)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1852, file: !1853, line: 438, baseType: !1864, size: 8, offset: 352)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1852, file: !1853, line: 439, baseType: !1864, size: 8, offset: 360)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1852, file: !1853, line: 440, baseType: !1864, size: 8, offset: 368)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1852, file: !1853, line: 441, baseType: !1864, size: 8, offset: 376)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1852, file: !1853, line: 442, baseType: !1864, size: 8, offset: 384)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1852, file: !1853, line: 443, baseType: !1864, size: 8, offset: 392)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1852, file: !1853, line: 444, baseType: !1864, size: 8, offset: 400)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1852, file: !1853, line: 445, baseType: !1864, size: 8, offset: 408)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1852, file: !1853, line: 446, baseType: !1864, size: 8, offset: 416)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1852, file: !1853, line: 447, baseType: !1864, size: 8, offset: 424)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1852, file: !1853, line: 448, baseType: !1864, size: 8, offset: 432)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1852, file: !1853, line: 449, baseType: !1864, size: 8, offset: 440)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1852, file: !1853, line: 450, baseType: !1864, size: 8, offset: 448)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1852, file: !1853, line: 451, baseType: !1864, size: 8, offset: 456)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1852, file: !1853, line: 452, baseType: !1864, size: 8, offset: 464)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1852, file: !1853, line: 453, baseType: !1864, size: 8, offset: 472)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1852, file: !1853, line: 454, baseType: !1864, size: 8, offset: 480)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1852, file: !1853, line: 455, baseType: !1864, size: 8, offset: 488)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1852, file: !1853, line: 456, baseType: !1864, size: 8, offset: 496)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1852, file: !1853, line: 457, baseType: !1864, size: 8, offset: 504)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1852, file: !1853, line: 458, baseType: !1864, size: 8, offset: 512)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1852, file: !1853, line: 459, baseType: !1864, size: 8, offset: 520)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1852, file: !1853, line: 460, baseType: !1864, size: 8, offset: 528)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1852, file: !1853, line: 461, baseType: !1864, size: 8, offset: 536)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1852, file: !1853, line: 462, baseType: !1864, size: 8, offset: 544)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1852, file: !1853, line: 463, baseType: !1864, size: 8, offset: 552)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1852, file: !1853, line: 464, baseType: !1864, size: 8, offset: 560)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1852, file: !1853, line: 465, baseType: !1864, size: 8, offset: 568)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1852, file: !1853, line: 466, baseType: !1864, size: 8, offset: 576)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1852, file: !1853, line: 467, baseType: !1864, size: 8, offset: 584)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1852, file: !1853, line: 468, baseType: !1864, size: 8, offset: 592)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1852, file: !1853, line: 469, baseType: !1864, size: 8, offset: 600)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1852, file: !1853, line: 470, baseType: !1864, size: 8, offset: 608)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1852, file: !1853, line: 471, baseType: !1864, size: 8, offset: 616)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1852, file: !1853, line: 472, baseType: !1864, size: 8, offset: 624)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1852, file: !1853, line: 473, baseType: !1864, size: 8, offset: 632)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1852, file: !1853, line: 474, baseType: !1864, size: 8, offset: 640)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1852, file: !1853, line: 475, baseType: !1864, size: 8, offset: 648)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1852, file: !1853, line: 476, baseType: !1864, size: 8, offset: 656)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1852, file: !1853, line: 477, baseType: !1864, size: 8, offset: 664)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1852, file: !1853, line: 478, baseType: !1864, size: 8, offset: 672)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1852, file: !1853, line: 479, baseType: !1864, size: 8, offset: 680)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1852, file: !1853, line: 480, baseType: !1864, size: 8, offset: 688)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1852, file: !1853, line: 481, baseType: !1864, size: 8, offset: 696)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1852, file: !1853, line: 482, baseType: !1864, size: 8, offset: 704)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1852, file: !1853, line: 483, baseType: !1864, size: 8, offset: 712)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1852, file: !1853, line: 484, baseType: !1864, size: 8, offset: 720)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1852, file: !1853, line: 485, baseType: !1864, size: 8, offset: 728)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1852, file: !1853, line: 486, baseType: !1864, size: 8, offset: 736)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1852, file: !1853, line: 487, baseType: !1864, size: 8, offset: 744)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1852, file: !1853, line: 488, baseType: !1864, size: 8, offset: 752)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1852, file: !1853, line: 489, baseType: !1864, size: 8, offset: 760)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1852, file: !1853, line: 490, baseType: !1864, size: 8, offset: 768)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1852, file: !1853, line: 491, baseType: !1864, size: 8, offset: 776)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1852, file: !1853, line: 492, baseType: !1864, size: 8, offset: 784)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1852, file: !1853, line: 493, baseType: !1864, size: 8, offset: 792)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1852, file: !1853, line: 494, baseType: !1864, size: 8, offset: 800)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1852, file: !1853, line: 495, baseType: !1864, size: 8, offset: 808)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1852, file: !1853, line: 496, baseType: !1864, size: 8, offset: 816)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1852, file: !1853, line: 497, baseType: !1864, size: 8, offset: 824)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1852, file: !1853, line: 498, baseType: !1864, size: 8, offset: 832)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1852, file: !1853, line: 499, baseType: !1864, size: 8, offset: 840)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1852, file: !1853, line: 500, baseType: !1864, size: 8, offset: 848)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1852, file: !1853, line: 501, baseType: !1864, size: 8, offset: 856)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1852, file: !1853, line: 502, baseType: !1864, size: 8, offset: 864)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1852, file: !1853, line: 503, baseType: !1864, size: 8, offset: 872)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1852, file: !1853, line: 504, baseType: !1864, size: 8, offset: 880)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1852, file: !1853, line: 505, baseType: !1864, size: 8, offset: 888)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1852, file: !1853, line: 506, baseType: !1864, size: 8, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1852, file: !1853, line: 507, baseType: !1864, size: 8, offset: 904)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1852, file: !1853, line: 508, baseType: !1864, size: 8, offset: 912)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1852, file: !1853, line: 509, baseType: !1864, size: 8, offset: 920)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1852, file: !1853, line: 510, baseType: !1864, size: 8, offset: 928)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1852, file: !1853, line: 511, baseType: !1864, size: 8, offset: 936)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1852, file: !1853, line: 512, baseType: !1864, size: 8, offset: 944)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1852, file: !1853, line: 513, baseType: !1864, size: 8, offset: 952)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1852, file: !1853, line: 514, baseType: !1864, size: 8, offset: 960)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1852, file: !1853, line: 515, baseType: !1864, size: 8, offset: 968)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1852, file: !1853, line: 516, baseType: !1864, size: 8, offset: 976)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1852, file: !1853, line: 517, baseType: !1864, size: 8, offset: 984)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1852, file: !1853, line: 518, baseType: !1864, size: 8, offset: 992)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1852, file: !1853, line: 519, baseType: !1864, size: 8, offset: 1000)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1852, file: !1853, line: 520, baseType: !1864, size: 8, offset: 1008)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1852, file: !1853, line: 521, baseType: !1864, size: 8, offset: 1016)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1852, file: !1853, line: 522, baseType: !1864, size: 8, offset: 1024)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1852, file: !1853, line: 523, baseType: !1864, size: 8, offset: 1032)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1852, file: !1853, line: 524, baseType: !1864, size: 8, offset: 1040)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1852, file: !1853, line: 525, baseType: !1864, size: 8, offset: 1048)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1852, file: !1853, line: 526, baseType: !1864, size: 8, offset: 1056)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1852, file: !1853, line: 527, baseType: !1864, size: 8, offset: 1064)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1852, file: !1853, line: 528, baseType: !1864, size: 8, offset: 1072)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1852, file: !1853, line: 529, baseType: !1864, size: 8, offset: 1080)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1852, file: !1853, line: 530, baseType: !1864, size: 8, offset: 1088)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1852, file: !1853, line: 531, baseType: !1864, size: 8, offset: 1096)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1852, file: !1853, line: 532, baseType: !1864, size: 8, offset: 1104)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1852, file: !1853, line: 533, baseType: !1864, size: 8, offset: 1112)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1852, file: !1853, line: 534, baseType: !1864, size: 8, offset: 1120)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1852, file: !1853, line: 535, baseType: !1864, size: 8, offset: 1128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1852, file: !1853, line: 536, baseType: !1864, size: 8, offset: 1136)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1852, file: !1853, line: 537, baseType: !1864, size: 8, offset: 1144)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1852, file: !1853, line: 538, baseType: !1864, size: 8, offset: 1152)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1852, file: !1853, line: 539, baseType: !1864, size: 8, offset: 1160)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1852, file: !1853, line: 540, baseType: !1864, size: 8, offset: 1168)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1852, file: !1853, line: 541, baseType: !1864, size: 8, offset: 1176)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1852, file: !1853, line: 542, baseType: !1864, size: 8, offset: 1184)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1852, file: !1853, line: 543, baseType: !1864, size: 8, offset: 1192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1852, file: !1853, line: 544, baseType: !1864, size: 8, offset: 1200)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1852, file: !1853, line: 545, baseType: !1864, size: 8, offset: 1208)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1852, file: !1853, line: 546, baseType: !1864, size: 8, offset: 1216)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1852, file: !1853, line: 547, baseType: !1864, size: 8, offset: 1224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1852, file: !1853, line: 548, baseType: !1864, size: 8, offset: 1232)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1852, file: !1853, line: 549, baseType: !1864, size: 8, offset: 1240)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1852, file: !1853, line: 550, baseType: !1864, size: 8, offset: 1248)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1852, file: !1853, line: 551, baseType: !1864, size: 8, offset: 1256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1852, file: !1853, line: 552, baseType: !1864, size: 8, offset: 1264)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1852, file: !1853, line: 553, baseType: !1864, size: 8, offset: 1272)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1852, file: !1853, line: 554, baseType: !1864, size: 8, offset: 1280)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1852, file: !1853, line: 555, baseType: !1864, size: 8, offset: 1288)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1852, file: !1853, line: 556, baseType: !1864, size: 8, offset: 1296)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1852, file: !1853, line: 557, baseType: !1864, size: 8, offset: 1304)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1852, file: !1853, line: 558, baseType: !1864, size: 8, offset: 1312)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1852, file: !1853, line: 559, baseType: !1864, size: 8, offset: 1320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1852, file: !1853, line: 560, baseType: !1864, size: 8, offset: 1328)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1852, file: !1853, line: 561, baseType: !1864, size: 8, offset: 1336)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1852, file: !1853, line: 562, baseType: !1864, size: 8, offset: 1344)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1852, file: !1853, line: 563, baseType: !1864, size: 8, offset: 1352)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1852, file: !1853, line: 564, baseType: !1864, size: 8, offset: 1360)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1852, file: !1853, line: 565, baseType: !1864, size: 8, offset: 1368)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1852, file: !1853, line: 566, baseType: !1864, size: 8, offset: 1376)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1852, file: !1853, line: 567, baseType: !1864, size: 8, offset: 1384)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1852, file: !1853, line: 568, baseType: !1864, size: 8, offset: 1392)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1852, file: !1853, line: 569, baseType: !1864, size: 8, offset: 1400)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1852, file: !1853, line: 570, baseType: !1864, size: 8, offset: 1408)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1852, file: !1853, line: 571, baseType: !1864, size: 8, offset: 1416)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1852, file: !1853, line: 572, baseType: !1864, size: 8, offset: 1424)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1852, file: !1853, line: 573, baseType: !1864, size: 8, offset: 1432)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1852, file: !1853, line: 574, baseType: !1864, size: 8, offset: 1440)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !675, file: !135, line: 3405, baseType: !2020, size: 384)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2020, file: !135, line: 3353, baseType: !636, size: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2020, file: !135, line: 3356, baseType: !2024, size: 192, offset: 192)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1853, line: 578, size: 192, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2024, file: !1853, line: 580, baseType: !620, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2024, file: !1853, line: 581, baseType: !620, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2024, file: !1853, line: 582, baseType: !620, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2024, file: !1853, line: 583, baseType: !620, size: 32, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2024, file: !1853, line: 584, baseType: !619, size: 8, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2024, file: !1853, line: 585, baseType: !619, size: 8, offset: 136)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2024, file: !1853, line: 586, baseType: !619, size: 8, offset: 144)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2024, file: !1853, line: 587, baseType: !619, size: 8, offset: 152)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2024, file: !1853, line: 588, baseType: !619, size: 8, offset: 160)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2024, file: !1853, line: 589, baseType: !619, size: 8, offset: 168)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2024, file: !1853, line: 590, baseType: !619, size: 8, offset: 176)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !636, file: !135, line: 405, baseType: !672, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !633, file: !398, line: 263, baseType: !2039, size: 256, offset: 192)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_hashnode", file: !385, line: 644, size: 256, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !2039, file: !385, line: 645, baseType: !747, size: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "is_directive", scope: !2039, file: !385, line: 646, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "directive_index", scope: !2039, file: !385, line: 647, baseType: !7, size: 7, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "rid_code", scope: !2039, file: !385, line: 650, baseType: !619, size: 8, offset: 136)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2039, file: !385, line: 651, baseType: !7, size: 6, offset: 144, flags: DIFlagBitField, extraData: i64 144)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2039, file: !385, line: 652, baseType: !7, size: 10, offset: 150, flags: DIFlagBitField, extraData: i64 144)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2039, file: !385, line: 654, baseType: !2048, size: 64, offset: 192)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_cpp_hashnode_value", file: !385, line: 633, size: 64, elements: !2049)
!2049 = !{!2050, !2054, !2057, !2058}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !2048, file: !385, line: 635, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpp_macro", file: !385, line: 37, baseType: !2053)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_macro", file: !385, line: 37, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "answers", scope: !2048, file: !385, line: 637, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DICompositeType(tag: DW_TAG_structure_type, name: "answer", file: !385, line: 41, flags: DIFlagFwdDecl)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "builtin", scope: !2048, file: !385, line: 639, baseType: !384, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "arg_index", scope: !2048, file: !385, line: 641, baseType: !2059, size: 16)
!2059 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_binding", scope: !630, file: !3, line: 244, baseType: !2061, size: 64, offset: 448)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_binding", file: !3, line: 202, size: 384, elements: !2063)
!2063 = !{!2064, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2062, file: !3, line: 206, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !3, line: 203, size: 64, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2065, file: !3, line: 204, baseType: !672, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2065, file: !3, line: 205, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_label_vars", file: !3, line: 308, size: 384, elements: !2071)
!2071 = !{!2072, !2073, !2096, !2097}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed", scope: !2070, file: !3, line: 311, baseType: !2069, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "label_bindings", scope: !2070, file: !3, line: 313, baseType: !2074, size: 192, offset: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_spot_bindings", file: !3, line: 270, size: 192, elements: !2075)
!2075 = !{!2076, !2093, !2094, !2095}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !2074, file: !3, line: 273, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_scope", file: !3, line: 370, size: 384, elements: !2079)
!2079 = !{!2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2078, file: !3, line: 372, baseType: !2077, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "outer_function", scope: !2078, file: !3, line: 375, baseType: !2077, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bindings", scope: !2078, file: !3, line: 378, baseType: !2061, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2078, file: !3, line: 382, baseType: !672, size: 64, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_last", scope: !2078, file: !3, line: 383, baseType: !672, size: 64, offset: 256)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2078, file: !3, line: 387, baseType: !7, size: 28, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "parm_flag", scope: !2078, file: !3, line: 391, baseType: !7, size: 1, offset: 348, flags: DIFlagBitField, extraData: i64 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "had_vla_unspec", scope: !2078, file: !3, line: 395, baseType: !7, size: 1, offset: 349, flags: DIFlagBitField, extraData: i64 320)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "warned_forward_parm_decls", scope: !2078, file: !3, line: 400, baseType: !7, size: 1, offset: 350, flags: DIFlagBitField, extraData: i64 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "function_body", scope: !2078, file: !3, line: 406, baseType: !7, size: 1, offset: 351, flags: DIFlagBitField, extraData: i64 320)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "keep", scope: !2078, file: !3, line: 409, baseType: !7, size: 1, offset: 352, flags: DIFlagBitField, extraData: i64 320)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "float_const_decimal64", scope: !2078, file: !3, line: 412, baseType: !7, size: 1, offset: 353, flags: DIFlagBitField, extraData: i64 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "has_label_bindings", scope: !2078, file: !3, line: 417, baseType: !7, size: 1, offset: 354, flags: DIFlagBitField, extraData: i64 320)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bindings_in_scope", scope: !2074, file: !3, line: 277, baseType: !2061, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_exprs", scope: !2074, file: !3, line: 284, baseType: !620, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "left_stmt_expr", scope: !2074, file: !3, line: 287, baseType: !619, size: 8, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "decls_in_scope", scope: !2070, file: !3, line: 318, baseType: !1507, size: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "gotos", scope: !2070, file: !3, line: 322, baseType: !2098, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_c_goto_bindings_p_gc", file: !3, line: 303, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_c_goto_bindings_p_gc", file: !3, line: 303, size: 128, elements: !2101)
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2100, file: !3, line: 303, baseType: !2103, size: 128)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_c_goto_bindings_p_base", file: !3, line: 302, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_c_goto_bindings_p_base", file: !3, line: 302, size: 128, elements: !2105)
!2105 = !{!2106, !2107, !2108}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2104, file: !3, line: 302, baseType: !7, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2104, file: !3, line: 302, baseType: !7, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2104, file: !3, line: 302, baseType: !2109, size: 64, offset: 64)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 64, elements: !734)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_goto_bindings_p", file: !3, line: 301, baseType: !2111)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_goto_bindings", file: !3, line: 294, size: 256, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2112, file: !3, line: 296, baseType: !760, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "goto_bindings", scope: !2112, file: !3, line: 298, baseType: !2074, size: 192, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2062, file: !3, line: 207, baseType: !672, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2062, file: !3, line: 208, baseType: !672, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2062, file: !3, line: 209, baseType: !2061, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed", scope: !2062, file: !3, line: 210, baseType: !2061, size: 64, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2062, file: !3, line: 211, baseType: !7, size: 28, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "invisible", scope: !2062, file: !3, line: 212, baseType: !7, size: 1, offset: 348, flags: DIFlagBitField, extraData: i64 320)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2062, file: !3, line: 213, baseType: !7, size: 1, offset: 349, flags: DIFlagBitField, extraData: i64 320)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "inner_comp", scope: !2062, file: !3, line: 214, baseType: !7, size: 1, offset: 350, flags: DIFlagBitField, extraData: i64 320)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2062, file: !3, line: 215, baseType: !7, size: 1, offset: 351, flags: DIFlagBitField, extraData: i64 320)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2062, file: !3, line: 216, baseType: !760, size: 32, offset: 352)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "tag_binding", scope: !630, file: !3, line: 245, baseType: !2061, size: 64, offset: 512)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "label_binding", scope: !630, file: !3, line: 246, baseType: !2061, size: 64, offset: 576)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_inline_static", file: !3, line: 474, size: 320, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2130, file: !3, line: 476, baseType: !760, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2130, file: !3, line: 479, baseType: !672, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "static_decl", scope: !2130, file: !3, line: 482, baseType: !672, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2130, file: !3, line: 485, baseType: !563, size: 32, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2130, file: !3, line: 488, baseType: !2129, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!624, !691}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declarator", file: !564, line: 319, size: 448, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2142, file: !564, line: 321, baseType: !590, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !2142, file: !564, line: 323, baseType: !2141, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "id_loc", scope: !2142, file: !564, line: 324, baseType: !760, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2142, file: !564, line: 348, baseType: !2148, size: 256, offset: 192)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2142, file: !564, line: 325, size: 256, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2160, !2161}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2148, file: !564, line: 328, baseType: !672, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "arg_info", scope: !2148, file: !564, line: 330, baseType: !1622, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2148, file: !564, line: 343, baseType: !2153, size: 256)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2148, file: !564, line: 332, size: 256, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158, !2159}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dimen", scope: !2153, file: !564, line: 334, baseType: !672, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "quals", scope: !2153, file: !564, line: 336, baseType: !620, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2153, file: !564, line: 338, baseType: !672, size: 64, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "static_p", scope: !2153, file: !564, line: 340, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vla_unspec_p", scope: !2153, file: !564, line: 342, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_quals", scope: !2148, file: !564, line: 345, baseType: !620, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2148, file: !564, line: 347, baseType: !672, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_struct_parse_info", file: !3, line: 514, size: 192, elements: !2164)
!2164 = !{!2165, !2171, !2185}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "struct_types", scope: !2163, file: !3, line: 518, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2168, file: !135, line: 184, baseType: !1512, size: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !2163, file: !3, line: 523, baseType: !2172, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_c_binding_ptr_heap", file: !3, line: 509, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_c_binding_ptr_heap", file: !3, line: 509, size: 128, elements: !2175)
!2175 = !{!2176}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2174, file: !3, line: 509, baseType: !2177, size: 128)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_c_binding_ptr_base", file: !3, line: 508, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_c_binding_ptr_base", file: !3, line: 508, size: 128, elements: !2179)
!2179 = !{!2180, !2181, !2182}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2178, file: !3, line: 508, baseType: !7, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2178, file: !3, line: 508, baseType: !7, size: 32, offset: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2178, file: !3, line: 508, baseType: !2183, size: 64, offset: 64)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 64, elements: !734)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_binding_ptr", file: !3, line: 507, baseType: !2061)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "typedefs_seen", scope: !2163, file: !3, line: 526, baseType: !2166, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_parm", file: !564, line: 360, size: 192, elements: !2188)
!2188 = !{!2189, !2222, !2223}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "specs", scope: !2187, file: !564, line: 362, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declspecs", file: !564, line: 208, size: 448, elements: !2192)
!2192 = !{!2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2191, file: !564, line: 213, baseType: !672, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2191, file: !564, line: 216, baseType: !672, size: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "decl_attr", scope: !2191, file: !564, line: 218, baseType: !672, size: 64, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2191, file: !564, line: 222, baseType: !672, size: 64, offset: 192)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "typespec_word", scope: !2191, file: !564, line: 225, baseType: !568, size: 32, offset: 256)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !2191, file: !564, line: 227, baseType: !582, size: 32, offset: 288)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "expr_const_operands", scope: !2191, file: !564, line: 230, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "declspecs_seen_p", scope: !2191, file: !564, line: 232, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "type_seen_p", scope: !2191, file: !564, line: 234, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "non_sc_seen_p", scope: !2191, file: !564, line: 241, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "typedef_p", scope: !2191, file: !564, line: 243, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "tag_defined_p", scope: !2191, file: !564, line: 247, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_signed_p", scope: !2191, file: !564, line: 250, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_p", scope: !2191, file: !564, line: 252, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "default_int_p", scope: !2191, file: !564, line: 255, baseType: !7, size: 32, offset: 352)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "long_p", scope: !2191, file: !564, line: 257, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "long_long_p", scope: !2191, file: !564, line: 259, baseType: !7, size: 1, offset: 385, flags: DIFlagBitField, extraData: i64 384)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "short_p", scope: !2191, file: !564, line: 261, baseType: !7, size: 1, offset: 386, flags: DIFlagBitField, extraData: i64 384)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "signed_p", scope: !2191, file: !564, line: 263, baseType: !7, size: 1, offset: 387, flags: DIFlagBitField, extraData: i64 384)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_p", scope: !2191, file: !564, line: 265, baseType: !7, size: 1, offset: 388, flags: DIFlagBitField, extraData: i64 384)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "complex_p", scope: !2191, file: !564, line: 267, baseType: !7, size: 1, offset: 389, flags: DIFlagBitField, extraData: i64 384)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "inline_p", scope: !2191, file: !564, line: 269, baseType: !7, size: 1, offset: 390, flags: DIFlagBitField, extraData: i64 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "thread_p", scope: !2191, file: !564, line: 271, baseType: !7, size: 1, offset: 391, flags: DIFlagBitField, extraData: i64 384)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "const_p", scope: !2191, file: !564, line: 273, baseType: !7, size: 1, offset: 392, flags: DIFlagBitField, extraData: i64 384)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_p", scope: !2191, file: !564, line: 275, baseType: !7, size: 1, offset: 393, flags: DIFlagBitField, extraData: i64 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_p", scope: !2191, file: !564, line: 277, baseType: !7, size: 1, offset: 394, flags: DIFlagBitField, extraData: i64 384)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_p", scope: !2191, file: !564, line: 279, baseType: !7, size: 1, offset: 395, flags: DIFlagBitField, extraData: i64 384)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2191, file: !564, line: 281, baseType: !2221, size: 8, offset: 400)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !673, line: 73, baseType: !619)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2187, file: !564, line: 364, baseType: !672, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !2187, file: !564, line: 366, baseType: !2141, size: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "lang_tree_node", file: !3, line: 256, size: 1792, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !2226, file: !3, line: 260, baseType: !675, size: 1792)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2226, file: !3, line: 261, baseType: !630, size: 640)
!2230 = !{!2231, !2240, !2260, !2278, !2294, !2297, !2300, !2302, !2304, !2306, !2308, !2310, !2312, !2314, !2316, !2318, !2320, !2322, !2324, !2326, !2328, !2330, !2332, !2334, !2336, !2338, !2340, !2342, !2344, !2346, !0, !2348, !2350, !2352, !2354}
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "already", scope: !2233, file: !3, line: 2941, type: !619, isLocal: true, isDefinition: true)
!2233 = distinct !DISubprogram(name: "undeclared_variable", scope: !3, file: !3, line: 2939, type: !2234, scopeLine: 2940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2236)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{null, !760, !672}
!2236 = !{!2237, !2238, !2239}
!2237 = !DILocalVariable(name: "loc", arg: 1, scope: !2233, file: !3, line: 2939, type: !760)
!2238 = !DILocalVariable(name: "id", arg: 2, scope: !2233, file: !3, line: 2939, type: !672)
!2239 = !DILocalVariable(name: "scope", scope: !2233, file: !3, line: 2942, type: !2077)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(name: "explained_incomplete_types", scope: !2242, file: !3, line: 6171, type: !619, isLocal: true, isDefinition: true)
!2242 = distinct !DISubprogram(name: "get_parm_info", scope: !3, file: !3, line: 6161, type: !2243, scopeLine: 6162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2245)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!1622, !619}
!2245 = !{!2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2256, !2257, !2258}
!2246 = !DILocalVariable(name: "ellipsis", arg: 1, scope: !2242, file: !3, line: 6161, type: !619)
!2247 = !DILocalVariable(name: "b", scope: !2242, file: !3, line: 6163, type: !2061)
!2248 = !DILocalVariable(name: "arg_info", scope: !2242, file: !3, line: 6164, type: !1622)
!2249 = !DILocalVariable(name: "parms", scope: !2242, file: !3, line: 6166, type: !672)
!2250 = !DILocalVariable(name: "tags", scope: !2242, file: !3, line: 6167, type: !672)
!2251 = !DILocalVariable(name: "types", scope: !2242, file: !3, line: 6168, type: !672)
!2252 = !DILocalVariable(name: "others", scope: !2242, file: !3, line: 6169, type: !672)
!2253 = !DILocalVariable(name: "gave_void_only_once_err", scope: !2242, file: !3, line: 6172, type: !619)
!2254 = !DILocalVariable(name: "decl", scope: !2255, file: !3, line: 6219, type: !672)
!2255 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 6218, column: 5)
!2256 = !DILocalVariable(name: "type", scope: !2255, file: !3, line: 6220, type: !672)
!2257 = !DILocalVariable(name: "keyword", scope: !2255, file: !3, line: 6221, type: !625)
!2258 = !DILabel(scope: !2259, name: "tag", file: !3, line: 6260)
!2259 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 6224, column: 2)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "hint", scope: !2262, file: !3, line: 8132, type: !619, isLocal: true, isDefinition: true)
!2262 = distinct !DISubprogram(name: "check_for_loop_decls", scope: !3, file: !3, line: 8124, type: !2263, scopeLine: 8125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2265)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!672, !760}
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2274, !2275}
!2266 = !DILocalVariable(name: "loc", arg: 1, scope: !2262, file: !3, line: 8124, type: !760)
!2267 = !DILocalVariable(name: "b", scope: !2262, file: !3, line: 8126, type: !2061)
!2268 = !DILocalVariable(name: "one_decl", scope: !2262, file: !3, line: 8127, type: !672)
!2269 = !DILocalVariable(name: "n_decls", scope: !2262, file: !3, line: 8128, type: !620)
!2270 = !DILocalVariable(name: "id", scope: !2271, file: !3, line: 8162, type: !672)
!2271 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 8161, column: 5)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 8160, column: 3)
!2273 = distinct !DILexicalBlock(scope: !2262, file: !3, line: 8160, column: 3)
!2274 = !DILocalVariable(name: "decl", scope: !2271, file: !3, line: 8163, type: !672)
!2275 = !DILocalVariable(name: "decl_loc", scope: !2276, file: !3, line: 8172, type: !760)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 8171, column: 4)
!2277 = distinct !DILexicalBlock(scope: !2271, file: !3, line: 8169, column: 2)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_c_decl_h", scope: !2, file: !2280, line: 1993, type: !2281, isLocal: false, isDefinition: true)
!2280 = !DIFile(filename: "./gt-c-decl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 3200, elements: !2292)
!2282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2284, line: 69, size: 320, elements: !2285)
!2284 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2285 = !{!2286, !2287, !2288, !2289, !2291}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2283, file: !2284, line: 70, baseType: !624, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2283, file: !2284, line: 71, baseType: !1107, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2283, file: !2284, line: 72, baseType: !1107, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2283, file: !2284, line: 73, baseType: !2290, size: 64, offset: 192)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2284, line: 65, baseType: !1477)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2283, file: !2284, line: 74, baseType: !2290, size: 64, offset: 256)
!2292 = !{!2293}
!2293 = !DISubrange(count: 10)
!2294 = !DIGlobalVariableExpression(var: !2295, expr: !DIExpression())
!2295 = distinct !DIGlobalVariable(name: "gt_ggc_rd_gt_c_decl_h", scope: !2, file: !2280, line: 2060, type: !2296, isLocal: false, isDefinition: true)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 960, elements: !709)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_c_decl_h", scope: !2, file: !2280, line: 2066, type: !2299, isLocal: false, isDefinition: true)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 640, elements: !879)
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "pending_invalid_xref", scope: !2, file: !3, line: 90, type: !672, isLocal: false, isDefinition: true)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "pending_invalid_xref_location", scope: !2, file: !3, line: 93, type: !760, isLocal: false, isDefinition: true)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "current_function_prototype_locus", scope: !2, file: !3, line: 99, type: !760, isLocal: true, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "current_function_prototype_built_in", scope: !2, file: !3, line: 103, type: !619, isLocal: true, isDefinition: true)
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "current_function_prototype_arg_types", scope: !2, file: !3, line: 107, type: !672, isLocal: true, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "current_function_arg_info", scope: !2, file: !3, line: 112, type: !1622, isLocal: true, isDefinition: true)
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "parser_obstack", scope: !2, file: !3, line: 117, type: !891, isLocal: false, isDefinition: true)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "c_stmt_tree", scope: !2, file: !3, line: 121, type: !1612, isLocal: true, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "c_break_label", scope: !2, file: !3, line: 124, type: !672, isLocal: false, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "c_cont_label", scope: !2, file: !3, line: 125, type: !672, isLocal: false, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "all_translation_units", scope: !2, file: !3, line: 131, type: !672, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "visible_builtins", scope: !2, file: !3, line: 134, type: !672, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "current_function_returns_value", scope: !2, file: !3, line: 139, type: !620, isLocal: false, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "current_function_returns_null", scope: !2, file: !3, line: 144, type: !620, isLocal: false, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "current_function_returns_abnormally", scope: !2, file: !3, line: 149, type: !620, isLocal: false, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "warn_about_return_type", scope: !2, file: !3, line: 154, type: !620, isLocal: true, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "undef_nested_function", scope: !2, file: !3, line: 159, type: !619, isLocal: true, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "c_override_global_bindings_to_false", scope: !2, file: !3, line: 163, type: !619, isLocal: false, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "current_scope", scope: !2, file: !3, line: 422, type: !2077, isLocal: true, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "current_function_scope", scope: !2, file: !3, line: 428, type: !2077, isLocal: true, isDefinition: true)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "file_scope", scope: !2, file: !3, line: 432, type: !2077, isLocal: true, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "external_scope", scope: !2, file: !3, line: 437, type: !2077, isLocal: true, isDefinition: true)
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "scope_freelist", scope: !2, file: !3, line: 441, type: !2077, isLocal: true, isDefinition: true)
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "binding_freelist", scope: !2, file: !3, line: 445, type: !2061, isLocal: true, isDefinition: true)
!2348 = !DIGlobalVariableExpression(var: !2349, expr: !DIExpression())
!2349 = distinct !DIGlobalVariable(name: "keep_next_level_flag", scope: !2, file: !3, line: 497, type: !619, isLocal: true, isDefinition: true)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "next_is_function_body", scope: !2, file: !3, line: 503, type: !619, isLocal: true, isDefinition: true)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "struct_parse_info", scope: !2, file: !3, line: 531, type: !2162, isLocal: true, isDefinition: true)
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "ext_block", scope: !2, file: !3, line: 9482, type: !672, isLocal: true, isDefinition: true)
!2356 = !DIGlobalVariableExpression(var: !2349, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2357 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2358 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2359 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2360 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2361 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2362 = !{i32 2, !"Dwarf Version", i32 4}
!2363 = !{i32 2, !"Debug Info Version", i32 3}
!2364 = !{i32 1, !"wchar_size", i32 4}
!2365 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2366 = distinct !DISubprogram(name: "vprintf", scope: !2367, file: !2367, line: 39, type: !2368, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2378)
!2367 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!620, !2370, !2371}
!2370 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !625)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2372, file: !3, baseType: !7, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2372, file: !3, baseType: !7, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2372, file: !3, baseType: !624, size: 64, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2372, file: !3, baseType: !624, size: 64, offset: 128)
!2378 = !{!2379, !2380}
!2379 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2366, file: !2367, line: 39, type: !2370)
!2380 = !DILocalVariable(name: "__arg", arg: 2, scope: !2366, file: !2367, line: 39, type: !2371)
!2381 = !DILocation(line: 0, scope: !2366)
!2382 = !DILocation(line: 41, column: 20, scope: !2366)
!2383 = !DILocation(line: 41, column: 10, scope: !2366)
!2384 = !DILocation(line: 41, column: 3, scope: !2366)
!2385 = distinct !DISubprogram(name: "getchar", scope: !2367, file: !2367, line: 47, type: !2386, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!620}
!2388 = !{}
!2389 = !DILocation(line: 49, column: 16, scope: !2385)
!2390 = !DILocation(line: 49, column: 10, scope: !2385)
!2391 = !DILocation(line: 49, column: 3, scope: !2385)
!2392 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2367, file: !2367, line: 56, type: !2393, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2445)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!620, !2395}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2397, line: 7, baseType: !2398)
!2397 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2399, line: 49, size: 1728, elements: !2400)
!2399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2416, !2418, !2419, !2420, !2423, !2424, !2425, !2426, !2429, !2431, !2434, !2437, !2438, !2439, !2440, !2441}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2398, file: !2399, line: 51, baseType: !620, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2398, file: !2399, line: 54, baseType: !622, size: 64, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2398, file: !2399, line: 55, baseType: !622, size: 64, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2398, file: !2399, line: 56, baseType: !622, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2398, file: !2399, line: 57, baseType: !622, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2398, file: !2399, line: 58, baseType: !622, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2398, file: !2399, line: 59, baseType: !622, size: 64, offset: 384)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2398, file: !2399, line: 60, baseType: !622, size: 64, offset: 448)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2398, file: !2399, line: 61, baseType: !622, size: 64, offset: 512)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2398, file: !2399, line: 64, baseType: !622, size: 64, offset: 576)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2398, file: !2399, line: 65, baseType: !622, size: 64, offset: 640)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2398, file: !2399, line: 66, baseType: !622, size: 64, offset: 704)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2398, file: !2399, line: 68, baseType: !2414, size: 64, offset: 768)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2399, line: 36, flags: DIFlagFwdDecl)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2398, file: !2399, line: 70, baseType: !2417, size: 64, offset: 832)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2398, file: !2399, line: 72, baseType: !620, size: 32, offset: 896)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2398, file: !2399, line: 73, baseType: !620, size: 32, offset: 928)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2398, file: !2399, line: 74, baseType: !2421, size: 64, offset: 960)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2422, line: 152, baseType: !691)
!2422 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2398, file: !2399, line: 77, baseType: !2059, size: 16, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2398, file: !2399, line: 78, baseType: !1864, size: 8, offset: 1040)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2398, file: !2399, line: 79, baseType: !733, size: 8, offset: 1048)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2398, file: !2399, line: 81, baseType: !2427, size: 64, offset: 1088)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2399, line: 43, baseType: null)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2398, file: !2399, line: 89, baseType: !2430, size: 64, offset: 1152)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2422, line: 153, baseType: !691)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2398, file: !2399, line: 91, baseType: !2432, size: 64, offset: 1216)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2399, line: 37, flags: DIFlagFwdDecl)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2398, file: !2399, line: 92, baseType: !2435, size: 64, offset: 1280)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2399, line: 38, flags: DIFlagFwdDecl)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2398, file: !2399, line: 93, baseType: !2417, size: 64, offset: 1344)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2398, file: !2399, line: 94, baseType: !624, size: 64, offset: 1408)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2398, file: !2399, line: 95, baseType: !1107, size: 64, offset: 1472)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2398, file: !2399, line: 96, baseType: !620, size: 32, offset: 1536)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2398, file: !2399, line: 98, baseType: !2442, size: 160, offset: 1568)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 160, elements: !2443)
!2443 = !{!2444}
!2444 = !DISubrange(count: 20)
!2445 = !{!2446}
!2446 = !DILocalVariable(name: "__fp", arg: 1, scope: !2392, file: !2367, line: 56, type: !2395)
!2447 = !DILocation(line: 0, scope: !2392)
!2448 = !DILocation(line: 58, column: 10, scope: !2392)
!2449 = !DILocation(line: 58, column: 3, scope: !2392)
!2450 = distinct !DISubprogram(name: "getc_unlocked", scope: !2367, file: !2367, line: 66, type: !2393, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2451 = !{!2452}
!2452 = !DILocalVariable(name: "__fp", arg: 1, scope: !2450, file: !2367, line: 66, type: !2395)
!2453 = !DILocation(line: 0, scope: !2450)
!2454 = !DILocation(line: 68, column: 10, scope: !2450)
!2455 = !DILocation(line: 68, column: 3, scope: !2450)
!2456 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2367, file: !2367, line: 73, type: !2386, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2457 = !DILocation(line: 75, column: 10, scope: !2456)
!2458 = !DILocation(line: 75, column: 3, scope: !2456)
!2459 = distinct !DISubprogram(name: "putchar", scope: !2367, file: !2367, line: 82, type: !2460, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2462)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!620, !620}
!2462 = !{!2463}
!2463 = !DILocalVariable(name: "__c", arg: 1, scope: !2459, file: !2367, line: 82, type: !620)
!2464 = !DILocation(line: 0, scope: !2459)
!2465 = !DILocation(line: 84, column: 21, scope: !2459)
!2466 = !DILocation(line: 84, column: 10, scope: !2459)
!2467 = !DILocation(line: 84, column: 3, scope: !2459)
!2468 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2367, file: !2367, line: 91, type: !2469, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2471)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!620, !620, !2395}
!2471 = !{!2472, !2473}
!2472 = !DILocalVariable(name: "__c", arg: 1, scope: !2468, file: !2367, line: 91, type: !620)
!2473 = !DILocalVariable(name: "__stream", arg: 2, scope: !2468, file: !2367, line: 91, type: !2395)
!2474 = !DILocation(line: 0, scope: !2468)
!2475 = !DILocation(line: 93, column: 10, scope: !2468)
!2476 = !DILocation(line: 93, column: 3, scope: !2468)
!2477 = distinct !DISubprogram(name: "putc_unlocked", scope: !2367, file: !2367, line: 101, type: !2469, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2478 = !{!2479, !2480}
!2479 = !DILocalVariable(name: "__c", arg: 1, scope: !2477, file: !2367, line: 101, type: !620)
!2480 = !DILocalVariable(name: "__stream", arg: 2, scope: !2477, file: !2367, line: 101, type: !2395)
!2481 = !DILocation(line: 0, scope: !2477)
!2482 = !DILocation(line: 103, column: 10, scope: !2477)
!2483 = !DILocation(line: 103, column: 3, scope: !2477)
!2484 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2367, file: !2367, line: 108, type: !2460, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2485 = !{!2486}
!2486 = !DILocalVariable(name: "__c", arg: 1, scope: !2484, file: !2367, line: 108, type: !620)
!2487 = !DILocation(line: 0, scope: !2484)
!2488 = !DILocation(line: 110, column: 10, scope: !2484)
!2489 = !DILocation(line: 110, column: 3, scope: !2484)
!2490 = distinct !DISubprogram(name: "getline", scope: !2367, file: !2367, line: 118, type: !2491, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!2493, !621, !2494, !2395}
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2422, line: 193, baseType: !691)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!2495 = !{!2496, !2497, !2498}
!2496 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2490, file: !2367, line: 118, type: !621)
!2497 = !DILocalVariable(name: "__n", arg: 2, scope: !2490, file: !2367, line: 118, type: !2494)
!2498 = !DILocalVariable(name: "__stream", arg: 3, scope: !2490, file: !2367, line: 118, type: !2395)
!2499 = !DILocation(line: 0, scope: !2490)
!2500 = !DILocation(line: 120, column: 10, scope: !2490)
!2501 = !DILocation(line: 120, column: 3, scope: !2490)
!2502 = distinct !DISubprogram(name: "feof_unlocked", scope: !2367, file: !2367, line: 128, type: !2393, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2503)
!2503 = !{!2504}
!2504 = !DILocalVariable(name: "__stream", arg: 1, scope: !2502, file: !2367, line: 128, type: !2395)
!2505 = !DILocation(line: 0, scope: !2502)
!2506 = !DILocation(line: 130, column: 10, scope: !2502)
!2507 = !DILocation(line: 130, column: 3, scope: !2502)
!2508 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2367, file: !2367, line: 135, type: !2393, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2509)
!2509 = !{!2510}
!2510 = !DILocalVariable(name: "__stream", arg: 1, scope: !2508, file: !2367, line: 135, type: !2395)
!2511 = !DILocation(line: 0, scope: !2508)
!2512 = !DILocation(line: 137, column: 10, scope: !2508)
!2513 = !DILocation(line: 137, column: 3, scope: !2508)
!2514 = distinct !DISubprogram(name: "tolower", scope: !2515, file: !2515, line: 207, type: !2460, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2515 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2516 = !{!2517}
!2517 = !DILocalVariable(name: "__c", arg: 1, scope: !2514, file: !2515, line: 207, type: !620)
!2518 = !DILocation(line: 0, scope: !2514)
!2519 = !DILocation(line: 209, column: 22, scope: !2514)
!2520 = !DILocation(line: 209, column: 39, scope: !2514)
!2521 = !DILocation(line: 209, column: 38, scope: !2514)
!2522 = !DILocation(line: 209, column: 37, scope: !2514)
!2523 = !DILocation(line: 209, column: 10, scope: !2514)
!2524 = !DILocation(line: 209, column: 3, scope: !2514)
!2525 = distinct !DISubprogram(name: "toupper", scope: !2515, file: !2515, line: 213, type: !2460, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2526)
!2526 = !{!2527}
!2527 = !DILocalVariable(name: "__c", arg: 1, scope: !2525, file: !2515, line: 213, type: !620)
!2528 = !DILocation(line: 0, scope: !2525)
!2529 = !DILocation(line: 215, column: 22, scope: !2525)
!2530 = !DILocation(line: 215, column: 39, scope: !2525)
!2531 = !DILocation(line: 215, column: 38, scope: !2525)
!2532 = !DILocation(line: 215, column: 37, scope: !2525)
!2533 = !DILocation(line: 215, column: 10, scope: !2525)
!2534 = !DILocation(line: 215, column: 3, scope: !2525)
!2535 = distinct !DISubprogram(name: "atoi", scope: !2536, file: !2536, line: 361, type: !2537, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2539)
!2536 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!620, !625}
!2539 = !{!2540}
!2540 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2535, file: !2536, line: 361, type: !625)
!2541 = !DILocation(line: 0, scope: !2535)
!2542 = !DILocation(line: 363, column: 16, scope: !2535)
!2543 = !DILocation(line: 363, column: 10, scope: !2535)
!2544 = !DILocation(line: 363, column: 3, scope: !2535)
!2545 = distinct !DISubprogram(name: "atol", scope: !2536, file: !2536, line: 366, type: !2546, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2548)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!691, !625}
!2548 = !{!2549}
!2549 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2545, file: !2536, line: 366, type: !625)
!2550 = !DILocation(line: 0, scope: !2545)
!2551 = !DILocation(line: 368, column: 10, scope: !2545)
!2552 = !DILocation(line: 368, column: 3, scope: !2545)
!2553 = distinct !DISubprogram(name: "atoll", scope: !2536, file: !2536, line: 373, type: !2554, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2557)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!2556, !625}
!2556 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2557 = !{!2558}
!2558 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2553, file: !2536, line: 373, type: !625)
!2559 = !DILocation(line: 0, scope: !2553)
!2560 = !DILocation(line: 375, column: 10, scope: !2553)
!2561 = !DILocation(line: 375, column: 3, scope: !2553)
!2562 = distinct !DISubprogram(name: "bsearch", scope: !2563, file: !2563, line: 20, type: !2564, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2567)
!2563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!624, !1268, !1268, !1107, !1107, !2566}
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2536, line: 808, baseType: !1472)
!2567 = !{!2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2568 = !DILocalVariable(name: "__key", arg: 1, scope: !2562, file: !2563, line: 20, type: !1268)
!2569 = !DILocalVariable(name: "__base", arg: 2, scope: !2562, file: !2563, line: 20, type: !1268)
!2570 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2562, file: !2563, line: 20, type: !1107)
!2571 = !DILocalVariable(name: "__size", arg: 4, scope: !2562, file: !2563, line: 20, type: !1107)
!2572 = !DILocalVariable(name: "__compar", arg: 5, scope: !2562, file: !2563, line: 21, type: !2566)
!2573 = !DILocalVariable(name: "__l", scope: !2562, file: !2563, line: 23, type: !1107)
!2574 = !DILocalVariable(name: "__u", scope: !2562, file: !2563, line: 23, type: !1107)
!2575 = !DILocalVariable(name: "__idx", scope: !2562, file: !2563, line: 23, type: !1107)
!2576 = !DILocalVariable(name: "__p", scope: !2562, file: !2563, line: 24, type: !1268)
!2577 = !DILocalVariable(name: "__comparison", scope: !2562, file: !2563, line: 25, type: !620)
!2578 = !DILocation(line: 0, scope: !2562)
!2579 = !DILocation(line: 29, column: 3, scope: !2562)
!2580 = !DILocation(line: 27, column: 7, scope: !2562)
!2581 = !DILocation(line: 29, column: 14, scope: !2562)
!2582 = !DILocation(line: 31, column: 20, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2562, file: !2563, line: 30, column: 5)
!2584 = !DILocation(line: 31, column: 27, scope: !2583)
!2585 = !DILocation(line: 32, column: 56, scope: !2583)
!2586 = !DILocation(line: 32, column: 47, scope: !2583)
!2587 = !DILocation(line: 33, column: 22, scope: !2583)
!2588 = !DILocation(line: 34, column: 24, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2583, file: !2563, line: 34, column: 11)
!2590 = !DILocation(line: 34, column: 11, scope: !2583)
!2591 = !DILocation(line: 36, column: 29, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2589, file: !2563, line: 36, column: 16)
!2593 = !DILocation(line: 36, column: 16, scope: !2589)
!2594 = !DILocation(line: 37, column: 14, scope: !2592)
!2595 = distinct !{!2595, !2579, !2596}
!2596 = !DILocation(line: 40, column: 5, scope: !2562)
!2597 = !DILocation(line: 43, column: 1, scope: !2562)
!2598 = distinct !DISubprogram(name: "atof", scope: !2599, file: !2599, line: 25, type: !2600, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2603)
!2599 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!2602, !625}
!2602 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2603 = !{!2604}
!2604 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2598, file: !2599, line: 25, type: !625)
!2605 = !DILocation(line: 0, scope: !2598)
!2606 = !DILocation(line: 27, column: 10, scope: !2598)
!2607 = !DILocation(line: 27, column: 3, scope: !2598)
!2608 = distinct !DISubprogram(name: "strtoimax", scope: !2609, file: !2609, line: 324, type: !2610, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2616)
!2609 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!2612, !2370, !2615, !620}
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2613, line: 101, baseType: !2614)
!2613 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2422, line: 72, baseType: !691)
!2615 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !621)
!2616 = !{!2617, !2618, !2619}
!2617 = !DILocalVariable(name: "nptr", arg: 1, scope: !2608, file: !2609, line: 324, type: !2370)
!2618 = !DILocalVariable(name: "endptr", arg: 2, scope: !2608, file: !2609, line: 324, type: !2615)
!2619 = !DILocalVariable(name: "base", arg: 3, scope: !2608, file: !2609, line: 324, type: !620)
!2620 = !DILocation(line: 0, scope: !2608)
!2621 = !DILocation(line: 327, column: 10, scope: !2608)
!2622 = !DILocation(line: 327, column: 3, scope: !2608)
!2623 = distinct !DISubprogram(name: "strtoumax", scope: !2609, file: !2609, line: 336, type: !2624, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!2626, !2370, !2615, !620}
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2613, line: 102, baseType: !2627)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2422, line: 73, baseType: !689)
!2628 = !{!2629, !2630, !2631}
!2629 = !DILocalVariable(name: "nptr", arg: 1, scope: !2623, file: !2609, line: 336, type: !2370)
!2630 = !DILocalVariable(name: "endptr", arg: 2, scope: !2623, file: !2609, line: 336, type: !2615)
!2631 = !DILocalVariable(name: "base", arg: 3, scope: !2623, file: !2609, line: 336, type: !620)
!2632 = !DILocation(line: 0, scope: !2623)
!2633 = !DILocation(line: 339, column: 10, scope: !2623)
!2634 = !DILocation(line: 339, column: 3, scope: !2623)
!2635 = distinct !DISubprogram(name: "wcstoimax", scope: !2609, file: !2609, line: 348, type: !2636, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!2612, !2638, !2642, !620}
!2638 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2639)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2641)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2609, line: 34, baseType: !620)
!2642 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2643)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2645 = !{!2646, !2647, !2648}
!2646 = !DILocalVariable(name: "nptr", arg: 1, scope: !2635, file: !2609, line: 348, type: !2638)
!2647 = !DILocalVariable(name: "endptr", arg: 2, scope: !2635, file: !2609, line: 348, type: !2642)
!2648 = !DILocalVariable(name: "base", arg: 3, scope: !2635, file: !2609, line: 348, type: !620)
!2649 = !DILocation(line: 0, scope: !2635)
!2650 = !DILocation(line: 351, column: 10, scope: !2635)
!2651 = !DILocation(line: 351, column: 3, scope: !2635)
!2652 = distinct !DISubprogram(name: "wcstoumax", scope: !2609, file: !2609, line: 362, type: !2653, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2655)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!2626, !2638, !2642, !620}
!2655 = !{!2656, !2657, !2658}
!2656 = !DILocalVariable(name: "nptr", arg: 1, scope: !2652, file: !2609, line: 362, type: !2638)
!2657 = !DILocalVariable(name: "endptr", arg: 2, scope: !2652, file: !2609, line: 362, type: !2642)
!2658 = !DILocalVariable(name: "base", arg: 3, scope: !2652, file: !2609, line: 362, type: !620)
!2659 = !DILocation(line: 0, scope: !2652)
!2660 = !DILocation(line: 365, column: 10, scope: !2652)
!2661 = !DILocation(line: 365, column: 3, scope: !2652)
!2662 = distinct !DISubprogram(name: "stat", scope: !2663, file: !2663, line: 453, type: !2664, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2701)
!2663 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!620, !625, !2666}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2668, line: 46, size: 1152, elements: !2669)
!2668 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2669 = !{!2670, !2672, !2674, !2676, !2678, !2680, !2682, !2683, !2684, !2685, !2687, !2689, !2697, !2698, !2699}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2667, file: !2668, line: 48, baseType: !2671, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2422, line: 145, baseType: !689)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2667, file: !2668, line: 53, baseType: !2673, size: 64, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2422, line: 148, baseType: !689)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2667, file: !2668, line: 61, baseType: !2675, size: 64, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2422, line: 151, baseType: !689)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2667, file: !2668, line: 62, baseType: !2677, size: 32, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2422, line: 150, baseType: !7)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2667, file: !2668, line: 64, baseType: !2679, size: 32, offset: 224)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2422, line: 146, baseType: !7)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2667, file: !2668, line: 65, baseType: !2681, size: 32, offset: 256)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2422, line: 147, baseType: !7)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2667, file: !2668, line: 67, baseType: !620, size: 32, offset: 288)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2667, file: !2668, line: 69, baseType: !2671, size: 64, offset: 320)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2667, file: !2668, line: 74, baseType: !2421, size: 64, offset: 384)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2667, file: !2668, line: 78, baseType: !2686, size: 64, offset: 448)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2422, line: 174, baseType: !691)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2667, file: !2668, line: 80, baseType: !2688, size: 64, offset: 512)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2422, line: 179, baseType: !691)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2667, file: !2668, line: 91, baseType: !2690, size: 128, offset: 576)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2691, line: 10, size: 128, elements: !2692)
!2691 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2692 = !{!2693, !2695}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2690, file: !2691, line: 12, baseType: !2694, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2422, line: 160, baseType: !691)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2690, file: !2691, line: 16, baseType: !2696, size: 64, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2422, line: 196, baseType: !691)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2667, file: !2668, line: 92, baseType: !2690, size: 128, offset: 704)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2667, file: !2668, line: 93, baseType: !2690, size: 128, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2667, file: !2668, line: 106, baseType: !2700, size: 192, offset: 960)
!2700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2696, size: 192, elements: !709)
!2701 = !{!2702, !2703}
!2702 = !DILocalVariable(name: "__path", arg: 1, scope: !2662, file: !2663, line: 453, type: !625)
!2703 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2662, file: !2663, line: 453, type: !2666)
!2704 = !DILocation(line: 0, scope: !2662)
!2705 = !DILocation(line: 455, column: 10, scope: !2662)
!2706 = !DILocation(line: 455, column: 3, scope: !2662)
!2707 = distinct !DISubprogram(name: "lstat", scope: !2663, file: !2663, line: 460, type: !2664, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2708)
!2708 = !{!2709, !2710}
!2709 = !DILocalVariable(name: "__path", arg: 1, scope: !2707, file: !2663, line: 460, type: !625)
!2710 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2707, file: !2663, line: 460, type: !2666)
!2711 = !DILocation(line: 0, scope: !2707)
!2712 = !DILocation(line: 462, column: 10, scope: !2707)
!2713 = !DILocation(line: 462, column: 3, scope: !2707)
!2714 = distinct !DISubprogram(name: "fstat", scope: !2663, file: !2663, line: 467, type: !2715, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2717)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!620, !620, !2666}
!2717 = !{!2718, !2719}
!2718 = !DILocalVariable(name: "__fd", arg: 1, scope: !2714, file: !2663, line: 467, type: !620)
!2719 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2714, file: !2663, line: 467, type: !2666)
!2720 = !DILocation(line: 0, scope: !2714)
!2721 = !DILocation(line: 469, column: 10, scope: !2714)
!2722 = !DILocation(line: 469, column: 3, scope: !2714)
!2723 = distinct !DISubprogram(name: "fstatat", scope: !2663, file: !2663, line: 474, type: !2724, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2726)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!620, !620, !625, !2666, !620}
!2726 = !{!2727, !2728, !2729, !2730}
!2727 = !DILocalVariable(name: "__fd", arg: 1, scope: !2723, file: !2663, line: 474, type: !620)
!2728 = !DILocalVariable(name: "__filename", arg: 2, scope: !2723, file: !2663, line: 474, type: !625)
!2729 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2723, file: !2663, line: 474, type: !2666)
!2730 = !DILocalVariable(name: "__flag", arg: 4, scope: !2723, file: !2663, line: 474, type: !620)
!2731 = !DILocation(line: 0, scope: !2723)
!2732 = !DILocation(line: 477, column: 10, scope: !2723)
!2733 = !DILocation(line: 477, column: 3, scope: !2723)
!2734 = distinct !DISubprogram(name: "mknod", scope: !2663, file: !2663, line: 483, type: !2735, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2737)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!620, !625, !2677, !2671}
!2737 = !{!2738, !2739, !2740}
!2738 = !DILocalVariable(name: "__path", arg: 1, scope: !2734, file: !2663, line: 483, type: !625)
!2739 = !DILocalVariable(name: "__mode", arg: 2, scope: !2734, file: !2663, line: 483, type: !2677)
!2740 = !DILocalVariable(name: "__dev", arg: 3, scope: !2734, file: !2663, line: 483, type: !2671)
!2741 = !DILocation(line: 0, scope: !2734)
!2742 = !DILocation(line: 485, column: 10, scope: !2734)
!2743 = !DILocation(line: 485, column: 3, scope: !2734)
!2744 = distinct !DISubprogram(name: "mknodat", scope: !2663, file: !2663, line: 491, type: !2745, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2747)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!620, !620, !625, !2677, !2671}
!2747 = !{!2748, !2749, !2750, !2751}
!2748 = !DILocalVariable(name: "__fd", arg: 1, scope: !2744, file: !2663, line: 491, type: !620)
!2749 = !DILocalVariable(name: "__path", arg: 2, scope: !2744, file: !2663, line: 491, type: !625)
!2750 = !DILocalVariable(name: "__mode", arg: 3, scope: !2744, file: !2663, line: 491, type: !2677)
!2751 = !DILocalVariable(name: "__dev", arg: 4, scope: !2744, file: !2663, line: 491, type: !2671)
!2752 = !DILocation(line: 0, scope: !2744)
!2753 = !DILocation(line: 494, column: 10, scope: !2744)
!2754 = !DILocation(line: 494, column: 3, scope: !2744)
!2755 = distinct !DISubprogram(name: "stat64", scope: !2663, file: !2663, line: 502, type: !2756, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2778)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!620, !625, !2758}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2668, line: 119, size: 1152, elements: !2760)
!2760 = !{!2761, !2762, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2774, !2775, !2776, !2777}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2759, file: !2668, line: 121, baseType: !2671, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2759, file: !2668, line: 123, baseType: !2763, size: 64, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2422, line: 149, baseType: !689)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2759, file: !2668, line: 124, baseType: !2675, size: 64, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2759, file: !2668, line: 125, baseType: !2677, size: 32, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2759, file: !2668, line: 132, baseType: !2679, size: 32, offset: 224)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2759, file: !2668, line: 133, baseType: !2681, size: 32, offset: 256)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2759, file: !2668, line: 135, baseType: !620, size: 32, offset: 288)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2759, file: !2668, line: 136, baseType: !2671, size: 64, offset: 320)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2759, file: !2668, line: 137, baseType: !2421, size: 64, offset: 384)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2759, file: !2668, line: 143, baseType: !2686, size: 64, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2759, file: !2668, line: 144, baseType: !2773, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2422, line: 180, baseType: !691)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2759, file: !2668, line: 152, baseType: !2690, size: 128, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2759, file: !2668, line: 153, baseType: !2690, size: 128, offset: 704)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2759, file: !2668, line: 154, baseType: !2690, size: 128, offset: 832)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2759, file: !2668, line: 164, baseType: !2700, size: 192, offset: 960)
!2778 = !{!2779, !2780}
!2779 = !DILocalVariable(name: "__path", arg: 1, scope: !2755, file: !2663, line: 502, type: !625)
!2780 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2755, file: !2663, line: 502, type: !2758)
!2781 = !DILocation(line: 0, scope: !2755)
!2782 = !DILocation(line: 504, column: 10, scope: !2755)
!2783 = !DILocation(line: 504, column: 3, scope: !2755)
!2784 = distinct !DISubprogram(name: "lstat64", scope: !2663, file: !2663, line: 509, type: !2756, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2785)
!2785 = !{!2786, !2787}
!2786 = !DILocalVariable(name: "__path", arg: 1, scope: !2784, file: !2663, line: 509, type: !625)
!2787 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2784, file: !2663, line: 509, type: !2758)
!2788 = !DILocation(line: 0, scope: !2784)
!2789 = !DILocation(line: 511, column: 10, scope: !2784)
!2790 = !DILocation(line: 511, column: 3, scope: !2784)
!2791 = distinct !DISubprogram(name: "fstat64", scope: !2663, file: !2663, line: 516, type: !2792, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2794)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{!620, !620, !2758}
!2794 = !{!2795, !2796}
!2795 = !DILocalVariable(name: "__fd", arg: 1, scope: !2791, file: !2663, line: 516, type: !620)
!2796 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2791, file: !2663, line: 516, type: !2758)
!2797 = !DILocation(line: 0, scope: !2791)
!2798 = !DILocation(line: 518, column: 10, scope: !2791)
!2799 = !DILocation(line: 518, column: 3, scope: !2791)
!2800 = distinct !DISubprogram(name: "fstatat64", scope: !2663, file: !2663, line: 523, type: !2801, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2803)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!620, !620, !625, !2758, !620}
!2803 = !{!2804, !2805, !2806, !2807}
!2804 = !DILocalVariable(name: "__fd", arg: 1, scope: !2800, file: !2663, line: 523, type: !620)
!2805 = !DILocalVariable(name: "__filename", arg: 2, scope: !2800, file: !2663, line: 523, type: !625)
!2806 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2800, file: !2663, line: 523, type: !2758)
!2807 = !DILocalVariable(name: "__flag", arg: 4, scope: !2800, file: !2663, line: 523, type: !620)
!2808 = !DILocation(line: 0, scope: !2800)
!2809 = !DILocation(line: 526, column: 10, scope: !2800)
!2810 = !DILocation(line: 526, column: 3, scope: !2800)
!2811 = distinct !DISubprogram(name: "add_stmt", scope: !3, file: !3, line: 548, type: !2812, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2814)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!672, !672}
!2814 = !{!2815, !2816}
!2815 = !DILocalVariable(name: "t", arg: 1, scope: !2811, file: !3, line: 548, type: !672)
!2816 = !DILocalVariable(name: "code", scope: !2811, file: !3, line: 550, type: !134)
!2817 = !DILocation(line: 0, scope: !2811)
!2818 = !DILocation(line: 550, column: 25, scope: !2811)
!2819 = !DILocation(line: 552, column: 7, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 552, column: 7)
!2821 = !DILocation(line: 552, column: 39, scope: !2820)
!2822 = !DILocation(line: 552, column: 31, scope: !2820)
!2823 = !DILocation(line: 554, column: 12, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 554, column: 11)
!2825 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 553, column: 5)
!2826 = !DILocation(line: 554, column: 11, scope: !2825)
!2827 = !DILocation(line: 555, column: 2, scope: !2824)
!2828 = !DILocation(line: 558, column: 26, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 558, column: 7)
!2830 = !DILocation(line: 559, column: 5, scope: !2829)
!2831 = !DILocation(line: 559, column: 46, scope: !2829)
!2832 = !DILocation(line: 563, column: 39, scope: !2811)
!2833 = !DILocation(line: 563, column: 3, scope: !2811)
!2834 = !DILocation(line: 565, column: 3, scope: !2811)
!2835 = distinct !DISubprogram(name: "current_stmt_tree", scope: !3, file: !3, line: 8275, type: !2836, scopeLine: 8276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!2838}
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "stmt_tree", file: !398, line: 431, baseType: !2839)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!2840 = !DILocation(line: 8277, column: 3, scope: !2835)
!2841 = distinct !DISubprogram(name: "c_print_identifier", scope: !3, file: !3, line: 570, type: !2842, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2844)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{null, !2395, !672, !620}
!2844 = !{!2845, !2846, !2847, !2848}
!2845 = !DILocalVariable(name: "file", arg: 1, scope: !2841, file: !3, line: 570, type: !2395)
!2846 = !DILocalVariable(name: "node", arg: 2, scope: !2841, file: !3, line: 570, type: !672)
!2847 = !DILocalVariable(name: "indent", arg: 3, scope: !2841, file: !3, line: 570, type: !620)
!2848 = !DILocalVariable(name: "rid", scope: !2849, file: !3, line: 577, type: !672)
!2849 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 576, column: 5)
!2850 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 575, column: 7)
!2851 = !DILocation(line: 0, scope: !2841)
!2852 = !DILocation(line: 572, column: 31, scope: !2841)
!2853 = !DILocation(line: 572, column: 60, scope: !2841)
!2854 = !DILocation(line: 572, column: 3, scope: !2841)
!2855 = !DILocation(line: 573, column: 28, scope: !2841)
!2856 = !DILocation(line: 573, column: 3, scope: !2841)
!2857 = !DILocation(line: 574, column: 30, scope: !2841)
!2858 = !DILocation(line: 574, column: 3, scope: !2841)
!2859 = !DILocation(line: 575, column: 7, scope: !2850)
!2860 = !DILocation(line: 575, column: 33, scope: !2850)
!2861 = !DILocation(line: 575, column: 36, scope: !2850)
!2862 = !DILocation(line: 575, column: 54, scope: !2850)
!2863 = !DILocation(line: 575, column: 7, scope: !2841)
!2864 = !DILocation(line: 577, column: 18, scope: !2849)
!2865 = !DILocation(line: 0, scope: !2849)
!2866 = !DILocation(line: 578, column: 7, scope: !2849)
!2867 = !DILocation(line: 580, column: 23, scope: !2849)
!2868 = !DILocation(line: 579, column: 7, scope: !2849)
!2869 = !DILocation(line: 581, column: 5, scope: !2849)
!2870 = !DILocation(line: 582, column: 1, scope: !2841)
!2871 = distinct !DISubprogram(name: "c_finish_incomplete_decl", scope: !3, file: !3, line: 685, type: !2872, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2874)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{null, !672}
!2874 = !{!2875, !2876}
!2875 = !DILocalVariable(name: "decl", arg: 1, scope: !2871, file: !3, line: 685, type: !672)
!2876 = !DILocalVariable(name: "type", scope: !2877, file: !3, line: 689, type: !672)
!2877 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 688, column: 5)
!2878 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 687, column: 7)
!2879 = !DILocation(line: 0, scope: !2871)
!2880 = !DILocation(line: 687, column: 7, scope: !2878)
!2881 = !DILocation(line: 687, column: 24, scope: !2878)
!2882 = !DILocation(line: 687, column: 7, scope: !2871)
!2883 = !DILocation(line: 689, column: 19, scope: !2877)
!2884 = !DILocation(line: 0, scope: !2877)
!2885 = !DILocation(line: 690, column: 19, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 690, column: 11)
!2887 = !DILocation(line: 690, column: 16, scope: !2886)
!2888 = !DILocation(line: 691, column: 4, scope: !2886)
!2889 = !DILocation(line: 691, column: 7, scope: !2886)
!2890 = !DILocation(line: 691, column: 24, scope: !2886)
!2891 = !DILocation(line: 692, column: 4, scope: !2886)
!2892 = !DILocation(line: 692, column: 8, scope: !2886)
!2893 = !DILocation(line: 693, column: 4, scope: !2886)
!2894 = !DILocation(line: 693, column: 7, scope: !2886)
!2895 = !DILocation(line: 693, column: 26, scope: !2886)
!2896 = !DILocation(line: 690, column: 11, scope: !2877)
!2897 = !DILocation(line: 695, column: 16, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 694, column: 2)
!2899 = !DILocation(line: 695, column: 4, scope: !2898)
!2900 = !DILocation(line: 698, column: 4, scope: !2898)
!2901 = !DILocation(line: 700, column: 4, scope: !2898)
!2902 = !DILocation(line: 701, column: 2, scope: !2898)
!2903 = !DILocation(line: 703, column: 1, scope: !2871)
!2904 = distinct !DISubprogram(name: "record_inline_static", scope: !3, file: !3, line: 710, type: !2905, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2907)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{null, !760, !672, !672, !563}
!2907 = !{!2908, !2909, !2910, !2911, !2912}
!2908 = !DILocalVariable(name: "loc", arg: 1, scope: !2904, file: !3, line: 710, type: !760)
!2909 = !DILocalVariable(name: "func", arg: 2, scope: !2904, file: !3, line: 710, type: !672)
!2910 = !DILocalVariable(name: "decl", arg: 3, scope: !2904, file: !3, line: 710, type: !672)
!2911 = !DILocalVariable(name: "type", arg: 4, scope: !2904, file: !3, line: 711, type: !563)
!2912 = !DILocalVariable(name: "csi", scope: !2904, file: !3, line: 713, type: !2129)
!2913 = !DILocation(line: 0, scope: !2904)
!2914 = !DILocation(line: 713, column: 33, scope: !2904)
!2915 = !DILocation(line: 714, column: 8, scope: !2904)
!2916 = !DILocation(line: 714, column: 17, scope: !2904)
!2917 = !DILocation(line: 715, column: 8, scope: !2904)
!2918 = !DILocation(line: 715, column: 17, scope: !2904)
!2919 = !DILocation(line: 716, column: 8, scope: !2904)
!2920 = !DILocation(line: 716, column: 20, scope: !2904)
!2921 = !DILocation(line: 717, column: 8, scope: !2904)
!2922 = !DILocation(line: 717, column: 13, scope: !2904)
!2923 = !DILocation(line: 718, column: 15, scope: !2904)
!2924 = !DILocation(line: 718, column: 8, scope: !2904)
!2925 = !DILocation(line: 718, column: 13, scope: !2904)
!2926 = !DILocation(line: 719, column: 20, scope: !2904)
!2927 = !DILocation(line: 720, column: 1, scope: !2904)
!2928 = distinct !DISubprogram(name: "objc_get_current_scope", scope: !3, file: !3, line: 822, type: !2929, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!624}
!2931 = !DILocation(line: 824, column: 10, scope: !2928)
!2932 = !DILocation(line: 824, column: 3, scope: !2928)
!2933 = distinct !DISubprogram(name: "objc_mark_locals_volatile", scope: !3, file: !3, line: 831, type: !1478, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2934)
!2934 = !{!2935, !2936, !2937}
!2935 = !DILocalVariable(name: "enclosing_blk", arg: 1, scope: !2933, file: !3, line: 831, type: !624)
!2936 = !DILocalVariable(name: "scope", scope: !2933, file: !3, line: 833, type: !2077)
!2937 = !DILocalVariable(name: "b", scope: !2933, file: !3, line: 834, type: !2061)
!2938 = !DILocation(line: 0, scope: !2933)
!2939 = !DILocation(line: 0, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 836, column: 3)
!2941 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 836, column: 3)
!2942 = !DILocation(line: 836, column: 8, scope: !2941)
!2943 = !DILocation(line: 0, scope: !2941)
!2944 = !DILocation(line: 837, column: 8, scope: !2940)
!2945 = !DILocation(line: 837, column: 14, scope: !2940)
!2946 = !DILocation(line: 836, column: 3, scope: !2941)
!2947 = !DILocation(line: 840, column: 23, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 840, column: 7)
!2949 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 839, column: 5)
!2950 = !DILocation(line: 840, column: 12, scope: !2948)
!2951 = !DILocation(line: 0, scope: !2948)
!2952 = !DILocation(line: 840, column: 7, scope: !2948)
!2953 = !DILocation(line: 841, column: 27, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 840, column: 7)
!2955 = !DILocation(line: 841, column: 2, scope: !2954)
!2956 = !DILocation(line: 840, column: 43, scope: !2954)
!2957 = !DILocation(line: 840, column: 7, scope: !2954)
!2958 = distinct !{!2958, !2952, !2959}
!2959 = !DILocation(line: 841, column: 31, scope: !2948)
!2960 = !DILocation(line: 844, column: 18, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 844, column: 11)
!2962 = !DILocation(line: 844, column: 11, scope: !2961)
!2963 = !DILocation(line: 844, column: 11, scope: !2949)
!2964 = !DILocation(line: 838, column: 23, scope: !2940)
!2965 = !DILocation(line: 836, column: 3, scope: !2940)
!2966 = distinct !{!2966, !2946, !2967}
!2967 = !DILocation(line: 846, column: 5, scope: !2941)
!2968 = !DILocation(line: 847, column: 1, scope: !2933)
!2969 = distinct !DISubprogram(name: "global_bindings_p", scope: !3, file: !3, line: 852, type: !2386, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2970 = !DILocation(line: 854, column: 11, scope: !2969)
!2971 = !DILocation(line: 854, column: 28, scope: !2969)
!2972 = !DILocation(line: 854, column: 25, scope: !2969)
!2973 = !DILocation(line: 854, column: 39, scope: !2969)
!2974 = !DILocation(line: 854, column: 43, scope: !2969)
!2975 = !DILocation(line: 854, column: 42, scope: !2969)
!2976 = !DILocation(line: 854, column: 3, scope: !2969)
!2977 = distinct !DISubprogram(name: "keep_next_level", scope: !3, file: !3, line: 860, type: !2978, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{null}
!2980 = !DILocation(line: 862, column: 24, scope: !2977)
!2981 = !DILocation(line: 863, column: 1, scope: !2977)
!2982 = distinct !DISubprogram(name: "set_float_const_decimal64", scope: !3, file: !3, line: 868, type: !2978, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2983 = !DILocation(line: 870, column: 3, scope: !2982)
!2984 = !DILocation(line: 870, column: 18, scope: !2982)
!2985 = !DILocation(line: 870, column: 40, scope: !2982)
!2986 = !DILocation(line: 871, column: 1, scope: !2982)
!2987 = distinct !DISubprogram(name: "clear_float_const_decimal64", scope: !3, file: !3, line: 876, type: !2978, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2988 = !DILocation(line: 878, column: 3, scope: !2987)
!2989 = !DILocation(line: 878, column: 18, scope: !2987)
!2990 = !DILocation(line: 878, column: 40, scope: !2987)
!2991 = !DILocation(line: 879, column: 1, scope: !2987)
!2992 = distinct !DISubprogram(name: "float_const_decimal64_p", scope: !3, file: !3, line: 884, type: !2993, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!619}
!2995 = !DILocation(line: 886, column: 10, scope: !2992)
!2996 = !DILocation(line: 886, column: 25, scope: !2992)
!2997 = !DILocation(line: 886, column: 3, scope: !2992)
!2998 = distinct !DISubprogram(name: "declare_parm_level", scope: !3, file: !3, line: 892, type: !2978, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!2999 = !DILocation(line: 894, column: 3, scope: !2998)
!3000 = !DILocation(line: 894, column: 18, scope: !2998)
!3001 = !DILocation(line: 894, column: 28, scope: !2998)
!3002 = !DILocation(line: 895, column: 1, scope: !2998)
!3003 = distinct !DISubprogram(name: "push_scope", scope: !3, file: !3, line: 898, type: !2978, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3004)
!3004 = !{!3005}
!3005 = !DILocalVariable(name: "scope", scope: !3006, file: !3, line: 930, type: !2077)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 929, column: 5)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 900, column: 7)
!3008 = !DILocation(line: 900, column: 7, scope: !3007)
!3009 = !DILocation(line: 900, column: 7, scope: !3003)
!3010 = !DILocation(line: 912, column: 7, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 901, column: 5)
!3012 = !DILocation(line: 912, column: 22, scope: !3011)
!3013 = !DILocation(line: 912, column: 40, scope: !3011)
!3014 = !DILocation(line: 913, column: 40, scope: !3011)
!3015 = !DILocation(line: 914, column: 40, scope: !3011)
!3016 = !DILocation(line: 915, column: 42, scope: !3011)
!3017 = !DILocation(line: 915, column: 22, scope: !3011)
!3018 = !DILocation(line: 915, column: 40, scope: !3011)
!3019 = !DILocation(line: 916, column: 42, scope: !3011)
!3020 = !DILocation(line: 916, column: 40, scope: !3011)
!3021 = !DILocation(line: 918, column: 28, scope: !3011)
!3022 = !DILocation(line: 919, column: 29, scope: !3011)
!3023 = !DILocation(line: 922, column: 26, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 922, column: 11)
!3025 = !DILocation(line: 922, column: 11, scope: !3024)
!3026 = !DILocation(line: 922, column: 11, scope: !3011)
!3027 = !DILocation(line: 924, column: 28, scope: !3024)
!3028 = !DILocation(line: 924, column: 4, scope: !3024)
!3029 = !DILocation(line: 923, column: 2, scope: !3024)
!3030 = !DILocation(line: 926, column: 39, scope: !3024)
!3031 = !DILocation(line: 931, column: 11, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 931, column: 11)
!3033 = !DILocation(line: 931, column: 11, scope: !3006)
!3034 = !DILocation(line: 0, scope: !3006)
!3035 = !DILocation(line: 934, column: 28, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 932, column: 2)
!3037 = !DILocation(line: 934, column: 19, scope: !3036)
!3038 = !DILocation(line: 935, column: 2, scope: !3036)
!3039 = !DILocation(line: 937, column: 10, scope: !3032)
!3040 = !DILocation(line: 0, scope: !3032)
!3041 = !DILocation(line: 940, column: 11, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 940, column: 11)
!3043 = !DILocation(line: 940, column: 11, scope: !3006)
!3044 = !DILocation(line: 941, column: 48, scope: !3042)
!3045 = !DILocation(line: 941, column: 9, scope: !3042)
!3046 = !DILocation(line: 941, column: 31, scope: !3042)
!3047 = !DILocation(line: 941, column: 2, scope: !3042)
!3048 = !DILocation(line: 943, column: 9, scope: !3042)
!3049 = !DILocation(line: 943, column: 31, scope: !3042)
!3050 = !DILocation(line: 945, column: 14, scope: !3006)
!3051 = !DILocation(line: 945, column: 28, scope: !3006)
!3052 = !DILocation(line: 945, column: 30, scope: !3006)
!3053 = !DILocation(line: 946, column: 28, scope: !3006)
!3054 = !DILocation(line: 947, column: 25, scope: !3006)
!3055 = !DILocation(line: 947, column: 57, scope: !3006)
!3056 = !DILocation(line: 947, column: 63, scope: !3006)
!3057 = !DILocation(line: 947, column: 23, scope: !3006)
!3058 = !DILocation(line: 951, column: 25, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 951, column: 11)
!3060 = !DILocation(line: 951, column: 41, scope: !3059)
!3061 = !DILocation(line: 951, column: 11, scope: !3006)
!3062 = !DILocation(line: 953, column: 16, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 952, column: 2)
!3064 = !DILocation(line: 954, column: 56, scope: !3063)
!3065 = !DILocation(line: 954, column: 4, scope: !3063)
!3066 = !DILocation(line: 955, column: 2, scope: !3063)
!3067 = !DILocation(line: 957, column: 28, scope: !3006)
!3068 = !DILocation(line: 958, column: 28, scope: !3006)
!3069 = !DILocation(line: 960, column: 1, scope: !3003)
!3070 = distinct !DISubprogram(name: "pop_scope", scope: !3, file: !3, line: 1039, type: !3071, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!672}
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3085, !3093, !3099, !3100, !3103, !3104}
!3074 = !DILocalVariable(name: "scope", scope: !3070, file: !3, line: 1041, type: !2077)
!3075 = !DILocalVariable(name: "block", scope: !3070, file: !3, line: 1042, type: !672)
!3076 = !DILocalVariable(name: "context", scope: !3070, file: !3, line: 1042, type: !672)
!3077 = !DILocalVariable(name: "p", scope: !3070, file: !3, line: 1042, type: !672)
!3078 = !DILocalVariable(name: "b", scope: !3070, file: !3, line: 1043, type: !2061)
!3079 = !DILocalVariable(name: "functionbody", scope: !3070, file: !3, line: 1045, type: !619)
!3080 = !DILocalVariable(name: "keep", scope: !3070, file: !3, line: 1046, type: !619)
!3081 = !DILocalVariable(name: "file_decl", scope: !3082, file: !3, line: 1083, type: !672)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 1082, column: 5)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 1081, column: 12)
!3084 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1079, column: 7)
!3085 = !DILocalVariable(name: "extp", scope: !3086, file: !3, line: 1197, type: !672)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1194, column: 6)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 1193, column: 13)
!3088 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1188, column: 8)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 1097, column: 2)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1094, column: 5)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 1093, column: 3)
!3092 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1093, column: 3)
!3093 = !DILocalVariable(name: "s_", scope: !3094, file: !3, line: 1262, type: !2077)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 1262, column: 2)
!3095 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 1261, column: 11)
!3096 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 1260, column: 5)
!3097 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 1259, column: 12)
!3098 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1254, column: 7)
!3099 = !DILocalVariable(name: "d_", scope: !3094, file: !3, line: 1262, type: !672)
!3100 = !DILocalVariable(name: "t_", scope: !3101, file: !3, line: 1267, type: !2077)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 1267, column: 2)
!3102 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 1266, column: 16)
!3103 = !DILocalVariable(name: "f_", scope: !3101, file: !3, line: 1267, type: !2077)
!3104 = !DILabel(scope: !3089, name: "common_symbol", file: !3, line: 1185)
!3105 = !DILocation(line: 1041, column: 27, scope: !3070)
!3106 = !DILocation(line: 0, scope: !3070)
!3107 = !DILocation(line: 1045, column: 30, scope: !3070)
!3108 = !DILocation(line: 1046, column: 15, scope: !3070)
!3109 = !DILocation(line: 1046, column: 28, scope: !3070)
!3110 = !DILocation(line: 1046, column: 31, scope: !3070)
!3111 = !DILocation(line: 1046, column: 43, scope: !3070)
!3112 = !DILocation(line: 1046, column: 53, scope: !3070)
!3113 = !DILocation(line: 1048, column: 3, scope: !3070)
!3114 = !DILocation(line: 1053, column: 7, scope: !3070)
!3115 = !DILocation(line: 1055, column: 15, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !3, line: 1054, column: 5)
!3117 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1053, column: 7)
!3118 = !DILocation(line: 1056, column: 40, scope: !3116)
!3119 = !DILocation(line: 1056, column: 7, scope: !3116)
!3120 = !DILocation(line: 1056, column: 31, scope: !3116)
!3121 = !DILocation(line: 1057, column: 7, scope: !3116)
!3122 = !DILocation(line: 1057, column: 25, scope: !3116)
!3123 = !DILocation(line: 1060, column: 12, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 1060, column: 7)
!3125 = !DILocation(line: 0, scope: !3124)
!3126 = !DILocation(line: 1060, column: 7, scope: !3124)
!3127 = !DILocation(line: 1061, column: 2, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 1060, column: 7)
!3129 = !DILocation(line: 1061, column: 25, scope: !3128)
!3130 = !DILocation(line: 1060, column: 38, scope: !3128)
!3131 = !DILocation(line: 1060, column: 7, scope: !3128)
!3132 = distinct !{!3132, !3126, !3133}
!3133 = !DILocation(line: 1061, column: 27, scope: !3124)
!3134 = !DILocation(line: 1063, column: 7, scope: !3116)
!3135 = !DILocation(line: 1063, column: 26, scope: !3116)
!3136 = !DILocation(line: 1064, column: 5, scope: !3116)
!3137 = !DILocation(line: 1079, column: 14, scope: !3084)
!3138 = !DILocation(line: 1079, column: 7, scope: !3084)
!3139 = !DILocation(line: 1079, column: 7, scope: !3070)
!3140 = !DILocation(line: 1080, column: 15, scope: !3084)
!3141 = !DILocation(line: 1080, column: 5, scope: !3084)
!3142 = !DILocation(line: 1081, column: 21, scope: !3083)
!3143 = !DILocation(line: 1081, column: 18, scope: !3083)
!3144 = !DILocation(line: 1081, column: 12, scope: !3084)
!3145 = !DILocation(line: 1083, column: 24, scope: !3082)
!3146 = !DILocation(line: 0, scope: !3082)
!3147 = !DILocation(line: 1085, column: 32, scope: !3082)
!3148 = !DILocation(line: 1085, column: 7, scope: !3082)
!3149 = !DILocation(line: 1085, column: 30, scope: !3082)
!3150 = !DILocation(line: 1086, column: 29, scope: !3082)
!3151 = !DILocation(line: 1088, column: 5, scope: !3082)
!3152 = !DILocation(line: 0, scope: !3084)
!3153 = !DILocation(line: 1093, column: 19, scope: !3092)
!3154 = !DILocation(line: 0, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1167, column: 8)
!3156 = !DILocation(line: 0, scope: !3086)
!3157 = !DILocation(line: 1093, column: 8, scope: !3092)
!3158 = !DILocation(line: 0, scope: !3092)
!3159 = !DILocation(line: 1093, column: 3, scope: !3092)
!3160 = !DILocation(line: 1095, column: 14, scope: !3090)
!3161 = !DILocation(line: 1096, column: 15, scope: !3090)
!3162 = !DILocation(line: 1096, column: 7, scope: !3090)
!3163 = !DILocation(line: 1100, column: 8, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1100, column: 8)
!3165 = !DILocation(line: 1100, column: 22, scope: !3164)
!3166 = !DILocation(line: 1100, column: 26, scope: !3164)
!3167 = !DILocation(line: 1100, column: 8, scope: !3089)
!3168 = !DILocation(line: 1102, column: 8, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1101, column: 6)
!3170 = !DILocation(line: 1103, column: 27, scope: !3169)
!3171 = !DILocation(line: 1103, column: 25, scope: !3169)
!3172 = !DILocation(line: 1104, column: 6, scope: !3169)
!3173 = !DILocation(line: 1106, column: 6, scope: !3164)
!3174 = !DILocation(line: 1109, column: 21, scope: !3089)
!3175 = !DILocation(line: 1109, column: 4, scope: !3089)
!3176 = !DILocation(line: 1109, column: 19, scope: !3089)
!3177 = !DILocation(line: 1110, column: 23, scope: !3089)
!3178 = !DILocation(line: 1111, column: 4, scope: !3089)
!3179 = !DILocation(line: 1112, column: 4, scope: !3089)
!3180 = !DILocation(line: 1112, column: 33, scope: !3089)
!3181 = !DILocation(line: 1112, column: 28, scope: !3089)
!3182 = !DILocation(line: 1115, column: 30, scope: !3089)
!3183 = !DILocation(line: 1115, column: 37, scope: !3089)
!3184 = !DILocation(line: 1115, column: 4, scope: !3089)
!3185 = !DILocation(line: 1116, column: 22, scope: !3089)
!3186 = !DILocation(line: 1116, column: 29, scope: !3089)
!3187 = !DILocation(line: 1116, column: 15, scope: !3089)
!3188 = !DILocation(line: 1117, column: 4, scope: !3089)
!3189 = !DILocation(line: 1122, column: 4, scope: !3089)
!3190 = !DILocation(line: 1126, column: 11, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1126, column: 8)
!3192 = !DILocation(line: 1126, column: 8, scope: !3191)
!3193 = !DILocation(line: 1126, column: 8, scope: !3089)
!3194 = !DILocation(line: 1128, column: 8, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 1127, column: 6)
!3196 = !DILocation(line: 1129, column: 8, scope: !3195)
!3197 = !DILocation(line: 1129, column: 35, scope: !3195)
!3198 = !DILocation(line: 1129, column: 30, scope: !3195)
!3199 = !DILocation(line: 1130, column: 6, scope: !3195)
!3200 = !DILocation(line: 1136, column: 9, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1136, column: 8)
!3202 = !DILocation(line: 1137, column: 8, scope: !3201)
!3203 = !DILocation(line: 1137, column: 11, scope: !3201)
!3204 = !DILocation(line: 1137, column: 28, scope: !3201)
!3205 = !DILocation(line: 1138, column: 8, scope: !3201)
!3206 = !DILocation(line: 1138, column: 11, scope: !3201)
!3207 = !DILocation(line: 1139, column: 8, scope: !3201)
!3208 = !DILocation(line: 1139, column: 11, scope: !3201)
!3209 = !DILocation(line: 1139, column: 36, scope: !3201)
!3210 = !DILocation(line: 1140, column: 8, scope: !3201)
!3211 = !DILocation(line: 1140, column: 36, scope: !3201)
!3212 = !DILocation(line: 1136, column: 8, scope: !3089)
!3213 = !DILocation(line: 1141, column: 50, scope: !3201)
!3214 = !DILocation(line: 1141, column: 6, scope: !3201)
!3215 = !DILocation(line: 1142, column: 9, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1142, column: 8)
!3217 = !DILocation(line: 1143, column: 8, scope: !3216)
!3218 = !DILocation(line: 1143, column: 12, scope: !3216)
!3219 = !DILocation(line: 1144, column: 20, scope: !3216)
!3220 = !DILocation(line: 1144, column: 17, scope: !3216)
!3221 = !DILocation(line: 1144, column: 8, scope: !3216)
!3222 = !DILocation(line: 1145, column: 20, scope: !3216)
!3223 = !DILocation(line: 1145, column: 17, scope: !3216)
!3224 = !DILocation(line: 1147, column: 8, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 1146, column: 6)
!3226 = !DILocation(line: 1148, column: 30, scope: !3225)
!3227 = !DILocation(line: 1149, column: 6, scope: !3225)
!3228 = !DILocation(line: 1150, column: 13, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 1150, column: 13)
!3230 = !DILocation(line: 1151, column: 6, scope: !3229)
!3231 = !DILocation(line: 1151, column: 9, scope: !3229)
!3232 = !DILocation(line: 1152, column: 6, scope: !3229)
!3233 = !DILocation(line: 1152, column: 10, scope: !3229)
!3234 = !DILocation(line: 1150, column: 13, scope: !3216)
!3235 = !DILocation(line: 1157, column: 13, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1157, column: 12)
!3237 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 1153, column: 6)
!3238 = !DILocation(line: 1157, column: 12, scope: !3237)
!3239 = !DILocation(line: 1158, column: 12, scope: !3236)
!3240 = !DILocation(line: 1158, column: 3, scope: !3236)
!3241 = !DILocation(line: 1160, column: 26, scope: !3237)
!3242 = !DILocation(line: 1161, column: 6, scope: !3237)
!3243 = !DILocation(line: 1167, column: 9, scope: !3155)
!3244 = !DILocation(line: 1168, column: 8, scope: !3155)
!3245 = !DILocation(line: 1168, column: 12, scope: !3155)
!3246 = !DILocation(line: 1169, column: 8, scope: !3155)
!3247 = !DILocation(line: 1169, column: 12, scope: !3155)
!3248 = !DILocation(line: 1170, column: 8, scope: !3155)
!3249 = !DILocation(line: 1170, column: 11, scope: !3155)
!3250 = !DILocation(line: 1171, column: 8, scope: !3155)
!3251 = !DILocation(line: 1171, column: 12, scope: !3155)
!3252 = !DILocation(line: 1172, column: 20, scope: !3155)
!3253 = !DILocation(line: 1172, column: 17, scope: !3155)
!3254 = !DILocation(line: 1172, column: 8, scope: !3155)
!3255 = !DILocation(line: 1173, column: 20, scope: !3155)
!3256 = !DILocation(line: 1173, column: 17, scope: !3155)
!3257 = !DILocation(line: 1174, column: 6, scope: !3155)
!3258 = !DILocation(line: 1176, column: 11, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1176, column: 8)
!3260 = !DILocation(line: 1176, column: 8, scope: !3259)
!3261 = !DILocation(line: 1176, column: 8, scope: !3089)
!3262 = !DILocation(line: 1178, column: 8, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 1177, column: 6)
!3264 = !DILocation(line: 1180, column: 6, scope: !3263)
!3265 = !DILocation(line: 1185, column: 2, scope: !3089)
!3266 = !DILocation(line: 1188, column: 12, scope: !3088)
!3267 = !DILocation(line: 1188, column: 9, scope: !3088)
!3268 = !DILocation(line: 1188, column: 8, scope: !3089)
!3269 = !DILocation(line: 1190, column: 25, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 1189, column: 6)
!3271 = !DILocation(line: 1190, column: 8, scope: !3270)
!3272 = !DILocation(line: 1190, column: 23, scope: !3270)
!3273 = !DILocation(line: 1191, column: 27, scope: !3270)
!3274 = !DILocation(line: 1192, column: 6, scope: !3270)
!3275 = !DILocation(line: 1193, column: 13, scope: !3087)
!3276 = !DILocation(line: 1193, column: 13, scope: !3088)
!3277 = !DILocation(line: 1197, column: 20, scope: !3086)
!3278 = !DILocation(line: 1199, column: 8, scope: !3086)
!3279 = !DILocation(line: 1199, column: 29, scope: !3086)
!3280 = !DILocation(line: 1200, column: 8, scope: !3086)
!3281 = !DILocation(line: 1200, column: 27, scope: !3086)
!3282 = !DILocation(line: 1201, column: 27, scope: !3086)
!3283 = !DILocation(line: 1202, column: 8, scope: !3086)
!3284 = !DILocation(line: 1202, column: 28, scope: !3086)
!3285 = !DILocation(line: 1203, column: 8, scope: !3086)
!3286 = !DILocation(line: 1203, column: 34, scope: !3086)
!3287 = !DILocation(line: 1204, column: 30, scope: !3086)
!3288 = !DILocation(line: 1204, column: 8, scope: !3086)
!3289 = !DILocation(line: 1204, column: 28, scope: !3086)
!3290 = !DILocation(line: 1205, column: 12, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1205, column: 12)
!3292 = !DILocation(line: 1205, column: 26, scope: !3291)
!3293 = !DILocation(line: 1205, column: 12, scope: !3086)
!3294 = !DILocation(line: 1207, column: 5, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 1206, column: 3)
!3296 = !DILocation(line: 1207, column: 24, scope: !3295)
!3297 = !DILocation(line: 1208, column: 5, scope: !3295)
!3298 = !DILocation(line: 1208, column: 28, scope: !3295)
!3299 = !DILocation(line: 1209, column: 5, scope: !3295)
!3300 = !DILocation(line: 1209, column: 33, scope: !3295)
!3301 = !DILocation(line: 1210, column: 3, scope: !3295)
!3302 = !DILocation(line: 1211, column: 15, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1211, column: 12)
!3304 = !DILocation(line: 1211, column: 21, scope: !3303)
!3305 = !DILocation(line: 1211, column: 12, scope: !3086)
!3306 = !DILocation(line: 1212, column: 3, scope: !3303)
!3307 = !DILocation(line: 1212, column: 31, scope: !3303)
!3308 = !DILocation(line: 1213, column: 28, scope: !3086)
!3309 = !DILocation(line: 1213, column: 8, scope: !3086)
!3310 = !DILocation(line: 1213, column: 26, scope: !3086)
!3311 = !DILocation(line: 1214, column: 27, scope: !3086)
!3312 = !DILocation(line: 1215, column: 6, scope: !3086)
!3313 = !DILocation(line: 1221, column: 17, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1221, column: 8)
!3315 = !DILocation(line: 1221, column: 14, scope: !3314)
!3316 = !DILocation(line: 1221, column: 31, scope: !3314)
!3317 = !DILocation(line: 1221, column: 45, scope: !3314)
!3318 = !DILocation(line: 1221, column: 28, scope: !3314)
!3319 = !DILocation(line: 1223, column: 8, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 1222, column: 6)
!3321 = !DILocation(line: 1223, column: 25, scope: !3320)
!3322 = !DILocation(line: 1224, column: 12, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 1224, column: 12)
!3324 = !DILocation(line: 1224, column: 26, scope: !3323)
!3325 = !DILocation(line: 1224, column: 12, scope: !3320)
!3326 = !DILocation(line: 1225, column: 21, scope: !3323)
!3327 = !DILocation(line: 1225, column: 3, scope: !3323)
!3328 = !DILocation(line: 1238, column: 11, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1238, column: 8)
!3330 = !DILocation(line: 1238, column: 8, scope: !3329)
!3331 = !DILocation(line: 1238, column: 8, scope: !3089)
!3332 = !DILocation(line: 1240, column: 8, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1239, column: 6)
!3334 = !DILocation(line: 1241, column: 8, scope: !3333)
!3335 = !DILocation(line: 1241, column: 38, scope: !3333)
!3336 = !DILocation(line: 1241, column: 33, scope: !3333)
!3337 = !DILocation(line: 1242, column: 15, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 1242, column: 12)
!3339 = !DILocation(line: 1242, column: 12, scope: !3338)
!3340 = !DILocation(line: 1242, column: 24, scope: !3338)
!3341 = !DILocation(line: 1242, column: 42, scope: !3338)
!3342 = !DILocation(line: 1242, column: 27, scope: !3338)
!3343 = !DILocation(line: 1242, column: 12, scope: !3333)
!3344 = !DILocation(line: 1243, column: 3, scope: !3338)
!3345 = !DILocation(line: 1243, column: 33, scope: !3338)
!3346 = !DILocation(line: 1248, column: 4, scope: !3089)
!3347 = !DILocation(line: 1249, column: 2, scope: !3089)
!3348 = !DILocation(line: 1093, column: 36, scope: !3091)
!3349 = !DILocation(line: 1093, column: 3, scope: !3091)
!3350 = distinct !{!3350, !3159, !3351}
!3351 = !DILocation(line: 1250, column: 5, scope: !3092)
!3352 = !DILocation(line: 1254, column: 15, scope: !3098)
!3353 = !DILocation(line: 1254, column: 8, scope: !3098)
!3354 = !DILocation(line: 1254, column: 41, scope: !3098)
!3355 = !DILocation(line: 1254, column: 38, scope: !3098)
!3356 = !DILocation(line: 1254, column: 29, scope: !3098)
!3357 = !DILocation(line: 1254, column: 56, scope: !3098)
!3358 = !DILocation(line: 1256, column: 7, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 1255, column: 5)
!3360 = !DILocation(line: 1256, column: 30, scope: !3359)
!3361 = !DILocation(line: 1257, column: 7, scope: !3359)
!3362 = !DILocation(line: 1257, column: 34, scope: !3359)
!3363 = !DILocation(line: 1258, column: 5, scope: !3359)
!3364 = !DILocation(line: 1259, column: 19, scope: !3097)
!3365 = !DILocation(line: 1259, column: 12, scope: !3097)
!3366 = !DILocation(line: 1259, column: 12, scope: !3098)
!3367 = !DILocation(line: 1261, column: 11, scope: !3095)
!3368 = !DILocation(line: 1261, column: 11, scope: !3096)
!3369 = !DILocation(line: 0, scope: !3094)
!3370 = !DILocation(line: 1262, column: 2, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 1262, column: 2)
!3372 = !DILocation(line: 1262, column: 2, scope: !3094)
!3373 = !DILocation(line: 1266, column: 23, scope: !3102)
!3374 = !DILocation(line: 1266, column: 16, scope: !3102)
!3375 = !DILocation(line: 1266, column: 16, scope: !3095)
!3376 = !DILocation(line: 0, scope: !3101)
!3377 = !DILocation(line: 1267, column: 2, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 1267, column: 2)
!3379 = !DILocation(line: 1267, column: 2, scope: !3101)
!3380 = !DILocation(line: 1271, column: 26, scope: !3070)
!3381 = !DILocation(line: 1271, column: 17, scope: !3070)
!3382 = !DILocation(line: 1272, column: 14, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1272, column: 7)
!3384 = !DILocation(line: 1272, column: 7, scope: !3383)
!3385 = !DILocation(line: 1272, column: 7, scope: !3070)
!3386 = !DILocation(line: 1273, column: 37, scope: !3383)
!3387 = !DILocation(line: 1273, column: 28, scope: !3383)
!3388 = !DILocation(line: 1273, column: 5, scope: !3383)
!3389 = !DILocation(line: 1275, column: 11, scope: !3070)
!3390 = !DILocation(line: 1275, column: 3, scope: !3070)
!3391 = !DILocation(line: 1276, column: 18, scope: !3070)
!3392 = !DILocation(line: 1276, column: 16, scope: !3070)
!3393 = !DILocation(line: 1277, column: 18, scope: !3070)
!3394 = !DILocation(line: 1279, column: 3, scope: !3070)
!3395 = distinct !DISubprogram(name: "update_label_decls", scope: !3, file: !3, line: 968, type: !3396, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{null, !2077}
!3398 = !{!3399, !3400, !3401, !3405, !3409, !3410, !3411}
!3399 = !DILocalVariable(name: "scope", arg: 1, scope: !3395, file: !3, line: 968, type: !2077)
!3400 = !DILocalVariable(name: "s", scope: !3395, file: !3, line: 970, type: !2077)
!3401 = !DILocalVariable(name: "b", scope: !3402, file: !3, line: 977, type: !2061)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 976, column: 2)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 975, column: 11)
!3404 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 974, column: 5)
!3405 = !DILocalVariable(name: "label_vars", scope: !3406, file: !3, line: 981, type: !2069)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 980, column: 6)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 979, column: 4)
!3408 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 979, column: 4)
!3409 = !DILocalVariable(name: "b1", scope: !3406, file: !3, line: 982, type: !2061)
!3410 = !DILocalVariable(name: "ix", scope: !3406, file: !3, line: 983, type: !7)
!3411 = !DILocalVariable(name: "g", scope: !3406, file: !3, line: 984, type: !2111)
!3412 = !DILocation(line: 0, scope: !3395)
!3413 = !DILocation(line: 0, scope: !3406)
!3414 = !DILocation(line: 973, column: 3, scope: !3395)
!3415 = !DILocation(line: 973, column: 12, scope: !3395)
!3416 = !DILocation(line: 975, column: 14, scope: !3403)
!3417 = !DILocation(line: 975, column: 11, scope: !3403)
!3418 = !DILocation(line: 975, column: 11, scope: !3404)
!3419 = !DILocation(line: 979, column: 16, scope: !3408)
!3420 = !DILocation(line: 979, column: 9, scope: !3408)
!3421 = !DILocation(line: 0, scope: !3408)
!3422 = !DILocation(line: 0, scope: !3402)
!3423 = !DILocation(line: 979, column: 28, scope: !3407)
!3424 = !DILocation(line: 979, column: 4, scope: !3408)
!3425 = !DILocation(line: 984, column: 8, scope: !3406)
!3426 = !DILocation(line: 986, column: 12, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 986, column: 12)
!3428 = !DILocation(line: 986, column: 32, scope: !3427)
!3429 = !DILocation(line: 986, column: 12, scope: !3406)
!3430 = !DILocation(line: 988, column: 26, scope: !3406)
!3431 = !DILocation(line: 990, column: 40, scope: !3406)
!3432 = !DILocation(line: 991, column: 54, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 991, column: 12)
!3434 = !DILocation(line: 991, column: 12, scope: !3433)
!3435 = !DILocation(line: 991, column: 12, scope: !3406)
!3436 = !DILocation(line: 0, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1000, column: 13)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 995, column: 7)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 994, column: 5)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 994, column: 5)
!3441 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 992, column: 3)
!3442 = !DILocation(line: 994, column: 5, scope: !3440)
!3443 = !DILocation(line: 994, column: 15, scope: !3439)
!3444 = !DILocation(line: 1000, column: 35, scope: !3437)
!3445 = !DILocation(line: 1000, column: 13, scope: !3437)
!3446 = !DILocation(line: 1000, column: 13, scope: !3438)
!3447 = !DILocation(line: 1001, column: 4, scope: !3437)
!3448 = !DILocation(line: 994, column: 34, scope: !3439)
!3449 = !DILocation(line: 994, column: 5, scope: !3439)
!3450 = distinct !{!3450, !3442, !3451}
!3451 = !DILocation(line: 1003, column: 7, scope: !3440)
!3452 = !DILocation(line: 1008, column: 13, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 1008, column: 8)
!3454 = !DILocation(line: 0, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 1008, column: 8)
!3456 = !DILocation(line: 0, scope: !3453)
!3457 = !DILocation(line: 1009, column: 6, scope: !3455)
!3458 = !DILocation(line: 1008, column: 8, scope: !3453)
!3459 = !DILocation(line: 1011, column: 33, scope: !3455)
!3460 = !DILocation(line: 1011, column: 36, scope: !3455)
!3461 = !DILocation(line: 1011, column: 3, scope: !3455)
!3462 = !DILocation(line: 1010, column: 6, scope: !3455)
!3463 = !DILocation(line: 1008, column: 8, scope: !3455)
!3464 = distinct !{!3464, !3458, !3465}
!3465 = !DILocation(line: 1011, column: 49, scope: !3453)
!3466 = !DILocation(line: 1012, column: 6, scope: !3407)
!3467 = !DILocation(line: 979, column: 44, scope: !3407)
!3468 = !DILocation(line: 979, column: 4, scope: !3407)
!3469 = distinct !{!3469, !3424, !3470}
!3470 = !DILocation(line: 1012, column: 6, scope: !3408)
!3471 = !DILocation(line: 1016, column: 16, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1016, column: 11)
!3473 = !DILocation(line: 1016, column: 13, scope: !3472)
!3474 = !DILocation(line: 1016, column: 11, scope: !3404)
!3475 = !DILocation(line: 1019, column: 14, scope: !3404)
!3476 = distinct !{!3476, !3414, !3477}
!3477 = !DILocation(line: 1020, column: 5, scope: !3395)
!3478 = !DILocation(line: 1021, column: 1, scope: !3395)
!3479 = distinct !DISubprogram(name: "set_type_context", scope: !3, file: !3, line: 1026, type: !3480, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3482)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{null, !672, !672}
!3482 = !{!3483, !3484}
!3483 = !DILocalVariable(name: "type", arg: 1, scope: !3479, file: !3, line: 1026, type: !672)
!3484 = !DILocalVariable(name: "context", arg: 2, scope: !3479, file: !3, line: 1026, type: !672)
!3485 = !DILocation(line: 0, scope: !3479)
!3486 = !DILocation(line: 1028, column: 15, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1028, column: 3)
!3488 = !DILocation(line: 1028, column: 8, scope: !3487)
!3489 = !DILocation(line: 0, scope: !3487)
!3490 = !DILocation(line: 1028, column: 3, scope: !3487)
!3491 = !DILocation(line: 1030, column: 5, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 1028, column: 3)
!3493 = !DILocation(line: 1030, column: 25, scope: !3492)
!3494 = !DILocation(line: 1029, column: 15, scope: !3492)
!3495 = !DILocation(line: 1028, column: 3, scope: !3492)
!3496 = distinct !{!3496, !3490, !3497}
!3497 = !DILocation(line: 1030, column: 27, scope: !3487)
!3498 = !DILocation(line: 1031, column: 1, scope: !3479)
!3499 = distinct !DISubprogram(name: "free_binding_and_advance", scope: !3, file: !3, line: 651, type: !3500, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!2061, !2061}
!3502 = !{!3503, !3504}
!3503 = !DILocalVariable(name: "b", arg: 1, scope: !3499, file: !3, line: 651, type: !2061)
!3504 = !DILocalVariable(name: "prev", scope: !3499, file: !3, line: 653, type: !2061)
!3505 = !DILocation(line: 0, scope: !3499)
!3506 = !DILocation(line: 653, column: 31, scope: !3499)
!3507 = !DILocation(line: 655, column: 11, scope: !3499)
!3508 = !DILocation(line: 655, column: 3, scope: !3499)
!3509 = !DILocation(line: 656, column: 13, scope: !3499)
!3510 = !DILocation(line: 656, column: 11, scope: !3499)
!3511 = !DILocation(line: 657, column: 20, scope: !3499)
!3512 = !DILocation(line: 659, column: 3, scope: !3499)
!3513 = distinct !DISubprogram(name: "push_file_scope", scope: !3, file: !3, line: 1283, type: !2978, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3514)
!3514 = !{!3515}
!3515 = !DILocalVariable(name: "decl", scope: !3513, file: !3, line: 1285, type: !672)
!3516 = !DILocation(line: 1287, column: 7, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1287, column: 7)
!3518 = !DILocation(line: 1287, column: 7, scope: !3513)
!3519 = !DILocation(line: 1290, column: 3, scope: !3513)
!3520 = !DILocation(line: 1291, column: 16, scope: !3513)
!3521 = !DILocation(line: 1291, column: 14, scope: !3513)
!3522 = !DILocation(line: 1293, column: 3, scope: !3513)
!3523 = !DILocation(line: 1295, column: 8, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1295, column: 3)
!3525 = !DILocation(line: 0, scope: !3524)
!3526 = !DILocation(line: 0, scope: !3513)
!3527 = !DILocation(line: 1295, column: 3, scope: !3524)
!3528 = !DILocation(line: 1296, column: 11, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1295, column: 3)
!3530 = !DILocation(line: 1296, column: 35, scope: !3529)
!3531 = !DILocation(line: 1297, column: 42, scope: !3529)
!3532 = !DILocation(line: 1296, column: 5, scope: !3529)
!3533 = !DILocation(line: 1295, column: 46, scope: !3529)
!3534 = !DILocation(line: 1295, column: 3, scope: !3529)
!3535 = distinct !{!3535, !3527, !3536}
!3536 = !DILocation(line: 1297, column: 69, scope: !3524)
!3537 = !DILocation(line: 1298, column: 1, scope: !3513)
!3538 = distinct !DISubprogram(name: "bind", scope: !3, file: !3, line: 588, type: !3539, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3541)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{null, !672, !672, !2077, !619, !619, !760}
!3541 = !{!3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549}
!3542 = !DILocalVariable(name: "name", arg: 1, scope: !3538, file: !3, line: 588, type: !672)
!3543 = !DILocalVariable(name: "decl", arg: 2, scope: !3538, file: !3, line: 588, type: !672)
!3544 = !DILocalVariable(name: "scope", arg: 3, scope: !3538, file: !3, line: 588, type: !2077)
!3545 = !DILocalVariable(name: "invisible", arg: 4, scope: !3538, file: !3, line: 588, type: !619)
!3546 = !DILocalVariable(name: "nested", arg: 5, scope: !3538, file: !3, line: 589, type: !619)
!3547 = !DILocalVariable(name: "locus", arg: 6, scope: !3538, file: !3, line: 589, type: !760)
!3548 = !DILocalVariable(name: "b", scope: !3538, file: !3, line: 591, type: !2061)
!3549 = !DILocalVariable(name: "here", scope: !3538, file: !3, line: 591, type: !3550)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!3551 = !DILocation(line: 0, scope: !3538)
!3552 = !DILocation(line: 593, column: 7, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 593, column: 7)
!3554 = !DILocation(line: 593, column: 7, scope: !3538)
!3555 = !DILocation(line: 596, column: 29, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 594, column: 5)
!3557 = !DILocation(line: 596, column: 24, scope: !3556)
!3558 = !DILocation(line: 597, column: 5, scope: !3556)
!3559 = !DILocation(line: 599, column: 9, scope: !3553)
!3560 = !DILocation(line: 0, scope: !3553)
!3561 = !DILocation(line: 601, column: 6, scope: !3538)
!3562 = !DILocation(line: 601, column: 15, scope: !3538)
!3563 = !DILocation(line: 602, column: 6, scope: !3538)
!3564 = !DILocation(line: 602, column: 11, scope: !3538)
!3565 = !DILocation(line: 603, column: 6, scope: !3538)
!3566 = !DILocation(line: 603, column: 9, scope: !3538)
!3567 = !DILocation(line: 604, column: 21, scope: !3538)
!3568 = !DILocation(line: 604, column: 6, scope: !3538)
!3569 = !DILocation(line: 605, column: 16, scope: !3538)
!3570 = !DILocation(line: 606, column: 13, scope: !3538)
!3571 = !DILocation(line: 608, column: 16, scope: !3538)
!3572 = !DILocation(line: 609, column: 6, scope: !3538)
!3573 = !DILocation(line: 609, column: 12, scope: !3538)
!3574 = !DILocation(line: 611, column: 8, scope: !3538)
!3575 = !DILocation(line: 611, column: 13, scope: !3538)
!3576 = !DILocation(line: 613, column: 20, scope: !3538)
!3577 = !DILocation(line: 613, column: 6, scope: !3538)
!3578 = !DILocation(line: 613, column: 11, scope: !3538)
!3579 = !DILocation(line: 614, column: 19, scope: !3538)
!3580 = !DILocation(line: 616, column: 8, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 616, column: 7)
!3582 = !DILocation(line: 616, column: 7, scope: !3538)
!3583 = !DILocation(line: 619, column: 11, scope: !3538)
!3584 = !DILocation(line: 619, column: 3, scope: !3538)
!3585 = !DILocation(line: 621, column: 34, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 620, column: 5)
!3587 = !DILocation(line: 621, column: 60, scope: !3586)
!3588 = !DILocation(line: 624, column: 34, scope: !3586)
!3589 = !DILocation(line: 624, column: 60, scope: !3586)
!3590 = !DILocation(line: 630, column: 34, scope: !3586)
!3591 = !DILocation(line: 630, column: 60, scope: !3586)
!3592 = !DILocation(line: 633, column: 7, scope: !3586)
!3593 = !DILocation(line: 634, column: 5, scope: !3586)
!3594 = !DILocation(line: 639, column: 3, scope: !3538)
!3595 = !DILocation(line: 639, column: 10, scope: !3538)
!3596 = !DILocation(line: 639, column: 16, scope: !3538)
!3597 = !DILocation(line: 639, column: 28, scope: !3538)
!3598 = !DILocation(line: 639, column: 43, scope: !3538)
!3599 = !DILocation(line: 639, column: 34, scope: !3538)
!3600 = !DILocation(line: 640, column: 22, scope: !3538)
!3601 = distinct !{!3601, !3594, !3600}
!3602 = !DILocation(line: 642, column: 15, scope: !3538)
!3603 = !DILocation(line: 643, column: 9, scope: !3538)
!3604 = !DILocation(line: 644, column: 1, scope: !3538)
!3605 = distinct !DISubprogram(name: "pop_file_scope", scope: !3, file: !3, line: 1301, type: !2978, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!3606 = !DILocation(line: 1305, column: 3, scope: !3605)
!3607 = !DILocation(line: 1305, column: 10, scope: !3605)
!3608 = !DILocation(line: 1305, column: 27, scope: !3605)
!3609 = !DILocation(line: 1305, column: 24, scope: !3605)
!3610 = !DILocation(line: 1306, column: 5, scope: !3605)
!3611 = distinct !{!3611, !3606, !3612}
!3612 = !DILocation(line: 1306, column: 16, scope: !3605)
!3613 = !DILocation(line: 1311, column: 3, scope: !3605)
!3614 = !DILocation(line: 1313, column: 3, scope: !3605)
!3615 = !DILocation(line: 1317, column: 7, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1317, column: 7)
!3617 = !DILocation(line: 1317, column: 7, scope: !3605)
!3618 = !DILocation(line: 1319, column: 7, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1318, column: 5)
!3620 = !DILocation(line: 1320, column: 7, scope: !3619)
!3621 = !DILocation(line: 1324, column: 3, scope: !3605)
!3622 = !DILocation(line: 1325, column: 14, scope: !3605)
!3623 = !DILocation(line: 1327, column: 3, scope: !3605)
!3624 = !DILocation(line: 1328, column: 1, scope: !3605)
!3625 = distinct !DISubprogram(name: "check_inline_statics", scope: !3, file: !3, line: 727, type: !2978, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3626)
!3626 = !{!3627}
!3627 = !DILocalVariable(name: "csi", scope: !3625, file: !3, line: 729, type: !2129)
!3628 = !DILocation(line: 730, column: 8, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 730, column: 3)
!3630 = !DILocation(line: 0, scope: !3629)
!3631 = !DILocation(line: 0, scope: !3625)
!3632 = !DILocation(line: 730, column: 3, scope: !3629)
!3633 = !DILocation(line: 732, column: 11, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 732, column: 11)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 731, column: 5)
!3636 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 730, column: 3)
!3637 = !DILocation(line: 732, column: 11, scope: !3635)
!3638 = !DILocation(line: 733, column: 15, scope: !3634)
!3639 = !DILocation(line: 733, column: 2, scope: !3634)
!3640 = !DILocation(line: 736, column: 20, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 734, column: 4)
!3642 = !DILocation(line: 738, column: 36, scope: !3641)
!3643 = !DILocation(line: 736, column: 6, scope: !3641)
!3644 = !DILocation(line: 739, column: 6, scope: !3641)
!3645 = !DILocation(line: 741, column: 20, scope: !3641)
!3646 = !DILocation(line: 743, column: 36, scope: !3641)
!3647 = !DILocation(line: 741, column: 6, scope: !3641)
!3648 = !DILocation(line: 744, column: 6, scope: !3641)
!3649 = !DILocation(line: 746, column: 6, scope: !3641)
!3650 = !DILocation(line: 747, column: 4, scope: !3641)
!3651 = !DILocation(line: 730, column: 48, scope: !3636)
!3652 = !DILocation(line: 730, column: 3, scope: !3636)
!3653 = distinct !{!3653, !3632, !3654}
!3654 = !DILocation(line: 748, column: 5, scope: !3629)
!3655 = !DILocation(line: 749, column: 20, scope: !3625)
!3656 = !DILocation(line: 750, column: 1, scope: !3625)
!3657 = distinct !DISubprogram(name: "c_bindings_start_stmt_expr", scope: !3, file: !3, line: 1333, type: !3658, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3660)
!3658 = !DISubroutineType(types: !3659)
!3659 = !{null, !2137}
!3660 = !{!3661, !3662, !3663, !3667, !3671, !3672}
!3661 = !DILocalVariable(name: "switch_bindings", arg: 1, scope: !3657, file: !3, line: 1333, type: !2137)
!3662 = !DILocalVariable(name: "scope", scope: !3657, file: !3, line: 1335, type: !2077)
!3663 = !DILocalVariable(name: "b", scope: !3664, file: !3, line: 1339, type: !2061)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 1338, column: 5)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 1337, column: 3)
!3666 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 1337, column: 3)
!3667 = !DILocalVariable(name: "label_vars", scope: !3668, file: !3, line: 1346, type: !2069)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1345, column: 2)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 1344, column: 7)
!3670 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1344, column: 7)
!3671 = !DILocalVariable(name: "ix", scope: !3668, file: !3, line: 1347, type: !7)
!3672 = !DILocalVariable(name: "g", scope: !3668, file: !3, line: 1348, type: !2111)
!3673 = !DILocation(line: 0, scope: !3657)
!3674 = !DILocation(line: 0, scope: !3668)
!3675 = !DILocation(line: 1337, column: 8, scope: !3666)
!3676 = !DILocation(line: 0, scope: !3666)
!3677 = !DILocation(line: 1337, column: 37, scope: !3665)
!3678 = !DILocation(line: 1337, column: 3, scope: !3666)
!3679 = !DILocation(line: 1341, column: 19, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1341, column: 11)
!3681 = !DILocation(line: 1341, column: 12, scope: !3680)
!3682 = !DILocation(line: 1341, column: 11, scope: !3664)
!3683 = !DILocation(line: 1344, column: 23, scope: !3670)
!3684 = !DILocation(line: 1344, column: 12, scope: !3670)
!3685 = !DILocation(line: 0, scope: !3670)
!3686 = !DILocation(line: 0, scope: !3664)
!3687 = !DILocation(line: 1344, column: 35, scope: !3669)
!3688 = !DILocation(line: 1344, column: 7, scope: !3670)
!3689 = !DILocation(line: 1348, column: 4, scope: !3668)
!3690 = !DILocation(line: 1350, column: 8, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1350, column: 8)
!3692 = !DILocation(line: 1350, column: 28, scope: !3691)
!3693 = !DILocation(line: 1350, column: 8, scope: !3668)
!3694 = !DILocation(line: 1352, column: 22, scope: !3668)
!3695 = !DILocation(line: 1353, column: 33, scope: !3668)
!3696 = !DILocation(line: 1353, column: 4, scope: !3668)
!3697 = !DILocation(line: 0, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 1354, column: 4)
!3699 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1354, column: 4)
!3700 = !DILocation(line: 1354, column: 9, scope: !3699)
!3701 = !DILocation(line: 0, scope: !3699)
!3702 = !DILocation(line: 1355, column: 9, scope: !3698)
!3703 = !DILocation(line: 1354, column: 4, scope: !3699)
!3704 = !DILocation(line: 1357, column: 8, scope: !3698)
!3705 = !DILocation(line: 1357, column: 25, scope: !3698)
!3706 = !DILocation(line: 1357, column: 6, scope: !3698)
!3707 = !DILocation(line: 1356, column: 9, scope: !3698)
!3708 = !DILocation(line: 1354, column: 4, scope: !3698)
!3709 = distinct !{!3709, !3703, !3710}
!3710 = !DILocation(line: 1357, column: 25, scope: !3699)
!3711 = !DILocation(line: 1358, column: 2, scope: !3669)
!3712 = !DILocation(line: 1344, column: 51, scope: !3669)
!3713 = !DILocation(line: 1344, column: 7, scope: !3669)
!3714 = distinct !{!3714, !3688, !3715}
!3715 = !DILocation(line: 1358, column: 2, scope: !3670)
!3716 = !DILocation(line: 1337, column: 61, scope: !3665)
!3717 = !DILocation(line: 1337, column: 3, scope: !3665)
!3718 = distinct !{!3718, !3678, !3719}
!3719 = !DILocation(line: 1359, column: 5, scope: !3666)
!3720 = !DILocation(line: 1361, column: 23, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 1361, column: 7)
!3722 = !DILocation(line: 1361, column: 7, scope: !3657)
!3723 = !DILocation(line: 1362, column: 24, scope: !3721)
!3724 = !DILocation(line: 1362, column: 5, scope: !3721)
!3725 = !DILocation(line: 1363, column: 1, scope: !3657)
!3726 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_base_iterate", scope: !3, file: !3, line: 302, type: !3727, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3732)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!620, !3729, !7, !3731}
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!3732 = !{!3733, !3734, !3735}
!3733 = !DILocalVariable(name: "vec_", arg: 1, scope: !3726, file: !3, line: 302, type: !3729)
!3734 = !DILocalVariable(name: "ix_", arg: 2, scope: !3726, file: !3, line: 302, type: !7)
!3735 = !DILocalVariable(name: "ptr", arg: 3, scope: !3726, file: !3, line: 302, type: !3731)
!3736 = !DILocation(line: 0, scope: !3726)
!3737 = !DILocation(line: 302, column: 1, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 302, column: 1)
!3739 = !DILocation(line: 302, column: 1, scope: !3726)
!3740 = !DILocation(line: 302, column: 1, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 302, column: 1)
!3742 = !DILocation(line: 302, column: 1, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 302, column: 1)
!3744 = !DILocation(line: 0, scope: !3738)
!3745 = distinct !DISubprogram(name: "c_bindings_end_stmt_expr", scope: !3, file: !3, line: 1368, type: !3658, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3746)
!3746 = !{!3747, !3748, !3749, !3753, !3757, !3758}
!3747 = !DILocalVariable(name: "switch_bindings", arg: 1, scope: !3745, file: !3, line: 1368, type: !2137)
!3748 = !DILocalVariable(name: "scope", scope: !3745, file: !3, line: 1370, type: !2077)
!3749 = !DILocalVariable(name: "b", scope: !3750, file: !3, line: 1374, type: !2061)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 1373, column: 5)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 1372, column: 3)
!3752 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 1372, column: 3)
!3753 = !DILocalVariable(name: "label_vars", scope: !3754, file: !3, line: 1381, type: !2069)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1380, column: 2)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1379, column: 7)
!3756 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 1379, column: 7)
!3757 = !DILocalVariable(name: "ix", scope: !3754, file: !3, line: 1382, type: !7)
!3758 = !DILocalVariable(name: "g", scope: !3754, file: !3, line: 1383, type: !2111)
!3759 = !DILocation(line: 0, scope: !3745)
!3760 = !DILocation(line: 0, scope: !3754)
!3761 = !DILocation(line: 1372, column: 8, scope: !3752)
!3762 = !DILocation(line: 0, scope: !3752)
!3763 = !DILocation(line: 1372, column: 37, scope: !3751)
!3764 = !DILocation(line: 1372, column: 3, scope: !3752)
!3765 = !DILocation(line: 1376, column: 19, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 1376, column: 11)
!3767 = !DILocation(line: 1376, column: 12, scope: !3766)
!3768 = !DILocation(line: 1376, column: 11, scope: !3750)
!3769 = !DILocation(line: 1379, column: 23, scope: !3756)
!3770 = !DILocation(line: 1379, column: 12, scope: !3756)
!3771 = !DILocation(line: 0, scope: !3756)
!3772 = !DILocation(line: 0, scope: !3750)
!3773 = !DILocation(line: 1379, column: 35, scope: !3755)
!3774 = !DILocation(line: 1379, column: 7, scope: !3756)
!3775 = !DILocation(line: 1383, column: 4, scope: !3754)
!3776 = !DILocation(line: 1385, column: 8, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1385, column: 8)
!3778 = !DILocation(line: 1385, column: 28, scope: !3777)
!3779 = !DILocation(line: 1385, column: 8, scope: !3754)
!3780 = !DILocation(line: 1387, column: 22, scope: !3754)
!3781 = !DILocation(line: 1388, column: 33, scope: !3754)
!3782 = !DILocation(line: 1388, column: 4, scope: !3754)
!3783 = !DILocation(line: 1389, column: 46, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1389, column: 8)
!3785 = !DILocation(line: 1389, column: 8, scope: !3754)
!3786 = !DILocation(line: 1391, column: 35, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 1390, column: 6)
!3788 = !DILocation(line: 1391, column: 50, scope: !3787)
!3789 = !DILocation(line: 1392, column: 46, scope: !3787)
!3790 = !DILocation(line: 1393, column: 6, scope: !3787)
!3791 = !DILocation(line: 0, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1394, column: 4)
!3793 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1394, column: 4)
!3794 = !DILocation(line: 1394, column: 9, scope: !3793)
!3795 = !DILocation(line: 0, scope: !3793)
!3796 = !DILocation(line: 1395, column: 9, scope: !3792)
!3797 = !DILocation(line: 1394, column: 4, scope: !3793)
!3798 = !DILocation(line: 1398, column: 10, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 1397, column: 6)
!3800 = !DILocation(line: 1398, column: 27, scope: !3799)
!3801 = !DILocation(line: 1398, column: 8, scope: !3799)
!3802 = !DILocation(line: 1399, column: 40, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 1399, column: 12)
!3804 = !DILocation(line: 1399, column: 12, scope: !3799)
!3805 = !DILocation(line: 1401, column: 22, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1400, column: 3)
!3807 = !DILocation(line: 1401, column: 37, scope: !3806)
!3808 = !DILocation(line: 1402, column: 33, scope: !3806)
!3809 = !DILocation(line: 1403, column: 3, scope: !3806)
!3810 = !DILocation(line: 1396, column: 9, scope: !3792)
!3811 = !DILocation(line: 1394, column: 4, scope: !3792)
!3812 = distinct !{!3812, !3797, !3813}
!3813 = !DILocation(line: 1404, column: 6, scope: !3793)
!3814 = !DILocation(line: 1405, column: 2, scope: !3755)
!3815 = !DILocation(line: 1379, column: 51, scope: !3755)
!3816 = !DILocation(line: 1379, column: 7, scope: !3755)
!3817 = distinct !{!3817, !3774, !3818}
!3818 = !DILocation(line: 1405, column: 2, scope: !3756)
!3819 = !DILocation(line: 1372, column: 61, scope: !3751)
!3820 = !DILocation(line: 1372, column: 3, scope: !3751)
!3821 = distinct !{!3821, !3764, !3822}
!3822 = !DILocation(line: 1406, column: 5, scope: !3752)
!3823 = !DILocation(line: 1408, column: 23, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 1408, column: 7)
!3825 = !DILocation(line: 1408, column: 7, scope: !3745)
!3826 = !DILocation(line: 1410, column: 26, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1409, column: 5)
!3828 = !DILocation(line: 1410, column: 7, scope: !3827)
!3829 = !DILocation(line: 1411, column: 7, scope: !3827)
!3830 = !DILocation(line: 1413, column: 1, scope: !3745)
!3831 = distinct !DISubprogram(name: "pushdecl", scope: !3, file: !3, line: 2538, type: !2812, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3832)
!3832 = !{!3833, !3834, !3835, !3836, !3837, !3838, !3839, !3842, !3843, !3844, !3845, !3846, !3851, !3854, !3855, !3856, !3857, !3860, !3863}
!3833 = !DILocalVariable(name: "x", arg: 1, scope: !3831, file: !3, line: 2538, type: !672)
!3834 = !DILocalVariable(name: "name", scope: !3831, file: !3, line: 2540, type: !672)
!3835 = !DILocalVariable(name: "scope", scope: !3831, file: !3, line: 2541, type: !2077)
!3836 = !DILocalVariable(name: "b", scope: !3831, file: !3, line: 2542, type: !2061)
!3837 = !DILocalVariable(name: "nested", scope: !3831, file: !3, line: 2543, type: !619)
!3838 = !DILocalVariable(name: "locus", scope: !3831, file: !3, line: 2544, type: !760)
!3839 = !DILocalVariable(name: "b_ext", scope: !3840, file: !3, line: 2572, type: !2061)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 2571, column: 5)
!3841 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2570, column: 7)
!3842 = !DILocalVariable(name: "b_use", scope: !3840, file: !3, line: 2572, type: !2061)
!3843 = !DILocalVariable(name: "type", scope: !3840, file: !3, line: 2573, type: !672)
!3844 = !DILocalVariable(name: "visdecl", scope: !3840, file: !3, line: 2574, type: !672)
!3845 = !DILocalVariable(name: "vistype", scope: !3840, file: !3, line: 2575, type: !672)
!3846 = !DILocalVariable(name: "thistype", scope: !3847, file: !3, line: 2602, type: !672)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2599, column: 6)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 2598, column: 8)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 2597, column: 2)
!3850 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 2596, column: 11)
!3851 = !DILocalVariable(name: "type", scope: !3852, file: !3, line: 2636, type: !672)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 2635, column: 5)
!3853 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2634, column: 7)
!3854 = !DILocalVariable(name: "vistype", scope: !3852, file: !3, line: 2637, type: !672)
!3855 = !DILocalVariable(name: "visdecl", scope: !3852, file: !3, line: 2638, type: !672)
!3856 = !DILocalVariable(name: "type_saved", scope: !3852, file: !3, line: 2639, type: !619)
!3857 = !DILocalVariable(name: "thistype", scope: !3858, file: !3, line: 2702, type: !672)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2701, column: 2)
!3859 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2698, column: 11)
!3860 = !DILocalVariable(name: "element", scope: !3861, file: !3, line: 2764, type: !672)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 2763, column: 5)
!3862 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2761, column: 7)
!3863 = !DILabel(scope: !3831, name: "skip_external_and_shadow_checks", file: !3, line: 2746)
!3864 = !DILocation(line: 0, scope: !3831)
!3865 = !DILocation(line: 2540, column: 15, scope: !3831)
!3866 = !DILocation(line: 2541, column: 27, scope: !3831)
!3867 = !DILocation(line: 2544, column: 22, scope: !3831)
!3868 = !DILocation(line: 2549, column: 7, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2549, column: 7)
!3870 = !DILocation(line: 2550, column: 7, scope: !3869)
!3871 = !DILocation(line: 2550, column: 12, scope: !3869)
!3872 = !DILocation(line: 2550, column: 26, scope: !3869)
!3873 = !DILocation(line: 2550, column: 43, scope: !3869)
!3874 = !DILocation(line: 2550, column: 60, scope: !3869)
!3875 = !DILocation(line: 2551, column: 4, scope: !3869)
!3876 = !DILocation(line: 2551, column: 7, scope: !3869)
!3877 = !DILocation(line: 2551, column: 24, scope: !3869)
!3878 = !DILocation(line: 2551, column: 28, scope: !3869)
!3879 = !DILocation(line: 2549, column: 7, scope: !3831)
!3880 = !DILocation(line: 2552, column: 5, scope: !3869)
!3881 = !DILocation(line: 2552, column: 22, scope: !3869)
!3882 = !DILocation(line: 2555, column: 8, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2555, column: 7)
!3884 = !DILocation(line: 2555, column: 7, scope: !3831)
!3885 = !DILocation(line: 2557, column: 7, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 2556, column: 5)
!3887 = !DILocation(line: 2559, column: 7, scope: !3886)
!3888 = !DILocation(line: 2569, column: 7, scope: !3831)
!3889 = !DILocation(line: 2570, column: 7, scope: !3841)
!3890 = !DILocation(line: 2570, column: 9, scope: !3841)
!3891 = !DILocation(line: 2570, column: 12, scope: !3841)
!3892 = !DILocation(line: 2570, column: 7, scope: !3831)
!3893 = !DILocation(line: 2573, column: 19, scope: !3840)
!3894 = !DILocation(line: 0, scope: !3840)
!3895 = !DILocation(line: 2574, column: 25, scope: !3840)
!3896 = !DILocation(line: 2575, column: 22, scope: !3840)
!3897 = !DILocation(line: 2576, column: 11, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 2576, column: 11)
!3899 = !DILocation(line: 2576, column: 37, scope: !3898)
!3900 = !DILocation(line: 2577, column: 4, scope: !3898)
!3901 = !DILocation(line: 2577, column: 7, scope: !3898)
!3902 = !DILocation(line: 2576, column: 11, scope: !3840)
!3903 = !DILocation(line: 2578, column: 16, scope: !3898)
!3904 = !DILocation(line: 2578, column: 2, scope: !3898)
!3905 = !DILocation(line: 2585, column: 11, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 2585, column: 11)
!3907 = !DILocation(line: 2585, column: 27, scope: !3906)
!3908 = !DILocation(line: 2585, column: 30, scope: !3906)
!3909 = !DILocation(line: 2585, column: 11, scope: !3840)
!3910 = !DILocation(line: 2587, column: 4, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 2586, column: 2)
!3912 = !DILocation(line: 2587, column: 17, scope: !3911)
!3913 = !DILocation(line: 2587, column: 21, scope: !3911)
!3914 = !DILocation(line: 2588, column: 21, scope: !3911)
!3915 = distinct !{!3915, !3910, !3914}
!3916 = !DILocation(line: 2592, column: 21, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 2592, column: 12)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 2590, column: 6)
!3919 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2589, column: 8)
!3920 = !DILocation(line: 2592, column: 12, scope: !3917)
!3921 = !DILocation(line: 2592, column: 12, scope: !3918)
!3922 = !DILocation(line: 2593, column: 3, scope: !3917)
!3923 = !DILocation(line: 2593, column: 27, scope: !3917)
!3924 = !DILocation(line: 2596, column: 38, scope: !3850)
!3925 = !DILocation(line: 2596, column: 11, scope: !3850)
!3926 = !DILocation(line: 2596, column: 11, scope: !3840)
!3927 = !DILocation(line: 2598, column: 14, scope: !3848)
!3928 = !DILocation(line: 2598, column: 8, scope: !3849)
!3929 = !DILocation(line: 2603, column: 12, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 2603, column: 12)
!3931 = !DILocation(line: 2603, column: 12, scope: !3847)
!3932 = !DILocation(line: 2604, column: 14, scope: !3930)
!3933 = !DILocation(line: 0, scope: !3847)
!3934 = !DILocation(line: 2607, column: 24, scope: !3847)
!3935 = !DILocation(line: 2604, column: 3, scope: !3930)
!3936 = !DILocation(line: 2606, column: 14, scope: !3930)
!3937 = !DILocation(line: 0, scope: !3930)
!3938 = !DILocation(line: 2608, column: 12, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 2608, column: 12)
!3940 = !DILocation(line: 2607, column: 22, scope: !3847)
!3941 = !DILocation(line: 2608, column: 36, scope: !3939)
!3942 = !DILocation(line: 2609, column: 5, scope: !3939)
!3943 = !DILocation(line: 2609, column: 8, scope: !3939)
!3944 = !DILocation(line: 2608, column: 12, scope: !3847)
!3945 = !DILocation(line: 2612, column: 9, scope: !3939)
!3946 = !DILocation(line: 2611, column: 7, scope: !3939)
!3947 = !DILocation(line: 2614, column: 8, scope: !3847)
!3948 = !DILocation(line: 2610, column: 3, scope: !3939)
!3949 = !DILocation(line: 2614, column: 32, scope: !3847)
!3950 = !DILocation(line: 2615, column: 6, scope: !3847)
!3951 = !DILocation(line: 2616, column: 18, scope: !3849)
!3952 = !DILocation(line: 2616, column: 4, scope: !3849)
!3953 = !DILocation(line: 2634, column: 7, scope: !3853)
!3954 = !DILocation(line: 2634, column: 37, scope: !3853)
!3955 = !DILocation(line: 2634, column: 34, scope: !3853)
!3956 = !DILocation(line: 2634, column: 25, scope: !3853)
!3957 = !DILocation(line: 2636, column: 19, scope: !3852)
!3958 = !DILocation(line: 0, scope: !3852)
!3959 = !DILocation(line: 2640, column: 13, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2640, column: 11)
!3961 = !DILocation(line: 2640, column: 17, scope: !3960)
!3962 = !DILocation(line: 2641, column: 4, scope: !3960)
!3963 = !DILocation(line: 2641, column: 8, scope: !3960)
!3964 = !DILocation(line: 2641, column: 28, scope: !3960)
!3965 = !DILocation(line: 2642, column: 8, scope: !3960)
!3966 = !DILocation(line: 2642, column: 31, scope: !3960)
!3967 = !DILocation(line: 2643, column: 4, scope: !3960)
!3968 = !DILocation(line: 2643, column: 7, scope: !3960)
!3969 = !DILocation(line: 2640, column: 11, scope: !3852)
!3970 = !DILocation(line: 2646, column: 14, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 2644, column: 2)
!3972 = !DILocation(line: 2647, column: 2, scope: !3971)
!3973 = !DILocation(line: 2649, column: 4, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2648, column: 11)
!3975 = !DILocation(line: 2649, column: 8, scope: !3974)
!3976 = !DILocation(line: 2648, column: 11, scope: !3852)
!3977 = !DILocation(line: 2650, column: 2, scope: !3974)
!3978 = !DILocation(line: 0, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 2667, column: 8)
!3980 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2653, column: 2)
!3981 = !DILocation(line: 2652, column: 7, scope: !3852)
!3982 = !DILocation(line: 2639, column: 12, scope: !3852)
!3983 = !DILocation(line: 2652, column: 16, scope: !3852)
!3984 = !DILocation(line: 2652, column: 20, scope: !3852)
!3985 = !DILocation(line: 2662, column: 8, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 2662, column: 8)
!3987 = !DILocation(line: 2662, column: 25, scope: !3986)
!3988 = !DILocation(line: 2662, column: 28, scope: !3986)
!3989 = !DILocation(line: 2662, column: 60, scope: !3986)
!3990 = !DILocation(line: 2662, column: 56, scope: !3986)
!3991 = !DILocation(line: 2662, column: 8, scope: !3980)
!3992 = !DILocation(line: 2664, column: 20, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 2663, column: 6)
!3994 = !DILocation(line: 2664, column: 18, scope: !3993)
!3995 = !DILocation(line: 2666, column: 6, scope: !3993)
!3996 = !DILocation(line: 2667, column: 8, scope: !3979)
!3997 = !DILocation(line: 2668, column: 8, scope: !3979)
!3998 = !DILocation(line: 2668, column: 11, scope: !3979)
!3999 = !DILocation(line: 2668, column: 31, scope: !3979)
!4000 = !DILocation(line: 2669, column: 8, scope: !3979)
!4001 = !DILocation(line: 2669, column: 11, scope: !3979)
!4002 = !DILocation(line: 2670, column: 8, scope: !3979)
!4003 = !DILocation(line: 2670, column: 11, scope: !3979)
!4004 = !DILocation(line: 2670, column: 43, scope: !3979)
!4005 = !DILocation(line: 2671, column: 8, scope: !3979)
!4006 = !DILocation(line: 2671, column: 12, scope: !3979)
!4007 = !DILocation(line: 2672, column: 8, scope: !3979)
!4008 = !DILocation(line: 2672, column: 11, scope: !3979)
!4009 = !DILocation(line: 2672, column: 28, scope: !3979)
!4010 = !DILocation(line: 2673, column: 8, scope: !3979)
!4011 = !DILocation(line: 2673, column: 11, scope: !3979)
!4012 = !DILocation(line: 2674, column: 8, scope: !3979)
!4013 = !DILocation(line: 2674, column: 11, scope: !3979)
!4014 = !DILocation(line: 2675, column: 8, scope: !3979)
!4015 = !DILocation(line: 2675, column: 12, scope: !3979)
!4016 = !DILocation(line: 2667, column: 8, scope: !3980)
!4017 = !DILocation(line: 2680, column: 22, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 2676, column: 6)
!4019 = !DILocation(line: 2681, column: 6, scope: !4018)
!4020 = !DILocation(line: 2682, column: 11, scope: !3980)
!4021 = distinct !{!4021, !3981, !4022}
!4022 = !DILocation(line: 2683, column: 2, scope: !3852)
!4023 = !DILocation(line: 2689, column: 17, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2689, column: 11)
!4025 = !DILocation(line: 2689, column: 33, scope: !4024)
!4026 = !DILocation(line: 2689, column: 67, scope: !4024)
!4027 = !DILocation(line: 2689, column: 36, scope: !4024)
!4028 = !DILocation(line: 2690, column: 4, scope: !4024)
!4029 = !DILocation(line: 2690, column: 12, scope: !4024)
!4030 = !DILocation(line: 2690, column: 7, scope: !4024)
!4031 = !DILocation(line: 2689, column: 11, scope: !3852)
!4032 = !DILocation(line: 2691, column: 2, scope: !4024)
!4033 = !DILocation(line: 2691, column: 22, scope: !4024)
!4034 = !DILocation(line: 2699, column: 8, scope: !3859)
!4035 = !DILocation(line: 2699, column: 24, scope: !3859)
!4036 = !DILocation(line: 2699, column: 58, scope: !3859)
!4037 = !DILocation(line: 2699, column: 27, scope: !3859)
!4038 = !DILocation(line: 2700, column: 4, scope: !3859)
!4039 = !DILocation(line: 2700, column: 30, scope: !3859)
!4040 = !DILocation(line: 2700, column: 7, scope: !3859)
!4041 = !DILocation(line: 2698, column: 11, scope: !3852)
!4042 = !DILocation(line: 2703, column: 8, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 2703, column: 8)
!4044 = !DILocation(line: 2703, column: 8, scope: !3858)
!4045 = !DILocation(line: 2705, column: 12, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 2705, column: 12)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 2704, column: 6)
!4048 = !DILocation(line: 2705, column: 12, scope: !4047)
!4049 = !DILocation(line: 2706, column: 14, scope: !4046)
!4050 = !DILocation(line: 0, scope: !3858)
!4051 = !DILocation(line: 2706, column: 3, scope: !4046)
!4052 = !DILocation(line: 2708, column: 14, scope: !4046)
!4053 = !DILocation(line: 0, scope: !4043)
!4054 = !DILocation(line: 2712, column: 16, scope: !3858)
!4055 = !DILocation(line: 2712, column: 14, scope: !3858)
!4056 = !DILocation(line: 2713, column: 8, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 2713, column: 8)
!4058 = !DILocation(line: 2713, column: 28, scope: !4057)
!4059 = !DILocation(line: 2713, column: 45, scope: !4057)
!4060 = !DILocation(line: 2713, column: 48, scope: !4057)
!4061 = !DILocation(line: 2713, column: 8, scope: !3858)
!4062 = !DILocation(line: 2716, column: 12, scope: !4057)
!4063 = !DILocation(line: 2715, column: 10, scope: !4057)
!4064 = !DILocation(line: 2717, column: 4, scope: !3858)
!4065 = !DILocation(line: 2714, column: 6, scope: !4057)
!4066 = !DILocation(line: 2717, column: 24, scope: !3858)
!4067 = !DILocation(line: 2718, column: 19, scope: !3858)
!4068 = !DILocation(line: 2718, column: 4, scope: !3858)
!4069 = !DILocation(line: 2720, column: 14, scope: !3858)
!4070 = !DILocation(line: 2722, column: 16, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2722, column: 16)
!4072 = !DILocation(line: 2722, column: 16, scope: !3859)
!4073 = !DILocation(line: 2724, column: 8, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 2724, column: 8)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 2723, column: 2)
!4076 = !DILocation(line: 2724, column: 20, scope: !4074)
!4077 = !DILocation(line: 2724, column: 16, scope: !4074)
!4078 = !DILocation(line: 2724, column: 25, scope: !4074)
!4079 = !DILocation(line: 2724, column: 8, scope: !4075)
!4080 = !DILocation(line: 2736, column: 23, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 2735, column: 6)
!4082 = !DILocation(line: 2736, column: 8, scope: !4081)
!4083 = !DILocation(line: 2543, column: 8, scope: !3831)
!4084 = !DILocation(line: 2743, column: 7, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2743, column: 7)
!4086 = !DILocation(line: 2743, column: 21, scope: !4085)
!4087 = !DILocation(line: 2743, column: 7, scope: !3831)
!4088 = !DILocation(line: 2744, column: 5, scope: !4085)
!4089 = !DILocation(line: 2746, column: 2, scope: !3831)
!4090 = !DILocation(line: 2747, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 2747, column: 7)
!4092 = !DILocation(line: 2747, column: 21, scope: !4091)
!4093 = !DILocation(line: 2747, column: 7, scope: !3831)
!4094 = !DILocation(line: 2748, column: 5, scope: !4091)
!4095 = !DILocation(line: 2750, column: 3, scope: !3831)
!4096 = !DILocation(line: 2761, column: 7, scope: !3862)
!4097 = !DILocation(line: 2761, column: 24, scope: !3862)
!4098 = !DILocation(line: 2761, column: 21, scope: !3862)
!4099 = !DILocation(line: 2762, column: 7, scope: !3862)
!4100 = !DILocation(line: 2762, column: 11, scope: !3862)
!4101 = !DILocation(line: 2761, column: 7, scope: !3831)
!4102 = !DILocation(line: 2766, column: 7, scope: !3861)
!4103 = !DILocation(line: 0, scope: !3861)
!4104 = !DILocation(line: 2766, column: 14, scope: !3861)
!4105 = !DILocation(line: 2766, column: 34, scope: !3861)
!4106 = distinct !{!4106, !4102, !4107}
!4107 = !DILocation(line: 2767, column: 12, scope: !3861)
!4108 = !DILocation(line: 2768, column: 17, scope: !3861)
!4109 = !DILocation(line: 2770, column: 12, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 2770, column: 11)
!4111 = !DILocation(line: 2770, column: 32, scope: !4110)
!4112 = !DILocation(line: 2771, column: 5, scope: !4110)
!4113 = !DILocation(line: 2771, column: 28, scope: !4110)
!4114 = !DILocation(line: 2772, column: 4, scope: !4110)
!4115 = !DILocation(line: 2772, column: 8, scope: !4110)
!4116 = !DILocation(line: 2772, column: 22, scope: !4110)
!4117 = !DILocation(line: 2773, column: 8, scope: !4110)
!4118 = !DILocation(line: 2773, column: 11, scope: !4110)
!4119 = !DILocation(line: 2773, column: 37, scope: !4110)
!4120 = !DILocation(line: 2774, column: 4, scope: !4110)
!4121 = !DILocation(line: 2774, column: 8, scope: !4110)
!4122 = !DILocation(line: 2770, column: 11, scope: !3861)
!4123 = !DILocation(line: 2776, column: 6, scope: !4110)
!4124 = !DILocation(line: 2776, column: 4, scope: !4110)
!4125 = !DILocation(line: 2775, column: 2, scope: !4110)
!4126 = !DILocation(line: 2779, column: 1, scope: !3831)
!4127 = distinct !DISubprogram(name: "duplicate_decls", scope: !3, file: !3, line: 2463, type: !4128, scopeLine: 2464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4130)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!619, !672, !672}
!4130 = !{!4131, !4132, !4133, !4134}
!4131 = !DILocalVariable(name: "newdecl", arg: 1, scope: !4127, file: !3, line: 2463, type: !672)
!4132 = !DILocalVariable(name: "olddecl", arg: 2, scope: !4127, file: !3, line: 2463, type: !672)
!4133 = !DILocalVariable(name: "newtype", scope: !4127, file: !3, line: 2465, type: !672)
!4134 = !DILocalVariable(name: "oldtype", scope: !4127, file: !3, line: 2465, type: !672)
!4135 = !DILocation(line: 0, scope: !4127)
!4136 = !DILocation(line: 2465, column: 3, scope: !4127)
!4137 = !DILocation(line: 2465, column: 8, scope: !4127)
!4138 = !DILocation(line: 2465, column: 24, scope: !4127)
!4139 = !DILocation(line: 2467, column: 8, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 2467, column: 7)
!4141 = !DILocation(line: 2467, column: 7, scope: !4127)
!4142 = !DILocation(line: 2470, column: 7, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2468, column: 5)
!4144 = !DILocation(line: 2470, column: 33, scope: !4143)
!4145 = !DILocation(line: 2471, column: 7, scope: !4143)
!4146 = !DILocation(line: 2474, column: 34, scope: !4127)
!4147 = !DILocation(line: 2474, column: 43, scope: !4127)
!4148 = !DILocation(line: 2474, column: 3, scope: !4127)
!4149 = !DILocation(line: 2475, column: 3, scope: !4127)
!4150 = !DILocation(line: 2476, column: 1, scope: !4127)
!4151 = distinct !DISubprogram(name: "warn_if_shadowing", scope: !3, file: !3, line: 2481, type: !2872, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4152)
!4152 = !{!4153, !4154, !4155}
!4153 = !DILocalVariable(name: "new_decl", arg: 1, scope: !4151, file: !3, line: 2481, type: !672)
!4154 = !DILocalVariable(name: "b", scope: !4151, file: !3, line: 2483, type: !2061)
!4155 = !DILocalVariable(name: "old_decl", scope: !4156, file: !3, line: 2497, type: !672)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2496, column: 7)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 2495, column: 9)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 2494, column: 3)
!4159 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 2494, column: 3)
!4160 = !DILocation(line: 0, scope: !4151)
!4161 = !DILocation(line: 2486, column: 8, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 2486, column: 7)
!4163 = !DILocation(line: 2488, column: 7, scope: !4162)
!4164 = !DILocation(line: 2488, column: 10, scope: !4162)
!4165 = !DILocation(line: 2490, column: 7, scope: !4162)
!4166 = !DILocation(line: 2490, column: 10, scope: !4162)
!4167 = !DILocation(line: 2486, column: 7, scope: !4151)
!4168 = !DILocation(line: 2494, column: 12, scope: !4159)
!4169 = !DILocation(line: 2494, column: 8, scope: !4159)
!4170 = !DILocation(line: 0, scope: !4159)
!4171 = !DILocation(line: 2494, column: 3, scope: !4159)
!4172 = !DILocation(line: 2495, column: 12, scope: !4157)
!4173 = !DILocation(line: 2495, column: 9, scope: !4157)
!4174 = !DILocation(line: 2495, column: 17, scope: !4157)
!4175 = !DILocation(line: 2495, column: 28, scope: !4157)
!4176 = !DILocation(line: 2495, column: 40, scope: !4157)
!4177 = !DILocation(line: 2495, column: 47, scope: !4157)
!4178 = !DILocation(line: 2495, column: 44, scope: !4157)
!4179 = !DILocation(line: 2495, column: 9, scope: !4158)
!4180 = !DILocation(line: 0, scope: !4156)
!4181 = !DILocation(line: 2499, column: 18, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 2499, column: 6)
!4183 = !DILocation(line: 2499, column: 15, scope: !4182)
!4184 = !DILocation(line: 2499, column: 6, scope: !4156)
!4185 = !DILocation(line: 2501, column: 6, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 2500, column: 4)
!4187 = !DILocation(line: 2503, column: 6, scope: !4186)
!4188 = !DILocation(line: 2505, column: 11, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 2505, column: 11)
!4190 = !DILocation(line: 2505, column: 32, scope: !4189)
!4191 = !DILocation(line: 2505, column: 11, scope: !4182)
!4192 = !DILocation(line: 2506, column: 4, scope: !4189)
!4193 = !DILocation(line: 2508, column: 11, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 2508, column: 11)
!4195 = !DILocation(line: 2508, column: 11, scope: !4189)
!4196 = !DILocation(line: 2509, column: 4, scope: !4194)
!4197 = !DILocation(line: 2511, column: 32, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 2511, column: 11)
!4199 = !DILocation(line: 2512, column: 4, scope: !4198)
!4200 = !DILocation(line: 2512, column: 7, scope: !4198)
!4201 = !DILocation(line: 2511, column: 11, scope: !4194)
!4202 = !DILocation(line: 2514, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 2513, column: 4)
!4204 = !DILocation(line: 2516, column: 6, scope: !4203)
!4205 = !DILocation(line: 2519, column: 4, scope: !4198)
!4206 = !DILocation(line: 2522, column: 14, scope: !4156)
!4207 = !DILocation(line: 2522, column: 2, scope: !4156)
!4208 = !DILocation(line: 2525, column: 2, scope: !4156)
!4209 = !DILocation(line: 2494, column: 63, scope: !4158)
!4210 = !DILocation(line: 2494, column: 3, scope: !4158)
!4211 = distinct !{!4211, !4171, !4212}
!4212 = !DILocation(line: 2526, column: 7, scope: !4159)
!4213 = !DILocation(line: 2527, column: 1, scope: !4151)
!4214 = distinct !DISubprogram(name: "pushdecl_top_level", scope: !3, file: !3, line: 2787, type: !2812, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4215)
!4215 = !{!4216, !4217, !4218}
!4216 = !DILocalVariable(name: "x", arg: 1, scope: !4214, file: !3, line: 2787, type: !672)
!4217 = !DILocalVariable(name: "name", scope: !4214, file: !3, line: 2789, type: !672)
!4218 = !DILocalVariable(name: "nested", scope: !4214, file: !3, line: 2790, type: !619)
!4219 = !DILocation(line: 0, scope: !4214)
!4220 = !DILocation(line: 2791, column: 3, scope: !4214)
!4221 = !DILocation(line: 2795, column: 2, scope: !4214)
!4222 = !DILocation(line: 2793, column: 10, scope: !4214)
!4223 = !DILocation(line: 2797, column: 7, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 2797, column: 7)
!4225 = !DILocation(line: 2797, column: 7, scope: !4214)
!4226 = !DILocation(line: 2799, column: 22, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2798, column: 5)
!4228 = !DILocation(line: 2799, column: 7, scope: !4227)
!4229 = !DILocation(line: 2802, column: 5, scope: !4227)
!4230 = !DILocation(line: 2803, column: 7, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 2803, column: 7)
!4232 = !DILocation(line: 2803, column: 7, scope: !4214)
!4233 = !DILocation(line: 2804, column: 5, scope: !4231)
!4234 = !DILocation(line: 2806, column: 3, scope: !4214)
!4235 = distinct !DISubprogram(name: "implicitly_declare", scope: !3, file: !3, line: 2831, type: !4236, scopeLine: 2832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4238)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!672, !760, !672}
!4238 = !{!4239, !4240, !4241, !4242, !4243, !4244}
!4239 = !DILocalVariable(name: "loc", arg: 1, scope: !4235, file: !3, line: 2831, type: !760)
!4240 = !DILocalVariable(name: "functionid", arg: 2, scope: !4235, file: !3, line: 2831, type: !672)
!4241 = !DILocalVariable(name: "b", scope: !4235, file: !3, line: 2833, type: !2061)
!4242 = !DILocalVariable(name: "decl", scope: !4235, file: !3, line: 2834, type: !672)
!4243 = !DILocalVariable(name: "asmspec_tree", scope: !4235, file: !3, line: 2835, type: !672)
!4244 = !DILocalVariable(name: "newtype", scope: !4245, file: !3, line: 2865, type: !672)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 2864, column: 2)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 2856, column: 11)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 2847, column: 5)
!4248 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 2846, column: 7)
!4249 = !DILocation(line: 0, scope: !4235)
!4250 = !DILocation(line: 2834, column: 3, scope: !4235)
!4251 = !DILocation(line: 2834, column: 8, scope: !4235)
!4252 = !DILocation(line: 2837, column: 12, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 2837, column: 3)
!4254 = !DILocation(line: 0, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 2839, column: 11)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 2838, column: 5)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 2837, column: 3)
!4258 = !DILocation(line: 2837, column: 8, scope: !4253)
!4259 = !DILocation(line: 0, scope: !4253)
!4260 = !DILocation(line: 2837, column: 3, scope: !4253)
!4261 = !DILocation(line: 2839, column: 11, scope: !4255)
!4262 = !DILocation(line: 2839, column: 11, scope: !4256)
!4263 = !DILocation(line: 2841, column: 14, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 2840, column: 2)
!4265 = !DILocation(line: 2841, column: 9, scope: !4264)
!4266 = !DILocation(line: 2842, column: 4, scope: !4264)
!4267 = !DILocation(line: 2837, column: 53, scope: !4257)
!4268 = !DILocation(line: 2837, column: 3, scope: !4257)
!4269 = distinct !{!4269, !4260, !4270}
!4270 = !DILocation(line: 2844, column: 5, scope: !4253)
!4271 = !DILocation(line: 2846, column: 7, scope: !4248)
!4272 = !DILocation(line: 2846, column: 7, scope: !4235)
!4273 = !DILocation(line: 2848, column: 19, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 2848, column: 11)
!4275 = !DILocation(line: 2848, column: 16, scope: !4274)
!4276 = !DILocation(line: 2848, column: 11, scope: !4247)
!4277 = !DILocation(line: 2856, column: 12, scope: !4246)
!4278 = !DILocation(line: 2856, column: 33, scope: !4246)
!4279 = !DILocation(line: 2856, column: 36, scope: !4246)
!4280 = !DILocation(line: 2856, column: 11, scope: !4247)
!4281 = !DILocation(line: 2858, column: 28, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 2857, column: 2)
!4283 = !DILocation(line: 2860, column: 3, scope: !4282)
!4284 = !DILocation(line: 2858, column: 4, scope: !4282)
!4285 = !DILocation(line: 2861, column: 4, scope: !4282)
!4286 = !DILocation(line: 2865, column: 19, scope: !4245)
!4287 = !DILocation(line: 0, scope: !4245)
!4288 = !DILocation(line: 2866, column: 13, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2866, column: 8)
!4290 = !DILocation(line: 2866, column: 8, scope: !4289)
!4291 = !DILocation(line: 2866, column: 8, scope: !4245)
!4292 = !DILocation(line: 2867, column: 6, scope: !4289)
!4293 = !DILocation(line: 2867, column: 23, scope: !4289)
!4294 = !DILocation(line: 2872, column: 9, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2872, column: 8)
!4296 = !DILocation(line: 2872, column: 8, scope: !4245)
!4297 = !DILocation(line: 2874, column: 8, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 2873, column: 6)
!4299 = !DILocation(line: 2875, column: 8, scope: !4298)
!4300 = !DILocation(line: 2875, column: 31, scope: !4298)
!4301 = !DILocation(line: 2876, column: 6, scope: !4298)
!4302 = !DILocation(line: 2877, column: 8, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2877, column: 8)
!4304 = !DILocation(line: 0, scope: !4303)
!4305 = !DILocation(line: 2877, column: 8, scope: !4245)
!4306 = !DILocation(line: 2880, column: 13, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 2878, column: 6)
!4308 = !DILocation(line: 2879, column: 18, scope: !4307)
!4309 = !DILocation(line: 2882, column: 33, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 2882, column: 12)
!4311 = !DILocation(line: 2882, column: 13, scope: !4310)
!4312 = !DILocation(line: 2882, column: 12, scope: !4307)
!4313 = !DILocation(line: 2884, column: 5, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 2883, column: 3)
!4315 = !DILocation(line: 2886, column: 15, scope: !4314)
!4316 = !DILocation(line: 2887, column: 3, scope: !4314)
!4317 = !DILocation(line: 2891, column: 13, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 2891, column: 12)
!4319 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 2890, column: 6)
!4320 = !DILocation(line: 2891, column: 12, scope: !4319)
!4321 = !DILocation(line: 2893, column: 5, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 2892, column: 3)
!4323 = !DILocation(line: 2894, column: 5, scope: !4322)
!4324 = !DILocation(line: 2895, column: 3, scope: !4322)
!4325 = !DILocation(line: 2897, column: 16, scope: !4245)
!4326 = !DILocation(line: 2897, column: 14, scope: !4245)
!4327 = !DILocation(line: 2898, column: 4, scope: !4245)
!4328 = !DILocation(line: 2898, column: 21, scope: !4245)
!4329 = !DILocation(line: 2899, column: 22, scope: !4245)
!4330 = !DILocation(line: 2899, column: 28, scope: !4245)
!4331 = !DILocation(line: 2901, column: 3, scope: !4245)
!4332 = !DILocation(line: 2899, column: 4, scope: !4245)
!4333 = !DILocation(line: 2907, column: 10, scope: !4235)
!4334 = !DILocation(line: 2907, column: 8, scope: !4235)
!4335 = !DILocation(line: 2908, column: 3, scope: !4235)
!4336 = !DILocation(line: 2908, column: 24, scope: !4235)
!4337 = !DILocation(line: 2909, column: 3, scope: !4235)
!4338 = !DILocation(line: 2909, column: 22, scope: !4235)
!4339 = !DILocation(line: 2910, column: 3, scope: !4235)
!4340 = !DILocation(line: 2910, column: 26, scope: !4235)
!4341 = !DILocation(line: 2911, column: 3, scope: !4235)
!4342 = !DILocation(line: 2912, column: 47, scope: !4235)
!4343 = !DILocation(line: 2912, column: 18, scope: !4235)
!4344 = !DILocation(line: 2913, column: 7, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 2913, column: 7)
!4346 = !DILocation(line: 2913, column: 7, scope: !4235)
!4347 = !DILocation(line: 2914, column: 36, scope: !4345)
!4348 = !DILocation(line: 2914, column: 5, scope: !4345)
!4349 = !DILocation(line: 2918, column: 10, scope: !4235)
!4350 = !DILocation(line: 2918, column: 8, scope: !4235)
!4351 = !DILocation(line: 2921, column: 3, scope: !4235)
!4352 = !DILocation(line: 2925, column: 3, scope: !4235)
!4353 = !DILocation(line: 2928, column: 3, scope: !4235)
!4354 = !DILocation(line: 2930, column: 10, scope: !4235)
!4355 = !DILocation(line: 2930, column: 3, scope: !4235)
!4356 = !DILocation(line: 2931, column: 1, scope: !4235)
!4357 = distinct !DISubprogram(name: "implicit_decl_warning", scope: !3, file: !3, line: 2810, type: !3480, scopeLine: 2811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4358)
!4358 = !{!4359, !4360, !4361}
!4359 = !DILocalVariable(name: "id", arg: 1, scope: !4357, file: !3, line: 2810, type: !672)
!4360 = !DILocalVariable(name: "olddecl", arg: 2, scope: !4357, file: !3, line: 2810, type: !672)
!4361 = !DILocalVariable(name: "warned", scope: !4362, file: !3, line: 2814, type: !619)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 2813, column: 5)
!4363 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2812, column: 7)
!4364 = !DILocation(line: 0, scope: !4357)
!4365 = !DILocation(line: 2812, column: 7, scope: !4363)
!4366 = !DILocation(line: 2812, column: 7, scope: !4357)
!4367 = !DILocation(line: 2816, column: 11, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 2816, column: 11)
!4369 = !DILocation(line: 2816, column: 11, scope: !4362)
!4370 = !DILocation(line: 2817, column: 20, scope: !4368)
!4371 = !DILocation(line: 2817, column: 11, scope: !4368)
!4372 = !DILocation(line: 0, scope: !4362)
!4373 = !DILocation(line: 2817, column: 2, scope: !4368)
!4374 = !DILocation(line: 2820, column: 11, scope: !4368)
!4375 = !DILocation(line: 0, scope: !4368)
!4376 = !DILocation(line: 2822, column: 11, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 2822, column: 11)
!4378 = !DILocation(line: 2822, column: 22, scope: !4377)
!4379 = !DILocation(line: 2822, column: 19, scope: !4377)
!4380 = !DILocation(line: 2823, column: 2, scope: !4377)
!4381 = !DILocation(line: 2825, column: 1, scope: !4357)
!4382 = distinct !DISubprogram(name: "locate_old_decl", scope: !3, file: !3, line: 1619, type: !2872, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4383)
!4383 = !{!4384}
!4384 = !DILocalVariable(name: "decl", arg: 1, scope: !4382, file: !3, line: 1619, type: !672)
!4385 = !DILocation(line: 0, scope: !4382)
!4386 = !DILocation(line: 1621, column: 7, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1621, column: 7)
!4388 = !DILocation(line: 1621, column: 24, scope: !4387)
!4389 = !DILocation(line: 1621, column: 41, scope: !4387)
!4390 = !DILocation(line: 1621, column: 44, scope: !4387)
!4391 = !DILocation(line: 1621, column: 7, scope: !4382)
!4392 = !DILocation(line: 1623, column: 12, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 1623, column: 12)
!4394 = !DILocation(line: 1623, column: 12, scope: !4387)
!4395 = !DILocation(line: 1624, column: 13, scope: !4393)
!4396 = !DILocation(line: 1624, column: 5, scope: !4393)
!4397 = !DILocation(line: 1625, column: 12, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 1625, column: 12)
!4399 = !DILocation(line: 0, scope: !4398)
!4400 = !DILocation(line: 1625, column: 12, scope: !4393)
!4401 = !DILocation(line: 1626, column: 5, scope: !4398)
!4402 = !DILocation(line: 1628, column: 5, scope: !4398)
!4403 = !DILocation(line: 1629, column: 1, scope: !4382)
!4404 = !DILocation(line: 0, scope: !2233)
!4405 = !DILocation(line: 2944, column: 7, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 2944, column: 7)
!4407 = !DILocation(line: 2944, column: 29, scope: !4406)
!4408 = !DILocation(line: 2944, column: 7, scope: !2233)
!4409 = !DILocation(line: 2946, column: 7, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 2945, column: 5)
!4411 = !DILocation(line: 2947, column: 15, scope: !4410)
!4412 = !DILocation(line: 2948, column: 5, scope: !4410)
!4413 = !DILocation(line: 2951, column: 7, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 2950, column: 5)
!4415 = !DILocation(line: 2952, column: 12, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2952, column: 11)
!4417 = !DILocation(line: 2952, column: 11, scope: !4414)
!4418 = !DILocation(line: 2954, column: 11, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 2953, column: 2)
!4420 = !DILocation(line: 2956, column: 12, scope: !4419)
!4421 = !DILocation(line: 2957, column: 2, scope: !4419)
!4422 = !DILocation(line: 2961, column: 15, scope: !4414)
!4423 = !DILocation(line: 0, scope: !4406)
!4424 = !DILocation(line: 2963, column: 13, scope: !2233)
!4425 = !DILocation(line: 2963, column: 3, scope: !2233)
!4426 = !DILocation(line: 2965, column: 1, scope: !2233)
!4427 = distinct !DISubprogram(name: "lookup_label", scope: !3, file: !3, line: 2997, type: !2812, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4428)
!4428 = !{!4429, !4430, !4431}
!4429 = !DILocalVariable(name: "name", arg: 1, scope: !4427, file: !3, line: 2997, type: !672)
!4430 = !DILocalVariable(name: "label", scope: !4427, file: !3, line: 2999, type: !672)
!4431 = !DILocalVariable(name: "label_vars", scope: !4427, file: !3, line: 3000, type: !2069)
!4432 = !DILocation(line: 0, scope: !4427)
!4433 = !DILocation(line: 3000, column: 3, scope: !4427)
!4434 = !DILocation(line: 3002, column: 7, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 3002, column: 7)
!4436 = !DILocation(line: 3002, column: 29, scope: !4435)
!4437 = !DILocation(line: 3002, column: 7, scope: !4427)
!4438 = !DILocation(line: 3004, column: 7, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 3003, column: 5)
!4440 = !DILocation(line: 3005, column: 7, scope: !4439)
!4441 = !DILocation(line: 3011, column: 11, scope: !4427)
!4442 = !DILocation(line: 3012, column: 7, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 3012, column: 7)
!4444 = !DILocation(line: 3012, column: 13, scope: !4443)
!4445 = !DILocation(line: 3012, column: 17, scope: !4443)
!4446 = !DILocation(line: 3012, column: 38, scope: !4443)
!4447 = !DILocation(line: 3013, column: 3, scope: !4443)
!4448 = !DILocation(line: 3013, column: 6, scope: !4443)
!4449 = !DILocation(line: 3012, column: 7, scope: !4427)
!4450 = !DILocation(line: 3018, column: 11, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 3018, column: 11)
!4452 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3014, column: 5)
!4453 = !DILocation(line: 3018, column: 32, scope: !4451)
!4454 = !DILocation(line: 3018, column: 11, scope: !4452)
!4455 = !DILocation(line: 3019, column: 33, scope: !4451)
!4456 = !DILocation(line: 3019, column: 2, scope: !4451)
!4457 = !DILocation(line: 3019, column: 31, scope: !4451)
!4458 = !DILocation(line: 3024, column: 23, scope: !4427)
!4459 = !DILocation(line: 3024, column: 11, scope: !4427)
!4460 = !DILocation(line: 3027, column: 28, scope: !4427)
!4461 = !DILocation(line: 3027, column: 52, scope: !4427)
!4462 = !DILocation(line: 3027, column: 3, scope: !4427)
!4463 = !DILocation(line: 3029, column: 3, scope: !4427)
!4464 = !DILocation(line: 3030, column: 1, scope: !4427)
!4465 = distinct !DISubprogram(name: "make_label", scope: !3, file: !3, line: 2972, type: !4466, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4469)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!672, !760, !672, !619, !4468}
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!4469 = !{!4470, !4471, !4472, !4473, !4474, !4475}
!4470 = !DILocalVariable(name: "location", arg: 1, scope: !4465, file: !3, line: 2972, type: !760)
!4471 = !DILocalVariable(name: "name", arg: 2, scope: !4465, file: !3, line: 2972, type: !672)
!4472 = !DILocalVariable(name: "defining", arg: 3, scope: !4465, file: !3, line: 2972, type: !619)
!4473 = !DILocalVariable(name: "p_label_vars", arg: 4, scope: !4465, file: !3, line: 2973, type: !4468)
!4474 = !DILocalVariable(name: "label", scope: !4465, file: !3, line: 2975, type: !672)
!4475 = !DILocalVariable(name: "label_vars", scope: !4465, file: !3, line: 2976, type: !2069)
!4476 = !DILocation(line: 0, scope: !4465)
!4477 = !DILocation(line: 2975, column: 16, scope: !4465)
!4478 = !DILocation(line: 2978, column: 26, scope: !4465)
!4479 = !DILocation(line: 2978, column: 3, scope: !4465)
!4480 = !DILocation(line: 2978, column: 24, scope: !4465)
!4481 = !DILocation(line: 2979, column: 3, scope: !4465)
!4482 = !DILocation(line: 2979, column: 21, scope: !4465)
!4483 = !DILocation(line: 2981, column: 16, scope: !4465)
!4484 = !DILocation(line: 2982, column: 15, scope: !4465)
!4485 = !DILocation(line: 2982, column: 24, scope: !4465)
!4486 = !DILocation(line: 2983, column: 35, scope: !4465)
!4487 = !DILocation(line: 2983, column: 3, scope: !4465)
!4488 = !DILocation(line: 2984, column: 32, scope: !4465)
!4489 = !DILocation(line: 2984, column: 15, scope: !4465)
!4490 = !DILocation(line: 2984, column: 30, scope: !4465)
!4491 = !DILocation(line: 2985, column: 23, scope: !4465)
!4492 = !DILocation(line: 2985, column: 15, scope: !4465)
!4493 = !DILocation(line: 2985, column: 21, scope: !4465)
!4494 = !DILocation(line: 2986, column: 17, scope: !4465)
!4495 = !DILocation(line: 2988, column: 3, scope: !4465)
!4496 = distinct !DISubprogram(name: "bind_label", scope: !3, file: !3, line: 665, type: !4497, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4499)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{null, !672, !672, !2077, !2069}
!4499 = !{!4500, !4501, !4502, !4503, !4504}
!4500 = !DILocalVariable(name: "name", arg: 1, scope: !4496, file: !3, line: 665, type: !672)
!4501 = !DILocalVariable(name: "label", arg: 2, scope: !4496, file: !3, line: 665, type: !672)
!4502 = !DILocalVariable(name: "scope", arg: 3, scope: !4496, file: !3, line: 665, type: !2077)
!4503 = !DILocalVariable(name: "label_vars", arg: 4, scope: !4496, file: !3, line: 666, type: !2069)
!4504 = !DILocalVariable(name: "b", scope: !4496, file: !3, line: 668, type: !2061)
!4505 = !DILocation(line: 0, scope: !4496)
!4506 = !DILocation(line: 670, column: 3, scope: !4496)
!4507 = !DILocation(line: 673, column: 10, scope: !4496)
!4508 = !DILocation(line: 673, column: 29, scope: !4496)
!4509 = !DILocation(line: 675, column: 14, scope: !4496)
!4510 = !DILocation(line: 676, column: 3, scope: !4496)
!4511 = !DILocation(line: 677, column: 31, scope: !4496)
!4512 = !DILocation(line: 677, column: 24, scope: !4496)
!4513 = !DILocation(line: 678, column: 8, scope: !4496)
!4514 = !DILocation(line: 678, column: 14, scope: !4496)
!4515 = !DILocation(line: 679, column: 1, scope: !4496)
!4516 = distinct !DISubprogram(name: "lookup_label_for_goto", scope: !3, file: !3, line: 3052, type: !4236, scopeLine: 3053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4517)
!4517 = !{!4518, !4519, !4520, !4521, !4522, !4523, !4524}
!4518 = !DILocalVariable(name: "loc", arg: 1, scope: !4516, file: !3, line: 3052, type: !760)
!4519 = !DILocalVariable(name: "name", arg: 2, scope: !4516, file: !3, line: 3052, type: !672)
!4520 = !DILocalVariable(name: "label", scope: !4516, file: !3, line: 3054, type: !672)
!4521 = !DILocalVariable(name: "label_vars", scope: !4516, file: !3, line: 3055, type: !2069)
!4522 = !DILocalVariable(name: "ix", scope: !4516, file: !3, line: 3056, type: !7)
!4523 = !DILocalVariable(name: "decl", scope: !4516, file: !3, line: 3057, type: !672)
!4524 = !DILocalVariable(name: "g", scope: !4525, file: !3, line: 3077, type: !2111)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 3076, column: 5)
!4526 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3075, column: 7)
!4527 = !DILocation(line: 0, scope: !4516)
!4528 = !DILocation(line: 3057, column: 3, scope: !4516)
!4529 = !DILocation(line: 3059, column: 11, scope: !4516)
!4530 = !DILocation(line: 3060, column: 13, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3060, column: 7)
!4532 = !DILocation(line: 3060, column: 7, scope: !4516)
!4533 = !DILocation(line: 3065, column: 7, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3065, column: 7)
!4535 = !DILocation(line: 3065, column: 31, scope: !4534)
!4536 = !DILocation(line: 3065, column: 28, scope: !4534)
!4537 = !DILocation(line: 3065, column: 7, scope: !4516)
!4538 = !DILocation(line: 3067, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 3066, column: 5)
!4540 = !DILocation(line: 3071, column: 16, scope: !4516)
!4541 = !DILocation(line: 3071, column: 42, scope: !4516)
!4542 = !DILocation(line: 3075, column: 34, scope: !4526)
!4543 = !DILocation(line: 3075, column: 40, scope: !4526)
!4544 = !DILocation(line: 3075, column: 7, scope: !4516)
!4545 = !DILocation(line: 0, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 3094, column: 3)
!4547 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3094, column: 3)
!4548 = !DILocation(line: 3094, column: 3, scope: !4547)
!4549 = !DILocation(line: 3079, column: 11, scope: !4525)
!4550 = !DILocation(line: 0, scope: !4525)
!4551 = !DILocation(line: 3080, column: 10, scope: !4525)
!4552 = !DILocation(line: 3080, column: 14, scope: !4525)
!4553 = !DILocation(line: 3081, column: 30, scope: !4525)
!4554 = !DILocation(line: 3081, column: 7, scope: !4525)
!4555 = !DILocation(line: 3082, column: 7, scope: !4525)
!4556 = !DILocation(line: 0, scope: !4547)
!4557 = !DILocation(line: 3094, column: 16, scope: !4546)
!4558 = !DILocation(line: 3095, column: 34, scope: !4546)
!4559 = !DILocation(line: 3095, column: 5, scope: !4546)
!4560 = !DILocation(line: 3094, column: 74, scope: !4546)
!4561 = !DILocation(line: 3094, column: 3, scope: !4546)
!4562 = distinct !{!4562, !4548, !4563}
!4563 = !DILocation(line: 3095, column: 38, scope: !4547)
!4564 = !DILocation(line: 3097, column: 34, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3097, column: 7)
!4566 = !DILocation(line: 3097, column: 7, scope: !4565)
!4567 = !DILocation(line: 3097, column: 7, scope: !4516)
!4568 = !DILocation(line: 3099, column: 7, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 3098, column: 5)
!4570 = !DILocation(line: 3100, column: 15, scope: !4569)
!4571 = !DILocation(line: 3100, column: 7, scope: !4569)
!4572 = !DILocation(line: 3101, column: 5, scope: !4569)
!4573 = !DILocation(line: 3104, column: 1, scope: !4516)
!4574 = distinct !DISubprogram(name: "set_spot_bindings", scope: !3, file: !3, line: 756, type: !4575, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4577)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{null, !2137, !619}
!4577 = !{!4578, !4579}
!4578 = !DILocalVariable(name: "p", arg: 1, scope: !4574, file: !3, line: 756, type: !2137)
!4579 = !DILocalVariable(name: "defining", arg: 2, scope: !4574, file: !3, line: 756, type: !619)
!4580 = !DILocation(line: 0, scope: !4574)
!4581 = !DILocation(line: 758, column: 7, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 758, column: 7)
!4583 = !DILocation(line: 758, column: 7, scope: !4574)
!4584 = !DILocation(line: 760, column: 18, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 759, column: 5)
!4586 = !DILocation(line: 760, column: 16, scope: !4585)
!4587 = !DILocation(line: 761, column: 30, scope: !4585)
!4588 = !DILocation(line: 761, column: 45, scope: !4585)
!4589 = !DILocation(line: 761, column: 10, scope: !4585)
!4590 = !DILocation(line: 761, column: 28, scope: !4585)
!4591 = !DILocation(line: 762, column: 5, scope: !4585)
!4592 = !DILocation(line: 765, column: 10, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 764, column: 5)
!4594 = !DILocation(line: 765, column: 16, scope: !4593)
!4595 = !DILocation(line: 766, column: 10, scope: !4593)
!4596 = !DILocation(line: 766, column: 28, scope: !4593)
!4597 = !DILocation(line: 768, column: 6, scope: !4574)
!4598 = !DILocation(line: 768, column: 17, scope: !4574)
!4599 = !DILocation(line: 769, column: 6, scope: !4574)
!4600 = !DILocation(line: 769, column: 21, scope: !4574)
!4601 = !DILocation(line: 770, column: 1, scope: !4574)
!4602 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_gc_safe_push", scope: !3, file: !3, line: 303, type: !4603, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4606)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!3731, !4605, !2110}
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!4606 = !{!4607, !4608}
!4607 = !DILocalVariable(name: "vec_", arg: 1, scope: !4602, file: !3, line: 303, type: !4605)
!4608 = !DILocalVariable(name: "obj_", arg: 2, scope: !4602, file: !3, line: 303, type: !2110)
!4609 = !DILocation(line: 0, scope: !4602)
!4610 = !DILocation(line: 303, column: 1, scope: !4602)
!4611 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !135, file: !135, line: 182, type: !4612, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!620, !4614, !7, !996}
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!4616 = !{!4617, !4618, !4619}
!4617 = !DILocalVariable(name: "vec_", arg: 1, scope: !4611, file: !135, line: 182, type: !4614)
!4618 = !DILocalVariable(name: "ix_", arg: 2, scope: !4611, file: !135, line: 182, type: !7)
!4619 = !DILocalVariable(name: "ptr", arg: 3, scope: !4611, file: !135, line: 182, type: !996)
!4620 = !DILocation(line: 0, scope: !4611)
!4621 = !DILocation(line: 182, column: 1, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4611, file: !135, line: 182, column: 1)
!4623 = !DILocation(line: 182, column: 1, scope: !4611)
!4624 = !DILocation(line: 182, column: 1, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !135, line: 182, column: 1)
!4626 = !DILocation(line: 182, column: 1, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !135, line: 182, column: 1)
!4628 = !DILocation(line: 0, scope: !4622)
!4629 = distinct !DISubprogram(name: "warn_about_goto", scope: !3, file: !3, line: 3036, type: !4630, scopeLine: 3037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4632)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !760, !672, !672}
!4632 = !{!4633, !4634, !4635}
!4633 = !DILocalVariable(name: "goto_loc", arg: 1, scope: !4629, file: !3, line: 3036, type: !760)
!4634 = !DILocalVariable(name: "label", arg: 2, scope: !4629, file: !3, line: 3036, type: !672)
!4635 = !DILocalVariable(name: "decl", arg: 3, scope: !4629, file: !3, line: 3036, type: !672)
!4636 = !DILocation(line: 0, scope: !4629)
!4637 = !DILocation(line: 3038, column: 33, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 3038, column: 7)
!4639 = !DILocation(line: 3038, column: 7, scope: !4638)
!4640 = !DILocation(line: 3038, column: 7, scope: !4629)
!4641 = !DILocation(line: 3039, column: 5, scope: !4638)
!4642 = !DILocation(line: 3042, column: 5, scope: !4638)
!4643 = !DILocation(line: 3044, column: 11, scope: !4629)
!4644 = !DILocation(line: 3044, column: 3, scope: !4629)
!4645 = !DILocation(line: 3045, column: 11, scope: !4629)
!4646 = !DILocation(line: 3045, column: 3, scope: !4629)
!4647 = !DILocation(line: 3046, column: 1, scope: !4629)
!4648 = distinct !DISubprogram(name: "declare_label", scope: !3, file: !3, line: 3111, type: !2812, scopeLine: 3112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4649)
!4649 = !{!4650, !4651, !4652, !4653}
!4650 = !DILocalVariable(name: "name", arg: 1, scope: !4648, file: !3, line: 3111, type: !672)
!4651 = !DILocalVariable(name: "b", scope: !4648, file: !3, line: 3113, type: !2061)
!4652 = !DILocalVariable(name: "label", scope: !4648, file: !3, line: 3114, type: !672)
!4653 = !DILocalVariable(name: "label_vars", scope: !4648, file: !3, line: 3115, type: !2069)
!4654 = !DILocation(line: 0, scope: !4648)
!4655 = !DILocation(line: 3113, column: 25, scope: !4648)
!4656 = !DILocation(line: 3115, column: 3, scope: !4648)
!4657 = !DILocation(line: 3119, column: 7, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 3119, column: 7)
!4659 = !DILocation(line: 3119, column: 9, scope: !4658)
!4660 = !DILocation(line: 3119, column: 12, scope: !4658)
!4661 = !DILocation(line: 3119, column: 7, scope: !4648)
!4662 = !DILocation(line: 3121, column: 7, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 3120, column: 5)
!4664 = !DILocation(line: 3122, column: 27, scope: !4663)
!4665 = !DILocation(line: 3122, column: 7, scope: !4663)
!4666 = !DILocation(line: 3125, column: 17, scope: !4663)
!4667 = !DILocation(line: 3125, column: 7, scope: !4663)
!4668 = !DILocation(line: 3128, column: 23, scope: !4648)
!4669 = !DILocation(line: 3128, column: 11, scope: !4648)
!4670 = !DILocation(line: 3129, column: 3, scope: !4648)
!4671 = !DILocation(line: 3129, column: 33, scope: !4648)
!4672 = !DILocation(line: 3132, column: 28, scope: !4648)
!4673 = !DILocation(line: 3132, column: 43, scope: !4648)
!4674 = !DILocation(line: 3132, column: 3, scope: !4648)
!4675 = !DILocation(line: 3134, column: 3, scope: !4648)
!4676 = !DILocation(line: 3135, column: 1, scope: !4648)
!4677 = distinct !DISubprogram(name: "define_label", scope: !3, file: !3, line: 3201, type: !4236, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4678)
!4678 = !{!4679, !4680, !4681, !4682, !4686}
!4679 = !DILocalVariable(name: "location", arg: 1, scope: !4677, file: !3, line: 3201, type: !760)
!4680 = !DILocalVariable(name: "name", arg: 2, scope: !4677, file: !3, line: 3201, type: !672)
!4681 = !DILocalVariable(name: "label", scope: !4677, file: !3, line: 3207, type: !672)
!4682 = !DILocalVariable(name: "label_vars", scope: !4683, file: !3, line: 3221, type: !2069)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 3220, column: 5)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 3219, column: 12)
!4685 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 3209, column: 7)
!4686 = !DILocalVariable(name: "label_vars", scope: !4687, file: !3, line: 3235, type: !2069)
!4687 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 3234, column: 5)
!4688 = !DILocation(line: 0, scope: !4677)
!4689 = !DILocation(line: 3207, column: 16, scope: !4677)
!4690 = !DILocation(line: 3210, column: 7, scope: !4685)
!4691 = !DILocation(line: 3210, column: 12, scope: !4685)
!4692 = !DILocation(line: 3210, column: 36, scope: !4685)
!4693 = !DILocation(line: 3210, column: 33, scope: !4685)
!4694 = !DILocation(line: 3211, column: 5, scope: !4685)
!4695 = !DILocation(line: 3211, column: 8, scope: !4685)
!4696 = !DILocation(line: 3211, column: 29, scope: !4685)
!4697 = !DILocation(line: 3212, column: 4, scope: !4685)
!4698 = !DILocation(line: 3213, column: 8, scope: !4685)
!4699 = !DILocation(line: 3213, column: 11, scope: !4685)
!4700 = !DILocation(line: 3209, column: 7, scope: !4677)
!4701 = !DILocation(line: 3215, column: 7, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 3214, column: 5)
!4703 = !DILocation(line: 3216, column: 7, scope: !4702)
!4704 = !DILocation(line: 3217, column: 7, scope: !4702)
!4705 = !DILocation(line: 3219, column: 12, scope: !4685)
!4706 = !DILocation(line: 3221, column: 67, scope: !4683)
!4707 = !DILocation(line: 0, scope: !4683)
!4708 = !DILocation(line: 3226, column: 7, scope: !4683)
!4709 = !DILocation(line: 3226, column: 36, scope: !4683)
!4710 = !DILocation(line: 3227, column: 39, scope: !4683)
!4711 = !DILocation(line: 3227, column: 7, scope: !4683)
!4712 = !DILocation(line: 3231, column: 7, scope: !4683)
!4713 = !DILocation(line: 3232, column: 5, scope: !4683)
!4714 = !DILocation(line: 3235, column: 7, scope: !4687)
!4715 = !DILocation(line: 0, scope: !4687)
!4716 = !DILocation(line: 3238, column: 15, scope: !4687)
!4717 = !DILocation(line: 3241, column: 32, scope: !4687)
!4718 = !DILocation(line: 3241, column: 56, scope: !4687)
!4719 = !DILocation(line: 3241, column: 7, scope: !4687)
!4720 = !DILocation(line: 3242, column: 5, scope: !4684)
!4721 = !DILocation(line: 3244, column: 8, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 3244, column: 7)
!4723 = !DILocation(line: 3244, column: 25, scope: !4722)
!4724 = !DILocation(line: 3244, column: 28, scope: !4722)
!4725 = !DILocation(line: 3244, column: 7, scope: !4677)
!4726 = !DILocation(line: 3245, column: 5, scope: !4722)
!4727 = !DILocation(line: 3250, column: 26, scope: !4677)
!4728 = !DILocation(line: 3250, column: 3, scope: !4677)
!4729 = !DILocation(line: 3250, column: 24, scope: !4677)
!4730 = !DILocation(line: 3251, column: 3, scope: !4677)
!4731 = !DILocation(line: 3252, column: 1, scope: !4677)
!4732 = distinct !DISubprogram(name: "check_earlier_gotos", scope: !3, file: !3, line: 3141, type: !4733, scopeLine: 3142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4735)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{null, !672, !2069}
!4735 = !{!4736, !4737, !4738, !4739, !4740, !4744}
!4736 = !DILocalVariable(name: "label", arg: 1, scope: !4732, file: !3, line: 3141, type: !672)
!4737 = !DILocalVariable(name: "label_vars", arg: 2, scope: !4732, file: !3, line: 3141, type: !2069)
!4738 = !DILocalVariable(name: "ix", scope: !4732, file: !3, line: 3143, type: !7)
!4739 = !DILocalVariable(name: "g", scope: !4732, file: !3, line: 3144, type: !2111)
!4740 = !DILocalVariable(name: "b", scope: !4741, file: !3, line: 3150, type: !2061)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 3149, column: 5)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 3146, column: 3)
!4743 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 3146, column: 3)
!4744 = !DILocalVariable(name: "scope", scope: !4741, file: !3, line: 3151, type: !2077)
!4745 = !DILocation(line: 0, scope: !4732)
!4746 = !DILocation(line: 3144, column: 3, scope: !4732)
!4747 = !DILocation(line: 0, scope: !4742)
!4748 = !DILocation(line: 0, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 3166, column: 7)
!4750 = !DILocation(line: 0, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 3171, column: 8)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3169, column: 2)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 3166, column: 7)
!4754 = !DILocation(line: 0, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 3183, column: 2)
!4756 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 3182, column: 11)
!4757 = !DILocation(line: 3146, column: 8, scope: !4743)
!4758 = !DILocation(line: 0, scope: !4743)
!4759 = !DILocation(line: 3147, column: 8, scope: !4742)
!4760 = !DILocation(line: 3146, column: 3, scope: !4743)
!4761 = !DILocation(line: 3156, column: 16, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 3156, column: 7)
!4763 = !DILocation(line: 3156, column: 33, scope: !4762)
!4764 = !DILocation(line: 3156, column: 40, scope: !4762)
!4765 = !DILocation(line: 3156, column: 12, scope: !4762)
!4766 = !DILocation(line: 3157, column: 10, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 3156, column: 7)
!4768 = !DILocation(line: 0, scope: !4762)
!4769 = !DILocation(line: 0, scope: !4741)
!4770 = !DILocation(line: 3157, column: 27, scope: !4767)
!4771 = !DILocation(line: 3157, column: 7, scope: !4767)
!4772 = !DILocation(line: 3156, column: 7, scope: !4762)
!4773 = !DILocation(line: 3160, column: 29, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 3160, column: 8)
!4775 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 3159, column: 2)
!4776 = !DILocation(line: 3160, column: 8, scope: !4774)
!4777 = !DILocation(line: 3160, column: 8, scope: !4775)
!4778 = !DILocation(line: 3161, column: 23, scope: !4774)
!4779 = !DILocation(line: 3161, column: 26, scope: !4774)
!4780 = !DILocation(line: 3161, column: 41, scope: !4774)
!4781 = !DILocation(line: 3161, column: 6, scope: !4774)
!4782 = !DILocation(line: 3158, column: 12, scope: !4767)
!4783 = !DILocation(line: 3156, column: 7, scope: !4767)
!4784 = distinct !{!4784, !4772, !4785}
!4785 = !DILocation(line: 3162, column: 2, scope: !4762)
!4786 = !DILocation(line: 3166, column: 12, scope: !4749)
!4787 = !DILocation(line: 3167, column: 14, scope: !4753)
!4788 = !DILocation(line: 3167, column: 31, scope: !4753)
!4789 = !DILocation(line: 3167, column: 11, scope: !4753)
!4790 = !DILocation(line: 3166, column: 7, scope: !4749)
!4791 = !DILocation(line: 3170, column: 4, scope: !4752)
!4792 = !DILocation(line: 3171, column: 44, scope: !4751)
!4793 = !DILocation(line: 3171, column: 14, scope: !4751)
!4794 = !DILocation(line: 3171, column: 8, scope: !4752)
!4795 = !DILocation(line: 3172, column: 6, scope: !4751)
!4796 = !DILocation(line: 3174, column: 17, scope: !4751)
!4797 = !DILocation(line: 3175, column: 4, scope: !4752)
!4798 = !DILocation(line: 0, scope: !4752)
!4799 = !DILocation(line: 3175, column: 13, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 3175, column: 4)
!4801 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 3175, column: 4)
!4802 = !DILocation(line: 3175, column: 4, scope: !4801)
!4803 = !DILocation(line: 3177, column: 33, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 3177, column: 12)
!4805 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 3176, column: 6)
!4806 = !DILocation(line: 3177, column: 12, scope: !4804)
!4807 = !DILocation(line: 3177, column: 12, scope: !4805)
!4808 = !DILocation(line: 3178, column: 20, scope: !4804)
!4809 = !DILocation(line: 3178, column: 23, scope: !4804)
!4810 = !DILocation(line: 3178, column: 38, scope: !4804)
!4811 = !DILocation(line: 3178, column: 3, scope: !4804)
!4812 = !DILocation(line: 3175, column: 29, scope: !4800)
!4813 = !DILocation(line: 3175, column: 4, scope: !4800)
!4814 = distinct !{!4814, !4802, !4815}
!4815 = !DILocation(line: 3179, column: 6, scope: !4801)
!4816 = !DILocation(line: 3168, column: 20, scope: !4753)
!4817 = !DILocation(line: 3166, column: 7, scope: !4753)
!4818 = distinct !{!4818, !4790, !4819}
!4819 = !DILocation(line: 3180, column: 2, scope: !4749)
!4820 = !DILocation(line: 3182, column: 28, scope: !4756)
!4821 = !DILocation(line: 3182, column: 39, scope: !4756)
!4822 = !DILocation(line: 3182, column: 11, scope: !4741)
!4823 = !DILocation(line: 3184, column: 17, scope: !4755)
!4824 = !DILocation(line: 3184, column: 4, scope: !4755)
!4825 = !DILocation(line: 3185, column: 12, scope: !4755)
!4826 = !DILocation(line: 3185, column: 4, scope: !4755)
!4827 = !DILocation(line: 3187, column: 2, scope: !4755)
!4828 = !DILocation(line: 3148, column: 8, scope: !4742)
!4829 = !DILocation(line: 3146, column: 3, scope: !4742)
!4830 = distinct !{!4830, !4760, !4831}
!4831 = !DILocation(line: 3188, column: 5, scope: !4743)
!4832 = !DILocation(line: 3192, column: 3, scope: !4732)
!4833 = !DILocation(line: 3193, column: 21, scope: !4732)
!4834 = !DILocation(line: 3194, column: 1, scope: !4732)
!4835 = distinct !DISubprogram(name: "lookup_name", scope: !3, file: !3, line: 3401, type: !2812, scopeLine: 3402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4836)
!4836 = !{!4837, !4838}
!4837 = !DILocalVariable(name: "name", arg: 1, scope: !4835, file: !3, line: 3401, type: !672)
!4838 = !DILocalVariable(name: "b", scope: !4835, file: !3, line: 3403, type: !2061)
!4839 = !DILocation(line: 0, scope: !4835)
!4840 = !DILocation(line: 3403, column: 25, scope: !4835)
!4841 = !DILocation(line: 3404, column: 7, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 3404, column: 7)
!4843 = !DILocation(line: 3404, column: 9, scope: !4842)
!4844 = !DILocation(line: 3404, column: 16, scope: !4842)
!4845 = !DILocation(line: 3404, column: 13, scope: !4842)
!4846 = !DILocation(line: 3404, column: 7, scope: !4835)
!4847 = !DILocation(line: 3405, column: 15, scope: !4842)
!4848 = !DILocation(line: 3405, column: 5, scope: !4842)
!4849 = !DILocation(line: 3407, column: 1, scope: !4835)
!4850 = distinct !DISubprogram(name: "c_get_switch_bindings", scope: !3, file: !3, line: 3259, type: !4851, scopeLine: 3260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!2137}
!4853 = !{!4854}
!4854 = !DILocalVariable(name: "switch_bindings", scope: !4850, file: !3, line: 3261, type: !2137)
!4855 = !DILocation(line: 3263, column: 21, scope: !4850)
!4856 = !DILocation(line: 0, scope: !4850)
!4857 = !DILocation(line: 3264, column: 3, scope: !4850)
!4858 = !DILocation(line: 3265, column: 3, scope: !4850)
!4859 = distinct !DISubprogram(name: "c_release_switch_bindings", scope: !3, file: !3, line: 3269, type: !3658, scopeLine: 3270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4860)
!4860 = !{!4861}
!4861 = !DILocalVariable(name: "bindings", arg: 1, scope: !4859, file: !3, line: 3269, type: !2137)
!4862 = !DILocation(line: 0, scope: !4859)
!4863 = !DILocation(line: 3271, column: 3, scope: !4859)
!4864 = !DILocation(line: 3272, column: 3, scope: !4859)
!4865 = !DILocation(line: 3273, column: 1, scope: !4859)
!4866 = distinct !DISubprogram(name: "c_check_switch_jump_warnings", scope: !3, file: !3, line: 3280, type: !4867, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4869)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!619, !2137, !760, !760}
!4869 = !{!4870, !4871, !4872, !4873, !4874, !4875}
!4870 = !DILocalVariable(name: "switch_bindings", arg: 1, scope: !4866, file: !3, line: 3280, type: !2137)
!4871 = !DILocalVariable(name: "switch_loc", arg: 2, scope: !4866, file: !3, line: 3281, type: !760)
!4872 = !DILocalVariable(name: "case_loc", arg: 3, scope: !4866, file: !3, line: 3281, type: !760)
!4873 = !DILocalVariable(name: "saw_error", scope: !4866, file: !3, line: 3283, type: !619)
!4874 = !DILocalVariable(name: "scope", scope: !4866, file: !3, line: 3284, type: !2077)
!4875 = !DILocalVariable(name: "b", scope: !4876, file: !3, line: 3291, type: !2061)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 3290, column: 5)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 3287, column: 3)
!4878 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 3287, column: 3)
!4879 = !DILocation(line: 0, scope: !4866)
!4880 = !DILocation(line: 0, scope: !4877)
!4881 = !DILocation(line: 3287, column: 8, scope: !4878)
!4882 = !DILocation(line: 3286, column: 13, scope: !4866)
!4883 = !DILocation(line: 0, scope: !4878)
!4884 = !DILocation(line: 3288, column: 34, scope: !4877)
!4885 = !DILocation(line: 3288, column: 14, scope: !4877)
!4886 = !DILocation(line: 3287, column: 3, scope: !4878)
!4887 = !DILocation(line: 3293, column: 7, scope: !4876)
!4888 = !DILocation(line: 3294, column: 23, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 3294, column: 7)
!4890 = !DILocation(line: 3294, column: 12, scope: !4889)
!4891 = !DILocation(line: 0, scope: !4889)
!4892 = !DILocation(line: 0, scope: !4876)
!4893 = !DILocation(line: 3294, column: 35, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3294, column: 7)
!4895 = !DILocation(line: 3294, column: 7, scope: !4889)
!4896 = !DILocation(line: 3296, column: 29, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 3296, column: 8)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 3295, column: 2)
!4899 = !DILocation(line: 3296, column: 8, scope: !4897)
!4900 = !DILocation(line: 3296, column: 8, scope: !4898)
!4901 = !DILocation(line: 3298, column: 38, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 3298, column: 12)
!4903 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 3297, column: 6)
!4904 = !DILocation(line: 3298, column: 12, scope: !4902)
!4905 = !DILocation(line: 3298, column: 12, scope: !4903)
!4906 = !DILocation(line: 3301, column: 5, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 3299, column: 3)
!4908 = !DILocation(line: 3304, column: 3, scope: !4907)
!4909 = !DILocation(line: 3306, column: 3, scope: !4902)
!4910 = !DILocation(line: 3308, column: 8, scope: !4903)
!4911 = !DILocation(line: 3309, column: 16, scope: !4903)
!4912 = !DILocation(line: 3309, column: 8, scope: !4903)
!4913 = !DILocation(line: 3311, column: 6, scope: !4903)
!4914 = !DILocation(line: 3294, column: 51, scope: !4894)
!4915 = !DILocation(line: 3294, column: 7, scope: !4894)
!4916 = distinct !{!4916, !4895, !4917}
!4917 = !DILocation(line: 3312, column: 2, scope: !4889)
!4918 = !DILocation(line: 3289, column: 23, scope: !4877)
!4919 = !DILocation(line: 3287, column: 3, scope: !4877)
!4920 = distinct !{!4920, !4886, !4921}
!4921 = !DILocation(line: 3313, column: 5, scope: !4878)
!4922 = !DILocation(line: 3315, column: 24, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 3315, column: 7)
!4924 = !DILocation(line: 3315, column: 35, scope: !4923)
!4925 = !DILocation(line: 3315, column: 7, scope: !4866)
!4926 = !DILocation(line: 3318, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 3316, column: 5)
!4928 = !DILocation(line: 3319, column: 7, scope: !4927)
!4929 = !DILocation(line: 3320, column: 5, scope: !4927)
!4930 = !DILocation(line: 3322, column: 3, scope: !4866)
!4931 = distinct !DISubprogram(name: "decl_jump_unsafe", scope: !3, file: !3, line: 776, type: !4932, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4934)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!619, !672}
!4934 = !{!4935}
!4935 = !DILocalVariable(name: "decl", arg: 1, scope: !4931, file: !3, line: 776, type: !672)
!4936 = !DILocation(line: 0, scope: !4931)
!4937 = !DILocation(line: 778, column: 15, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 778, column: 7)
!4939 = !DILocation(line: 778, column: 12, scope: !4938)
!4940 = !DILocation(line: 778, column: 31, scope: !4938)
!4941 = !DILocation(line: 778, column: 34, scope: !4938)
!4942 = !DILocation(line: 778, column: 51, scope: !4938)
!4943 = !DILocation(line: 778, column: 7, scope: !4931)
!4944 = !DILocation(line: 782, column: 8, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 782, column: 7)
!4946 = !DILocation(line: 782, column: 25, scope: !4945)
!4947 = !DILocation(line: 782, column: 37, scope: !4945)
!4948 = !DILocation(line: 782, column: 57, scope: !4945)
!4949 = !DILocation(line: 783, column: 7, scope: !4945)
!4950 = !DILocation(line: 783, column: 10, scope: !4945)
!4951 = !DILocation(line: 782, column: 7, scope: !4931)
!4952 = !DILocation(line: 788, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 788, column: 7)
!4954 = !DILocation(line: 789, column: 7, scope: !4953)
!4955 = !DILocation(line: 789, column: 10, scope: !4953)
!4956 = !DILocation(line: 789, column: 27, scope: !4953)
!4957 = !DILocation(line: 790, column: 7, scope: !4953)
!4958 = !DILocation(line: 790, column: 11, scope: !4953)
!4959 = !DILocation(line: 791, column: 7, scope: !4953)
!4960 = !DILocation(line: 791, column: 10, scope: !4953)
!4961 = !DILocation(line: 791, column: 30, scope: !4953)
!4962 = !DILocation(line: 788, column: 7, scope: !4931)
!4963 = !DILocation(line: 794, column: 3, scope: !4931)
!4964 = !DILocation(line: 795, column: 1, scope: !4931)
!4965 = distinct !DISubprogram(name: "pending_xref_error", scope: !3, file: !3, line: 3386, type: !2978, scopeLine: 3387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2388)
!4966 = !DILocation(line: 3388, column: 7, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 3388, column: 7)
!4968 = !DILocation(line: 3388, column: 28, scope: !4967)
!4969 = !DILocation(line: 3388, column: 7, scope: !4965)
!4970 = !DILocation(line: 3389, column: 15, scope: !4967)
!4971 = !DILocation(line: 3389, column: 5, scope: !4967)
!4972 = !DILocation(line: 3391, column: 24, scope: !4965)
!4973 = !DILocation(line: 3392, column: 1, scope: !4965)
!4974 = distinct !DISubprogram(name: "c_init_decl_processing", scope: !3, file: !3, line: 3428, type: !2978, scopeLine: 3429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4975)
!4975 = !{!4976}
!4976 = !DILocalVariable(name: "save_loc", scope: !4974, file: !3, line: 3430, type: !760)
!4977 = !DILocation(line: 3430, column: 25, scope: !4974)
!4978 = !DILocation(line: 0, scope: !4974)
!4979 = !DILocation(line: 3433, column: 3, scope: !4974)
!4980 = !DILocation(line: 3435, column: 25, scope: !4974)
!4981 = !DILocation(line: 3437, column: 3, scope: !4974)
!4982 = !DILocation(line: 3440, column: 3, scope: !4974)
!4983 = !DILocation(line: 3441, column: 20, scope: !4974)
!4984 = !DILocation(line: 3441, column: 18, scope: !4974)
!4985 = !DILocation(line: 3446, column: 18, scope: !4974)
!4986 = !DILocation(line: 3448, column: 28, scope: !4974)
!4987 = !DILocation(line: 3448, column: 3, scope: !4974)
!4988 = !DILocation(line: 3450, column: 3, scope: !4974)
!4989 = !DILocation(line: 3453, column: 26, scope: !4974)
!4990 = !DILocation(line: 3453, column: 24, scope: !4974)
!4991 = !DILocation(line: 3454, column: 26, scope: !4974)
!4992 = !DILocation(line: 3454, column: 24, scope: !4974)
!4993 = !DILocation(line: 3455, column: 27, scope: !4974)
!4994 = !DILocation(line: 3455, column: 25, scope: !4974)
!4995 = !DILocation(line: 3458, column: 13, scope: !4974)
!4996 = !DILocation(line: 3458, column: 3, scope: !4974)
!4997 = !DILocation(line: 3461, column: 18, scope: !4974)
!4998 = !DILocation(line: 3463, column: 20, scope: !4974)
!4999 = !DILocation(line: 3465, column: 19, scope: !4974)
!5000 = !DILocation(line: 3466, column: 3, scope: !4974)
!5001 = !DILocation(line: 3467, column: 1, scope: !4974)
!5002 = distinct !DISubprogram(name: "c_make_fname_decl", scope: !3, file: !3, line: 3478, type: !5003, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5005)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{!672, !760, !672, !620}
!5005 = !{!5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013}
!5006 = !DILocalVariable(name: "loc", arg: 1, scope: !5002, file: !3, line: 3478, type: !760)
!5007 = !DILocalVariable(name: "id", arg: 2, scope: !5002, file: !3, line: 3478, type: !672)
!5008 = !DILocalVariable(name: "type_dep", arg: 3, scope: !5002, file: !3, line: 3478, type: !620)
!5009 = !DILocalVariable(name: "name", scope: !5002, file: !3, line: 3480, type: !625)
!5010 = !DILocalVariable(name: "decl", scope: !5002, file: !3, line: 3481, type: !672)
!5011 = !DILocalVariable(name: "type", scope: !5002, file: !3, line: 3481, type: !672)
!5012 = !DILocalVariable(name: "init", scope: !5002, file: !3, line: 3481, type: !672)
!5013 = !DILocalVariable(name: "length", scope: !5002, file: !3, line: 3482, type: !1107)
!5014 = !DILocation(line: 0, scope: !5002)
!5015 = !DILocation(line: 3480, column: 22, scope: !5002)
!5016 = !DILocation(line: 3482, column: 19, scope: !5002)
!5017 = !DILocation(line: 3484, column: 28, scope: !5002)
!5018 = !DILocation(line: 3485, column: 25, scope: !5002)
!5019 = !DILocation(line: 3485, column: 7, scope: !5002)
!5020 = !DILocation(line: 3484, column: 10, scope: !5002)
!5021 = !DILocation(line: 3486, column: 10, scope: !5002)
!5022 = !DILocation(line: 3488, column: 10, scope: !5002)
!5023 = !DILocation(line: 3490, column: 3, scope: !5002)
!5024 = !DILocation(line: 3490, column: 22, scope: !5002)
!5025 = !DILocation(line: 3491, column: 24, scope: !5002)
!5026 = !DILocation(line: 3492, column: 3, scope: !5002)
!5027 = !DILocation(line: 3492, column: 26, scope: !5002)
!5028 = !DILocation(line: 3494, column: 24, scope: !5002)
!5029 = !DILocation(line: 3494, column: 10, scope: !5002)
!5030 = !DILocation(line: 3495, column: 3, scope: !5002)
!5031 = !DILocation(line: 3496, column: 3, scope: !5002)
!5032 = !DILocation(line: 3496, column: 20, scope: !5002)
!5033 = !DILocation(line: 3497, column: 3, scope: !5002)
!5034 = !DILocation(line: 3497, column: 23, scope: !5002)
!5035 = !DILocation(line: 3499, column: 20, scope: !5002)
!5036 = !DILocation(line: 3501, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 3501, column: 7)
!5038 = !DILocation(line: 3510, column: 7, scope: !5037)
!5039 = !DILocation(line: 3510, column: 12, scope: !5037)
!5040 = !DILocation(line: 3510, column: 26, scope: !5037)
!5041 = !DILocation(line: 3510, column: 23, scope: !5037)
!5042 = !DILocation(line: 3512, column: 7, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 3511, column: 5)
!5044 = !DILocation(line: 3512, column: 27, scope: !5043)
!5045 = !DILocation(line: 3513, column: 7, scope: !5043)
!5046 = !DILocation(line: 3515, column: 5, scope: !5043)
!5047 = !DILocation(line: 3517, column: 3, scope: !5002)
!5048 = !DILocation(line: 3519, column: 3, scope: !5002)
!5049 = distinct !DISubprogram(name: "c_builtin_function", scope: !3, file: !3, line: 3523, type: !2812, scopeLine: 3524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5050)
!5050 = !{!5051, !5052, !5053, !5054}
!5051 = !DILocalVariable(name: "decl", arg: 1, scope: !5049, file: !3, line: 3523, type: !672)
!5052 = !DILocalVariable(name: "type", scope: !5049, file: !3, line: 3525, type: !672)
!5053 = !DILocalVariable(name: "id", scope: !5049, file: !3, line: 3526, type: !672)
!5054 = !DILocalVariable(name: "name", scope: !5049, file: !3, line: 3528, type: !625)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 3525, column: 15, scope: !5049)
!5057 = !DILocation(line: 3526, column: 15, scope: !5049)
!5058 = !DILocation(line: 3528, column: 22, scope: !5049)
!5059 = !DILocation(line: 3529, column: 38, scope: !5049)
!5060 = !DILocation(line: 3529, column: 60, scope: !5049)
!5061 = !DILocation(line: 3529, column: 3, scope: !5049)
!5062 = !DILocation(line: 3529, column: 35, scope: !5049)
!5063 = !DILocation(line: 3532, column: 3, scope: !5049)
!5064 = !DILocation(line: 3534, column: 19, scope: !5049)
!5065 = !DILocation(line: 3534, column: 3, scope: !5049)
!5066 = !DILocation(line: 3539, column: 7, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 3539, column: 7)
!5068 = !DILocation(line: 3539, column: 15, scope: !5067)
!5069 = !DILocation(line: 3539, column: 22, scope: !5067)
!5070 = !DILocation(line: 3539, column: 26, scope: !5067)
!5071 = !DILocation(line: 3539, column: 34, scope: !5067)
!5072 = !DILocation(line: 3539, column: 41, scope: !5067)
!5073 = !DILocation(line: 3539, column: 44, scope: !5067)
!5074 = !DILocation(line: 3539, column: 7, scope: !5049)
!5075 = !DILocation(line: 3541, column: 27, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 3540, column: 5)
!5077 = !DILocation(line: 3541, column: 7, scope: !5076)
!5078 = !DILocation(line: 3541, column: 25, scope: !5076)
!5079 = !DILocation(line: 3542, column: 24, scope: !5076)
!5080 = !DILocation(line: 3543, column: 5, scope: !5076)
!5081 = !DILocation(line: 3545, column: 3, scope: !5049)
!5082 = distinct !DISubprogram(name: "c_builtin_function_ext_scope", scope: !3, file: !3, line: 3549, type: !2812, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5083)
!5083 = !{!5084, !5085, !5086, !5087}
!5084 = !DILocalVariable(name: "decl", arg: 1, scope: !5082, file: !3, line: 3549, type: !672)
!5085 = !DILocalVariable(name: "type", scope: !5082, file: !3, line: 3551, type: !672)
!5086 = !DILocalVariable(name: "id", scope: !5082, file: !3, line: 3552, type: !672)
!5087 = !DILocalVariable(name: "name", scope: !5082, file: !3, line: 3554, type: !625)
!5088 = !DILocation(line: 0, scope: !5082)
!5089 = !DILocation(line: 3551, column: 15, scope: !5082)
!5090 = !DILocation(line: 3552, column: 15, scope: !5082)
!5091 = !DILocation(line: 3554, column: 22, scope: !5082)
!5092 = !DILocation(line: 3555, column: 38, scope: !5082)
!5093 = !DILocation(line: 3555, column: 60, scope: !5082)
!5094 = !DILocation(line: 3555, column: 3, scope: !5082)
!5095 = !DILocation(line: 3555, column: 35, scope: !5082)
!5096 = !DILocation(line: 3558, column: 3, scope: !5082)
!5097 = !DILocation(line: 3560, column: 19, scope: !5082)
!5098 = !DILocation(line: 3560, column: 3, scope: !5082)
!5099 = !DILocation(line: 3565, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 3565, column: 7)
!5101 = !DILocation(line: 3565, column: 15, scope: !5100)
!5102 = !DILocation(line: 3565, column: 22, scope: !5100)
!5103 = !DILocation(line: 3565, column: 26, scope: !5100)
!5104 = !DILocation(line: 3565, column: 34, scope: !5100)
!5105 = !DILocation(line: 3565, column: 41, scope: !5100)
!5106 = !DILocation(line: 3565, column: 44, scope: !5100)
!5107 = !DILocation(line: 3565, column: 7, scope: !5082)
!5108 = !DILocation(line: 3567, column: 27, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 3566, column: 5)
!5110 = !DILocation(line: 3567, column: 7, scope: !5109)
!5111 = !DILocation(line: 3567, column: 25, scope: !5109)
!5112 = !DILocation(line: 3568, column: 24, scope: !5109)
!5113 = !DILocation(line: 3569, column: 5, scope: !5109)
!5114 = !DILocation(line: 3571, column: 3, scope: !5082)
!5115 = distinct !DISubprogram(name: "shadow_tag", scope: !3, file: !3, line: 3583, type: !5116, scopeLine: 3584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5120)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !5118}
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 64)
!5119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2191)
!5120 = !{!5121}
!5121 = !DILocalVariable(name: "declspecs", arg: 1, scope: !5115, file: !3, line: 3583, type: !5118)
!5122 = !DILocation(line: 0, scope: !5115)
!5123 = !DILocation(line: 3585, column: 3, scope: !5115)
!5124 = !DILocation(line: 3586, column: 1, scope: !5115)
!5125 = distinct !DISubprogram(name: "shadow_tag_warned", scope: !3, file: !3, line: 3591, type: !5126, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5128)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{null, !5118, !620}
!5128 = !{!5129, !5130, !5131, !5132, !5135, !5136, !5139}
!5129 = !DILocalVariable(name: "declspecs", arg: 1, scope: !5125, file: !3, line: 3591, type: !5118)
!5130 = !DILocalVariable(name: "warned", arg: 2, scope: !5125, file: !3, line: 3591, type: !620)
!5131 = !DILocalVariable(name: "found_tag", scope: !5125, file: !3, line: 3593, type: !619)
!5132 = !DILocalVariable(name: "value", scope: !5133, file: !3, line: 3597, type: !672)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 3596, column: 5)
!5134 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3595, column: 7)
!5135 = !DILocalVariable(name: "code", scope: !5133, file: !3, line: 3598, type: !134)
!5136 = !DILocalVariable(name: "name", scope: !5137, file: !3, line: 3604, type: !672)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3603, column: 2)
!5138 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 3600, column: 11)
!5139 = !DILocalVariable(name: "t", scope: !5137, file: !3, line: 3605, type: !672)
!5140 = !DILocation(line: 0, scope: !5125)
!5141 = !DILocation(line: 3595, column: 18, scope: !5134)
!5142 = !DILocation(line: 3595, column: 7, scope: !5134)
!5143 = !DILocation(line: 3595, column: 23, scope: !5134)
!5144 = !DILocation(line: 3595, column: 38, scope: !5134)
!5145 = !DILocation(line: 3595, column: 27, scope: !5134)
!5146 = !DILocation(line: 3595, column: 52, scope: !5134)
!5147 = !DILocation(line: 3595, column: 67, scope: !5134)
!5148 = !DILocation(line: 3595, column: 56, scope: !5134)
!5149 = !DILocation(line: 3595, column: 7, scope: !5125)
!5150 = !DILocation(line: 0, scope: !5133)
!5151 = !DILocation(line: 3598, column: 29, scope: !5133)
!5152 = !DILocation(line: 3600, column: 31, scope: !5138)
!5153 = !DILocation(line: 3604, column: 16, scope: !5137)
!5154 = !DILocation(line: 0, scope: !5137)
!5155 = !DILocation(line: 3609, column: 19, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 3609, column: 8)
!5157 = !DILocation(line: 3609, column: 8, scope: !5156)
!5158 = !DILocation(line: 3609, column: 8, scope: !5137)
!5159 = !DILocation(line: 3611, column: 8, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 3610, column: 6)
!5161 = !DILocation(line: 3613, column: 6, scope: !5160)
!5162 = !DILocation(line: 3615, column: 13, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 3615, column: 8)
!5164 = !DILocation(line: 3615, column: 8, scope: !5137)
!5165 = !DILocation(line: 3617, column: 19, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 3617, column: 12)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 3616, column: 6)
!5168 = !DILocation(line: 3617, column: 32, scope: !5166)
!5169 = !DILocation(line: 3617, column: 24, scope: !5166)
!5170 = !DILocation(line: 3620, column: 14, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 3619, column: 3)
!5172 = !DILocation(line: 3620, column: 5, scope: !5171)
!5173 = !DILocation(line: 3623, column: 3, scope: !5171)
!5174 = !DILocation(line: 3625, column: 25, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 3625, column: 13)
!5176 = !DILocation(line: 3625, column: 14, scope: !5175)
!5177 = !DILocation(line: 3626, column: 6, scope: !5175)
!5178 = !DILocation(line: 3626, column: 20, scope: !5175)
!5179 = !DILocation(line: 3626, column: 34, scope: !5175)
!5180 = !DILocation(line: 3625, column: 13, scope: !5163)
!5181 = !DILocation(line: 3628, column: 19, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 3628, column: 12)
!5183 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 3627, column: 6)
!5184 = !DILocation(line: 3628, column: 12, scope: !5183)
!5185 = !DILocation(line: 3629, column: 12, scope: !5182)
!5186 = !DILocation(line: 3629, column: 3, scope: !5182)
!5187 = !DILocation(line: 3633, column: 8, scope: !5183)
!5188 = !DILocation(line: 3634, column: 6, scope: !5183)
!5189 = !DILocation(line: 3636, column: 6, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 3635, column: 13)
!5191 = !DILocation(line: 3636, column: 21, scope: !5190)
!5192 = !DILocation(line: 3636, column: 10, scope: !5190)
!5193 = !DILocation(line: 3637, column: 10, scope: !5190)
!5194 = !DILocation(line: 3637, column: 24, scope: !5190)
!5195 = !DILocation(line: 3637, column: 13, scope: !5190)
!5196 = !DILocation(line: 3638, column: 10, scope: !5190)
!5197 = !DILocation(line: 3638, column: 24, scope: !5190)
!5198 = !DILocation(line: 3638, column: 13, scope: !5190)
!5199 = !DILocation(line: 3639, column: 10, scope: !5190)
!5200 = !DILocation(line: 3639, column: 24, scope: !5190)
!5201 = !DILocation(line: 3639, column: 13, scope: !5190)
!5202 = !DILocation(line: 3635, column: 13, scope: !5175)
!5203 = !DILocation(line: 3641, column: 19, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 3641, column: 12)
!5205 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3640, column: 6)
!5206 = !DILocation(line: 3641, column: 12, scope: !5205)
!5207 = !DILocation(line: 3642, column: 12, scope: !5204)
!5208 = !DILocation(line: 3642, column: 3, scope: !5204)
!5209 = !DILocation(line: 3646, column: 8, scope: !5205)
!5210 = !DILocation(line: 3647, column: 6, scope: !5205)
!5211 = !DILocation(line: 3650, column: 29, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3649, column: 6)
!5213 = !DILocation(line: 3651, column: 12, scope: !5212)
!5214 = !DILocation(line: 3653, column: 14, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 3653, column: 12)
!5216 = !DILocation(line: 3653, column: 12, scope: !5212)
!5217 = !DILocation(line: 3655, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 3654, column: 3)
!5219 = !DILocation(line: 3656, column: 14, scope: !5218)
!5220 = !DILocation(line: 3656, column: 5, scope: !5218)
!5221 = !DILocation(line: 3657, column: 3, scope: !5218)
!5222 = !DILocation(line: 3662, column: 15, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 3662, column: 8)
!5224 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3661, column: 2)
!5225 = !DILocation(line: 3662, column: 20, scope: !5223)
!5226 = !DILocation(line: 3662, column: 24, scope: !5223)
!5227 = !DILocation(line: 3662, column: 8, scope: !5224)
!5228 = !DILocation(line: 3664, column: 17, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 3663, column: 6)
!5230 = !DILocation(line: 3664, column: 8, scope: !5229)
!5231 = !DILocation(line: 3667, column: 6, scope: !5229)
!5232 = !DILocation(line: 3670, column: 19, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 3670, column: 12)
!5234 = !DILocation(line: 3670, column: 24, scope: !5233)
!5235 = !DILocation(line: 3670, column: 28, scope: !5233)
!5236 = !DILocation(line: 3670, column: 45, scope: !5233)
!5237 = !DILocation(line: 3670, column: 59, scope: !5233)
!5238 = !DILocation(line: 3670, column: 48, scope: !5233)
!5239 = !DILocation(line: 3670, column: 12, scope: !5134)
!5240 = !DILocation(line: 3672, column: 16, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 3671, column: 5)
!5242 = !DILocation(line: 3672, column: 7, scope: !5241)
!5243 = !DILocation(line: 3674, column: 5, scope: !5241)
!5244 = !DILocation(line: 3676, column: 24, scope: !5125)
!5245 = !DILocation(line: 3678, column: 18, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3678, column: 7)
!5247 = !DILocation(line: 3678, column: 7, scope: !5246)
!5248 = !DILocation(line: 3678, column: 7, scope: !5125)
!5249 = !DILocation(line: 3680, column: 7, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 3679, column: 5)
!5251 = !DILocation(line: 3682, column: 5, scope: !5250)
!5252 = !DILocation(line: 3684, column: 7, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3684, column: 7)
!5254 = !DILocation(line: 3684, column: 24, scope: !5253)
!5255 = !DILocation(line: 3684, column: 21, scope: !5253)
!5256 = !DILocation(line: 3684, column: 35, scope: !5253)
!5257 = !DILocation(line: 3684, column: 49, scope: !5253)
!5258 = !DILocation(line: 3684, column: 63, scope: !5253)
!5259 = !DILocation(line: 3684, column: 7, scope: !5125)
!5260 = !DILocation(line: 3686, column: 7, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 3685, column: 5)
!5262 = !DILocation(line: 3690, column: 7, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3690, column: 7)
!5264 = !DILocation(line: 3690, column: 24, scope: !5263)
!5265 = !DILocation(line: 3688, column: 5, scope: !5261)
!5266 = !DILocation(line: 3690, column: 21, scope: !5263)
!5267 = !DILocation(line: 3690, column: 35, scope: !5263)
!5268 = !DILocation(line: 3690, column: 49, scope: !5263)
!5269 = !DILocation(line: 3690, column: 63, scope: !5263)
!5270 = !DILocation(line: 3690, column: 7, scope: !5125)
!5271 = !DILocation(line: 3692, column: 7, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 3691, column: 5)
!5273 = !DILocation(line: 3694, column: 5, scope: !5272)
!5274 = !DILocation(line: 3696, column: 8, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3696, column: 7)
!5276 = !DILocation(line: 3696, column: 15, scope: !5275)
!5277 = !DILocation(line: 3696, column: 19, scope: !5275)
!5278 = !DILocation(line: 3696, column: 36, scope: !5275)
!5279 = !DILocation(line: 3696, column: 50, scope: !5275)
!5280 = !DILocation(line: 3696, column: 64, scope: !5275)
!5281 = !DILocation(line: 3696, column: 7, scope: !5125)
!5282 = !DILocation(line: 3698, column: 7, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 3697, column: 5)
!5284 = !DILocation(line: 3700, column: 5, scope: !5283)
!5285 = !DILocation(line: 3702, column: 8, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3702, column: 7)
!5287 = !DILocation(line: 3702, column: 15, scope: !5286)
!5288 = !DILocation(line: 3702, column: 19, scope: !5286)
!5289 = !DILocation(line: 3702, column: 36, scope: !5286)
!5290 = !DILocation(line: 3702, column: 50, scope: !5286)
!5291 = !DILocation(line: 3702, column: 39, scope: !5286)
!5292 = !DILocation(line: 3702, column: 7, scope: !5125)
!5293 = !DILocation(line: 3704, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 3703, column: 5)
!5295 = !DILocation(line: 3706, column: 5, scope: !5294)
!5296 = !DILocation(line: 3708, column: 8, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3708, column: 7)
!5298 = !DILocation(line: 3708, column: 15, scope: !5297)
!5299 = !DILocation(line: 3708, column: 19, scope: !5297)
!5300 = !DILocation(line: 3708, column: 36, scope: !5297)
!5301 = !DILocation(line: 3708, column: 51, scope: !5297)
!5302 = !DILocation(line: 3708, column: 40, scope: !5297)
!5303 = !DILocation(line: 3709, column: 12, scope: !5297)
!5304 = !DILocation(line: 3709, column: 26, scope: !5297)
!5305 = !DILocation(line: 3709, column: 15, scope: !5297)
!5306 = !DILocation(line: 3710, column: 12, scope: !5297)
!5307 = !DILocation(line: 3710, column: 26, scope: !5297)
!5308 = !DILocation(line: 3710, column: 15, scope: !5297)
!5309 = !DILocation(line: 3711, column: 12, scope: !5297)
!5310 = !DILocation(line: 3711, column: 26, scope: !5297)
!5311 = !DILocation(line: 3711, column: 15, scope: !5297)
!5312 = !DILocation(line: 3708, column: 7, scope: !5125)
!5313 = !DILocation(line: 3713, column: 7, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 3712, column: 5)
!5315 = !DILocation(line: 3715, column: 5, scope: !5314)
!5316 = !DILocation(line: 3717, column: 14, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 3717, column: 7)
!5318 = !DILocation(line: 3719, column: 12, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 3719, column: 11)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3718, column: 5)
!5321 = !DILocation(line: 3717, column: 7, scope: !5125)
!5322 = !DILocation(line: 3720, column: 11, scope: !5319)
!5323 = !DILocation(line: 3720, column: 2, scope: !5319)
!5324 = !DILocation(line: 3722, column: 1, scope: !5125)
!5325 = distinct !DISubprogram(name: "lookup_tag", scope: !3, file: !3, line: 3335, type: !5326, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5329)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{!672, !134, !672, !620, !5328}
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!5329 = !{!5330, !5331, !5332, !5333, !5334, !5335}
!5330 = !DILocalVariable(name: "code", arg: 1, scope: !5325, file: !3, line: 3335, type: !134)
!5331 = !DILocalVariable(name: "name", arg: 2, scope: !5325, file: !3, line: 3335, type: !672)
!5332 = !DILocalVariable(name: "thislevel_only", arg: 3, scope: !5325, file: !3, line: 3335, type: !620)
!5333 = !DILocalVariable(name: "ploc", arg: 4, scope: !5325, file: !3, line: 3336, type: !5328)
!5334 = !DILocalVariable(name: "b", scope: !5325, file: !3, line: 3338, type: !2061)
!5335 = !DILocalVariable(name: "thislevel", scope: !5325, file: !3, line: 3339, type: !620)
!5336 = !DILocation(line: 0, scope: !5325)
!5337 = !DILocation(line: 3338, column: 25, scope: !5325)
!5338 = !DILocation(line: 3341, column: 8, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3341, column: 7)
!5340 = !DILocation(line: 3341, column: 10, scope: !5339)
!5341 = !DILocation(line: 3341, column: 17, scope: !5339)
!5342 = !DILocation(line: 3341, column: 14, scope: !5339)
!5343 = !DILocation(line: 3341, column: 7, scope: !5325)
!5344 = !DILocation(line: 3346, column: 7, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3346, column: 7)
!5346 = !DILocation(line: 3346, column: 22, scope: !5345)
!5347 = !DILocation(line: 3346, column: 25, scope: !5345)
!5348 = !DILocation(line: 3346, column: 45, scope: !5345)
!5349 = !DILocation(line: 3346, column: 7, scope: !5325)
!5350 = !DILocation(line: 3352, column: 11, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 3352, column: 11)
!5352 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 3347, column: 5)
!5353 = !DILocation(line: 3353, column: 4, scope: !5351)
!5354 = !DILocation(line: 3353, column: 25, scope: !5351)
!5355 = !DILocation(line: 3353, column: 22, scope: !5351)
!5356 = !DILocation(line: 3353, column: 36, scope: !5351)
!5357 = !DILocation(line: 3353, column: 39, scope: !5351)
!5358 = !DILocation(line: 3352, column: 11, scope: !5352)
!5359 = !DILocation(line: 3354, column: 2, scope: !5351)
!5360 = !DILocation(line: 3357, column: 22, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3357, column: 7)
!5362 = !DILocation(line: 3360, column: 7, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3360, column: 7)
!5364 = !DILocation(line: 3360, column: 27, scope: !5363)
!5365 = !DILocation(line: 3360, column: 7, scope: !5325)
!5366 = !DILocation(line: 3363, column: 28, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 3361, column: 5)
!5368 = !DILocation(line: 3364, column: 39, scope: !5367)
!5369 = !DILocation(line: 3364, column: 37, scope: !5367)
!5370 = !DILocation(line: 3370, column: 11, scope: !5367)
!5371 = !DILocation(line: 3371, column: 2, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 3370, column: 11)
!5373 = !DILocation(line: 3374, column: 12, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3374, column: 7)
!5375 = !DILocation(line: 3374, column: 7, scope: !5325)
!5376 = !DILocation(line: 3375, column: 16, scope: !5374)
!5377 = !DILocation(line: 3375, column: 11, scope: !5374)
!5378 = !DILocation(line: 3375, column: 5, scope: !5374)
!5379 = !DILocation(line: 3377, column: 13, scope: !5325)
!5380 = !DILocation(line: 3377, column: 3, scope: !5325)
!5381 = !DILocation(line: 3378, column: 1, scope: !5325)
!5382 = distinct !DISubprogram(name: "pushtag", scope: !3, file: !3, line: 1424, type: !4630, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5383)
!5383 = !{!5384, !5385, !5386, !5387}
!5384 = !DILocalVariable(name: "loc", arg: 1, scope: !5382, file: !3, line: 1424, type: !760)
!5385 = !DILocalVariable(name: "name", arg: 2, scope: !5382, file: !3, line: 1424, type: !672)
!5386 = !DILocalVariable(name: "type", arg: 3, scope: !5382, file: !3, line: 1424, type: !672)
!5387 = !DILocalVariable(name: "b", scope: !5388, file: !3, line: 1447, type: !2061)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1446, column: 5)
!5389 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1445, column: 7)
!5390 = !DILocation(line: 0, scope: !5382)
!5391 = !DILocation(line: 1427, column: 7, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1427, column: 7)
!5393 = !DILocation(line: 1427, column: 12, scope: !5392)
!5394 = !DILocation(line: 1427, column: 16, scope: !5392)
!5395 = !DILocation(line: 1427, column: 7, scope: !5382)
!5396 = !DILocation(line: 1428, column: 22, scope: !5392)
!5397 = !DILocation(line: 1428, column: 5, scope: !5392)
!5398 = !DILocation(line: 1429, column: 21, scope: !5382)
!5399 = !DILocation(line: 1429, column: 3, scope: !5382)
!5400 = !DILocation(line: 1438, column: 37, scope: !5382)
!5401 = !DILocation(line: 1438, column: 27, scope: !5382)
!5402 = !DILocation(line: 1438, column: 3, scope: !5382)
!5403 = !DILocation(line: 1438, column: 25, scope: !5382)
!5404 = !DILocation(line: 1443, column: 25, scope: !5382)
!5405 = !DILocation(line: 1443, column: 3, scope: !5382)
!5406 = !DILocation(line: 1443, column: 23, scope: !5382)
!5407 = !DILocation(line: 1445, column: 7, scope: !5389)
!5408 = !DILocation(line: 1445, column: 31, scope: !5389)
!5409 = !DILocation(line: 1445, column: 23, scope: !5389)
!5410 = !DILocation(line: 1447, column: 29, scope: !5388)
!5411 = !DILocation(line: 0, scope: !5388)
!5412 = !DILocation(line: 1449, column: 13, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1449, column: 11)
!5414 = !DILocation(line: 1450, column: 4, scope: !5413)
!5415 = !DILocation(line: 1450, column: 10, scope: !5413)
!5416 = !DILocation(line: 1450, column: 15, scope: !5413)
!5417 = !DILocation(line: 1451, column: 4, scope: !5413)
!5418 = !DILocation(line: 1451, column: 7, scope: !5413)
!5419 = !DILocation(line: 1451, column: 27, scope: !5413)
!5420 = !DILocation(line: 1452, column: 4, scope: !5413)
!5421 = !DILocation(line: 1452, column: 8, scope: !5413)
!5422 = !DILocation(line: 1453, column: 8, scope: !5413)
!5423 = !DILocation(line: 1453, column: 29, scope: !5413)
!5424 = !DILocation(line: 1453, column: 26, scope: !5413)
!5425 = !DILocation(line: 1453, column: 40, scope: !5413)
!5426 = !DILocation(line: 1453, column: 43, scope: !5413)
!5427 = !DILocation(line: 1454, column: 4, scope: !5413)
!5428 = !DILocation(line: 1454, column: 8, scope: !5413)
!5429 = !DILocation(line: 1455, column: 11, scope: !5413)
!5430 = !DILocation(line: 1455, column: 8, scope: !5413)
!5431 = !DILocation(line: 1449, column: 11, scope: !5388)
!5432 = !DILocation(line: 1457, column: 4, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1456, column: 2)
!5434 = !DILocation(line: 1461, column: 11, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 1461, column: 8)
!5436 = !DILocation(line: 1461, column: 17, scope: !5435)
!5437 = !DILocation(line: 1461, column: 8, scope: !5433)
!5438 = !DILocation(line: 1462, column: 6, scope: !5435)
!5439 = !DILocation(line: 1465, column: 1, scope: !5382)
!5440 = distinct !DISubprogram(name: "quals_from_declspecs", scope: !3, file: !3, line: 3730, type: !5441, scopeLine: 3731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5443)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!620, !5118}
!5443 = !{!5444, !5445}
!5444 = !DILocalVariable(name: "specs", arg: 1, scope: !5440, file: !3, line: 3730, type: !5118)
!5445 = !DILocalVariable(name: "quals", scope: !5440, file: !3, line: 3732, type: !620)
!5446 = !DILocation(line: 0, scope: !5440)
!5447 = !DILocation(line: 3732, column: 24, scope: !5440)
!5448 = !DILocation(line: 3732, column: 17, scope: !5440)
!5449 = !DILocation(line: 3734, column: 9, scope: !5440)
!5450 = !DILocation(line: 3735, column: 12, scope: !5440)
!5451 = !DILocation(line: 3735, column: 9, scope: !5440)
!5452 = !DILocation(line: 3736, column: 3, scope: !5440)
!5453 = !DILocation(line: 3751, column: 3, scope: !5440)
!5454 = distinct !DISubprogram(name: "build_array_declarator", scope: !3, file: !3, line: 3765, type: !5455, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5457)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{!2141, !760, !672, !2190, !619, !619}
!5457 = !{!5458, !5459, !5460, !5461, !5462, !5463}
!5458 = !DILocalVariable(name: "loc", arg: 1, scope: !5454, file: !3, line: 3765, type: !760)
!5459 = !DILocalVariable(name: "expr", arg: 2, scope: !5454, file: !3, line: 3766, type: !672)
!5460 = !DILocalVariable(name: "quals", arg: 3, scope: !5454, file: !3, line: 3766, type: !2190)
!5461 = !DILocalVariable(name: "static_p", arg: 4, scope: !5454, file: !3, line: 3766, type: !619)
!5462 = !DILocalVariable(name: "vla_unspec_p", arg: 5, scope: !5454, file: !3, line: 3767, type: !619)
!5463 = !DILocalVariable(name: "declarator", scope: !5454, file: !3, line: 3769, type: !2141)
!5464 = !DILocation(line: 0, scope: !5454)
!5465 = !DILocation(line: 3769, column: 37, scope: !5454)
!5466 = !DILocation(line: 3771, column: 15, scope: !5454)
!5467 = !DILocation(line: 3771, column: 22, scope: !5454)
!5468 = !DILocation(line: 3772, column: 15, scope: !5454)
!5469 = !DILocation(line: 3772, column: 20, scope: !5454)
!5470 = !DILocation(line: 3773, column: 15, scope: !5454)
!5471 = !DILocation(line: 3773, column: 26, scope: !5454)
!5472 = !DILocation(line: 3774, column: 23, scope: !5454)
!5473 = !DILocation(line: 3774, column: 29, scope: !5454)
!5474 = !DILocation(line: 3775, column: 7, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3775, column: 7)
!5476 = !DILocation(line: 3775, column: 7, scope: !5454)
!5477 = !DILocation(line: 3777, column: 42, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 3776, column: 5)
!5479 = !DILocation(line: 3777, column: 27, scope: !5478)
!5480 = !DILocation(line: 3777, column: 33, scope: !5478)
!5481 = !DILocation(line: 3778, column: 35, scope: !5478)
!5482 = !DILocation(line: 3778, column: 27, scope: !5478)
!5483 = !DILocation(line: 3778, column: 33, scope: !5478)
!5484 = !DILocation(line: 3779, column: 5, scope: !5478)
!5485 = !DILocation(line: 3782, column: 27, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 3781, column: 5)
!5487 = !DILocation(line: 3782, column: 33, scope: !5486)
!5488 = !DILocation(line: 3783, column: 27, scope: !5486)
!5489 = !DILocation(line: 3783, column: 33, scope: !5486)
!5490 = !DILocation(line: 3785, column: 23, scope: !5454)
!5491 = !DILocation(line: 3785, column: 32, scope: !5454)
!5492 = !DILocation(line: 3786, column: 36, scope: !5454)
!5493 = !DILocation(line: 3787, column: 8, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3787, column: 7)
!5495 = !DILocation(line: 3787, column: 7, scope: !5454)
!5496 = !DILocation(line: 3789, column: 11, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 3789, column: 11)
!5498 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 3788, column: 5)
!5499 = !DILocation(line: 3789, column: 29, scope: !5497)
!5500 = !DILocation(line: 3789, column: 20, scope: !5497)
!5501 = !DILocation(line: 3790, column: 2, scope: !5497)
!5502 = !DILocation(line: 3793, column: 11, scope: !5498)
!5503 = !DILocation(line: 3794, column: 2, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 3793, column: 11)
!5505 = !DILocation(line: 3797, column: 7, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3797, column: 7)
!5507 = !DILocation(line: 3797, column: 7, scope: !5454)
!5508 = !DILocation(line: 3799, column: 12, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 3799, column: 11)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 3798, column: 5)
!5511 = !DILocation(line: 3799, column: 27, scope: !5509)
!5512 = !DILocation(line: 3799, column: 11, scope: !5510)
!5513 = !DILocation(line: 3802, column: 4, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 3800, column: 2)
!5515 = !DILocation(line: 3804, column: 37, scope: !5514)
!5516 = !DILocation(line: 3805, column: 4, scope: !5514)
!5517 = !DILocation(line: 3807, column: 37, scope: !5510)
!5518 = !DILocation(line: 3808, column: 5, scope: !5510)
!5519 = !DILocation(line: 3810, column: 1, scope: !5454)
!5520 = distinct !DISubprogram(name: "set_array_declarator_inner", scope: !3, file: !3, line: 3817, type: !5521, scopeLine: 3819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5523)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!2141, !2141, !2141}
!5523 = !{!5524, !5525}
!5524 = !DILocalVariable(name: "decl", arg: 1, scope: !5520, file: !3, line: 3817, type: !2141)
!5525 = !DILocalVariable(name: "inner", arg: 2, scope: !5520, file: !3, line: 3818, type: !2141)
!5526 = !DILocation(line: 0, scope: !5520)
!5527 = !DILocation(line: 3820, column: 9, scope: !5520)
!5528 = !DILocation(line: 3820, column: 20, scope: !5520)
!5529 = !DILocation(line: 3821, column: 3, scope: !5520)
!5530 = distinct !DISubprogram(name: "groktypename", scope: !3, file: !3, line: 3858, type: !5531, scopeLine: 3860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5538)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!672, !5533, !996, !618}
!5533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5534, size: 64)
!5534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_type_name", file: !564, line: 352, size: 128, elements: !5535)
!5535 = !{!5536, !5537}
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "specs", scope: !5534, file: !564, line: 354, baseType: !2190, size: 64)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !5534, file: !564, line: 356, baseType: !2141, size: 64, offset: 64)
!5538 = !{!5539, !5540, !5541, !5542, !5543}
!5539 = !DILocalVariable(name: "type_name", arg: 1, scope: !5530, file: !3, line: 3858, type: !5533)
!5540 = !DILocalVariable(name: "expr", arg: 2, scope: !5530, file: !3, line: 3858, type: !996)
!5541 = !DILocalVariable(name: "expr_const_operands", arg: 3, scope: !5530, file: !3, line: 3859, type: !618)
!5542 = !DILocalVariable(name: "type", scope: !5530, file: !3, line: 3861, type: !672)
!5543 = !DILocalVariable(name: "attrs", scope: !5530, file: !3, line: 3862, type: !672)
!5544 = !DILocation(line: 0, scope: !5530)
!5545 = !DILocation(line: 3861, column: 3, scope: !5530)
!5546 = !DILocation(line: 3862, column: 3, scope: !5530)
!5547 = !DILocation(line: 3862, column: 27, scope: !5530)
!5548 = !DILocation(line: 3862, column: 34, scope: !5530)
!5549 = !DILocation(line: 3862, column: 8, scope: !5530)
!5550 = !DILocation(line: 3864, column: 27, scope: !5530)
!5551 = !DILocation(line: 3866, column: 37, scope: !5530)
!5552 = !DILocation(line: 3866, column: 60, scope: !5530)
!5553 = !DILocation(line: 3866, column: 10, scope: !5530)
!5554 = !DILocation(line: 3866, column: 8, scope: !5530)
!5555 = !DILocation(line: 3871, column: 27, scope: !5530)
!5556 = !DILocation(line: 3871, column: 3, scope: !5530)
!5557 = !DILocation(line: 3873, column: 10, scope: !5530)
!5558 = !DILocation(line: 3874, column: 1, scope: !5530)
!5559 = !DILocation(line: 3873, column: 3, scope: !5530)
!5560 = distinct !DISubprogram(name: "grokdeclarator", scope: !3, file: !3, line: 4773, type: !5561, scopeLine: 4778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5565)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!672, !5563, !2190, !610, !619, !996, !996, !996, !618, !597}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2142)
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5604, !5608, !5609, !5610, !5612, !5613, !5614, !5617, !5618, !5619, !5622, !5625, !5628, !5630, !5631, !5634, !5636, !5640, !5643, !5646, !5648, !5651, !5655, !5658, !5659}
!5566 = !DILocalVariable(name: "declarator", arg: 1, scope: !5560, file: !3, line: 4773, type: !5563)
!5567 = !DILocalVariable(name: "declspecs", arg: 2, scope: !5560, file: !3, line: 4774, type: !2190)
!5568 = !DILocalVariable(name: "decl_context", arg: 3, scope: !5560, file: !3, line: 4775, type: !610)
!5569 = !DILocalVariable(name: "initialized", arg: 4, scope: !5560, file: !3, line: 4775, type: !619)
!5570 = !DILocalVariable(name: "width", arg: 5, scope: !5560, file: !3, line: 4775, type: !996)
!5571 = !DILocalVariable(name: "decl_attrs", arg: 6, scope: !5560, file: !3, line: 4776, type: !996)
!5572 = !DILocalVariable(name: "expr", arg: 7, scope: !5560, file: !3, line: 4776, type: !996)
!5573 = !DILocalVariable(name: "expr_const_operands", arg: 8, scope: !5560, file: !3, line: 4776, type: !618)
!5574 = !DILocalVariable(name: "deprecated_state", arg: 9, scope: !5560, file: !3, line: 4777, type: !597)
!5575 = !DILocalVariable(name: "type", scope: !5560, file: !3, line: 4779, type: !672)
!5576 = !DILocalVariable(name: "threadp", scope: !5560, file: !3, line: 4780, type: !619)
!5577 = !DILocalVariable(name: "storage_class", scope: !5560, file: !3, line: 4781, type: !582)
!5578 = !DILocalVariable(name: "constp", scope: !5560, file: !3, line: 4782, type: !620)
!5579 = !DILocalVariable(name: "restrictp", scope: !5560, file: !3, line: 4783, type: !620)
!5580 = !DILocalVariable(name: "volatilep", scope: !5560, file: !3, line: 4784, type: !620)
!5581 = !DILocalVariable(name: "type_quals", scope: !5560, file: !3, line: 4785, type: !620)
!5582 = !DILocalVariable(name: "name", scope: !5560, file: !3, line: 4786, type: !672)
!5583 = !DILocalVariable(name: "funcdef_flag", scope: !5560, file: !3, line: 4787, type: !619)
!5584 = !DILocalVariable(name: "funcdef_syntax", scope: !5560, file: !3, line: 4788, type: !619)
!5585 = !DILocalVariable(name: "size_varies", scope: !5560, file: !3, line: 4789, type: !619)
!5586 = !DILocalVariable(name: "decl_attr", scope: !5560, file: !3, line: 4790, type: !672)
!5587 = !DILocalVariable(name: "array_ptr_quals", scope: !5560, file: !3, line: 4791, type: !620)
!5588 = !DILocalVariable(name: "array_ptr_attrs", scope: !5560, file: !3, line: 4792, type: !672)
!5589 = !DILocalVariable(name: "array_parm_static", scope: !5560, file: !3, line: 4793, type: !620)
!5590 = !DILocalVariable(name: "array_parm_vla_unspec_p", scope: !5560, file: !3, line: 4794, type: !619)
!5591 = !DILocalVariable(name: "returned_attrs", scope: !5560, file: !3, line: 4795, type: !672)
!5592 = !DILocalVariable(name: "bitfield", scope: !5560, file: !3, line: 4796, type: !619)
!5593 = !DILocalVariable(name: "element_type", scope: !5560, file: !3, line: 4797, type: !672)
!5594 = !DILocalVariable(name: "arg_info", scope: !5560, file: !3, line: 4798, type: !1622)
!5595 = !DILocalVariable(name: "as1", scope: !5560, file: !3, line: 4799, type: !2221)
!5596 = !DILocalVariable(name: "as2", scope: !5560, file: !3, line: 4799, type: !2221)
!5597 = !DILocalVariable(name: "address_space", scope: !5560, file: !3, line: 4799, type: !2221)
!5598 = !DILocalVariable(name: "loc", scope: !5560, file: !3, line: 4800, type: !760)
!5599 = !DILocalVariable(name: "errmsg", scope: !5560, file: !3, line: 4801, type: !625)
!5600 = !DILocalVariable(name: "expr_dummy", scope: !5560, file: !3, line: 4802, type: !672)
!5601 = !DILocalVariable(name: "expr_const_operands_dummy", scope: !5560, file: !3, line: 4803, type: !619)
!5602 = !DILocalVariable(name: "decl", scope: !5603, file: !3, line: 4819, type: !5563)
!5603 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4818, column: 3)
!5604 = !DILocalVariable(name: "attrs", scope: !5605, file: !3, line: 5099, type: !672)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 5097, column: 4)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 5095, column: 2)
!5607 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5059, column: 5)
!5608 = !DILocalVariable(name: "inner_decl", scope: !5605, file: !3, line: 5100, type: !5563)
!5609 = !DILocalVariable(name: "attr_flags", scope: !5605, file: !3, line: 5101, type: !620)
!5610 = !DILocalVariable(name: "itype", scope: !5611, file: !3, line: 5119, type: !672)
!5611 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 5118, column: 4)
!5612 = !DILocalVariable(name: "size", scope: !5611, file: !3, line: 5120, type: !672)
!5613 = !DILocalVariable(name: "index_type", scope: !5611, file: !3, line: 5122, type: !672)
!5614 = !DILocalVariable(name: "size_maybe_const", scope: !5615, file: !3, line: 5169, type: !619)
!5615 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 5168, column: 8)
!5616 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5167, column: 10)
!5617 = !DILocalVariable(name: "size_int_const", scope: !5615, file: !3, line: 5170, type: !619)
!5618 = !DILocalVariable(name: "this_size_varies", scope: !5615, file: !3, line: 5172, type: !619)
!5619 = !DILocalVariable(name: "flexible_array_member", scope: !5620, file: !3, line: 5307, type: !619)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 5306, column: 8)
!5621 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 5305, column: 15)
!5622 = !DILocalVariable(name: "t", scope: !5623, file: !3, line: 5317, type: !5563)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 5316, column: 5)
!5624 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 5308, column: 7)
!5625 = !DILocalVariable(name: "as", scope: !5626, file: !3, line: 5370, type: !2221)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 5369, column: 8)
!5627 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5357, column: 10)
!5628 = !DILocalVariable(name: "really_funcdef", scope: !5629, file: !3, line: 5430, type: !619)
!5629 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 5426, column: 4)
!5630 = !DILocalVariable(name: "arg_types", scope: !5629, file: !3, line: 5431, type: !672)
!5631 = !DILocalVariable(name: "t", scope: !5632, file: !3, line: 5434, type: !5563)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 5433, column: 8)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5432, column: 10)
!5634 = !DILocalVariable(name: "link", scope: !5635, file: !3, line: 5510, type: !672)
!5635 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5509, column: 6)
!5636 = !DILocalVariable(name: "decl", scope: !5637, file: !3, line: 5559, type: !672)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 5558, column: 8)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 5555, column: 10)
!5639 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 5520, column: 4)
!5640 = !DILocalVariable(name: "decl", scope: !5641, file: !3, line: 5661, type: !672)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 5660, column: 5)
!5642 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5659, column: 7)
!5643 = !DILocalVariable(name: "b", scope: !5644, file: !3, line: 5677, type: !2061)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 5676, column: 2)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5675, column: 11)
!5646 = !DILocalVariable(name: "decl", scope: !5647, file: !3, line: 5744, type: !672)
!5647 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5743, column: 3)
!5648 = !DILocalVariable(name: "promoted_type", scope: !5649, file: !3, line: 5748, type: !672)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 5747, column: 7)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 5746, column: 9)
!5651 = !DILocalVariable(name: "extern_ref", scope: !5652, file: !3, line: 5920, type: !620)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 5917, column: 7)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 5836, column: 14)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 5803, column: 14)
!5655 = !DILocalVariable(name: "global_decl", scope: !5656, file: !3, line: 5932, type: !672)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 5931, column: 4)
!5657 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 5930, column: 6)
!5658 = !DILocalVariable(name: "visible_decl", scope: !5656, file: !3, line: 5933, type: !672)
!5659 = !DILocalVariable(name: "was_reg", scope: !5660, file: !3, line: 6013, type: !620)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 6009, column: 7)
!5661 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 6006, column: 9)
!5662 = !DILocation(line: 0, scope: !5560)
!5663 = !DILocation(line: 4779, column: 3, scope: !5560)
!5664 = !DILocation(line: 4779, column: 26, scope: !5560)
!5665 = !DILocation(line: 4779, column: 8, scope: !5560)
!5666 = !DILocation(line: 4780, column: 29, scope: !5560)
!5667 = !DILocation(line: 4781, column: 51, scope: !5560)
!5668 = !DILocation(line: 4790, column: 31, scope: !5560)
!5669 = !DILocation(line: 4802, column: 3, scope: !5560)
!5670 = !DILocation(line: 4803, column: 3, scope: !5560)
!5671 = !DILocation(line: 4805, column: 12, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4805, column: 7)
!5673 = !DILocation(line: 4805, column: 7, scope: !5560)
!5674 = !DILocation(line: 4807, column: 27, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4807, column: 7)
!5676 = !DILocation(line: 4807, column: 7, scope: !5560)
!5677 = !DILocation(line: 4810, column: 22, scope: !5560)
!5678 = !DILocation(line: 4810, column: 9, scope: !5560)
!5679 = !DILocation(line: 4811, column: 37, scope: !5560)
!5680 = !DILocation(line: 4811, column: 24, scope: !5560)
!5681 = !DILocation(line: 4813, column: 20, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4813, column: 7)
!5683 = !DILocation(line: 0, scope: !5603)
!5684 = !DILocation(line: 4821, column: 5, scope: !5603)
!5685 = !DILocation(line: 4819, column: 32, scope: !5603)
!5686 = !DILocation(line: 4800, column: 14, scope: !5560)
!5687 = !DILocation(line: 4788, column: 8, scope: !5560)
!5688 = !DILocation(line: 4786, column: 8, scope: !5560)
!5689 = !DILocation(line: 4822, column: 21, scope: !5603)
!5690 = !DILocation(line: 4822, column: 7, scope: !5603)
!5691 = !DILocation(line: 4825, column: 16, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 4823, column: 2)
!5693 = !DILocation(line: 4825, column: 4, scope: !5692)
!5694 = !DILocation(line: 4830, column: 33, scope: !5692)
!5695 = !DILocation(line: 4830, column: 21, scope: !5692)
!5696 = !DILocation(line: 4831, column: 17, scope: !5692)
!5697 = !DILocation(line: 4832, column: 4, scope: !5692)
!5698 = !DILocation(line: 4835, column: 17, scope: !5692)
!5699 = !DILocation(line: 4836, column: 4, scope: !5692)
!5700 = !DILocation(line: 4839, column: 16, scope: !5692)
!5701 = !DILocation(line: 4840, column: 16, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 4840, column: 8)
!5703 = !DILocation(line: 4840, column: 8, scope: !5702)
!5704 = !DILocation(line: 4840, column: 8, scope: !5692)
!5705 = !DILocation(line: 4841, column: 6, scope: !5702)
!5706 = !DILocation(line: 4846, column: 4, scope: !5692)
!5707 = !DILocation(line: 4847, column: 2, scope: !5692)
!5708 = distinct !{!5708, !5684, !5709}
!5709 = !DILocation(line: 4847, column: 2, scope: !5603)
!5710 = !DILocation(line: 4780, column: 18, scope: !5560)
!5711 = !DILocation(line: 4796, column: 25, scope: !5560)
!5712 = !DILocation(line: 4813, column: 7, scope: !5560)
!5713 = !DILocation(line: 4848, column: 14, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 4848, column: 9)
!5715 = !DILocation(line: 4848, column: 9, scope: !5603)
!5716 = !DILocation(line: 4850, column: 2, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 4849, column: 7)
!5718 = !DILocation(line: 4854, column: 2, scope: !5717)
!5719 = !DILocation(line: 4861, column: 7, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4861, column: 7)
!5721 = !DILocation(line: 4861, column: 24, scope: !5720)
!5722 = !DILocation(line: 4861, column: 20, scope: !5720)
!5723 = !DILocation(line: 4867, column: 20, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4867, column: 7)
!5725 = !DILocation(line: 4867, column: 30, scope: !5724)
!5726 = !DILocation(line: 4867, column: 50, scope: !5724)
!5727 = !DILocation(line: 4867, column: 65, scope: !5724)
!5728 = !DILocation(line: 4867, column: 7, scope: !5560)
!5729 = !DILocation(line: 4870, column: 18, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4870, column: 7)
!5731 = !DILocation(line: 4870, column: 7, scope: !5730)
!5732 = !DILocation(line: 4870, column: 51, scope: !5730)
!5733 = !DILocation(line: 4870, column: 31, scope: !5730)
!5734 = !DILocation(line: 4871, column: 37, scope: !5730)
!5735 = !DILocation(line: 4871, column: 54, scope: !5730)
!5736 = !DILocation(line: 4871, column: 5, scope: !5730)
!5737 = !DILocation(line: 4873, column: 31, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4873, column: 7)
!5739 = !DILocation(line: 4874, column: 10, scope: !5738)
!5740 = !DILocation(line: 4874, column: 27, scope: !5738)
!5741 = !DILocation(line: 4874, column: 24, scope: !5738)
!5742 = !DILocation(line: 4875, column: 7, scope: !5738)
!5743 = !DILocation(line: 4875, column: 10, scope: !5738)
!5744 = !DILocation(line: 4873, column: 7, scope: !5560)
!5745 = !DILocation(line: 4877, column: 11, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 4876, column: 5)
!5747 = !DILocation(line: 4878, column: 2, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 4877, column: 11)
!5749 = !DILocation(line: 4880, column: 2, scope: !5748)
!5750 = !DILocation(line: 4881, column: 14, scope: !5746)
!5751 = !DILocation(line: 4881, column: 12, scope: !5746)
!5752 = !DILocation(line: 4882, column: 5, scope: !5746)
!5753 = !DILocation(line: 4884, column: 17, scope: !5560)
!5754 = !DILocation(line: 4888, column: 18, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4888, column: 7)
!5756 = !DILocation(line: 4888, column: 7, scope: !5755)
!5757 = !DILocation(line: 4888, column: 32, scope: !5755)
!5758 = !DILocation(line: 4888, column: 36, scope: !5755)
!5759 = !DILocation(line: 4888, column: 7, scope: !5560)
!5760 = !DILocation(line: 4893, column: 12, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 4893, column: 11)
!5762 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 4889, column: 5)
!5763 = !DILocation(line: 4893, column: 33, scope: !5761)
!5764 = !DILocation(line: 4893, column: 30, scope: !5761)
!5765 = !DILocation(line: 4893, column: 53, scope: !5761)
!5766 = !DILocation(line: 4895, column: 25, scope: !5761)
!5767 = !DILocation(line: 4895, column: 2, scope: !5761)
!5768 = !DILocation(line: 4898, column: 8, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 4897, column: 2)
!5770 = !DILocation(line: 4899, column: 24, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 4898, column: 8)
!5772 = !DILocation(line: 4899, column: 6, scope: !5771)
!5773 = !DILocation(line: 4903, column: 19, scope: !5771)
!5774 = !DILocation(line: 4903, column: 35, scope: !5771)
!5775 = !DILocation(line: 4903, column: 6, scope: !5771)
!5776 = !DILocation(line: 4911, column: 7, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4911, column: 7)
!5778 = !DILocation(line: 4911, column: 20, scope: !5777)
!5779 = !DILocation(line: 4911, column: 16, scope: !5777)
!5780 = !DILocation(line: 4911, column: 57, scope: !5777)
!5781 = !DILocation(line: 4911, column: 46, scope: !5777)
!5782 = !DILocation(line: 4912, column: 7, scope: !5777)
!5783 = !DILocation(line: 4912, column: 10, scope: !5777)
!5784 = !DILocation(line: 4912, column: 27, scope: !5777)
!5785 = !DILocation(line: 4911, column: 7, scope: !5560)
!5786 = !DILocation(line: 4913, column: 12, scope: !5777)
!5787 = !DILocation(line: 4913, column: 10, scope: !5777)
!5788 = !DILocation(line: 4913, column: 5, scope: !5777)
!5789 = !DILocation(line: 4926, column: 37, scope: !5560)
!5790 = !DILocation(line: 4926, column: 18, scope: !5560)
!5791 = !DILocation(line: 4927, column: 23, scope: !5560)
!5792 = !DILocation(line: 4927, column: 33, scope: !5560)
!5793 = !DILocation(line: 4927, column: 31, scope: !5560)
!5794 = !DILocation(line: 4928, column: 26, scope: !5560)
!5795 = !DILocation(line: 4928, column: 39, scope: !5560)
!5796 = !DILocation(line: 4928, column: 37, scope: !5560)
!5797 = !DILocation(line: 4929, column: 26, scope: !5560)
!5798 = !DILocation(line: 4929, column: 39, scope: !5560)
!5799 = !DILocation(line: 4929, column: 37, scope: !5560)
!5800 = !DILocation(line: 4930, column: 20, scope: !5560)
!5801 = !DILocation(line: 4931, column: 9, scope: !5560)
!5802 = !DILocation(line: 4932, column: 19, scope: !5560)
!5803 = !DILocation(line: 4934, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4934, column: 7)
!5805 = !DILocation(line: 4934, column: 20, scope: !5804)
!5806 = !DILocation(line: 4934, column: 16, scope: !5804)
!5807 = !DILocation(line: 4936, column: 18, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 4936, column: 11)
!5809 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 4935, column: 5)
!5810 = !DILocation(line: 4936, column: 11, scope: !5809)
!5811 = !DILocation(line: 4937, column: 2, scope: !5808)
!5812 = !DILocation(line: 4938, column: 21, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 4938, column: 11)
!5814 = !DILocation(line: 4938, column: 11, scope: !5809)
!5815 = !DILocation(line: 4939, column: 2, scope: !5813)
!5816 = !DILocation(line: 4940, column: 21, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 4940, column: 11)
!5818 = !DILocation(line: 4940, column: 11, scope: !5809)
!5819 = !DILocation(line: 4941, column: 2, scope: !5817)
!5820 = !DILocation(line: 4944, column: 39, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4944, column: 7)
!5822 = !DILocation(line: 4944, column: 35, scope: !5821)
!5823 = !DILocation(line: 4944, column: 69, scope: !5821)
!5824 = !DILocation(line: 4944, column: 76, scope: !5821)
!5825 = !DILocation(line: 4944, column: 73, scope: !5821)
!5826 = !DILocation(line: 4944, column: 7, scope: !5560)
!5827 = !DILocation(line: 4946, column: 8, scope: !5821)
!5828 = !DILocation(line: 4946, column: 33, scope: !5821)
!5829 = !DILocation(line: 4945, column: 5, scope: !5821)
!5830 = !DILocation(line: 4948, column: 8, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4948, column: 7)
!5832 = !DILocation(line: 4948, column: 26, scope: !5831)
!5833 = !DILocation(line: 4948, column: 30, scope: !5831)
!5834 = !DILocation(line: 4948, column: 7, scope: !5560)
!5835 = !DILocation(line: 4949, column: 12, scope: !5831)
!5836 = !DILocation(line: 4949, column: 10, scope: !5831)
!5837 = !DILocation(line: 4949, column: 5, scope: !5831)
!5838 = !DILocation(line: 4950, column: 18, scope: !5560)
!5839 = !DILocation(line: 4951, column: 6, scope: !5560)
!5840 = !DILocation(line: 4951, column: 3, scope: !5560)
!5841 = !DILocation(line: 4952, column: 6, scope: !5560)
!5842 = !DILocation(line: 4952, column: 3, scope: !5560)
!5843 = !DILocation(line: 4953, column: 5, scope: !5560)
!5844 = !DILocation(line: 4953, column: 3, scope: !5560)
!5845 = !DILocation(line: 4959, column: 7, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 4958, column: 7)
!5847 = !DILocation(line: 4959, column: 11, scope: !5846)
!5848 = !DILocation(line: 4960, column: 4, scope: !5846)
!5849 = !DILocation(line: 4964, column: 11, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4963, column: 5)
!5851 = !DILocation(line: 4966, column: 5, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 4964, column: 11)
!5853 = !DILocation(line: 4966, column: 22, scope: !5852)
!5854 = !DILocation(line: 4966, column: 19, scope: !5852)
!5855 = !DILocation(line: 4966, column: 4, scope: !5852)
!5856 = !DILocation(line: 4965, column: 2, scope: !5852)
!5857 = !DILocation(line: 4968, column: 11, scope: !5850)
!5858 = !DILocation(line: 4969, column: 2, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 4968, column: 11)
!5860 = !DILocation(line: 4970, column: 25, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 4970, column: 11)
!5862 = !DILocation(line: 4970, column: 11, scope: !5850)
!5863 = !DILocation(line: 4971, column: 2, scope: !5861)
!5864 = !DILocation(line: 4972, column: 11, scope: !5850)
!5865 = !DILocation(line: 4973, column: 2, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 4972, column: 11)
!5867 = !DILocation(line: 4976, column: 4, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 4975, column: 11)
!5869 = !DILocation(line: 4978, column: 2, scope: !5868)
!5870 = !DILocation(line: 4980, column: 25, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 4980, column: 12)
!5872 = !DILocation(line: 4980, column: 35, scope: !5871)
!5873 = !DILocation(line: 4980, column: 53, scope: !5871)
!5874 = !DILocation(line: 4980, column: 68, scope: !5871)
!5875 = !DILocation(line: 4980, column: 65, scope: !5871)
!5876 = !DILocation(line: 4982, column: 24, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 4982, column: 11)
!5878 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 4981, column: 5)
!5879 = !DILocation(line: 4982, column: 49, scope: !5877)
!5880 = !DILocation(line: 4982, column: 32, scope: !5877)
!5881 = !DILocation(line: 4986, column: 4, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 4985, column: 2)
!5883 = !DILocation(line: 4989, column: 12, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4987, column: 6)
!5885 = !DILocation(line: 4990, column: 3, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 4989, column: 12)
!5887 = !DILocation(line: 4993, column: 3, scope: !5886)
!5888 = !DILocation(line: 4996, column: 12, scope: !5884)
!5889 = !DILocation(line: 4997, column: 3, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 4996, column: 12)
!5891 = !DILocation(line: 5000, column: 3, scope: !5890)
!5892 = !DILocation(line: 5003, column: 8, scope: !5884)
!5893 = !DILocation(line: 5004, column: 8, scope: !5884)
!5894 = !DILocation(line: 5010, column: 26, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 5010, column: 12)
!5896 = !DILocation(line: 5011, column: 8, scope: !5895)
!5897 = !DILocation(line: 5011, column: 5, scope: !5895)
!5898 = !DILocation(line: 0, scope: !5895)
!5899 = !DILocation(line: 5015, column: 12, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 5013, column: 5)
!5901 = !DILocation(line: 5019, column: 18, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 5019, column: 16)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 5016, column: 10)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 5015, column: 12)
!5905 = !DILocation(line: 5019, column: 34, scope: !5902)
!5906 = !DILocation(line: 5020, column: 14, scope: !5902)
!5907 = !DILocation(line: 5024, column: 2, scope: !5904)
!5908 = !DILocation(line: 5026, column: 12, scope: !5895)
!5909 = !DILocation(line: 5028, column: 25, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 5028, column: 11)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 5027, column: 5)
!5912 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 5026, column: 12)
!5913 = !DILocation(line: 5028, column: 11, scope: !5911)
!5914 = !DILocation(line: 5029, column: 2, scope: !5910)
!5915 = !DILocation(line: 5031, column: 11, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 5031, column: 11)
!5917 = !DILocation(line: 5031, column: 37, scope: !5916)
!5918 = !DILocation(line: 5031, column: 20, scope: !5916)
!5919 = !DILocation(line: 5032, column: 11, scope: !5916)
!5920 = !DILocation(line: 5032, column: 2, scope: !5916)
!5921 = !DILocation(line: 5037, column: 25, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5037, column: 11)
!5923 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 5036, column: 5)
!5924 = !DILocation(line: 5037, column: 39, scope: !5922)
!5925 = !DILocation(line: 5038, column: 2, scope: !5922)
!5926 = !DILocation(line: 5039, column: 16, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 5039, column: 16)
!5928 = !DILocation(line: 5039, column: 41, scope: !5927)
!5929 = !DILocation(line: 5039, column: 24, scope: !5927)
!5930 = !DILocation(line: 5041, column: 4, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 5040, column: 2)
!5932 = !DILocation(line: 5045, column: 2, scope: !5931)
!5933 = !DILocation(line: 0, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5133, column: 10)
!5935 = !DILocation(line: 0, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5153, column: 10)
!5937 = !DILocation(line: 0, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 5322, column: 7)
!5939 = !DILocation(line: 0, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5413, column: 10)
!5941 = !DILocation(line: 5058, column: 3, scope: !5560)
!5942 = !DILocation(line: 5058, column: 21, scope: !5560)
!5943 = !DILocation(line: 0, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 5371, column: 7)
!5945 = !DILocation(line: 0, scope: !5626)
!5946 = !DILocation(line: 0, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 5060, column: 11)
!5948 = !DILocation(line: 5058, column: 10, scope: !5560)
!5949 = !DILocation(line: 5058, column: 36, scope: !5560)
!5950 = !DILocation(line: 5058, column: 41, scope: !5560)
!5951 = !DILocation(line: 5062, column: 29, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 5061, column: 2)
!5953 = !DILocation(line: 5063, column: 4, scope: !5952)
!5954 = distinct !{!5954, !5941, !5955}
!5955 = !DILocation(line: 5578, column: 5, scope: !5560)
!5956 = !DILocation(line: 5579, column: 42, scope: !5560)
!5957 = !DILocation(line: 5082, column: 23, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 5081, column: 11)
!5959 = !DILocation(line: 5082, column: 4, scope: !5958)
!5960 = !DILocation(line: 5088, column: 4, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 5084, column: 2)
!5962 = !DILocation(line: 5094, column: 27, scope: !5607)
!5963 = !DILocation(line: 5092, column: 2, scope: !5961)
!5964 = !DILocation(line: 5094, column: 7, scope: !5607)
!5965 = !DILocation(line: 5099, column: 33, scope: !5605)
!5966 = !DILocation(line: 0, scope: !5605)
!5967 = !DILocation(line: 5102, column: 31, scope: !5605)
!5968 = !DILocation(line: 5104, column: 6, scope: !5605)
!5969 = !DILocation(line: 5104, column: 25, scope: !5605)
!5970 = !DILocation(line: 5104, column: 30, scope: !5605)
!5971 = !DILocation(line: 5105, column: 33, scope: !5605)
!5972 = distinct !{!5972, !5968, !5971}
!5973 = !DILocation(line: 5106, column: 27, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 5106, column: 10)
!5975 = !DILocation(line: 5106, column: 10, scope: !5605)
!5976 = !DILocation(line: 5107, column: 8, scope: !5974)
!5977 = !DILocation(line: 5108, column: 32, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 5108, column: 15)
!5979 = !DILocation(line: 5108, column: 15, scope: !5974)
!5980 = !DILocation(line: 5109, column: 8, scope: !5978)
!5981 = !DILocation(line: 5110, column: 32, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 5110, column: 15)
!5983 = !DILocation(line: 5110, column: 15, scope: !5978)
!5984 = !DILocation(line: 0, scope: !5974)
!5985 = !DILocation(line: 5113, column: 12, scope: !5605)
!5986 = !DILocation(line: 5112, column: 23, scope: !5605)
!5987 = !DILocation(line: 0, scope: !5611)
!5988 = !DILocation(line: 5120, column: 38, scope: !5611)
!5989 = !DILocation(line: 5122, column: 46, scope: !5611)
!5990 = !DILocation(line: 5122, column: 24, scope: !5611)
!5991 = !DILocation(line: 5124, column: 44, scope: !5611)
!5992 = !DILocation(line: 5125, column: 44, scope: !5611)
!5993 = !DILocation(line: 5126, column: 46, scope: !5611)
!5994 = !DILocation(line: 5127, column: 52, scope: !5611)
!5995 = !DILocation(line: 5129, column: 31, scope: !5611)
!5996 = !DILocation(line: 5133, column: 10, scope: !5934)
!5997 = !DILocation(line: 5133, column: 10, scope: !5611)
!5998 = !DILocation(line: 5135, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 5134, column: 8)
!6000 = !DILocation(line: 5136, column: 5, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 5135, column: 7)
!6002 = !DILocation(line: 5138, column: 5, scope: !6001)
!6003 = !DILocation(line: 5139, column: 10, scope: !5999)
!6004 = !DILocation(line: 5139, column: 8, scope: !5999)
!6005 = !DILocation(line: 5140, column: 8, scope: !5999)
!6006 = !DILocation(line: 5142, column: 10, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5142, column: 10)
!6008 = !DILocation(line: 5142, column: 27, scope: !6007)
!6009 = !DILocation(line: 5142, column: 10, scope: !5611)
!6010 = !DILocation(line: 5144, column: 7, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 5143, column: 8)
!6012 = !DILocation(line: 5145, column: 5, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 5144, column: 7)
!6014 = !DILocation(line: 5148, column: 5, scope: !6013)
!6015 = !DILocation(line: 5150, column: 10, scope: !6011)
!6016 = !DILocation(line: 5150, column: 8, scope: !6011)
!6017 = !DILocation(line: 5151, column: 8, scope: !6011)
!6018 = !DILocation(line: 5153, column: 10, scope: !5936)
!6019 = !DILocation(line: 5153, column: 19, scope: !5936)
!6020 = !DILocation(line: 5153, column: 23, scope: !5936)
!6021 = !DILocation(line: 5153, column: 40, scope: !5936)
!6022 = !DILocation(line: 5153, column: 66, scope: !5936)
!6023 = !DILocation(line: 5153, column: 43, scope: !5936)
!6024 = !DILocation(line: 5153, column: 10, scope: !5611)
!6025 = !DILocation(line: 5154, column: 8, scope: !5936)
!6026 = !DILocation(line: 5157, column: 18, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5157, column: 10)
!6028 = !DILocation(line: 5157, column: 15, scope: !6027)
!6029 = !DILocation(line: 5157, column: 10, scope: !5611)
!6030 = !DILocation(line: 5160, column: 10, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5160, column: 10)
!6032 = !DILocation(line: 5158, column: 13, scope: !6027)
!6033 = !DILocation(line: 5158, column: 8, scope: !6027)
!6034 = !DILocation(line: 5160, column: 15, scope: !6031)
!6035 = !DILocation(line: 5160, column: 10, scope: !5611)
!6036 = !DILocation(line: 5167, column: 10, scope: !5616)
!6037 = !DILocation(line: 5167, column: 10, scope: !5611)
!6038 = !DILocation(line: 0, scope: !5615)
!6039 = !DILocation(line: 5169, column: 3, scope: !5615)
!6040 = !DILocation(line: 5169, column: 8, scope: !5615)
!6041 = !DILocation(line: 5170, column: 26, scope: !5615)
!6042 = !DILocation(line: 5170, column: 43, scope: !5615)
!6043 = !DILocation(line: 5171, column: 12, scope: !5615)
!6044 = !DILocation(line: 5171, column: 15, scope: !5615)
!6045 = !DILocation(line: 5176, column: 3, scope: !5615)
!6046 = distinct !{!6046, !6045, !6045}
!6047 = !DILocation(line: 5178, column: 8, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 5178, column: 7)
!6049 = !DILocation(line: 5178, column: 7, scope: !5615)
!6050 = !DILocation(line: 5180, column: 11, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 5179, column: 5)
!6052 = !DILocation(line: 5181, column: 9, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 5180, column: 11)
!6054 = !DILocation(line: 5184, column: 9, scope: !6053)
!6055 = !DILocation(line: 5186, column: 14, scope: !6051)
!6056 = !DILocation(line: 5187, column: 5, scope: !6051)
!6057 = !DILocation(line: 5189, column: 10, scope: !5615)
!6058 = !DILocation(line: 5191, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 5191, column: 7)
!6060 = !DILocation(line: 5191, column: 16, scope: !6059)
!6061 = !DILocation(line: 5191, column: 19, scope: !6059)
!6062 = !DILocation(line: 5191, column: 36, scope: !6059)
!6063 = !DILocation(line: 5191, column: 39, scope: !6059)
!6064 = !DILocation(line: 5191, column: 7, scope: !5615)
!6065 = !DILocation(line: 5193, column: 11, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 5192, column: 5)
!6067 = !DILocation(line: 5194, column: 9, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 5193, column: 11)
!6069 = !DILocation(line: 5197, column: 9, scope: !6068)
!6070 = !DILocation(line: 5201, column: 7, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 5201, column: 7)
!6072 = !DILocation(line: 5201, column: 24, scope: !6071)
!6073 = !DILocation(line: 5201, column: 39, scope: !6071)
!6074 = !DILocation(line: 5201, column: 42, scope: !6071)
!6075 = !DILocation(line: 5201, column: 7, scope: !5615)
!6076 = !DILocation(line: 5203, column: 7, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 5202, column: 5)
!6078 = !DILocation(line: 5204, column: 11, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 5204, column: 11)
!6080 = !DILocation(line: 5204, column: 35, scope: !6079)
!6081 = !DILocation(line: 5204, column: 11, scope: !6077)
!6082 = !DILocation(line: 5206, column: 8, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 5205, column: 9)
!6084 = !DILocation(line: 5207, column: 6, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 5206, column: 8)
!6086 = !DILocation(line: 5209, column: 6, scope: !6085)
!6087 = !DILocation(line: 5210, column: 11, scope: !6083)
!6088 = !DILocation(line: 5211, column: 9, scope: !6083)
!6089 = !DILocation(line: 5214, column: 11, scope: !6077)
!6090 = !DILocation(line: 5221, column: 32, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 5221, column: 8)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 5215, column: 9)
!6093 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 5214, column: 11)
!6094 = !DILocation(line: 5222, column: 11, scope: !6091)
!6095 = !DILocation(line: 5222, column: 28, scope: !6091)
!6096 = !DILocation(line: 5222, column: 25, scope: !6091)
!6097 = !DILocation(line: 5221, column: 8, scope: !6092)
!6098 = !DILocation(line: 5223, column: 15, scope: !6091)
!6099 = !DILocation(line: 5223, column: 6, scope: !6091)
!6100 = !DILocation(line: 5228, column: 4, scope: !6092)
!6101 = !DILocation(line: 5229, column: 9, scope: !6092)
!6102 = !DILocation(line: 5231, column: 36, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 5231, column: 12)
!6104 = !DILocation(line: 5232, column: 8, scope: !6103)
!6105 = !DILocation(line: 5232, column: 25, scope: !6103)
!6106 = !DILocation(line: 5232, column: 22, scope: !6103)
!6107 = !DILocation(line: 5231, column: 12, scope: !6071)
!6108 = !DILocation(line: 5234, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 5233, column: 5)
!6110 = !DILocation(line: 5235, column: 14, scope: !6109)
!6111 = !DILocation(line: 5236, column: 5, scope: !6109)
!6112 = !DILocation(line: 5243, column: 7, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 5238, column: 5)
!6114 = !DILocation(line: 0, scope: !6071)
!6115 = !DILocation(line: 4884, column: 15, scope: !5560)
!6116 = !DILocation(line: 5172, column: 8, scope: !5615)
!6117 = !DILocation(line: 5246, column: 7, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 5246, column: 7)
!6119 = !DILocation(line: 5246, column: 32, scope: !6118)
!6120 = !DILocation(line: 5246, column: 28, scope: !6118)
!6121 = !DILocation(line: 5252, column: 33, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 5247, column: 5)
!6123 = !DILocation(line: 5252, column: 15, scope: !6122)
!6124 = !DILocation(line: 5253, column: 5, scope: !6122)
!6125 = !DILocation(line: 5259, column: 11, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 5259, column: 11)
!6127 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 5255, column: 5)
!6128 = !DILocation(line: 5259, column: 11, scope: !6127)
!6129 = !DILocation(line: 5260, column: 16, scope: !6126)
!6130 = !DILocation(line: 5260, column: 9, scope: !6126)
!6131 = !DILocation(line: 5261, column: 11, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 5261, column: 11)
!6133 = !DILocation(line: 5261, column: 28, scope: !6132)
!6134 = !DILocation(line: 5261, column: 31, scope: !6132)
!6135 = !DILocation(line: 5261, column: 48, scope: !6132)
!6136 = !DILocation(line: 5261, column: 11, scope: !6127)
!6137 = !DILocation(line: 5262, column: 16, scope: !6132)
!6138 = !DILocation(line: 5262, column: 9, scope: !6132)
!6139 = !DILocation(line: 0, scope: !6127)
!6140 = !DILocation(line: 5269, column: 15, scope: !6127)
!6141 = !DILocation(line: 5281, column: 11, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 5281, column: 11)
!6143 = !DILocation(line: 5281, column: 29, scope: !6142)
!6144 = !DILocation(line: 5282, column: 4, scope: !6142)
!6145 = !DILocation(line: 5282, column: 7, scope: !6142)
!6146 = !DILocation(line: 5281, column: 11, scope: !6127)
!6147 = !DILocation(line: 5284, column: 8, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 5283, column: 9)
!6149 = !DILocation(line: 5285, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 5284, column: 8)
!6151 = !DILocation(line: 5288, column: 6, scope: !6150)
!6152 = !DILocation(line: 5289, column: 11, scope: !6148)
!6153 = !DILocation(line: 5289, column: 9, scope: !6148)
!6154 = !DILocation(line: 5290, column: 4, scope: !6148)
!6155 = !DILocation(line: 5293, column: 15, scope: !6127)
!6156 = !DILocation(line: 0, scope: !6118)
!6157 = !DILocation(line: 5295, column: 7, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 5295, column: 7)
!6159 = !DILocation(line: 5295, column: 7, scope: !5615)
!6160 = !DILocation(line: 5297, column: 11, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 5297, column: 11)
!6162 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 5296, column: 5)
!6163 = !DILocation(line: 5297, column: 11, scope: !6162)
!6164 = !DILocation(line: 5298, column: 17, scope: !6161)
!6165 = !DILocation(line: 5298, column: 9, scope: !6161)
!6166 = !DILocation(line: 0, scope: !6161)
!6167 = !DILocation(line: 5302, column: 31, scope: !6162)
!6168 = !DILocation(line: 5302, column: 28, scope: !6162)
!6169 = !DILocation(line: 5303, column: 5, scope: !6162)
!6170 = !DILocation(line: 5262, column: 14, scope: !6132)
!6171 = !DILocation(line: 5304, column: 8, scope: !5616)
!6172 = !DILocation(line: 5305, column: 15, scope: !5616)
!6173 = !DILocation(line: 0, scope: !5620)
!6174 = !DILocation(line: 5308, column: 7, scope: !5624)
!6175 = !DILocation(line: 5308, column: 7, scope: !5620)
!6176 = !DILocation(line: 5318, column: 7, scope: !5623)
!6177 = !DILocation(line: 0, scope: !5623)
!6178 = !DILocation(line: 5318, column: 17, scope: !5623)
!6179 = !DILocation(line: 5318, column: 22, scope: !5623)
!6180 = !DILocation(line: 5319, column: 16, scope: !5623)
!6181 = distinct !{!6181, !6176, !6180}
!6182 = !DILocation(line: 5320, column: 40, scope: !5623)
!6183 = !DILocation(line: 5320, column: 31, scope: !5623)
!6184 = !DILocation(line: 5322, column: 7, scope: !5938)
!6185 = !DILocation(line: 5323, column: 10, scope: !5938)
!6186 = !DILocation(line: 5323, column: 7, scope: !5938)
!6187 = !DILocation(line: 5323, column: 23, scope: !5938)
!6188 = !DILocation(line: 5323, column: 39, scope: !5938)
!6189 = !DILocation(line: 5322, column: 7, scope: !5620)
!6190 = !DILocation(line: 5324, column: 5, scope: !5938)
!6191 = !DILocation(line: 5329, column: 29, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 5329, column: 7)
!6193 = !DILocation(line: 5330, column: 31, scope: !6192)
!6194 = !DILocation(line: 5330, column: 41, scope: !6192)
!6195 = !DILocation(line: 5330, column: 13, scope: !6192)
!6196 = !DILocation(line: 5330, column: 5, scope: !6192)
!6197 = !DILocation(line: 5335, column: 7, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 5335, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 5334, column: 8)
!6200 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 5333, column: 15)
!6201 = !DILocation(line: 5335, column: 7, scope: !6199)
!6202 = !DILocation(line: 5337, column: 33, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 5336, column: 5)
!6204 = !DILocation(line: 5337, column: 43, scope: !6203)
!6205 = !DILocation(line: 5337, column: 15, scope: !6203)
!6206 = !DILocation(line: 5339, column: 5, scope: !6203)
!6207 = !DILocation(line: 5343, column: 7, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 5343, column: 7)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 5342, column: 8)
!6210 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 5341, column: 15)
!6211 = !DILocation(line: 5343, column: 7, scope: !6209)
!6212 = !DILocation(line: 5346, column: 7, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 5344, column: 5)
!6214 = !DILocation(line: 5350, column: 33, scope: !6213)
!6215 = !DILocation(line: 5350, column: 43, scope: !6213)
!6216 = !DILocation(line: 5350, column: 15, scope: !6213)
!6217 = !DILocation(line: 5353, column: 5, scope: !6213)
!6218 = !DILocation(line: 0, scope: !5616)
!6219 = !DILocation(line: 5357, column: 11, scope: !5627)
!6220 = !DILocation(line: 5357, column: 10, scope: !5611)
!6221 = !DILocation(line: 5359, column: 3, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 5358, column: 8)
!6223 = !DILocation(line: 5360, column: 10, scope: !6222)
!6224 = !DILocation(line: 5360, column: 8, scope: !6222)
!6225 = !DILocation(line: 5361, column: 8, scope: !6222)
!6226 = !DILocation(line: 5371, column: 34, scope: !5944)
!6227 = !DILocation(line: 5371, column: 43, scope: !5944)
!6228 = !DILocation(line: 5371, column: 40, scope: !5944)
!6229 = !DILocation(line: 5371, column: 7, scope: !5626)
!6230 = !DILocation(line: 5372, column: 12, scope: !5944)
!6231 = !DILocation(line: 5372, column: 10, scope: !5944)
!6232 = !DILocation(line: 5372, column: 5, scope: !5944)
!6233 = !DILocation(line: 5375, column: 28, scope: !5626)
!6234 = !DILocation(line: 5375, column: 10, scope: !5626)
!6235 = !DILocation(line: 5375, column: 8, scope: !5626)
!6236 = !DILocation(line: 5378, column: 18, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 5378, column: 10)
!6238 = !DILocation(line: 5378, column: 10, scope: !6237)
!6239 = !DILocation(line: 5378, column: 15, scope: !6237)
!6240 = !DILocation(line: 5378, column: 10, scope: !5611)
!6241 = !DILocation(line: 5380, column: 7, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 5380, column: 7)
!6243 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 5379, column: 8)
!6244 = !DILocation(line: 5380, column: 7, scope: !6243)
!6245 = !DILocation(line: 5387, column: 11, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 5387, column: 11)
!6247 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 5381, column: 5)
!6248 = !DILocation(line: 5387, column: 16, scope: !6246)
!6249 = !DILocation(line: 5387, column: 19, scope: !6246)
!6250 = !DILocation(line: 5387, column: 36, scope: !6246)
!6251 = !DILocation(line: 5387, column: 11, scope: !6247)
!6252 = !DILocation(line: 5389, column: 32, scope: !6246)
!6253 = !DILocation(line: 5389, column: 6, scope: !6246)
!6254 = !DILocation(line: 5389, column: 4, scope: !6246)
!6255 = !DILocation(line: 5388, column: 9, scope: !6246)
!6256 = !DILocation(line: 5390, column: 7, scope: !6247)
!6257 = !DILocation(line: 5390, column: 35, scope: !6247)
!6258 = !DILocation(line: 5391, column: 5, scope: !6247)
!6259 = !DILocation(line: 5396, column: 7, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 5396, column: 7)
!6261 = !DILocation(line: 5396, column: 12, scope: !6260)
!6262 = !DILocation(line: 5396, column: 15, scope: !6260)
!6263 = !DILocation(line: 5396, column: 7, scope: !6243)
!6264 = !DILocation(line: 5398, column: 7, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 5397, column: 5)
!6266 = !DILocation(line: 5399, column: 26, scope: !6265)
!6267 = !DILocation(line: 5399, column: 7, scope: !6265)
!6268 = !DILocation(line: 5399, column: 24, scope: !6265)
!6269 = !DILocation(line: 5400, column: 31, scope: !6265)
!6270 = !DILocation(line: 5400, column: 7, scope: !6265)
!6271 = !DILocation(line: 5400, column: 29, scope: !6265)
!6272 = !DILocation(line: 5401, column: 7, scope: !6265)
!6273 = !DILocation(line: 5402, column: 5, scope: !6265)
!6274 = !DILocation(line: 5403, column: 7, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 5403, column: 7)
!6276 = !DILocation(line: 5403, column: 7, scope: !6243)
!6277 = !DILocation(line: 5405, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 5404, column: 5)
!6279 = !DILocation(line: 5407, column: 26, scope: !6278)
!6280 = !DILocation(line: 5407, column: 7, scope: !6278)
!6281 = !DILocation(line: 5407, column: 24, scope: !6278)
!6282 = !DILocation(line: 5408, column: 31, scope: !6278)
!6283 = !DILocation(line: 5408, column: 7, scope: !6278)
!6284 = !DILocation(line: 5408, column: 29, scope: !6278)
!6285 = !DILocation(line: 5409, column: 7, scope: !6278)
!6286 = !DILocation(line: 5410, column: 5, scope: !6278)
!6287 = !DILocation(line: 5414, column: 3, scope: !5940)
!6288 = !DILocation(line: 5414, column: 23, scope: !5940)
!6289 = !DILocation(line: 5415, column: 26, scope: !5940)
!6290 = !DILocation(line: 5415, column: 7, scope: !5940)
!6291 = !DILocation(line: 5416, column: 10, scope: !5940)
!6292 = !DILocation(line: 5418, column: 3, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 5417, column: 8)
!6294 = !DILocation(line: 5422, column: 8, scope: !6293)
!6295 = !DILocation(line: 0, scope: !5629)
!6296 = !DILocation(line: 5432, column: 10, scope: !5629)
!6297 = !DILocation(line: 5435, column: 3, scope: !5632)
!6298 = !DILocation(line: 0, scope: !5632)
!6299 = !DILocation(line: 5435, column: 13, scope: !5632)
!6300 = !DILocation(line: 5435, column: 18, scope: !5632)
!6301 = distinct !{!6301, !6297, !6302}
!6302 = !DILocation(line: 5436, column: 12, scope: !5632)
!6303 = !DILocation(line: 5437, column: 29, scope: !5632)
!6304 = !DILocation(line: 5437, column: 20, scope: !5632)
!6305 = !DILocation(line: 5438, column: 8, scope: !5632)
!6306 = !DILocation(line: 5442, column: 10, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5442, column: 10)
!6308 = !DILocation(line: 5442, column: 18, scope: !6307)
!6309 = !DILocation(line: 5442, column: 15, scope: !6307)
!6310 = !DILocation(line: 5442, column: 10, scope: !5629)
!6311 = !DILocation(line: 5448, column: 10, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5448, column: 10)
!6313 = !DILocation(line: 5448, column: 27, scope: !6312)
!6314 = !DILocation(line: 5448, column: 10, scope: !5629)
!6315 = !DILocation(line: 5450, column: 7, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 5449, column: 8)
!6317 = !DILocation(line: 5451, column: 5, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 5450, column: 7)
!6319 = !DILocation(line: 5454, column: 5, scope: !6318)
!6320 = !DILocation(line: 5456, column: 10, scope: !6316)
!6321 = !DILocation(line: 5456, column: 8, scope: !6316)
!6322 = !DILocation(line: 5457, column: 8, scope: !6316)
!6323 = !DILocation(line: 5458, column: 10, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5458, column: 10)
!6325 = !DILocation(line: 5458, column: 27, scope: !6324)
!6326 = !DILocation(line: 5458, column: 10, scope: !5629)
!6327 = !DILocation(line: 5460, column: 7, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 5459, column: 8)
!6329 = !DILocation(line: 5461, column: 5, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 5460, column: 7)
!6331 = !DILocation(line: 5464, column: 5, scope: !6330)
!6332 = !DILocation(line: 5466, column: 10, scope: !6328)
!6333 = !DILocation(line: 5466, column: 8, scope: !6328)
!6334 = !DILocation(line: 5467, column: 8, scope: !6328)
!6335 = !DILocation(line: 5468, column: 44, scope: !5629)
!6336 = !DILocation(line: 5468, column: 23, scope: !5629)
!6337 = !DILocation(line: 5468, column: 15, scope: !5629)
!6338 = !DILocation(line: 5469, column: 10, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5469, column: 10)
!6340 = !DILocation(line: 5469, column: 10, scope: !5629)
!6341 = !DILocation(line: 5471, column: 3, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 5470, column: 8)
!6343 = !DILocation(line: 5472, column: 10, scope: !6342)
!6344 = !DILocation(line: 5472, column: 8, scope: !6342)
!6345 = !DILocation(line: 5473, column: 8, scope: !6342)
!6346 = !DILocation(line: 5477, column: 29, scope: !5629)
!6347 = !DILocation(line: 5477, column: 31, scope: !5629)
!6348 = !DILocation(line: 5478, column: 18, scope: !5629)
!6349 = !DILocation(line: 5479, column: 10, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5479, column: 10)
!6351 = !DILocation(line: 5479, column: 10, scope: !5629)
!6352 = !DILocation(line: 5480, column: 37, scope: !6350)
!6353 = !DILocation(line: 5480, column: 8, scope: !6350)
!6354 = !DILocation(line: 5484, column: 10, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 5484, column: 10)
!6356 = !DILocation(line: 5484, column: 10, scope: !5629)
!6357 = !DILocation(line: 5503, column: 34, scope: !5629)
!6358 = !DILocation(line: 5492, column: 7, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 5492, column: 7)
!6360 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 5485, column: 8)
!6361 = !DILocation(line: 5492, column: 29, scope: !6359)
!6362 = !DILocation(line: 5492, column: 26, scope: !6359)
!6363 = !DILocation(line: 5493, column: 5, scope: !6359)
!6364 = !DILocation(line: 5496, column: 5, scope: !6359)
!6365 = !DILocation(line: 5499, column: 34, scope: !6360)
!6366 = !DILocation(line: 5499, column: 10, scope: !6360)
!6367 = !DILocation(line: 5499, column: 8, scope: !6360)
!6368 = !DILocation(line: 5500, column: 8, scope: !6360)
!6369 = !DILocation(line: 5503, column: 13, scope: !5629)
!6370 = !DILocation(line: 5503, column: 11, scope: !5629)
!6371 = !DILocation(line: 5504, column: 31, scope: !5629)
!6372 = !DILocation(line: 5512, column: 30, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5512, column: 8)
!6374 = !DILocation(line: 0, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 5512, column: 8)
!6376 = !DILocation(line: 5512, column: 13, scope: !6373)
!6377 = !DILocation(line: 0, scope: !6373)
!6378 = !DILocation(line: 0, scope: !5635)
!6379 = !DILocation(line: 5512, column: 8, scope: !6373)
!6380 = !DILocation(line: 5515, column: 3, scope: !6375)
!6381 = !DILocation(line: 5515, column: 36, scope: !6375)
!6382 = !DILocation(line: 5514, column: 13, scope: !6375)
!6383 = !DILocation(line: 5512, column: 8, scope: !6375)
!6384 = distinct !{!6384, !6379, !6385}
!6385 = !DILocation(line: 5515, column: 38, scope: !6373)
!6386 = !DILocation(line: 5524, column: 10, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 5524, column: 10)
!6388 = !DILocation(line: 5524, column: 19, scope: !6387)
!6389 = !DILocation(line: 5524, column: 22, scope: !6387)
!6390 = !DILocation(line: 5524, column: 39, scope: !6387)
!6391 = !DILocation(line: 5525, column: 6, scope: !6387)
!6392 = !DILocation(line: 5525, column: 3, scope: !6387)
!6393 = !DILocation(line: 5526, column: 8, scope: !6387)
!6394 = !DILocation(line: 5528, column: 10, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 5528, column: 10)
!6396 = !DILocation(line: 5528, column: 10, scope: !5639)
!6397 = !DILocation(line: 5555, column: 11, scope: !5638)
!6398 = !DILocation(line: 5529, column: 39, scope: !6395)
!6399 = !DILocation(line: 5529, column: 15, scope: !6395)
!6400 = !DILocation(line: 5529, column: 13, scope: !6395)
!6401 = !DILocation(line: 5529, column: 8, scope: !6395)
!6402 = !DILocation(line: 5556, column: 3, scope: !5638)
!6403 = !DILocation(line: 5556, column: 30, scope: !5638)
!6404 = !DILocation(line: 5557, column: 6, scope: !5638)
!6405 = !DILocation(line: 5555, column: 10, scope: !5639)
!6406 = !DILocation(line: 5566, column: 33, scope: !5639)
!6407 = !DILocation(line: 5559, column: 15, scope: !5637)
!6408 = !DILocation(line: 0, scope: !5637)
!6409 = !DILocation(line: 5560, column: 3, scope: !5637)
!6410 = !DILocation(line: 5560, column: 26, scope: !5637)
!6411 = !DILocation(line: 5561, column: 3, scope: !5637)
!6412 = !DILocation(line: 5562, column: 3, scope: !5637)
!6413 = !DILocation(line: 5563, column: 3, scope: !5637)
!6414 = !DILocation(line: 5563, column: 20, scope: !5637)
!6415 = !DILocation(line: 5564, column: 8, scope: !5637)
!6416 = !DILocation(line: 5566, column: 13, scope: !5639)
!6417 = !DILocation(line: 5566, column: 11, scope: !5639)
!6418 = !DILocation(line: 5570, column: 31, scope: !5639)
!6419 = !DILocation(line: 5570, column: 33, scope: !5639)
!6420 = !DILocation(line: 5572, column: 31, scope: !5639)
!6421 = !DILocation(line: 5573, column: 6, scope: !5639)
!6422 = !DILocation(line: 5576, column: 4, scope: !5606)
!6423 = !DILocation(line: 5577, column: 2, scope: !5606)
!6424 = !DILocation(line: 4798, column: 22, scope: !5560)
!6425 = !DILocation(line: 0, scope: !5607)
!6426 = !DILocation(line: 5579, column: 17, scope: !5560)
!6427 = !DILocation(line: 5579, column: 15, scope: !5560)
!6428 = !DILocation(line: 5586, column: 19, scope: !5560)
!6429 = !DILocation(line: 5587, column: 7, scope: !5560)
!6430 = !DILocation(line: 5589, column: 11, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 5588, column: 5)
!6432 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5587, column: 7)
!6433 = !DILocation(line: 5591, column: 4, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 5590, column: 2)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 5589, column: 11)
!6436 = !DILocation(line: 5595, column: 8, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 5592, column: 6)
!6438 = !DILocation(line: 5594, column: 8, scope: !6437)
!6439 = !DILocation(line: 5596, column: 8, scope: !6437)
!6440 = !DILocation(line: 5599, column: 8, scope: !6437)
!6441 = !DILocation(line: 5598, column: 8, scope: !6437)
!6442 = !DILocation(line: 5600, column: 8, scope: !6437)
!6443 = !DILocation(line: 5602, column: 12, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 5602, column: 12)
!6445 = !DILocation(line: 5602, column: 12, scope: !6437)
!6446 = !DILocation(line: 5605, column: 5, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 5603, column: 3)
!6448 = !DILocation(line: 5604, column: 5, scope: !6447)
!6449 = !DILocation(line: 5606, column: 5, scope: !6447)
!6450 = !DILocation(line: 5614, column: 8, scope: !6437)
!6451 = !DILocation(line: 5615, column: 6, scope: !6437)
!6452 = !DILocation(line: 5617, column: 40, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 5617, column: 16)
!6454 = !DILocation(line: 5617, column: 57, scope: !6453)
!6455 = !DILocation(line: 5617, column: 16, scope: !6435)
!6456 = !DILocation(line: 0, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 5619, column: 8)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 5618, column: 2)
!6459 = !DILocation(line: 5619, column: 8, scope: !6458)
!6460 = !DILocation(line: 5620, column: 6, scope: !6457)
!6461 = !DILocation(line: 5623, column: 6, scope: !6457)
!6462 = !DILocation(line: 5626, column: 16, scope: !6453)
!6463 = !DILocation(line: 0, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 5628, column: 8)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 5627, column: 2)
!6466 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 5626, column: 16)
!6467 = !DILocation(line: 5628, column: 8, scope: !6465)
!6468 = !DILocation(line: 5629, column: 6, scope: !6464)
!6469 = !DILocation(line: 5632, column: 6, scope: !6464)
!6470 = !DILocation(line: 5638, column: 7, scope: !5560)
!6471 = !DILocation(line: 5639, column: 5, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5638, column: 7)
!6473 = !DILocation(line: 5643, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5643, column: 7)
!6475 = !DILocation(line: 5643, column: 24, scope: !6474)
!6476 = !DILocation(line: 5644, column: 7, scope: !6474)
!6477 = !DILocation(line: 5644, column: 10, scope: !6474)
!6478 = !DILocation(line: 5645, column: 7, scope: !6474)
!6479 = !DILocation(line: 5645, column: 10, scope: !6474)
!6480 = !DILocation(line: 5645, column: 44, scope: !6474)
!6481 = !DILocation(line: 5646, column: 7, scope: !6474)
!6482 = !DILocation(line: 5646, column: 10, scope: !6474)
!6483 = !DILocation(line: 5643, column: 7, scope: !5560)
!6484 = !DILocation(line: 5648, column: 11, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 5647, column: 5)
!6486 = !DILocation(line: 5649, column: 2, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 5648, column: 11)
!6488 = !DILocation(line: 5651, column: 2, scope: !6487)
!6489 = !DILocation(line: 5654, column: 14, scope: !6485)
!6490 = !DILocation(line: 5654, column: 12, scope: !6485)
!6491 = !DILocation(line: 5655, column: 5, scope: !6485)
!6492 = !DILocation(line: 5659, column: 21, scope: !5642)
!6493 = !DILocation(line: 5659, column: 7, scope: !5560)
!6494 = !DILocation(line: 5662, column: 11, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5662, column: 11)
!6496 = !DILocation(line: 5662, column: 20, scope: !6495)
!6497 = !DILocation(line: 5662, column: 23, scope: !6495)
!6498 = !DILocation(line: 5662, column: 40, scope: !6495)
!6499 = !DILocation(line: 5663, column: 7, scope: !6495)
!6500 = !DILocation(line: 5663, column: 4, scope: !6495)
!6501 = !DILocation(line: 5664, column: 2, scope: !6495)
!6502 = !DILocation(line: 5666, column: 11, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5666, column: 11)
!6504 = !DILocation(line: 5666, column: 11, scope: !5641)
!6505 = !DILocation(line: 5668, column: 14, scope: !5641)
!6506 = !DILocation(line: 5667, column: 33, scope: !6503)
!6507 = !DILocation(line: 5667, column: 9, scope: !6503)
!6508 = !DILocation(line: 5667, column: 7, scope: !6503)
!6509 = !DILocation(line: 5667, column: 2, scope: !6503)
!6510 = !DILocation(line: 0, scope: !5641)
!6511 = !DILocation(line: 5670, column: 22, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5670, column: 11)
!6513 = !DILocation(line: 5670, column: 11, scope: !6512)
!6514 = !DILocation(line: 5670, column: 11, scope: !5641)
!6515 = !DILocation(line: 5671, column: 2, scope: !6512)
!6516 = !DILocation(line: 5671, column: 37, scope: !6512)
!6517 = !DILocation(line: 5672, column: 22, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5672, column: 11)
!6519 = !DILocation(line: 5672, column: 11, scope: !6518)
!6520 = !DILocation(line: 5672, column: 11, scope: !5641)
!6521 = !DILocation(line: 5673, column: 2, scope: !6518)
!6522 = !DILocation(line: 5675, column: 11, scope: !5645)
!6523 = !DILocation(line: 5675, column: 27, scope: !5645)
!6524 = !DILocation(line: 5675, column: 44, scope: !5645)
!6525 = !DILocation(line: 5675, column: 47, scope: !5645)
!6526 = !DILocation(line: 5675, column: 11, scope: !5641)
!6527 = !DILocation(line: 5677, column: 26, scope: !5644)
!6528 = !DILocation(line: 0, scope: !5644)
!6529 = !DILocation(line: 5679, column: 10, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 5679, column: 8)
!6531 = !DILocation(line: 5680, column: 8, scope: !6530)
!6532 = !DILocation(line: 5680, column: 14, scope: !6530)
!6533 = !DILocation(line: 5680, column: 19, scope: !6530)
!6534 = !DILocation(line: 5681, column: 8, scope: !6530)
!6535 = !DILocation(line: 5681, column: 12, scope: !6530)
!6536 = !DILocation(line: 5682, column: 5, scope: !6530)
!6537 = !DILocation(line: 5682, column: 26, scope: !6530)
!6538 = !DILocation(line: 5682, column: 23, scope: !6530)
!6539 = !DILocation(line: 5682, column: 37, scope: !6530)
!6540 = !DILocation(line: 5682, column: 40, scope: !6530)
!6541 = !DILocation(line: 5683, column: 8, scope: !6530)
!6542 = !DILocation(line: 5683, column: 11, scope: !6530)
!6543 = !DILocation(line: 5683, column: 42, scope: !6530)
!6544 = !DILocation(line: 5683, column: 39, scope: !6530)
!6545 = !DILocation(line: 5679, column: 8, scope: !5644)
!6546 = !DILocation(line: 5685, column: 32, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 5684, column: 6)
!6548 = !DILocation(line: 5685, column: 8, scope: !6547)
!6549 = !DILocation(line: 5689, column: 15, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 5689, column: 12)
!6551 = !DILocation(line: 5689, column: 21, scope: !6550)
!6552 = !DILocation(line: 5689, column: 12, scope: !6547)
!6553 = !DILocation(line: 5690, column: 3, scope: !6550)
!6554 = !DILocation(line: 5700, column: 20, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5700, column: 7)
!6556 = !DILocation(line: 5700, column: 7, scope: !5560)
!6557 = !DILocation(line: 5704, column: 7, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 5701, column: 5)
!6559 = !DILocation(line: 5706, column: 11, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 5706, column: 11)
!6561 = !DILocation(line: 5706, column: 20, scope: !6560)
!6562 = !DILocation(line: 5706, column: 23, scope: !6560)
!6563 = !DILocation(line: 5706, column: 40, scope: !6560)
!6564 = !DILocation(line: 5707, column: 7, scope: !6560)
!6565 = !DILocation(line: 5707, column: 4, scope: !6560)
!6566 = !DILocation(line: 5708, column: 2, scope: !6560)
!6567 = !DILocation(line: 5710, column: 11, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 5710, column: 11)
!6569 = !DILocation(line: 5710, column: 11, scope: !6558)
!6570 = !DILocation(line: 5712, column: 14, scope: !6558)
!6571 = !DILocation(line: 5711, column: 33, scope: !6568)
!6572 = !DILocation(line: 5711, column: 9, scope: !6568)
!6573 = !DILocation(line: 5711, column: 7, scope: !6568)
!6574 = !DILocation(line: 5711, column: 2, scope: !6568)
!6575 = !DILocation(line: 5712, column: 7, scope: !6558)
!6576 = !DILocation(line: 5715, column: 7, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5715, column: 7)
!6578 = !DILocation(line: 5715, column: 32, scope: !6577)
!6579 = !DILocation(line: 5715, column: 16, scope: !6577)
!6580 = !DILocation(line: 5716, column: 10, scope: !6577)
!6581 = !DILocation(line: 5715, column: 7, scope: !5560)
!6582 = !DILocation(line: 5719, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 5717, column: 5)
!6584 = !DILocation(line: 5721, column: 5, scope: !6583)
!6585 = !DILocation(line: 5729, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 5729, column: 7)
!6587 = !DILocation(line: 5729, column: 42, scope: !6586)
!6588 = !DILocation(line: 5729, column: 26, scope: !6586)
!6589 = !DILocation(line: 5730, column: 35, scope: !6586)
!6590 = !DILocation(line: 5731, column: 6, scope: !6586)
!6591 = !DILocation(line: 5731, column: 24, scope: !6586)
!6592 = !DILocation(line: 5732, column: 3, scope: !6586)
!6593 = !DILocation(line: 5732, column: 7, scope: !6586)
!6594 = !DILocation(line: 5732, column: 24, scope: !6586)
!6595 = !DILocation(line: 5732, column: 21, scope: !6586)
!6596 = !DILocation(line: 5733, column: 7, scope: !6586)
!6597 = !DILocation(line: 5736, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 5735, column: 5)
!6599 = !DILocation(line: 5737, column: 14, scope: !6598)
!6600 = !DILocation(line: 5737, column: 12, scope: !6598)
!6601 = !DILocation(line: 5738, column: 5, scope: !6598)
!6602 = !DILocation(line: 5746, column: 9, scope: !5647)
!6603 = !DILocation(line: 5753, column: 6, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 5753, column: 6)
!6605 = !DILocation(line: 5753, column: 23, scope: !6604)
!6606 = !DILocation(line: 5753, column: 6, scope: !5649)
!6607 = !DILocation(line: 5756, column: 13, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 5754, column: 4)
!6609 = !DILocation(line: 5756, column: 11, scope: !6608)
!6610 = !DILocation(line: 5757, column: 10, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5757, column: 10)
!6612 = !DILocation(line: 5757, column: 10, scope: !6608)
!6613 = !DILocation(line: 5758, column: 15, scope: !6611)
!6614 = !DILocation(line: 5758, column: 13, scope: !6611)
!6615 = !DILocation(line: 5758, column: 8, scope: !6611)
!6616 = !DILocation(line: 5759, column: 33, scope: !6608)
!6617 = !DILocation(line: 5759, column: 13, scope: !6608)
!6618 = !DILocation(line: 5759, column: 11, scope: !6608)
!6619 = !DILocation(line: 5761, column: 10, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5761, column: 10)
!6621 = !DILocation(line: 5761, column: 10, scope: !6608)
!6622 = !DILocation(line: 5762, column: 15, scope: !6620)
!6623 = !DILocation(line: 5762, column: 13, scope: !6620)
!6624 = !DILocation(line: 5762, column: 8, scope: !6620)
!6625 = !DILocation(line: 5765, column: 26, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5765, column: 10)
!6627 = !DILocation(line: 5765, column: 10, scope: !6608)
!6628 = !DILocation(line: 5766, column: 8, scope: !6626)
!6629 = !DILocation(line: 5784, column: 9, scope: !5649)
!6630 = !DILocation(line: 5771, column: 28, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 5771, column: 11)
!6632 = !DILocation(line: 0, scope: !6631)
!6633 = !DILocation(line: 5771, column: 11, scope: !6604)
!6634 = !DILocation(line: 5773, column: 10, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 5772, column: 4)
!6636 = !DILocation(line: 5774, column: 8, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 5773, column: 10)
!6638 = !DILocation(line: 5776, column: 10, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 5776, column: 10)
!6640 = !DILocation(line: 5776, column: 10, scope: !6635)
!6641 = !DILocation(line: 5778, column: 33, scope: !6635)
!6642 = !DILocation(line: 5777, column: 39, scope: !6639)
!6643 = !DILocation(line: 5777, column: 15, scope: !6639)
!6644 = !DILocation(line: 5777, column: 13, scope: !6639)
!6645 = !DILocation(line: 5777, column: 8, scope: !6639)
!6646 = !DILocation(line: 5778, column: 13, scope: !6635)
!6647 = !DILocation(line: 5778, column: 11, scope: !6635)
!6648 = !DILocation(line: 5780, column: 4, scope: !6635)
!6649 = !DILocation(line: 5781, column: 11, scope: !6631)
!6650 = !DILocation(line: 5782, column: 11, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 5781, column: 11)
!6652 = !DILocation(line: 5782, column: 9, scope: !6651)
!6653 = !DILocation(line: 5782, column: 4, scope: !6651)
!6654 = !DILocation(line: 0, scope: !6604)
!6655 = !DILocation(line: 0, scope: !5647)
!6656 = !DILocation(line: 5786, column: 6, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 5786, column: 6)
!6658 = !DILocation(line: 5786, column: 6, scope: !5649)
!6659 = !DILocation(line: 5787, column: 4, scope: !6657)
!6660 = !DILocation(line: 5787, column: 32, scope: !6657)
!6661 = !DILocation(line: 5794, column: 6, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 5794, column: 6)
!6663 = !DILocation(line: 5794, column: 14, scope: !6662)
!6664 = !DILocation(line: 5794, column: 11, scope: !6662)
!6665 = !DILocation(line: 5794, column: 6, scope: !5649)
!6666 = !DILocation(line: 5797, column: 20, scope: !6662)
!6667 = !DILocation(line: 0, scope: !5649)
!6668 = !DILocation(line: 0, scope: !6662)
!6669 = !DILocation(line: 5799, column: 2, scope: !5649)
!6670 = !DILocation(line: 5799, column: 23, scope: !5649)
!6671 = !DILocation(line: 5800, column: 17, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 5800, column: 6)
!6673 = !DILocation(line: 5800, column: 6, scope: !6672)
!6674 = !DILocation(line: 5800, column: 6, scope: !5649)
!6675 = !DILocation(line: 5801, column: 4, scope: !6672)
!6676 = !DILocation(line: 5807, column: 2, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 5804, column: 7)
!6678 = !DILocation(line: 5812, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 5812, column: 6)
!6680 = !DILocation(line: 5812, column: 23, scope: !6679)
!6681 = !DILocation(line: 5812, column: 6, scope: !6677)
!6682 = !DILocation(line: 5814, column: 6, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 5813, column: 4)
!6684 = !DILocation(line: 5815, column: 33, scope: !6683)
!6685 = !DILocation(line: 5815, column: 13, scope: !6683)
!6686 = !DILocation(line: 5815, column: 11, scope: !6683)
!6687 = !DILocation(line: 5816, column: 4, scope: !6683)
!6688 = !DILocation(line: 5817, column: 11, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 5817, column: 11)
!6690 = !DILocation(line: 5817, column: 28, scope: !6689)
!6691 = !DILocation(line: 5818, column: 4, scope: !6689)
!6692 = !DILocation(line: 5818, column: 8, scope: !6689)
!6693 = !DILocation(line: 5817, column: 11, scope: !6679)
!6694 = !DILocation(line: 5820, column: 10, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 5819, column: 4)
!6696 = !DILocation(line: 5821, column: 8, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 5820, column: 10)
!6698 = !DILocation(line: 5823, column: 8, scope: !6697)
!6699 = !DILocation(line: 5824, column: 13, scope: !6695)
!6700 = !DILocation(line: 5824, column: 11, scope: !6695)
!6701 = !DILocation(line: 5825, column: 4, scope: !6695)
!6702 = !DILocation(line: 5826, column: 33, scope: !6677)
!6703 = !DILocation(line: 5826, column: 9, scope: !6677)
!6704 = !DILocation(line: 5826, column: 7, scope: !6677)
!6705 = !DILocation(line: 5827, column: 9, scope: !6677)
!6706 = !DILocation(line: 5829, column: 2, scope: !6677)
!6707 = !DILocation(line: 5829, column: 31, scope: !6677)
!6708 = !DILocation(line: 5830, column: 15, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 5830, column: 6)
!6710 = !DILocation(line: 5830, column: 33, scope: !6709)
!6711 = !DILocation(line: 5830, column: 19, scope: !6709)
!6712 = !DILocation(line: 5830, column: 6, scope: !6677)
!6713 = !DILocation(line: 5831, column: 4, scope: !6709)
!6714 = !DILocation(line: 5831, column: 27, scope: !6709)
!6715 = !DILocation(line: 5833, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 5833, column: 6)
!6717 = !DILocation(line: 5833, column: 6, scope: !6677)
!6718 = !DILocation(line: 5834, column: 32, scope: !6716)
!6719 = !DILocation(line: 5834, column: 4, scope: !6716)
!6720 = !DILocation(line: 5836, column: 14, scope: !5653)
!6721 = !DILocation(line: 5836, column: 31, scope: !5653)
!6722 = !DILocation(line: 5836, column: 14, scope: !5654)
!6723 = !DILocation(line: 5838, column: 20, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5838, column: 6)
!6725 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 5837, column: 7)
!6726 = !DILocation(line: 5838, column: 39, scope: !6724)
!6727 = !DILocation(line: 5838, column: 36, scope: !6724)
!6728 = !DILocation(line: 5840, column: 6, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 5839, column: 4)
!6730 = !DILocation(line: 5841, column: 5, scope: !6729)
!6731 = !DILocation(line: 5842, column: 11, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 5842, column: 11)
!6733 = !DILocation(line: 5842, column: 28, scope: !6732)
!6734 = !DILocation(line: 5842, column: 25, scope: !6732)
!6735 = !DILocation(line: 5842, column: 11, scope: !6724)
!6736 = !DILocation(line: 5849, column: 10, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 5843, column: 4)
!6738 = !DILocation(line: 5850, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 5849, column: 10)
!6740 = !DILocation(line: 5854, column: 3, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 5853, column: 8)
!6742 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 5852, column: 15)
!6743 = !DILocation(line: 5855, column: 7, scope: !6741)
!6744 = !DILocation(line: 5856, column: 46, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 5855, column: 7)
!6746 = !DILocation(line: 5859, column: 8, scope: !6741)
!6747 = !DILocation(line: 4978, column: 16, scope: !5868)
!6748 = !DILocation(line: 5862, column: 9, scope: !6725)
!6749 = !DILocation(line: 5864, column: 9, scope: !6725)
!6750 = !DILocation(line: 5866, column: 6, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5866, column: 6)
!6752 = !DILocation(line: 5866, column: 18, scope: !6751)
!6753 = !DILocation(line: 5866, column: 15, scope: !6751)
!6754 = !DILocation(line: 5866, column: 33, scope: !6751)
!6755 = !DILocation(line: 5866, column: 6, scope: !6725)
!6756 = !DILocation(line: 5867, column: 4, scope: !6751)
!6757 = !DILocation(line: 5872, column: 18, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5872, column: 6)
!6759 = !DILocation(line: 5873, column: 6, scope: !6758)
!6760 = !DILocation(line: 5873, column: 10, scope: !6758)
!6761 = !DILocation(line: 5872, column: 6, scope: !6725)
!6762 = !DILocation(line: 5874, column: 4, scope: !6758)
!6763 = !DILocation(line: 5881, column: 20, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5881, column: 6)
!6765 = !DILocation(line: 5881, column: 32, scope: !6764)
!6766 = !DILocation(line: 5881, column: 35, scope: !6764)
!6767 = !DILocation(line: 5881, column: 52, scope: !6764)
!6768 = !DILocation(line: 5881, column: 49, scope: !6764)
!6769 = !DILocation(line: 5881, column: 6, scope: !6725)
!6770 = !DILocation(line: 5882, column: 4, scope: !6764)
!6771 = !DILocation(line: 5882, column: 25, scope: !6764)
!6772 = !DILocation(line: 5888, column: 22, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 5888, column: 11)
!6774 = !DILocation(line: 5888, column: 11, scope: !6773)
!6775 = !DILocation(line: 5888, column: 48, scope: !6773)
!6776 = !DILocation(line: 5888, column: 31, scope: !6773)
!6777 = !DILocation(line: 5889, column: 43, scope: !6773)
!6778 = !DILocation(line: 5890, column: 10, scope: !6773)
!6779 = !DILocation(line: 5890, column: 7, scope: !6773)
!6780 = !DILocation(line: 5889, column: 4, scope: !6773)
!6781 = !DILocation(line: 5889, column: 25, scope: !6773)
!6782 = !DILocation(line: 5892, column: 27, scope: !6773)
!6783 = !DILocation(line: 5892, column: 4, scope: !6773)
!6784 = !DILocation(line: 5892, column: 25, scope: !6773)
!6785 = !DILocation(line: 5896, column: 22, scope: !6725)
!6786 = !DILocation(line: 5896, column: 53, scope: !6725)
!6787 = !DILocation(line: 5896, column: 6, scope: !6725)
!6788 = !DILocation(line: 5895, column: 2, scope: !6725)
!6789 = !DILocation(line: 5896, column: 4, scope: !6725)
!6790 = !DILocation(line: 5900, column: 6, scope: !6725)
!6791 = !DILocation(line: 5901, column: 30, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5900, column: 6)
!6793 = !DILocation(line: 5901, column: 4, scope: !6792)
!6794 = !DILocation(line: 5903, column: 17, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5903, column: 6)
!6796 = !DILocation(line: 5903, column: 6, scope: !6795)
!6797 = !DILocation(line: 5903, column: 6, scope: !6725)
!6798 = !DILocation(line: 5904, column: 4, scope: !6795)
!6799 = !DILocation(line: 5904, column: 35, scope: !6795)
!6800 = !DILocation(line: 5907, column: 6, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5907, column: 6)
!6802 = !DILocation(line: 5907, column: 18, scope: !6801)
!6803 = !DILocation(line: 5907, column: 21, scope: !6801)
!6804 = !DILocation(line: 5907, column: 6, scope: !6725)
!6805 = !DILocation(line: 5909, column: 21, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 5909, column: 10)
!6807 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 5908, column: 4)
!6808 = !DILocation(line: 5909, column: 10, scope: !6806)
!6809 = !DILocation(line: 5909, column: 10, scope: !6807)
!6810 = !DILocation(line: 5910, column: 8, scope: !6806)
!6811 = !DILocation(line: 5912, column: 22, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 5912, column: 11)
!6813 = !DILocation(line: 5912, column: 11, scope: !6812)
!6814 = !DILocation(line: 5912, column: 11, scope: !6801)
!6815 = !DILocation(line: 5914, column: 4, scope: !6812)
!6816 = !DILocation(line: 5914, column: 34, scope: !6812)
!6817 = !DILocation(line: 5920, column: 20, scope: !5652)
!6818 = !DILocation(line: 5920, column: 49, scope: !5652)
!6819 = !DILocation(line: 5920, column: 32, scope: !5652)
!6820 = !DILocation(line: 0, scope: !5652)
!6821 = !DILocation(line: 5922, column: 9, scope: !5652)
!6822 = !DILocation(line: 5922, column: 7, scope: !5652)
!6823 = !DILocation(line: 5930, column: 17, scope: !5657)
!6824 = !DILocation(line: 5930, column: 20, scope: !5657)
!6825 = !DILocation(line: 5930, column: 37, scope: !5657)
!6826 = !DILocation(line: 5930, column: 34, scope: !5657)
!6827 = !DILocation(line: 5930, column: 6, scope: !5652)
!6828 = !DILocation(line: 5932, column: 65, scope: !5656)
!6829 = !DILocation(line: 5932, column: 26, scope: !5656)
!6830 = !DILocation(line: 0, scope: !5656)
!6831 = !DILocation(line: 5933, column: 53, scope: !5656)
!6832 = !DILocation(line: 5933, column: 26, scope: !5656)
!6833 = !DILocation(line: 5935, column: 10, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 5935, column: 10)
!6835 = !DILocation(line: 5936, column: 18, scope: !6834)
!6836 = !DILocation(line: 5936, column: 3, scope: !6834)
!6837 = !DILocation(line: 5937, column: 6, scope: !6834)
!6838 = !DILocation(line: 5937, column: 30, scope: !6834)
!6839 = !DILocation(line: 5938, column: 3, scope: !6834)
!6840 = !DILocation(line: 5938, column: 7, scope: !6834)
!6841 = !DILocation(line: 5935, column: 10, scope: !5656)
!6842 = !DILocation(line: 5939, column: 8, scope: !6834)
!6843 = !DILocation(line: 5943, column: 9, scope: !5652)
!6844 = !DILocation(line: 5945, column: 6, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 5945, column: 6)
!6846 = !DILocation(line: 5945, column: 6, scope: !5652)
!6847 = !DILocation(line: 5946, column: 4, scope: !6845)
!6848 = !DILocation(line: 5946, column: 32, scope: !6845)
!6849 = !DILocation(line: 5948, column: 17, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 5948, column: 6)
!6851 = !DILocation(line: 5948, column: 6, scope: !6850)
!6852 = !DILocation(line: 5948, column: 6, scope: !5652)
!6853 = !DILocation(line: 5949, column: 4, scope: !6850)
!6854 = !DILocation(line: 5954, column: 2, scope: !5652)
!6855 = !DILocation(line: 5954, column: 23, scope: !5652)
!6856 = !DILocation(line: 5960, column: 6, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 5960, column: 6)
!6858 = !DILocation(line: 5960, column: 23, scope: !6857)
!6859 = !DILocation(line: 5960, column: 20, scope: !6857)
!6860 = !DILocation(line: 5960, column: 6, scope: !5652)
!6861 = !DILocation(line: 5962, column: 41, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 5961, column: 4)
!6863 = !DILocation(line: 5962, column: 6, scope: !6862)
!6864 = !DILocation(line: 5962, column: 25, scope: !6862)
!6865 = !DILocation(line: 5963, column: 27, scope: !6862)
!6866 = !DILocation(line: 5963, column: 25, scope: !6862)
!6867 = !DILocation(line: 5964, column: 4, scope: !6862)
!6868 = !DILocation(line: 5968, column: 42, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 5967, column: 4)
!6870 = !DILocation(line: 5968, column: 6, scope: !6869)
!6871 = !DILocation(line: 5968, column: 25, scope: !6869)
!6872 = !DILocation(line: 5969, column: 25, scope: !6869)
!6873 = !DILocation(line: 5972, column: 6, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 5972, column: 6)
!6875 = !DILocation(line: 5972, column: 6, scope: !5652)
!6876 = !DILocation(line: 5973, column: 28, scope: !6874)
!6877 = !DILocation(line: 5973, column: 4, scope: !6874)
!6878 = !DILocation(line: 5973, column: 26, scope: !6874)
!6879 = !DILocation(line: 0, scope: !5650)
!6880 = !DILocation(line: 5977, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 5976, column: 9)
!6882 = !DILocation(line: 5980, column: 31, scope: !6881)
!6883 = !DILocation(line: 5978, column: 10, scope: !6881)
!6884 = !DILocation(line: 5978, column: 27, scope: !6881)
!6885 = !DILocation(line: 5979, column: 7, scope: !6881)
!6886 = !DILocation(line: 5980, column: 5, scope: !6881)
!6887 = !DILocation(line: 5976, column: 9, scope: !5647)
!6888 = !DILocation(line: 5983, column: 6, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 5983, column: 6)
!6890 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 5981, column: 7)
!6891 = !DILocation(line: 5983, column: 23, scope: !6889)
!6892 = !DILocation(line: 5983, column: 6, scope: !6890)
!6893 = !DILocation(line: 5984, column: 4, scope: !6889)
!6894 = !DILocation(line: 5986, column: 4, scope: !6889)
!6895 = !DILocation(line: 5993, column: 23, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 5993, column: 9)
!6897 = !DILocation(line: 5993, column: 9, scope: !5647)
!6898 = !DILocation(line: 5995, column: 2, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 5994, column: 7)
!6900 = !DILocation(line: 5995, column: 25, scope: !6899)
!6901 = !DILocation(line: 5996, column: 23, scope: !6899)
!6902 = !DILocation(line: 5997, column: 7, scope: !6899)
!6903 = !DILocation(line: 6000, column: 5, scope: !5647)
!6904 = !DILocation(line: 6006, column: 9, scope: !5661)
!6905 = !DILocation(line: 6007, column: 2, scope: !5661)
!6906 = !DILocation(line: 6007, column: 6, scope: !5661)
!6907 = !DILocation(line: 6007, column: 23, scope: !5661)
!6908 = !DILocation(line: 6007, column: 35, scope: !5661)
!6909 = !DILocation(line: 6007, column: 56, scope: !5661)
!6910 = !DILocation(line: 6008, column: 4, scope: !5661)
!6911 = !DILocation(line: 6008, column: 24, scope: !5661)
!6912 = !DILocation(line: 6006, column: 9, scope: !5647)
!6913 = !DILocation(line: 6013, column: 16, scope: !5660)
!6914 = !DILocation(line: 6015, column: 23, scope: !5660)
!6915 = !DILocation(line: 6016, column: 2, scope: !5660)
!6916 = !DILocation(line: 6017, column: 25, scope: !5660)
!6917 = !DILocation(line: 6018, column: 7, scope: !5660)
!6918 = !DILocation(line: 6022, column: 5, scope: !5647)
!6919 = !DILocation(line: 6024, column: 9, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 6024, column: 9)
!6921 = !DILocation(line: 6025, column: 2, scope: !6920)
!6922 = !DILocation(line: 6025, column: 5, scope: !6920)
!6923 = !DILocation(line: 6025, column: 22, scope: !6920)
!6924 = !DILocation(line: 6026, column: 2, scope: !6920)
!6925 = !DILocation(line: 6026, column: 5, scope: !6920)
!6926 = !DILocation(line: 6027, column: 2, scope: !6920)
!6927 = !DILocation(line: 6027, column: 5, scope: !6920)
!6928 = !DILocation(line: 6028, column: 2, scope: !6920)
!6929 = !DILocation(line: 6028, column: 6, scope: !6920)
!6930 = !DILocation(line: 6028, column: 35, scope: !6920)
!6931 = !DILocation(line: 6029, column: 6, scope: !6920)
!6932 = !DILocation(line: 6029, column: 38, scope: !6920)
!6933 = !DILocation(line: 6030, column: 6, scope: !6920)
!6934 = !DILocation(line: 6030, column: 38, scope: !6920)
!6935 = !DILocation(line: 6031, column: 2, scope: !6920)
!6936 = !DILocation(line: 6031, column: 5, scope: !6920)
!6937 = !DILocation(line: 6031, column: 34, scope: !6920)
!6938 = !DILocation(line: 6024, column: 9, scope: !5647)
!6939 = !DILocation(line: 6032, column: 19, scope: !6920)
!6940 = !DILocation(line: 6032, column: 7, scope: !6920)
!6941 = !DILocation(line: 6039, column: 1, scope: !5560)
!6942 = distinct !DISubprogram(name: "start_decl", scope: !3, file: !3, line: 3892, type: !6943, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6945)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!672, !2141, !2190, !619, !672}
!6945 = !{!6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6957, !6960}
!6946 = !DILocalVariable(name: "declarator", arg: 1, scope: !6942, file: !3, line: 3892, type: !2141)
!6947 = !DILocalVariable(name: "declspecs", arg: 2, scope: !6942, file: !3, line: 3892, type: !2190)
!6948 = !DILocalVariable(name: "initialized", arg: 3, scope: !6942, file: !3, line: 3893, type: !619)
!6949 = !DILocalVariable(name: "attributes", arg: 4, scope: !6942, file: !3, line: 3893, type: !672)
!6950 = !DILocalVariable(name: "decl", scope: !6942, file: !3, line: 3895, type: !672)
!6951 = !DILocalVariable(name: "tem", scope: !6942, file: !3, line: 3896, type: !672)
!6952 = !DILocalVariable(name: "expr", scope: !6942, file: !3, line: 3897, type: !672)
!6953 = !DILocalVariable(name: "deprecated_state", scope: !6942, file: !3, line: 3898, type: !597)
!6954 = !DILocalVariable(name: "ce", scope: !6955, file: !3, line: 4028, type: !2141)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 4027, column: 5)
!6956 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4025, column: 7)
!6957 = !DILocalVariable(name: "args", scope: !6958, file: !3, line: 4034, type: !672)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4033, column: 2)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4032, column: 11)
!6960 = !DILocalVariable(name: "type", scope: !6961, file: !3, line: 4037, type: !672)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 4036, column: 6)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 4035, column: 4)
!6963 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 4035, column: 4)
!6964 = !DILocation(line: 0, scope: !6942)
!6965 = !DILocation(line: 3895, column: 3, scope: !6942)
!6966 = !DILocation(line: 3897, column: 3, scope: !6942)
!6967 = !DILocation(line: 3897, column: 8, scope: !6942)
!6968 = !DILocation(line: 3902, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3902, column: 7)
!6970 = !DILocation(line: 3902, column: 7, scope: !6942)
!6971 = !DILocation(line: 3905, column: 10, scope: !6942)
!6972 = !DILocation(line: 3905, column: 8, scope: !6942)
!6973 = !DILocation(line: 3908, column: 8, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3908, column: 7)
!6975 = !DILocation(line: 3908, column: 7, scope: !6942)
!6976 = !DILocation(line: 3911, column: 7, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3911, column: 7)
!6978 = !DILocation(line: 3911, column: 7, scope: !6942)
!6979 = !DILocation(line: 3914, column: 7, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3914, column: 7)
!6981 = !DILocation(line: 3912, column: 5, scope: !6977)
!6982 = !DILocation(line: 0, scope: !6980)
!6983 = !DILocation(line: 3914, column: 24, scope: !6980)
!6984 = !DILocation(line: 3914, column: 41, scope: !6980)
!6985 = !DILocation(line: 3914, column: 44, scope: !6980)
!6986 = !DILocation(line: 3914, column: 7, scope: !6942)
!6987 = !DILocation(line: 3915, column: 5, scope: !6980)
!6988 = !DILocation(line: 3917, column: 7, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3917, column: 7)
!6990 = !DILocation(line: 3917, column: 7, scope: !6942)
!6991 = !DILocation(line: 3921, column: 13, scope: !6989)
!6992 = !DILocation(line: 3921, column: 5, scope: !6989)
!6993 = !DILocation(line: 3924, column: 2, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 3922, column: 7)
!6995 = !DILocation(line: 3926, column: 2, scope: !6994)
!6996 = !DILocation(line: 3929, column: 2, scope: !6994)
!6997 = !DILocation(line: 3931, column: 2, scope: !6994)
!6998 = !DILocation(line: 3935, column: 2, scope: !6994)
!6999 = !DILocation(line: 3937, column: 2, scope: !6994)
!7000 = !DILocation(line: 3945, column: 6, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 3945, column: 6)
!7002 = !DILocation(line: 3945, column: 26, scope: !7001)
!7003 = !DILocation(line: 3945, column: 23, scope: !7001)
!7004 = !DILocation(line: 3945, column: 6, scope: !6994)
!7005 = !DILocation(line: 3947, column: 11, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 3947, column: 11)
!7007 = !DILocation(line: 3947, column: 11, scope: !7001)
!7008 = !DILocation(line: 3951, column: 10, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 3951, column: 10)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3948, column: 4)
!7011 = !DILocation(line: 3951, column: 51, scope: !7009)
!7012 = !DILocation(line: 3952, column: 3, scope: !7009)
!7013 = !DILocation(line: 3952, column: 6, scope: !7009)
!7014 = !DILocation(line: 3951, column: 10, scope: !7010)
!7015 = !DILocation(line: 3954, column: 3, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 3953, column: 8)
!7017 = !DILocation(line: 3956, column: 8, scope: !7016)
!7018 = !DILocation(line: 3958, column: 11, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3958, column: 11)
!7020 = !DILocation(line: 3958, column: 40, scope: !7019)
!7021 = !DILocation(line: 3958, column: 11, scope: !7006)
!7022 = !DILocation(line: 3960, column: 6, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 3959, column: 4)
!7024 = !DILocation(line: 3962, column: 4, scope: !7023)
!7025 = !DILocation(line: 3963, column: 11, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 3963, column: 11)
!7027 = !DILocation(line: 3963, column: 11, scope: !7019)
!7028 = !DILocation(line: 3969, column: 6, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3964, column: 4)
!7030 = !DILocation(line: 3971, column: 4, scope: !7029)
!7031 = !DILocation(line: 3974, column: 7, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3974, column: 7)
!7033 = !DILocation(line: 3974, column: 7, scope: !6942)
!7034 = !DILocation(line: 3988, column: 7, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3988, column: 7)
!7036 = !DILocation(line: 3976, column: 11, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 3976, column: 11)
!7038 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 3975, column: 5)
!7039 = !DILocation(line: 3976, column: 28, scope: !7037)
!7040 = !DILocation(line: 3976, column: 25, scope: !7037)
!7041 = !DILocation(line: 3976, column: 11, scope: !7038)
!7042 = !DILocation(line: 3977, column: 2, scope: !7037)
!7043 = !DILocation(line: 3977, column: 21, scope: !7037)
!7044 = !DILocation(line: 3982, column: 29, scope: !7038)
!7045 = !DILocation(line: 3982, column: 7, scope: !7038)
!7046 = !DILocation(line: 3982, column: 27, scope: !7038)
!7047 = !DILocation(line: 3983, column: 5, scope: !7038)
!7048 = !DILocation(line: 3988, column: 24, scope: !7035)
!7049 = !DILocation(line: 3988, column: 7, scope: !6942)
!7050 = !DILocation(line: 3989, column: 38, scope: !7035)
!7051 = !DILocation(line: 3989, column: 72, scope: !7035)
!7052 = !DILocation(line: 3989, column: 5, scope: !7035)
!7053 = !DILocation(line: 4002, column: 7, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4002, column: 7)
!7055 = !DILocation(line: 4002, column: 24, scope: !7054)
!7056 = !DILocation(line: 4003, column: 11, scope: !7054)
!7057 = !DILocation(line: 4003, column: 7, scope: !7054)
!7058 = !DILocation(line: 4004, column: 10, scope: !7054)
!7059 = !DILocation(line: 4005, column: 7, scope: !7054)
!7060 = !DILocation(line: 4005, column: 11, scope: !7054)
!7061 = !DILocation(line: 4006, column: 11, scope: !7054)
!7062 = !DILocation(line: 4006, column: 7, scope: !7054)
!7063 = !DILocation(line: 4007, column: 5, scope: !7054)
!7064 = !DILocation(line: 4007, column: 24, scope: !7054)
!7065 = !DILocation(line: 4010, column: 27, scope: !6942)
!7066 = !DILocation(line: 4010, column: 3, scope: !6942)
!7067 = !DILocation(line: 4013, column: 18, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4013, column: 7)
!7069 = !DILocation(line: 4013, column: 7, scope: !7068)
!7070 = !DILocation(line: 4014, column: 11, scope: !7068)
!7071 = !DILocation(line: 4014, column: 7, scope: !7068)
!7072 = !DILocation(line: 4015, column: 10, scope: !7068)
!7073 = !DILocation(line: 4015, column: 27, scope: !7068)
!7074 = !DILocation(line: 4016, column: 7, scope: !7068)
!7075 = !DILocation(line: 4016, column: 43, scope: !7068)
!7076 = !DILocation(line: 4016, column: 11, scope: !7068)
!7077 = !DILocation(line: 4017, column: 7, scope: !7068)
!7078 = !DILocation(line: 4017, column: 4, scope: !7068)
!7079 = !DILocation(line: 4019, column: 22, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 4019, column: 11)
!7081 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 4018, column: 5)
!7082 = !DILocation(line: 4019, column: 36, scope: !7080)
!7083 = !DILocation(line: 4019, column: 48, scope: !7080)
!7084 = !DILocation(line: 4019, column: 51, scope: !7080)
!7085 = !DILocation(line: 4019, column: 68, scope: !7080)
!7086 = !DILocation(line: 4019, column: 65, scope: !7080)
!7087 = !DILocation(line: 4019, column: 11, scope: !7081)
!7088 = !DILocation(line: 4021, column: 41, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 4021, column: 16)
!7090 = !DILocation(line: 4021, column: 16, scope: !7080)
!7091 = !DILocation(line: 4022, column: 26, scope: !7089)
!7092 = !DILocation(line: 4022, column: 23, scope: !7089)
!7093 = !DILocation(line: 4022, column: 2, scope: !7089)
!7094 = !DILocation(line: 4025, column: 7, scope: !6956)
!7095 = !DILocation(line: 4025, column: 24, scope: !6956)
!7096 = !DILocation(line: 4026, column: 7, scope: !6956)
!7097 = !DILocation(line: 4026, column: 24, scope: !6956)
!7098 = !DILocation(line: 4026, column: 44, scope: !6956)
!7099 = !DILocation(line: 4026, column: 10, scope: !6956)
!7100 = !DILocation(line: 4025, column: 7, scope: !6942)
!7101 = !DILocation(line: 0, scope: !6955)
!7102 = !DILocation(line: 4030, column: 15, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4030, column: 11)
!7104 = !DILocation(line: 4030, column: 20, scope: !7103)
!7105 = !DILocation(line: 4030, column: 11, scope: !6955)
!7106 = !DILocation(line: 4031, column: 19, scope: !7103)
!7107 = !DILocation(line: 0, scope: !6959)
!7108 = !DILocation(line: 4032, column: 15, scope: !6959)
!7109 = !DILocation(line: 4031, column: 2, scope: !7103)
!7110 = !DILocation(line: 4032, column: 20, scope: !6959)
!7111 = !DILocation(line: 4032, column: 11, scope: !6955)
!7112 = !DILocation(line: 4034, column: 20, scope: !6958)
!7113 = !DILocation(line: 4034, column: 22, scope: !6958)
!7114 = !DILocation(line: 4034, column: 32, scope: !6958)
!7115 = !DILocation(line: 4035, column: 4, scope: !6958)
!7116 = !DILocation(line: 0, scope: !6958)
!7117 = !DILocation(line: 4035, column: 4, scope: !6963)
!7118 = !DILocation(line: 4037, column: 20, scope: !6961)
!7119 = !DILocation(line: 0, scope: !6961)
!7120 = !DILocation(line: 4038, column: 12, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 4038, column: 12)
!7122 = !DILocation(line: 4038, column: 17, scope: !7121)
!7123 = !DILocation(line: 4038, column: 20, scope: !7121)
!7124 = !DILocation(line: 4039, column: 5, scope: !7121)
!7125 = !DILocation(line: 4039, column: 8, scope: !7121)
!7126 = !DILocation(line: 4039, column: 32, scope: !7121)
!7127 = !DILocation(line: 4039, column: 30, scope: !7121)
!7128 = !DILocation(line: 4038, column: 12, scope: !6961)
!7129 = !DILocation(line: 4040, column: 3, scope: !7121)
!7130 = !DILocation(line: 4040, column: 24, scope: !7121)
!7131 = !DILocation(line: 4035, column: 24, scope: !6962)
!7132 = !DILocation(line: 4035, column: 4, scope: !6962)
!7133 = distinct !{!7133, !7117, !7134}
!7134 = !DILocation(line: 4041, column: 6, scope: !6963)
!7135 = !DILocation(line: 4045, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4045, column: 7)
!7137 = !DILocation(line: 4045, column: 24, scope: !7136)
!7138 = !DILocation(line: 4046, column: 7, scope: !7136)
!7139 = !DILocation(line: 4046, column: 10, scope: !7136)
!7140 = !DILocation(line: 4047, column: 7, scope: !7136)
!7141 = !DILocation(line: 4047, column: 10, scope: !7136)
!7142 = !DILocation(line: 4048, column: 7, scope: !7136)
!7143 = !DILocation(line: 4048, column: 40, scope: !7136)
!7144 = !DILocation(line: 4048, column: 10, scope: !7136)
!7145 = !DILocation(line: 4045, column: 7, scope: !6942)
!7146 = !DILocation(line: 4050, column: 7, scope: !7136)
!7147 = !DILocation(line: 4049, column: 5, scope: !7136)
!7148 = !DILocation(line: 4055, column: 7, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4055, column: 7)
!7150 = !DILocation(line: 4055, column: 24, scope: !7149)
!7151 = !DILocation(line: 4056, column: 7, scope: !7149)
!7152 = !DILocation(line: 4056, column: 10, scope: !7149)
!7153 = !DILocation(line: 4056, column: 27, scope: !7149)
!7154 = !DILocation(line: 4056, column: 24, scope: !7149)
!7155 = !DILocation(line: 4057, column: 7, scope: !7149)
!7156 = !DILocation(line: 4057, column: 10, scope: !7149)
!7157 = !DILocation(line: 4058, column: 7, scope: !7149)
!7158 = !DILocation(line: 4058, column: 11, scope: !7149)
!7159 = !DILocation(line: 4059, column: 7, scope: !7149)
!7160 = !DILocation(line: 4059, column: 10, scope: !7149)
!7161 = !DILocation(line: 4060, column: 7, scope: !7149)
!7162 = !DILocation(line: 4060, column: 10, scope: !7149)
!7163 = !DILocation(line: 4055, column: 7, scope: !6942)
!7164 = !DILocation(line: 4061, column: 27, scope: !7149)
!7165 = !DILocation(line: 4061, column: 5, scope: !7149)
!7166 = !DILocation(line: 4066, column: 19, scope: !6942)
!7167 = !DILocation(line: 4066, column: 9, scope: !6942)
!7168 = !DILocation(line: 4068, column: 19, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4068, column: 7)
!7170 = !DILocation(line: 4068, column: 22, scope: !7169)
!7171 = !DILocation(line: 4068, column: 7, scope: !6942)
!7172 = !DILocation(line: 4070, column: 27, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 4069, column: 5)
!7174 = !DILocation(line: 4071, column: 7, scope: !7173)
!7175 = !DILocation(line: 4071, column: 25, scope: !7173)
!7176 = !DILocation(line: 4072, column: 5, scope: !7173)
!7177 = !DILocation(line: 4075, column: 1, scope: !6942)
!7178 = distinct !DISubprogram(name: "finish_decl", scope: !3, file: !3, line: 4086, type: !7179, scopeLine: 4088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7181)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{null, !672, !760, !672, !672, !672}
!7181 = !{!7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7193, !7194, !7198, !7207, !7210, !7213, !7214, !7215}
!7182 = !DILocalVariable(name: "decl", arg: 1, scope: !7178, file: !3, line: 4086, type: !672)
!7183 = !DILocalVariable(name: "init_loc", arg: 2, scope: !7178, file: !3, line: 4086, type: !760)
!7184 = !DILocalVariable(name: "init", arg: 3, scope: !7178, file: !3, line: 4086, type: !672)
!7185 = !DILocalVariable(name: "origtype", arg: 4, scope: !7178, file: !3, line: 4087, type: !672)
!7186 = !DILocalVariable(name: "asmspec_tree", arg: 5, scope: !7178, file: !3, line: 4087, type: !672)
!7187 = !DILocalVariable(name: "type", scope: !7178, file: !3, line: 4089, type: !672)
!7188 = !DILocalVariable(name: "was_incomplete", scope: !7178, file: !3, line: 4090, type: !619)
!7189 = !DILocalVariable(name: "asmspec", scope: !7178, file: !3, line: 4091, type: !625)
!7190 = !DILocalVariable(name: "do_default", scope: !7191, file: !3, line: 4130, type: !619)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 4129, column: 5)
!7192 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4126, column: 7)
!7193 = !DILocalVariable(name: "failure", scope: !7191, file: !3, line: 4136, type: !620)
!7194 = !DILocalVariable(name: "b_ext", scope: !7195, file: !3, line: 4171, type: !2061)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 4170, column: 6)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 4169, column: 8)
!7197 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 4144, column: 2)
!7198 = !DILocalVariable(name: "bind", scope: !7199, file: !3, line: 4318, type: !672)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 4317, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 4314, column: 12)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 4308, column: 6)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4307, column: 8)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 4293, column: 2)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4282, column: 11)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 4256, column: 5)
!7206 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4255, column: 7)
!7207 = !DILocalVariable(name: "attr", scope: !7208, file: !3, line: 4364, type: !672)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 4363, column: 5)
!7209 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4362, column: 7)
!7210 = !DILocalVariable(name: "cleanup_id", scope: !7211, file: !3, line: 4367, type: !672)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 4366, column: 2)
!7212 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 4365, column: 11)
!7213 = !DILocalVariable(name: "cleanup_decl", scope: !7211, file: !3, line: 4368, type: !672)
!7214 = !DILocalVariable(name: "cleanup", scope: !7211, file: !3, line: 4369, type: !672)
!7215 = !DILocalVariable(name: "vec", scope: !7211, file: !3, line: 4370, type: !1507)
!7216 = !DILocation(line: 0, scope: !7178)
!7217 = !DILocation(line: 4090, column: 26, scope: !7178)
!7218 = !DILocation(line: 4090, column: 43, scope: !7178)
!7219 = !DILocation(line: 4094, column: 8, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4094, column: 7)
!7221 = !DILocation(line: 4094, column: 25, scope: !7220)
!7222 = !DILocation(line: 4094, column: 42, scope: !7220)
!7223 = !DILocation(line: 4094, column: 62, scope: !7220)
!7224 = !DILocation(line: 4095, column: 7, scope: !7220)
!7225 = !DILocation(line: 4095, column: 10, scope: !7220)
!7226 = !DILocation(line: 4094, column: 7, scope: !7178)
!7227 = !DILocation(line: 4096, column: 20, scope: !7220)
!7228 = !DILocation(line: 4100, column: 7, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4100, column: 7)
!7230 = !DILocation(line: 4096, column: 5, scope: !7220)
!7231 = !DILocation(line: 4097, column: 7, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4097, column: 7)
!7233 = !DILocation(line: 4097, column: 7, scope: !7178)
!7234 = !DILocation(line: 4100, column: 24, scope: !7229)
!7235 = !DILocation(line: 4101, column: 7, scope: !7229)
!7236 = !DILocation(line: 4101, column: 10, scope: !7229)
!7237 = !DILocation(line: 4102, column: 7, scope: !7229)
!7238 = !DILocation(line: 4102, column: 10, scope: !7229)
!7239 = !DILocation(line: 4100, column: 7, scope: !7178)
!7240 = !DILocation(line: 4105, column: 5, scope: !7229)
!7241 = !DILocation(line: 4108, column: 12, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4108, column: 7)
!7243 = !DILocation(line: 4108, column: 17, scope: !7242)
!7244 = !DILocation(line: 4108, column: 20, scope: !7242)
!7245 = !DILocation(line: 4108, column: 40, scope: !7242)
!7246 = !DILocation(line: 4108, column: 7, scope: !7178)
!7247 = !DILocation(line: 4112, column: 7, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4112, column: 7)
!7249 = !DILocation(line: 4112, column: 24, scope: !7248)
!7250 = !DILocation(line: 4112, column: 7, scope: !7178)
!7251 = !DILocation(line: 4115, column: 7, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4115, column: 7)
!7253 = !DILocation(line: 4115, column: 7, scope: !7178)
!7254 = !DILocation(line: 4116, column: 5, scope: !7252)
!7255 = !DILocation(line: 4118, column: 7, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4118, column: 7)
!7257 = !DILocation(line: 4118, column: 25, scope: !7256)
!7258 = !DILocation(line: 4118, column: 29, scope: !7256)
!7259 = !DILocation(line: 4118, column: 46, scope: !7256)
!7260 = !DILocation(line: 4119, column: 8, scope: !7256)
!7261 = !DILocation(line: 4119, column: 28, scope: !7256)
!7262 = !DILocation(line: 4120, column: 8, scope: !7256)
!7263 = !DILocation(line: 4120, column: 28, scope: !7256)
!7264 = !DILocation(line: 4118, column: 7, scope: !7178)
!7265 = !DILocation(line: 4121, column: 5, scope: !7256)
!7266 = !DILocation(line: 4123, column: 10, scope: !7178)
!7267 = !DILocation(line: 4126, column: 7, scope: !7192)
!7268 = !DILocation(line: 4126, column: 24, scope: !7192)
!7269 = !DILocation(line: 4127, column: 7, scope: !7192)
!7270 = !DILocation(line: 4127, column: 10, scope: !7192)
!7271 = !DILocation(line: 4127, column: 29, scope: !7192)
!7272 = !DILocation(line: 4128, column: 7, scope: !7192)
!7273 = !DILocation(line: 4128, column: 10, scope: !7192)
!7274 = !DILocation(line: 4128, column: 27, scope: !7192)
!7275 = !DILocation(line: 4126, column: 7, scope: !7178)
!7276 = !DILocation(line: 4131, column: 5, scope: !7191)
!7277 = !DILocation(line: 4134, column: 7, scope: !7191)
!7278 = !DILocation(line: 4134, column: 16, scope: !7191)
!7279 = !DILocation(line: 4134, column: 19, scope: !7191)
!7280 = !DILocation(line: 0, scope: !7191)
!7281 = !DILocation(line: 4135, column: 8, scope: !7191)
!7282 = !DILocation(line: 4135, column: 7, scope: !7191)
!7283 = !DILocation(line: 4137, column: 44, scope: !7191)
!7284 = !DILocation(line: 4137, column: 4, scope: !7191)
!7285 = !DILocation(line: 4141, column: 14, scope: !7191)
!7286 = !DILocation(line: 4143, column: 7, scope: !7191)
!7287 = !DILocation(line: 4146, column: 4, scope: !7197)
!7288 = !DILocation(line: 4147, column: 4, scope: !7197)
!7289 = !DILocation(line: 4150, column: 8, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 4150, column: 8)
!7291 = !DILocation(line: 4150, column: 8, scope: !7197)
!7292 = !DILocation(line: 4151, column: 6, scope: !7290)
!7293 = !DILocation(line: 4158, column: 14, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 4158, column: 13)
!7295 = !DILocation(line: 4158, column: 23, scope: !7294)
!7296 = !DILocation(line: 4158, column: 26, scope: !7294)
!7297 = !DILocation(line: 4158, column: 45, scope: !7294)
!7298 = !DILocation(line: 4158, column: 49, scope: !7294)
!7299 = !DILocation(line: 4158, column: 13, scope: !7290)
!7300 = !DILocation(line: 4159, column: 6, scope: !7294)
!7301 = !DILocation(line: 4159, column: 27, scope: !7294)
!7302 = !DILocation(line: 4163, column: 4, scope: !7197)
!7303 = !DILocation(line: 4164, column: 4, scope: !7197)
!7304 = !DILocation(line: 4169, column: 8, scope: !7196)
!7305 = !DILocation(line: 4169, column: 8, scope: !7197)
!7306 = !DILocation(line: 4171, column: 34, scope: !7195)
!7307 = !DILocation(line: 4172, column: 8, scope: !7195)
!7308 = !DILocation(line: 0, scope: !7195)
!7309 = !DILocation(line: 4172, column: 21, scope: !7195)
!7310 = !DILocation(line: 4172, column: 25, scope: !7195)
!7311 = !DILocation(line: 4173, column: 18, scope: !7195)
!7312 = distinct !{!7312, !7307, !7311}
!7313 = !DILocation(line: 4176, column: 18, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 4176, column: 9)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 4175, column: 3)
!7316 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 4174, column: 12)
!7317 = !DILocation(line: 4176, column: 9, scope: !7314)
!7318 = !DILocation(line: 4176, column: 9, scope: !7315)
!7319 = !DILocation(line: 4177, column: 23, scope: !7314)
!7320 = !DILocation(line: 4177, column: 21, scope: !7314)
!7321 = !DILocation(line: 4177, column: 7, scope: !7314)
!7322 = !DILocation(line: 4179, column: 21, scope: !7314)
!7323 = !DILocation(line: 4185, column: 4, scope: !7197)
!7324 = !DILocation(line: 4186, column: 2, scope: !7197)
!7325 = !DILocation(line: 4188, column: 11, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 4188, column: 11)
!7327 = !DILocation(line: 4188, column: 11, scope: !7191)
!7328 = !DILocation(line: 4189, column: 2, scope: !7326)
!7329 = !DILocation(line: 4189, column: 34, scope: !7326)
!7330 = !DILocation(line: 4191, column: 7, scope: !7191)
!7331 = !DILocation(line: 4192, column: 5, scope: !7191)
!7332 = !DILocation(line: 4194, column: 7, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4194, column: 7)
!7334 = !DILocation(line: 4194, column: 24, scope: !7333)
!7335 = !DILocation(line: 4194, column: 7, scope: !7178)
!7336 = !DILocation(line: 4196, column: 16, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4196, column: 11)
!7338 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 4195, column: 5)
!7339 = !DILocation(line: 4196, column: 19, scope: !7337)
!7340 = !DILocation(line: 4196, column: 36, scope: !7337)
!7341 = !DILocation(line: 4196, column: 11, scope: !7338)
!7342 = !DILocation(line: 4197, column: 2, scope: !7337)
!7343 = !DILocation(line: 4199, column: 11, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4199, column: 11)
!7345 = !DILocation(line: 4199, column: 28, scope: !7344)
!7346 = !DILocation(line: 4199, column: 33, scope: !7344)
!7347 = !DILocation(line: 4199, column: 36, scope: !7344)
!7348 = !DILocation(line: 4199, column: 56, scope: !7344)
!7349 = !DILocation(line: 4199, column: 53, scope: !7344)
!7350 = !DILocation(line: 4200, column: 4, scope: !7344)
!7351 = !DILocation(line: 4200, column: 7, scope: !7344)
!7352 = !DILocation(line: 4199, column: 11, scope: !7338)
!7353 = !DILocation(line: 4201, column: 2, scope: !7344)
!7354 = !DILocation(line: 4203, column: 11, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4203, column: 11)
!7356 = !DILocation(line: 4203, column: 28, scope: !7355)
!7357 = !DILocation(line: 4205, column: 4, scope: !7355)
!7358 = !DILocation(line: 4205, column: 7, scope: !7355)
!7359 = !DILocation(line: 4205, column: 27, scope: !7355)
!7360 = !DILocation(line: 4205, column: 24, scope: !7355)
!7361 = !DILocation(line: 4206, column: 4, scope: !7355)
!7362 = !DILocation(line: 4206, column: 8, scope: !7355)
!7363 = !DILocation(line: 4203, column: 11, scope: !7338)
!7364 = !DILocation(line: 4212, column: 11, scope: !7355)
!7365 = !DILocation(line: 4212, column: 31, scope: !7355)
!7366 = !DILocation(line: 4213, column: 4, scope: !7355)
!7367 = !DILocation(line: 4213, column: 8, scope: !7355)
!7368 = !DILocation(line: 4216, column: 11, scope: !7355)
!7369 = !DILocation(line: 4218, column: 5, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4217, column: 3)
!7371 = !DILocation(line: 4219, column: 24, scope: !7370)
!7372 = !DILocation(line: 4219, column: 22, scope: !7370)
!7373 = !DILocation(line: 4220, column: 3, scope: !7370)
!7374 = !DILocation(line: 4222, column: 12, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4222, column: 11)
!7376 = !DILocation(line: 4222, column: 33, scope: !7375)
!7377 = !DILocation(line: 4222, column: 36, scope: !7375)
!7378 = !DILocation(line: 4223, column: 4, scope: !7375)
!7379 = !DILocation(line: 4223, column: 7, scope: !7375)
!7380 = !DILocation(line: 4223, column: 24, scope: !7375)
!7381 = !DILocation(line: 4222, column: 11, scope: !7338)
!7382 = !DILocation(line: 4225, column: 8, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 4225, column: 8)
!7384 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 4224, column: 2)
!7385 = !DILocation(line: 4225, column: 37, scope: !7383)
!7386 = !DILocation(line: 4225, column: 8, scope: !7384)
!7387 = !DILocation(line: 4226, column: 6, scope: !7383)
!7388 = !DILocation(line: 4229, column: 8, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 4228, column: 6)
!7390 = !DILocation(line: 4230, column: 27, scope: !7389)
!7391 = !DILocation(line: 4230, column: 25, scope: !7389)
!7392 = !DILocation(line: 4234, column: 11, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4234, column: 11)
!7394 = !DILocation(line: 4234, column: 11, scope: !7338)
!7395 = !DILocation(line: 4241, column: 7, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4241, column: 7)
!7397 = !DILocation(line: 4235, column: 19, scope: !7393)
!7398 = !DILocation(line: 4235, column: 2, scope: !7393)
!7399 = !DILocation(line: 4241, column: 24, scope: !7396)
!7400 = !DILocation(line: 4241, column: 44, scope: !7396)
!7401 = !DILocation(line: 4241, column: 41, scope: !7396)
!7402 = !DILocation(line: 4243, column: 11, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 4243, column: 11)
!7404 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 4242, column: 5)
!7405 = !DILocation(line: 4243, column: 38, scope: !7403)
!7406 = !DILocation(line: 4243, column: 11, scope: !7404)
!7407 = !DILocation(line: 4244, column: 2, scope: !7403)
!7408 = !DILocation(line: 4245, column: 7, scope: !7404)
!7409 = !DILocation(line: 4246, column: 5, scope: !7404)
!7410 = !DILocation(line: 4249, column: 3, scope: !7178)
!7411 = !DILocation(line: 4255, column: 7, scope: !7206)
!7412 = !DILocation(line: 4255, column: 24, scope: !7206)
!7413 = !DILocation(line: 4255, column: 36, scope: !7206)
!7414 = !DILocation(line: 4255, column: 56, scope: !7206)
!7415 = !DILocation(line: 4255, column: 7, scope: !7178)
!7416 = !DILocation(line: 4258, column: 11, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4258, column: 11)
!7418 = !DILocation(line: 4258, column: 11, scope: !7205)
!7419 = !DILocation(line: 4259, column: 2, scope: !7417)
!7420 = !DILocation(line: 4262, column: 11, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4262, column: 11)
!7422 = !DILocation(line: 4262, column: 11, scope: !7205)
!7423 = !DILocation(line: 4263, column: 2, scope: !7421)
!7424 = !DILocation(line: 4265, column: 11, scope: !7205)
!7425 = !DILocation(line: 4272, column: 9, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 4272, column: 8)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 4266, column: 2)
!7428 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4265, column: 11)
!7429 = !DILocation(line: 4273, column: 8, scope: !7426)
!7430 = !DILocation(line: 4273, column: 11, scope: !7426)
!7431 = !DILocation(line: 4273, column: 28, scope: !7426)
!7432 = !DILocation(line: 4274, column: 8, scope: !7426)
!7433 = !DILocation(line: 4274, column: 12, scope: !7426)
!7434 = !DILocation(line: 4275, column: 8, scope: !7426)
!7435 = !DILocation(line: 4275, column: 12, scope: !7426)
!7436 = !DILocation(line: 4272, column: 8, scope: !7427)
!7437 = !DILocation(line: 4276, column: 6, scope: !7426)
!7438 = !DILocation(line: 4279, column: 6, scope: !7426)
!7439 = !DILocation(line: 4282, column: 11, scope: !7204)
!7440 = !DILocation(line: 4282, column: 11, scope: !7205)
!7441 = !DILocation(line: 4284, column: 8, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 4284, column: 8)
!7443 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 4283, column: 2)
!7444 = !DILocation(line: 4284, column: 28, scope: !7442)
!7445 = !DILocation(line: 4285, column: 8, scope: !7442)
!7446 = !DILocation(line: 4285, column: 34, scope: !7442)
!7447 = !DILocation(line: 4285, column: 31, scope: !7442)
!7448 = !DILocation(line: 4284, column: 8, scope: !7443)
!7449 = !DILocation(line: 4289, column: 6, scope: !7442)
!7450 = !DILocation(line: 4289, column: 31, scope: !7442)
!7451 = !DILocation(line: 4290, column: 4, scope: !7443)
!7452 = !DILocation(line: 4291, column: 2, scope: !7443)
!7453 = !DILocation(line: 4297, column: 16, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4297, column: 8)
!7455 = !DILocation(line: 4297, column: 19, scope: !7454)
!7456 = !DILocation(line: 4297, column: 8, scope: !7203)
!7457 = !DILocation(line: 4299, column: 8, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4298, column: 6)
!7459 = !DILocation(line: 4299, column: 34, scope: !7458)
!7460 = !DILocation(line: 4303, column: 13, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 4303, column: 12)
!7462 = !DILocation(line: 4303, column: 12, scope: !7458)
!7463 = !DILocation(line: 4304, column: 3, scope: !7461)
!7464 = !DILocation(line: 4307, column: 8, scope: !7202)
!7465 = !DILocation(line: 4307, column: 25, scope: !7202)
!7466 = !DILocation(line: 4307, column: 8, scope: !7203)
!7467 = !DILocation(line: 4314, column: 12, scope: !7200)
!7468 = !DILocation(line: 4315, column: 5, scope: !7200)
!7469 = !DILocation(line: 4315, column: 9, scope: !7200)
!7470 = !DILocation(line: 4316, column: 5, scope: !7200)
!7471 = !DILocation(line: 4316, column: 8, scope: !7200)
!7472 = !DILocation(line: 4314, column: 12, scope: !7201)
!7473 = !DILocation(line: 4319, column: 12, scope: !7199)
!7474 = !DILocation(line: 0, scope: !7199)
!7475 = !DILocation(line: 4320, column: 5, scope: !7199)
!7476 = !DILocation(line: 4320, column: 30, scope: !7199)
!7477 = !DILocation(line: 4321, column: 5, scope: !7199)
!7478 = !DILocation(line: 4322, column: 29, scope: !7199)
!7479 = !DILocation(line: 4322, column: 5, scope: !7199)
!7480 = !DILocation(line: 4322, column: 27, scope: !7199)
!7481 = !DILocation(line: 4323, column: 3, scope: !7199)
!7482 = !DILocation(line: 4324, column: 30, scope: !7201)
!7483 = !DILocation(line: 4324, column: 18, scope: !7201)
!7484 = !DILocation(line: 4324, column: 8, scope: !7201)
!7485 = !DILocation(line: 4326, column: 6, scope: !7201)
!7486 = !DILocation(line: 4330, column: 12, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 4330, column: 11)
!7488 = !DILocation(line: 4330, column: 11, scope: !7205)
!7489 = !DILocation(line: 4335, column: 12, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 4334, column: 8)
!7491 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 4331, column: 2)
!7492 = !DILocation(line: 4335, column: 31, scope: !7490)
!7493 = !DILocation(line: 4335, column: 35, scope: !7490)
!7494 = !DILocation(line: 4334, column: 8, scope: !7491)
!7495 = !DILocation(line: 4338, column: 32, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 4336, column: 6)
!7497 = !DILocation(line: 4340, column: 12, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 4340, column: 12)
!7499 = !DILocation(line: 4340, column: 29, scope: !7498)
!7500 = !DILocation(line: 4340, column: 12, scope: !7496)
!7501 = !DILocation(line: 4341, column: 3, scope: !7498)
!7502 = !DILocation(line: 4341, column: 23, scope: !7498)
!7503 = !DILocation(line: 4346, column: 7, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4346, column: 7)
!7505 = !DILocation(line: 4346, column: 24, scope: !7504)
!7506 = !DILocation(line: 4346, column: 7, scope: !7178)
!7507 = !DILocation(line: 4348, column: 12, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 4348, column: 11)
!7509 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 4347, column: 5)
!7510 = !DILocation(line: 4349, column: 4, scope: !7508)
!7511 = !DILocation(line: 4349, column: 33, scope: !7508)
!7512 = !DILocation(line: 4349, column: 7, scope: !7508)
!7513 = !DILocation(line: 4348, column: 11, scope: !7509)
!7514 = !DILocation(line: 4350, column: 24, scope: !7508)
!7515 = !DILocation(line: 4350, column: 12, scope: !7508)
!7516 = !DILocation(line: 4350, column: 2, scope: !7508)
!7517 = !DILocation(line: 4352, column: 39, scope: !7509)
!7518 = !DILocation(line: 4352, column: 7, scope: !7509)
!7519 = !DILocation(line: 4353, column: 5, scope: !7509)
!7520 = !DILocation(line: 4358, column: 7, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4358, column: 7)
!7522 = !DILocation(line: 4358, column: 24, scope: !7521)
!7523 = !DILocation(line: 4358, column: 21, scope: !7521)
!7524 = !DILocation(line: 4358, column: 7, scope: !7178)
!7525 = !DILocation(line: 4359, column: 5, scope: !7521)
!7526 = !DILocation(line: 4362, column: 7, scope: !7209)
!7527 = !DILocation(line: 4362, column: 24, scope: !7209)
!7528 = !DILocation(line: 4362, column: 36, scope: !7209)
!7529 = !DILocation(line: 4362, column: 40, scope: !7209)
!7530 = !DILocation(line: 4362, column: 7, scope: !7178)
!7531 = !DILocation(line: 4364, column: 48, scope: !7208)
!7532 = !DILocation(line: 4364, column: 19, scope: !7208)
!7533 = !DILocation(line: 0, scope: !7208)
!7534 = !DILocation(line: 4365, column: 11, scope: !7212)
!7535 = !DILocation(line: 4365, column: 11, scope: !7208)
!7536 = !DILocation(line: 4367, column: 22, scope: !7211)
!7537 = !DILocation(line: 0, scope: !7211)
!7538 = !DILocation(line: 4368, column: 24, scope: !7211)
!7539 = !DILocation(line: 4370, column: 4, scope: !7211)
!7540 = !DILocation(line: 4373, column: 30, scope: !7211)
!7541 = !DILocation(line: 4373, column: 14, scope: !7211)
!7542 = !DILocation(line: 4374, column: 10, scope: !7211)
!7543 = !DILocation(line: 4374, column: 8, scope: !7211)
!7544 = !DILocation(line: 4375, column: 4, scope: !7211)
!7545 = !DILocation(line: 4376, column: 39, scope: !7211)
!7546 = !DILocation(line: 4376, column: 14, scope: !7211)
!7547 = !DILocation(line: 4378, column: 4, scope: !7211)
!7548 = !DILocation(line: 4381, column: 21, scope: !7211)
!7549 = !DILocation(line: 4382, column: 4, scope: !7211)
!7550 = !DILocation(line: 4382, column: 29, scope: !7211)
!7551 = !DILocation(line: 4384, column: 4, scope: !7211)
!7552 = !DILocation(line: 4385, column: 2, scope: !7212)
!7553 = !DILocation(line: 4385, column: 2, scope: !7211)
!7554 = !DILocation(line: 4388, column: 7, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4388, column: 7)
!7556 = !DILocation(line: 4389, column: 7, scope: !7555)
!7557 = !DILocation(line: 4389, column: 10, scope: !7555)
!7558 = !DILocation(line: 4389, column: 27, scope: !7555)
!7559 = !DILocation(line: 4390, column: 7, scope: !7555)
!7560 = !DILocation(line: 4390, column: 10, scope: !7555)
!7561 = !DILocation(line: 4391, column: 7, scope: !7555)
!7562 = !DILocation(line: 4391, column: 11, scope: !7555)
!7563 = !DILocation(line: 4392, column: 7, scope: !7555)
!7564 = !DILocation(line: 4392, column: 10, scope: !7555)
!7565 = !DILocation(line: 4392, column: 30, scope: !7555)
!7566 = !DILocation(line: 4388, column: 7, scope: !7178)
!7567 = !DILocation(line: 4393, column: 17, scope: !7555)
!7568 = !DILocation(line: 4393, column: 5, scope: !7555)
!7569 = !DILocation(line: 4395, column: 1, scope: !7178)
!7570 = distinct !DISubprogram(name: "add_flexible_array_elts_to_size", scope: !3, file: !3, line: 3829, type: !3480, scopeLine: 3830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7571)
!7571 = !{!7572, !7573, !7574, !7575}
!7572 = !DILocalVariable(name: "decl", arg: 1, scope: !7570, file: !3, line: 3829, type: !672)
!7573 = !DILocalVariable(name: "init", arg: 2, scope: !7570, file: !3, line: 3829, type: !672)
!7574 = !DILocalVariable(name: "elt", scope: !7570, file: !3, line: 3831, type: !672)
!7575 = !DILocalVariable(name: "type", scope: !7570, file: !3, line: 3831, type: !672)
!7576 = !DILocation(line: 0, scope: !7570)
!7577 = !DILocation(line: 3831, column: 3, scope: !7570)
!7578 = !DILocation(line: 3833, column: 7, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 3833, column: 7)
!7580 = !DILocation(line: 3833, column: 7, scope: !7570)
!7581 = !DILocation(line: 3836, column: 9, scope: !7570)
!7582 = !DILocation(line: 3836, column: 62, scope: !7570)
!7583 = !DILocation(line: 3837, column: 10, scope: !7570)
!7584 = !DILocation(line: 3837, column: 8, scope: !7570)
!7585 = !DILocation(line: 3838, column: 7, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 3838, column: 7)
!7587 = !DILocation(line: 3838, column: 24, scope: !7586)
!7588 = !DILocation(line: 3839, column: 7, scope: !7586)
!7589 = !DILocation(line: 3839, column: 10, scope: !7586)
!7590 = !DILocation(line: 3839, column: 27, scope: !7586)
!7591 = !DILocation(line: 3840, column: 7, scope: !7586)
!7592 = !DILocation(line: 3840, column: 10, scope: !7586)
!7593 = !DILocation(line: 3840, column: 29, scope: !7586)
!7594 = !DILocation(line: 3841, column: 7, scope: !7586)
!7595 = !DILocation(line: 3841, column: 10, scope: !7586)
!7596 = !DILocation(line: 3841, column: 46, scope: !7586)
!7597 = !DILocation(line: 3838, column: 7, scope: !7570)
!7598 = !DILocation(line: 3843, column: 7, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 3842, column: 5)
!7600 = !DILocation(line: 3845, column: 4, scope: !7599)
!7601 = !DILocation(line: 3845, column: 2, scope: !7599)
!7602 = !DILocation(line: 3847, column: 4, scope: !7599)
!7603 = !DILocation(line: 3847, column: 2, scope: !7599)
!7604 = !DILocation(line: 3848, column: 5, scope: !7599)
!7605 = !DILocation(line: 3849, column: 1, scope: !7570)
!7606 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !135, file: !135, line: 183, type: !7607, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!1507, !620}
!7609 = !{!7610}
!7610 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7606, file: !135, line: 183, type: !620)
!7611 = !DILocation(line: 0, scope: !7606)
!7612 = !DILocation(line: 183, column: 1, scope: !7606)
!7613 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !7614, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7617)
!7614 = !DISubroutineType(types: !7615)
!7615 = !{!996, !7616, !672}
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!7617 = !{!7618, !7619, !7620}
!7618 = !DILocalVariable(name: "vec_", arg: 1, scope: !7613, file: !135, line: 182, type: !7616)
!7619 = !DILocalVariable(name: "obj_", arg: 2, scope: !7613, file: !135, line: 182, type: !672)
!7620 = !DILocalVariable(name: "slot_", scope: !7613, file: !135, line: 182, type: !996)
!7621 = !DILocation(line: 0, scope: !7613)
!7622 = !DILocation(line: 182, column: 1, scope: !7613)
!7623 = distinct !DISubprogram(name: "VEC_tree_gc_free", scope: !135, file: !135, line: 183, type: !7624, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7627)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{null, !7626}
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!7627 = !{!7628}
!7628 = !DILocalVariable(name: "vec_", arg: 1, scope: !7623, file: !135, line: 183, type: !7626)
!7629 = !DILocation(line: 0, scope: !7623)
!7630 = !DILocation(line: 183, column: 1, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7623, file: !135, line: 183, column: 1)
!7632 = !DILocation(line: 183, column: 1, scope: !7623)
!7633 = distinct !DISubprogram(name: "grokparm", scope: !3, file: !3, line: 4400, type: !7634, scopeLine: 4401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7638)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!672, !7636}
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7637, size: 64)
!7637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2187)
!7638 = !{!7639, !7640, !7641}
!7639 = !DILocalVariable(name: "parm", arg: 1, scope: !7633, file: !3, line: 4400, type: !7636)
!7640 = !DILocalVariable(name: "attrs", scope: !7633, file: !3, line: 4402, type: !672)
!7641 = !DILocalVariable(name: "decl", scope: !7633, file: !3, line: 4403, type: !672)
!7642 = !DILocation(line: 0, scope: !7633)
!7643 = !DILocation(line: 4402, column: 3, scope: !7633)
!7644 = !DILocation(line: 4402, column: 22, scope: !7633)
!7645 = !DILocation(line: 4402, column: 8, scope: !7633)
!7646 = !DILocation(line: 4403, column: 3, scope: !7633)
!7647 = !DILocation(line: 4403, column: 37, scope: !7633)
!7648 = !DILocation(line: 4403, column: 55, scope: !7633)
!7649 = !DILocation(line: 4403, column: 15, scope: !7633)
!7650 = !DILocation(line: 4403, column: 8, scope: !7633)
!7651 = !DILocation(line: 4406, column: 27, scope: !7633)
!7652 = !DILocation(line: 4406, column: 3, scope: !7633)
!7653 = !DILocation(line: 4408, column: 10, scope: !7633)
!7654 = !DILocation(line: 4409, column: 1, scope: !7633)
!7655 = !DILocation(line: 4408, column: 3, scope: !7633)
!7656 = distinct !DISubprogram(name: "push_parm_decl", scope: !3, file: !3, line: 4415, type: !7657, scopeLine: 4416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7659)
!7657 = !DISubroutineType(types: !7658)
!7658 = !{null, !7636}
!7659 = !{!7660, !7661, !7662}
!7660 = !DILocalVariable(name: "parm", arg: 1, scope: !7656, file: !3, line: 4415, type: !7636)
!7661 = !DILocalVariable(name: "attrs", scope: !7656, file: !3, line: 4417, type: !672)
!7662 = !DILocalVariable(name: "decl", scope: !7656, file: !3, line: 4418, type: !672)
!7663 = !DILocation(line: 0, scope: !7656)
!7664 = !DILocation(line: 4417, column: 3, scope: !7656)
!7665 = !DILocation(line: 4417, column: 22, scope: !7656)
!7666 = !DILocation(line: 4417, column: 8, scope: !7656)
!7667 = !DILocation(line: 4418, column: 3, scope: !7656)
!7668 = !DILocation(line: 4420, column: 32, scope: !7656)
!7669 = !DILocation(line: 4420, column: 50, scope: !7656)
!7670 = !DILocation(line: 4420, column: 10, scope: !7656)
!7671 = !DILocation(line: 4420, column: 8, scope: !7656)
!7672 = !DILocation(line: 4422, column: 27, scope: !7656)
!7673 = !DILocation(line: 4422, column: 3, scope: !7656)
!7674 = !DILocation(line: 4424, column: 20, scope: !7656)
!7675 = !DILocation(line: 4424, column: 10, scope: !7656)
!7676 = !DILocation(line: 4424, column: 8, scope: !7656)
!7677 = !DILocation(line: 4426, column: 22, scope: !7656)
!7678 = !DILocation(line: 4426, column: 3, scope: !7656)
!7679 = !DILocation(line: 4427, column: 1, scope: !7656)
!7680 = distinct !DISubprogram(name: "mark_forward_parm_decls", scope: !3, file: !3, line: 4433, type: !2978, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7681)
!7681 = !{!7682}
!7682 = !DILocalVariable(name: "b", scope: !7680, file: !3, line: 4435, type: !2061)
!7683 = !DILocation(line: 4437, column: 7, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 4437, column: 7)
!7685 = !DILocation(line: 4437, column: 16, scope: !7684)
!7686 = !DILocation(line: 4444, column: 12, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 4444, column: 3)
!7688 = !DILocation(line: 4437, column: 20, scope: !7684)
!7689 = !DILocation(line: 4437, column: 35, scope: !7684)
!7690 = !DILocation(line: 4437, column: 7, scope: !7680)
!7691 = !DILocation(line: 4439, column: 16, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 4438, column: 5)
!7693 = !DILocation(line: 4439, column: 7, scope: !7692)
!7694 = !DILocation(line: 4441, column: 7, scope: !7692)
!7695 = !DILocation(line: 4441, column: 22, scope: !7692)
!7696 = !DILocation(line: 4441, column: 48, scope: !7692)
!7697 = !DILocation(line: 4442, column: 5, scope: !7692)
!7698 = !DILocation(line: 4444, column: 27, scope: !7687)
!7699 = !DILocation(line: 4444, column: 8, scope: !7687)
!7700 = !DILocation(line: 0, scope: !7687)
!7701 = !DILocation(line: 0, scope: !7680)
!7702 = !DILocation(line: 4444, column: 3, scope: !7687)
!7703 = !DILocation(line: 4445, column: 9, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 4445, column: 9)
!7705 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 4444, column: 3)
!7706 = !DILocation(line: 4445, column: 29, scope: !7704)
!7707 = !DILocation(line: 4445, column: 9, scope: !7705)
!7708 = !DILocation(line: 4446, column: 34, scope: !7704)
!7709 = !DILocation(line: 4446, column: 7, scope: !7704)
!7710 = !DILocation(line: 4444, column: 47, scope: !7705)
!7711 = !DILocation(line: 4444, column: 3, scope: !7705)
!7712 = distinct !{!7712, !7702, !7713}
!7713 = !DILocation(line: 4446, column: 36, scope: !7687)
!7714 = !DILocation(line: 4447, column: 1, scope: !7680)
!7715 = distinct !DISubprogram(name: "build_compound_literal", scope: !3, file: !3, line: 4456, type: !7716, scopeLine: 4457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!672, !760, !672, !672, !619}
!7718 = !{!7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726}
!7719 = !DILocalVariable(name: "loc", arg: 1, scope: !7715, file: !3, line: 4456, type: !760)
!7720 = !DILocalVariable(name: "type", arg: 2, scope: !7715, file: !3, line: 4456, type: !672)
!7721 = !DILocalVariable(name: "init", arg: 3, scope: !7715, file: !3, line: 4456, type: !672)
!7722 = !DILocalVariable(name: "non_const", arg: 4, scope: !7715, file: !3, line: 4456, type: !619)
!7723 = !DILocalVariable(name: "decl", scope: !7715, file: !3, line: 4461, type: !672)
!7724 = !DILocalVariable(name: "complit", scope: !7715, file: !3, line: 4462, type: !672)
!7725 = !DILocalVariable(name: "stmt", scope: !7715, file: !3, line: 4463, type: !672)
!7726 = !DILocalVariable(name: "failure", scope: !7727, file: !3, line: 4481, type: !620)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 4480, column: 5)
!7728 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 4479, column: 7)
!7729 = !DILocation(line: 0, scope: !7715)
!7730 = !DILocation(line: 4465, column: 15, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 4465, column: 7)
!7732 = !DILocation(line: 4465, column: 12, scope: !7731)
!7733 = !DILocation(line: 4466, column: 15, scope: !7731)
!7734 = !DILocation(line: 4466, column: 7, scope: !7731)
!7735 = !DILocation(line: 4467, column: 5, scope: !7731)
!7736 = !DILocation(line: 4469, column: 10, scope: !7715)
!7737 = !DILocation(line: 4470, column: 3, scope: !7715)
!7738 = !DILocation(line: 4470, column: 24, scope: !7715)
!7739 = !DILocation(line: 4471, column: 3, scope: !7715)
!7740 = !DILocation(line: 4471, column: 22, scope: !7715)
!7741 = !DILocation(line: 4472, column: 25, scope: !7715)
!7742 = !DILocation(line: 4472, column: 42, scope: !7715)
!7743 = !DILocation(line: 4472, column: 39, scope: !7715)
!7744 = !DILocation(line: 4472, column: 22, scope: !7715)
!7745 = !DILocation(line: 4473, column: 25, scope: !7715)
!7746 = !DILocation(line: 4473, column: 3, scope: !7715)
!7747 = !DILocation(line: 4473, column: 23, scope: !7715)
!7748 = !DILocation(line: 4474, column: 20, scope: !7715)
!7749 = !DILocation(line: 4475, column: 3, scope: !7715)
!7750 = !DILocation(line: 4475, column: 20, scope: !7715)
!7751 = !DILocation(line: 4476, column: 26, scope: !7715)
!7752 = !DILocation(line: 4476, column: 24, scope: !7715)
!7753 = !DILocation(line: 4477, column: 3, scope: !7715)
!7754 = !DILocation(line: 4479, column: 7, scope: !7728)
!7755 = !DILocation(line: 4479, column: 24, scope: !7728)
!7756 = !DILocation(line: 4479, column: 38, scope: !7728)
!7757 = !DILocation(line: 4479, column: 42, scope: !7728)
!7758 = !DILocation(line: 4479, column: 7, scope: !7715)
!7759 = !DILocation(line: 4482, column: 7, scope: !7727)
!7760 = !DILocation(line: 4481, column: 21, scope: !7727)
!7761 = !DILocation(line: 0, scope: !7727)
!7762 = !DILocation(line: 4483, column: 7, scope: !7727)
!7763 = !DILocation(line: 4485, column: 14, scope: !7727)
!7764 = !DILocation(line: 4486, column: 7, scope: !7727)
!7765 = !DILocation(line: 4486, column: 39, scope: !7727)
!7766 = !DILocation(line: 4487, column: 5, scope: !7727)
!7767 = !DILocation(line: 4489, column: 15, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 4489, column: 7)
!7769 = !DILocation(line: 4489, column: 12, scope: !7768)
!7770 = !DILocation(line: 4489, column: 31, scope: !7768)
!7771 = !DILocation(line: 4489, column: 35, scope: !7768)
!7772 = !DILocation(line: 4489, column: 7, scope: !7715)
!7773 = !DILocation(line: 4490, column: 5, scope: !7768)
!7774 = !DILocation(line: 4492, column: 22, scope: !7715)
!7775 = !DILocation(line: 4492, column: 10, scope: !7715)
!7776 = !DILocation(line: 4493, column: 13, scope: !7715)
!7777 = !DILocation(line: 4494, column: 3, scope: !7715)
!7778 = !DILocation(line: 4494, column: 31, scope: !7715)
!7779 = !DILocation(line: 4496, column: 3, scope: !7715)
!7780 = !DILocation(line: 4498, column: 7, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 4498, column: 7)
!7782 = !DILocation(line: 4498, column: 7, scope: !7715)
!7783 = !DILocation(line: 4501, column: 7, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 4499, column: 5)
!7785 = !DILocation(line: 4502, column: 7, scope: !7784)
!7786 = !DILocation(line: 4502, column: 32, scope: !7784)
!7787 = !DILocation(line: 4503, column: 26, scope: !7784)
!7788 = !DILocation(line: 4504, column: 30, scope: !7784)
!7789 = !DILocation(line: 4505, column: 29, scope: !7784)
!7790 = !DILocation(line: 4506, column: 7, scope: !7784)
!7791 = !DILocation(line: 4507, column: 7, scope: !7784)
!7792 = !DILocation(line: 4508, column: 5, scope: !7784)
!7793 = !DILocation(line: 4510, column: 7, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 4510, column: 7)
!7795 = !DILocation(line: 4510, column: 7, scope: !7715)
!7796 = !DILocation(line: 4512, column: 17, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 4511, column: 5)
!7798 = !DILocation(line: 4513, column: 7, scope: !7797)
!7799 = !DILocation(line: 4513, column: 46, scope: !7797)
!7800 = !DILocation(line: 4514, column: 5, scope: !7797)
!7801 = !DILocation(line: 4517, column: 1, scope: !7715)
!7802 = distinct !DISubprogram(name: "check_compound_literal_type", scope: !3, file: !3, line: 4523, type: !7803, scopeLine: 4524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7805)
!7803 = !DISubroutineType(types: !7804)
!7804 = !{null, !760, !5533}
!7805 = !{!7806, !7807}
!7806 = !DILocalVariable(name: "loc", arg: 1, scope: !7802, file: !3, line: 4523, type: !760)
!7807 = !DILocalVariable(name: "type_name", arg: 2, scope: !7802, file: !3, line: 4523, type: !5533)
!7808 = !DILocation(line: 0, scope: !7802)
!7809 = !DILocation(line: 4525, column: 7, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 4525, column: 7)
!7811 = !DILocation(line: 4525, column: 23, scope: !7810)
!7812 = !DILocation(line: 4525, column: 37, scope: !7810)
!7813 = !DILocation(line: 4525, column: 44, scope: !7810)
!7814 = !DILocation(line: 4525, column: 26, scope: !7810)
!7815 = !DILocation(line: 4525, column: 7, scope: !7802)
!7816 = !DILocation(line: 4526, column: 5, scope: !7810)
!7817 = !DILocation(line: 4528, column: 1, scope: !7802)
!7818 = !DILocation(line: 0, scope: !2242)
!7819 = !DILocation(line: 6163, column: 25, scope: !2242)
!7820 = !DILocation(line: 6163, column: 40, scope: !2242)
!7821 = !DILocation(line: 6164, column: 33, scope: !2242)
!7822 = !DILocation(line: 6174, column: 13, scope: !2242)
!7823 = !DILocation(line: 6174, column: 19, scope: !2242)
!7824 = !DILocation(line: 6175, column: 13, scope: !2242)
!7825 = !DILocation(line: 6175, column: 18, scope: !2242)
!7826 = !DILocation(line: 6176, column: 13, scope: !2242)
!7827 = !DILocation(line: 6176, column: 19, scope: !2242)
!7828 = !DILocation(line: 6177, column: 13, scope: !2242)
!7829 = !DILocation(line: 6177, column: 20, scope: !2242)
!7830 = !DILocation(line: 6178, column: 13, scope: !2242)
!7831 = !DILocation(line: 6178, column: 27, scope: !2242)
!7832 = !DILocation(line: 6179, column: 30, scope: !2242)
!7833 = !DILocation(line: 6179, column: 45, scope: !2242)
!7834 = !DILocation(line: 6179, column: 13, scope: !2242)
!7835 = !DILocation(line: 6179, column: 28, scope: !2242)
!7836 = !DILocation(line: 6183, column: 18, scope: !2242)
!7837 = !DILocation(line: 6183, column: 27, scope: !2242)
!7838 = !DILocation(line: 6187, column: 3, scope: !2242)
!7839 = !DILocation(line: 6194, column: 10, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 6194, column: 7)
!7841 = !DILocation(line: 6194, column: 15, scope: !7840)
!7842 = !DILocation(line: 6195, column: 7, scope: !7840)
!7843 = !DILocation(line: 6195, column: 10, scope: !7840)
!7844 = !DILocation(line: 6195, column: 30, scope: !7840)
!7845 = !DILocation(line: 6196, column: 7, scope: !7840)
!7846 = !DILocation(line: 6196, column: 11, scope: !7840)
!7847 = !DILocation(line: 6197, column: 7, scope: !7840)
!7848 = !DILocation(line: 6197, column: 10, scope: !7840)
!7849 = !DILocation(line: 6194, column: 7, scope: !2242)
!7850 = !DILocation(line: 6199, column: 11, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 6199, column: 11)
!7852 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 6198, column: 5)
!7853 = !DILocation(line: 6200, column: 4, scope: !7851)
!7854 = !DILocation(line: 6200, column: 7, scope: !7851)
!7855 = !DILocation(line: 6201, column: 4, scope: !7851)
!7856 = !DILocation(line: 6201, column: 7, scope: !7851)
!7857 = !DILocation(line: 6199, column: 11, scope: !7852)
!7858 = !DILocation(line: 6202, column: 2, scope: !7851)
!7859 = !DILocation(line: 6205, column: 11, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 6205, column: 11)
!7861 = !DILocation(line: 6205, column: 11, scope: !7852)
!7862 = !DILocation(line: 6206, column: 2, scope: !7860)
!7863 = !DILocation(line: 6208, column: 25, scope: !7852)
!7864 = !DILocation(line: 6208, column: 23, scope: !7852)
!7865 = !DILocation(line: 6209, column: 7, scope: !7852)
!7866 = !DILocation(line: 6212, column: 8, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 6212, column: 7)
!7868 = !DILocation(line: 6213, column: 13, scope: !7867)
!7869 = !DILocation(line: 6212, column: 7, scope: !2242)
!7870 = !DILocation(line: 6217, column: 3, scope: !2242)
!7871 = !DILocation(line: 6172, column: 8, scope: !2242)
!7872 = !DILocation(line: 6169, column: 8, scope: !2242)
!7873 = !DILocation(line: 6168, column: 8, scope: !2242)
!7874 = !DILocation(line: 6167, column: 8, scope: !2242)
!7875 = !DILocation(line: 6166, column: 8, scope: !2242)
!7876 = !DILocation(line: 6219, column: 22, scope: !2255)
!7877 = !DILocation(line: 0, scope: !2255)
!7878 = !DILocation(line: 6220, column: 19, scope: !2255)
!7879 = !DILocation(line: 6223, column: 15, scope: !2255)
!7880 = !DILocation(line: 6223, column: 7, scope: !2255)
!7881 = !DILocation(line: 6226, column: 11, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 6226, column: 8)
!7883 = !DILocation(line: 6226, column: 8, scope: !7882)
!7884 = !DILocation(line: 6226, column: 8, scope: !2259)
!7885 = !DILocation(line: 6228, column: 8, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 6227, column: 6)
!7887 = !DILocation(line: 6229, column: 8, scope: !7886)
!7888 = !DILocation(line: 6229, column: 38, scope: !7886)
!7889 = !DILocation(line: 6229, column: 33, scope: !7886)
!7890 = !DILocation(line: 6233, column: 8, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 6233, column: 8)
!7892 = !DILocation(line: 6230, column: 6, scope: !7886)
!7893 = !DILocation(line: 6233, column: 8, scope: !2259)
!7894 = !DILocation(line: 6234, column: 6, scope: !7891)
!7895 = !DILocation(line: 6236, column: 13, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 6236, column: 13)
!7897 = !DILocation(line: 6236, column: 32, scope: !7896)
!7898 = !DILocation(line: 6236, column: 36, scope: !7896)
!7899 = !DILocation(line: 6236, column: 13, scope: !7891)
!7900 = !DILocation(line: 6238, column: 13, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 6238, column: 12)
!7902 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 6237, column: 6)
!7903 = !DILocation(line: 6238, column: 12, scope: !7902)
!7904 = !DILocation(line: 6240, column: 5, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 6239, column: 3)
!7906 = !DILocation(line: 6242, column: 3, scope: !7905)
!7907 = !DILocation(line: 6247, column: 8, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 6245, column: 6)
!7909 = !DILocation(line: 6247, column: 26, scope: !7908)
!7910 = !DILocation(line: 6252, column: 8, scope: !7908)
!7911 = !DILocation(line: 6252, column: 29, scope: !7908)
!7912 = !DILocation(line: 6253, column: 16, scope: !7908)
!7913 = !DILocation(line: 6258, column: 41, scope: !2259)
!7914 = !DILocation(line: 6259, column: 42, scope: !2259)
!7915 = !DILocation(line: 0, scope: !2259)
!7916 = !DILocation(line: 6260, column: 2, scope: !2259)
!7917 = !DILocation(line: 6263, column: 11, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 6263, column: 8)
!7919 = !DILocation(line: 6263, column: 8, scope: !7918)
!7920 = !DILocation(line: 6263, column: 8, scope: !2259)
!7921 = !DILocation(line: 6265, column: 8, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 6264, column: 6)
!7923 = !DILocation(line: 6266, column: 8, scope: !7922)
!7924 = !DILocation(line: 6266, column: 35, scope: !7922)
!7925 = !DILocation(line: 6266, column: 30, scope: !7922)
!7926 = !DILocation(line: 6275, column: 8, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 6275, column: 8)
!7928 = !DILocation(line: 6267, column: 6, scope: !7922)
!7929 = !DILocation(line: 6275, column: 25, scope: !7927)
!7930 = !DILocation(line: 6275, column: 39, scope: !7927)
!7931 = !DILocation(line: 6277, column: 15, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 6277, column: 12)
!7933 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 6276, column: 6)
!7934 = !DILocation(line: 6275, column: 45, scope: !7927)
!7935 = !DILocation(line: 6275, column: 48, scope: !7927)
!7936 = !DILocation(line: 6275, column: 8, scope: !2259)
!7937 = !DILocation(line: 6277, column: 12, scope: !7932)
!7938 = !DILocation(line: 6277, column: 12, scope: !7933)
!7939 = !DILocation(line: 6279, column: 3, scope: !7932)
!7940 = !DILocation(line: 6283, column: 3, scope: !7932)
!7941 = !DILocation(line: 6286, column: 13, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 6286, column: 12)
!7943 = !DILocation(line: 6286, column: 12, scope: !7933)
!7944 = !DILocation(line: 6288, column: 5, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 6287, column: 3)
!7946 = !DILocation(line: 6290, column: 32, scope: !7945)
!7947 = !DILocation(line: 6291, column: 3, scope: !7945)
!7948 = !DILocation(line: 6294, column: 11, scope: !2259)
!7949 = !DILocation(line: 6295, column: 4, scope: !2259)
!7950 = !DILocation(line: 6308, column: 4, scope: !2259)
!7951 = !DILocation(line: 6311, column: 4, scope: !2259)
!7952 = !DILocation(line: 6311, column: 22, scope: !2259)
!7953 = !DILocation(line: 6312, column: 4, scope: !2259)
!7954 = !DILocation(line: 6318, column: 11, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 6318, column: 8)
!7956 = !DILocation(line: 6318, column: 8, scope: !7955)
!7957 = !DILocation(line: 6318, column: 8, scope: !2259)
!7958 = !DILocation(line: 6320, column: 8, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 6319, column: 6)
!7960 = !DILocation(line: 6321, column: 8, scope: !7959)
!7961 = !DILocation(line: 6321, column: 38, scope: !7959)
!7962 = !DILocation(line: 6321, column: 33, scope: !7959)
!7963 = !DILocation(line: 6322, column: 6, scope: !7959)
!7964 = !DILocation(line: 6329, column: 4, scope: !2259)
!7965 = !DILocation(line: 6330, column: 2, scope: !2259)
!7966 = !DILocation(line: 6332, column: 11, scope: !2255)
!7967 = distinct !{!7967, !7870, !7968}
!7968 = !DILocation(line: 6333, column: 5, scope: !2242)
!7969 = !DILocation(line: 6335, column: 19, scope: !2242)
!7970 = !DILocation(line: 6336, column: 18, scope: !2242)
!7971 = !DILocation(line: 6337, column: 19, scope: !2242)
!7972 = !DILocation(line: 6338, column: 20, scope: !2242)
!7973 = !DILocation(line: 6339, column: 29, scope: !2242)
!7974 = !DILocation(line: 6339, column: 27, scope: !2242)
!7975 = !DILocation(line: 6340, column: 3, scope: !2242)
!7976 = !DILocation(line: 6341, column: 1, scope: !2242)
!7977 = distinct !DISubprogram(name: "parser_xref_tag", scope: !3, file: !3, line: 6349, type: !7978, scopeLine: 6350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7986)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!7980, !760, !134, !672}
!7980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_typespec", file: !564, line: 160, size: 256, elements: !7981)
!7981 = !{!7982, !7983, !7984, !7985}
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !7980, file: !564, line: 162, baseType: !601, size: 32)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !7980, file: !564, line: 164, baseType: !672, size: 64, offset: 64)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !7980, file: !564, line: 173, baseType: !672, size: 64, offset: 128)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "expr_const_operands", scope: !7980, file: !564, line: 176, baseType: !619, size: 8, offset: 192)
!7986 = !{!7987, !7988, !7989, !7990, !7991, !7992}
!7987 = !DILocalVariable(name: "loc", arg: 1, scope: !7977, file: !3, line: 6349, type: !760)
!7988 = !DILocalVariable(name: "code", arg: 2, scope: !7977, file: !3, line: 6349, type: !134)
!7989 = !DILocalVariable(name: "name", arg: 3, scope: !7977, file: !3, line: 6349, type: !672)
!7990 = !DILocalVariable(name: "ret", scope: !7977, file: !3, line: 6351, type: !7980)
!7991 = !DILocalVariable(name: "ref", scope: !7977, file: !3, line: 6352, type: !672)
!7992 = !DILocalVariable(name: "refloc", scope: !7977, file: !3, line: 6353, type: !760)
!7993 = !DILocation(line: 0, scope: !7977)
!7994 = !DILocation(line: 6351, column: 21, scope: !7977)
!7995 = !DILocation(line: 6353, column: 3, scope: !7977)
!7996 = !DILocation(line: 6355, column: 7, scope: !7977)
!7997 = !DILocation(line: 6355, column: 12, scope: !7977)
!7998 = !DILocation(line: 6356, column: 7, scope: !7977)
!7999 = !DILocation(line: 6356, column: 27, scope: !7977)
!8000 = !DILocation(line: 6361, column: 9, scope: !7977)
!8001 = !DILocation(line: 6373, column: 15, scope: !7977)
!8002 = !DILocation(line: 6373, column: 7, scope: !7977)
!8003 = !DILocation(line: 6373, column: 12, scope: !7977)
!8004 = !DILocation(line: 6374, column: 11, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 6374, column: 7)
!8006 = !DILocation(line: 6374, column: 14, scope: !8005)
!8007 = !DILocation(line: 6374, column: 30, scope: !8005)
!8008 = !DILocation(line: 6374, column: 7, scope: !7977)
!8009 = !DILocation(line: 6376, column: 11, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 6376, column: 11)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 6375, column: 5)
!8012 = !DILocation(line: 6377, column: 11, scope: !8010)
!8013 = !DILocation(line: 6377, column: 4, scope: !8010)
!8014 = !DILocation(line: 6378, column: 7, scope: !8010)
!8015 = !DILocation(line: 6380, column: 4, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 6379, column: 2)
!8017 = !DILocation(line: 6383, column: 8, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 6381, column: 6)
!8019 = !DILocation(line: 6386, column: 16, scope: !8018)
!8020 = !DILocation(line: 6386, column: 8, scope: !8018)
!8021 = !DILocation(line: 6387, column: 8, scope: !8018)
!8022 = !DILocation(line: 6389, column: 8, scope: !8018)
!8023 = !DILocation(line: 6392, column: 16, scope: !8018)
!8024 = !DILocation(line: 6392, column: 8, scope: !8018)
!8025 = !DILocation(line: 6393, column: 8, scope: !8018)
!8026 = !DILocation(line: 6395, column: 8, scope: !8018)
!8027 = !DILocation(line: 6398, column: 16, scope: !8018)
!8028 = !DILocation(line: 6398, column: 8, scope: !8018)
!8029 = !DILocation(line: 6399, column: 8, scope: !8018)
!8030 = !DILocation(line: 6401, column: 8, scope: !8018)
!8031 = !DILocation(line: 6402, column: 6, scope: !8018)
!8032 = !DILocation(line: 6405, column: 11, scope: !8011)
!8033 = !DILocation(line: 6405, column: 16, scope: !8011)
!8034 = !DILocation(line: 6406, column: 7, scope: !8011)
!8035 = !DILocation(line: 6414, column: 9, scope: !7977)
!8036 = !DILocation(line: 6415, column: 12, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 6415, column: 7)
!8038 = !DILocation(line: 6415, column: 7, scope: !7977)
!8039 = !DILocation(line: 6419, column: 7, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 6416, column: 5)
!8041 = !DILocation(line: 6420, column: 26, scope: !8040)
!8042 = !DILocation(line: 6420, column: 7, scope: !8040)
!8043 = !DILocation(line: 6420, column: 24, scope: !8040)
!8044 = !DILocation(line: 6421, column: 7, scope: !8040)
!8045 = !DILocation(line: 6421, column: 29, scope: !8040)
!8046 = !DILocation(line: 6422, column: 27, scope: !8040)
!8047 = !DILocation(line: 6423, column: 30, scope: !8040)
!8048 = !DILocation(line: 6423, column: 28, scope: !8040)
!8049 = !DILocation(line: 6424, column: 30, scope: !8040)
!8050 = !DILocation(line: 6424, column: 7, scope: !8040)
!8051 = !DILocation(line: 6424, column: 28, scope: !8040)
!8052 = !DILocation(line: 6425, column: 30, scope: !8040)
!8053 = !DILocation(line: 6425, column: 7, scope: !8040)
!8054 = !DILocation(line: 6425, column: 28, scope: !8040)
!8055 = !DILocation(line: 6426, column: 5, scope: !8040)
!8056 = !DILocation(line: 6428, column: 3, scope: !7977)
!8057 = !DILocation(line: 6430, column: 7, scope: !7977)
!8058 = !DILocation(line: 6430, column: 12, scope: !7977)
!8059 = !DILocation(line: 6431, column: 3, scope: !7977)
!8060 = !DILocation(line: 6432, column: 1, scope: !7977)
!8061 = distinct !DISubprogram(name: "xref_tag", scope: !3, file: !3, line: 6439, type: !8062, scopeLine: 6440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8064)
!8062 = !DISubroutineType(types: !8063)
!8063 = !{!672, !134, !672}
!8064 = !{!8065, !8066}
!8065 = !DILocalVariable(name: "code", arg: 1, scope: !8061, file: !3, line: 6439, type: !134)
!8066 = !DILocalVariable(name: "name", arg: 2, scope: !8061, file: !3, line: 6439, type: !672)
!8067 = !DILocation(line: 0, scope: !8061)
!8068 = !DILocation(line: 6441, column: 27, scope: !8061)
!8069 = !DILocation(line: 6441, column: 10, scope: !8061)
!8070 = !DILocation(line: 6441, column: 55, scope: !8061)
!8071 = !DILocation(line: 6441, column: 3, scope: !8061)
!8072 = distinct !DISubprogram(name: "start_struct", scope: !3, file: !3, line: 6455, type: !8073, scopeLine: 6457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8076)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!672, !760, !134, !672, !8075}
!8075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!8076 = !{!8077, !8078, !8079, !8080, !8081, !8082}
!8077 = !DILocalVariable(name: "loc", arg: 1, scope: !8072, file: !3, line: 6455, type: !760)
!8078 = !DILocalVariable(name: "code", arg: 2, scope: !8072, file: !3, line: 6455, type: !134)
!8079 = !DILocalVariable(name: "name", arg: 3, scope: !8072, file: !3, line: 6455, type: !672)
!8080 = !DILocalVariable(name: "enclosing_struct_parse_info", arg: 4, scope: !8072, file: !3, line: 6456, type: !8075)
!8081 = !DILocalVariable(name: "ref", scope: !8072, file: !3, line: 6461, type: !672)
!8082 = !DILocalVariable(name: "refloc", scope: !8072, file: !3, line: 6462, type: !760)
!8083 = !DILocation(line: 0, scope: !8072)
!8084 = !DILocation(line: 6462, column: 3, scope: !8072)
!8085 = !DILocation(line: 6462, column: 14, scope: !8072)
!8086 = !DILocation(line: 6464, column: 12, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 6464, column: 7)
!8088 = !DILocation(line: 6464, column: 7, scope: !8072)
!8089 = !DILocation(line: 6465, column: 11, scope: !8087)
!8090 = !DILocation(line: 6465, column: 5, scope: !8087)
!8091 = !DILocation(line: 6466, column: 7, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 6466, column: 7)
!8093 = !DILocation(line: 6466, column: 11, scope: !8092)
!8094 = !DILocation(line: 6466, column: 14, scope: !8092)
!8095 = !DILocation(line: 6466, column: 30, scope: !8092)
!8096 = !DILocation(line: 6466, column: 7, scope: !8072)
!8097 = !DILocation(line: 6468, column: 11, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 6468, column: 11)
!8099 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 6467, column: 5)
!8100 = !DILocation(line: 6468, column: 11, scope: !8099)
!8101 = !DILocation(line: 6470, column: 13, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 6470, column: 8)
!8103 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 6469, column: 2)
!8104 = !DILocation(line: 6470, column: 8, scope: !8103)
!8105 = !DILocation(line: 6471, column: 6, scope: !8102)
!8106 = !DILocation(line: 6473, column: 6, scope: !8102)
!8107 = !DILocation(line: 6474, column: 8, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 6474, column: 8)
!8109 = !DILocation(line: 6474, column: 15, scope: !8108)
!8110 = !DILocation(line: 6474, column: 8, scope: !8103)
!8111 = !DILocation(line: 6475, column: 6, scope: !8108)
!8112 = !DILocation(line: 6479, column: 16, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 6479, column: 16)
!8114 = !DILocation(line: 6479, column: 16, scope: !8098)
!8115 = !DILocation(line: 6481, column: 13, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 6481, column: 8)
!8117 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 6480, column: 2)
!8118 = !DILocation(line: 6481, column: 8, scope: !8117)
!8119 = !DILocation(line: 6482, column: 6, scope: !8116)
!8120 = !DILocation(line: 6484, column: 6, scope: !8116)
!8121 = !DILocation(line: 6495, column: 11, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 6495, column: 7)
!8123 = !DILocation(line: 6495, column: 24, scope: !8122)
!8124 = !DILocation(line: 6495, column: 27, scope: !8122)
!8125 = !DILocation(line: 6495, column: 43, scope: !8122)
!8126 = !DILocation(line: 6495, column: 7, scope: !8072)
!8127 = !DILocation(line: 6497, column: 13, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6496, column: 5)
!8129 = !DILocation(line: 6498, column: 7, scope: !8128)
!8130 = !DILocation(line: 6502, column: 21, scope: !8072)
!8131 = !DILocation(line: 6499, column: 5, scope: !8128)
!8132 = !DILocation(line: 6501, column: 3, scope: !8072)
!8133 = !DILocation(line: 6501, column: 30, scope: !8072)
!8134 = !DILocation(line: 6502, column: 23, scope: !8072)
!8135 = !DILocation(line: 6502, column: 3, scope: !8072)
!8136 = !DILocation(line: 6504, column: 34, scope: !8072)
!8137 = !DILocation(line: 6504, column: 32, scope: !8072)
!8138 = !DILocation(line: 6505, column: 23, scope: !8072)
!8139 = !DILocation(line: 6505, column: 21, scope: !8072)
!8140 = !DILocation(line: 6506, column: 37, scope: !8072)
!8141 = !DILocation(line: 6506, column: 3, scope: !8072)
!8142 = !DILocation(line: 6506, column: 22, scope: !8072)
!8143 = !DILocation(line: 6506, column: 35, scope: !8072)
!8144 = !DILocation(line: 6507, column: 31, scope: !8072)
!8145 = !DILocation(line: 6507, column: 3, scope: !8072)
!8146 = !DILocation(line: 6507, column: 22, scope: !8072)
!8147 = !DILocation(line: 6507, column: 29, scope: !8072)
!8148 = !DILocation(line: 6508, column: 38, scope: !8072)
!8149 = !DILocation(line: 6508, column: 3, scope: !8072)
!8150 = !DILocation(line: 6508, column: 22, scope: !8072)
!8151 = !DILocation(line: 6508, column: 36, scope: !8072)
!8152 = !DILocation(line: 6514, column: 7, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 6514, column: 7)
!8154 = !DILocation(line: 6514, column: 23, scope: !8153)
!8155 = !DILocation(line: 6514, column: 27, scope: !8153)
!8156 = !DILocation(line: 6514, column: 40, scope: !8153)
!8157 = !DILocation(line: 6514, column: 37, scope: !8153)
!8158 = !DILocation(line: 6514, column: 53, scope: !8153)
!8159 = !DILocation(line: 6517, column: 4, scope: !8153)
!8160 = !DILocation(line: 6519, column: 7, scope: !8153)
!8161 = !DILocation(line: 6515, column: 5, scope: !8153)
!8162 = !DILocation(line: 6522, column: 1, scope: !8072)
!8163 = !DILocation(line: 6521, column: 3, scope: !8072)
!8164 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !135, file: !135, line: 184, type: !8165, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8167)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!2166, !620}
!8167 = !{!8168}
!8168 = !DILocalVariable(name: "alloc_", arg: 1, scope: !8164, file: !135, line: 184, type: !620)
!8169 = !DILocation(line: 0, scope: !8164)
!8170 = !DILocation(line: 184, column: 1, scope: !8164)
!8171 = distinct !DISubprogram(name: "VEC_c_binding_ptr_heap_alloc", scope: !3, file: !3, line: 509, type: !8172, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8174)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!2172, !620}
!8174 = !{!8175}
!8175 = !DILocalVariable(name: "alloc_", arg: 1, scope: !8171, file: !3, line: 509, type: !620)
!8176 = !DILocation(line: 0, scope: !8171)
!8177 = !DILocation(line: 509, column: 1, scope: !8171)
!8178 = distinct !DISubprogram(name: "grokfield", scope: !3, file: !3, line: 6536, type: !8179, scopeLine: 6539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8181)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!672, !760, !2141, !2190, !672, !996}
!8181 = !{!8182, !8183, !8184, !8185, !8186, !8187, !8188, !8191, !8192, !8193}
!8182 = !DILocalVariable(name: "loc", arg: 1, scope: !8178, file: !3, line: 6536, type: !760)
!8183 = !DILocalVariable(name: "declarator", arg: 2, scope: !8178, file: !3, line: 6537, type: !2141)
!8184 = !DILocalVariable(name: "declspecs", arg: 3, scope: !8178, file: !3, line: 6537, type: !2190)
!8185 = !DILocalVariable(name: "width", arg: 4, scope: !8178, file: !3, line: 6538, type: !672)
!8186 = !DILocalVariable(name: "decl_attrs", arg: 5, scope: !8178, file: !3, line: 6538, type: !996)
!8187 = !DILocalVariable(name: "value", scope: !8178, file: !3, line: 6540, type: !672)
!8188 = !DILocalVariable(name: "type", scope: !8189, file: !3, line: 6564, type: !672)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 6544, column: 5)
!8190 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 6542, column: 7)
!8191 = !DILocalVariable(name: "type_ok", scope: !8189, file: !3, line: 6565, type: !619)
!8192 = !DILocalVariable(name: "ok", scope: !8189, file: !3, line: 6567, type: !619)
!8193 = !DILocalVariable(name: "b", scope: !8194, file: !3, line: 6601, type: !2061)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 6597, column: 5)
!8195 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 6596, column: 7)
!8196 = !DILocation(line: 0, scope: !8178)
!8197 = !DILocation(line: 6542, column: 19, scope: !8190)
!8198 = !DILocation(line: 6542, column: 24, scope: !8190)
!8199 = !DILocation(line: 6542, column: 34, scope: !8190)
!8200 = !DILocation(line: 6542, column: 51, scope: !8190)
!8201 = !DILocation(line: 6542, column: 54, scope: !8190)
!8202 = !DILocation(line: 6543, column: 16, scope: !8190)
!8203 = !DILocation(line: 6543, column: 7, scope: !8190)
!8204 = !DILocation(line: 6564, column: 30, scope: !8189)
!8205 = !DILocation(line: 0, scope: !8189)
!8206 = !DILocation(line: 6565, column: 23, scope: !8189)
!8207 = !DILocation(line: 6565, column: 40, scope: !8189)
!8208 = !DILocation(line: 6566, column: 9, scope: !8189)
!8209 = !DILocation(line: 6566, column: 29, scope: !8189)
!8210 = !DILocation(line: 6570, column: 4, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 6569, column: 11)
!8212 = !DILocation(line: 6570, column: 8, scope: !8211)
!8213 = !DILocation(line: 6570, column: 27, scope: !8211)
!8214 = !DILocation(line: 6570, column: 42, scope: !8211)
!8215 = !DILocation(line: 6570, column: 31, scope: !8211)
!8216 = !DILocation(line: 6569, column: 11, scope: !8189)
!8217 = !DILocation(line: 6572, column: 8, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 6571, column: 2)
!8219 = !DILocation(line: 6574, column: 13, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 6574, column: 13)
!8221 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 6572, column: 8)
!8222 = !DILocation(line: 6574, column: 13, scope: !8221)
!8223 = !DILocation(line: 6576, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 6576, column: 13)
!8225 = !DILocation(line: 6576, column: 30, scope: !8224)
!8226 = !DILocation(line: 6581, column: 11, scope: !8189)
!8227 = !DILocation(line: 6583, column: 4, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 6582, column: 2)
!8229 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 6581, column: 11)
!8230 = !DILocation(line: 6584, column: 4, scope: !8228)
!8231 = !DILocation(line: 6586, column: 7, scope: !8189)
!8232 = !DILocation(line: 6587, column: 5, scope: !8190)
!8233 = !DILocation(line: 6590, column: 6, scope: !8178)
!8234 = !DILocation(line: 6589, column: 11, scope: !8178)
!8235 = !DILocation(line: 6593, column: 3, scope: !8178)
!8236 = !DILocation(line: 6594, column: 26, scope: !8178)
!8237 = !DILocation(line: 6594, column: 3, scope: !8178)
!8238 = !DILocation(line: 6594, column: 24, scope: !8178)
!8239 = !DILocation(line: 6596, column: 7, scope: !8195)
!8240 = !DILocation(line: 6596, column: 23, scope: !8195)
!8241 = !DILocation(line: 6596, column: 26, scope: !8195)
!8242 = !DILocation(line: 6596, column: 44, scope: !8195)
!8243 = !DILocation(line: 6596, column: 7, scope: !8178)
!8244 = !DILocation(line: 6601, column: 29, scope: !8194)
!8245 = !DILocation(line: 0, scope: !8194)
!8246 = !DILocation(line: 6602, column: 13, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 6602, column: 11)
!8248 = !DILocation(line: 6602, column: 11, scope: !8194)
!8249 = !DILocation(line: 6606, column: 12, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 6606, column: 8)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 6603, column: 2)
!8252 = !DILocation(line: 6606, column: 9, scope: !8250)
!8253 = !DILocation(line: 6606, column: 8, scope: !8251)
!8254 = !DILocation(line: 6608, column: 8, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 6607, column: 6)
!8256 = !DILocation(line: 6610, column: 21, scope: !8255)
!8257 = !DILocation(line: 6611, column: 6, scope: !8255)
!8258 = !DILocation(line: 6616, column: 1, scope: !8178)
!8259 = distinct !DISubprogram(name: "VEC_c_binding_ptr_heap_safe_push", scope: !3, file: !3, line: 509, type: !8260, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8264)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!8262, !8263, !2184}
!8262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!8263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!8264 = !{!8265, !8266}
!8265 = !DILocalVariable(name: "vec_", arg: 1, scope: !8259, file: !3, line: 509, type: !8263)
!8266 = !DILocalVariable(name: "obj_", arg: 2, scope: !8259, file: !3, line: 509, type: !2184)
!8267 = !DILocation(line: 0, scope: !8259)
!8268 = !DILocation(line: 509, column: 1, scope: !8259)
!8269 = distinct !DISubprogram(name: "finish_struct", scope: !3, file: !3, line: 6743, type: !8270, scopeLine: 6745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8272)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!672, !760, !672, !672, !672, !2162}
!8272 = !{!8273, !8274, !8275, !8276, !8277, !8278, !8279, !8280, !8281, !8287, !8290, !8292, !8295, !8296, !8298, !8301, !8302, !8303}
!8273 = !DILocalVariable(name: "loc", arg: 1, scope: !8269, file: !3, line: 6743, type: !760)
!8274 = !DILocalVariable(name: "t", arg: 2, scope: !8269, file: !3, line: 6743, type: !672)
!8275 = !DILocalVariable(name: "fieldlist", arg: 3, scope: !8269, file: !3, line: 6743, type: !672)
!8276 = !DILocalVariable(name: "attributes", arg: 4, scope: !8269, file: !3, line: 6743, type: !672)
!8277 = !DILocalVariable(name: "enclosing_struct_parse_info", arg: 5, scope: !8269, file: !3, line: 6744, type: !2162)
!8278 = !DILocalVariable(name: "x", scope: !8269, file: !3, line: 6746, type: !672)
!8279 = !DILocalVariable(name: "toplevel", scope: !8269, file: !3, line: 6747, type: !619)
!8280 = !DILocalVariable(name: "saw_named_field", scope: !8269, file: !3, line: 6748, type: !620)
!8281 = !DILocalVariable(name: "t1", scope: !8282, file: !3, line: 6803, type: !672)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 6801, column: 2)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6798, column: 11)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 6791, column: 5)
!8285 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 6790, column: 3)
!8286 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6790, column: 3)
!8287 = !DILocalVariable(name: "width", scope: !8288, file: !3, line: 6822, type: !689)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 6821, column: 2)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6820, column: 11)
!8290 = !DILocalVariable(name: "fieldlistp", scope: !8291, file: !3, line: 6879, type: !996)
!8291 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6878, column: 3)
!8292 = !DILocalVariable(name: "width", scope: !8293, file: !3, line: 6884, type: !689)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 6883, column: 2)
!8294 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 6881, column: 11)
!8295 = !DILocalVariable(name: "type", scope: !8293, file: !3, line: 6886, type: !672)
!8296 = !DILocalVariable(name: "len", scope: !8297, file: !3, line: 6908, type: !620)
!8297 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6907, column: 3)
!8298 = !DILocalVariable(name: "field_array", scope: !8299, file: !3, line: 6919, type: !996)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 6918, column: 7)
!8300 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 6917, column: 9)
!8301 = !DILocalVariable(name: "space", scope: !8299, file: !3, line: 6920, type: !1725)
!8302 = !DILocalVariable(name: "space2", scope: !8299, file: !3, line: 6921, type: !1729)
!8303 = !DILocalVariable(name: "decl", scope: !8304, file: !3, line: 6984, type: !672)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 6983, column: 5)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 6980, column: 3)
!8306 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6980, column: 3)
!8307 = !DILocation(line: 0, scope: !8269)
!8308 = !DILocation(line: 6747, column: 19, scope: !8269)
!8309 = !DILocation(line: 6747, column: 33, scope: !8269)
!8310 = !DILocation(line: 6747, column: 30, scope: !8269)
!8311 = !DILocation(line: 6753, column: 3, scope: !8269)
!8312 = !DILocation(line: 6753, column: 17, scope: !8269)
!8313 = !DILocation(line: 6755, column: 3, scope: !8269)
!8314 = !DILocation(line: 6757, column: 7, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6757, column: 7)
!8316 = !DILocation(line: 6757, column: 7, scope: !8269)
!8317 = !DILocation(line: 6759, column: 12, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 6759, column: 7)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 6758, column: 5)
!8320 = !DILocation(line: 0, scope: !8318)
!8321 = !DILocation(line: 6759, column: 7, scope: !8318)
!8322 = !DILocation(line: 6760, column: 6, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 6760, column: 6)
!8324 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 6759, column: 7)
!8325 = !DILocation(line: 6760, column: 20, scope: !8323)
!8326 = !DILocation(line: 6760, column: 6, scope: !8324)
!8327 = !DILocation(line: 6759, column: 34, scope: !8324)
!8328 = !DILocation(line: 6759, column: 7, scope: !8324)
!8329 = distinct !{!8329, !8321, !8330}
!8330 = !DILocation(line: 6761, column: 4, scope: !8318)
!8331 = !DILocation(line: 6763, column: 11, scope: !8319)
!8332 = !DILocation(line: 6765, column: 8, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 6765, column: 8)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 6764, column: 2)
!8335 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 6763, column: 11)
!8336 = !DILocation(line: 6765, column: 22, scope: !8333)
!8337 = !DILocation(line: 0, scope: !8333)
!8338 = !DILocation(line: 6765, column: 8, scope: !8334)
!8339 = !DILocation(line: 6767, column: 12, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 6766, column: 6)
!8341 = !DILocation(line: 6768, column: 3, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 6767, column: 12)
!8343 = !DILocation(line: 6770, column: 3, scope: !8342)
!8344 = !DILocation(line: 6774, column: 12, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 6773, column: 6)
!8346 = !DILocation(line: 6775, column: 3, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 6774, column: 12)
!8348 = !DILocation(line: 6777, column: 3, scope: !8347)
!8349 = !DILocation(line: 0, scope: !8284)
!8350 = !DILocation(line: 0, scope: !8283)
!8351 = !DILocation(line: 0, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6817, column: 11)
!8353 = !DILocation(line: 0, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6828, column: 11)
!8355 = !DILocation(line: 6790, column: 8, scope: !8286)
!8356 = !DILocation(line: 0, scope: !8286)
!8357 = !DILocation(line: 6789, column: 19, scope: !8269)
!8358 = !DILocation(line: 6790, column: 3, scope: !8286)
!8359 = !DILocation(line: 6792, column: 11, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6792, column: 11)
!8361 = !DILocation(line: 6792, column: 28, scope: !8360)
!8362 = !DILocation(line: 6792, column: 25, scope: !8360)
!8363 = !DILocation(line: 6792, column: 11, scope: !8284)
!8364 = !DILocation(line: 6795, column: 26, scope: !8284)
!8365 = !DILocation(line: 6795, column: 7, scope: !8284)
!8366 = !DILocation(line: 6795, column: 24, scope: !8284)
!8367 = !DILocation(line: 6798, column: 11, scope: !8283)
!8368 = !DILocation(line: 6798, column: 11, scope: !8284)
!8369 = !DILocation(line: 6799, column: 29, scope: !8283)
!8370 = !DILocation(line: 6799, column: 2, scope: !8283)
!8371 = !DILocation(line: 6804, column: 4, scope: !8282)
!8372 = !DILocation(line: 0, scope: !8282)
!8373 = !DILocation(line: 6804, column: 11, scope: !8282)
!8374 = !DILocation(line: 6804, column: 26, scope: !8282)
!8375 = distinct !{!8375, !8371, !8376}
!8376 = !DILocation(line: 6805, column: 11, scope: !8282)
!8377 = !DILocation(line: 6806, column: 24, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 6806, column: 8)
!8379 = !DILocation(line: 6806, column: 39, scope: !8378)
!8380 = !DILocation(line: 6806, column: 57, scope: !8378)
!8381 = !DILocation(line: 6807, column: 8, scope: !8378)
!8382 = !DILocation(line: 6807, column: 11, scope: !8378)
!8383 = !DILocation(line: 6806, column: 8, scope: !8282)
!8384 = !DILocation(line: 6808, column: 33, scope: !8378)
!8385 = !DILocation(line: 6808, column: 6, scope: !8378)
!8386 = !DILocation(line: 6813, column: 11, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6813, column: 11)
!8388 = !DILocation(line: 6813, column: 11, scope: !8284)
!8389 = !DILocation(line: 6814, column: 2, scope: !8387)
!8390 = !DILocation(line: 6814, column: 29, scope: !8387)
!8391 = !DILocation(line: 6817, column: 11, scope: !8352)
!8392 = !DILocation(line: 6817, column: 11, scope: !8284)
!8393 = !DILocation(line: 6818, column: 2, scope: !8352)
!8394 = !DILocation(line: 6818, column: 27, scope: !8352)
!8395 = !DILocation(line: 6820, column: 11, scope: !8289)
!8396 = !DILocation(line: 6820, column: 11, scope: !8284)
!8397 = !DILocation(line: 6822, column: 35, scope: !8288)
!8398 = !DILocation(line: 0, scope: !8288)
!8399 = !DILocation(line: 6823, column: 20, scope: !8288)
!8400 = !DILocation(line: 6823, column: 4, scope: !8288)
!8401 = !DILocation(line: 6823, column: 18, scope: !8288)
!8402 = !DILocation(line: 6824, column: 23, scope: !8288)
!8403 = !DILocation(line: 6825, column: 4, scope: !8288)
!8404 = !DILocation(line: 6826, column: 2, scope: !8288)
!8405 = !DILocation(line: 6828, column: 11, scope: !8354)
!8406 = !DILocation(line: 6829, column: 4, scope: !8354)
!8407 = !DILocation(line: 6829, column: 8, scope: !8354)
!8408 = !DILocation(line: 6830, column: 8, scope: !8354)
!8409 = !DILocation(line: 6830, column: 11, scope: !8354)
!8410 = !DILocation(line: 6830, column: 38, scope: !8354)
!8411 = !DILocation(line: 6828, column: 11, scope: !8284)
!8412 = !DILocation(line: 6831, column: 18, scope: !8354)
!8413 = !DILocation(line: 6831, column: 2, scope: !8354)
!8414 = !DILocation(line: 6834, column: 11, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6834, column: 11)
!8416 = !DILocation(line: 6834, column: 37, scope: !8415)
!8417 = !DILocation(line: 6835, column: 4, scope: !8415)
!8418 = !DILocation(line: 6835, column: 7, scope: !8415)
!8419 = !DILocation(line: 6835, column: 33, scope: !8415)
!8420 = !DILocation(line: 6836, column: 4, scope: !8415)
!8421 = !DILocation(line: 6836, column: 7, scope: !8415)
!8422 = !DILocation(line: 6836, column: 35, scope: !8415)
!8423 = !DILocation(line: 6837, column: 4, scope: !8415)
!8424 = !DILocation(line: 6837, column: 7, scope: !8415)
!8425 = !DILocation(line: 6837, column: 52, scope: !8415)
!8426 = !DILocation(line: 6834, column: 11, scope: !8284)
!8427 = !DILocation(line: 6839, column: 8, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 6839, column: 8)
!8429 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 6838, column: 2)
!8430 = !DILocation(line: 6839, column: 22, scope: !8428)
!8431 = !DILocation(line: 6839, column: 8, scope: !8429)
!8432 = !DILocation(line: 6841, column: 18, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 6840, column: 6)
!8434 = !DILocation(line: 6841, column: 8, scope: !8433)
!8435 = !DILocation(line: 6843, column: 24, scope: !8433)
!8436 = !DILocation(line: 6843, column: 22, scope: !8433)
!8437 = !DILocation(line: 6844, column: 6, scope: !8433)
!8438 = !DILocation(line: 6845, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 6845, column: 13)
!8440 = !DILocation(line: 6845, column: 28, scope: !8439)
!8441 = !DILocation(line: 6845, column: 13, scope: !8428)
!8442 = !DILocation(line: 6847, column: 18, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 6846, column: 6)
!8444 = !DILocation(line: 6847, column: 8, scope: !8443)
!8445 = !DILocation(line: 6849, column: 24, scope: !8443)
!8446 = !DILocation(line: 6849, column: 22, scope: !8443)
!8447 = !DILocation(line: 6850, column: 6, scope: !8443)
!8448 = !DILocation(line: 6851, column: 14, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 6851, column: 13)
!8450 = !DILocation(line: 6851, column: 13, scope: !8439)
!8451 = !DILocation(line: 6853, column: 18, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 6852, column: 6)
!8453 = !DILocation(line: 6853, column: 8, scope: !8452)
!8454 = !DILocation(line: 6855, column: 24, scope: !8452)
!8455 = !DILocation(line: 6855, column: 22, scope: !8452)
!8456 = !DILocation(line: 6856, column: 6, scope: !8452)
!8457 = !DILocation(line: 6859, column: 11, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6859, column: 11)
!8459 = !DILocation(line: 6859, column: 20, scope: !8458)
!8460 = !DILocation(line: 6859, column: 23, scope: !8458)
!8461 = !DILocation(line: 6859, column: 37, scope: !8458)
!8462 = !DILocation(line: 6860, column: 4, scope: !8458)
!8463 = !DILocation(line: 6860, column: 7, scope: !8458)
!8464 = !DILocation(line: 6859, column: 11, scope: !8284)
!8465 = !DILocation(line: 6861, column: 11, scope: !8458)
!8466 = !DILocation(line: 6861, column: 2, scope: !8458)
!8467 = !DILocation(line: 6864, column: 11, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 6864, column: 11)
!8469 = !DILocation(line: 6864, column: 11, scope: !8284)
!8470 = !DILocation(line: 6866, column: 5, scope: !8284)
!8471 = !DILocation(line: 6790, column: 30, scope: !8285)
!8472 = !DILocation(line: 6790, column: 3, scope: !8285)
!8473 = distinct !{!8473, !8358, !8474}
!8474 = !DILocation(line: 6866, column: 5, scope: !8286)
!8475 = !DILocation(line: 6868, column: 28, scope: !8269)
!8476 = !DILocation(line: 6868, column: 3, scope: !8269)
!8477 = !DILocation(line: 6873, column: 21, scope: !8269)
!8478 = !DILocation(line: 6873, column: 3, scope: !8269)
!8479 = !DILocation(line: 6873, column: 19, scope: !8269)
!8480 = !DILocation(line: 6875, column: 16, scope: !8269)
!8481 = !DILocation(line: 6875, column: 3, scope: !8269)
!8482 = !DILocation(line: 0, scope: !8291)
!8483 = !DILocation(line: 6880, column: 5, scope: !8291)
!8484 = !DILocation(line: 6880, column: 12, scope: !8291)
!8485 = !DILocation(line: 6879, column: 11, scope: !8291)
!8486 = !DILocation(line: 6881, column: 11, scope: !8294)
!8487 = !DILocation(line: 6881, column: 35, scope: !8294)
!8488 = !DILocation(line: 6881, column: 49, scope: !8294)
!8489 = !DILocation(line: 6881, column: 52, scope: !8294)
!8490 = !DILocation(line: 6882, column: 4, scope: !8294)
!8491 = !DILocation(line: 6882, column: 7, scope: !8294)
!8492 = !DILocation(line: 6882, column: 34, scope: !8294)
!8493 = !DILocation(line: 6882, column: 31, scope: !8294)
!8494 = !DILocation(line: 6881, column: 11, scope: !8291)
!8495 = !DILocation(line: 6885, column: 8, scope: !8293)
!8496 = !DILocation(line: 0, scope: !8293)
!8497 = !DILocation(line: 6886, column: 16, scope: !8293)
!8498 = !DILocation(line: 6887, column: 17, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 6887, column: 8)
!8500 = !DILocation(line: 6887, column: 14, scope: !8499)
!8501 = !DILocation(line: 6887, column: 8, scope: !8293)
!8502 = !DILocation(line: 6890, column: 43, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 6888, column: 6)
!8504 = !DILocation(line: 6890, column: 5, scope: !8503)
!8505 = !DILocation(line: 6889, column: 8, scope: !8503)
!8506 = !DILocation(line: 6890, column: 3, scope: !8503)
!8507 = !DILocation(line: 6891, column: 34, scope: !8503)
!8508 = !DILocation(line: 6891, column: 8, scope: !8503)
!8509 = !DILocation(line: 6891, column: 32, scope: !8503)
!8510 = !DILocation(line: 6893, column: 4, scope: !8293)
!8511 = !DILocation(line: 6892, column: 6, scope: !8503)
!8512 = !DILocation(line: 6893, column: 31, scope: !8293)
!8513 = !DILocation(line: 6894, column: 2, scope: !8293)
!8514 = !DILocation(line: 6896, column: 16, scope: !8294)
!8515 = distinct !{!8515, !8483, !8516}
!8516 = !DILocation(line: 6896, column: 16, scope: !8291)
!8517 = !DILocation(line: 6902, column: 3, scope: !8269)
!8518 = !DILocation(line: 6902, column: 19, scope: !8269)
!8519 = !DILocation(line: 0, scope: !8297)
!8520 = !DILocation(line: 6910, column: 10, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 6910, column: 5)
!8522 = !DILocation(line: 0, scope: !8521)
!8523 = !DILocation(line: 6910, column: 5, scope: !8521)
!8524 = !DILocation(line: 6912, column: 10, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 6912, column: 6)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 6911, column: 7)
!8527 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 6910, column: 5)
!8528 = !DILocation(line: 6912, column: 18, scope: !8525)
!8529 = !DILocation(line: 6912, column: 32, scope: !8525)
!8530 = !DILocation(line: 6912, column: 6, scope: !8526)
!8531 = !DILocation(line: 6914, column: 6, scope: !8526)
!8532 = !DILocation(line: 6910, column: 32, scope: !8527)
!8533 = !DILocation(line: 6910, column: 5, scope: !8527)
!8534 = distinct !{!8534, !8523, !8535}
!8535 = !DILocation(line: 6915, column: 7, scope: !8521)
!8536 = !DILocation(line: 6917, column: 9, scope: !8297)
!8537 = !DILocation(line: 6923, column: 9, scope: !8299)
!8538 = !DILocation(line: 6923, column: 6, scope: !8299)
!8539 = !DILocation(line: 6929, column: 10, scope: !8299)
!8540 = !DILocation(line: 0, scope: !8299)
!8541 = !DILocation(line: 6930, column: 11, scope: !8299)
!8542 = !DILocation(line: 6934, column: 11, scope: !8299)
!8543 = !DILocation(line: 6935, column: 25, scope: !8299)
!8544 = !DILocation(line: 6935, column: 17, scope: !8299)
!8545 = !DILocation(line: 6936, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 6936, column: 2)
!8547 = !DILocation(line: 0, scope: !8546)
!8548 = !DILocation(line: 6936, column: 2, scope: !8546)
!8549 = !DILocation(line: 6938, column: 21, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 6937, column: 4)
!8551 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 6936, column: 2)
!8552 = !DILocation(line: 6938, column: 6, scope: !8550)
!8553 = !DILocation(line: 6938, column: 25, scope: !8550)
!8554 = !DILocation(line: 6941, column: 10, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 6941, column: 10)
!8556 = !DILocation(line: 6941, column: 24, scope: !8555)
!8557 = !DILocation(line: 6941, column: 10, scope: !8550)
!8558 = !DILocation(line: 6936, column: 29, scope: !8551)
!8559 = !DILocation(line: 6936, column: 2, scope: !8551)
!8560 = distinct !{!8560, !8548, !8561}
!8561 = !DILocation(line: 6943, column: 4, scope: !8546)
!8562 = !DILocation(line: 6945, column: 6, scope: !8299)
!8563 = !DILocation(line: 6947, column: 6, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 6946, column: 4)
!8565 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 6945, column: 6)
!8566 = !DILocation(line: 6947, column: 29, scope: !8564)
!8567 = !DILocation(line: 6948, column: 30, scope: !8564)
!8568 = !DILocation(line: 6948, column: 33, scope: !8564)
!8569 = !DILocation(line: 6948, column: 37, scope: !8564)
!8570 = !DILocation(line: 6949, column: 20, scope: !8564)
!8571 = !DILocation(line: 6949, column: 44, scope: !8564)
!8572 = !DILocation(line: 6951, column: 18, scope: !8564)
!8573 = !DILocation(line: 6951, column: 31, scope: !8564)
!8574 = !DILocation(line: 6951, column: 6, scope: !8564)
!8575 = !DILocation(line: 6955, column: 4, scope: !8564)
!8576 = !DILocation(line: 6959, column: 12, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6959, column: 3)
!8578 = !DILocation(line: 6959, column: 8, scope: !8577)
!8579 = !DILocation(line: 0, scope: !8577)
!8580 = !DILocation(line: 6959, column: 3, scope: !8577)
!8581 = !DILocation(line: 6961, column: 25, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 6960, column: 5)
!8583 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 6959, column: 3)
!8584 = !DILocation(line: 6961, column: 7, scope: !8582)
!8585 = !DILocation(line: 6961, column: 23, scope: !8582)
!8586 = !DILocation(line: 6962, column: 32, scope: !8582)
!8587 = !DILocation(line: 6962, column: 7, scope: !8582)
!8588 = !DILocation(line: 6962, column: 30, scope: !8582)
!8589 = !DILocation(line: 6963, column: 36, scope: !8582)
!8590 = !DILocation(line: 6963, column: 7, scope: !8582)
!8591 = !DILocation(line: 6963, column: 34, scope: !8582)
!8592 = !DILocation(line: 6964, column: 36, scope: !8582)
!8593 = !DILocation(line: 6964, column: 34, scope: !8582)
!8594 = !DILocation(line: 6965, column: 34, scope: !8582)
!8595 = !DILocation(line: 6965, column: 7, scope: !8582)
!8596 = !DILocation(line: 6965, column: 32, scope: !8582)
!8597 = !DILocation(line: 6959, column: 42, scope: !8583)
!8598 = !DILocation(line: 6959, column: 3, scope: !8583)
!8599 = distinct !{!8599, !8580, !8600}
!8600 = !DILocation(line: 6966, column: 5, scope: !8577)
!8601 = !DILocation(line: 6970, column: 7, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 6970, column: 7)
!8603 = !DILocation(line: 6970, column: 21, scope: !8602)
!8604 = !DILocation(line: 6971, column: 7, scope: !8602)
!8605 = !DILocation(line: 6971, column: 10, scope: !8602)
!8606 = !DILocation(line: 6972, column: 7, scope: !8602)
!8607 = !DILocation(line: 6972, column: 12, scope: !8602)
!8608 = !DILocation(line: 6972, column: 28, scope: !8602)
!8609 = !DILocation(line: 6972, column: 31, scope: !8602)
!8610 = !DILocation(line: 6972, column: 48, scope: !8602)
!8611 = !DILocation(line: 6972, column: 45, scope: !8602)
!8612 = !DILocation(line: 6970, column: 7, scope: !8269)
!8613 = !DILocation(line: 0, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 6973, column: 5)
!8615 = !DILocation(line: 6974, column: 33, scope: !8614)
!8616 = !DILocation(line: 6974, column: 7, scope: !8614)
!8617 = !DILocation(line: 6975, column: 7, scope: !8614)
!8618 = !DILocation(line: 6980, column: 12, scope: !8306)
!8619 = !DILocation(line: 6976, column: 5, scope: !8614)
!8620 = !DILocation(line: 0, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 6988, column: 2)
!8622 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 6987, column: 11)
!8623 = !DILocation(line: 6980, column: 8, scope: !8306)
!8624 = !DILocation(line: 0, scope: !8306)
!8625 = !DILocation(line: 6980, column: 3, scope: !8306)
!8626 = !DILocation(line: 6984, column: 19, scope: !8304)
!8627 = !DILocation(line: 0, scope: !8304)
!8628 = !DILocation(line: 6985, column: 11, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 6985, column: 11)
!8630 = !DILocation(line: 6985, column: 40, scope: !8629)
!8631 = !DILocation(line: 6985, column: 11, scope: !8304)
!8632 = !DILocation(line: 6986, column: 2, scope: !8629)
!8633 = !DILocation(line: 6987, column: 11, scope: !8622)
!8634 = !DILocation(line: 6987, column: 28, scope: !8622)
!8635 = !DILocation(line: 6987, column: 11, scope: !8304)
!8636 = !DILocation(line: 6989, column: 4, scope: !8621)
!8637 = !DILocation(line: 6990, column: 8, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 6990, column: 8)
!8639 = !DILocation(line: 6990, column: 8, scope: !8621)
!8640 = !DILocation(line: 6991, column: 6, scope: !8638)
!8641 = !DILocation(line: 6992, column: 4, scope: !8621)
!8642 = !DILocation(line: 6993, column: 8, scope: !8621)
!8643 = !DILocation(line: 6982, column: 12, scope: !8305)
!8644 = !DILocation(line: 6980, column: 3, scope: !8305)
!8645 = distinct !{!8645, !8625, !8646}
!8646 = !DILocation(line: 6996, column: 5, scope: !8306)
!8647 = !DILocation(line: 6997, column: 3, scope: !8269)
!8648 = !DILocation(line: 6994, column: 6, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 6993, column: 8)
!8650 = !DILocation(line: 6997, column: 50, scope: !8269)
!8651 = !DILocation(line: 7001, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 7001, column: 7)
!8653 = !DILocation(line: 7001, column: 7, scope: !8269)
!8654 = !DILocation(line: 7002, column: 5, scope: !8652)
!8655 = !DILocation(line: 7002, column: 47, scope: !8652)
!8656 = !DILocation(line: 7005, column: 3, scope: !8269)
!8657 = !DILocation(line: 7010, column: 7, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 7010, column: 7)
!8659 = !DILocation(line: 7010, column: 21, scope: !8658)
!8660 = !DILocation(line: 7010, column: 50, scope: !8658)
!8661 = !DILocation(line: 7010, column: 24, scope: !8658)
!8662 = !DILocation(line: 7010, column: 7, scope: !8269)
!8663 = !DILocation(line: 7012, column: 17, scope: !8658)
!8664 = !DILocation(line: 7011, column: 15, scope: !8658)
!8665 = !DILocation(line: 7011, column: 5, scope: !8658)
!8666 = !DILocation(line: 7014, column: 7, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 7014, column: 7)
!8668 = !DILocation(line: 7014, column: 7, scope: !8269)
!8669 = !DILocation(line: 7015, column: 5, scope: !8667)
!8670 = !DILocation(line: 7017, column: 3, scope: !8269)
!8671 = !DILocation(line: 7018, column: 3, scope: !8269)
!8672 = !DILocation(line: 7019, column: 3, scope: !8269)
!8673 = !DILocation(line: 7020, column: 3, scope: !8269)
!8674 = !DILocation(line: 7022, column: 21, scope: !8269)
!8675 = !DILocation(line: 7026, column: 7, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 7026, column: 7)
!8677 = !DILocation(line: 7027, column: 28, scope: !8676)
!8678 = !DILocation(line: 7027, column: 7, scope: !8676)
!8679 = !DILocation(line: 7028, column: 11, scope: !8676)
!8680 = !DILocation(line: 7028, column: 25, scope: !8676)
!8681 = !DILocation(line: 7028, column: 39, scope: !8676)
!8682 = !DILocation(line: 7029, column: 5, scope: !8676)
!8683 = !DILocation(line: 7031, column: 10, scope: !8269)
!8684 = !DILocation(line: 7031, column: 3, scope: !8269)
!8685 = distinct !DISubprogram(name: "flexible_array_type_p", scope: !3, file: !3, line: 4534, type: !4932, scopeLine: 4535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8686)
!8686 = !{!8687, !8688}
!8687 = !DILocalVariable(name: "type", arg: 1, scope: !8685, file: !3, line: 4534, type: !672)
!8688 = !DILocalVariable(name: "x", scope: !8685, file: !3, line: 4536, type: !672)
!8689 = !DILocation(line: 0, scope: !8685)
!8690 = !DILocation(line: 4537, column: 11, scope: !8685)
!8691 = !DILocation(line: 4537, column: 3, scope: !8685)
!8692 = !DILocation(line: 4540, column: 11, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 4538, column: 5)
!8694 = !DILocation(line: 4541, column: 13, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 4541, column: 11)
!8696 = !DILocation(line: 4541, column: 11, scope: !8693)
!8697 = !DILocation(line: 4543, column: 7, scope: !8693)
!8698 = !DILocation(line: 0, scope: !8693)
!8699 = !DILocation(line: 4543, column: 14, scope: !8693)
!8700 = !DILocation(line: 4543, column: 29, scope: !8693)
!8701 = distinct !{!8701, !8697, !8702}
!8702 = !DILocation(line: 4544, column: 6, scope: !8693)
!8703 = !DILocation(line: 4545, column: 11, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 4545, column: 11)
!8705 = !DILocation(line: 4545, column: 37, scope: !8704)
!8706 = !DILocation(line: 4546, column: 4, scope: !8704)
!8707 = !DILocation(line: 4546, column: 7, scope: !8704)
!8708 = !DILocation(line: 4546, column: 33, scope: !8704)
!8709 = !DILocation(line: 4547, column: 4, scope: !8704)
!8710 = !DILocation(line: 4547, column: 7, scope: !8704)
!8711 = !DILocation(line: 4547, column: 35, scope: !8704)
!8712 = !DILocation(line: 4548, column: 4, scope: !8704)
!8713 = !DILocation(line: 4548, column: 7, scope: !8704)
!8714 = !DILocation(line: 4548, column: 52, scope: !8704)
!8715 = !DILocation(line: 4545, column: 11, scope: !8693)
!8716 = !DILocation(line: 4550, column: 7, scope: !8693)
!8717 = !DILocation(line: 4552, column: 16, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 4552, column: 7)
!8719 = !DILocation(line: 4552, column: 12, scope: !8718)
!8720 = !DILocation(line: 0, scope: !8718)
!8721 = !DILocation(line: 4552, column: 38, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 4552, column: 7)
!8723 = !DILocation(line: 4552, column: 7, scope: !8718)
!8724 = !DILocation(line: 4554, column: 31, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 4554, column: 8)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 4553, column: 2)
!8727 = !DILocation(line: 4554, column: 8, scope: !8725)
!8728 = !DILocation(line: 4554, column: 8, scope: !8726)
!8729 = !DILocation(line: 4552, column: 56, scope: !8722)
!8730 = !DILocation(line: 4552, column: 7, scope: !8722)
!8731 = distinct !{!8731, !8723, !8732}
!8732 = !DILocation(line: 4556, column: 2, scope: !8718)
!8733 = !DILocation(line: 4561, column: 1, scope: !8685)
!8734 = distinct !DISubprogram(name: "detect_field_duplicates", scope: !3, file: !3, line: 6622, type: !2872, scopeLine: 6623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738, !8739, !8740, !8743}
!8736 = !DILocalVariable(name: "fieldlist", arg: 1, scope: !8734, file: !3, line: 6622, type: !672)
!8737 = !DILocalVariable(name: "x", scope: !8734, file: !3, line: 6624, type: !672)
!8738 = !DILocalVariable(name: "y", scope: !8734, file: !3, line: 6624, type: !672)
!8739 = !DILocalVariable(name: "timeout", scope: !8734, file: !3, line: 6625, type: !620)
!8740 = !DILocalVariable(name: "htab", scope: !8741, file: !3, line: 6656, type: !1459)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 6655, column: 5)
!8742 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 6641, column: 7)
!8743 = !DILocalVariable(name: "slot", scope: !8741, file: !3, line: 6657, type: !1481)
!8744 = !DILocation(line: 0, scope: !8734)
!8745 = !DILocation(line: 6629, column: 8, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 6629, column: 7)
!8747 = !DILocation(line: 6629, column: 7, scope: !8734)
!8748 = !DILocation(line: 6631, column: 7, scope: !8734)
!8749 = !DILocation(line: 6632, column: 8, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 6632, column: 7)
!8751 = !DILocation(line: 6632, column: 7, scope: !8734)
!8752 = !DILocation(line: 6634, column: 3, scope: !8734)
!8753 = !DILocation(line: 6635, column: 12, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 6634, column: 6)
!8755 = !DILocation(line: 6636, column: 9, scope: !8754)
!8756 = !DILocation(line: 6637, column: 20, scope: !8734)
!8757 = !DILocation(line: 6637, column: 24, scope: !8734)
!8758 = !DILocation(line: 6637, column: 3, scope: !8754)
!8759 = distinct !{!8759, !8752, !8760}
!8760 = !DILocation(line: 6637, column: 28, scope: !8734)
!8761 = !DILocation(line: 6641, column: 7, scope: !8734)
!8762 = !DILocation(line: 6643, column: 12, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 6643, column: 7)
!8764 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 6642, column: 5)
!8765 = !DILocation(line: 0, scope: !8763)
!8766 = !DILocation(line: 6643, column: 7, scope: !8763)
!8767 = !DILocation(line: 6644, column: 6, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 6644, column: 6)
!8769 = distinct !DILexicalBlock(scope: !8763, file: !3, line: 6643, column: 7)
!8770 = !DILocation(line: 6644, column: 6, scope: !8769)
!8771 = !DILocation(line: 6646, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 6646, column: 6)
!8773 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 6645, column: 4)
!8774 = !DILocation(line: 0, scope: !8772)
!8775 = !DILocation(line: 6646, column: 28, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 6646, column: 6)
!8777 = !DILocation(line: 6647, column: 12, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 6647, column: 12)
!8779 = !DILocation(line: 6647, column: 26, scope: !8778)
!8780 = !DILocation(line: 6647, column: 12, scope: !8776)
!8781 = !DILocation(line: 6649, column: 5, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 6648, column: 3)
!8783 = !DILocation(line: 6650, column: 19, scope: !8782)
!8784 = !DILocation(line: 6651, column: 3, scope: !8782)
!8785 = !DILocation(line: 6646, column: 38, scope: !8776)
!8786 = !DILocation(line: 6646, column: 6, scope: !8776)
!8787 = distinct !{!8787, !8771, !8788}
!8788 = !DILocation(line: 6651, column: 3, scope: !8772)
!8789 = !DILocation(line: 6643, column: 7, scope: !8769)
!8790 = distinct !{!8790, !8766, !8791}
!8791 = !DILocation(line: 6652, column: 4, scope: !8763)
!8792 = !DILocation(line: 6656, column: 38, scope: !8741)
!8793 = !DILocation(line: 6656, column: 57, scope: !8741)
!8794 = !DILocation(line: 6656, column: 21, scope: !8741)
!8795 = !DILocation(line: 0, scope: !8741)
!8796 = !DILocation(line: 6659, column: 12, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 6659, column: 7)
!8798 = !DILocation(line: 0, scope: !8797)
!8799 = !DILocation(line: 6659, column: 7, scope: !8797)
!8800 = !DILocation(line: 6660, column: 11, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 6660, column: 6)
!8802 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 6659, column: 7)
!8803 = !DILocation(line: 6660, column: 26, scope: !8801)
!8804 = !DILocation(line: 6660, column: 6, scope: !8802)
!8805 = !DILocation(line: 6662, column: 35, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 6661, column: 4)
!8807 = !DILocation(line: 6662, column: 13, scope: !8806)
!8808 = !DILocation(line: 6663, column: 10, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 6663, column: 10)
!8810 = !DILocation(line: 6663, column: 10, scope: !8806)
!8811 = !DILocation(line: 6665, column: 3, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 6664, column: 8)
!8813 = !DILocation(line: 6666, column: 17, scope: !8812)
!8814 = !DILocation(line: 6667, column: 8, scope: !8812)
!8815 = !DILocation(line: 6668, column: 12, scope: !8806)
!8816 = !DILocation(line: 6669, column: 4, scope: !8806)
!8817 = !DILocation(line: 6659, column: 35, scope: !8802)
!8818 = !DILocation(line: 6659, column: 7, scope: !8802)
!8819 = distinct !{!8819, !8799, !8820}
!8820 = !DILocation(line: 6669, column: 4, scope: !8797)
!8821 = !DILocation(line: 6671, column: 7, scope: !8741)
!8822 = !DILocation(line: 6673, column: 1, scope: !8734)
!8823 = distinct !DISubprogram(name: "layout_array_type", scope: !3, file: !3, line: 7037, type: !2872, scopeLine: 7038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8824)
!8824 = !{!8825}
!8825 = !DILocalVariable(name: "t", arg: 1, scope: !8823, file: !3, line: 7037, type: !672)
!8826 = !DILocation(line: 0, scope: !8823)
!8827 = !DILocation(line: 7039, column: 7, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 7039, column: 7)
!8829 = !DILocation(line: 7039, column: 33, scope: !8828)
!8830 = !DILocation(line: 7039, column: 7, scope: !8823)
!8831 = !DILocation(line: 7040, column: 5, scope: !8828)
!8832 = !DILocation(line: 7041, column: 3, scope: !8823)
!8833 = !DILocation(line: 7042, column: 1, scope: !8823)
!8834 = distinct !DISubprogram(name: "warn_cxx_compat_finish_struct", scope: !3, file: !3, line: 6678, type: !2872, scopeLine: 6679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8835)
!8835 = !{!8836, !8837, !8838, !8839, !8840}
!8836 = !DILocalVariable(name: "fieldlist", arg: 1, scope: !8834, file: !3, line: 6678, type: !672)
!8837 = !DILocalVariable(name: "ix", scope: !8834, file: !3, line: 6680, type: !7)
!8838 = !DILocalVariable(name: "x", scope: !8834, file: !3, line: 6681, type: !672)
!8839 = !DILocalVariable(name: "b", scope: !8834, file: !3, line: 6682, type: !2061)
!8840 = !DILocalVariable(name: "tset", scope: !8841, file: !3, line: 6703, type: !8843)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 6700, column: 5)
!8842 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 6698, column: 7)
!8843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8844, size: 64)
!8844 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !135, line: 5199, flags: DIFlagFwdDecl)
!8845 = !DILocation(line: 0, scope: !8834)
!8846 = !DILocation(line: 6681, column: 3, scope: !8834)
!8847 = !DILocation(line: 6682, column: 3, scope: !8834)
!8848 = !DILocation(line: 0, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 6689, column: 3)
!8850 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 6689, column: 3)
!8851 = !DILocation(line: 6689, column: 8, scope: !8850)
!8852 = !DILocation(line: 0, scope: !8850)
!8853 = !DILocation(line: 6689, column: 16, scope: !8849)
!8854 = !DILocation(line: 6689, column: 3, scope: !8850)
!8855 = !DILocation(line: 6690, column: 5, scope: !8849)
!8856 = !DILocation(line: 6690, column: 34, scope: !8849)
!8857 = !DILocation(line: 6689, column: 76, scope: !8849)
!8858 = !DILocation(line: 6689, column: 3, scope: !8849)
!8859 = distinct !{!8859, !8854, !8860}
!8860 = !DILocation(line: 6690, column: 36, scope: !8850)
!8861 = !DILocation(line: 6698, column: 8, scope: !8842)
!8862 = !DILocation(line: 6699, column: 20, scope: !8842)
!8863 = !DILocation(line: 6699, column: 7, scope: !8842)
!8864 = !DILocation(line: 6703, column: 36, scope: !8841)
!8865 = !DILocation(line: 0, scope: !8841)
!8866 = !DILocation(line: 0, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 6705, column: 7)
!8868 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 6705, column: 7)
!8869 = !DILocation(line: 6705, column: 12, scope: !8868)
!8870 = !DILocation(line: 0, scope: !8868)
!8871 = !DILocation(line: 6706, column: 5, scope: !8867)
!8872 = !DILocation(line: 6705, column: 7, scope: !8868)
!8873 = !DILocation(line: 6708, column: 28, scope: !8867)
!8874 = !DILocation(line: 6708, column: 2, scope: !8867)
!8875 = !DILocation(line: 6707, column: 5, scope: !8867)
!8876 = !DILocation(line: 6705, column: 7, scope: !8867)
!8877 = distinct !{!8877, !8872, !8878}
!8878 = !DILocation(line: 6708, column: 41, scope: !8868)
!8879 = !DILocation(line: 0, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 6710, column: 7)
!8881 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 6710, column: 7)
!8882 = !DILocation(line: 6710, column: 12, scope: !8881)
!8883 = !DILocation(line: 0, scope: !8881)
!8884 = !DILocation(line: 6710, column: 29, scope: !8880)
!8885 = !DILocation(line: 6710, column: 7, scope: !8881)
!8886 = !DILocation(line: 6712, column: 36, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 6712, column: 8)
!8888 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 6711, column: 2)
!8889 = !DILocation(line: 6712, column: 8, scope: !8887)
!8890 = !DILocation(line: 6712, column: 8, scope: !8888)
!8891 = !DILocation(line: 6714, column: 20, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 6713, column: 6)
!8893 = !DILocation(line: 6714, column: 8, scope: !8892)
!8894 = !DILocation(line: 6720, column: 6, scope: !8892)
!8895 = !DILocation(line: 6710, column: 47, scope: !8880)
!8896 = !DILocation(line: 6710, column: 7, scope: !8880)
!8897 = distinct !{!8897, !8885, !8898}
!8898 = !DILocation(line: 6721, column: 2, scope: !8881)
!8899 = !DILocation(line: 6723, column: 7, scope: !8841)
!8900 = !DILocation(line: 6724, column: 5, scope: !8841)
!8901 = !DILocation(line: 6728, column: 8, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 6728, column: 3)
!8903 = !DILocation(line: 0, scope: !8902)
!8904 = !DILocation(line: 6729, column: 8, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 6728, column: 3)
!8906 = !DILocation(line: 6728, column: 3, scope: !8902)
!8907 = !DILocation(line: 6731, column: 5, scope: !8905)
!8908 = !DILocation(line: 6731, column: 8, scope: !8905)
!8909 = !DILocation(line: 6731, column: 18, scope: !8905)
!8910 = !DILocation(line: 6730, column: 8, scope: !8905)
!8911 = !DILocation(line: 6728, column: 3, scope: !8905)
!8912 = distinct !{!8912, !8906, !8913}
!8913 = !DILocation(line: 6731, column: 20, scope: !8902)
!8914 = !DILocation(line: 6732, column: 1, scope: !8834)
!8915 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !135, file: !135, line: 184, type: !8916, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8919)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{null, !8918}
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!8919 = !{!8920}
!8920 = !DILocalVariable(name: "vec_", arg: 1, scope: !8915, file: !135, line: 184, type: !8918)
!8921 = !DILocation(line: 0, scope: !8915)
!8922 = !DILocation(line: 184, column: 1, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !135, line: 184, column: 1)
!8924 = !DILocation(line: 184, column: 1, scope: !8915)
!8925 = distinct !DISubprogram(name: "VEC_c_binding_ptr_heap_free", scope: !3, file: !3, line: 509, type: !8926, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8928)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !8263}
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "vec_", arg: 1, scope: !8925, file: !3, line: 509, type: !8263)
!8930 = !DILocation(line: 0, scope: !8925)
!8931 = !DILocation(line: 509, column: 1, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 509, column: 1)
!8933 = !DILocation(line: 509, column: 1, scope: !8925)
!8934 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !135, file: !135, line: 184, type: !8935, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8937)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!996, !8918, !672}
!8937 = !{!8938, !8939}
!8938 = !DILocalVariable(name: "vec_", arg: 1, scope: !8934, file: !135, line: 184, type: !8918)
!8939 = !DILocalVariable(name: "obj_", arg: 2, scope: !8934, file: !135, line: 184, type: !672)
!8940 = !DILocation(line: 0, scope: !8934)
!8941 = !DILocation(line: 184, column: 1, scope: !8934)
!8942 = distinct !DISubprogram(name: "start_enum", scope: !3, file: !3, line: 7052, type: !8943, scopeLine: 7053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8950)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!672, !760, !8945, !672}
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 64)
!8946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_enum_contents", file: !564, line: 370, size: 128, elements: !8947)
!8947 = !{!8948, !8949}
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "enum_next_value", scope: !8946, file: !564, line: 374, baseType: !672, size: 64)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "enum_overflow", scope: !8946, file: !564, line: 377, baseType: !620, size: 32, offset: 64)
!8950 = !{!8951, !8952, !8953, !8954, !8955}
!8951 = !DILocalVariable(name: "loc", arg: 1, scope: !8942, file: !3, line: 7052, type: !760)
!8952 = !DILocalVariable(name: "the_enum", arg: 2, scope: !8942, file: !3, line: 7052, type: !8945)
!8953 = !DILocalVariable(name: "name", arg: 3, scope: !8942, file: !3, line: 7052, type: !672)
!8954 = !DILocalVariable(name: "enumtype", scope: !8942, file: !3, line: 7054, type: !672)
!8955 = !DILocalVariable(name: "enumloc", scope: !8942, file: !3, line: 7055, type: !760)
!8956 = !DILocation(line: 0, scope: !8942)
!8957 = !DILocation(line: 7055, column: 3, scope: !8942)
!8958 = !DILocation(line: 7055, column: 14, scope: !8942)
!8959 = !DILocation(line: 7061, column: 12, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7061, column: 7)
!8961 = !DILocation(line: 7061, column: 7, scope: !8942)
!8962 = !DILocation(line: 7062, column: 16, scope: !8960)
!8963 = !DILocation(line: 7062, column: 5, scope: !8960)
!8964 = !DILocation(line: 7064, column: 16, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7064, column: 7)
!8966 = !DILocation(line: 7064, column: 21, scope: !8965)
!8967 = !DILocation(line: 7064, column: 24, scope: !8965)
!8968 = !DILocation(line: 7064, column: 45, scope: !8965)
!8969 = !DILocation(line: 7064, column: 7, scope: !8942)
!8970 = !DILocation(line: 7066, column: 18, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 7065, column: 5)
!8972 = !DILocation(line: 7067, column: 7, scope: !8971)
!8973 = !DILocation(line: 7068, column: 5, scope: !8971)
!8974 = !DILocation(line: 7070, column: 7, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7070, column: 7)
!8976 = !DILocation(line: 7070, column: 7, scope: !8942)
!8977 = !DILocation(line: 7071, column: 5, scope: !8975)
!8978 = !DILocation(line: 7073, column: 35, scope: !8942)
!8979 = !DILocation(line: 7075, column: 7, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7075, column: 7)
!8981 = !DILocation(line: 7075, column: 30, scope: !8980)
!8982 = !DILocation(line: 7075, column: 7, scope: !8942)
!8983 = !DILocation(line: 7078, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 7076, column: 5)
!8985 = !DILocation(line: 7079, column: 11, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 7079, column: 11)
!8987 = !DILocation(line: 7079, column: 19, scope: !8986)
!8988 = !DILocation(line: 7079, column: 11, scope: !8984)
!8989 = !DILocation(line: 7080, column: 2, scope: !8986)
!8990 = !DILocation(line: 7084, column: 30, scope: !8984)
!8991 = !DILocation(line: 7085, column: 5, scope: !8984)
!8992 = !DILocation(line: 7087, column: 31, scope: !8942)
!8993 = !DILocation(line: 7087, column: 29, scope: !8942)
!8994 = !DILocation(line: 7088, column: 13, scope: !8942)
!8995 = !DILocation(line: 7088, column: 27, scope: !8942)
!8996 = !DILocation(line: 7090, column: 7, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7090, column: 7)
!8998 = !DILocation(line: 7090, column: 7, scope: !8942)
!8999 = !DILocation(line: 7091, column: 5, scope: !8997)
!9000 = !DILocation(line: 7091, column: 28, scope: !8997)
!9001 = !DILocation(line: 7096, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 7096, column: 7)
!9003 = !DILocation(line: 7096, column: 23, scope: !9002)
!9004 = !DILocation(line: 7096, column: 27, scope: !9002)
!9005 = !DILocation(line: 7096, column: 40, scope: !9002)
!9006 = !DILocation(line: 7096, column: 37, scope: !9002)
!9007 = !DILocation(line: 7096, column: 53, scope: !9002)
!9008 = !DILocation(line: 7099, column: 4, scope: !9002)
!9009 = !DILocation(line: 7101, column: 7, scope: !9002)
!9010 = !DILocation(line: 7097, column: 5, scope: !9002)
!9011 = !DILocation(line: 7104, column: 1, scope: !8942)
!9012 = !DILocation(line: 7103, column: 3, scope: !8942)
!9013 = distinct !DISubprogram(name: "finish_enum", scope: !3, file: !3, line: 7113, type: !9014, scopeLine: 7114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9016)
!9014 = !DISubroutineType(types: !9015)
!9015 = !{!672, !672, !672, !672}
!9016 = !{!9017, !9018, !9019, !9020, !9021, !9022, !9023, !9024, !9025, !9026, !9027, !9028, !9034, !9040}
!9017 = !DILocalVariable(name: "enumtype", arg: 1, scope: !9013, file: !3, line: 7113, type: !672)
!9018 = !DILocalVariable(name: "values", arg: 2, scope: !9013, file: !3, line: 7113, type: !672)
!9019 = !DILocalVariable(name: "attributes", arg: 3, scope: !9013, file: !3, line: 7113, type: !672)
!9020 = !DILocalVariable(name: "pair", scope: !9013, file: !3, line: 7115, type: !672)
!9021 = !DILocalVariable(name: "tem", scope: !9013, file: !3, line: 7115, type: !672)
!9022 = !DILocalVariable(name: "minnode", scope: !9013, file: !3, line: 7116, type: !672)
!9023 = !DILocalVariable(name: "maxnode", scope: !9013, file: !3, line: 7116, type: !672)
!9024 = !DILocalVariable(name: "precision", scope: !9013, file: !3, line: 7117, type: !620)
!9025 = !DILocalVariable(name: "unsign", scope: !9013, file: !3, line: 7117, type: !620)
!9026 = !DILocalVariable(name: "toplevel", scope: !9013, file: !3, line: 7118, type: !619)
!9027 = !DILocalVariable(name: "lt", scope: !9013, file: !3, line: 7119, type: !1725)
!9028 = !DILocalVariable(name: "value", scope: !9029, file: !3, line: 7132, type: !672)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 7131, column: 2)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 7130, column: 7)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 7130, column: 7)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 7128, column: 5)
!9033 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7125, column: 7)
!9034 = !DILocalVariable(name: "enu", scope: !9035, file: !3, line: 7188, type: !672)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 7187, column: 2)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 7186, column: 7)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 7186, column: 7)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 7178, column: 5)
!9039 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7177, column: 7)
!9040 = !DILocalVariable(name: "ini", scope: !9035, file: !3, line: 7189, type: !672)
!9041 = !DILocation(line: 0, scope: !9013)
!9042 = !DILocation(line: 7118, column: 20, scope: !9013)
!9043 = !DILocation(line: 7118, column: 34, scope: !9013)
!9044 = !DILocation(line: 7118, column: 31, scope: !9013)
!9045 = !DILocation(line: 7121, column: 3, scope: !9013)
!9046 = !DILocation(line: 7125, column: 17, scope: !9033)
!9047 = !DILocation(line: 7125, column: 14, scope: !9033)
!9048 = !DILocation(line: 7125, column: 7, scope: !9013)
!9049 = !DILocation(line: 7126, column: 25, scope: !9033)
!9050 = !DILocation(line: 7126, column: 5, scope: !9033)
!9051 = !DILocation(line: 7129, column: 27, scope: !9032)
!9052 = !DILocation(line: 7130, column: 12, scope: !9031)
!9053 = !DILocation(line: 0, scope: !9032)
!9054 = !DILocation(line: 0, scope: !9031)
!9055 = !DILocation(line: 7130, column: 7, scope: !9031)
!9056 = !DILocation(line: 7132, column: 17, scope: !9029)
!9057 = !DILocation(line: 0, scope: !9029)
!9058 = !DILocation(line: 7133, column: 8, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 7133, column: 8)
!9060 = !DILocation(line: 7133, column: 8, scope: !9029)
!9061 = !DILocation(line: 7135, column: 8, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 7135, column: 8)
!9063 = !DILocation(line: 7135, column: 8, scope: !9029)
!9064 = !DILocation(line: 7130, column: 7, scope: !9030)
!9065 = distinct !{!9065, !9055, !9066}
!9066 = !DILocation(line: 7137, column: 2, scope: !9031)
!9067 = !DILocation(line: 7144, column: 13, scope: !9013)
!9068 = !DILocation(line: 0, scope: !9033)
!9069 = !DILocation(line: 7144, column: 40, scope: !9013)
!9070 = !DILocation(line: 7145, column: 15, scope: !9013)
!9071 = !DILocation(line: 7148, column: 7, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7148, column: 7)
!9073 = !DILocation(line: 7148, column: 30, scope: !9072)
!9074 = !DILocation(line: 7148, column: 45, scope: !9072)
!9075 = !DILocation(line: 7148, column: 43, scope: !9072)
!9076 = !DILocation(line: 7148, column: 7, scope: !9013)
!9077 = !DILocation(line: 7150, column: 13, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 7149, column: 5)
!9079 = !DILocation(line: 7151, column: 15, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 7151, column: 11)
!9081 = !DILocation(line: 7151, column: 11, scope: !9078)
!9082 = !DILocation(line: 7153, column: 4, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 7152, column: 2)
!9084 = !DILocation(line: 7154, column: 10, scope: !9083)
!9085 = !DILocation(line: 7155, column: 2, scope: !9083)
!9086 = !DILocation(line: 7158, column: 11, scope: !9072)
!9087 = !DILocation(line: 0, scope: !9072)
!9088 = !DILocation(line: 7160, column: 31, scope: !9013)
!9089 = !DILocation(line: 7160, column: 3, scope: !9013)
!9090 = !DILocation(line: 7160, column: 29, scope: !9013)
!9091 = !DILocation(line: 7161, column: 31, scope: !9013)
!9092 = !DILocation(line: 7161, column: 3, scope: !9013)
!9093 = !DILocation(line: 7161, column: 29, scope: !9013)
!9094 = !DILocation(line: 7162, column: 30, scope: !9013)
!9095 = !DILocation(line: 7162, column: 3, scope: !9013)
!9096 = !DILocation(line: 7162, column: 28, scope: !9013)
!9097 = !DILocation(line: 7163, column: 3, scope: !9013)
!9098 = !DILocation(line: 7163, column: 24, scope: !9013)
!9099 = !DILocation(line: 7167, column: 7, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7167, column: 7)
!9101 = !DILocation(line: 7167, column: 7, scope: !9013)
!9102 = !DILocation(line: 7169, column: 21, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 7169, column: 11)
!9104 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 7168, column: 5)
!9105 = !DILocation(line: 7169, column: 11, scope: !9104)
!9106 = !DILocation(line: 7170, column: 2, scope: !9103)
!9107 = !DILocation(line: 7175, column: 16, scope: !9013)
!9108 = !DILocation(line: 7173, column: 33, scope: !9100)
!9109 = !DILocation(line: 7173, column: 31, scope: !9100)
!9110 = !DILocation(line: 7175, column: 3, scope: !9013)
!9111 = !DILocation(line: 7177, column: 17, scope: !9039)
!9112 = !DILocation(line: 7177, column: 14, scope: !9039)
!9113 = !DILocation(line: 7177, column: 7, scope: !9013)
!9114 = !DILocation(line: 0, scope: !9035)
!9115 = !DILocation(line: 7186, column: 7, scope: !9037)
!9116 = !DILocation(line: 0, scope: !9037)
!9117 = !DILocation(line: 7188, column: 15, scope: !9035)
!9118 = !DILocation(line: 7189, column: 15, scope: !9035)
!9119 = !DILocation(line: 7191, column: 22, scope: !9035)
!9120 = !DILocation(line: 7191, column: 4, scope: !9035)
!9121 = !DILocation(line: 7191, column: 20, scope: !9035)
!9122 = !DILocation(line: 7203, column: 8, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 7203, column: 8)
!9124 = !DILocation(line: 7203, column: 27, scope: !9123)
!9125 = !DILocation(line: 7203, column: 24, scope: !9123)
!9126 = !DILocation(line: 7203, column: 8, scope: !9035)
!9127 = !DILocation(line: 7204, column: 12, scope: !9123)
!9128 = !DILocation(line: 7204, column: 6, scope: !9123)
!9129 = !DILocation(line: 7206, column: 23, scope: !9035)
!9130 = !DILocation(line: 7207, column: 26, scope: !9035)
!9131 = !DILocation(line: 7207, column: 24, scope: !9035)
!9132 = !DILocation(line: 7208, column: 4, scope: !9035)
!9133 = !DILocation(line: 7208, column: 22, scope: !9035)
!9134 = !DILocation(line: 7186, column: 40, scope: !9036)
!9135 = !DILocation(line: 7186, column: 7, scope: !9036)
!9136 = distinct !{!9136, !9115, !9137}
!9137 = !DILocation(line: 7209, column: 2, scope: !9037)
!9138 = !DILocation(line: 7211, column: 7, scope: !9038)
!9139 = !DILocation(line: 7211, column: 30, scope: !9038)
!9140 = !DILocation(line: 7212, column: 5, scope: !9038)
!9141 = !DILocation(line: 7216, column: 8, scope: !9013)
!9142 = !DILocation(line: 7217, column: 7, scope: !9013)
!9143 = !DILocation(line: 7217, column: 16, scope: !9013)
!9144 = !DILocation(line: 7218, column: 7, scope: !9013)
!9145 = !DILocation(line: 7218, column: 16, scope: !9013)
!9146 = !DILocation(line: 7219, column: 3, scope: !9013)
!9147 = !DILocation(line: 7219, column: 33, scope: !9013)
!9148 = !DILocation(line: 7222, column: 14, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7222, column: 3)
!9150 = !DILocation(line: 7222, column: 8, scope: !9149)
!9151 = !DILocation(line: 0, scope: !9149)
!9152 = !DILocation(line: 7222, column: 3, scope: !9149)
!9153 = !DILocation(line: 7224, column: 15, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 7224, column: 11)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 7223, column: 5)
!9156 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 7222, column: 3)
!9157 = !DILocation(line: 7224, column: 11, scope: !9155)
!9158 = !DILocation(line: 7226, column: 27, scope: !9155)
!9159 = !DILocation(line: 7226, column: 7, scope: !9155)
!9160 = !DILocation(line: 7226, column: 25, scope: !9155)
!9161 = !DILocation(line: 7227, column: 30, scope: !9155)
!9162 = !DILocation(line: 7227, column: 7, scope: !9155)
!9163 = !DILocation(line: 7227, column: 28, scope: !9155)
!9164 = !DILocation(line: 7228, column: 30, scope: !9155)
!9165 = !DILocation(line: 7228, column: 7, scope: !9155)
!9166 = !DILocation(line: 7228, column: 28, scope: !9155)
!9167 = !DILocation(line: 7229, column: 25, scope: !9155)
!9168 = !DILocation(line: 7229, column: 7, scope: !9155)
!9169 = !DILocation(line: 7229, column: 23, scope: !9155)
!9170 = !DILocation(line: 7230, column: 30, scope: !9155)
!9171 = !DILocation(line: 7230, column: 7, scope: !9155)
!9172 = !DILocation(line: 7230, column: 28, scope: !9155)
!9173 = !DILocation(line: 7231, column: 7, scope: !9155)
!9174 = !DILocation(line: 7232, column: 30, scope: !9155)
!9175 = !DILocation(line: 7233, column: 26, scope: !9155)
!9176 = !DILocation(line: 7232, column: 28, scope: !9155)
!9177 = !DILocation(line: 7233, column: 7, scope: !9155)
!9178 = !DILocation(line: 7233, column: 24, scope: !9155)
!9179 = !DILocation(line: 7234, column: 31, scope: !9155)
!9180 = !DILocation(line: 7234, column: 7, scope: !9155)
!9181 = !DILocation(line: 7234, column: 29, scope: !9155)
!9182 = !DILocation(line: 7235, column: 29, scope: !9155)
!9183 = !DILocation(line: 7235, column: 27, scope: !9155)
!9184 = !DILocation(line: 7236, column: 34, scope: !9155)
!9185 = !DILocation(line: 7236, column: 7, scope: !9155)
!9186 = !DILocation(line: 7236, column: 32, scope: !9155)
!9187 = !DILocation(line: 7237, column: 5, scope: !9155)
!9188 = !DILocation(line: 7222, column: 55, scope: !9156)
!9189 = !DILocation(line: 7222, column: 3, scope: !9156)
!9190 = distinct !{!9190, !9152, !9191}
!9191 = !DILocation(line: 7237, column: 5, scope: !9149)
!9192 = !DILocation(line: 7240, column: 39, scope: !9013)
!9193 = !DILocation(line: 7240, column: 3, scope: !9013)
!9194 = !DILocation(line: 7244, column: 7, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 7244, column: 7)
!9196 = !DILocation(line: 7245, column: 10, scope: !9195)
!9197 = !DILocation(line: 7245, column: 28, scope: !9195)
!9198 = !DILocation(line: 7245, column: 7, scope: !9195)
!9199 = !DILocation(line: 7246, column: 11, scope: !9195)
!9200 = !DILocation(line: 7246, column: 25, scope: !9195)
!9201 = !DILocation(line: 7246, column: 39, scope: !9195)
!9202 = !DILocation(line: 7247, column: 5, scope: !9195)
!9203 = !DILocation(line: 7249, column: 10, scope: !9013)
!9204 = !DILocation(line: 7249, column: 3, scope: !9013)
!9205 = distinct !DISubprogram(name: "build_enumerator", scope: !3, file: !3, line: 7259, type: !9206, scopeLine: 7261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9208)
!9206 = !DISubroutineType(types: !9207)
!9207 = !{!672, !760, !8945, !672, !672}
!9208 = !{!9209, !9210, !9211, !9212, !9213, !9214}
!9209 = !DILocalVariable(name: "loc", arg: 1, scope: !9205, file: !3, line: 7259, type: !760)
!9210 = !DILocalVariable(name: "the_enum", arg: 2, scope: !9205, file: !3, line: 7260, type: !8945)
!9211 = !DILocalVariable(name: "name", arg: 3, scope: !9205, file: !3, line: 7260, type: !672)
!9212 = !DILocalVariable(name: "value", arg: 4, scope: !9205, file: !3, line: 7260, type: !672)
!9213 = !DILocalVariable(name: "decl", scope: !9205, file: !3, line: 7262, type: !672)
!9214 = !DILocalVariable(name: "type", scope: !9205, file: !3, line: 7262, type: !672)
!9215 = !DILocation(line: 0, scope: !9205)
!9216 = !DILocation(line: 7266, column: 13, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 7266, column: 7)
!9218 = !DILocation(line: 7266, column: 7, scope: !9205)
!9219 = !DILocation(line: 7270, column: 20, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !3, line: 7270, column: 11)
!9221 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 7267, column: 5)
!9222 = !DILocation(line: 7270, column: 17, scope: !9220)
!9223 = !DILocation(line: 7270, column: 11, scope: !9221)
!9224 = !DILocation(line: 7272, column: 17, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 7272, column: 16)
!9226 = !DILocation(line: 7272, column: 16, scope: !9220)
!9227 = !DILocation(line: 7274, column: 4, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 7273, column: 2)
!9229 = !DILocation(line: 7277, column: 2, scope: !9228)
!9230 = !DILocation(line: 7280, column: 8, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 7280, column: 8)
!9232 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 7279, column: 2)
!9233 = !DILocation(line: 7280, column: 26, scope: !9231)
!9234 = !DILocation(line: 7280, column: 8, scope: !9232)
!9235 = !DILocation(line: 7282, column: 16, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 7281, column: 6)
!9237 = !DILocation(line: 7283, column: 12, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 7283, column: 12)
!9239 = !DILocation(line: 7283, column: 30, scope: !9238)
!9240 = !DILocation(line: 7283, column: 12, scope: !9236)
!9241 = !DILocation(line: 7284, column: 3, scope: !9238)
!9242 = !DILocation(line: 7288, column: 8, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 7288, column: 8)
!9244 = !DILocation(line: 7288, column: 26, scope: !9243)
!9245 = !DILocation(line: 7288, column: 8, scope: !9232)
!9246 = !DILocation(line: 7290, column: 8, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 7289, column: 6)
!9248 = !DILocation(line: 7293, column: 6, scope: !9247)
!9249 = !DILocation(line: 7296, column: 16, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 7295, column: 6)
!9251 = !DILocation(line: 7297, column: 8, scope: !9250)
!9252 = !DILocation(line: 7305, column: 13, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 7305, column: 7)
!9254 = !DILocation(line: 7305, column: 7, scope: !9205)
!9255 = !DILocation(line: 7307, column: 25, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 7306, column: 5)
!9257 = !DILocation(line: 7308, column: 21, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 7308, column: 11)
!9259 = !DILocation(line: 7308, column: 11, scope: !9258)
!9260 = !DILocation(line: 7308, column: 11, scope: !9256)
!9261 = !DILocation(line: 7309, column: 2, scope: !9258)
!9262 = !DILocation(line: 7315, column: 37, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 7315, column: 12)
!9264 = !DILocation(line: 7315, column: 13, scope: !9263)
!9265 = !DILocation(line: 7315, column: 12, scope: !9253)
!9266 = !DILocation(line: 7316, column: 5, scope: !9263)
!9267 = !DILocation(line: 7328, column: 31, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 7328, column: 7)
!9269 = !DILocation(line: 7328, column: 7, scope: !9268)
!9270 = !DILocation(line: 7328, column: 7, scope: !9205)
!9271 = !DILocation(line: 7329, column: 22, scope: !9268)
!9272 = !DILocation(line: 7329, column: 13, scope: !9268)
!9273 = !DILocation(line: 7329, column: 5, scope: !9268)
!9274 = !DILocation(line: 7334, column: 11, scope: !9205)
!9275 = !DILocation(line: 7334, column: 39, scope: !9205)
!9276 = !DILocation(line: 7334, column: 63, scope: !9205)
!9277 = !DILocation(line: 7335, column: 21, scope: !9205)
!9278 = !DILocation(line: 7333, column: 7, scope: !9205)
!9279 = !DILocation(line: 7332, column: 13, scope: !9205)
!9280 = !DILocation(line: 7333, column: 5, scope: !9205)
!9281 = !DILocation(line: 7336, column: 29, scope: !9205)
!9282 = !DILocation(line: 7336, column: 13, scope: !9205)
!9283 = !DILocation(line: 7336, column: 27, scope: !9205)
!9284 = !DILocation(line: 7340, column: 10, scope: !9205)
!9285 = !DILocation(line: 7341, column: 34, scope: !9205)
!9286 = !DILocation(line: 7344, column: 7, scope: !9205)
!9287 = !DILocation(line: 7345, column: 7, scope: !9205)
!9288 = !DILocation(line: 7345, column: 10, scope: !9205)
!9289 = !DILocation(line: 7341, column: 10, scope: !9205)
!9290 = !DILocation(line: 7347, column: 10, scope: !9205)
!9291 = !DILocation(line: 7348, column: 25, scope: !9205)
!9292 = !DILocation(line: 7348, column: 3, scope: !9205)
!9293 = !DILocation(line: 7348, column: 23, scope: !9205)
!9294 = !DILocation(line: 7349, column: 3, scope: !9205)
!9295 = !DILocation(line: 7351, column: 10, scope: !9205)
!9296 = !DILocation(line: 7351, column: 3, scope: !9205)
!9297 = distinct !DISubprogram(name: "start_function", scope: !3, file: !3, line: 7368, type: !9298, scopeLine: 7370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9300)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{!620, !2190, !2141, !672}
!9300 = !{!9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9314, !9317}
!9301 = !DILocalVariable(name: "declspecs", arg: 1, scope: !9297, file: !3, line: 7368, type: !2190)
!9302 = !DILocalVariable(name: "declarator", arg: 2, scope: !9297, file: !3, line: 7368, type: !2141)
!9303 = !DILocalVariable(name: "attributes", arg: 3, scope: !9297, file: !3, line: 7369, type: !672)
!9304 = !DILocalVariable(name: "decl1", scope: !9297, file: !3, line: 7371, type: !672)
!9305 = !DILocalVariable(name: "old_decl", scope: !9297, file: !3, line: 7371, type: !672)
!9306 = !DILocalVariable(name: "restype", scope: !9297, file: !3, line: 7372, type: !672)
!9307 = !DILocalVariable(name: "resdecl", scope: !9297, file: !3, line: 7372, type: !672)
!9308 = !DILocalVariable(name: "loc", scope: !9297, file: !3, line: 7373, type: !760)
!9309 = !DILocalVariable(name: "b", scope: !9310, file: !3, line: 7466, type: !2061)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 7459, column: 2)
!9311 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 7458, column: 11)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 7445, column: 5)
!9313 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7444, column: 7)
!9314 = !DILocalVariable(name: "ext_decl", scope: !9315, file: !3, line: 7472, type: !672)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 7471, column: 6)
!9316 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 7470, column: 8)
!9317 = !DILocalVariable(name: "ext_type", scope: !9315, file: !3, line: 7472, type: !672)
!9318 = !DILocation(line: 0, scope: !9297)
!9319 = !DILocation(line: 7371, column: 3, scope: !9297)
!9320 = !DILocation(line: 7375, column: 34, scope: !9297)
!9321 = !DILocation(line: 7376, column: 33, scope: !9297)
!9322 = !DILocation(line: 7377, column: 39, scope: !9297)
!9323 = !DILocation(line: 7378, column: 26, scope: !9297)
!9324 = !DILocation(line: 7379, column: 18, scope: !9297)
!9325 = !DILocation(line: 7384, column: 34, scope: !9297)
!9326 = !DILocation(line: 7384, column: 32, scope: !9297)
!9327 = !DILocation(line: 7384, column: 17, scope: !9297)
!9328 = !DILocation(line: 7386, column: 11, scope: !9297)
!9329 = !DILocation(line: 7386, column: 9, scope: !9297)
!9330 = !DILocation(line: 7391, column: 13, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7391, column: 7)
!9332 = !DILocation(line: 7391, column: 7, scope: !9297)
!9333 = !DILocation(line: 7394, column: 9, scope: !9297)
!9334 = !DILocation(line: 7396, column: 28, scope: !9297)
!9335 = !DILocation(line: 7396, column: 3, scope: !9297)
!9336 = !DILocation(line: 7398, column: 7, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7398, column: 7)
!9338 = !DILocation(line: 7399, column: 7, scope: !9337)
!9339 = !DILocation(line: 7399, column: 10, scope: !9337)
!9340 = !DILocation(line: 7400, column: 7, scope: !9337)
!9341 = !DILocation(line: 7400, column: 40, scope: !9337)
!9342 = !DILocation(line: 7400, column: 10, scope: !9337)
!9343 = !DILocation(line: 7398, column: 7, scope: !9297)
!9344 = !DILocation(line: 7403, column: 3, scope: !9337)
!9345 = !DILocation(line: 7401, column: 5, scope: !9337)
!9346 = !DILocation(line: 7406, column: 18, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7406, column: 7)
!9348 = !DILocation(line: 7406, column: 7, scope: !9347)
!9349 = !DILocation(line: 7407, column: 11, scope: !9347)
!9350 = !DILocation(line: 7407, column: 7, scope: !9347)
!9351 = !DILocation(line: 7408, column: 10, scope: !9347)
!9352 = !DILocation(line: 7408, column: 28, scope: !9347)
!9353 = !DILocation(line: 7409, column: 7, scope: !9347)
!9354 = !DILocation(line: 7409, column: 43, scope: !9347)
!9355 = !DILocation(line: 7409, column: 11, scope: !9347)
!9356 = !DILocation(line: 7410, column: 7, scope: !9347)
!9357 = !DILocation(line: 7410, column: 4, scope: !9347)
!9358 = !DILocation(line: 7412, column: 22, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 7412, column: 11)
!9360 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 7411, column: 5)
!9361 = !DILocation(line: 7412, column: 36, scope: !9359)
!9362 = !DILocation(line: 7412, column: 11, scope: !9360)
!9363 = !DILocation(line: 7413, column: 27, scope: !9359)
!9364 = !DILocation(line: 7413, column: 24, scope: !9359)
!9365 = !DILocation(line: 7413, column: 2, scope: !9359)
!9366 = !DILocation(line: 7416, column: 22, scope: !9297)
!9367 = !DILocation(line: 7416, column: 3, scope: !9297)
!9368 = !DILocation(line: 7418, column: 8, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7418, column: 7)
!9370 = !DILocation(line: 7418, column: 7, scope: !9297)
!9371 = !DILocation(line: 7420, column: 7, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 7419, column: 5)
!9373 = !DILocation(line: 7423, column: 25, scope: !9372)
!9374 = !DILocation(line: 7424, column: 11, scope: !9372)
!9375 = !DILocation(line: 7423, column: 4, scope: !9372)
!9376 = !DILocation(line: 7422, column: 7, scope: !9372)
!9377 = !DILocation(line: 7423, column: 2, scope: !9372)
!9378 = !DILocation(line: 7425, column: 5, scope: !9372)
!9379 = !DILocation(line: 7427, column: 7, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7427, column: 7)
!9381 = !DILocation(line: 7427, column: 7, scope: !9297)
!9382 = !DILocation(line: 7428, column: 23, scope: !9380)
!9383 = !DILocation(line: 7429, column: 7, scope: !9380)
!9384 = !DILocation(line: 7428, column: 5, scope: !9380)
!9385 = !DILocation(line: 7434, column: 3, scope: !9297)
!9386 = !DILocation(line: 7434, column: 26, scope: !9297)
!9387 = !DILocation(line: 7434, column: 24, scope: !9297)
!9388 = !DILocation(line: 7438, column: 36, scope: !9297)
!9389 = !DILocation(line: 7438, column: 55, scope: !9297)
!9390 = !DILocation(line: 7438, column: 14, scope: !9297)
!9391 = !DILocation(line: 7439, column: 7, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7439, column: 7)
!9393 = !DILocation(line: 7439, column: 16, scope: !9392)
!9394 = !DILocation(line: 7439, column: 19, scope: !9392)
!9395 = !DILocation(line: 7439, column: 40, scope: !9392)
!9396 = !DILocation(line: 7439, column: 7, scope: !9297)
!9397 = !DILocation(line: 7441, column: 36, scope: !9297)
!9398 = !DILocation(line: 7442, column: 39, scope: !9297)
!9399 = !DILocation(line: 7443, column: 40, scope: !9297)
!9400 = !DILocation(line: 7444, column: 7, scope: !9313)
!9401 = !DILocation(line: 7444, column: 42, scope: !9313)
!9402 = !DILocation(line: 7444, column: 7, scope: !9297)
!9403 = !DILocation(line: 7446, column: 20, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 7446, column: 11)
!9405 = !DILocation(line: 7446, column: 25, scope: !9404)
!9406 = !DILocation(line: 7446, column: 28, scope: !9404)
!9407 = !DILocation(line: 7446, column: 61, scope: !9404)
!9408 = !DILocation(line: 7447, column: 4, scope: !9404)
!9409 = !DILocation(line: 7447, column: 18, scope: !9404)
!9410 = !DILocation(line: 7448, column: 4, scope: !9404)
!9411 = !DILocation(line: 7447, column: 7, scope: !9404)
!9412 = !DILocation(line: 7446, column: 11, scope: !9312)
!9413 = !DILocation(line: 0, scope: !9311)
!9414 = !DILocation(line: 7458, column: 11, scope: !9311)
!9415 = !DILocation(line: 7450, column: 40, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 7449, column: 2)
!9417 = !DILocation(line: 7451, column: 12, scope: !9416)
!9418 = !DILocation(line: 7450, column: 24, scope: !9416)
!9419 = !DILocation(line: 7450, column: 4, scope: !9416)
!9420 = !DILocation(line: 7450, column: 22, scope: !9416)
!9421 = !DILocation(line: 7452, column: 39, scope: !9416)
!9422 = !DILocation(line: 7452, column: 37, scope: !9416)
!9423 = !DILocation(line: 7454, column: 8, scope: !9416)
!9424 = !DILocation(line: 7454, column: 6, scope: !9416)
!9425 = !DILocation(line: 7456, column: 8, scope: !9416)
!9426 = !DILocation(line: 7456, column: 6, scope: !9416)
!9427 = !DILocation(line: 7457, column: 2, scope: !9416)
!9428 = !DILocation(line: 7458, column: 11, scope: !9312)
!9429 = !DILocation(line: 7467, column: 13, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 7467, column: 4)
!9431 = !DILocation(line: 0, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 7468, column: 10)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 7467, column: 4)
!9434 = !DILocation(line: 7467, column: 9, scope: !9430)
!9435 = !DILocation(line: 0, scope: !9430)
!9436 = !DILocation(line: 0, scope: !9310)
!9437 = !DILocation(line: 7467, column: 4, scope: !9430)
!9438 = !DILocation(line: 7468, column: 10, scope: !9432)
!9439 = !DILocation(line: 7468, column: 10, scope: !9433)
!9440 = !DILocation(line: 7467, column: 61, scope: !9433)
!9441 = !DILocation(line: 7467, column: 4, scope: !9433)
!9442 = distinct !{!9442, !9437, !9443}
!9443 = !DILocation(line: 7469, column: 8, scope: !9430)
!9444 = !DILocation(line: 7473, column: 22, scope: !9315)
!9445 = !DILocation(line: 0, scope: !9315)
!9446 = !DILocation(line: 7474, column: 24, scope: !9315)
!9447 = !DILocation(line: 7474, column: 19, scope: !9315)
!9448 = !DILocation(line: 7474, column: 43, scope: !9315)
!9449 = !DILocation(line: 7475, column: 12, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 7475, column: 12)
!9451 = !DILocation(line: 7475, column: 33, scope: !9450)
!9452 = !DILocation(line: 7476, column: 5, scope: !9450)
!9453 = !DILocation(line: 7476, column: 19, scope: !9450)
!9454 = !DILocation(line: 7477, column: 5, scope: !9450)
!9455 = !DILocation(line: 7476, column: 8, scope: !9450)
!9456 = !DILocation(line: 7475, column: 12, scope: !9315)
!9457 = !DILocation(line: 7480, column: 9, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 7478, column: 3)
!9459 = !DILocation(line: 7480, column: 7, scope: !9458)
!9460 = !DILocation(line: 7482, column: 9, scope: !9458)
!9461 = !DILocation(line: 7482, column: 7, scope: !9458)
!9462 = !DILocation(line: 7484, column: 9, scope: !9458)
!9463 = !DILocation(line: 7484, column: 7, scope: !9458)
!9464 = !DILocation(line: 7485, column: 3, scope: !9458)
!9465 = !DILocation(line: 7491, column: 7, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7491, column: 7)
!9467 = !DILocation(line: 7492, column: 22, scope: !9466)
!9468 = !DILocation(line: 7492, column: 19, scope: !9466)
!9469 = !DILocation(line: 7492, column: 7, scope: !9466)
!9470 = !DILocation(line: 7493, column: 10, scope: !9466)
!9471 = !DILocation(line: 7493, column: 45, scope: !9466)
!9472 = !DILocation(line: 7494, column: 7, scope: !9466)
!9473 = !DILocation(line: 7494, column: 10, scope: !9466)
!9474 = !DILocation(line: 7491, column: 7, scope: !9297)
!9475 = !DILocation(line: 7495, column: 5, scope: !9466)
!9476 = !DILocation(line: 7498, column: 12, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 7498, column: 12)
!9478 = !DILocation(line: 7499, column: 5, scope: !9477)
!9479 = !DILocation(line: 7500, column: 8, scope: !9477)
!9480 = !DILocation(line: 7501, column: 5, scope: !9477)
!9481 = !DILocation(line: 7501, column: 9, scope: !9477)
!9482 = !DILocation(line: 7502, column: 5, scope: !9477)
!9483 = !DILocation(line: 7502, column: 8, scope: !9477)
!9484 = !DILocation(line: 7498, column: 12, scope: !9466)
!9485 = !DILocation(line: 7503, column: 5, scope: !9477)
!9486 = !DILocation(line: 7508, column: 17, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 7507, column: 12)
!9488 = !DILocation(line: 7508, column: 5, scope: !9487)
!9489 = !DILocation(line: 7510, column: 8, scope: !9487)
!9490 = !DILocation(line: 7511, column: 5, scope: !9487)
!9491 = !DILocation(line: 7511, column: 8, scope: !9487)
!9492 = !DILocation(line: 7511, column: 46, scope: !9487)
!9493 = !DILocation(line: 7507, column: 12, scope: !9477)
!9494 = !DILocation(line: 7513, column: 59, scope: !9487)
!9495 = !DILocation(line: 7512, column: 5, scope: !9487)
!9496 = !DILocation(line: 7515, column: 12, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 7515, column: 12)
!9498 = !DILocation(line: 7516, column: 5, scope: !9497)
!9499 = !DILocation(line: 7516, column: 8, scope: !9497)
!9500 = !DILocation(line: 7517, column: 17, scope: !9497)
!9501 = !DILocation(line: 7517, column: 5, scope: !9497)
!9502 = !DILocation(line: 7518, column: 9, scope: !9497)
!9503 = !DILocation(line: 7515, column: 12, scope: !9487)
!9504 = !DILocation(line: 7519, column: 5, scope: !9497)
!9505 = !DILocation(line: 7524, column: 12, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 7524, column: 12)
!9507 = !DILocation(line: 7525, column: 5, scope: !9506)
!9508 = !DILocation(line: 7527, column: 8, scope: !9506)
!9509 = !DILocation(line: 7528, column: 5, scope: !9506)
!9510 = !DILocation(line: 7528, column: 8, scope: !9506)
!9511 = !DILocation(line: 7524, column: 12, scope: !9497)
!9512 = !DILocation(line: 7530, column: 61, scope: !9506)
!9513 = !DILocation(line: 7529, column: 5, scope: !9506)
!9514 = !DILocation(line: 7534, column: 3, scope: !9297)
!9515 = !DILocation(line: 7534, column: 23, scope: !9297)
!9516 = !DILocation(line: 7537, column: 7, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7537, column: 7)
!9518 = !DILocation(line: 7537, column: 29, scope: !9517)
!9519 = !DILocation(line: 7537, column: 7, scope: !9297)
!9520 = !DILocation(line: 7538, column: 5, scope: !9517)
!9521 = !DILocation(line: 7538, column: 25, scope: !9517)
!9522 = !DILocation(line: 7542, column: 3, scope: !9297)
!9523 = !DILocation(line: 7545, column: 7, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7545, column: 7)
!9525 = !DILocation(line: 7545, column: 24, scope: !9524)
!9526 = !DILocation(line: 7545, column: 21, scope: !9524)
!9527 = !DILocation(line: 7545, column: 7, scope: !9297)
!9528 = !DILocation(line: 7546, column: 30, scope: !9524)
!9529 = !DILocation(line: 7546, column: 5, scope: !9524)
!9530 = !DILocation(line: 7549, column: 7, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 7549, column: 7)
!9532 = !DILocation(line: 7549, column: 17, scope: !9531)
!9533 = !DILocation(line: 7549, column: 20, scope: !9531)
!9534 = !DILocation(line: 7549, column: 7, scope: !9297)
!9535 = !DILocation(line: 7551, column: 11, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 7551, column: 11)
!9537 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 7550, column: 5)
!9538 = !DILocation(line: 7552, column: 7, scope: !9536)
!9539 = !DILocation(line: 7552, column: 4, scope: !9536)
!9540 = !DILocation(line: 7551, column: 11, scope: !9537)
!9541 = !DILocation(line: 7553, column: 2, scope: !9536)
!9542 = !DILocation(line: 7555, column: 35, scope: !9537)
!9543 = !DILocation(line: 7555, column: 7, scope: !9537)
!9544 = !DILocation(line: 7557, column: 12, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 7557, column: 11)
!9546 = !DILocation(line: 7557, column: 11, scope: !9537)
!9547 = !DILocation(line: 7558, column: 2, scope: !9545)
!9548 = !DILocation(line: 7566, column: 37, scope: !9297)
!9549 = !DILocation(line: 7566, column: 27, scope: !9297)
!9550 = !DILocation(line: 7566, column: 25, scope: !9297)
!9551 = !DILocation(line: 7568, column: 3, scope: !9297)
!9552 = !DILocation(line: 7569, column: 3, scope: !9297)
!9553 = !DILocation(line: 7571, column: 13, scope: !9297)
!9554 = !DILocation(line: 7572, column: 13, scope: !9297)
!9555 = !DILocation(line: 7573, column: 3, scope: !9297)
!9556 = !DILocation(line: 7573, column: 29, scope: !9297)
!9557 = !DILocation(line: 7574, column: 28, scope: !9297)
!9558 = !DILocation(line: 7575, column: 3, scope: !9297)
!9559 = !DILocation(line: 7575, column: 39, scope: !9297)
!9560 = !DILocation(line: 7577, column: 3, scope: !9297)
!9561 = !DILocation(line: 7579, column: 3, scope: !9297)
!9562 = !DILocation(line: 7580, column: 1, scope: !9297)
!9563 = distinct !DISubprogram(name: "lookup_name_in_scope", scope: !3, file: !3, line: 3412, type: !9564, scopeLine: 3413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9566)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{!672, !672, !2077}
!9566 = !{!9567, !9568, !9569}
!9567 = !DILocalVariable(name: "name", arg: 1, scope: !9563, file: !3, line: 3412, type: !672)
!9568 = !DILocalVariable(name: "scope", arg: 2, scope: !9563, file: !3, line: 3412, type: !2077)
!9569 = !DILocalVariable(name: "b", scope: !9563, file: !3, line: 3414, type: !2061)
!9570 = !DILocation(line: 0, scope: !9563)
!9571 = !DILocation(line: 3416, column: 12, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3416, column: 3)
!9573 = !DILocation(line: 0, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 3417, column: 9)
!9575 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 3416, column: 3)
!9576 = !DILocation(line: 3416, column: 8, scope: !9572)
!9577 = !DILocation(line: 0, scope: !9572)
!9578 = !DILocation(line: 3416, column: 3, scope: !9572)
!9579 = !DILocation(line: 3417, column: 9, scope: !9574)
!9580 = !DILocation(line: 3417, column: 9, scope: !9575)
!9581 = !DILocation(line: 3418, column: 17, scope: !9574)
!9582 = !DILocation(line: 3418, column: 7, scope: !9574)
!9583 = !DILocation(line: 3416, column: 47, scope: !9575)
!9584 = !DILocation(line: 3416, column: 3, scope: !9575)
!9585 = distinct !{!9585, !9578, !9586}
!9586 = !DILocation(line: 3418, column: 17, scope: !9572)
!9587 = !DILocation(line: 3420, column: 1, scope: !9563)
!9588 = distinct !DISubprogram(name: "store_parm_decls_from", scope: !3, file: !3, line: 7926, type: !9589, scopeLine: 7927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9591)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{null, !1622}
!9591 = !{!9592}
!9592 = !DILocalVariable(name: "arg_info", arg: 1, scope: !9588, file: !3, line: 7926, type: !1622)
!9593 = !DILocation(line: 0, scope: !9588)
!9594 = !DILocation(line: 7928, column: 29, scope: !9588)
!9595 = !DILocation(line: 7929, column: 3, scope: !9588)
!9596 = !DILocation(line: 7930, column: 1, scope: !9588)
!9597 = distinct !DISubprogram(name: "store_parm_decls", scope: !3, file: !3, line: 7940, type: !2978, scopeLine: 7941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9598)
!9598 = !{!9599, !9600, !9601, !9602}
!9599 = !DILocalVariable(name: "fndecl", scope: !9597, file: !3, line: 7942, type: !672)
!9600 = !DILocalVariable(name: "proto", scope: !9597, file: !3, line: 7943, type: !619)
!9601 = !DILocalVariable(name: "arg_info", scope: !9597, file: !3, line: 7946, type: !1622)
!9602 = !DILocalVariable(name: "t", scope: !9603, file: !3, line: 7983, type: !672)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 7982, column: 3)
!9604 = !DILocation(line: 7942, column: 17, scope: !9597)
!9605 = !DILocation(line: 0, scope: !9597)
!9606 = !DILocation(line: 7946, column: 33, scope: !9597)
!9607 = !DILocation(line: 7947, column: 29, scope: !9597)
!9608 = !DILocation(line: 7954, column: 21, scope: !9597)
!9609 = !DILocation(line: 7954, column: 27, scope: !9597)
!9610 = !DILocation(line: 7956, column: 7, scope: !9597)
!9611 = !DILocation(line: 7957, column: 5, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 7956, column: 7)
!9613 = !DILocation(line: 7959, column: 5, scope: !9612)
!9614 = !DILocation(line: 7963, column: 25, scope: !9597)
!9615 = !DILocation(line: 7968, column: 38, scope: !9597)
!9616 = !DILocation(line: 7968, column: 3, scope: !9597)
!9617 = !DILocation(line: 7971, column: 3, scope: !9597)
!9618 = !DILocation(line: 7974, column: 30, scope: !9597)
!9619 = !DILocation(line: 7974, column: 3, scope: !9597)
!9620 = !DILocation(line: 7974, column: 28, scope: !9597)
!9621 = !DILocation(line: 7984, column: 24, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 7984, column: 5)
!9623 = !DILocation(line: 7984, column: 14, scope: !9622)
!9624 = !DILocation(line: 0, scope: !9603)
!9625 = !DILocation(line: 7984, column: 10, scope: !9622)
!9626 = !DILocation(line: 0, scope: !9622)
!9627 = !DILocation(line: 7984, column: 5, scope: !9622)
!9628 = !DILocation(line: 7985, column: 17, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 7984, column: 5)
!9630 = !DILocation(line: 7985, column: 7, scope: !9629)
!9631 = !DILocation(line: 7984, column: 55, scope: !9629)
!9632 = !DILocation(line: 7984, column: 5, scope: !9629)
!9633 = distinct !{!9633, !9627, !9634}
!9634 = !DILocation(line: 7985, column: 31, scope: !9622)
!9635 = !DILocation(line: 7992, column: 3, scope: !9597)
!9636 = !DILocation(line: 7992, column: 9, scope: !9597)
!9637 = !DILocation(line: 7992, column: 35, scope: !9597)
!9638 = !DILocation(line: 7993, column: 1, scope: !9597)
!9639 = distinct !DISubprogram(name: "store_parm_decls_newstyle", scope: !3, file: !3, line: 7587, type: !9640, scopeLine: 7588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9644)
!9640 = !DISubroutineType(types: !9641)
!9641 = !{null, !672, !9642}
!9642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9643, size: 64)
!9643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!9644 = !{!9645, !9646, !9647}
!9645 = !DILocalVariable(name: "fndecl", arg: 1, scope: !9639, file: !3, line: 7587, type: !672)
!9646 = !DILocalVariable(name: "arg_info", arg: 2, scope: !9639, file: !3, line: 7587, type: !9642)
!9647 = !DILocalVariable(name: "decl", scope: !9639, file: !3, line: 7589, type: !672)
!9648 = !DILocation(line: 0, scope: !9639)
!9649 = !DILocation(line: 7591, column: 7, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 7591, column: 7)
!9651 = !DILocation(line: 7591, column: 22, scope: !9650)
!9652 = !DILocation(line: 7591, column: 7, scope: !9639)
!9653 = !DILocation(line: 7593, column: 17, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 7592, column: 5)
!9655 = !DILocation(line: 7593, column: 7, scope: !9654)
!9656 = !DILocation(line: 7598, column: 7, scope: !9654)
!9657 = !DILocation(line: 7599, column: 7, scope: !9654)
!9658 = !DILocation(line: 7600, column: 5, scope: !9654)
!9659 = !DILocation(line: 7605, column: 13, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 7605, column: 12)
!9661 = !DILocation(line: 7605, column: 34, scope: !9660)
!9662 = !DILocation(line: 7605, column: 30, scope: !9660)
!9663 = !DILocation(line: 7606, column: 18, scope: !9660)
!9664 = !DILocation(line: 7606, column: 27, scope: !9660)
!9665 = !DILocation(line: 7606, column: 24, scope: !9660)
!9666 = !DILocation(line: 7605, column: 12, scope: !9650)
!9667 = !DILocation(line: 7607, column: 17, scope: !9660)
!9668 = !DILocation(line: 7607, column: 5, scope: !9660)
!9669 = !DILocation(line: 7612, column: 25, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 7612, column: 3)
!9671 = !DILocation(line: 7612, column: 8, scope: !9670)
!9672 = !DILocation(line: 0, scope: !9670)
!9673 = !DILocation(line: 7612, column: 3, scope: !9670)
!9674 = !DILocation(line: 7614, column: 29, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 7613, column: 5)
!9676 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 7612, column: 3)
!9677 = !DILocation(line: 7614, column: 7, scope: !9675)
!9678 = !DILocation(line: 7614, column: 27, scope: !9675)
!9679 = !DILocation(line: 7615, column: 11, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 7615, column: 11)
!9681 = !DILocation(line: 7615, column: 11, scope: !9675)
!9682 = !DILocation(line: 7617, column: 34, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 7616, column: 2)
!9684 = !DILocation(line: 7617, column: 4, scope: !9683)
!9685 = !DILocation(line: 7620, column: 9, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 7620, column: 8)
!9687 = !DILocation(line: 7620, column: 8, scope: !9683)
!9688 = !DILocation(line: 7621, column: 6, scope: !9686)
!9689 = !DILocation(line: 7624, column: 12, scope: !9680)
!9690 = !DILocation(line: 7624, column: 2, scope: !9680)
!9691 = !DILocation(line: 7612, column: 45, scope: !9676)
!9692 = !DILocation(line: 7612, column: 3, scope: !9676)
!9693 = distinct !{!9693, !9673, !9694}
!9694 = !DILocation(line: 7625, column: 5, scope: !9670)
!9695 = !DILocation(line: 7628, column: 39, scope: !9639)
!9696 = !DILocation(line: 7628, column: 3, scope: !9639)
!9697 = !DILocation(line: 7628, column: 27, scope: !9639)
!9698 = !DILocation(line: 7631, column: 25, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 7631, column: 3)
!9700 = !DILocation(line: 7631, column: 8, scope: !9699)
!9701 = !DILocation(line: 0, scope: !9699)
!9702 = !DILocation(line: 7631, column: 3, scope: !9699)
!9703 = !DILocation(line: 7633, column: 29, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 7632, column: 5)
!9705 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 7631, column: 3)
!9706 = !DILocation(line: 7633, column: 7, scope: !9704)
!9707 = !DILocation(line: 7633, column: 27, scope: !9704)
!9708 = !DILocation(line: 7634, column: 11, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 7634, column: 11)
!9710 = !DILocation(line: 7634, column: 11, scope: !9704)
!9711 = !DILocation(line: 7635, column: 32, scope: !9709)
!9712 = !DILocation(line: 7637, column: 20, scope: !9709)
!9713 = !DILocation(line: 7637, column: 37, scope: !9709)
!9714 = !DILocation(line: 7637, column: 19, scope: !9709)
!9715 = !DILocation(line: 7635, column: 2, scope: !9709)
!9716 = !DILocation(line: 7631, column: 46, scope: !9705)
!9717 = !DILocation(line: 7631, column: 3, scope: !9705)
!9718 = distinct !{!9718, !9702, !9719}
!9719 = !DILocation(line: 7639, column: 5, scope: !9699)
!9720 = !DILocation(line: 7642, column: 25, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 7642, column: 3)
!9722 = !DILocation(line: 7642, column: 8, scope: !9721)
!9723 = !DILocation(line: 0, scope: !9721)
!9724 = !DILocation(line: 7642, column: 3, scope: !9721)
!9725 = !DILocation(line: 7643, column: 9, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 7643, column: 9)
!9727 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 7642, column: 3)
!9728 = !DILocation(line: 7643, column: 9, scope: !9727)
!9729 = !DILocation(line: 7644, column: 34, scope: !9726)
!9730 = !DILocation(line: 7644, column: 53, scope: !9726)
!9731 = !DILocation(line: 7644, column: 7, scope: !9726)
!9732 = !DILocation(line: 7642, column: 44, scope: !9727)
!9733 = !DILocation(line: 7642, column: 3, scope: !9727)
!9734 = distinct !{!9734, !9724, !9735}
!9735 = !DILocation(line: 7645, column: 61, scope: !9721)
!9736 = !DILocation(line: 7646, column: 1, scope: !9639)
!9737 = distinct !DISubprogram(name: "store_parm_decls_oldstyle", scope: !3, file: !3, line: 7652, type: !9640, scopeLine: 7653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9738)
!9738 = !{!9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9750, !9752, !9753}
!9739 = !DILocalVariable(name: "fndecl", arg: 1, scope: !9737, file: !3, line: 7652, type: !672)
!9740 = !DILocalVariable(name: "arg_info", arg: 2, scope: !9737, file: !3, line: 7652, type: !9642)
!9741 = !DILocalVariable(name: "b", scope: !9737, file: !3, line: 7654, type: !2061)
!9742 = !DILocalVariable(name: "parm", scope: !9737, file: !3, line: 7655, type: !672)
!9743 = !DILocalVariable(name: "decl", scope: !9737, file: !3, line: 7655, type: !672)
!9744 = !DILocalVariable(name: "last", scope: !9737, file: !3, line: 7655, type: !672)
!9745 = !DILocalVariable(name: "parmids", scope: !9737, file: !3, line: 7656, type: !672)
!9746 = !DILocalVariable(name: "seen_args", scope: !9737, file: !3, line: 7657, type: !8843)
!9747 = !DILocalVariable(name: "type", scope: !9748, file: !3, line: 7797, type: !672)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 7796, column: 5)
!9749 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7795, column: 7)
!9750 = !DILocalVariable(name: "actual", scope: !9751, file: !3, line: 7891, type: !672)
!9751 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 7890, column: 5)
!9752 = !DILocalVariable(name: "last", scope: !9751, file: !3, line: 7891, type: !672)
!9753 = !DILocalVariable(name: "type", scope: !9751, file: !3, line: 7891, type: !672)
!9754 = !DILocation(line: 0, scope: !9737)
!9755 = !DILocation(line: 7656, column: 28, scope: !9737)
!9756 = !DILocation(line: 7657, column: 37, scope: !9737)
!9757 = !DILocation(line: 7659, column: 8, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7659, column: 7)
!9759 = !DILocation(line: 7659, column: 7, scope: !9737)
!9760 = !DILocation(line: 7660, column: 17, scope: !9758)
!9761 = !DILocation(line: 7660, column: 5, scope: !9758)
!9762 = !DILocation(line: 0, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 7706, column: 2)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 7676, column: 11)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 7666, column: 5)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 7665, column: 3)
!9767 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7665, column: 3)
!9768 = !DILocation(line: 7665, column: 8, scope: !9767)
!9769 = !DILocation(line: 0, scope: !9767)
!9770 = !DILocation(line: 7665, column: 3, scope: !9767)
!9771 = !DILocation(line: 7667, column: 11, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 7667, column: 11)
!9773 = !DILocation(line: 7667, column: 29, scope: !9772)
!9774 = !DILocation(line: 7667, column: 11, scope: !9765)
!9775 = !DILocation(line: 7669, column: 14, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 7668, column: 2)
!9777 = !DILocation(line: 7669, column: 4, scope: !9776)
!9778 = !DILocation(line: 7671, column: 4, scope: !9776)
!9779 = !DILocation(line: 7671, column: 24, scope: !9776)
!9780 = !DILocation(line: 7672, column: 4, scope: !9776)
!9781 = !DILocation(line: 7675, column: 11, scope: !9765)
!9782 = !DILocation(line: 7676, column: 11, scope: !9764)
!9783 = !DILocation(line: 7676, column: 13, scope: !9764)
!9784 = !DILocation(line: 7676, column: 16, scope: !9764)
!9785 = !DILocation(line: 7676, column: 11, scope: !9765)
!9786 = !DILocation(line: 7678, column: 14, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 7677, column: 2)
!9788 = !DILocation(line: 7680, column: 8, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 7680, column: 8)
!9790 = !DILocation(line: 7680, column: 25, scope: !9789)
!9791 = !DILocation(line: 7680, column: 8, scope: !9787)
!9792 = !DILocation(line: 7681, column: 16, scope: !9789)
!9793 = !DILocation(line: 7681, column: 6, scope: !9789)
!9794 = !DILocation(line: 7685, column: 46, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 7685, column: 13)
!9796 = !DILocation(line: 7685, column: 13, scope: !9795)
!9797 = !DILocation(line: 7685, column: 13, scope: !9789)
!9798 = !DILocation(line: 7687, column: 18, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 7686, column: 6)
!9800 = !DILocation(line: 7687, column: 8, scope: !9799)
!9801 = !DILocation(line: 7689, column: 8, scope: !9799)
!9802 = !DILocation(line: 7689, column: 28, scope: !9799)
!9803 = !DILocation(line: 7690, column: 8, scope: !9799)
!9804 = !DILocation(line: 7694, column: 13, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 7694, column: 13)
!9806 = !DILocation(line: 7694, column: 13, scope: !9795)
!9807 = !DILocation(line: 7696, column: 18, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 7695, column: 6)
!9809 = !DILocation(line: 7696, column: 8, scope: !9808)
!9810 = !DILocation(line: 7698, column: 27, scope: !9808)
!9811 = !DILocation(line: 7698, column: 25, scope: !9808)
!9812 = !DILocation(line: 7699, column: 31, scope: !9808)
!9813 = !DILocation(line: 7699, column: 8, scope: !9808)
!9814 = !DILocation(line: 7699, column: 29, scope: !9808)
!9815 = !DILocation(line: 7700, column: 8, scope: !9808)
!9816 = !DILocation(line: 7701, column: 6, scope: !9808)
!9817 = !DILocation(line: 7702, column: 4, scope: !9787)
!9818 = !DILocation(line: 7703, column: 2, scope: !9787)
!9819 = !DILocation(line: 7718, column: 11, scope: !9763)
!9820 = !DILocation(line: 7720, column: 27, scope: !9763)
!9821 = !DILocation(line: 7720, column: 4, scope: !9763)
!9822 = !DILocation(line: 7720, column: 25, scope: !9763)
!9823 = !DILocation(line: 7721, column: 4, scope: !9763)
!9824 = !DILocation(line: 7722, column: 4, scope: !9763)
!9825 = !DILocation(line: 7724, column: 8, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 7724, column: 8)
!9827 = !DILocation(line: 0, scope: !9826)
!9828 = !DILocation(line: 7724, column: 8, scope: !9763)
!9829 = !DILocation(line: 7725, column: 6, scope: !9826)
!9830 = !DILocation(line: 7728, column: 6, scope: !9826)
!9831 = !DILocation(line: 0, scope: !9764)
!9832 = !DILocation(line: 7733, column: 7, scope: !9765)
!9833 = !DILocation(line: 7733, column: 27, scope: !9765)
!9834 = !DILocation(line: 7734, column: 38, scope: !9765)
!9835 = !DILocation(line: 7734, column: 7, scope: !9765)
!9836 = !DILocation(line: 7735, column: 5, scope: !9765)
!9837 = !DILocation(line: 7665, column: 37, scope: !9766)
!9838 = !DILocation(line: 7665, column: 3, scope: !9766)
!9839 = distinct !{!9839, !9770, !9840}
!9840 = !DILocation(line: 7735, column: 5, scope: !9767)
!9841 = !DILocation(line: 7740, column: 12, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7740, column: 3)
!9843 = !DILocation(line: 7740, column: 27, scope: !9842)
!9844 = !DILocation(line: 7740, column: 8, scope: !9842)
!9845 = !DILocation(line: 7656, column: 8, scope: !9737)
!9846 = !DILocation(line: 0, scope: !9842)
!9847 = !DILocation(line: 7740, column: 3, scope: !9842)
!9848 = !DILocation(line: 7742, column: 17, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !3, line: 7741, column: 5)
!9850 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 7740, column: 3)
!9851 = !DILocation(line: 7743, column: 11, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 7743, column: 11)
!9853 = !DILocation(line: 7743, column: 28, scope: !9852)
!9854 = !DILocation(line: 7743, column: 11, scope: !9849)
!9855 = !DILocation(line: 7746, column: 11, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 7746, column: 11)
!9857 = !DILocation(line: 7746, column: 31, scope: !9856)
!9858 = !DILocation(line: 7746, column: 28, scope: !9856)
!9859 = !DILocation(line: 7747, column: 4, scope: !9856)
!9860 = !DILocation(line: 7747, column: 8, scope: !9856)
!9861 = !DILocation(line: 7746, column: 11, scope: !9849)
!9862 = !DILocation(line: 7749, column: 14, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 7748, column: 2)
!9864 = !DILocation(line: 7749, column: 4, scope: !9863)
!9865 = !DILocation(line: 7751, column: 23, scope: !9863)
!9866 = !DILocation(line: 7751, column: 21, scope: !9863)
!9867 = !DILocation(line: 7752, column: 2, scope: !9863)
!9868 = !DILocation(line: 7754, column: 45, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 7754, column: 11)
!9870 = !DILocation(line: 7754, column: 12, scope: !9869)
!9871 = !DILocation(line: 7754, column: 11, scope: !9849)
!9872 = !DILocation(line: 7756, column: 14, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !3, line: 7755, column: 2)
!9874 = !DILocation(line: 7756, column: 4, scope: !9873)
!9875 = !DILocation(line: 7763, column: 32, scope: !9873)
!9876 = !DILocation(line: 7763, column: 14, scope: !9873)
!9877 = !DILocation(line: 7764, column: 2, scope: !9873)
!9878 = !DILocation(line: 7740, column: 47, scope: !9850)
!9879 = !DILocation(line: 7740, column: 3, scope: !9850)
!9880 = distinct !{!9880, !9847, !9881}
!9881 = !DILocation(line: 7765, column: 5, scope: !9842)
!9882 = !DILocation(line: 7770, column: 3, scope: !9737)
!9883 = !DILocation(line: 7770, column: 27, scope: !9737)
!9884 = !DILocation(line: 7772, column: 8, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7772, column: 3)
!9886 = !DILocation(line: 0, scope: !9885)
!9887 = !DILocation(line: 7772, column: 3, scope: !9885)
!9888 = !DILocation(line: 7773, column: 9, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 7773, column: 9)
!9890 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 7772, column: 3)
!9891 = !DILocation(line: 7773, column: 9, scope: !9890)
!9892 = !DILocation(line: 7772, column: 37, scope: !9890)
!9893 = !DILocation(line: 7772, column: 3, scope: !9890)
!9894 = distinct !{!9894, !9887, !9895}
!9895 = !DILocation(line: 7774, column: 7, scope: !9885)
!9896 = !DILocation(line: 7775, column: 7, scope: !9737)
!9897 = !DILocation(line: 7778, column: 31, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 7776, column: 5)
!9899 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 7775, column: 7)
!9900 = !DILocation(line: 7780, column: 12, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 7780, column: 7)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 0, scope: !9901)
!9904 = !DILocation(line: 7780, column: 7, scope: !9901)
!9905 = !DILocation(line: 7781, column: 6, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 7781, column: 6)
!9907 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 7780, column: 7)
!9908 = !DILocation(line: 7781, column: 6, scope: !9907)
!9909 = !DILocation(line: 7783, column: 6, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 7782, column: 4)
!9911 = !DILocation(line: 7783, column: 24, scope: !9910)
!9912 = !DILocation(line: 7784, column: 13, scope: !9910)
!9913 = !DILocation(line: 7785, column: 4, scope: !9910)
!9914 = !DILocation(line: 7780, column: 7, scope: !9907)
!9915 = distinct !{!9915, !9904, !9916}
!9916 = !DILocation(line: 7785, column: 4, scope: !9901)
!9917 = !DILocation(line: 7786, column: 7, scope: !9898)
!9918 = !DILocation(line: 7786, column: 25, scope: !9898)
!9919 = !DILocation(line: 7787, column: 5, scope: !9898)
!9920 = !DILocation(line: 7789, column: 3, scope: !9737)
!9921 = !DILocation(line: 7795, column: 7, scope: !9749)
!9922 = !DILocation(line: 0, scope: !9749)
!9923 = !DILocation(line: 7795, column: 7, scope: !9737)
!9924 = !DILocation(line: 7893, column: 7, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 7893, column: 7)
!9926 = !DILocation(line: 7798, column: 12, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 7798, column: 7)
!9928 = !DILocation(line: 0, scope: !9927)
!9929 = !DILocation(line: 0, scope: !9748)
!9930 = !DILocation(line: 7800, column: 5, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 7798, column: 7)
!9932 = !DILocation(line: 7800, column: 10, scope: !9931)
!9933 = !DILocation(line: 7800, column: 14, scope: !9931)
!9934 = !DILocation(line: 7800, column: 19, scope: !9931)
!9935 = !DILocation(line: 7800, column: 22, scope: !9931)
!9936 = !DILocation(line: 7800, column: 43, scope: !9931)
!9937 = !DILocation(line: 7800, column: 40, scope: !9931)
!9938 = !DILocation(line: 7801, column: 20, scope: !9931)
!9939 = !DILocation(line: 7801, column: 24, scope: !9931)
!9940 = !DILocation(line: 7801, column: 65, scope: !9931)
!9941 = !DILocation(line: 7801, column: 62, scope: !9931)
!9942 = !DILocation(line: 7798, column: 7, scope: !9927)
!9943 = !DILocation(line: 7804, column: 26, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 7804, column: 8)
!9945 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 7803, column: 2)
!9946 = !DILocation(line: 7804, column: 18, scope: !9944)
!9947 = !DILocation(line: 7805, column: 11, scope: !9944)
!9948 = !DILocation(line: 7805, column: 52, scope: !9944)
!9949 = !DILocation(line: 7805, column: 49, scope: !9944)
!9950 = !DILocation(line: 7804, column: 8, scope: !9945)
!9951 = !DILocation(line: 7807, column: 12, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 7807, column: 12)
!9953 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 7806, column: 6)
!9954 = !DILocation(line: 7807, column: 12, scope: !9953)
!9955 = !DILocation(line: 7808, column: 15, scope: !9952)
!9956 = !DILocation(line: 7808, column: 3, scope: !9952)
!9957 = !DILocation(line: 7819, column: 15, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 7812, column: 3)
!9959 = !DILocation(line: 7819, column: 5, scope: !9958)
!9960 = !DILocation(line: 7822, column: 15, scope: !9958)
!9961 = !DILocation(line: 7822, column: 5, scope: !9958)
!9962 = !DILocation(line: 7830, column: 8, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 7830, column: 8)
!9964 = !DILocation(line: 7830, column: 28, scope: !9963)
!9965 = !DILocation(line: 7830, column: 25, scope: !9963)
!9966 = !DILocation(line: 7831, column: 8, scope: !9963)
!9967 = !DILocation(line: 7831, column: 11, scope: !9963)
!9968 = !DILocation(line: 7831, column: 28, scope: !9963)
!9969 = !DILocation(line: 7832, column: 8, scope: !9963)
!9970 = !DILocation(line: 7832, column: 23, scope: !9963)
!9971 = !DILocation(line: 7832, column: 12, scope: !9963)
!9972 = !DILocation(line: 7830, column: 8, scope: !9945)
!9973 = !DILocation(line: 7835, column: 12, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 7835, column: 12)
!9975 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 7834, column: 6)
!9976 = !DILocation(line: 7836, column: 8, scope: !9974)
!9977 = !DILocation(line: 7836, column: 5, scope: !9974)
!9978 = !DILocation(line: 7835, column: 12, scope: !9975)
!9979 = !DILocation(line: 7843, column: 26, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 7837, column: 3)
!9981 = !DILocation(line: 7845, column: 23, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 7845, column: 9)
!9983 = !DILocation(line: 7845, column: 43, scope: !9982)
!9984 = !DILocation(line: 7845, column: 9, scope: !9982)
!9985 = !DILocation(line: 7846, column: 9, scope: !9982)
!9986 = !DILocation(line: 7846, column: 12, scope: !9982)
!9987 = !DILocation(line: 7847, column: 9, scope: !9982)
!9988 = !DILocation(line: 7847, column: 12, scope: !9982)
!9989 = !DILocation(line: 7848, column: 11, scope: !9982)
!9990 = !DILocation(line: 7848, column: 9, scope: !9982)
!9991 = !DILocation(line: 7845, column: 9, scope: !9980)
!9992 = !DILocation(line: 7849, column: 28, scope: !9982)
!9993 = !DILocation(line: 7849, column: 7, scope: !9982)
!9994 = !DILocation(line: 7855, column: 9, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 7855, column: 9)
!9996 = !DILocation(line: 0, scope: !9995)
!9997 = !DILocation(line: 7855, column: 9, scope: !9980)
!9998 = !DILocation(line: 7856, column: 7, scope: !9995)
!9999 = !DILocation(line: 7861, column: 9, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 7860, column: 7)
!10001 = !DILocation(line: 7864, column: 18, scope: !10000)
!10002 = !DILocation(line: 7864, column: 9, scope: !10000)
!10003 = !DILocation(line: 7870, column: 9, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 7870, column: 9)
!10005 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 7869, column: 3)
!10006 = !DILocation(line: 0, scope: !10004)
!10007 = !DILocation(line: 7870, column: 9, scope: !10005)
!10008 = !DILocation(line: 7871, column: 7, scope: !10004)
!10009 = !DILocation(line: 7876, column: 9, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 7875, column: 7)
!10011 = !DILocation(line: 7878, column: 19, scope: !10010)
!10012 = !DILocation(line: 7878, column: 9, scope: !10010)
!10013 = !DILocation(line: 7802, column: 12, scope: !9931)
!10014 = !DILocation(line: 7802, column: 38, scope: !9931)
!10015 = !DILocation(line: 7798, column: 7, scope: !9931)
!10016 = distinct !{!10016, !9942, !10017}
!10017 = !DILocation(line: 7883, column: 2, scope: !9927)
!10018 = !DILocation(line: 7884, column: 7, scope: !9748)
!10019 = !DILocation(line: 7884, column: 50, scope: !9748)
!10020 = !DILocation(line: 7885, column: 5, scope: !9748)
!10021 = !DILocation(line: 7891, column: 12, scope: !9751)
!10022 = !DILocation(line: 0, scope: !9925)
!10023 = !DILocation(line: 0, scope: !9751)
!10024 = !DILocation(line: 7895, column: 11, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 7894, column: 2)
!10026 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 7893, column: 7)
!10027 = !DILocation(line: 7896, column: 8, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 7896, column: 8)
!10029 = !DILocation(line: 7896, column: 8, scope: !10025)
!10030 = !DILocation(line: 7897, column: 6, scope: !10028)
!10031 = !DILocation(line: 7897, column: 24, scope: !10028)
!10032 = !DILocation(line: 7893, column: 57, scope: !10026)
!10033 = !DILocation(line: 7893, column: 7, scope: !10026)
!10034 = distinct !{!10034, !9924, !10035}
!10035 = !DILocation(line: 7901, column: 2, scope: !9925)
!10036 = !DILocation(line: 7902, column: 14, scope: !9751)
!10037 = !DILocation(line: 7903, column: 11, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 7903, column: 11)
!10039 = !DILocation(line: 7903, column: 11, scope: !9751)
!10040 = !DILocation(line: 7904, column: 2, scope: !10038)
!10041 = !DILocation(line: 7904, column: 20, scope: !10038)
!10042 = !DILocation(line: 7916, column: 53, scope: !9751)
!10043 = !DILocation(line: 7916, column: 28, scope: !9751)
!10044 = !DILocation(line: 7916, column: 26, scope: !9751)
!10045 = !DILocation(line: 7918, column: 7, scope: !9751)
!10046 = !DILocation(line: 7918, column: 50, scope: !9751)
!10047 = !DILocation(line: 7920, column: 1, scope: !9737)
!10048 = distinct !DISubprogram(name: "finish_function", scope: !3, file: !3, line: 8003, type: !2978, scopeLine: 8004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10049)
!10049 = !{!10050, !10051, !10054}
!10050 = !DILocalVariable(name: "fndecl", scope: !10048, file: !3, line: 8005, type: !672)
!10051 = !DILocalVariable(name: "args", scope: !10052, file: !3, line: 8010, type: !672)
!10052 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 8009, column: 5)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8007, column: 7)
!10054 = !DILocalVariable(name: "type", scope: !10055, file: !3, line: 8013, type: !672)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 8012, column: 2)
!10056 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 8011, column: 7)
!10057 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 8011, column: 7)
!10058 = !DILocation(line: 8005, column: 17, scope: !10048)
!10059 = !DILocation(line: 0, scope: !10048)
!10060 = !DILocation(line: 8007, column: 7, scope: !10053)
!10061 = !DILocation(line: 8007, column: 26, scope: !10053)
!10062 = !DILocation(line: 8008, column: 7, scope: !10053)
!10063 = !DILocation(line: 8008, column: 24, scope: !10053)
!10064 = !DILocation(line: 8008, column: 44, scope: !10053)
!10065 = !DILocation(line: 8008, column: 10, scope: !10053)
!10066 = !DILocation(line: 8007, column: 7, scope: !10048)
!10067 = !DILocation(line: 8010, column: 19, scope: !10052)
!10068 = !DILocation(line: 8011, column: 7, scope: !10052)
!10069 = !DILocation(line: 0, scope: !10052)
!10070 = !DILocation(line: 8011, column: 7, scope: !10057)
!10071 = !DILocation(line: 8013, column: 16, scope: !10055)
!10072 = !DILocation(line: 0, scope: !10055)
!10073 = !DILocation(line: 8014, column: 8, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 8014, column: 8)
!10075 = !DILocation(line: 8015, column: 8, scope: !10074)
!10076 = !DILocation(line: 8015, column: 11, scope: !10074)
!10077 = !DILocation(line: 8015, column: 35, scope: !10074)
!10078 = !DILocation(line: 8015, column: 33, scope: !10074)
!10079 = !DILocation(line: 8014, column: 8, scope: !10055)
!10080 = !DILocation(line: 8016, column: 6, scope: !10074)
!10081 = !DILocation(line: 8016, column: 27, scope: !10074)
!10082 = !DILocation(line: 8011, column: 27, scope: !10056)
!10083 = !DILocation(line: 8011, column: 7, scope: !10056)
!10084 = distinct !{!10084, !10070, !10085}
!10085 = !DILocation(line: 8017, column: 2, scope: !10057)
!10086 = !DILocation(line: 8020, column: 7, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8020, column: 7)
!10088 = !DILocation(line: 8020, column: 29, scope: !10087)
!10089 = !DILocation(line: 8020, column: 57, scope: !10087)
!10090 = !DILocation(line: 8020, column: 54, scope: !10087)
!10091 = !DILocation(line: 8020, column: 7, scope: !10048)
!10092 = !DILocation(line: 8021, column: 5, scope: !10087)
!10093 = !DILocation(line: 8021, column: 48, scope: !10087)
!10094 = !DILocation(line: 8025, column: 7, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8025, column: 7)
!10096 = !DILocation(line: 8025, column: 28, scope: !10095)
!10097 = !DILocation(line: 8025, column: 55, scope: !10095)
!10098 = !DILocation(line: 8025, column: 52, scope: !10095)
!10099 = !DILocation(line: 8025, column: 7, scope: !10048)
!10100 = !DILocation(line: 8026, column: 5, scope: !10095)
!10101 = !DILocation(line: 8026, column: 41, scope: !10095)
!10102 = !DILocation(line: 8028, column: 7, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8028, column: 7)
!10104 = !DILocation(line: 8028, column: 43, scope: !10103)
!10105 = !DILocation(line: 8028, column: 40, scope: !10103)
!10106 = !DILocation(line: 8029, column: 10, scope: !10103)
!10107 = !DILocation(line: 8030, column: 10, scope: !10103)
!10108 = !DILocation(line: 8030, column: 7, scope: !10103)
!10109 = !DILocation(line: 8030, column: 31, scope: !10103)
!10110 = !DILocation(line: 8030, column: 28, scope: !10103)
!10111 = !DILocation(line: 8038, column: 43, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 8031, column: 5)
!10113 = !DILocation(line: 8038, column: 7, scope: !10112)
!10114 = !DILocation(line: 8039, column: 5, scope: !10112)
!10115 = !DILocation(line: 8042, column: 45, scope: !10048)
!10116 = !DILocation(line: 8042, column: 30, scope: !10048)
!10117 = !DILocation(line: 8042, column: 28, scope: !10048)
!10118 = !DILocation(line: 8044, column: 3, scope: !10048)
!10119 = !DILocation(line: 8047, column: 7, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8047, column: 7)
!10121 = !DILocation(line: 8048, column: 7, scope: !10120)
!10122 = !DILocation(line: 8048, column: 10, scope: !10120)
!10123 = !DILocation(line: 8048, column: 53, scope: !10120)
!10124 = !DILocation(line: 8049, column: 11, scope: !10120)
!10125 = !DILocation(line: 8049, column: 46, scope: !10120)
!10126 = !DILocation(line: 8049, column: 7, scope: !10120)
!10127 = !DILocation(line: 8051, column: 11, scope: !10120)
!10128 = !DILocation(line: 8053, column: 11, scope: !10120)
!10129 = !DILocation(line: 8055, column: 7, scope: !10120)
!10130 = !DILocation(line: 8055, column: 11, scope: !10120)
!10131 = !DILocation(line: 8057, column: 7, scope: !10120)
!10132 = !DILocation(line: 8057, column: 11, scope: !10120)
!10133 = !DILocation(line: 8060, column: 7, scope: !10120)
!10134 = !DILocation(line: 8060, column: 11, scope: !10120)
!10135 = !DILocation(line: 8047, column: 7, scope: !10048)
!10136 = !DILocation(line: 8062, column: 7, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 8061, column: 5)
!10138 = !DILocation(line: 8064, column: 32, scope: !10137)
!10139 = !DILocation(line: 8065, column: 5, scope: !10137)
!10140 = !DILocation(line: 8069, column: 30, scope: !10048)
!10141 = !DILocation(line: 8069, column: 3, scope: !10048)
!10142 = !DILocation(line: 8069, column: 9, scope: !10048)
!10143 = !DILocation(line: 8069, column: 28, scope: !10048)
!10144 = !DILocation(line: 8072, column: 3, scope: !10048)
!10145 = !DILocation(line: 8075, column: 7, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8075, column: 7)
!10147 = !DILocation(line: 8076, column: 7, scope: !10146)
!10148 = !DILocation(line: 8076, column: 10, scope: !10146)
!10149 = !DILocation(line: 8075, column: 7, scope: !10048)
!10150 = !DILocation(line: 8077, column: 43, scope: !10146)
!10151 = !DILocation(line: 8077, column: 5, scope: !10146)
!10152 = !DILocation(line: 8083, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8083, column: 7)
!10154 = !DILocation(line: 8083, column: 29, scope: !10153)
!10155 = !DILocation(line: 8083, column: 57, scope: !10153)
!10156 = !DILocation(line: 8083, column: 54, scope: !10153)
!10157 = !DILocation(line: 8084, column: 11, scope: !10153)
!10158 = !DILocation(line: 8084, column: 7, scope: !10153)
!10159 = !DILocation(line: 8086, column: 12, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 8086, column: 11)
!10161 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 8085, column: 5)
!10162 = !DILocation(line: 8086, column: 11, scope: !10161)
!10163 = !DILocation(line: 8088, column: 52, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 8087, column: 2)
!10165 = !DILocation(line: 8088, column: 4, scope: !10164)
!10166 = !DILocation(line: 8089, column: 4, scope: !10164)
!10167 = !DILocation(line: 8093, column: 8, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 8093, column: 8)
!10169 = !DILocation(line: 8093, column: 8, scope: !10164)
!10170 = !DILocation(line: 8095, column: 8, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 8094, column: 6)
!10172 = !DILocation(line: 8096, column: 8, scope: !10171)
!10173 = !DILocation(line: 8098, column: 4, scope: !10164)
!10174 = !DILocation(line: 8099, column: 2, scope: !10164)
!10175 = !DILocation(line: 8105, column: 11, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 8101, column: 2)
!10177 = !DILocation(line: 8109, column: 8, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 8109, column: 7)
!10179 = !DILocation(line: 8109, column: 7, scope: !10048)
!10180 = !DILocation(line: 8110, column: 27, scope: !10178)
!10181 = !DILocation(line: 8110, column: 5, scope: !10178)
!10182 = !DILocation(line: 8115, column: 3, scope: !10048)
!10183 = !DILocation(line: 8116, column: 25, scope: !10048)
!10184 = !DILocation(line: 8117, column: 1, scope: !10048)
!10185 = !DILocation(line: 0, scope: !2262)
!10186 = !DILocation(line: 8130, column: 8, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !2262, file: !3, line: 8130, column: 7)
!10188 = !DILocation(line: 8130, column: 7, scope: !2262)
!10189 = !DILocation(line: 8136, column: 7, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 8131, column: 5)
!10191 = !DILocation(line: 8138, column: 11, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 8138, column: 11)
!10193 = !DILocation(line: 8138, column: 11, scope: !10190)
!10194 = !DILocation(line: 8140, column: 4, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 8139, column: 2)
!10196 = !DILocation(line: 8142, column: 9, scope: !10195)
!10197 = !DILocation(line: 8143, column: 2, scope: !10195)
!10198 = !DILocation(line: 8160, column: 12, scope: !2273)
!10199 = !DILocation(line: 8160, column: 27, scope: !2273)
!10200 = !DILocation(line: 8160, column: 8, scope: !2273)
!10201 = !DILocation(line: 0, scope: !2273)
!10202 = !DILocation(line: 8160, column: 3, scope: !2273)
!10203 = !DILocation(line: 8162, column: 20, scope: !2271)
!10204 = !DILocation(line: 0, scope: !2271)
!10205 = !DILocation(line: 8163, column: 22, scope: !2271)
!10206 = !DILocation(line: 8165, column: 12, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !2271, file: !3, line: 8165, column: 11)
!10208 = !DILocation(line: 8165, column: 11, scope: !2271)
!10209 = !DILocation(line: 8168, column: 15, scope: !2271)
!10210 = !DILocation(line: 8168, column: 7, scope: !2271)
!10211 = !DILocation(line: 8172, column: 28, scope: !2276)
!10212 = !DILocation(line: 0, scope: !2276)
!10213 = !DILocation(line: 8173, column: 10, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 8173, column: 10)
!10215 = !DILocation(line: 8173, column: 10, scope: !2276)
!10216 = !DILocation(line: 8174, column: 8, scope: !10214)
!10217 = !DILocation(line: 8177, column: 15, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 8177, column: 15)
!10219 = !DILocation(line: 8177, column: 15, scope: !10214)
!10220 = !DILocation(line: 8178, column: 8, scope: !10218)
!10221 = !DILocation(line: 8185, column: 4, scope: !2277)
!10222 = !DILocation(line: 8188, column: 4, scope: !2277)
!10223 = !DILocation(line: 8190, column: 4, scope: !2277)
!10224 = !DILocation(line: 8193, column: 4, scope: !2277)
!10225 = !DILocation(line: 8195, column: 4, scope: !2277)
!10226 = !DILocation(line: 8197, column: 4, scope: !2277)
!10227 = !DILocation(line: 8199, column: 4, scope: !2277)
!10228 = !DILocation(line: 8201, column: 2, scope: !2277)
!10229 = !DILocation(line: 8203, column: 14, scope: !2271)
!10230 = !DILocation(line: 8205, column: 5, scope: !2272)
!10231 = !DILocation(line: 8160, column: 47, scope: !2272)
!10232 = !DILocation(line: 8160, column: 3, scope: !2272)
!10233 = distinct !{!10233, !10202, !10234}
!10234 = !DILocation(line: 8205, column: 5, scope: !2273)
!10235 = !DILocation(line: 8207, column: 18, scope: !2262)
!10236 = !DILocation(line: 8207, column: 10, scope: !2262)
!10237 = !DILocation(line: 8207, column: 3, scope: !2262)
!10238 = !DILocation(line: 8208, column: 1, scope: !2262)
!10239 = distinct !DISubprogram(name: "c_push_function_context", scope: !3, file: !3, line: 8214, type: !2978, scopeLine: 8215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10240)
!10240 = !{!10241}
!10241 = !DILocalVariable(name: "p", scope: !10239, file: !3, line: 8216, type: !1605)
!10242 = !DILocation(line: 8217, column: 7, scope: !10239)
!10243 = !DILocation(line: 0, scope: !10239)
!10244 = !DILocation(line: 8218, column: 3, scope: !10239)
!10245 = !DILocation(line: 8218, column: 9, scope: !10239)
!10246 = !DILocation(line: 8218, column: 18, scope: !10239)
!10247 = !DILocation(line: 8220, column: 25, scope: !10239)
!10248 = !DILocation(line: 8221, column: 22, scope: !10239)
!10249 = !DILocation(line: 8221, column: 6, scope: !10239)
!10250 = !DILocation(line: 8221, column: 20, scope: !10239)
!10251 = !DILocation(line: 8222, column: 21, scope: !10239)
!10252 = !DILocation(line: 8222, column: 6, scope: !10239)
!10253 = !DILocation(line: 8222, column: 19, scope: !10239)
!10254 = !DILocation(line: 8223, column: 23, scope: !10239)
!10255 = !DILocation(line: 8223, column: 6, scope: !10239)
!10256 = !DILocation(line: 8223, column: 21, scope: !10239)
!10257 = !DILocation(line: 8224, column: 17, scope: !10239)
!10258 = !DILocation(line: 8224, column: 6, scope: !10239)
!10259 = !DILocation(line: 8224, column: 15, scope: !10239)
!10260 = !DILocation(line: 8225, column: 22, scope: !10239)
!10261 = !DILocation(line: 8225, column: 6, scope: !10239)
!10262 = !DILocation(line: 8225, column: 20, scope: !10239)
!10263 = !DILocation(line: 8226, column: 21, scope: !10239)
!10264 = !DILocation(line: 8226, column: 6, scope: !10239)
!10265 = !DILocation(line: 8226, column: 19, scope: !10239)
!10266 = !DILocation(line: 8227, column: 27, scope: !10239)
!10267 = !DILocation(line: 8227, column: 6, scope: !10239)
!10268 = !DILocation(line: 8227, column: 25, scope: !10239)
!10269 = !DILocation(line: 8228, column: 31, scope: !10239)
!10270 = !DILocation(line: 8228, column: 6, scope: !10239)
!10271 = !DILocation(line: 8228, column: 29, scope: !10239)
!10272 = !DILocation(line: 8230, column: 3, scope: !10239)
!10273 = !DILocation(line: 8231, column: 1, scope: !10239)
!10274 = distinct !DISubprogram(name: "c_pop_function_context", scope: !3, file: !3, line: 8236, type: !2978, scopeLine: 8237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10275)
!10275 = !{!10276}
!10276 = !DILocalVariable(name: "p", scope: !10274, file: !3, line: 8238, type: !1605)
!10277 = !DILocation(line: 8240, column: 3, scope: !10274)
!10278 = !DILocation(line: 8241, column: 7, scope: !10274)
!10279 = !DILocation(line: 8241, column: 13, scope: !10274)
!10280 = !DILocation(line: 0, scope: !10274)
!10281 = !DILocation(line: 8242, column: 18, scope: !10274)
!10282 = !DILocation(line: 8244, column: 7, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 8244, column: 7)
!10284 = !DILocation(line: 8244, column: 52, scope: !10283)
!10285 = !DILocation(line: 8245, column: 7, scope: !10283)
!10286 = !DILocation(line: 8245, column: 10, scope: !10283)
!10287 = !DILocation(line: 8245, column: 50, scope: !10283)
!10288 = !DILocation(line: 8244, column: 7, scope: !10274)
!10289 = !DILocation(line: 8250, column: 46, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 8246, column: 5)
!10291 = !DILocation(line: 8250, column: 7, scope: !10290)
!10292 = !DILocation(line: 8250, column: 44, scope: !10290)
!10293 = !DILocation(line: 8251, column: 7, scope: !10290)
!10294 = !DILocation(line: 8251, column: 46, scope: !10290)
!10295 = !DILocation(line: 8252, column: 5, scope: !10290)
!10296 = !DILocation(line: 8254, column: 25, scope: !10274)
!10297 = !DILocation(line: 8255, column: 22, scope: !10274)
!10298 = !DILocation(line: 8255, column: 17, scope: !10274)
!10299 = !DILocation(line: 8256, column: 21, scope: !10274)
!10300 = !DILocation(line: 8256, column: 16, scope: !10274)
!10301 = !DILocation(line: 8257, column: 23, scope: !10274)
!10302 = !DILocation(line: 8257, column: 18, scope: !10274)
!10303 = !DILocation(line: 8258, column: 34, scope: !10274)
!10304 = !DILocation(line: 8258, column: 29, scope: !10274)
!10305 = !DILocation(line: 8259, column: 39, scope: !10274)
!10306 = !DILocation(line: 8259, column: 34, scope: !10274)
!10307 = !DILocation(line: 8260, column: 38, scope: !10274)
!10308 = !DILocation(line: 8260, column: 33, scope: !10274)
!10309 = !DILocation(line: 8261, column: 44, scope: !10274)
!10310 = !DILocation(line: 8261, column: 39, scope: !10274)
!10311 = !DILocation(line: 8262, column: 31, scope: !10274)
!10312 = !DILocation(line: 8262, column: 26, scope: !10274)
!10313 = !DILocation(line: 8263, column: 1, scope: !10274)
!10314 = distinct !DISubprogram(name: "identifier_global_value", scope: !3, file: !3, line: 8283, type: !2812, scopeLine: 8284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10315)
!10315 = !{!10316, !10317}
!10316 = !DILocalVariable(name: "t", arg: 1, scope: !10314, file: !3, line: 8283, type: !672)
!10317 = !DILocalVariable(name: "b", scope: !10314, file: !3, line: 8285, type: !2061)
!10318 = !DILocation(line: 0, scope: !10314)
!10319 = !DILocation(line: 8287, column: 12, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 8287, column: 3)
!10321 = !DILocation(line: 8287, column: 8, scope: !10320)
!10322 = !DILocation(line: 0, scope: !10320)
!10323 = !DILocation(line: 8287, column: 3, scope: !10320)
!10324 = !DILocation(line: 8288, column: 9, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 8288, column: 9)
!10326 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 8287, column: 3)
!10327 = !DILocation(line: 8288, column: 29, scope: !10325)
!10328 = !DILocation(line: 8288, column: 32, scope: !10325)
!10329 = !DILocation(line: 8288, column: 9, scope: !10326)
!10330 = !DILocation(line: 8289, column: 17, scope: !10325)
!10331 = !DILocation(line: 8289, column: 7, scope: !10325)
!10332 = !DILocation(line: 8287, column: 44, scope: !10326)
!10333 = !DILocation(line: 8287, column: 3, scope: !10326)
!10334 = distinct !{!10334, !10323, !10335}
!10335 = !DILocation(line: 8289, column: 17, scope: !10320)
!10336 = !DILocation(line: 8292, column: 1, scope: !10314)
!10337 = distinct !DISubprogram(name: "record_builtin_type", scope: !3, file: !3, line: 8298, type: !10338, scopeLine: 8299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10340)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{null, !397, !625, !672}
!10340 = !{!10341, !10342, !10343, !10344, !10345}
!10341 = !DILocalVariable(name: "rid_index", arg: 1, scope: !10337, file: !3, line: 8298, type: !397)
!10342 = !DILocalVariable(name: "name", arg: 2, scope: !10337, file: !3, line: 8298, type: !625)
!10343 = !DILocalVariable(name: "type", arg: 3, scope: !10337, file: !3, line: 8298, type: !672)
!10344 = !DILocalVariable(name: "id", scope: !10337, file: !3, line: 8300, type: !672)
!10345 = !DILocalVariable(name: "decl", scope: !10337, file: !3, line: 8300, type: !672)
!10346 = !DILocation(line: 0, scope: !10337)
!10347 = !DILocation(line: 8301, column: 12, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 8301, column: 7)
!10349 = !DILocation(line: 8301, column: 7, scope: !10337)
!10350 = !DILocation(line: 8302, column: 10, scope: !10348)
!10351 = !DILocation(line: 8302, column: 5, scope: !10348)
!10352 = !DILocation(line: 8304, column: 10, scope: !10348)
!10353 = !DILocation(line: 0, scope: !10348)
!10354 = !DILocation(line: 8305, column: 10, scope: !10337)
!10355 = !DILocation(line: 8306, column: 3, scope: !10337)
!10356 = !DILocation(line: 8307, column: 7, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 8307, column: 7)
!10358 = !DILocation(line: 8307, column: 20, scope: !10357)
!10359 = !DILocation(line: 8307, column: 7, scope: !10337)
!10360 = !DILocation(line: 8308, column: 5, scope: !10357)
!10361 = !DILocation(line: 8309, column: 1, scope: !10337)
!10362 = distinct !DISubprogram(name: "build_void_list_node", scope: !3, file: !3, line: 8313, type: !3071, scopeLine: 8314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10363)
!10363 = !{!10364}
!10364 = !DILocalVariable(name: "t", scope: !10362, file: !3, line: 8315, type: !672)
!10365 = !DILocation(line: 8315, column: 12, scope: !10362)
!10366 = !DILocation(line: 0, scope: !10362)
!10367 = !DILocation(line: 8316, column: 3, scope: !10362)
!10368 = distinct !DISubprogram(name: "build_c_parm", scope: !3, file: !3, line: 8322, type: !10369, scopeLine: 8324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10371)
!10369 = !DISubroutineType(types: !10370)
!10370 = !{!2186, !2190, !672, !2141}
!10371 = !{!10372, !10373, !10374, !10375}
!10372 = !DILocalVariable(name: "specs", arg: 1, scope: !10368, file: !3, line: 8322, type: !2190)
!10373 = !DILocalVariable(name: "attrs", arg: 2, scope: !10368, file: !3, line: 8322, type: !672)
!10374 = !DILocalVariable(name: "declarator", arg: 3, scope: !10368, file: !3, line: 8323, type: !2141)
!10375 = !DILocalVariable(name: "ret", scope: !10368, file: !3, line: 8325, type: !2186)
!10376 = !DILocation(line: 0, scope: !10368)
!10377 = !DILocation(line: 8325, column: 24, scope: !10368)
!10378 = !DILocation(line: 8326, column: 8, scope: !10368)
!10379 = !DILocation(line: 8326, column: 14, scope: !10368)
!10380 = !DILocation(line: 8327, column: 8, scope: !10368)
!10381 = !DILocation(line: 8327, column: 14, scope: !10368)
!10382 = !DILocation(line: 8328, column: 8, scope: !10368)
!10383 = !DILocation(line: 8328, column: 19, scope: !10368)
!10384 = !DILocation(line: 8329, column: 3, scope: !10368)
!10385 = distinct !DISubprogram(name: "build_attrs_declarator", scope: !3, file: !3, line: 8337, type: !10386, scopeLine: 8338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10388)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{!2141, !672, !2141}
!10388 = !{!10389, !10390, !10391}
!10389 = !DILocalVariable(name: "attrs", arg: 1, scope: !10385, file: !3, line: 8337, type: !672)
!10390 = !DILocalVariable(name: "target", arg: 2, scope: !10385, file: !3, line: 8337, type: !2141)
!10391 = !DILocalVariable(name: "ret", scope: !10385, file: !3, line: 8339, type: !2141)
!10392 = !DILocation(line: 0, scope: !10385)
!10393 = !DILocation(line: 8339, column: 30, scope: !10385)
!10394 = !DILocation(line: 8340, column: 8, scope: !10385)
!10395 = !DILocation(line: 8340, column: 13, scope: !10385)
!10396 = !DILocation(line: 8341, column: 8, scope: !10385)
!10397 = !DILocation(line: 8341, column: 19, scope: !10385)
!10398 = !DILocation(line: 8342, column: 10, scope: !10385)
!10399 = !DILocation(line: 8342, column: 16, scope: !10385)
!10400 = !DILocation(line: 8343, column: 3, scope: !10385)
!10401 = distinct !DISubprogram(name: "build_function_declarator", scope: !3, file: !3, line: 8350, type: !10402, scopeLine: 8352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10404)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{!2141, !1622, !2141}
!10404 = !{!10405, !10406, !10407}
!10405 = !DILocalVariable(name: "args", arg: 1, scope: !10401, file: !3, line: 8350, type: !1622)
!10406 = !DILocalVariable(name: "target", arg: 2, scope: !10401, file: !3, line: 8351, type: !2141)
!10407 = !DILocalVariable(name: "ret", scope: !10401, file: !3, line: 8353, type: !2141)
!10408 = !DILocation(line: 0, scope: !10401)
!10409 = !DILocation(line: 8353, column: 30, scope: !10401)
!10410 = !DILocation(line: 8354, column: 8, scope: !10401)
!10411 = !DILocation(line: 8354, column: 13, scope: !10401)
!10412 = !DILocation(line: 8355, column: 8, scope: !10401)
!10413 = !DILocation(line: 8355, column: 19, scope: !10401)
!10414 = !DILocation(line: 8356, column: 8, scope: !10401)
!10415 = !DILocation(line: 8356, column: 10, scope: !10401)
!10416 = !DILocation(line: 8356, column: 19, scope: !10401)
!10417 = !DILocation(line: 8357, column: 3, scope: !10401)
!10418 = distinct !DISubprogram(name: "build_id_declarator", scope: !3, file: !3, line: 8364, type: !10419, scopeLine: 8365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!2141, !672}
!10421 = !{!10422, !10423}
!10422 = !DILocalVariable(name: "ident", arg: 1, scope: !10418, file: !3, line: 8364, type: !672)
!10423 = !DILocalVariable(name: "ret", scope: !10418, file: !3, line: 8366, type: !2141)
!10424 = !DILocation(line: 0, scope: !10418)
!10425 = !DILocation(line: 8366, column: 30, scope: !10418)
!10426 = !DILocation(line: 8367, column: 8, scope: !10418)
!10427 = !DILocation(line: 8367, column: 13, scope: !10418)
!10428 = !DILocation(line: 8368, column: 8, scope: !10418)
!10429 = !DILocation(line: 8368, column: 19, scope: !10418)
!10430 = !DILocation(line: 8369, column: 10, scope: !10418)
!10431 = !DILocation(line: 8369, column: 13, scope: !10418)
!10432 = !DILocation(line: 8371, column: 17, scope: !10418)
!10433 = !DILocation(line: 8371, column: 8, scope: !10418)
!10434 = !DILocation(line: 8371, column: 15, scope: !10418)
!10435 = !DILocation(line: 8372, column: 3, scope: !10418)
!10436 = distinct !DISubprogram(name: "make_pointer_declarator", scope: !3, file: !3, line: 8381, type: !10437, scopeLine: 8383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10439)
!10437 = !DISubroutineType(types: !10438)
!10438 = !{!2141, !2190, !2141}
!10439 = !{!10440, !10441, !10442, !10443, !10444, !10445}
!10440 = !DILocalVariable(name: "type_quals_attrs", arg: 1, scope: !10436, file: !3, line: 8381, type: !2190)
!10441 = !DILocalVariable(name: "target", arg: 2, scope: !10436, file: !3, line: 8382, type: !2141)
!10442 = !DILocalVariable(name: "attrs", scope: !10436, file: !3, line: 8384, type: !672)
!10443 = !DILocalVariable(name: "quals", scope: !10436, file: !3, line: 8385, type: !620)
!10444 = !DILocalVariable(name: "itarget", scope: !10436, file: !3, line: 8386, type: !2141)
!10445 = !DILocalVariable(name: "ret", scope: !10436, file: !3, line: 8387, type: !2141)
!10446 = !DILocation(line: 0, scope: !10436)
!10447 = !DILocation(line: 8387, column: 30, scope: !10436)
!10448 = !DILocation(line: 8388, column: 7, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 8388, column: 7)
!10450 = !DILocation(line: 8388, column: 7, scope: !10436)
!10451 = !DILocation(line: 8390, column: 33, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 8389, column: 5)
!10453 = !DILocation(line: 8391, column: 15, scope: !10452)
!10454 = !DILocation(line: 8392, column: 17, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 8392, column: 11)
!10456 = !DILocation(line: 8392, column: 11, scope: !10452)
!10457 = !DILocation(line: 8393, column: 12, scope: !10455)
!10458 = !DILocation(line: 8393, column: 2, scope: !10455)
!10459 = !DILocation(line: 8395, column: 8, scope: !10436)
!10460 = !DILocation(line: 8395, column: 13, scope: !10436)
!10461 = !DILocation(line: 8396, column: 8, scope: !10436)
!10462 = !DILocation(line: 8396, column: 19, scope: !10436)
!10463 = !DILocation(line: 8397, column: 8, scope: !10436)
!10464 = !DILocation(line: 8397, column: 10, scope: !10436)
!10465 = !DILocation(line: 8397, column: 24, scope: !10436)
!10466 = !DILocation(line: 8398, column: 3, scope: !10436)
!10467 = distinct !DISubprogram(name: "build_null_declspecs", scope: !3, file: !3, line: 8405, type: !10468, scopeLine: 8406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10470)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!2190}
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "ret", scope: !10467, file: !3, line: 8407, type: !2190)
!10472 = !DILocation(line: 8407, column: 29, scope: !10467)
!10473 = !DILocation(line: 0, scope: !10467)
!10474 = !DILocation(line: 8408, column: 8, scope: !10467)
!10475 = !DILocation(line: 8408, column: 13, scope: !10467)
!10476 = !DILocation(line: 8409, column: 8, scope: !10467)
!10477 = !DILocation(line: 8409, column: 13, scope: !10467)
!10478 = !DILocation(line: 8410, column: 8, scope: !10467)
!10479 = !DILocation(line: 8410, column: 18, scope: !10467)
!10480 = !DILocation(line: 8411, column: 8, scope: !10467)
!10481 = !DILocation(line: 8411, column: 14, scope: !10467)
!10482 = !DILocation(line: 8412, column: 8, scope: !10467)
!10483 = !DILocation(line: 8412, column: 22, scope: !10467)
!10484 = !DILocation(line: 8413, column: 8, scope: !10467)
!10485 = !DILocation(line: 8413, column: 22, scope: !10467)
!10486 = !DILocation(line: 8421, column: 8, scope: !10467)
!10487 = !DILocation(line: 8421, column: 21, scope: !10467)
!10488 = !DILocation(line: 8422, column: 8, scope: !10467)
!10489 = !DILocation(line: 8422, column: 22, scope: !10467)
!10490 = !DILocation(line: 8423, column: 8, scope: !10467)
!10491 = !DILocation(line: 8423, column: 15, scope: !10467)
!10492 = !DILocation(line: 8434, column: 21, scope: !10467)
!10493 = !DILocation(line: 8435, column: 8, scope: !10467)
!10494 = !DILocation(line: 8435, column: 22, scope: !10467)
!10495 = !DILocation(line: 8436, column: 3, scope: !10467)
!10496 = distinct !DISubprogram(name: "declspecs_add_addrspace", scope: !3, file: !3, line: 8443, type: !10497, scopeLine: 8444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10499)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!2190, !2190, !2221}
!10499 = !{!10500, !10501}
!10500 = !DILocalVariable(name: "specs", arg: 1, scope: !10496, file: !3, line: 8443, type: !2190)
!10501 = !DILocalVariable(name: "as", arg: 2, scope: !10496, file: !3, line: 8443, type: !2221)
!10502 = !DILocation(line: 0, scope: !10496)
!10503 = !DILocation(line: 8445, column: 10, scope: !10496)
!10504 = !DILocation(line: 8445, column: 24, scope: !10496)
!10505 = !DILocation(line: 8446, column: 27, scope: !10496)
!10506 = !DILocation(line: 8448, column: 8, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 8448, column: 7)
!10508 = !DILocation(line: 8449, column: 7, scope: !10507)
!10509 = !DILocation(line: 8449, column: 31, scope: !10507)
!10510 = !DILocation(line: 8448, column: 7, scope: !10496)
!10511 = !DILocation(line: 8451, column: 5, scope: !10507)
!10512 = !DILocation(line: 8452, column: 31, scope: !10507)
!10513 = !DILocation(line: 8452, column: 5, scope: !10507)
!10514 = !DILocation(line: 8450, column: 5, scope: !10507)
!10515 = !DILocation(line: 8454, column: 26, scope: !10507)
!10516 = !DILocation(line: 8455, column: 3, scope: !10496)
!10517 = distinct !DISubprogram(name: "declspecs_add_qual", scope: !3, file: !3, line: 8462, type: !10518, scopeLine: 8463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10520)
!10518 = !DISubroutineType(types: !10519)
!10519 = !{!2190, !2190, !672}
!10520 = !{!10521, !10522, !10523, !10524}
!10521 = !DILocalVariable(name: "specs", arg: 1, scope: !10517, file: !3, line: 8462, type: !2190)
!10522 = !DILocalVariable(name: "qual", arg: 2, scope: !10517, file: !3, line: 8462, type: !672)
!10523 = !DILocalVariable(name: "i", scope: !10517, file: !3, line: 8464, type: !397)
!10524 = !DILocalVariable(name: "dupe", scope: !10517, file: !3, line: 8465, type: !619)
!10525 = !DILocation(line: 0, scope: !10517)
!10526 = !DILocation(line: 8466, column: 10, scope: !10517)
!10527 = !DILocation(line: 8466, column: 24, scope: !10517)
!10528 = !DILocation(line: 8467, column: 27, scope: !10517)
!10529 = !DILocation(line: 8468, column: 3, scope: !10517)
!10530 = !DILocation(line: 8470, column: 7, scope: !10517)
!10531 = !DILocation(line: 8471, column: 3, scope: !10517)
!10532 = !DILocation(line: 8474, column: 21, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 8472, column: 5)
!10534 = !DILocation(line: 8475, column: 22, scope: !10533)
!10535 = !DILocation(line: 8476, column: 7, scope: !10533)
!10536 = !DILocation(line: 8478, column: 21, scope: !10533)
!10537 = !DILocation(line: 8479, column: 25, scope: !10533)
!10538 = !DILocation(line: 8480, column: 7, scope: !10533)
!10539 = !DILocation(line: 8482, column: 21, scope: !10533)
!10540 = !DILocation(line: 8482, column: 14, scope: !10533)
!10541 = !DILocation(line: 8483, column: 25, scope: !10533)
!10542 = !DILocation(line: 8484, column: 7, scope: !10533)
!10543 = !DILocation(line: 8486, column: 7, scope: !10533)
!10544 = !DILocation(line: 8487, column: 5, scope: !10533)
!10545 = !DILocation(line: 8488, column: 7, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 8488, column: 7)
!10547 = !DILocation(line: 8488, column: 16, scope: !10546)
!10548 = !DILocation(line: 8488, column: 12, scope: !10546)
!10549 = !DILocation(line: 8489, column: 14, scope: !10546)
!10550 = !DILocation(line: 8489, column: 5, scope: !10546)
!10551 = !DILocation(line: 8490, column: 3, scope: !10517)
!10552 = distinct !DISubprogram(name: "declspecs_add_type", scope: !3, file: !3, line: 8497, type: !10553, scopeLine: 8499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10555)
!10553 = !DISubroutineType(types: !10554)
!10554 = !{!2190, !760, !2190, !7980}
!10555 = !{!10556, !10557, !10558, !10559, !10560, !10563, !10566, !10570, !10572}
!10556 = !DILocalVariable(name: "loc", arg: 1, scope: !10552, file: !3, line: 8497, type: !760)
!10557 = !DILocalVariable(name: "specs", arg: 2, scope: !10552, file: !3, line: 8497, type: !2190)
!10558 = !DILocalVariable(name: "spec", arg: 3, scope: !10552, file: !3, line: 8498, type: !7980)
!10559 = !DILocalVariable(name: "type", scope: !10552, file: !3, line: 8500, type: !672)
!10560 = !DILocalVariable(name: "i", scope: !10561, file: !3, line: 8512, type: !397)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 8511, column: 5)
!10562 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 8508, column: 7)
!10563 = !DILocalVariable(name: "dupe", scope: !10564, file: !3, line: 8521, type: !619)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 8519, column: 2)
!10565 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 8518, column: 11)
!10566 = !DILocalVariable(name: "str", scope: !10567, file: !3, line: 8934, type: !625)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8933, column: 8)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 8801, column: 6)
!10569 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 8791, column: 2)
!10570 = !DILocalVariable(name: "str", scope: !10571, file: !3, line: 8993, type: !625)
!10571 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8992, column: 8)
!10572 = !DILocalVariable(name: "t", scope: !10573, file: !3, line: 9057, type: !672)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 9056, column: 5)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 9055, column: 12)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 9030, column: 12)
!10576 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 9026, column: 7)
!10577 = !DILocation(line: 0, scope: !10552)
!10578 = !DILocation(line: 8498, column: 25, scope: !10552)
!10579 = !DILocation(line: 8500, column: 20, scope: !10552)
!10580 = !DILocation(line: 8501, column: 10, scope: !10552)
!10581 = !DILocation(line: 8501, column: 24, scope: !10552)
!10582 = !DILocation(line: 8503, column: 22, scope: !10552)
!10583 = !DILocation(line: 8504, column: 7, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 8504, column: 7)
!10585 = !DILocation(line: 8504, column: 7, scope: !10552)
!10586 = !DILocation(line: 8505, column: 25, scope: !10584)
!10587 = !DILocation(line: 8508, column: 7, scope: !10562)
!10588 = !DILocation(line: 8505, column: 5, scope: !10584)
!10589 = !DILocation(line: 8508, column: 24, scope: !10562)
!10590 = !DILocation(line: 8509, column: 7, scope: !10562)
!10591 = !DILocation(line: 8509, column: 10, scope: !10562)
!10592 = !DILocation(line: 8510, column: 7, scope: !10562)
!10593 = !DILocation(line: 8510, column: 10, scope: !10562)
!10594 = !DILocation(line: 8510, column: 28, scope: !10562)
!10595 = !DILocation(line: 8508, column: 7, scope: !10552)
!10596 = !DILocation(line: 0, scope: !10561)
!10597 = !DILocation(line: 8513, column: 18, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 8513, column: 11)
!10599 = !DILocation(line: 8513, column: 11, scope: !10598)
!10600 = !DILocation(line: 8513, column: 11, scope: !10561)
!10601 = !DILocation(line: 8515, column: 4, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 8514, column: 2)
!10603 = !DILocation(line: 8516, column: 4, scope: !10602)
!10604 = !DILocation(line: 8518, column: 19, scope: !10565)
!10605 = !DILocation(line: 8518, column: 11, scope: !10561)
!10606 = !DILocation(line: 0, scope: !10564)
!10607 = !DILocation(line: 8522, column: 4, scope: !10564)
!10608 = !DILocation(line: 8525, column: 19, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8525, column: 12)
!10610 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 8523, column: 6)
!10611 = !DILocation(line: 8525, column: 12, scope: !10609)
!10612 = !DILocation(line: 8525, column: 12, scope: !10610)
!10613 = !DILocation(line: 8527, column: 5, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 8526, column: 3)
!10615 = !DILocation(line: 8528, column: 5, scope: !10614)
!10616 = !DILocation(line: 8530, column: 19, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8530, column: 12)
!10618 = !DILocation(line: 8530, column: 12, scope: !10617)
!10619 = !DILocation(line: 8530, column: 12, scope: !10610)
!10620 = !DILocation(line: 8532, column: 16, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 8532, column: 9)
!10622 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 8531, column: 3)
!10623 = !DILocation(line: 8532, column: 30, scope: !10621)
!10624 = !DILocation(line: 8532, column: 9, scope: !10622)
!10625 = !DILocation(line: 8534, column: 9, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 8533, column: 7)
!10627 = !DILocation(line: 8537, column: 9, scope: !10626)
!10628 = !DILocation(line: 8539, column: 5, scope: !10622)
!10629 = !DILocation(line: 8541, column: 24, scope: !10622)
!10630 = !DILocation(line: 8542, column: 5, scope: !10622)
!10631 = !DILocation(line: 8544, column: 19, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8544, column: 12)
!10633 = !DILocation(line: 8544, column: 12, scope: !10632)
!10634 = !DILocation(line: 8544, column: 12, scope: !10610)
!10635 = !DILocation(line: 8545, column: 3, scope: !10632)
!10636 = !DILocation(line: 8548, column: 24, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 8548, column: 17)
!10638 = !DILocation(line: 8548, column: 38, scope: !10637)
!10639 = !DILocation(line: 8548, column: 17, scope: !10632)
!10640 = !DILocation(line: 8549, column: 3, scope: !10637)
!10641 = !DILocation(line: 8552, column: 38, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 8552, column: 17)
!10643 = !DILocation(line: 8552, column: 17, scope: !10637)
!10644 = !DILocation(line: 8553, column: 3, scope: !10642)
!10645 = !DILocation(line: 8556, column: 38, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 8556, column: 17)
!10647 = !DILocation(line: 8556, column: 17, scope: !10642)
!10648 = !DILocation(line: 8557, column: 3, scope: !10646)
!10649 = !DILocation(line: 8560, column: 38, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 8560, column: 17)
!10651 = !DILocation(line: 8560, column: 17, scope: !10646)
!10652 = !DILocation(line: 8561, column: 3, scope: !10650)
!10653 = !DILocation(line: 8564, column: 38, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 8564, column: 17)
!10655 = !DILocation(line: 8564, column: 17, scope: !10650)
!10656 = !DILocation(line: 8565, column: 3, scope: !10654)
!10657 = !DILocation(line: 8568, column: 38, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 8568, column: 17)
!10659 = !DILocation(line: 8568, column: 17, scope: !10654)
!10660 = !DILocation(line: 8569, column: 3, scope: !10658)
!10661 = !DILocation(line: 8572, column: 38, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 8572, column: 17)
!10663 = !DILocation(line: 8572, column: 17, scope: !10658)
!10664 = !DILocation(line: 8573, column: 3, scope: !10662)
!10665 = !DILocation(line: 8577, column: 17, scope: !10662)
!10666 = !DILocation(line: 8580, column: 22, scope: !10610)
!10667 = !DILocation(line: 8580, column: 15, scope: !10610)
!10668 = !DILocation(line: 8581, column: 19, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8581, column: 12)
!10670 = !DILocation(line: 8581, column: 12, scope: !10669)
!10671 = !DILocation(line: 8581, column: 12, scope: !10610)
!10672 = !DILocation(line: 8582, column: 3, scope: !10669)
!10673 = !DILocation(line: 8585, column: 24, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 8585, column: 17)
!10675 = !DILocation(line: 8585, column: 38, scope: !10674)
!10676 = !DILocation(line: 8585, column: 17, scope: !10669)
!10677 = !DILocation(line: 8586, column: 3, scope: !10674)
!10678 = !DILocation(line: 8589, column: 38, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 8589, column: 17)
!10680 = !DILocation(line: 8589, column: 17, scope: !10674)
!10681 = !DILocation(line: 8590, column: 3, scope: !10679)
!10682 = !DILocation(line: 8593, column: 38, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 8593, column: 17)
!10684 = !DILocation(line: 8593, column: 17, scope: !10679)
!10685 = !DILocation(line: 8594, column: 3, scope: !10683)
!10686 = !DILocation(line: 8597, column: 38, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 8597, column: 17)
!10688 = !DILocation(line: 8597, column: 17, scope: !10683)
!10689 = !DILocation(line: 8598, column: 3, scope: !10687)
!10690 = !DILocation(line: 8601, column: 38, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 8601, column: 17)
!10692 = !DILocation(line: 8601, column: 17, scope: !10687)
!10693 = !DILocation(line: 8602, column: 3, scope: !10691)
!10694 = !DILocation(line: 8605, column: 38, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 8605, column: 17)
!10696 = !DILocation(line: 8605, column: 17, scope: !10691)
!10697 = !DILocation(line: 8606, column: 17, scope: !10695)
!10698 = !DILocation(line: 8609, column: 38, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 8609, column: 17)
!10700 = !DILocation(line: 8609, column: 17, scope: !10695)
!10701 = !DILocation(line: 8610, column: 3, scope: !10699)
!10702 = !DILocation(line: 8613, column: 38, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 8613, column: 17)
!10704 = !DILocation(line: 8613, column: 17, scope: !10699)
!10705 = !DILocation(line: 8614, column: 3, scope: !10703)
!10706 = !DILocation(line: 8618, column: 18, scope: !10703)
!10707 = !DILocation(line: 8621, column: 22, scope: !10610)
!10708 = !DILocation(line: 8621, column: 15, scope: !10610)
!10709 = !DILocation(line: 8622, column: 19, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8622, column: 12)
!10711 = !DILocation(line: 8622, column: 12, scope: !10710)
!10712 = !DILocation(line: 8622, column: 12, scope: !10610)
!10713 = !DILocation(line: 8623, column: 3, scope: !10710)
!10714 = !DILocation(line: 8626, column: 24, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 8626, column: 17)
!10716 = !DILocation(line: 8626, column: 38, scope: !10715)
!10717 = !DILocation(line: 8626, column: 17, scope: !10710)
!10718 = !DILocation(line: 8627, column: 3, scope: !10715)
!10719 = !DILocation(line: 8630, column: 38, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 8630, column: 17)
!10721 = !DILocation(line: 8630, column: 17, scope: !10715)
!10722 = !DILocation(line: 8631, column: 3, scope: !10720)
!10723 = !DILocation(line: 8634, column: 38, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 8634, column: 17)
!10725 = !DILocation(line: 8634, column: 17, scope: !10720)
!10726 = !DILocation(line: 8635, column: 3, scope: !10724)
!10727 = !DILocation(line: 8638, column: 38, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 8638, column: 17)
!10729 = !DILocation(line: 8638, column: 17, scope: !10724)
!10730 = !DILocation(line: 8639, column: 3, scope: !10728)
!10731 = !DILocation(line: 8642, column: 38, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 8642, column: 17)
!10733 = !DILocation(line: 8642, column: 17, scope: !10728)
!10734 = !DILocation(line: 8643, column: 3, scope: !10732)
!10735 = !DILocation(line: 8646, column: 38, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 8646, column: 17)
!10737 = !DILocation(line: 8646, column: 17, scope: !10732)
!10738 = !DILocation(line: 8647, column: 3, scope: !10736)
!10739 = !DILocation(line: 8650, column: 38, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 8650, column: 17)
!10741 = !DILocation(line: 8650, column: 17, scope: !10736)
!10742 = !DILocation(line: 8651, column: 3, scope: !10740)
!10743 = !DILocation(line: 8655, column: 19, scope: !10740)
!10744 = !DILocation(line: 8658, column: 22, scope: !10610)
!10745 = !DILocation(line: 8658, column: 15, scope: !10610)
!10746 = !DILocation(line: 8659, column: 19, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8659, column: 12)
!10748 = !DILocation(line: 8659, column: 12, scope: !10747)
!10749 = !DILocation(line: 8659, column: 12, scope: !10610)
!10750 = !DILocation(line: 8660, column: 3, scope: !10747)
!10751 = !DILocation(line: 8663, column: 24, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 8663, column: 17)
!10753 = !DILocation(line: 8663, column: 38, scope: !10752)
!10754 = !DILocation(line: 8663, column: 17, scope: !10747)
!10755 = !DILocation(line: 8664, column: 3, scope: !10752)
!10756 = !DILocation(line: 8667, column: 38, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 8667, column: 17)
!10758 = !DILocation(line: 8667, column: 17, scope: !10752)
!10759 = !DILocation(line: 8668, column: 3, scope: !10757)
!10760 = !DILocation(line: 8671, column: 38, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 8671, column: 17)
!10762 = !DILocation(line: 8671, column: 17, scope: !10757)
!10763 = !DILocation(line: 8672, column: 3, scope: !10761)
!10764 = !DILocation(line: 8675, column: 38, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 8675, column: 17)
!10766 = !DILocation(line: 8675, column: 17, scope: !10761)
!10767 = !DILocation(line: 8676, column: 3, scope: !10765)
!10768 = !DILocation(line: 8679, column: 45, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 8679, column: 24)
!10770 = !DILocation(line: 8679, column: 24, scope: !10765)
!10771 = !DILocation(line: 8680, column: 3, scope: !10769)
!10772 = !DILocation(line: 8683, column: 38, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8683, column: 17)
!10774 = !DILocation(line: 8683, column: 17, scope: !10769)
!10775 = !DILocation(line: 8684, column: 3, scope: !10773)
!10776 = !DILocation(line: 8687, column: 38, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 8687, column: 17)
!10778 = !DILocation(line: 8687, column: 17, scope: !10773)
!10779 = !DILocation(line: 8688, column: 3, scope: !10777)
!10780 = !DILocation(line: 8692, column: 21, scope: !10777)
!10781 = !DILocation(line: 8695, column: 22, scope: !10610)
!10782 = !DILocation(line: 8695, column: 15, scope: !10610)
!10783 = !DILocation(line: 8696, column: 13, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8696, column: 12)
!10785 = !DILocation(line: 8696, column: 25, scope: !10784)
!10786 = !DILocation(line: 8696, column: 29, scope: !10784)
!10787 = !DILocation(line: 8696, column: 12, scope: !10610)
!10788 = !DILocation(line: 8697, column: 3, scope: !10784)
!10789 = !DILocation(line: 8699, column: 19, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8699, column: 12)
!10791 = !DILocation(line: 8699, column: 33, scope: !10790)
!10792 = !DILocation(line: 8699, column: 12, scope: !10610)
!10793 = !DILocation(line: 8700, column: 3, scope: !10790)
!10794 = !DILocation(line: 8703, column: 38, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 8703, column: 17)
!10796 = !DILocation(line: 8703, column: 17, scope: !10790)
!10797 = !DILocation(line: 8704, column: 3, scope: !10795)
!10798 = !DILocation(line: 8707, column: 45, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 8707, column: 24)
!10800 = !DILocation(line: 8707, column: 24, scope: !10795)
!10801 = !DILocation(line: 8708, column: 3, scope: !10799)
!10802 = !DILocation(line: 8711, column: 38, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 8711, column: 17)
!10804 = !DILocation(line: 8711, column: 17, scope: !10799)
!10805 = !DILocation(line: 8712, column: 3, scope: !10803)
!10806 = !DILocation(line: 8715, column: 38, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 8715, column: 17)
!10808 = !DILocation(line: 8715, column: 17, scope: !10803)
!10809 = !DILocation(line: 8716, column: 3, scope: !10807)
!10810 = !DILocation(line: 8719, column: 38, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 8719, column: 17)
!10812 = !DILocation(line: 8719, column: 17, scope: !10807)
!10813 = !DILocation(line: 8720, column: 3, scope: !10811)
!10814 = !DILocation(line: 8723, column: 38, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 8723, column: 17)
!10816 = !DILocation(line: 8723, column: 17, scope: !10811)
!10817 = !DILocation(line: 8724, column: 3, scope: !10815)
!10818 = !DILocation(line: 8727, column: 24, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 8727, column: 17)
!10820 = !DILocation(line: 8727, column: 17, scope: !10819)
!10821 = !DILocation(line: 8727, column: 17, scope: !10815)
!10822 = !DILocation(line: 8728, column: 3, scope: !10819)
!10823 = !DILocation(line: 8732, column: 20, scope: !10819)
!10824 = !DILocation(line: 8735, column: 22, scope: !10610)
!10825 = !DILocation(line: 8735, column: 15, scope: !10610)
!10826 = !DILocation(line: 8736, column: 8, scope: !10610)
!10827 = !DILocation(line: 8738, column: 19, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 8738, column: 12)
!10829 = !DILocation(line: 8738, column: 33, scope: !10828)
!10830 = !DILocation(line: 8738, column: 12, scope: !10610)
!10831 = !DILocation(line: 8739, column: 3, scope: !10828)
!10832 = !DILocation(line: 8742, column: 38, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 8742, column: 17)
!10834 = !DILocation(line: 8742, column: 17, scope: !10828)
!10835 = !DILocation(line: 8743, column: 3, scope: !10833)
!10836 = !DILocation(line: 8746, column: 38, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 8746, column: 17)
!10838 = !DILocation(line: 8746, column: 17, scope: !10833)
!10839 = !DILocation(line: 8747, column: 3, scope: !10837)
!10840 = !DILocation(line: 8750, column: 38, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 8750, column: 17)
!10842 = !DILocation(line: 8750, column: 17, scope: !10837)
!10843 = !DILocation(line: 8751, column: 3, scope: !10841)
!10844 = !DILocation(line: 8754, column: 38, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 8754, column: 17)
!10846 = !DILocation(line: 8754, column: 17, scope: !10841)
!10847 = !DILocation(line: 8755, column: 3, scope: !10845)
!10848 = !DILocation(line: 8758, column: 38, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 8758, column: 17)
!10850 = !DILocation(line: 8758, column: 17, scope: !10845)
!10851 = !DILocation(line: 8759, column: 3, scope: !10849)
!10852 = !DILocation(line: 8762, column: 45, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 8762, column: 24)
!10854 = !DILocation(line: 8762, column: 24, scope: !10849)
!10855 = !DILocation(line: 8763, column: 3, scope: !10853)
!10856 = !DILocation(line: 8766, column: 38, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8766, column: 17)
!10858 = !DILocation(line: 8766, column: 17, scope: !10853)
!10859 = !DILocation(line: 8767, column: 3, scope: !10857)
!10860 = !DILocation(line: 8770, column: 38, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 8770, column: 17)
!10862 = !DILocation(line: 8770, column: 17, scope: !10857)
!10863 = !DILocation(line: 8771, column: 3, scope: !10861)
!10864 = !DILocation(line: 8774, column: 24, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 8774, column: 17)
!10866 = !DILocation(line: 8774, column: 17, scope: !10865)
!10867 = !DILocation(line: 8774, column: 17, scope: !10861)
!10868 = !DILocation(line: 8775, column: 3, scope: !10865)
!10869 = !DILocation(line: 8779, column: 23, scope: !10865)
!10870 = !DILocation(line: 8782, column: 8, scope: !10610)
!10871 = !DILocation(line: 8783, column: 6, scope: !10610)
!10872 = !DILocation(line: 8785, column: 8, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 8785, column: 8)
!10874 = !DILocation(line: 8785, column: 8, scope: !10564)
!10875 = !DILocation(line: 8786, column: 6, scope: !10873)
!10876 = !DILocation(line: 8794, column: 15, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 8794, column: 8)
!10878 = !DILocation(line: 8794, column: 29, scope: !10877)
!10879 = !DILocation(line: 8794, column: 8, scope: !10569)
!10880 = !DILocation(line: 8796, column: 8, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 8795, column: 6)
!10882 = !DILocation(line: 8798, column: 8, scope: !10881)
!10883 = !DILocation(line: 8800, column: 4, scope: !10569)
!10884 = !DILocation(line: 8803, column: 19, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8803, column: 12)
!10886 = !DILocation(line: 8803, column: 12, scope: !10885)
!10887 = !DILocation(line: 8803, column: 12, scope: !10568)
!10888 = !DILocation(line: 8804, column: 3, scope: !10885)
!10889 = !DILocation(line: 8807, column: 24, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10885, file: !3, line: 8807, column: 17)
!10891 = !DILocation(line: 8807, column: 17, scope: !10890)
!10892 = !DILocation(line: 8807, column: 17, scope: !10885)
!10893 = !DILocation(line: 8808, column: 3, scope: !10890)
!10894 = !DILocation(line: 8811, column: 24, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 8811, column: 17)
!10896 = !DILocation(line: 8811, column: 17, scope: !10895)
!10897 = !DILocation(line: 8811, column: 17, scope: !10890)
!10898 = !DILocation(line: 8812, column: 3, scope: !10895)
!10899 = !DILocation(line: 8815, column: 24, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 8815, column: 17)
!10901 = !DILocation(line: 8815, column: 17, scope: !10900)
!10902 = !DILocation(line: 8815, column: 17, scope: !10895)
!10903 = !DILocation(line: 8816, column: 3, scope: !10900)
!10904 = !DILocation(line: 8819, column: 24, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 8819, column: 17)
!10906 = !DILocation(line: 8819, column: 17, scope: !10905)
!10907 = !DILocation(line: 8819, column: 17, scope: !10900)
!10908 = !DILocation(line: 8820, column: 3, scope: !10905)
!10909 = !DILocation(line: 8823, column: 24, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 8823, column: 17)
!10911 = !DILocation(line: 8823, column: 17, scope: !10910)
!10912 = !DILocation(line: 8823, column: 17, scope: !10905)
!10913 = !DILocation(line: 8824, column: 3, scope: !10910)
!10914 = !DILocation(line: 8828, column: 24, scope: !10910)
!10915 = !DILocation(line: 8831, column: 19, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8831, column: 12)
!10917 = !DILocation(line: 8831, column: 12, scope: !10916)
!10918 = !DILocation(line: 8831, column: 12, scope: !10568)
!10919 = !DILocation(line: 8832, column: 3, scope: !10916)
!10920 = !DILocation(line: 8835, column: 24, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 8835, column: 17)
!10922 = !DILocation(line: 8835, column: 17, scope: !10921)
!10923 = !DILocation(line: 8835, column: 17, scope: !10916)
!10924 = !DILocation(line: 8836, column: 3, scope: !10921)
!10925 = !DILocation(line: 8839, column: 24, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 8839, column: 17)
!10927 = !DILocation(line: 8839, column: 17, scope: !10926)
!10928 = !DILocation(line: 8839, column: 17, scope: !10921)
!10929 = !DILocation(line: 8840, column: 3, scope: !10926)
!10930 = !DILocation(line: 8843, column: 24, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 8843, column: 17)
!10932 = !DILocation(line: 8843, column: 17, scope: !10931)
!10933 = !DILocation(line: 8843, column: 17, scope: !10926)
!10934 = !DILocation(line: 8844, column: 3, scope: !10931)
!10935 = !DILocation(line: 8847, column: 24, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 8847, column: 17)
!10937 = !DILocation(line: 8847, column: 17, scope: !10936)
!10938 = !DILocation(line: 8847, column: 17, scope: !10931)
!10939 = !DILocation(line: 8848, column: 3, scope: !10936)
!10940 = !DILocation(line: 8851, column: 24, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 8851, column: 17)
!10942 = !DILocation(line: 8851, column: 17, scope: !10941)
!10943 = !DILocation(line: 8851, column: 17, scope: !10936)
!10944 = !DILocation(line: 8852, column: 3, scope: !10941)
!10945 = !DILocation(line: 8856, column: 24, scope: !10941)
!10946 = !DILocation(line: 8859, column: 19, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8859, column: 12)
!10948 = !DILocation(line: 8859, column: 12, scope: !10947)
!10949 = !DILocation(line: 8859, column: 12, scope: !10568)
!10950 = !DILocation(line: 8860, column: 3, scope: !10947)
!10951 = !DILocation(line: 8863, column: 24, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 8863, column: 17)
!10953 = !DILocation(line: 8863, column: 17, scope: !10952)
!10954 = !DILocation(line: 8863, column: 17, scope: !10947)
!10955 = !DILocation(line: 8864, column: 3, scope: !10952)
!10956 = !DILocation(line: 8867, column: 24, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 8867, column: 17)
!10958 = !DILocation(line: 8867, column: 17, scope: !10957)
!10959 = !DILocation(line: 8867, column: 17, scope: !10952)
!10960 = !DILocation(line: 8868, column: 3, scope: !10957)
!10961 = !DILocation(line: 8872, column: 24, scope: !10957)
!10962 = !DILocation(line: 8875, column: 19, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8875, column: 12)
!10964 = !DILocation(line: 8875, column: 12, scope: !10963)
!10965 = !DILocation(line: 8875, column: 12, scope: !10568)
!10966 = !DILocation(line: 8876, column: 3, scope: !10963)
!10967 = !DILocation(line: 8880, column: 24, scope: !10963)
!10968 = !DILocation(line: 8883, column: 19, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8883, column: 12)
!10970 = !DILocation(line: 8883, column: 12, scope: !10969)
!10971 = !DILocation(line: 8883, column: 12, scope: !10568)
!10972 = !DILocation(line: 8884, column: 3, scope: !10969)
!10973 = !DILocation(line: 8887, column: 24, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 8887, column: 17)
!10975 = !DILocation(line: 8887, column: 17, scope: !10974)
!10976 = !DILocation(line: 8887, column: 17, scope: !10969)
!10977 = !DILocation(line: 8888, column: 3, scope: !10974)
!10978 = !DILocation(line: 8891, column: 24, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 8891, column: 17)
!10980 = !DILocation(line: 8891, column: 17, scope: !10979)
!10981 = !DILocation(line: 8891, column: 17, scope: !10974)
!10982 = !DILocation(line: 8892, column: 3, scope: !10979)
!10983 = !DILocation(line: 8895, column: 24, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 8895, column: 17)
!10985 = !DILocation(line: 8895, column: 17, scope: !10984)
!10986 = !DILocation(line: 8895, column: 17, scope: !10979)
!10987 = !DILocation(line: 8896, column: 3, scope: !10984)
!10988 = !DILocation(line: 8899, column: 24, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 8899, column: 17)
!10990 = !DILocation(line: 8899, column: 17, scope: !10989)
!10991 = !DILocation(line: 8899, column: 17, scope: !10984)
!10992 = !DILocation(line: 8900, column: 3, scope: !10989)
!10993 = !DILocation(line: 8904, column: 24, scope: !10989)
!10994 = !DILocation(line: 8907, column: 19, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8907, column: 12)
!10996 = !DILocation(line: 8907, column: 12, scope: !10995)
!10997 = !DILocation(line: 8907, column: 12, scope: !10568)
!10998 = !DILocation(line: 8908, column: 3, scope: !10995)
!10999 = !DILocation(line: 8911, column: 24, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 8911, column: 17)
!11001 = !DILocation(line: 8911, column: 17, scope: !11000)
!11002 = !DILocation(line: 8911, column: 17, scope: !10995)
!11003 = !DILocation(line: 8912, column: 3, scope: !11000)
!11004 = !DILocation(line: 8915, column: 24, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 8915, column: 17)
!11006 = !DILocation(line: 8915, column: 17, scope: !11005)
!11007 = !DILocation(line: 8915, column: 17, scope: !11000)
!11008 = !DILocation(line: 8916, column: 3, scope: !11005)
!11009 = !DILocation(line: 8919, column: 24, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 8919, column: 17)
!11011 = !DILocation(line: 8919, column: 17, scope: !11010)
!11012 = !DILocation(line: 8919, column: 17, scope: !11005)
!11013 = !DILocation(line: 8920, column: 3, scope: !11010)
!11014 = !DILocation(line: 8923, column: 24, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 8923, column: 17)
!11016 = !DILocation(line: 8923, column: 17, scope: !11015)
!11017 = !DILocation(line: 8923, column: 17, scope: !11010)
!11018 = !DILocation(line: 8924, column: 3, scope: !11015)
!11019 = !DILocation(line: 8928, column: 24, scope: !11015)
!11020 = !DILocation(line: 0, scope: !10567)
!11021 = !DILocation(line: 0, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 8937, column: 12)
!11023 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 8935, column: 7)
!11024 = !DILocation(line: 0, scope: !11023)
!11025 = !DILocation(line: 8941, column: 14, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 8941, column: 7)
!11027 = !DILocation(line: 8941, column: 7, scope: !11026)
!11028 = !DILocation(line: 8941, column: 7, scope: !10567)
!11029 = !DILocation(line: 8942, column: 5, scope: !11026)
!11030 = !DILocation(line: 8946, column: 14, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 8946, column: 7)
!11032 = !DILocation(line: 8946, column: 7, scope: !11031)
!11033 = !DILocation(line: 8946, column: 7, scope: !10567)
!11034 = !DILocation(line: 8947, column: 5, scope: !11031)
!11035 = !DILocation(line: 8951, column: 19, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11031, file: !3, line: 8951, column: 12)
!11037 = !DILocation(line: 8951, column: 12, scope: !11036)
!11038 = !DILocation(line: 8951, column: 12, scope: !11031)
!11039 = !DILocation(line: 8952, column: 5, scope: !11036)
!11040 = !DILocation(line: 8956, column: 19, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 8956, column: 12)
!11042 = !DILocation(line: 8956, column: 12, scope: !11041)
!11043 = !DILocation(line: 8956, column: 12, scope: !11036)
!11044 = !DILocation(line: 8957, column: 5, scope: !11041)
!11045 = !DILocation(line: 8961, column: 19, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 8961, column: 12)
!11047 = !DILocation(line: 8961, column: 12, scope: !11046)
!11048 = !DILocation(line: 8961, column: 12, scope: !11041)
!11049 = !DILocation(line: 8962, column: 5, scope: !11046)
!11050 = !DILocation(line: 8966, column: 33, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 8966, column: 26)
!11052 = !DILocation(line: 8966, column: 26, scope: !11051)
!11053 = !DILocation(line: 8966, column: 26, scope: !11046)
!11054 = !DILocation(line: 8967, column: 19, scope: !11051)
!11055 = !DILocation(line: 8971, column: 33, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 8971, column: 26)
!11057 = !DILocation(line: 8971, column: 26, scope: !11056)
!11058 = !DILocation(line: 8971, column: 26, scope: !11051)
!11059 = !DILocation(line: 8972, column: 19, scope: !11056)
!11060 = !DILocation(line: 8976, column: 12, scope: !11056)
!11061 = !DILocation(line: 8977, column: 26, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 8976, column: 12)
!11063 = !DILocation(line: 8977, column: 5, scope: !11062)
!11064 = !DILocation(line: 8979, column: 26, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 8978, column: 12)
!11066 = !DILocation(line: 8979, column: 5, scope: !11065)
!11067 = !DILocation(line: 8981, column: 26, scope: !11065)
!11068 = !DILocation(line: 8983, column: 21, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8983, column: 12)
!11070 = !DILocation(line: 8983, column: 13, scope: !11069)
!11071 = !DILocation(line: 8983, column: 12, scope: !10568)
!11072 = !DILocation(line: 8984, column: 3, scope: !11069)
!11073 = !DILocation(line: 8987, column: 8, scope: !10568)
!11074 = !DILocation(line: 8989, column: 8, scope: !10568)
!11075 = !DILocation(line: 0, scope: !10571)
!11076 = !DILocation(line: 0, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 8994, column: 7)
!11078 = !DILocation(line: 8998, column: 28, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 8998, column: 21)
!11080 = !DILocation(line: 8998, column: 21, scope: !11079)
!11081 = !DILocation(line: 8998, column: 21, scope: !10571)
!11082 = !DILocation(line: 8999, column: 19, scope: !11079)
!11083 = !DILocation(line: 9003, column: 14, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 9003, column: 12)
!11085 = !DILocation(line: 9003, column: 12, scope: !11079)
!11086 = !DILocation(line: 9004, column: 28, scope: !11084)
!11087 = !DILocation(line: 9004, column: 7, scope: !11084)
!11088 = !DILocation(line: 9006, column: 28, scope: !11084)
!11089 = !DILocation(line: 9008, column: 21, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 9008, column: 12)
!11091 = !DILocation(line: 9008, column: 13, scope: !11090)
!11092 = !DILocation(line: 9008, column: 12, scope: !10568)
!11093 = !DILocation(line: 9009, column: 3, scope: !11090)
!11094 = !DILocation(line: 9011, column: 8, scope: !10568)
!11095 = !DILocation(line: 9013, column: 8, scope: !10568)
!11096 = !DILocation(line: 9026, column: 14, scope: !10576)
!11097 = !DILocation(line: 9026, column: 7, scope: !10576)
!11098 = !DILocation(line: 9026, column: 19, scope: !10576)
!11099 = !DILocation(line: 9026, column: 29, scope: !10576)
!11100 = !DILocation(line: 9026, column: 43, scope: !10576)
!11101 = !DILocation(line: 9027, column: 7, scope: !10576)
!11102 = !DILocation(line: 9027, column: 17, scope: !10576)
!11103 = !DILocation(line: 9027, column: 10, scope: !10576)
!11104 = !DILocation(line: 9027, column: 24, scope: !10576)
!11105 = !DILocation(line: 9027, column: 34, scope: !10576)
!11106 = !DILocation(line: 9027, column: 27, scope: !10576)
!11107 = !DILocation(line: 9027, column: 42, scope: !10576)
!11108 = !DILocation(line: 9027, column: 52, scope: !10576)
!11109 = !DILocation(line: 9027, column: 45, scope: !10576)
!11110 = !DILocation(line: 9028, column: 7, scope: !10576)
!11111 = !DILocation(line: 9028, column: 17, scope: !10576)
!11112 = !DILocation(line: 9028, column: 10, scope: !10576)
!11113 = !DILocation(line: 9028, column: 28, scope: !10576)
!11114 = !DILocation(line: 9028, column: 38, scope: !10576)
!11115 = !DILocation(line: 9028, column: 31, scope: !10576)
!11116 = !DILocation(line: 9026, column: 7, scope: !10552)
!11117 = !DILocation(line: 9029, column: 5, scope: !10576)
!11118 = !DILocation(line: 9030, column: 12, scope: !10575)
!11119 = !DILocation(line: 9030, column: 29, scope: !10575)
!11120 = !DILocation(line: 9030, column: 12, scope: !10576)
!11121 = !DILocation(line: 9032, column: 11, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 9032, column: 11)
!11123 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 9031, column: 5)
!11124 = !DILocation(line: 9032, column: 31, scope: !11122)
!11125 = !DILocation(line: 9032, column: 28, scope: !11122)
!11126 = !DILocation(line: 9032, column: 11, scope: !11123)
!11127 = !DILocation(line: 9036, column: 16, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 9035, column: 2)
!11129 = !DILocation(line: 9037, column: 23, scope: !11128)
!11130 = !DILocation(line: 9037, column: 11, scope: !11128)
!11131 = !DILocation(line: 9037, column: 21, scope: !11128)
!11132 = !DILocation(line: 9038, column: 21, scope: !11128)
!11133 = !DILocation(line: 9039, column: 31, scope: !11128)
!11134 = !DILocation(line: 9039, column: 29, scope: !11128)
!11135 = !DILocation(line: 9043, column: 8, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 9043, column: 8)
!11137 = !DILocation(line: 9044, column: 8, scope: !11136)
!11138 = !DILocation(line: 9044, column: 11, scope: !11136)
!11139 = !DILocation(line: 9044, column: 48, scope: !11136)
!11140 = !DILocation(line: 9043, column: 8, scope: !11128)
!11141 = !DILocation(line: 9045, column: 6, scope: !11136)
!11142 = !DILocation(line: 9051, column: 8, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 9051, column: 8)
!11144 = !DILocation(line: 9051, column: 27, scope: !11143)
!11145 = !DILocation(line: 9051, column: 45, scope: !11143)
!11146 = !DILocation(line: 9051, column: 24, scope: !11143)
!11147 = !DILocation(line: 9052, column: 6, scope: !11143)
!11148 = !DILocation(line: 9055, column: 29, scope: !10574)
!11149 = !DILocation(line: 9055, column: 12, scope: !10575)
!11150 = !DILocation(line: 9057, column: 16, scope: !10573)
!11151 = !DILocation(line: 0, scope: !10573)
!11152 = !DILocation(line: 9058, column: 12, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 9058, column: 11)
!11154 = !DILocation(line: 9058, column: 14, scope: !11153)
!11155 = !DILocation(line: 9058, column: 17, scope: !11153)
!11156 = !DILocation(line: 9058, column: 31, scope: !11153)
!11157 = !DILocation(line: 9058, column: 11, scope: !10573)
!11158 = !DILocation(line: 9059, column: 2, scope: !11153)
!11159 = !DILocation(line: 9060, column: 16, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 9060, column: 16)
!11161 = !DILocation(line: 9060, column: 33, scope: !11160)
!11162 = !DILocation(line: 9060, column: 30, scope: !11160)
!11163 = !DILocation(line: 9060, column: 16, scope: !11153)
!11164 = !DILocation(line: 9063, column: 14, scope: !11160)
!11165 = !DILocation(line: 9065, column: 29, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 9065, column: 12)
!11167 = !DILocation(line: 9065, column: 12, scope: !10574)
!11168 = !DILocation(line: 9067, column: 16, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 9067, column: 11)
!11170 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 9066, column: 5)
!11171 = !DILocation(line: 9067, column: 21, scope: !11169)
!11172 = !DILocation(line: 9067, column: 36, scope: !11169)
!11173 = !DILocation(line: 9067, column: 49, scope: !11169)
!11174 = !DILocation(line: 9067, column: 11, scope: !11170)
!11175 = !DILocation(line: 9068, column: 23, scope: !11169)
!11176 = !DILocation(line: 9068, column: 2, scope: !11169)
!11177 = !DILocation(line: 9069, column: 21, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 9069, column: 11)
!11179 = !DILocation(line: 9069, column: 11, scope: !11170)
!11180 = !DILocation(line: 9071, column: 21, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 9070, column: 2)
!11182 = !DILocation(line: 9072, column: 13, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 9072, column: 8)
!11184 = !DILocation(line: 9072, column: 8, scope: !11183)
!11185 = !DILocation(line: 9072, column: 8, scope: !11181)
!11186 = !DILocation(line: 9074, column: 19, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 9074, column: 12)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 9073, column: 6)
!11189 = !DILocation(line: 9074, column: 12, scope: !11187)
!11190 = !DILocation(line: 9074, column: 12, scope: !11188)
!11191 = !DILocation(line: 9075, column: 17, scope: !11187)
!11192 = !DILocation(line: 9075, column: 15, scope: !11187)
!11193 = !DILocation(line: 9079, column: 35, scope: !11188)
!11194 = !DILocation(line: 9075, column: 3, scope: !11187)
!11195 = !DILocation(line: 9078, column: 15, scope: !11187)
!11196 = !DILocation(line: 9079, column: 43, scope: !11188)
!11197 = !DILocation(line: 9080, column: 6, scope: !11188)
!11198 = !DILocation(line: 9082, column: 19, scope: !11170)
!11199 = !DILocation(line: 9083, column: 5, scope: !11170)
!11200 = !DILocation(line: 9086, column: 1, scope: !10552)
!11201 = distinct !DISubprogram(name: "declspecs_add_scspec", scope: !3, file: !3, line: 9092, type: !10518, scopeLine: 9093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11202)
!11202 = !{!11203, !11204, !11205, !11206, !11207}
!11203 = !DILocalVariable(name: "specs", arg: 1, scope: !11201, file: !3, line: 9092, type: !2190)
!11204 = !DILocalVariable(name: "scspec", arg: 2, scope: !11201, file: !3, line: 9092, type: !672)
!11205 = !DILocalVariable(name: "i", scope: !11201, file: !3, line: 9094, type: !397)
!11206 = !DILocalVariable(name: "n", scope: !11201, file: !3, line: 9095, type: !582)
!11207 = !DILocalVariable(name: "dupe", scope: !11201, file: !3, line: 9096, type: !619)
!11208 = !DILocation(line: 0, scope: !11201)
!11209 = !DILocation(line: 9097, column: 10, scope: !11201)
!11210 = !DILocation(line: 9097, column: 27, scope: !11201)
!11211 = !DILocation(line: 9098, column: 3, scope: !11201)
!11212 = !DILocation(line: 9101, column: 14, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 9101, column: 7)
!11214 = !DILocation(line: 9100, column: 7, scope: !11201)
!11215 = !DILocation(line: 9101, column: 7, scope: !11213)
!11216 = !DILocation(line: 9101, column: 7, scope: !11201)
!11217 = !DILocation(line: 9102, column: 5, scope: !11213)
!11218 = !DILocation(line: 9104, column: 3, scope: !11201)
!11219 = !DILocation(line: 9112, column: 14, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 9105, column: 5)
!11221 = !DILocation(line: 9112, column: 23, scope: !11220)
!11222 = !DILocation(line: 9113, column: 7, scope: !11220)
!11223 = !DILocation(line: 9115, column: 21, scope: !11220)
!11224 = !DILocation(line: 9115, column: 14, scope: !11220)
!11225 = !DILocation(line: 9116, column: 18, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 9116, column: 11)
!11227 = !DILocation(line: 9116, column: 32, scope: !11226)
!11228 = !DILocation(line: 9116, column: 11, scope: !11220)
!11229 = !DILocation(line: 9117, column: 2, scope: !11226)
!11230 = !DILocation(line: 9118, column: 37, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 9118, column: 16)
!11232 = !DILocation(line: 9118, column: 16, scope: !11226)
!11233 = !DILocation(line: 9119, column: 2, scope: !11231)
!11234 = !DILocation(line: 9120, column: 37, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 9120, column: 16)
!11236 = !DILocation(line: 9120, column: 16, scope: !11231)
!11237 = !DILocation(line: 9121, column: 2, scope: !11235)
!11238 = !DILocation(line: 9123, column: 18, scope: !11235)
!11239 = !DILocation(line: 9131, column: 18, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 9131, column: 11)
!11241 = !DILocation(line: 9131, column: 11, scope: !11240)
!11242 = !DILocation(line: 9131, column: 11, scope: !11220)
!11243 = !DILocation(line: 9132, column: 2, scope: !11240)
!11244 = !DILocation(line: 9136, column: 7, scope: !11220)
!11245 = !DILocation(line: 9140, column: 18, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 9140, column: 11)
!11247 = !DILocation(line: 9140, column: 11, scope: !11246)
!11248 = !DILocation(line: 9140, column: 11, scope: !11220)
!11249 = !DILocation(line: 9141, column: 2, scope: !11246)
!11250 = !DILocation(line: 9145, column: 7, scope: !11220)
!11251 = !DILocation(line: 9147, column: 7, scope: !11220)
!11252 = !DILocation(line: 9148, column: 5, scope: !11220)
!11253 = !DILocation(line: 9149, column: 9, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 9149, column: 7)
!11255 = !DILocation(line: 9149, column: 21, scope: !11254)
!11256 = !DILocation(line: 9149, column: 36, scope: !11254)
!11257 = !DILocation(line: 9149, column: 26, scope: !11254)
!11258 = !DILocation(line: 9149, column: 7, scope: !11201)
!11259 = !DILocation(line: 9151, column: 7, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 9151, column: 7)
!11261 = !DILocation(line: 9151, column: 7, scope: !11201)
!11262 = !DILocation(line: 9152, column: 5, scope: !11260)
!11263 = !DILocation(line: 9153, column: 7, scope: !11201)
!11264 = !DILocation(line: 9155, column: 18, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 9155, column: 11)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 9154, column: 5)
!11267 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 9153, column: 7)
!11268 = !DILocation(line: 9155, column: 32, scope: !11265)
!11269 = !DILocation(line: 9155, column: 44, scope: !11265)
!11270 = !DILocation(line: 9155, column: 49, scope: !11265)
!11271 = !DILocation(line: 9155, column: 11, scope: !11266)
!11272 = !DILocation(line: 9157, column: 4, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 9156, column: 2)
!11274 = !DILocation(line: 9158, column: 2, scope: !11273)
!11275 = !DILocation(line: 9161, column: 25, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 9160, column: 2)
!11277 = !DILocation(line: 9162, column: 24, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 9162, column: 8)
!11279 = !DILocation(line: 9162, column: 53, scope: !11278)
!11280 = !DILocation(line: 9162, column: 46, scope: !11278)
!11281 = !DILocation(line: 9162, column: 8, scope: !11276)
!11282 = !DILocation(line: 9164, column: 8, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 9163, column: 6)
!11284 = !DILocation(line: 9165, column: 24, scope: !11283)
!11285 = !DILocation(line: 9166, column: 6, scope: !11283)
!11286 = !DILocation(line: 9169, column: 3, scope: !11201)
!11287 = distinct !DISubprogram(name: "declspecs_add_attrs", scope: !3, file: !3, line: 9176, type: !10518, scopeLine: 9177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11288)
!11288 = !{!11289, !11290}
!11289 = !DILocalVariable(name: "specs", arg: 1, scope: !11287, file: !3, line: 9176, type: !2190)
!11290 = !DILocalVariable(name: "attrs", arg: 2, scope: !11287, file: !3, line: 9176, type: !672)
!11291 = !DILocation(line: 0, scope: !11287)
!11292 = !DILocation(line: 9178, column: 41, scope: !11287)
!11293 = !DILocation(line: 9178, column: 18, scope: !11287)
!11294 = !DILocation(line: 9178, column: 16, scope: !11287)
!11295 = !DILocation(line: 9179, column: 10, scope: !11287)
!11296 = !DILocation(line: 9179, column: 27, scope: !11287)
!11297 = !DILocation(line: 9180, column: 3, scope: !11287)
!11298 = distinct !DISubprogram(name: "finish_declspecs", scope: !3, file: !3, line: 9190, type: !11299, scopeLine: 9191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11301)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!2190, !2190}
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "specs", arg: 1, scope: !11298, file: !3, line: 9190, type: !2190)
!11303 = !DILocation(line: 0, scope: !11298)
!11304 = !DILocation(line: 9194, column: 14, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 9194, column: 7)
!11306 = !DILocation(line: 9194, column: 19, scope: !11305)
!11307 = !DILocation(line: 9194, column: 7, scope: !11298)
!11308 = !DILocation(line: 9196, column: 7, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 9195, column: 5)
!11310 = !DILocation(line: 9207, column: 14, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 9207, column: 7)
!11312 = !DILocation(line: 9207, column: 28, scope: !11311)
!11313 = !DILocation(line: 9207, column: 7, scope: !11298)
!11314 = !DILocation(line: 9209, column: 18, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 9209, column: 11)
!11316 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 9208, column: 5)
!11317 = !DILocation(line: 9209, column: 11, scope: !11315)
!11318 = !DILocation(line: 9209, column: 11, scope: !11316)
!11319 = !DILocation(line: 9211, column: 4, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 9210, column: 2)
!11321 = !DILocation(line: 9212, column: 17, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 9212, column: 8)
!11323 = !DILocation(line: 9212, column: 9, scope: !11322)
!11324 = !DILocation(line: 9212, column: 8, scope: !11320)
!11325 = !DILocation(line: 9213, column: 6, scope: !11322)
!11326 = !DILocation(line: 9214, column: 25, scope: !11320)
!11327 = !DILocation(line: 9215, column: 2, scope: !11320)
!11328 = !DILocation(line: 9216, column: 23, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 9216, column: 16)
!11330 = !DILocation(line: 9216, column: 16, scope: !11329)
!11331 = !DILocation(line: 9216, column: 30, scope: !11329)
!11332 = !DILocation(line: 9216, column: 40, scope: !11329)
!11333 = !DILocation(line: 9216, column: 33, scope: !11329)
!11334 = !DILocation(line: 9217, column: 9, scope: !11329)
!11335 = !DILocation(line: 9217, column: 19, scope: !11329)
!11336 = !DILocation(line: 9217, column: 12, scope: !11329)
!11337 = !DILocation(line: 9217, column: 28, scope: !11329)
!11338 = !DILocation(line: 9217, column: 38, scope: !11329)
!11339 = !DILocation(line: 9217, column: 31, scope: !11329)
!11340 = !DILocation(line: 9216, column: 16, scope: !11315)
!11341 = !DILocation(line: 9219, column: 25, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 9218, column: 2)
!11343 = !DILocation(line: 9220, column: 2, scope: !11342)
!11344 = !DILocation(line: 9221, column: 23, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 9221, column: 16)
!11346 = !DILocation(line: 9221, column: 16, scope: !11345)
!11347 = !DILocation(line: 9221, column: 16, scope: !11329)
!11348 = !DILocation(line: 9223, column: 25, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 9222, column: 2)
!11350 = !DILocation(line: 9224, column: 13, scope: !11349)
!11351 = !DILocation(line: 9224, column: 4, scope: !11349)
!11352 = !DILocation(line: 9244, column: 18, scope: !11298)
!11353 = !DILocation(line: 9227, column: 2, scope: !11349)
!11354 = !DILocation(line: 9230, column: 25, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 9229, column: 2)
!11356 = !DILocation(line: 9231, column: 11, scope: !11355)
!11357 = !DILocation(line: 9231, column: 25, scope: !11355)
!11358 = !DILocation(line: 9241, column: 37, scope: !11298)
!11359 = !DILocation(line: 9241, column: 10, scope: !11298)
!11360 = !DILocation(line: 9241, column: 28, scope: !11298)
!11361 = !DILocation(line: 9244, column: 3, scope: !11298)
!11362 = !DILocation(line: 9247, column: 7, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 9245, column: 5)
!11364 = !DILocation(line: 9250, column: 21, scope: !11363)
!11365 = !DILocation(line: 9250, column: 19, scope: !11363)
!11366 = !DILocation(line: 9251, column: 7, scope: !11363)
!11367 = !DILocation(line: 9253, column: 7, scope: !11363)
!11368 = !DILocation(line: 9256, column: 21, scope: !11363)
!11369 = !DILocation(line: 9256, column: 19, scope: !11363)
!11370 = !DILocation(line: 9257, column: 7, scope: !11363)
!11371 = !DILocation(line: 9259, column: 7, scope: !11363)
!11372 = !DILocation(line: 9260, column: 7, scope: !11363)
!11373 = !DILocation(line: 9261, column: 18, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9261, column: 11)
!11375 = !DILocation(line: 9261, column: 11, scope: !11374)
!11376 = !DILocation(line: 9261, column: 11, scope: !11363)
!11377 = !DILocation(line: 9262, column: 16, scope: !11374)
!11378 = !DILocation(line: 9262, column: 14, scope: !11374)
!11379 = !DILocation(line: 9262, column: 2, scope: !11374)
!11380 = !DILocation(line: 9263, column: 23, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 9263, column: 16)
!11382 = !DILocation(line: 9263, column: 16, scope: !11381)
!11383 = !DILocation(line: 9263, column: 16, scope: !11374)
!11384 = !DILocation(line: 9264, column: 16, scope: !11381)
!11385 = !DILocation(line: 9264, column: 14, scope: !11381)
!11386 = !DILocation(line: 9264, column: 2, scope: !11381)
!11387 = !DILocation(line: 9266, column: 16, scope: !11381)
!11388 = !DILocation(line: 9266, column: 14, scope: !11381)
!11389 = !DILocation(line: 9267, column: 18, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9267, column: 11)
!11391 = !DILocation(line: 9267, column: 11, scope: !11390)
!11392 = !DILocation(line: 9267, column: 11, scope: !11363)
!11393 = !DILocation(line: 9269, column: 13, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 9268, column: 2)
!11395 = !DILocation(line: 9269, column: 4, scope: !11394)
!11396 = !DILocation(line: 9271, column: 45, scope: !11394)
!11397 = !DILocation(line: 9271, column: 18, scope: !11394)
!11398 = !DILocation(line: 9271, column: 16, scope: !11394)
!11399 = !DILocation(line: 9272, column: 2, scope: !11394)
!11400 = !DILocation(line: 9275, column: 7, scope: !11363)
!11401 = !DILocation(line: 9276, column: 7, scope: !11363)
!11402 = !DILocation(line: 9277, column: 18, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9277, column: 11)
!11404 = !DILocation(line: 9277, column: 11, scope: !11403)
!11405 = !DILocation(line: 9277, column: 11, scope: !11363)
!11406 = !DILocation(line: 9278, column: 24, scope: !11403)
!11407 = !DILocation(line: 9278, column: 17, scope: !11403)
!11408 = !DILocation(line: 9278, column: 14, scope: !11403)
!11409 = !DILocation(line: 9278, column: 2, scope: !11403)
!11410 = !DILocation(line: 9281, column: 23, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 9281, column: 16)
!11412 = !DILocation(line: 9281, column: 16, scope: !11411)
!11413 = !DILocation(line: 9281, column: 16, scope: !11403)
!11414 = !DILocation(line: 9282, column: 24, scope: !11411)
!11415 = !DILocation(line: 9282, column: 17, scope: !11411)
!11416 = !DILocation(line: 9282, column: 14, scope: !11411)
!11417 = !DILocation(line: 9282, column: 2, scope: !11411)
!11418 = !DILocation(line: 9285, column: 23, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 9285, column: 16)
!11420 = !DILocation(line: 9285, column: 16, scope: !11419)
!11421 = !DILocation(line: 0, scope: !11419)
!11422 = !DILocation(line: 9285, column: 16, scope: !11411)
!11423 = !DILocation(line: 9286, column: 17, scope: !11419)
!11424 = !DILocation(line: 9286, column: 14, scope: !11419)
!11425 = !DILocation(line: 9286, column: 2, scope: !11419)
!11426 = !DILocation(line: 9290, column: 17, scope: !11419)
!11427 = !DILocation(line: 9290, column: 14, scope: !11419)
!11428 = !DILocation(line: 9293, column: 18, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9293, column: 11)
!11430 = !DILocation(line: 9293, column: 11, scope: !11429)
!11431 = !DILocation(line: 9293, column: 11, scope: !11363)
!11432 = !DILocation(line: 9295, column: 13, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 9294, column: 2)
!11434 = !DILocation(line: 9295, column: 4, scope: !11433)
!11435 = !DILocation(line: 9297, column: 45, scope: !11433)
!11436 = !DILocation(line: 9297, column: 18, scope: !11433)
!11437 = !DILocation(line: 9297, column: 16, scope: !11433)
!11438 = !DILocation(line: 9298, column: 2, scope: !11433)
!11439 = !DILocation(line: 9301, column: 7, scope: !11363)
!11440 = !DILocation(line: 9303, column: 29, scope: !11363)
!11441 = !DILocation(line: 9303, column: 22, scope: !11363)
!11442 = !DILocation(line: 9303, column: 19, scope: !11363)
!11443 = !DILocation(line: 9306, column: 7, scope: !11363)
!11444 = !DILocation(line: 9308, column: 7, scope: !11363)
!11445 = !DILocation(line: 9310, column: 18, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9310, column: 11)
!11447 = !DILocation(line: 9310, column: 11, scope: !11446)
!11448 = !DILocation(line: 0, scope: !11446)
!11449 = !DILocation(line: 9310, column: 11, scope: !11363)
!11450 = !DILocation(line: 9312, column: 19, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 9311, column: 2)
!11452 = !DILocation(line: 9312, column: 16, scope: !11451)
!11453 = !DILocation(line: 9315, column: 2, scope: !11451)
!11454 = !DILocation(line: 9318, column: 19, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 9317, column: 2)
!11456 = !DILocation(line: 9318, column: 16, scope: !11455)
!11457 = !DILocation(line: 9326, column: 7, scope: !11363)
!11458 = !DILocation(line: 9328, column: 18, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9328, column: 11)
!11460 = !DILocation(line: 9328, column: 32, scope: !11459)
!11461 = !DILocation(line: 9328, column: 11, scope: !11363)
!11462 = !DILocation(line: 9329, column: 16, scope: !11459)
!11463 = !DILocation(line: 9329, column: 14, scope: !11459)
!11464 = !DILocation(line: 9329, column: 2, scope: !11459)
!11465 = !DILocation(line: 9330, column: 37, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 9330, column: 16)
!11467 = !DILocation(line: 9330, column: 16, scope: !11459)
!11468 = !DILocation(line: 9331, column: 16, scope: !11466)
!11469 = !DILocation(line: 9331, column: 14, scope: !11466)
!11470 = !DILocation(line: 9331, column: 2, scope: !11466)
!11471 = !DILocation(line: 9333, column: 16, scope: !11466)
!11472 = !DILocation(line: 9333, column: 14, scope: !11466)
!11473 = !DILocation(line: 9336, column: 7, scope: !11363)
!11474 = !DILocation(line: 9337, column: 20, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9337, column: 11)
!11476 = !DILocation(line: 9337, column: 12, scope: !11475)
!11477 = !DILocation(line: 9337, column: 11, scope: !11363)
!11478 = !DILocation(line: 9338, column: 16, scope: !11475)
!11479 = !DILocation(line: 9338, column: 14, scope: !11475)
!11480 = !DILocation(line: 9338, column: 2, scope: !11475)
!11481 = !DILocation(line: 9339, column: 23, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 9339, column: 16)
!11483 = !DILocation(line: 9339, column: 16, scope: !11482)
!11484 = !DILocation(line: 0, scope: !11482)
!11485 = !DILocation(line: 9339, column: 16, scope: !11475)
!11486 = !DILocation(line: 9341, column: 8, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 9340, column: 2)
!11488 = !DILocation(line: 9342, column: 27, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 9341, column: 8)
!11490 = !DILocation(line: 9342, column: 20, scope: !11489)
!11491 = !DILocation(line: 9342, column: 18, scope: !11489)
!11492 = !DILocation(line: 9342, column: 6, scope: !11489)
!11493 = !DILocation(line: 9345, column: 20, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 9345, column: 13)
!11495 = !DILocation(line: 9345, column: 13, scope: !11494)
!11496 = !DILocation(line: 9345, column: 13, scope: !11489)
!11497 = !DILocation(line: 9346, column: 27, scope: !11494)
!11498 = !DILocation(line: 9346, column: 20, scope: !11494)
!11499 = !DILocation(line: 9346, column: 18, scope: !11494)
!11500 = !DILocation(line: 9346, column: 6, scope: !11494)
!11501 = !DILocation(line: 9349, column: 20, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 9349, column: 13)
!11503 = !DILocation(line: 9349, column: 13, scope: !11502)
!11504 = !DILocation(line: 0, scope: !11502)
!11505 = !DILocation(line: 9349, column: 13, scope: !11494)
!11506 = !DILocation(line: 9350, column: 20, scope: !11502)
!11507 = !DILocation(line: 9350, column: 18, scope: !11502)
!11508 = !DILocation(line: 9350, column: 6, scope: !11502)
!11509 = !DILocation(line: 9354, column: 20, scope: !11502)
!11510 = !DILocation(line: 9354, column: 18, scope: !11502)
!11511 = !DILocation(line: 9360, column: 8, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 9359, column: 2)
!11513 = !DILocation(line: 9361, column: 27, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 9360, column: 8)
!11515 = !DILocation(line: 9361, column: 20, scope: !11514)
!11516 = !DILocation(line: 9361, column: 18, scope: !11514)
!11517 = !DILocation(line: 9361, column: 6, scope: !11514)
!11518 = !DILocation(line: 9364, column: 20, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 9364, column: 13)
!11520 = !DILocation(line: 9364, column: 13, scope: !11519)
!11521 = !DILocation(line: 9364, column: 13, scope: !11514)
!11522 = !DILocation(line: 9365, column: 27, scope: !11519)
!11523 = !DILocation(line: 9365, column: 20, scope: !11519)
!11524 = !DILocation(line: 9365, column: 18, scope: !11519)
!11525 = !DILocation(line: 9365, column: 6, scope: !11519)
!11526 = !DILocation(line: 9368, column: 20, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 9368, column: 13)
!11528 = !DILocation(line: 9368, column: 13, scope: !11527)
!11529 = !DILocation(line: 0, scope: !11527)
!11530 = !DILocation(line: 9368, column: 13, scope: !11519)
!11531 = !DILocation(line: 9369, column: 20, scope: !11527)
!11532 = !DILocation(line: 9369, column: 18, scope: !11527)
!11533 = !DILocation(line: 9369, column: 6, scope: !11527)
!11534 = !DILocation(line: 9373, column: 20, scope: !11527)
!11535 = !DILocation(line: 9373, column: 18, scope: !11527)
!11536 = !DILocation(line: 9379, column: 7, scope: !11363)
!11537 = !DILocation(line: 9380, column: 20, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 9380, column: 11)
!11539 = !DILocation(line: 9380, column: 12, scope: !11538)
!11540 = !DILocation(line: 9380, column: 11, scope: !11363)
!11541 = !DILocation(line: 9381, column: 16, scope: !11538)
!11542 = !DILocation(line: 9381, column: 14, scope: !11538)
!11543 = !DILocation(line: 9381, column: 2, scope: !11538)
!11544 = !DILocation(line: 9382, column: 23, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 9382, column: 16)
!11546 = !DILocation(line: 9382, column: 16, scope: !11545)
!11547 = !DILocation(line: 0, scope: !11545)
!11548 = !DILocation(line: 9382, column: 16, scope: !11538)
!11549 = !DILocation(line: 9384, column: 8, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 9383, column: 2)
!11551 = !DILocation(line: 9385, column: 27, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 9384, column: 8)
!11553 = !DILocation(line: 9385, column: 20, scope: !11552)
!11554 = !DILocation(line: 9385, column: 18, scope: !11552)
!11555 = !DILocation(line: 9385, column: 6, scope: !11552)
!11556 = !DILocation(line: 9388, column: 20, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 9388, column: 13)
!11558 = !DILocation(line: 9388, column: 13, scope: !11557)
!11559 = !DILocation(line: 9388, column: 13, scope: !11552)
!11560 = !DILocation(line: 9389, column: 27, scope: !11557)
!11561 = !DILocation(line: 9389, column: 20, scope: !11557)
!11562 = !DILocation(line: 9389, column: 18, scope: !11557)
!11563 = !DILocation(line: 9389, column: 6, scope: !11557)
!11564 = !DILocation(line: 9392, column: 20, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 9392, column: 13)
!11566 = !DILocation(line: 9392, column: 13, scope: !11565)
!11567 = !DILocation(line: 0, scope: !11565)
!11568 = !DILocation(line: 9392, column: 13, scope: !11557)
!11569 = !DILocation(line: 9393, column: 20, scope: !11565)
!11570 = !DILocation(line: 9393, column: 18, scope: !11565)
!11571 = !DILocation(line: 9393, column: 6, scope: !11565)
!11572 = !DILocation(line: 9397, column: 20, scope: !11565)
!11573 = !DILocation(line: 9397, column: 18, scope: !11565)
!11574 = !DILocation(line: 9403, column: 8, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 9402, column: 2)
!11576 = !DILocation(line: 9404, column: 27, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 9403, column: 8)
!11578 = !DILocation(line: 9404, column: 20, scope: !11577)
!11579 = !DILocation(line: 9404, column: 18, scope: !11577)
!11580 = !DILocation(line: 9404, column: 6, scope: !11577)
!11581 = !DILocation(line: 9407, column: 20, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11577, file: !3, line: 9407, column: 13)
!11583 = !DILocation(line: 9407, column: 13, scope: !11582)
!11584 = !DILocation(line: 9407, column: 13, scope: !11577)
!11585 = !DILocation(line: 9408, column: 27, scope: !11582)
!11586 = !DILocation(line: 9408, column: 20, scope: !11582)
!11587 = !DILocation(line: 9408, column: 18, scope: !11582)
!11588 = !DILocation(line: 9408, column: 6, scope: !11582)
!11589 = !DILocation(line: 9411, column: 20, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 9411, column: 13)
!11591 = !DILocation(line: 9411, column: 13, scope: !11590)
!11592 = !DILocation(line: 0, scope: !11590)
!11593 = !DILocation(line: 9411, column: 13, scope: !11582)
!11594 = !DILocation(line: 9412, column: 20, scope: !11590)
!11595 = !DILocation(line: 9412, column: 18, scope: !11590)
!11596 = !DILocation(line: 9412, column: 6, scope: !11590)
!11597 = !DILocation(line: 9416, column: 20, scope: !11590)
!11598 = !DILocation(line: 9416, column: 18, scope: !11590)
!11599 = !DILocation(line: 9422, column: 7, scope: !11363)
!11600 = !DILocation(line: 9423, column: 5, scope: !11363)
!11601 = !DILocation(line: 9426, column: 1, scope: !11298)
!11602 = distinct !DISubprogram(name: "c_write_global_declarations", scope: !3, file: !3, line: 9485, type: !2978, scopeLine: 9486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11603)
!11603 = !{!11604, !11605, !11608, !11609}
!11604 = !DILocalVariable(name: "t", scope: !11602, file: !3, line: 9487, type: !672)
!11605 = !DILocalVariable(name: "tmp", scope: !11606, file: !3, line: 9505, type: !672)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 9504, column: 5)
!11607 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 9503, column: 7)
!11608 = !DILocalVariable(name: "flags", scope: !11606, file: !3, line: 9506, type: !620)
!11609 = !DILocalVariable(name: "stream", scope: !11606, file: !3, line: 9507, type: !2395)
!11610 = !DILocation(line: 9490, column: 7, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 9490, column: 7)
!11612 = !DILocation(line: 9495, column: 7, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 9495, column: 7)
!11614 = !DILocation(line: 9490, column: 7, scope: !11602)
!11615 = !DILocation(line: 9499, column: 15, scope: !11602)
!11616 = !DILocation(line: 9499, column: 13, scope: !11602)
!11617 = !DILocation(line: 9500, column: 18, scope: !11602)
!11618 = !DILocation(line: 9501, column: 3, scope: !11602)
!11619 = !DILocation(line: 9503, column: 7, scope: !11607)
!11620 = !DILocation(line: 9503, column: 7, scope: !11602)
!11621 = !DILocation(line: 9505, column: 18, scope: !11606)
!11622 = !DILocation(line: 0, scope: !11606)
!11623 = !DILocation(line: 9506, column: 7, scope: !11606)
!11624 = !DILocation(line: 9507, column: 23, scope: !11606)
!11625 = !DILocation(line: 9508, column: 11, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 9508, column: 11)
!11627 = !DILocation(line: 9508, column: 21, scope: !11626)
!11628 = !DILocation(line: 9508, column: 18, scope: !11626)
!11629 = !DILocation(line: 9510, column: 20, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 9509, column: 2)
!11631 = !DILocation(line: 9510, column: 26, scope: !11630)
!11632 = !DILocation(line: 9510, column: 4, scope: !11630)
!11633 = !DILocation(line: 9511, column: 4, scope: !11630)
!11634 = !DILocation(line: 9512, column: 2, scope: !11630)
!11635 = !DILocation(line: 9513, column: 5, scope: !11607)
!11636 = !DILocation(line: 9513, column: 5, scope: !11606)
!11637 = !DILocation(line: 9517, column: 8, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 9517, column: 3)
!11639 = !DILocation(line: 0, scope: !11638)
!11640 = !DILocation(line: 0, scope: !11602)
!11641 = !DILocation(line: 9517, column: 3, scope: !11638)
!11642 = !DILocation(line: 9518, column: 36, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 9517, column: 3)
!11644 = !DILocation(line: 9518, column: 5, scope: !11643)
!11645 = !DILocation(line: 9517, column: 42, scope: !11643)
!11646 = !DILocation(line: 9517, column: 3, scope: !11643)
!11647 = distinct !{!11647, !11641, !11648}
!11648 = !DILocation(line: 9518, column: 65, scope: !11638)
!11649 = !DILocation(line: 9519, column: 34, scope: !11602)
!11650 = !DILocation(line: 9519, column: 3, scope: !11602)
!11651 = !DILocation(line: 9523, column: 3, scope: !11602)
!11652 = !DILocation(line: 9527, column: 7, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 9527, column: 7)
!11654 = !DILocation(line: 9527, column: 18, scope: !11653)
!11655 = !DILocation(line: 9527, column: 23, scope: !11653)
!11656 = !DILocation(line: 9527, column: 26, scope: !11653)
!11657 = !DILocation(line: 9527, column: 37, scope: !11653)
!11658 = !DILocation(line: 9527, column: 7, scope: !11602)
!11659 = !DILocation(line: 9529, column: 7, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 9529, column: 7)
!11661 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 9529, column: 7)
!11662 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 9528, column: 5)
!11663 = !DILocation(line: 9529, column: 7, scope: !11661)
!11664 = !DILocation(line: 9530, column: 12, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 9530, column: 7)
!11666 = !DILocation(line: 0, scope: !11665)
!11667 = !DILocation(line: 9530, column: 7, scope: !11665)
!11668 = !DILocation(line: 9531, column: 33, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 9530, column: 7)
!11670 = !DILocation(line: 9531, column: 2, scope: !11669)
!11671 = !DILocation(line: 9530, column: 46, scope: !11669)
!11672 = !DILocation(line: 9530, column: 7, scope: !11669)
!11673 = distinct !{!11673, !11667, !11674}
!11674 = !DILocation(line: 9531, column: 62, scope: !11665)
!11675 = !DILocation(line: 9532, column: 38, scope: !11662)
!11676 = !DILocation(line: 9532, column: 7, scope: !11662)
!11677 = !DILocation(line: 9533, column: 7, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !3, line: 9533, column: 7)
!11679 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 9533, column: 7)
!11680 = !DILocation(line: 9533, column: 7, scope: !11679)
!11681 = !DILocation(line: 9536, column: 13, scope: !11602)
!11682 = !DILocation(line: 9537, column: 1, scope: !11602)
!11683 = distinct !DISubprogram(name: "c_write_global_declarations_1", scope: !3, file: !3, line: 9433, type: !2872, scopeLine: 9434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11684)
!11684 = !{!11685, !11686, !11687}
!11685 = !DILocalVariable(name: "globals", arg: 1, scope: !11683, file: !3, line: 9433, type: !672)
!11686 = !DILocalVariable(name: "decl", scope: !11683, file: !3, line: 9435, type: !672)
!11687 = !DILocalVariable(name: "reconsider", scope: !11683, file: !3, line: 9436, type: !619)
!11688 = !DILocation(line: 0, scope: !11683)
!11689 = !DILocation(line: 9439, column: 8, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 9439, column: 3)
!11691 = !DILocation(line: 0, scope: !11690)
!11692 = !DILocation(line: 9439, column: 3, scope: !11690)
!11693 = !DILocation(line: 9457, column: 3, scope: !11683)
!11694 = !DILocation(line: 9444, column: 11, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 9444, column: 11)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 9440, column: 5)
!11697 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 9439, column: 3)
!11698 = !DILocation(line: 9444, column: 28, scope: !11695)
!11699 = !DILocation(line: 9445, column: 4, scope: !11695)
!11700 = !DILocation(line: 9445, column: 7, scope: !11695)
!11701 = !DILocation(line: 9445, column: 27, scope: !11695)
!11702 = !DILocation(line: 9446, column: 4, scope: !11695)
!11703 = !DILocation(line: 9446, column: 7, scope: !11695)
!11704 = !DILocation(line: 9447, column: 4, scope: !11695)
!11705 = !DILocation(line: 9447, column: 8, scope: !11695)
!11706 = !DILocation(line: 9448, column: 4, scope: !11695)
!11707 = !DILocation(line: 9448, column: 7, scope: !11695)
!11708 = !DILocation(line: 9444, column: 11, scope: !11696)
!11709 = !DILocation(line: 9450, column: 13, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 9449, column: 2)
!11711 = !DILocation(line: 9450, column: 4, scope: !11710)
!11712 = !DILocation(line: 9451, column: 27, scope: !11710)
!11713 = !DILocation(line: 9452, column: 2, scope: !11710)
!11714 = !DILocation(line: 9454, column: 7, scope: !11696)
!11715 = !DILocation(line: 9439, column: 37, scope: !11697)
!11716 = !DILocation(line: 9439, column: 3, scope: !11697)
!11717 = distinct !{!11717, !11692, !11718}
!11718 = !DILocation(line: 9455, column: 5, scope: !11690)
!11719 = !DILocation(line: 9460, column: 12, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 9460, column: 7)
!11721 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 9458, column: 5)
!11722 = !DILocation(line: 0, scope: !11720)
!11723 = !DILocation(line: 0, scope: !11721)
!11724 = !DILocation(line: 9460, column: 7, scope: !11720)
!11725 = !DILocation(line: 9461, column: 16, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 9460, column: 7)
!11727 = !DILocation(line: 9461, column: 13, scope: !11726)
!11728 = !DILocation(line: 9460, column: 41, scope: !11726)
!11729 = !DILocation(line: 9460, column: 7, scope: !11726)
!11730 = distinct !{!11730, !11724, !11731}
!11731 = !DILocation(line: 9461, column: 49, scope: !11720)
!11732 = !DILocation(line: 9462, column: 5, scope: !11721)
!11733 = distinct !{!11733, !11693, !11734}
!11734 = !DILocation(line: 9463, column: 20, scope: !11683)
!11735 = !DILocation(line: 9465, column: 3, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 9465, column: 3)
!11737 = !DILocation(line: 0, scope: !11736)
!11738 = !DILocation(line: 9466, column: 5, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 9465, column: 3)
!11740 = !DILocation(line: 9465, column: 37, scope: !11739)
!11741 = !DILocation(line: 9465, column: 3, scope: !11739)
!11742 = distinct !{!11742, !11735, !11743}
!11743 = !DILocation(line: 9466, column: 37, scope: !11736)
!11744 = !DILocation(line: 9467, column: 1, scope: !11683)
!11745 = distinct !DISubprogram(name: "c_write_global_declarations_2", scope: !3, file: !3, line: 9473, type: !2872, scopeLine: 9474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11746)
!11746 = !{!11747, !11748}
!11747 = !DILocalVariable(name: "globals", arg: 1, scope: !11745, file: !3, line: 9473, type: !672)
!11748 = !DILocalVariable(name: "decl", scope: !11745, file: !3, line: 9475, type: !672)
!11749 = !DILocation(line: 0, scope: !11745)
!11750 = !DILocation(line: 9477, column: 8, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 9477, column: 3)
!11752 = !DILocation(line: 0, scope: !11751)
!11753 = !DILocation(line: 9477, column: 3, scope: !11751)
!11754 = !DILocation(line: 9478, column: 5, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11751, file: !3, line: 9477, column: 3)
!11756 = !DILocation(line: 9478, column: 18, scope: !11755)
!11757 = !DILocation(line: 9477, column: 38, scope: !11755)
!11758 = !DILocation(line: 9477, column: 3, scope: !11755)
!11759 = distinct !{!11759, !11753, !11760}
!11760 = !DILocation(line: 9478, column: 35, scope: !11751)
!11761 = !DILocation(line: 9479, column: 1, scope: !11745)
!11762 = distinct !DISubprogram(name: "gt_ggc_mx_c_inline_static", scope: !2280, file: !2280, line: 23, type: !1478, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11763)
!11763 = !{!11764, !11765, !11766}
!11764 = !DILocalVariable(name: "x_p", arg: 1, scope: !11762, file: !2280, line: 23, type: !624)
!11765 = !DILocalVariable(name: "x", scope: !11762, file: !2280, line: 25, type: !2129)
!11766 = !DILocalVariable(name: "xlimit", scope: !11762, file: !2280, line: 26, type: !2129)
!11767 = !DILocation(line: 0, scope: !11762)
!11768 = !DILocation(line: 25, column: 32, scope: !11762)
!11769 = !DILocation(line: 27, column: 3, scope: !11762)
!11770 = !DILocation(line: 27, column: 10, scope: !11762)
!11771 = !DILocation(line: 28, column: 24, scope: !11762)
!11772 = distinct !{!11772, !11769, !11773}
!11773 = !DILocation(line: 28, column: 28, scope: !11762)
!11774 = !DILocation(line: 29, column: 3, scope: !11762)
!11775 = !DILocation(line: 29, column: 12, scope: !11762)
!11776 = !DILocation(line: 31, column: 7, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !2280, line: 31, column: 7)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !2280, line: 31, column: 7)
!11779 = distinct !DILexicalBlock(scope: !11762, file: !2280, line: 30, column: 5)
!11780 = !DILocation(line: 31, column: 7, scope: !11778)
!11781 = !DILocation(line: 32, column: 7, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !2280, line: 32, column: 7)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !2280, line: 32, column: 7)
!11784 = !DILocation(line: 32, column: 7, scope: !11783)
!11785 = !DILocation(line: 33, column: 7, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !2280, line: 33, column: 7)
!11787 = distinct !DILexicalBlock(scope: !11779, file: !2280, line: 33, column: 7)
!11788 = !DILocation(line: 33, column: 7, scope: !11787)
!11789 = !DILocation(line: 34, column: 17, scope: !11779)
!11790 = distinct !{!11790, !11774, !11791}
!11791 = !DILocation(line: 35, column: 5, scope: !11762)
!11792 = !DILocation(line: 36, column: 1, scope: !11762)
!11793 = distinct !DISubprogram(name: "gt_ggc_mx_lang_tree_node", scope: !2280, file: !2280, line: 138, type: !1478, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11794)
!11794 = !{!11795, !11796, !11797, !11798, !11803, !11804, !11807, !11808, !11810, !11811, !11813}
!11795 = !DILocalVariable(name: "x_p", arg: 1, scope: !11793, file: !2280, line: 138, type: !624)
!11796 = !DILocalVariable(name: "x", scope: !11793, file: !2280, line: 140, type: !2225)
!11797 = !DILocalVariable(name: "xlimit", scope: !11793, file: !2280, line: 141, type: !2225)
!11798 = !DILocalVariable(name: "i1", scope: !11799, file: !2280, line: 433, type: !1107)
!11799 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 432, column: 15)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 150, column: 13)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !2280, line: 147, column: 9)
!11802 = distinct !DILexicalBlock(scope: !11793, file: !2280, line: 145, column: 5)
!11803 = !DILocalVariable(name: "l1", scope: !11799, file: !2280, line: 434, type: !1107)
!11804 = !DILocalVariable(name: "i2", scope: !11805, file: !2280, line: 448, type: !1107)
!11805 = distinct !DILexicalBlock(scope: !11806, file: !2280, line: 447, column: 19)
!11806 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 445, column: 17)
!11807 = !DILocalVariable(name: "l2", scope: !11805, file: !2280, line: 449, type: !1107)
!11808 = !DILocalVariable(name: "i3", scope: !11809, file: !2280, line: 487, type: !1107)
!11809 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 486, column: 15)
!11810 = !DILocalVariable(name: "l3", scope: !11809, file: !2280, line: 488, type: !1107)
!11811 = !DILocalVariable(name: "i4", scope: !11812, file: !2280, line: 511, type: !1107)
!11812 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 510, column: 15)
!11813 = !DILocalVariable(name: "l4", scope: !11812, file: !2280, line: 512, type: !1107)
!11814 = !DILocation(line: 0, scope: !11793)
!11815 = !DILocation(line: 140, column: 30, scope: !11793)
!11816 = !DILocation(line: 142, column: 3, scope: !11793)
!11817 = !DILocation(line: 142, column: 10, scope: !11793)
!11818 = !DILocation(line: 143, column: 14, scope: !11793)
!11819 = !DILocation(line: 143, column: 45, scope: !11793)
!11820 = !DILocation(line: 143, column: 88, scope: !11793)
!11821 = !DILocation(line: 143, column: 155, scope: !11793)
!11822 = distinct !{!11822, !11816, !11823}
!11823 = !DILocation(line: 143, column: 187, scope: !11793)
!11824 = !DILocation(line: 144, column: 3, scope: !11793)
!11825 = !DILocation(line: 144, column: 12, scope: !11793)
!11826 = !DILocation(line: 146, column: 15, scope: !11802)
!11827 = !DILocation(line: 146, column: 43, scope: !11802)
!11828 = !DILocation(line: 146, column: 7, scope: !11802)
!11829 = !DILocation(line: 149, column: 47, scope: !11801)
!11830 = !DILocation(line: 149, column: 19, scope: !11801)
!11831 = !DILocation(line: 149, column: 11, scope: !11801)
!11832 = !DILocation(line: 154, column: 15, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !2280, line: 154, column: 15)
!11834 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 154, column: 15)
!11835 = !DILocation(line: 154, column: 15, scope: !11834)
!11836 = !DILocation(line: 155, column: 15, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !2280, line: 155, column: 15)
!11838 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 155, column: 15)
!11839 = !DILocation(line: 155, column: 15, scope: !11838)
!11840 = !DILocation(line: 158, column: 15, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !2280, line: 158, column: 15)
!11842 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 158, column: 15)
!11843 = !DILocation(line: 158, column: 15, scope: !11842)
!11844 = !DILocation(line: 159, column: 15, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !2280, line: 159, column: 15)
!11846 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 159, column: 15)
!11847 = !DILocation(line: 159, column: 15, scope: !11846)
!11848 = !DILocation(line: 162, column: 15, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !2280, line: 162, column: 15)
!11850 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 162, column: 15)
!11851 = !DILocation(line: 162, column: 15, scope: !11850)
!11852 = !DILocation(line: 163, column: 15, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !2280, line: 163, column: 15)
!11854 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 163, column: 15)
!11855 = !DILocation(line: 163, column: 15, scope: !11854)
!11856 = !DILocation(line: 164, column: 15, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !2280, line: 164, column: 15)
!11858 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 164, column: 15)
!11859 = !DILocation(line: 164, column: 15, scope: !11858)
!11860 = !DILocation(line: 167, column: 15, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !2280, line: 167, column: 15)
!11862 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 167, column: 15)
!11863 = !DILocation(line: 167, column: 15, scope: !11862)
!11864 = !DILocation(line: 168, column: 15, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !2280, line: 168, column: 15)
!11866 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 168, column: 15)
!11867 = !DILocation(line: 168, column: 15, scope: !11866)
!11868 = !DILocation(line: 169, column: 15, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !2280, line: 169, column: 15)
!11870 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 169, column: 15)
!11871 = !DILocation(line: 169, column: 15, scope: !11870)
!11872 = !DILocation(line: 172, column: 15, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !2280, line: 172, column: 15)
!11874 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 172, column: 15)
!11875 = !DILocation(line: 172, column: 15, scope: !11874)
!11876 = !DILocation(line: 173, column: 15, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !2280, line: 173, column: 15)
!11878 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 173, column: 15)
!11879 = !DILocation(line: 173, column: 15, scope: !11878)
!11880 = !DILocation(line: 174, column: 15, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11882, file: !2280, line: 174, column: 15)
!11882 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 174, column: 15)
!11883 = !DILocation(line: 174, column: 15, scope: !11882)
!11884 = !DILocation(line: 177, column: 15, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !2280, line: 177, column: 15)
!11886 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 177, column: 15)
!11887 = !DILocation(line: 177, column: 15, scope: !11886)
!11888 = !DILocation(line: 178, column: 15, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !2280, line: 178, column: 15)
!11890 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 178, column: 15)
!11891 = !DILocation(line: 178, column: 15, scope: !11890)
!11892 = !DILocation(line: 181, column: 15, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !2280, line: 181, column: 15)
!11894 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 181, column: 15)
!11895 = !DILocation(line: 181, column: 15, scope: !11894)
!11896 = !DILocation(line: 182, column: 15, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !2280, line: 182, column: 15)
!11898 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 182, column: 15)
!11899 = !DILocation(line: 182, column: 15, scope: !11898)
!11900 = !DILocation(line: 183, column: 15, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !2280, line: 183, column: 15)
!11902 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 183, column: 15)
!11903 = !DILocation(line: 183, column: 15, scope: !11902)
!11904 = !DILocation(line: 184, column: 15, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !2280, line: 184, column: 15)
!11906 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 184, column: 15)
!11907 = !DILocation(line: 184, column: 15, scope: !11906)
!11908 = !DILocation(line: 187, column: 15, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !2280, line: 187, column: 15)
!11910 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 187, column: 15)
!11911 = !DILocation(line: 187, column: 15, scope: !11910)
!11912 = !DILocation(line: 188, column: 15, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !2280, line: 188, column: 15)
!11914 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 188, column: 15)
!11915 = !DILocation(line: 188, column: 15, scope: !11914)
!11916 = !DILocation(line: 189, column: 51, scope: !11800)
!11917 = !DILocation(line: 189, column: 54, scope: !11800)
!11918 = !DILocation(line: 189, column: 15, scope: !11800)
!11919 = !DILocation(line: 190, column: 15, scope: !11800)
!11920 = !DILocation(line: 192, column: 15, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11922, file: !2280, line: 192, column: 15)
!11922 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 192, column: 15)
!11923 = !DILocation(line: 192, column: 15, scope: !11922)
!11924 = !DILocation(line: 193, column: 15, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !2280, line: 193, column: 15)
!11926 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 193, column: 15)
!11927 = !DILocation(line: 193, column: 15, scope: !11926)
!11928 = !DILocation(line: 194, column: 15, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !2280, line: 194, column: 15)
!11930 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 194, column: 15)
!11931 = !DILocation(line: 194, column: 15, scope: !11930)
!11932 = !DILocation(line: 195, column: 15, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !2280, line: 195, column: 15)
!11934 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 195, column: 15)
!11935 = !DILocation(line: 195, column: 15, scope: !11934)
!11936 = !DILocation(line: 198, column: 15, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !2280, line: 198, column: 15)
!11938 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 198, column: 15)
!11939 = !DILocation(line: 198, column: 15, scope: !11938)
!11940 = !DILocation(line: 199, column: 15, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !2280, line: 199, column: 15)
!11942 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 199, column: 15)
!11943 = !DILocation(line: 199, column: 15, scope: !11942)
!11944 = !DILocation(line: 200, column: 15, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !2280, line: 200, column: 15)
!11946 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 200, column: 15)
!11947 = !DILocation(line: 200, column: 15, scope: !11946)
!11948 = !DILocation(line: 201, column: 15, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !2280, line: 201, column: 15)
!11950 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 201, column: 15)
!11951 = !DILocation(line: 201, column: 15, scope: !11950)
!11952 = !DILocation(line: 202, column: 15, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !2280, line: 202, column: 15)
!11954 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 202, column: 15)
!11955 = !DILocation(line: 202, column: 15, scope: !11954)
!11956 = !DILocation(line: 203, column: 15, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !2280, line: 203, column: 15)
!11958 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 203, column: 15)
!11959 = !DILocation(line: 203, column: 15, scope: !11958)
!11960 = !DILocation(line: 204, column: 15, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !2280, line: 204, column: 15)
!11962 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 204, column: 15)
!11963 = !DILocation(line: 204, column: 15, scope: !11962)
!11964 = !DILocation(line: 205, column: 15, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !2280, line: 205, column: 15)
!11966 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 205, column: 15)
!11967 = !DILocation(line: 205, column: 15, scope: !11966)
!11968 = !DILocation(line: 206, column: 15, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !2280, line: 206, column: 15)
!11970 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 206, column: 15)
!11971 = !DILocation(line: 206, column: 15, scope: !11970)
!11972 = !DILocation(line: 207, column: 15, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !2280, line: 207, column: 15)
!11974 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 207, column: 15)
!11975 = !DILocation(line: 207, column: 15, scope: !11974)
!11976 = !DILocation(line: 210, column: 15, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !2280, line: 210, column: 15)
!11978 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 210, column: 15)
!11979 = !DILocation(line: 210, column: 15, scope: !11978)
!11980 = !DILocation(line: 211, column: 15, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !2280, line: 211, column: 15)
!11982 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 211, column: 15)
!11983 = !DILocation(line: 211, column: 15, scope: !11982)
!11984 = !DILocation(line: 212, column: 15, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !2280, line: 212, column: 15)
!11986 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 212, column: 15)
!11987 = !DILocation(line: 212, column: 15, scope: !11986)
!11988 = !DILocation(line: 213, column: 15, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11990, file: !2280, line: 213, column: 15)
!11990 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 213, column: 15)
!11991 = !DILocation(line: 213, column: 15, scope: !11990)
!11992 = !DILocation(line: 214, column: 15, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !2280, line: 214, column: 15)
!11994 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 214, column: 15)
!11995 = !DILocation(line: 214, column: 15, scope: !11994)
!11996 = !DILocation(line: 215, column: 15, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !2280, line: 215, column: 15)
!11998 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 215, column: 15)
!11999 = !DILocation(line: 215, column: 15, scope: !11998)
!12000 = !DILocation(line: 216, column: 15, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !2280, line: 216, column: 15)
!12002 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 216, column: 15)
!12003 = !DILocation(line: 216, column: 15, scope: !12002)
!12004 = !DILocation(line: 217, column: 15, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12006, file: !2280, line: 217, column: 15)
!12006 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 217, column: 15)
!12007 = !DILocation(line: 217, column: 15, scope: !12006)
!12008 = !DILocation(line: 218, column: 15, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12010, file: !2280, line: 218, column: 15)
!12010 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 218, column: 15)
!12011 = !DILocation(line: 218, column: 15, scope: !12010)
!12012 = !DILocation(line: 219, column: 15, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !2280, line: 219, column: 15)
!12014 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 219, column: 15)
!12015 = !DILocation(line: 219, column: 15, scope: !12014)
!12016 = !DILocation(line: 220, column: 15, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !2280, line: 220, column: 15)
!12018 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 220, column: 15)
!12019 = !DILocation(line: 220, column: 15, scope: !12018)
!12020 = !DILocation(line: 223, column: 15, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !2280, line: 223, column: 15)
!12022 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 223, column: 15)
!12023 = !DILocation(line: 223, column: 15, scope: !12022)
!12024 = !DILocation(line: 224, column: 15, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12026, file: !2280, line: 224, column: 15)
!12026 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 224, column: 15)
!12027 = !DILocation(line: 224, column: 15, scope: !12026)
!12028 = !DILocation(line: 225, column: 15, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !2280, line: 225, column: 15)
!12030 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 225, column: 15)
!12031 = !DILocation(line: 225, column: 15, scope: !12030)
!12032 = !DILocation(line: 226, column: 15, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !2280, line: 226, column: 15)
!12034 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 226, column: 15)
!12035 = !DILocation(line: 226, column: 15, scope: !12034)
!12036 = !DILocation(line: 227, column: 15, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !2280, line: 227, column: 15)
!12038 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 227, column: 15)
!12039 = !DILocation(line: 227, column: 15, scope: !12038)
!12040 = !DILocation(line: 228, column: 15, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !2280, line: 228, column: 15)
!12042 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 228, column: 15)
!12043 = !DILocation(line: 228, column: 15, scope: !12042)
!12044 = !DILocation(line: 229, column: 15, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !2280, line: 229, column: 15)
!12046 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 229, column: 15)
!12047 = !DILocation(line: 229, column: 15, scope: !12046)
!12048 = !DILocation(line: 230, column: 15, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !2280, line: 230, column: 15)
!12050 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 230, column: 15)
!12051 = !DILocation(line: 230, column: 15, scope: !12050)
!12052 = !DILocation(line: 231, column: 15, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !2280, line: 231, column: 15)
!12054 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 231, column: 15)
!12055 = !DILocation(line: 231, column: 15, scope: !12054)
!12056 = !DILocation(line: 232, column: 15, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !2280, line: 232, column: 15)
!12058 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 232, column: 15)
!12059 = !DILocation(line: 232, column: 15, scope: !12058)
!12060 = !DILocation(line: 233, column: 15, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !2280, line: 233, column: 15)
!12062 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 233, column: 15)
!12063 = !DILocation(line: 233, column: 15, scope: !12062)
!12064 = !DILocation(line: 234, column: 15, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12066, file: !2280, line: 234, column: 15)
!12066 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 234, column: 15)
!12067 = !DILocation(line: 234, column: 15, scope: !12066)
!12068 = !DILocation(line: 235, column: 15, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !2280, line: 235, column: 15)
!12070 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 235, column: 15)
!12071 = !DILocation(line: 235, column: 15, scope: !12070)
!12072 = !DILocation(line: 236, column: 15, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !2280, line: 236, column: 15)
!12074 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 236, column: 15)
!12075 = !DILocation(line: 236, column: 15, scope: !12074)
!12076 = !DILocation(line: 237, column: 15, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !2280, line: 237, column: 15)
!12078 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 237, column: 15)
!12079 = !DILocation(line: 237, column: 15, scope: !12078)
!12080 = !DILocation(line: 238, column: 15, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !2280, line: 238, column: 15)
!12082 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 238, column: 15)
!12083 = !DILocation(line: 238, column: 15, scope: !12082)
!12084 = !DILocation(line: 239, column: 15, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !2280, line: 239, column: 15)
!12086 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 239, column: 15)
!12087 = !DILocation(line: 239, column: 15, scope: !12086)
!12088 = !DILocation(line: 240, column: 15, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !2280, line: 240, column: 15)
!12090 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 240, column: 15)
!12091 = !DILocation(line: 240, column: 15, scope: !12090)
!12092 = !DILocation(line: 243, column: 15, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12094, file: !2280, line: 243, column: 15)
!12094 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 243, column: 15)
!12095 = !DILocation(line: 243, column: 15, scope: !12094)
!12096 = !DILocation(line: 244, column: 15, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !2280, line: 244, column: 15)
!12098 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 244, column: 15)
!12099 = !DILocation(line: 244, column: 15, scope: !12098)
!12100 = !DILocation(line: 245, column: 15, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12102, file: !2280, line: 245, column: 15)
!12102 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 245, column: 15)
!12103 = !DILocation(line: 245, column: 15, scope: !12102)
!12104 = !DILocation(line: 246, column: 15, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !2280, line: 246, column: 15)
!12106 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 246, column: 15)
!12107 = !DILocation(line: 246, column: 15, scope: !12106)
!12108 = !DILocation(line: 247, column: 15, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !2280, line: 247, column: 15)
!12110 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 247, column: 15)
!12111 = !DILocation(line: 247, column: 15, scope: !12110)
!12112 = !DILocation(line: 248, column: 15, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !2280, line: 248, column: 15)
!12114 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 248, column: 15)
!12115 = !DILocation(line: 248, column: 15, scope: !12114)
!12116 = !DILocation(line: 249, column: 15, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !2280, line: 249, column: 15)
!12118 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 249, column: 15)
!12119 = !DILocation(line: 249, column: 15, scope: !12118)
!12120 = !DILocation(line: 250, column: 15, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !2280, line: 250, column: 15)
!12122 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 250, column: 15)
!12123 = !DILocation(line: 250, column: 15, scope: !12122)
!12124 = !DILocation(line: 251, column: 15, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !2280, line: 251, column: 15)
!12126 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 251, column: 15)
!12127 = !DILocation(line: 251, column: 15, scope: !12126)
!12128 = !DILocation(line: 252, column: 15, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !2280, line: 252, column: 15)
!12130 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 252, column: 15)
!12131 = !DILocation(line: 252, column: 15, scope: !12130)
!12132 = !DILocation(line: 253, column: 15, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !2280, line: 253, column: 15)
!12134 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 253, column: 15)
!12135 = !DILocation(line: 253, column: 15, scope: !12134)
!12136 = !DILocation(line: 254, column: 15, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !2280, line: 254, column: 15)
!12138 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 254, column: 15)
!12139 = !DILocation(line: 254, column: 15, scope: !12138)
!12140 = !DILocation(line: 255, column: 15, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !2280, line: 255, column: 15)
!12142 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 255, column: 15)
!12143 = !DILocation(line: 255, column: 15, scope: !12142)
!12144 = !DILocation(line: 258, column: 15, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !2280, line: 258, column: 15)
!12146 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 258, column: 15)
!12147 = !DILocation(line: 258, column: 15, scope: !12146)
!12148 = !DILocation(line: 259, column: 15, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !2280, line: 259, column: 15)
!12150 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 259, column: 15)
!12151 = !DILocation(line: 259, column: 15, scope: !12150)
!12152 = !DILocation(line: 260, column: 15, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !2280, line: 260, column: 15)
!12154 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 260, column: 15)
!12155 = !DILocation(line: 260, column: 15, scope: !12154)
!12156 = !DILocation(line: 261, column: 15, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !2280, line: 261, column: 15)
!12158 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 261, column: 15)
!12159 = !DILocation(line: 261, column: 15, scope: !12158)
!12160 = !DILocation(line: 262, column: 15, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12162, file: !2280, line: 262, column: 15)
!12162 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 262, column: 15)
!12163 = !DILocation(line: 262, column: 15, scope: !12162)
!12164 = !DILocation(line: 263, column: 15, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !2280, line: 263, column: 15)
!12166 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 263, column: 15)
!12167 = !DILocation(line: 263, column: 15, scope: !12166)
!12168 = !DILocation(line: 264, column: 15, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !2280, line: 264, column: 15)
!12170 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 264, column: 15)
!12171 = !DILocation(line: 264, column: 15, scope: !12170)
!12172 = !DILocation(line: 265, column: 15, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !2280, line: 265, column: 15)
!12174 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 265, column: 15)
!12175 = !DILocation(line: 265, column: 15, scope: !12174)
!12176 = !DILocation(line: 266, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !2280, line: 266, column: 15)
!12178 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 266, column: 15)
!12179 = !DILocation(line: 266, column: 15, scope: !12178)
!12180 = !DILocation(line: 267, column: 15, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !2280, line: 267, column: 15)
!12182 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 267, column: 15)
!12183 = !DILocation(line: 267, column: 15, scope: !12182)
!12184 = !DILocation(line: 268, column: 15, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12186, file: !2280, line: 268, column: 15)
!12186 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 268, column: 15)
!12187 = !DILocation(line: 268, column: 15, scope: !12186)
!12188 = !DILocation(line: 269, column: 15, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !2280, line: 269, column: 15)
!12190 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 269, column: 15)
!12191 = !DILocation(line: 269, column: 15, scope: !12190)
!12192 = !DILocation(line: 270, column: 15, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !2280, line: 270, column: 15)
!12194 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 270, column: 15)
!12195 = !DILocation(line: 270, column: 15, scope: !12194)
!12196 = !DILocation(line: 271, column: 15, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !2280, line: 271, column: 15)
!12198 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 271, column: 15)
!12199 = !DILocation(line: 271, column: 15, scope: !12198)
!12200 = !DILocation(line: 274, column: 15, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !2280, line: 274, column: 15)
!12202 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 274, column: 15)
!12203 = !DILocation(line: 274, column: 15, scope: !12202)
!12204 = !DILocation(line: 275, column: 15, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !2280, line: 275, column: 15)
!12206 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 275, column: 15)
!12207 = !DILocation(line: 275, column: 15, scope: !12206)
!12208 = !DILocation(line: 276, column: 15, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !2280, line: 276, column: 15)
!12210 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 276, column: 15)
!12211 = !DILocation(line: 276, column: 15, scope: !12210)
!12212 = !DILocation(line: 277, column: 15, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !2280, line: 277, column: 15)
!12214 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 277, column: 15)
!12215 = !DILocation(line: 277, column: 15, scope: !12214)
!12216 = !DILocation(line: 278, column: 15, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12218, file: !2280, line: 278, column: 15)
!12218 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 278, column: 15)
!12219 = !DILocation(line: 278, column: 15, scope: !12218)
!12220 = !DILocation(line: 279, column: 15, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !2280, line: 279, column: 15)
!12222 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 279, column: 15)
!12223 = !DILocation(line: 279, column: 15, scope: !12222)
!12224 = !DILocation(line: 280, column: 15, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12226, file: !2280, line: 280, column: 15)
!12226 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 280, column: 15)
!12227 = !DILocation(line: 280, column: 15, scope: !12226)
!12228 = !DILocation(line: 281, column: 15, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !2280, line: 281, column: 15)
!12230 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 281, column: 15)
!12231 = !DILocation(line: 281, column: 15, scope: !12230)
!12232 = !DILocation(line: 282, column: 15, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !2280, line: 282, column: 15)
!12234 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 282, column: 15)
!12235 = !DILocation(line: 282, column: 15, scope: !12234)
!12236 = !DILocation(line: 283, column: 15, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !2280, line: 283, column: 15)
!12238 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 283, column: 15)
!12239 = !DILocation(line: 283, column: 15, scope: !12238)
!12240 = !DILocation(line: 284, column: 15, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !2280, line: 284, column: 15)
!12242 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 284, column: 15)
!12243 = !DILocation(line: 284, column: 15, scope: !12242)
!12244 = !DILocation(line: 285, column: 15, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !2280, line: 285, column: 15)
!12246 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 285, column: 15)
!12247 = !DILocation(line: 285, column: 15, scope: !12246)
!12248 = !DILocation(line: 286, column: 15, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !2280, line: 286, column: 15)
!12250 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 286, column: 15)
!12251 = !DILocation(line: 286, column: 15, scope: !12250)
!12252 = !DILocation(line: 287, column: 15, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !2280, line: 287, column: 15)
!12254 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 287, column: 15)
!12255 = !DILocation(line: 287, column: 15, scope: !12254)
!12256 = !DILocation(line: 288, column: 15, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !2280, line: 288, column: 15)
!12258 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 288, column: 15)
!12259 = !DILocation(line: 288, column: 15, scope: !12258)
!12260 = !DILocation(line: 291, column: 15, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !2280, line: 291, column: 15)
!12262 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 291, column: 15)
!12263 = !DILocation(line: 291, column: 15, scope: !12262)
!12264 = !DILocation(line: 292, column: 15, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !2280, line: 292, column: 15)
!12266 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 292, column: 15)
!12267 = !DILocation(line: 292, column: 15, scope: !12266)
!12268 = !DILocation(line: 293, column: 15, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !2280, line: 293, column: 15)
!12270 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 293, column: 15)
!12271 = !DILocation(line: 293, column: 15, scope: !12270)
!12272 = !DILocation(line: 294, column: 15, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !2280, line: 294, column: 15)
!12274 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 294, column: 15)
!12275 = !DILocation(line: 294, column: 15, scope: !12274)
!12276 = !DILocation(line: 295, column: 15, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !2280, line: 295, column: 15)
!12278 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 295, column: 15)
!12279 = !DILocation(line: 295, column: 15, scope: !12278)
!12280 = !DILocation(line: 296, column: 15, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !2280, line: 296, column: 15)
!12282 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 296, column: 15)
!12283 = !DILocation(line: 296, column: 15, scope: !12282)
!12284 = !DILocation(line: 297, column: 15, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !2280, line: 297, column: 15)
!12286 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 297, column: 15)
!12287 = !DILocation(line: 297, column: 15, scope: !12286)
!12288 = !DILocation(line: 298, column: 15, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !2280, line: 298, column: 15)
!12290 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 298, column: 15)
!12291 = !DILocation(line: 298, column: 15, scope: !12290)
!12292 = !DILocation(line: 299, column: 15, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !2280, line: 299, column: 15)
!12294 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 299, column: 15)
!12295 = !DILocation(line: 299, column: 15, scope: !12294)
!12296 = !DILocation(line: 300, column: 15, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !2280, line: 300, column: 15)
!12298 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 300, column: 15)
!12299 = !DILocation(line: 300, column: 15, scope: !12298)
!12300 = !DILocation(line: 301, column: 15, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !2280, line: 301, column: 15)
!12302 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 301, column: 15)
!12303 = !DILocation(line: 301, column: 15, scope: !12302)
!12304 = !DILocation(line: 302, column: 15, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !2280, line: 302, column: 15)
!12306 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 302, column: 15)
!12307 = !DILocation(line: 302, column: 15, scope: !12306)
!12308 = !DILocation(line: 303, column: 15, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !2280, line: 303, column: 15)
!12310 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 303, column: 15)
!12311 = !DILocation(line: 303, column: 15, scope: !12310)
!12312 = !DILocation(line: 304, column: 15, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !2280, line: 304, column: 15)
!12314 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 304, column: 15)
!12315 = !DILocation(line: 304, column: 15, scope: !12314)
!12316 = !DILocation(line: 305, column: 15, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !2280, line: 305, column: 15)
!12318 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 305, column: 15)
!12319 = !DILocation(line: 305, column: 15, scope: !12318)
!12320 = !DILocation(line: 308, column: 15, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !2280, line: 308, column: 15)
!12322 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 308, column: 15)
!12323 = !DILocation(line: 308, column: 15, scope: !12322)
!12324 = !DILocation(line: 309, column: 15, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12326, file: !2280, line: 309, column: 15)
!12326 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 309, column: 15)
!12327 = !DILocation(line: 309, column: 15, scope: !12326)
!12328 = !DILocation(line: 310, column: 15, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !2280, line: 310, column: 15)
!12330 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 310, column: 15)
!12331 = !DILocation(line: 310, column: 15, scope: !12330)
!12332 = !DILocation(line: 311, column: 15, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !2280, line: 311, column: 15)
!12334 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 311, column: 15)
!12335 = !DILocation(line: 311, column: 15, scope: !12334)
!12336 = !DILocation(line: 312, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !2280, line: 312, column: 15)
!12338 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 312, column: 15)
!12339 = !DILocation(line: 312, column: 15, scope: !12338)
!12340 = !DILocation(line: 313, column: 15, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !2280, line: 313, column: 15)
!12342 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 313, column: 15)
!12343 = !DILocation(line: 313, column: 15, scope: !12342)
!12344 = !DILocation(line: 314, column: 15, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !2280, line: 314, column: 15)
!12346 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 314, column: 15)
!12347 = !DILocation(line: 314, column: 15, scope: !12346)
!12348 = !DILocation(line: 315, column: 15, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !2280, line: 315, column: 15)
!12350 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 315, column: 15)
!12351 = !DILocation(line: 315, column: 15, scope: !12350)
!12352 = !DILocation(line: 316, column: 15, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !2280, line: 316, column: 15)
!12354 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 316, column: 15)
!12355 = !DILocation(line: 316, column: 15, scope: !12354)
!12356 = !DILocation(line: 317, column: 15, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !2280, line: 317, column: 15)
!12358 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 317, column: 15)
!12359 = !DILocation(line: 317, column: 15, scope: !12358)
!12360 = !DILocation(line: 318, column: 15, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12362, file: !2280, line: 318, column: 15)
!12362 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 318, column: 15)
!12363 = !DILocation(line: 318, column: 15, scope: !12362)
!12364 = !DILocation(line: 321, column: 15, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !2280, line: 321, column: 15)
!12366 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 321, column: 15)
!12367 = !DILocation(line: 321, column: 15, scope: !12366)
!12368 = !DILocation(line: 322, column: 15, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !2280, line: 322, column: 15)
!12370 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 322, column: 15)
!12371 = !DILocation(line: 322, column: 15, scope: !12370)
!12372 = !DILocation(line: 323, column: 15, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12374, file: !2280, line: 323, column: 15)
!12374 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 323, column: 15)
!12375 = !DILocation(line: 323, column: 15, scope: !12374)
!12376 = !DILocation(line: 324, column: 15, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !2280, line: 324, column: 15)
!12378 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 324, column: 15)
!12379 = !DILocation(line: 324, column: 15, scope: !12378)
!12380 = !DILocation(line: 325, column: 15, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12382, file: !2280, line: 325, column: 15)
!12382 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 325, column: 15)
!12383 = !DILocation(line: 325, column: 15, scope: !12382)
!12384 = !DILocation(line: 326, column: 15, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !2280, line: 326, column: 15)
!12386 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 326, column: 15)
!12387 = !DILocation(line: 326, column: 15, scope: !12386)
!12388 = !DILocation(line: 327, column: 15, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !2280, line: 327, column: 15)
!12390 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 327, column: 15)
!12391 = !DILocation(line: 327, column: 15, scope: !12390)
!12392 = !DILocation(line: 328, column: 15, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !2280, line: 328, column: 15)
!12394 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 328, column: 15)
!12395 = !DILocation(line: 328, column: 15, scope: !12394)
!12396 = !DILocation(line: 329, column: 15, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !2280, line: 329, column: 15)
!12398 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 329, column: 15)
!12399 = !DILocation(line: 329, column: 15, scope: !12398)
!12400 = !DILocation(line: 330, column: 15, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !2280, line: 330, column: 15)
!12402 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 330, column: 15)
!12403 = !DILocation(line: 330, column: 15, scope: !12402)
!12404 = !DILocation(line: 331, column: 15, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !2280, line: 331, column: 15)
!12406 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 331, column: 15)
!12407 = !DILocation(line: 331, column: 15, scope: !12406)
!12408 = !DILocation(line: 332, column: 15, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12410, file: !2280, line: 332, column: 15)
!12410 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 332, column: 15)
!12411 = !DILocation(line: 332, column: 15, scope: !12410)
!12412 = !DILocation(line: 335, column: 15, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12414, file: !2280, line: 335, column: 15)
!12414 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 335, column: 15)
!12415 = !DILocation(line: 335, column: 15, scope: !12414)
!12416 = !DILocation(line: 336, column: 15, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !2280, line: 336, column: 15)
!12418 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 336, column: 15)
!12419 = !DILocation(line: 336, column: 15, scope: !12418)
!12420 = !DILocation(line: 337, column: 15, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !2280, line: 337, column: 15)
!12422 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 337, column: 15)
!12423 = !DILocation(line: 337, column: 15, scope: !12422)
!12424 = !DILocation(line: 338, column: 15, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !2280, line: 338, column: 15)
!12426 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 338, column: 15)
!12427 = !DILocation(line: 338, column: 15, scope: !12426)
!12428 = !DILocation(line: 339, column: 15, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !2280, line: 339, column: 15)
!12430 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 339, column: 15)
!12431 = !DILocation(line: 339, column: 15, scope: !12430)
!12432 = !DILocation(line: 340, column: 15, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !2280, line: 340, column: 15)
!12434 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 340, column: 15)
!12435 = !DILocation(line: 340, column: 15, scope: !12434)
!12436 = !DILocation(line: 341, column: 15, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !2280, line: 341, column: 15)
!12438 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 341, column: 15)
!12439 = !DILocation(line: 341, column: 15, scope: !12438)
!12440 = !DILocation(line: 342, column: 15, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !2280, line: 342, column: 15)
!12442 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 342, column: 15)
!12443 = !DILocation(line: 342, column: 15, scope: !12442)
!12444 = !DILocation(line: 343, column: 15, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !2280, line: 343, column: 15)
!12446 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 343, column: 15)
!12447 = !DILocation(line: 343, column: 15, scope: !12446)
!12448 = !DILocation(line: 344, column: 15, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !2280, line: 344, column: 15)
!12450 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 344, column: 15)
!12451 = !DILocation(line: 344, column: 15, scope: !12450)
!12452 = !DILocation(line: 345, column: 15, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !2280, line: 345, column: 15)
!12454 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 345, column: 15)
!12455 = !DILocation(line: 345, column: 15, scope: !12454)
!12456 = !DILocation(line: 348, column: 15, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !2280, line: 348, column: 15)
!12458 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 348, column: 15)
!12459 = !DILocation(line: 348, column: 15, scope: !12458)
!12460 = !DILocation(line: 349, column: 15, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !2280, line: 349, column: 15)
!12462 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 349, column: 15)
!12463 = !DILocation(line: 349, column: 15, scope: !12462)
!12464 = !DILocation(line: 350, column: 15, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !2280, line: 350, column: 15)
!12466 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 350, column: 15)
!12467 = !DILocation(line: 350, column: 15, scope: !12466)
!12468 = !DILocation(line: 351, column: 15, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !2280, line: 351, column: 15)
!12470 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 351, column: 15)
!12471 = !DILocation(line: 351, column: 15, scope: !12470)
!12472 = !DILocation(line: 352, column: 15, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !2280, line: 352, column: 15)
!12474 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 352, column: 15)
!12475 = !DILocation(line: 352, column: 15, scope: !12474)
!12476 = !DILocation(line: 353, column: 15, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !2280, line: 353, column: 15)
!12478 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 353, column: 15)
!12479 = !DILocation(line: 353, column: 15, scope: !12478)
!12480 = !DILocation(line: 354, column: 15, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !2280, line: 354, column: 15)
!12482 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 354, column: 15)
!12483 = !DILocation(line: 354, column: 15, scope: !12482)
!12484 = !DILocation(line: 355, column: 15, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !2280, line: 355, column: 15)
!12486 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 355, column: 15)
!12487 = !DILocation(line: 355, column: 15, scope: !12486)
!12488 = !DILocation(line: 356, column: 15, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12490, file: !2280, line: 356, column: 15)
!12490 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 356, column: 15)
!12491 = !DILocation(line: 356, column: 15, scope: !12490)
!12492 = !DILocation(line: 357, column: 15, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !2280, line: 357, column: 15)
!12494 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 357, column: 15)
!12495 = !DILocation(line: 357, column: 15, scope: !12494)
!12496 = !DILocation(line: 358, column: 15, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !2280, line: 358, column: 15)
!12498 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 358, column: 15)
!12499 = !DILocation(line: 358, column: 15, scope: !12498)
!12500 = !DILocation(line: 359, column: 15, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !2280, line: 359, column: 15)
!12502 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 359, column: 15)
!12503 = !DILocation(line: 359, column: 15, scope: !12502)
!12504 = !DILocation(line: 360, column: 15, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !2280, line: 360, column: 15)
!12506 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 360, column: 15)
!12507 = !DILocation(line: 360, column: 15, scope: !12506)
!12508 = !DILocation(line: 361, column: 15, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !2280, line: 361, column: 15)
!12510 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 361, column: 15)
!12511 = !DILocation(line: 361, column: 15, scope: !12510)
!12512 = !DILocation(line: 362, column: 15, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !2280, line: 362, column: 15)
!12514 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 362, column: 15)
!12515 = !DILocation(line: 362, column: 15, scope: !12514)
!12516 = !DILocation(line: 363, column: 15, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !2280, line: 363, column: 15)
!12518 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 363, column: 15)
!12519 = !DILocation(line: 363, column: 15, scope: !12518)
!12520 = !DILocation(line: 364, column: 15, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !2280, line: 364, column: 15)
!12522 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 364, column: 15)
!12523 = !DILocation(line: 364, column: 15, scope: !12522)
!12524 = !DILocation(line: 365, column: 15, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !2280, line: 365, column: 15)
!12526 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 365, column: 15)
!12527 = !DILocation(line: 365, column: 15, scope: !12526)
!12528 = !DILocation(line: 368, column: 15, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !2280, line: 368, column: 15)
!12530 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 368, column: 15)
!12531 = !DILocation(line: 368, column: 15, scope: !12530)
!12532 = !DILocation(line: 369, column: 15, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !2280, line: 369, column: 15)
!12534 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 369, column: 15)
!12535 = !DILocation(line: 369, column: 15, scope: !12534)
!12536 = !DILocation(line: 370, column: 15, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !2280, line: 370, column: 15)
!12538 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 370, column: 15)
!12539 = !DILocation(line: 370, column: 15, scope: !12538)
!12540 = !DILocation(line: 371, column: 15, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !2280, line: 371, column: 15)
!12542 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 371, column: 15)
!12543 = !DILocation(line: 371, column: 15, scope: !12542)
!12544 = !DILocation(line: 372, column: 15, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !2280, line: 372, column: 15)
!12546 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 372, column: 15)
!12547 = !DILocation(line: 372, column: 15, scope: !12546)
!12548 = !DILocation(line: 373, column: 15, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !2280, line: 373, column: 15)
!12550 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 373, column: 15)
!12551 = !DILocation(line: 373, column: 15, scope: !12550)
!12552 = !DILocation(line: 374, column: 15, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !2280, line: 374, column: 15)
!12554 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 374, column: 15)
!12555 = !DILocation(line: 374, column: 15, scope: !12554)
!12556 = !DILocation(line: 375, column: 15, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !2280, line: 375, column: 15)
!12558 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 375, column: 15)
!12559 = !DILocation(line: 375, column: 15, scope: !12558)
!12560 = !DILocation(line: 376, column: 15, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !2280, line: 376, column: 15)
!12562 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 376, column: 15)
!12563 = !DILocation(line: 376, column: 15, scope: !12562)
!12564 = !DILocation(line: 377, column: 15, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !2280, line: 377, column: 15)
!12566 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 377, column: 15)
!12567 = !DILocation(line: 377, column: 15, scope: !12566)
!12568 = !DILocation(line: 378, column: 15, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !2280, line: 378, column: 15)
!12570 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 378, column: 15)
!12571 = !DILocation(line: 378, column: 15, scope: !12570)
!12572 = !DILocation(line: 379, column: 15, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !2280, line: 379, column: 15)
!12574 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 379, column: 15)
!12575 = !DILocation(line: 379, column: 15, scope: !12574)
!12576 = !DILocation(line: 380, column: 15, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !2280, line: 380, column: 15)
!12578 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 380, column: 15)
!12579 = !DILocation(line: 380, column: 15, scope: !12578)
!12580 = !DILocation(line: 381, column: 15, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !2280, line: 381, column: 15)
!12582 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 381, column: 15)
!12583 = !DILocation(line: 381, column: 15, scope: !12582)
!12584 = !DILocation(line: 382, column: 15, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12586, file: !2280, line: 382, column: 15)
!12586 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 382, column: 15)
!12587 = !DILocation(line: 382, column: 15, scope: !12586)
!12588 = !DILocation(line: 383, column: 15, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !2280, line: 383, column: 15)
!12590 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 383, column: 15)
!12591 = !DILocation(line: 383, column: 15, scope: !12590)
!12592 = !DILocation(line: 384, column: 15, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12594, file: !2280, line: 384, column: 15)
!12594 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 384, column: 15)
!12595 = !DILocation(line: 384, column: 15, scope: !12594)
!12596 = !DILocation(line: 385, column: 15, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12598, file: !2280, line: 385, column: 15)
!12598 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 385, column: 15)
!12599 = !DILocation(line: 385, column: 15, scope: !12598)
!12600 = !DILocation(line: 386, column: 15, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12602, file: !2280, line: 386, column: 15)
!12602 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 386, column: 15)
!12603 = !DILocation(line: 386, column: 15, scope: !12602)
!12604 = !DILocation(line: 387, column: 15, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !2280, line: 387, column: 15)
!12606 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 387, column: 15)
!12607 = !DILocation(line: 387, column: 15, scope: !12606)
!12608 = !DILocation(line: 388, column: 15, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !2280, line: 388, column: 15)
!12610 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 388, column: 15)
!12611 = !DILocation(line: 388, column: 15, scope: !12610)
!12612 = !DILocation(line: 389, column: 15, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !2280, line: 389, column: 15)
!12614 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 389, column: 15)
!12615 = !DILocation(line: 389, column: 15, scope: !12614)
!12616 = !DILocation(line: 392, column: 15, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !2280, line: 392, column: 15)
!12618 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 392, column: 15)
!12619 = !DILocation(line: 392, column: 15, scope: !12618)
!12620 = !DILocation(line: 393, column: 15, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !2280, line: 393, column: 15)
!12622 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 393, column: 15)
!12623 = !DILocation(line: 393, column: 15, scope: !12622)
!12624 = !DILocation(line: 394, column: 15, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !2280, line: 394, column: 15)
!12626 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 394, column: 15)
!12627 = !DILocation(line: 394, column: 15, scope: !12626)
!12628 = !DILocation(line: 395, column: 15, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !2280, line: 395, column: 15)
!12630 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 395, column: 15)
!12631 = !DILocation(line: 395, column: 15, scope: !12630)
!12632 = !DILocation(line: 396, column: 15, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !2280, line: 396, column: 15)
!12634 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 396, column: 15)
!12635 = !DILocation(line: 396, column: 15, scope: !12634)
!12636 = !DILocation(line: 397, column: 15, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !2280, line: 397, column: 15)
!12638 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 397, column: 15)
!12639 = !DILocation(line: 397, column: 15, scope: !12638)
!12640 = !DILocation(line: 398, column: 15, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !2280, line: 398, column: 15)
!12642 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 398, column: 15)
!12643 = !DILocation(line: 398, column: 15, scope: !12642)
!12644 = !DILocation(line: 399, column: 15, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !2280, line: 399, column: 15)
!12646 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 399, column: 15)
!12647 = !DILocation(line: 399, column: 15, scope: !12646)
!12648 = !DILocation(line: 400, column: 23, scope: !11800)
!12649 = !DILocation(line: 400, column: 35, scope: !11800)
!12650 = !DILocation(line: 400, column: 73, scope: !11800)
!12651 = !DILocation(line: 400, column: 61, scope: !11800)
!12652 = !DILocation(line: 400, column: 15, scope: !11800)
!12653 = !DILocation(line: 405, column: 49, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 401, column: 17)
!12655 = !DILocation(line: 405, column: 56, scope: !12654)
!12656 = !DILocation(line: 405, column: 19, scope: !12654)
!12657 = !DILocation(line: 406, column: 19, scope: !12654)
!12658 = !DILocation(line: 408, column: 19, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !2280, line: 408, column: 19)
!12660 = distinct !DILexicalBlock(scope: !12654, file: !2280, line: 408, column: 19)
!12661 = !DILocation(line: 408, column: 19, scope: !12660)
!12662 = !DILocation(line: 413, column: 15, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !2280, line: 413, column: 15)
!12664 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 413, column: 15)
!12665 = !DILocation(line: 413, column: 15, scope: !12664)
!12666 = !DILocation(line: 414, column: 15, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !2280, line: 414, column: 15)
!12668 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 414, column: 15)
!12669 = !DILocation(line: 414, column: 15, scope: !12668)
!12670 = !DILocation(line: 415, column: 15, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !2280, line: 415, column: 15)
!12672 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 415, column: 15)
!12673 = !DILocation(line: 415, column: 15, scope: !12672)
!12674 = !DILocation(line: 416, column: 15, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !2280, line: 416, column: 15)
!12676 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 416, column: 15)
!12677 = !DILocation(line: 416, column: 15, scope: !12676)
!12678 = !DILocation(line: 417, column: 15, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !2280, line: 417, column: 15)
!12680 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 417, column: 15)
!12681 = !DILocation(line: 417, column: 15, scope: !12680)
!12682 = !DILocation(line: 418, column: 15, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !2280, line: 418, column: 15)
!12684 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 418, column: 15)
!12685 = !DILocation(line: 418, column: 15, scope: !12684)
!12686 = !DILocation(line: 419, column: 15, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !2280, line: 419, column: 15)
!12688 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 419, column: 15)
!12689 = !DILocation(line: 419, column: 15, scope: !12688)
!12690 = !DILocation(line: 420, column: 15, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !2280, line: 420, column: 15)
!12692 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 420, column: 15)
!12693 = !DILocation(line: 420, column: 15, scope: !12692)
!12694 = !DILocation(line: 421, column: 15, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !2280, line: 421, column: 15)
!12696 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 421, column: 15)
!12697 = !DILocation(line: 421, column: 15, scope: !12696)
!12698 = !DILocation(line: 424, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !2280, line: 424, column: 15)
!12700 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 424, column: 15)
!12701 = !DILocation(line: 424, column: 15, scope: !12700)
!12702 = !DILocation(line: 425, column: 15, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !2280, line: 425, column: 15)
!12704 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 425, column: 15)
!12705 = !DILocation(line: 425, column: 15, scope: !12704)
!12706 = !DILocation(line: 426, column: 15, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12708, file: !2280, line: 426, column: 15)
!12708 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 426, column: 15)
!12709 = !DILocation(line: 426, column: 15, scope: !12708)
!12710 = !DILocation(line: 427, column: 15, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !2280, line: 427, column: 15)
!12712 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 427, column: 15)
!12713 = !DILocation(line: 427, column: 15, scope: !12712)
!12714 = !DILocation(line: 430, column: 15, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !2280, line: 430, column: 15)
!12716 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 430, column: 15)
!12717 = !DILocation(line: 430, column: 15, scope: !12716)
!12718 = !DILocation(line: 431, column: 15, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12720, file: !2280, line: 431, column: 15)
!12720 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 431, column: 15)
!12721 = !DILocation(line: 431, column: 15, scope: !12720)
!12722 = !DILocation(line: 434, column: 38, scope: !11799)
!12723 = !DILocation(line: 434, column: 29, scope: !11799)
!12724 = !DILocation(line: 0, scope: !11799)
!12725 = !DILocation(line: 0, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !2280, line: 436, column: 19)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !2280, line: 436, column: 19)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !2280, line: 435, column: 46)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !2280, line: 435, column: 17)
!12730 = distinct !DILexicalBlock(scope: !11799, file: !2280, line: 435, column: 17)
!12731 = !DILocation(line: 435, column: 22, scope: !12730)
!12732 = !DILocation(line: 0, scope: !12730)
!12733 = !DILocation(line: 435, column: 33, scope: !12729)
!12734 = !DILocation(line: 435, column: 17, scope: !12730)
!12735 = !DILocation(line: 436, column: 19, scope: !12726)
!12736 = !DILocation(line: 436, column: 19, scope: !12727)
!12737 = !DILocation(line: 435, column: 42, scope: !12729)
!12738 = !DILocation(line: 435, column: 17, scope: !12729)
!12739 = distinct !{!12739, !12734, !12740}
!12740 = !DILocation(line: 437, column: 17, scope: !12730)
!12741 = !DILocation(line: 441, column: 15, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12743, file: !2280, line: 441, column: 15)
!12743 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 441, column: 15)
!12744 = !DILocation(line: 441, column: 15, scope: !12743)
!12745 = !DILocation(line: 442, column: 15, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !2280, line: 442, column: 15)
!12747 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 442, column: 15)
!12748 = !DILocation(line: 442, column: 15, scope: !12747)
!12749 = !DILocation(line: 443, column: 15, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !2280, line: 443, column: 15)
!12751 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 443, column: 15)
!12752 = !DILocation(line: 443, column: 15, scope: !12751)
!12753 = !DILocation(line: 449, column: 42, scope: !11805)
!12754 = !DILocation(line: 449, column: 33, scope: !11805)
!12755 = !DILocation(line: 0, scope: !11805)
!12756 = !DILocation(line: 0, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !2280, line: 451, column: 23)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !2280, line: 451, column: 23)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !2280, line: 450, column: 50)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !2280, line: 450, column: 21)
!12761 = distinct !DILexicalBlock(scope: !11805, file: !2280, line: 450, column: 21)
!12762 = !DILocation(line: 450, column: 26, scope: !12761)
!12763 = !DILocation(line: 0, scope: !12761)
!12764 = !DILocation(line: 450, column: 37, scope: !12760)
!12765 = !DILocation(line: 450, column: 21, scope: !12761)
!12766 = !DILocation(line: 451, column: 23, scope: !12757)
!12767 = !DILocation(line: 451, column: 23, scope: !12758)
!12768 = !DILocation(line: 450, column: 46, scope: !12760)
!12769 = !DILocation(line: 450, column: 21, scope: !12760)
!12770 = distinct !{!12770, !12765, !12771}
!12771 = !DILocation(line: 452, column: 21, scope: !12761)
!12772 = !DILocation(line: 458, column: 15, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12774, file: !2280, line: 458, column: 15)
!12774 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 458, column: 15)
!12775 = !DILocation(line: 458, column: 15, scope: !12774)
!12776 = !DILocation(line: 459, column: 15, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !2280, line: 459, column: 15)
!12778 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 459, column: 15)
!12779 = !DILocation(line: 459, column: 15, scope: !12778)
!12780 = !DILocation(line: 460, column: 15, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !2280, line: 460, column: 15)
!12782 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 460, column: 15)
!12783 = !DILocation(line: 460, column: 15, scope: !12782)
!12784 = !DILocation(line: 461, column: 15, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !2280, line: 461, column: 15)
!12786 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 461, column: 15)
!12787 = !DILocation(line: 461, column: 15, scope: !12786)
!12788 = !DILocation(line: 462, column: 15, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !2280, line: 462, column: 15)
!12790 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 462, column: 15)
!12791 = !DILocation(line: 462, column: 15, scope: !12790)
!12792 = !DILocation(line: 465, column: 15, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !2280, line: 465, column: 15)
!12794 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 465, column: 15)
!12795 = !DILocation(line: 465, column: 15, scope: !12794)
!12796 = !DILocation(line: 466, column: 15, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12798, file: !2280, line: 466, column: 15)
!12798 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 466, column: 15)
!12799 = !DILocation(line: 466, column: 15, scope: !12798)
!12800 = !DILocation(line: 467, column: 15, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !2280, line: 467, column: 15)
!12802 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 467, column: 15)
!12803 = !DILocation(line: 467, column: 15, scope: !12802)
!12804 = !DILocation(line: 468, column: 15, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !2280, line: 468, column: 15)
!12806 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 468, column: 15)
!12807 = !DILocation(line: 468, column: 15, scope: !12806)
!12808 = !DILocation(line: 469, column: 15, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !2280, line: 469, column: 15)
!12810 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 469, column: 15)
!12811 = !DILocation(line: 469, column: 15, scope: !12810)
!12812 = !DILocation(line: 470, column: 15, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12814, file: !2280, line: 470, column: 15)
!12814 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 470, column: 15)
!12815 = !DILocation(line: 470, column: 15, scope: !12814)
!12816 = !DILocation(line: 471, column: 15, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !2280, line: 471, column: 15)
!12818 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 471, column: 15)
!12819 = !DILocation(line: 471, column: 15, scope: !12818)
!12820 = !DILocation(line: 472, column: 15, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !2280, line: 472, column: 15)
!12822 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 472, column: 15)
!12823 = !DILocation(line: 472, column: 15, scope: !12822)
!12824 = !DILocation(line: 473, column: 15, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12826, file: !2280, line: 473, column: 15)
!12826 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 473, column: 15)
!12827 = !DILocation(line: 473, column: 15, scope: !12826)
!12828 = !DILocation(line: 476, column: 15, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !2280, line: 476, column: 15)
!12830 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 476, column: 15)
!12831 = !DILocation(line: 476, column: 15, scope: !12830)
!12832 = !DILocation(line: 477, column: 15, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !2280, line: 477, column: 15)
!12834 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 477, column: 15)
!12835 = !DILocation(line: 477, column: 15, scope: !12834)
!12836 = !DILocation(line: 478, column: 15, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !2280, line: 478, column: 15)
!12838 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 478, column: 15)
!12839 = !DILocation(line: 478, column: 15, scope: !12838)
!12840 = !DILocation(line: 479, column: 15, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12842, file: !2280, line: 479, column: 15)
!12842 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 479, column: 15)
!12843 = !DILocation(line: 479, column: 15, scope: !12842)
!12844 = !DILocation(line: 480, column: 15, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !2280, line: 480, column: 15)
!12846 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 480, column: 15)
!12847 = !DILocation(line: 480, column: 15, scope: !12846)
!12848 = !DILocation(line: 481, column: 15, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !2280, line: 481, column: 15)
!12850 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 481, column: 15)
!12851 = !DILocation(line: 481, column: 15, scope: !12850)
!12852 = !DILocation(line: 482, column: 15, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !2280, line: 482, column: 15)
!12854 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 482, column: 15)
!12855 = !DILocation(line: 482, column: 15, scope: !12854)
!12856 = !DILocation(line: 483, column: 15, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !2280, line: 483, column: 15)
!12858 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 483, column: 15)
!12859 = !DILocation(line: 483, column: 15, scope: !12858)
!12860 = !DILocation(line: 484, column: 15, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12862, file: !2280, line: 484, column: 15)
!12862 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 484, column: 15)
!12863 = !DILocation(line: 484, column: 15, scope: !12862)
!12864 = !DILocation(line: 485, column: 15, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !2280, line: 485, column: 15)
!12866 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 485, column: 15)
!12867 = !DILocation(line: 485, column: 15, scope: !12866)
!12868 = !DILocation(line: 488, column: 58, scope: !11809)
!12869 = !DILocation(line: 488, column: 76, scope: !11809)
!12870 = !DILocation(line: 488, column: 29, scope: !11809)
!12871 = !DILocation(line: 0, scope: !11809)
!12872 = !DILocation(line: 0, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !2280, line: 490, column: 19)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !2280, line: 490, column: 19)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !2280, line: 489, column: 46)
!12876 = distinct !DILexicalBlock(scope: !12877, file: !2280, line: 489, column: 17)
!12877 = distinct !DILexicalBlock(scope: !11809, file: !2280, line: 489, column: 17)
!12878 = !DILocation(line: 489, column: 22, scope: !12877)
!12879 = !DILocation(line: 0, scope: !12877)
!12880 = !DILocation(line: 489, column: 33, scope: !12876)
!12881 = !DILocation(line: 489, column: 17, scope: !12877)
!12882 = !DILocation(line: 490, column: 19, scope: !12873)
!12883 = !DILocation(line: 490, column: 19, scope: !12874)
!12884 = !DILocation(line: 489, column: 42, scope: !12876)
!12885 = !DILocation(line: 489, column: 17, scope: !12876)
!12886 = distinct !{!12886, !12881, !12887}
!12887 = !DILocation(line: 491, column: 17, scope: !12877)
!12888 = !DILocation(line: 495, column: 15, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12890, file: !2280, line: 495, column: 15)
!12890 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 495, column: 15)
!12891 = !DILocation(line: 495, column: 15, scope: !12890)
!12892 = !DILocation(line: 496, column: 15, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !2280, line: 496, column: 15)
!12894 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 496, column: 15)
!12895 = !DILocation(line: 496, column: 15, scope: !12894)
!12896 = !DILocation(line: 497, column: 15, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12898, file: !2280, line: 497, column: 15)
!12898 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 497, column: 15)
!12899 = !DILocation(line: 497, column: 15, scope: !12898)
!12900 = !DILocation(line: 498, column: 15, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12902, file: !2280, line: 498, column: 15)
!12902 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 498, column: 15)
!12903 = !DILocation(line: 498, column: 15, scope: !12902)
!12904 = !DILocation(line: 501, column: 15, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !2280, line: 501, column: 15)
!12906 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 501, column: 15)
!12907 = !DILocation(line: 501, column: 15, scope: !12906)
!12908 = !DILocation(line: 502, column: 15, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12910, file: !2280, line: 502, column: 15)
!12910 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 502, column: 15)
!12911 = !DILocation(line: 502, column: 15, scope: !12910)
!12912 = !DILocation(line: 503, column: 15, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !2280, line: 503, column: 15)
!12914 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 503, column: 15)
!12915 = !DILocation(line: 503, column: 15, scope: !12914)
!12916 = !DILocation(line: 506, column: 15, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12918, file: !2280, line: 506, column: 15)
!12918 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 506, column: 15)
!12919 = !DILocation(line: 506, column: 15, scope: !12918)
!12920 = !DILocation(line: 507, column: 15, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !2280, line: 507, column: 15)
!12922 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 507, column: 15)
!12923 = !DILocation(line: 507, column: 15, scope: !12922)
!12924 = !DILocation(line: 508, column: 15, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !2280, line: 508, column: 15)
!12926 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 508, column: 15)
!12927 = !DILocation(line: 508, column: 15, scope: !12926)
!12928 = !DILocation(line: 509, column: 15, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !2280, line: 509, column: 15)
!12930 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 509, column: 15)
!12931 = !DILocation(line: 509, column: 15, scope: !12930)
!12932 = !DILocation(line: 512, column: 57, scope: !11812)
!12933 = !DILocation(line: 512, column: 38, scope: !11812)
!12934 = !DILocation(line: 512, column: 29, scope: !11812)
!12935 = !DILocation(line: 0, scope: !11812)
!12936 = !DILocation(line: 0, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !2280, line: 514, column: 19)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !2280, line: 514, column: 19)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !2280, line: 513, column: 46)
!12940 = distinct !DILexicalBlock(scope: !12941, file: !2280, line: 513, column: 17)
!12941 = distinct !DILexicalBlock(scope: !11812, file: !2280, line: 513, column: 17)
!12942 = !DILocation(line: 513, column: 22, scope: !12941)
!12943 = !DILocation(line: 0, scope: !12941)
!12944 = !DILocation(line: 513, column: 33, scope: !12940)
!12945 = !DILocation(line: 513, column: 17, scope: !12941)
!12946 = !DILocation(line: 514, column: 19, scope: !12937)
!12947 = !DILocation(line: 514, column: 19, scope: !12938)
!12948 = !DILocation(line: 513, column: 42, scope: !12940)
!12949 = !DILocation(line: 513, column: 17, scope: !12940)
!12950 = distinct !{!12950, !12945, !12951}
!12951 = !DILocation(line: 515, column: 17, scope: !12941)
!12952 = !DILocation(line: 519, column: 15, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !2280, line: 519, column: 15)
!12954 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 519, column: 15)
!12955 = !DILocation(line: 519, column: 15, scope: !12954)
!12956 = !DILocation(line: 520, column: 15, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !2280, line: 520, column: 15)
!12958 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 520, column: 15)
!12959 = !DILocation(line: 520, column: 15, scope: !12958)
!12960 = !DILocation(line: 523, column: 15, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !2280, line: 523, column: 15)
!12962 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 523, column: 15)
!12963 = !DILocation(line: 523, column: 15, scope: !12962)
!12964 = !DILocation(line: 524, column: 15, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12966, file: !2280, line: 524, column: 15)
!12966 = distinct !DILexicalBlock(scope: !11800, file: !2280, line: 524, column: 15)
!12967 = !DILocation(line: 524, column: 15, scope: !12966)
!12968 = !DILocation(line: 531, column: 11, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !2280, line: 531, column: 11)
!12970 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 531, column: 11)
!12971 = !DILocation(line: 531, column: 11, scope: !12970)
!12972 = !DILocation(line: 532, column: 11, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !2280, line: 532, column: 11)
!12974 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 532, column: 11)
!12975 = !DILocation(line: 532, column: 11, scope: !12974)
!12976 = !DILocation(line: 533, column: 49, scope: !11801)
!12977 = !DILocation(line: 533, column: 60, scope: !11801)
!12978 = !DILocation(line: 533, column: 11, scope: !11801)
!12979 = !DILocation(line: 534, column: 19, scope: !11801)
!12980 = !DILocation(line: 534, column: 11, scope: !11801)
!12981 = !DILocation(line: 537, column: 15, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !2280, line: 537, column: 15)
!12983 = distinct !DILexicalBlock(scope: !12984, file: !2280, line: 537, column: 15)
!12984 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 535, column: 13)
!12985 = !DILocation(line: 537, column: 15, scope: !12983)
!12986 = !DILocation(line: 540, column: 15, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !2280, line: 540, column: 15)
!12988 = distinct !DILexicalBlock(scope: !12984, file: !2280, line: 540, column: 15)
!12989 = !DILocation(line: 540, column: 15, scope: !12988)
!12990 = !DILocation(line: 549, column: 11, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !2280, line: 549, column: 11)
!12992 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 549, column: 11)
!12993 = !DILocation(line: 549, column: 11, scope: !12992)
!12994 = !DILocation(line: 550, column: 11, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !2280, line: 550, column: 11)
!12996 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 550, column: 11)
!12997 = !DILocation(line: 550, column: 11, scope: !12996)
!12998 = !DILocation(line: 551, column: 11, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !2280, line: 551, column: 11)
!13000 = distinct !DILexicalBlock(scope: !11801, file: !2280, line: 551, column: 11)
!13001 = !DILocation(line: 551, column: 11, scope: !13000)
!13002 = !DILocation(line: 556, column: 12, scope: !11802)
!13003 = !DILocation(line: 556, column: 38, scope: !11802)
!13004 = !DILocation(line: 556, column: 81, scope: !11802)
!13005 = !DILocation(line: 556, column: 143, scope: !11802)
!13006 = !DILocation(line: 0, scope: !11802)
!13007 = distinct !{!13007, !11824, !13008}
!13008 = !DILocation(line: 557, column: 5, scope: !11793)
!13009 = !DILocation(line: 558, column: 1, scope: !11793)
!13010 = distinct !DISubprogram(name: "gt_ggc_mx_VEC_c_goto_bindings_p_gc", scope: !2280, file: !2280, line: 39, type: !1478, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13011)
!13011 = !{!13012, !13013, !13015, !13019}
!13012 = !DILocalVariable(name: "x_p", arg: 1, scope: !13010, file: !2280, line: 39, type: !624)
!13013 = !DILocalVariable(name: "x", scope: !13010, file: !2280, line: 41, type: !13014)
!13014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!13015 = !DILocalVariable(name: "i0", scope: !13016, file: !2280, line: 45, type: !1107)
!13016 = distinct !DILexicalBlock(scope: !13017, file: !2280, line: 44, column: 7)
!13017 = distinct !DILexicalBlock(scope: !13018, file: !2280, line: 43, column: 5)
!13018 = distinct !DILexicalBlock(scope: !13010, file: !2280, line: 42, column: 7)
!13019 = !DILocalVariable(name: "l0", scope: !13016, file: !2280, line: 46, type: !1107)
!13020 = !DILocation(line: 0, scope: !13010)
!13021 = !DILocation(line: 42, column: 7, scope: !13018)
!13022 = !DILocation(line: 42, column: 7, scope: !13010)
!13023 = !DILocation(line: 46, column: 42, scope: !13016)
!13024 = !DILocation(line: 46, column: 21, scope: !13016)
!13025 = !DILocation(line: 0, scope: !13016)
!13026 = !DILocation(line: 0, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !2280, line: 48, column: 11)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !2280, line: 48, column: 11)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !2280, line: 47, column: 38)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !2280, line: 47, column: 9)
!13031 = distinct !DILexicalBlock(scope: !13016, file: !2280, line: 47, column: 9)
!13032 = !DILocation(line: 47, column: 14, scope: !13031)
!13033 = !DILocation(line: 0, scope: !13031)
!13034 = !DILocation(line: 47, column: 25, scope: !13030)
!13035 = !DILocation(line: 47, column: 9, scope: !13031)
!13036 = !DILocation(line: 48, column: 11, scope: !13027)
!13037 = !DILocation(line: 48, column: 11, scope: !13028)
!13038 = !DILocation(line: 47, column: 34, scope: !13030)
!13039 = !DILocation(line: 47, column: 9, scope: !13030)
!13040 = distinct !{!13040, !13035, !13041}
!13041 = !DILocation(line: 49, column: 9, scope: !13031)
!13042 = !DILocation(line: 52, column: 1, scope: !13010)
!13043 = distinct !DISubprogram(name: "gt_ggc_mx_c_goto_bindings", scope: !2280, file: !2280, line: 55, type: !1478, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13044)
!13044 = !{!13045, !13046}
!13045 = !DILocalVariable(name: "x_p", arg: 1, scope: !13043, file: !2280, line: 55, type: !624)
!13046 = !DILocalVariable(name: "x", scope: !13043, file: !2280, line: 57, type: !13047)
!13047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2111)
!13048 = !DILocation(line: 0, scope: !13043)
!13049 = !DILocation(line: 58, column: 7, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13043, file: !2280, line: 58, column: 7)
!13051 = !DILocation(line: 58, column: 7, scope: !13043)
!13052 = !DILocation(line: 60, column: 7, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13054, file: !2280, line: 60, column: 7)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !2280, line: 60, column: 7)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !2280, line: 59, column: 5)
!13056 = !DILocation(line: 60, column: 7, scope: !13054)
!13057 = !DILocation(line: 61, column: 7, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !2280, line: 61, column: 7)
!13059 = distinct !DILexicalBlock(scope: !13055, file: !2280, line: 61, column: 7)
!13060 = !DILocation(line: 61, column: 7, scope: !13059)
!13061 = !DILocation(line: 63, column: 1, scope: !13043)
!13062 = distinct !DISubprogram(name: "gt_ggc_mx_c_scope", scope: !2280, file: !2280, line: 66, type: !1478, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13063)
!13063 = !{!13064, !13065, !13066}
!13064 = !DILocalVariable(name: "x_p", arg: 1, scope: !13062, file: !2280, line: 66, type: !624)
!13065 = !DILocalVariable(name: "x", scope: !13062, file: !2280, line: 68, type: !2077)
!13066 = !DILocalVariable(name: "xlimit", scope: !13062, file: !2280, line: 69, type: !2077)
!13067 = !DILocation(line: 0, scope: !13062)
!13068 = !DILocation(line: 68, column: 24, scope: !13062)
!13069 = !DILocation(line: 70, column: 3, scope: !13062)
!13070 = !DILocation(line: 70, column: 10, scope: !13062)
!13071 = !DILocation(line: 71, column: 24, scope: !13062)
!13072 = distinct !{!13072, !13069, !13073}
!13073 = !DILocation(line: 71, column: 29, scope: !13062)
!13074 = !DILocation(line: 72, column: 3, scope: !13062)
!13075 = !DILocation(line: 72, column: 12, scope: !13062)
!13076 = !DILocation(line: 74, column: 7, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13078, file: !2280, line: 74, column: 7)
!13078 = distinct !DILexicalBlock(scope: !13079, file: !2280, line: 74, column: 7)
!13079 = distinct !DILexicalBlock(scope: !13062, file: !2280, line: 73, column: 5)
!13080 = !DILocation(line: 74, column: 7, scope: !13078)
!13081 = !DILocation(line: 75, column: 7, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !2280, line: 75, column: 7)
!13083 = distinct !DILexicalBlock(scope: !13079, file: !2280, line: 75, column: 7)
!13084 = !DILocation(line: 75, column: 7, scope: !13083)
!13085 = !DILocation(line: 76, column: 7, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13087, file: !2280, line: 76, column: 7)
!13087 = distinct !DILexicalBlock(scope: !13079, file: !2280, line: 76, column: 7)
!13088 = !DILocation(line: 76, column: 7, scope: !13087)
!13089 = !DILocation(line: 77, column: 7, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13091, file: !2280, line: 77, column: 7)
!13091 = distinct !DILexicalBlock(scope: !13079, file: !2280, line: 77, column: 7)
!13092 = !DILocation(line: 77, column: 7, scope: !13091)
!13093 = !DILocation(line: 78, column: 7, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !2280, line: 78, column: 7)
!13095 = distinct !DILexicalBlock(scope: !13079, file: !2280, line: 78, column: 7)
!13096 = !DILocation(line: 78, column: 7, scope: !13095)
!13097 = !DILocation(line: 79, column: 17, scope: !13079)
!13098 = distinct !{!13098, !13074, !13099}
!13099 = !DILocation(line: 80, column: 5, scope: !13062)
!13100 = !DILocation(line: 81, column: 1, scope: !13062)
!13101 = distinct !DISubprogram(name: "gt_ggc_mx_c_binding", scope: !2280, file: !2280, line: 84, type: !1478, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13102)
!13102 = !{!13103, !13104, !13105}
!13103 = !DILocalVariable(name: "x_p", arg: 1, scope: !13101, file: !2280, line: 84, type: !624)
!13104 = !DILocalVariable(name: "x", scope: !13101, file: !2280, line: 86, type: !2061)
!13105 = !DILocalVariable(name: "xlimit", scope: !13101, file: !2280, line: 87, type: !2061)
!13106 = !DILocation(line: 0, scope: !13101)
!13107 = !DILocation(line: 86, column: 26, scope: !13101)
!13108 = !DILocation(line: 88, column: 3, scope: !13101)
!13109 = !DILocation(line: 88, column: 10, scope: !13101)
!13110 = !DILocation(line: 89, column: 24, scope: !13101)
!13111 = distinct !{!13111, !13108, !13112}
!13112 = !DILocation(line: 89, column: 28, scope: !13101)
!13113 = !DILocation(line: 90, column: 3, scope: !13101)
!13114 = !DILocation(line: 90, column: 12, scope: !13101)
!13115 = !DILocation(line: 92, column: 15, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13101, file: !2280, line: 91, column: 5)
!13117 = !DILocation(line: 92, column: 37, scope: !13116)
!13118 = !DILocation(line: 92, column: 7, scope: !13116)
!13119 = !DILocation(line: 95, column: 11, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !2280, line: 95, column: 11)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !2280, line: 95, column: 11)
!13122 = distinct !DILexicalBlock(scope: !13116, file: !2280, line: 93, column: 9)
!13123 = !DILocation(line: 95, column: 11, scope: !13121)
!13124 = !DILocation(line: 98, column: 11, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !2280, line: 98, column: 11)
!13126 = distinct !DILexicalBlock(scope: !13122, file: !2280, line: 98, column: 11)
!13127 = !DILocation(line: 98, column: 11, scope: !13126)
!13128 = !DILocation(line: 103, column: 7, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !2280, line: 103, column: 7)
!13130 = distinct !DILexicalBlock(scope: !13116, file: !2280, line: 103, column: 7)
!13131 = !DILocation(line: 103, column: 7, scope: !13130)
!13132 = !DILocation(line: 104, column: 7, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13134, file: !2280, line: 104, column: 7)
!13134 = distinct !DILexicalBlock(scope: !13116, file: !2280, line: 104, column: 7)
!13135 = !DILocation(line: 104, column: 7, scope: !13134)
!13136 = !DILocation(line: 105, column: 7, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !2280, line: 105, column: 7)
!13138 = distinct !DILexicalBlock(scope: !13116, file: !2280, line: 105, column: 7)
!13139 = !DILocation(line: 105, column: 7, scope: !13138)
!13140 = !DILocation(line: 106, column: 7, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13142, file: !2280, line: 106, column: 7)
!13142 = distinct !DILexicalBlock(scope: !13116, file: !2280, line: 106, column: 7)
!13143 = !DILocation(line: 106, column: 7, scope: !13142)
!13144 = !DILocation(line: 107, column: 17, scope: !13116)
!13145 = distinct !{!13145, !13113, !13146}
!13146 = !DILocation(line: 108, column: 5, scope: !13101)
!13147 = !DILocation(line: 109, column: 1, scope: !13101)
!13148 = distinct !DISubprogram(name: "gt_ggc_mx_c_label_vars", scope: !2280, file: !2280, line: 112, type: !1478, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13149)
!13149 = !{!13150, !13151}
!13150 = !DILocalVariable(name: "x_p", arg: 1, scope: !13148, file: !2280, line: 112, type: !624)
!13151 = !DILocalVariable(name: "x", scope: !13148, file: !2280, line: 114, type: !13152)
!13152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2069)
!13153 = !DILocation(line: 0, scope: !13148)
!13154 = !DILocation(line: 115, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13148, file: !2280, line: 115, column: 7)
!13156 = !DILocation(line: 115, column: 7, scope: !13148)
!13157 = !DILocation(line: 117, column: 7, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !2280, line: 117, column: 7)
!13159 = distinct !DILexicalBlock(scope: !13160, file: !2280, line: 117, column: 7)
!13160 = distinct !DILexicalBlock(scope: !13155, file: !2280, line: 116, column: 5)
!13161 = !DILocation(line: 117, column: 7, scope: !13159)
!13162 = !DILocation(line: 118, column: 7, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !2280, line: 118, column: 7)
!13164 = distinct !DILexicalBlock(scope: !13160, file: !2280, line: 118, column: 7)
!13165 = !DILocation(line: 118, column: 7, scope: !13164)
!13166 = !DILocation(line: 119, column: 7, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !2280, line: 119, column: 7)
!13168 = distinct !DILexicalBlock(scope: !13160, file: !2280, line: 119, column: 7)
!13169 = !DILocation(line: 119, column: 7, scope: !13168)
!13170 = !DILocation(line: 120, column: 7, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !2280, line: 120, column: 7)
!13172 = distinct !DILexicalBlock(scope: !13160, file: !2280, line: 120, column: 7)
!13173 = !DILocation(line: 120, column: 7, scope: !13172)
!13174 = !DILocation(line: 121, column: 7, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !2280, line: 121, column: 7)
!13176 = distinct !DILexicalBlock(scope: !13160, file: !2280, line: 121, column: 7)
!13177 = !DILocation(line: 121, column: 7, scope: !13176)
!13178 = !DILocation(line: 123, column: 1, scope: !13148)
!13179 = distinct !DISubprogram(name: "gt_ggc_mx_language_function", scope: !2280, file: !2280, line: 126, type: !1478, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13180)
!13180 = !{!13181, !13182}
!13181 = !DILocalVariable(name: "x_p", arg: 1, scope: !13179, file: !2280, line: 126, type: !624)
!13182 = !DILocalVariable(name: "x", scope: !13179, file: !2280, line: 128, type: !13183)
!13183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!13184 = !DILocation(line: 0, scope: !13179)
!13185 = !DILocation(line: 129, column: 7, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13179, file: !2280, line: 129, column: 7)
!13187 = !DILocation(line: 129, column: 7, scope: !13179)
!13188 = !DILocation(line: 131, column: 7, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !2280, line: 131, column: 7)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !2280, line: 131, column: 7)
!13191 = distinct !DILexicalBlock(scope: !13186, file: !2280, line: 130, column: 5)
!13192 = !DILocation(line: 131, column: 7, scope: !13190)
!13193 = !DILocation(line: 132, column: 7, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13195, file: !2280, line: 132, column: 7)
!13195 = distinct !DILexicalBlock(scope: !13191, file: !2280, line: 132, column: 7)
!13196 = !DILocation(line: 132, column: 7, scope: !13195)
!13197 = !DILocation(line: 133, column: 7, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !2280, line: 133, column: 7)
!13199 = distinct !DILexicalBlock(scope: !13191, file: !2280, line: 133, column: 7)
!13200 = !DILocation(line: 133, column: 7, scope: !13199)
!13201 = !DILocation(line: 135, column: 1, scope: !13179)
!13202 = distinct !DISubprogram(name: "gt_ggc_mx_lang_decl", scope: !2280, file: !2280, line: 561, type: !1478, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13203)
!13203 = !{!13204, !13205}
!13204 = !DILocalVariable(name: "x_p", arg: 1, scope: !13202, file: !2280, line: 561, type: !624)
!13205 = !DILocalVariable(name: "x", scope: !13202, file: !2280, line: 563, type: !13206)
!13206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!13207 = !DILocation(line: 0, scope: !13202)
!13208 = !DILocation(line: 564, column: 7, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13202, file: !2280, line: 564, column: 7)
!13210 = !DILocation(line: 564, column: 7, scope: !13202)
!13211 = !DILocation(line: 567, column: 1, scope: !13202)
!13212 = distinct !DISubprogram(name: "gt_ggc_mx_lang_type", scope: !2280, file: !2280, line: 570, type: !1478, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13213)
!13213 = !{!13214, !13215}
!13214 = !DILocalVariable(name: "x_p", arg: 1, scope: !13212, file: !2280, line: 570, type: !624)
!13215 = !DILocalVariable(name: "x", scope: !13212, file: !2280, line: 572, type: !13216)
!13216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!13217 = !DILocation(line: 0, scope: !13212)
!13218 = !DILocation(line: 573, column: 7, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13212, file: !2280, line: 573, column: 7)
!13220 = !DILocation(line: 573, column: 7, scope: !13212)
!13221 = !DILocation(line: 575, column: 7, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13223, file: !2280, line: 575, column: 7)
!13223 = distinct !DILexicalBlock(scope: !13224, file: !2280, line: 575, column: 7)
!13224 = distinct !DILexicalBlock(scope: !13219, file: !2280, line: 574, column: 5)
!13225 = !DILocation(line: 575, column: 7, scope: !13223)
!13226 = !DILocation(line: 576, column: 7, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13228, file: !2280, line: 576, column: 7)
!13228 = distinct !DILexicalBlock(scope: !13224, file: !2280, line: 576, column: 7)
!13229 = !DILocation(line: 576, column: 7, scope: !13228)
!13230 = !DILocation(line: 577, column: 7, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13232, file: !2280, line: 577, column: 7)
!13232 = distinct !DILexicalBlock(scope: !13224, file: !2280, line: 577, column: 7)
!13233 = !DILocation(line: 577, column: 7, scope: !13232)
!13234 = !DILocation(line: 578, column: 7, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !2280, line: 578, column: 7)
!13236 = distinct !DILexicalBlock(scope: !13224, file: !2280, line: 578, column: 7)
!13237 = !DILocation(line: 578, column: 7, scope: !13236)
!13238 = !DILocation(line: 580, column: 1, scope: !13212)
!13239 = distinct !DISubprogram(name: "tree_operand_length", scope: !135, file: !135, line: 5347, type: !13240, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13245)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{!620, !13242}
!13242 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !673, line: 59, baseType: !13243)
!13243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13244, size: 64)
!13244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!13245 = !{!13246}
!13246 = !DILocalVariable(name: "node", arg: 1, scope: !13239, file: !135, line: 5347, type: !13242)
!13247 = !DILocation(line: 0, scope: !13239)
!13248 = !DILocation(line: 5349, column: 7, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13239, file: !135, line: 5349, column: 7)
!13250 = !DILocation(line: 5349, column: 7, scope: !13239)
!13251 = !DILocation(line: 5350, column: 12, scope: !13249)
!13252 = !DILocation(line: 5350, column: 5, scope: !13249)
!13253 = !DILocation(line: 5352, column: 12, scope: !13249)
!13254 = !DILocation(line: 5352, column: 5, scope: !13249)
!13255 = !DILocation(line: 0, scope: !13249)
!13256 = !DILocation(line: 5353, column: 1, scope: !13239)
!13257 = distinct !DISubprogram(name: "gt_pch_nx_c_inline_static", scope: !2280, file: !2280, line: 583, type: !1478, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13258)
!13258 = !{!13259, !13260, !13261}
!13259 = !DILocalVariable(name: "x_p", arg: 1, scope: !13257, file: !2280, line: 583, type: !624)
!13260 = !DILocalVariable(name: "x", scope: !13257, file: !2280, line: 585, type: !2129)
!13261 = !DILocalVariable(name: "xlimit", scope: !13257, file: !2280, line: 586, type: !2129)
!13262 = !DILocation(line: 0, scope: !13257)
!13263 = !DILocation(line: 585, column: 32, scope: !13257)
!13264 = !DILocation(line: 587, column: 3, scope: !13257)
!13265 = !DILocation(line: 587, column: 10, scope: !13257)
!13266 = !DILocation(line: 589, column: 3, scope: !13257)
!13267 = !DILocation(line: 588, column: 24, scope: !13257)
!13268 = distinct !{!13268, !13264, !13269}
!13269 = !DILocation(line: 588, column: 28, scope: !13257)
!13270 = !DILocation(line: 589, column: 12, scope: !13257)
!13271 = !DILocation(line: 591, column: 7, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13273, file: !2280, line: 591, column: 7)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 591, column: 7)
!13274 = distinct !DILexicalBlock(scope: !13257, file: !2280, line: 590, column: 5)
!13275 = !DILocation(line: 591, column: 7, scope: !13273)
!13276 = !DILocation(line: 592, column: 7, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13278, file: !2280, line: 592, column: 7)
!13278 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 592, column: 7)
!13279 = !DILocation(line: 592, column: 7, scope: !13278)
!13280 = !DILocation(line: 593, column: 7, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !2280, line: 593, column: 7)
!13282 = distinct !DILexicalBlock(scope: !13274, file: !2280, line: 593, column: 7)
!13283 = !DILocation(line: 593, column: 7, scope: !13282)
!13284 = !DILocation(line: 594, column: 17, scope: !13274)
!13285 = distinct !{!13285, !13266, !13286}
!13286 = !DILocation(line: 595, column: 5, scope: !13257)
!13287 = !DILocation(line: 596, column: 1, scope: !13257)
!13288 = distinct !DISubprogram(name: "gt_pch_p_15c_inline_static", scope: !2280, file: !2280, line: 1144, type: !13289, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13292)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{null, !624, !624, !13291, !624}
!13291 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2284, line: 38, baseType: !1502)
!13292 = !{!13293, !13294, !13295, !13296, !13297}
!13293 = !DILocalVariable(name: "this_obj", arg: 1, scope: !13288, file: !2280, line: 1144, type: !624)
!13294 = !DILocalVariable(name: "x_p", arg: 2, scope: !13288, file: !2280, line: 1145, type: !624)
!13295 = !DILocalVariable(name: "op", arg: 3, scope: !13288, file: !2280, line: 1146, type: !13291)
!13296 = !DILocalVariable(name: "cookie", arg: 4, scope: !13288, file: !2280, line: 1147, type: !624)
!13297 = !DILocalVariable(name: "x", scope: !13288, file: !2280, line: 1149, type: !13298)
!13298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2129)
!13299 = !DILocation(line: 0, scope: !13288)
!13300 = !DILocation(line: 1150, column: 19, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13288, file: !2280, line: 1150, column: 7)
!13302 = !DILocation(line: 1150, column: 7, scope: !13288)
!13303 = !DILocation(line: 1151, column: 16, scope: !13301)
!13304 = !DILocation(line: 1151, column: 5, scope: !13301)
!13305 = !DILocation(line: 1152, column: 7, scope: !13288)
!13306 = !DILocation(line: 1153, column: 16, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13288, file: !2280, line: 1152, column: 7)
!13308 = !DILocation(line: 1153, column: 5, scope: !13307)
!13309 = !DILocation(line: 1154, column: 7, scope: !13288)
!13310 = !DILocation(line: 1155, column: 16, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13288, file: !2280, line: 1154, column: 7)
!13312 = !DILocation(line: 1155, column: 5, scope: !13311)
!13313 = !DILocation(line: 1156, column: 1, scope: !13288)
!13314 = distinct !DISubprogram(name: "gt_pch_nx_lang_tree_node", scope: !2280, file: !2280, line: 698, type: !1478, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13315)
!13315 = !{!13316, !13317, !13318, !13319, !13324, !13325, !13328, !13329, !13331, !13332, !13334}
!13316 = !DILocalVariable(name: "x_p", arg: 1, scope: !13314, file: !2280, line: 698, type: !624)
!13317 = !DILocalVariable(name: "x", scope: !13314, file: !2280, line: 700, type: !2225)
!13318 = !DILocalVariable(name: "xlimit", scope: !13314, file: !2280, line: 701, type: !2225)
!13319 = !DILocalVariable(name: "i1", scope: !13320, file: !2280, line: 993, type: !1107)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 992, column: 15)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 710, column: 13)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !2280, line: 707, column: 9)
!13323 = distinct !DILexicalBlock(scope: !13314, file: !2280, line: 705, column: 5)
!13324 = !DILocalVariable(name: "l1", scope: !13320, file: !2280, line: 994, type: !1107)
!13325 = !DILocalVariable(name: "i2", scope: !13326, file: !2280, line: 1008, type: !1107)
!13326 = distinct !DILexicalBlock(scope: !13327, file: !2280, line: 1007, column: 19)
!13327 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1005, column: 17)
!13328 = !DILocalVariable(name: "l2", scope: !13326, file: !2280, line: 1009, type: !1107)
!13329 = !DILocalVariable(name: "i3", scope: !13330, file: !2280, line: 1047, type: !1107)
!13330 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1046, column: 15)
!13331 = !DILocalVariable(name: "l3", scope: !13330, file: !2280, line: 1048, type: !1107)
!13332 = !DILocalVariable(name: "i4", scope: !13333, file: !2280, line: 1071, type: !1107)
!13333 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1070, column: 15)
!13334 = !DILocalVariable(name: "l4", scope: !13333, file: !2280, line: 1072, type: !1107)
!13335 = !DILocation(line: 0, scope: !13314)
!13336 = !DILocation(line: 700, column: 30, scope: !13314)
!13337 = !DILocation(line: 702, column: 3, scope: !13314)
!13338 = !DILocation(line: 702, column: 10, scope: !13314)
!13339 = !DILocation(line: 704, column: 3, scope: !13314)
!13340 = !DILocation(line: 703, column: 14, scope: !13314)
!13341 = !DILocation(line: 703, column: 45, scope: !13314)
!13342 = !DILocation(line: 703, column: 88, scope: !13314)
!13343 = !DILocation(line: 703, column: 155, scope: !13314)
!13344 = distinct !{!13344, !13337, !13345}
!13345 = !DILocation(line: 703, column: 187, scope: !13314)
!13346 = !DILocation(line: 704, column: 12, scope: !13314)
!13347 = !DILocation(line: 706, column: 15, scope: !13323)
!13348 = !DILocation(line: 706, column: 43, scope: !13323)
!13349 = !DILocation(line: 706, column: 7, scope: !13323)
!13350 = !DILocation(line: 709, column: 47, scope: !13322)
!13351 = !DILocation(line: 709, column: 19, scope: !13322)
!13352 = !DILocation(line: 709, column: 11, scope: !13322)
!13353 = !DILocation(line: 714, column: 15, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !2280, line: 714, column: 15)
!13355 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 714, column: 15)
!13356 = !DILocation(line: 714, column: 15, scope: !13355)
!13357 = !DILocation(line: 715, column: 15, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !2280, line: 715, column: 15)
!13359 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 715, column: 15)
!13360 = !DILocation(line: 715, column: 15, scope: !13359)
!13361 = !DILocation(line: 718, column: 15, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13363, file: !2280, line: 718, column: 15)
!13363 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 718, column: 15)
!13364 = !DILocation(line: 718, column: 15, scope: !13363)
!13365 = !DILocation(line: 719, column: 15, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !2280, line: 719, column: 15)
!13367 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 719, column: 15)
!13368 = !DILocation(line: 719, column: 15, scope: !13367)
!13369 = !DILocation(line: 722, column: 15, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !2280, line: 722, column: 15)
!13371 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 722, column: 15)
!13372 = !DILocation(line: 722, column: 15, scope: !13371)
!13373 = !DILocation(line: 723, column: 15, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !2280, line: 723, column: 15)
!13375 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 723, column: 15)
!13376 = !DILocation(line: 723, column: 15, scope: !13375)
!13377 = !DILocation(line: 724, column: 15, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13379, file: !2280, line: 724, column: 15)
!13379 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 724, column: 15)
!13380 = !DILocation(line: 724, column: 15, scope: !13379)
!13381 = !DILocation(line: 727, column: 15, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !2280, line: 727, column: 15)
!13383 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 727, column: 15)
!13384 = !DILocation(line: 727, column: 15, scope: !13383)
!13385 = !DILocation(line: 728, column: 15, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !2280, line: 728, column: 15)
!13387 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 728, column: 15)
!13388 = !DILocation(line: 728, column: 15, scope: !13387)
!13389 = !DILocation(line: 729, column: 15, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !2280, line: 729, column: 15)
!13391 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 729, column: 15)
!13392 = !DILocation(line: 729, column: 15, scope: !13391)
!13393 = !DILocation(line: 732, column: 15, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13395, file: !2280, line: 732, column: 15)
!13395 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 732, column: 15)
!13396 = !DILocation(line: 732, column: 15, scope: !13395)
!13397 = !DILocation(line: 733, column: 15, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13399, file: !2280, line: 733, column: 15)
!13399 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 733, column: 15)
!13400 = !DILocation(line: 733, column: 15, scope: !13399)
!13401 = !DILocation(line: 734, column: 15, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !2280, line: 734, column: 15)
!13403 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 734, column: 15)
!13404 = !DILocation(line: 734, column: 15, scope: !13403)
!13405 = !DILocation(line: 737, column: 15, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !2280, line: 737, column: 15)
!13407 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 737, column: 15)
!13408 = !DILocation(line: 737, column: 15, scope: !13407)
!13409 = !DILocation(line: 738, column: 15, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13411, file: !2280, line: 738, column: 15)
!13411 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 738, column: 15)
!13412 = !DILocation(line: 738, column: 15, scope: !13411)
!13413 = !DILocation(line: 741, column: 15, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !2280, line: 741, column: 15)
!13415 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 741, column: 15)
!13416 = !DILocation(line: 741, column: 15, scope: !13415)
!13417 = !DILocation(line: 742, column: 15, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !2280, line: 742, column: 15)
!13419 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 742, column: 15)
!13420 = !DILocation(line: 742, column: 15, scope: !13419)
!13421 = !DILocation(line: 743, column: 15, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !2280, line: 743, column: 15)
!13423 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 743, column: 15)
!13424 = !DILocation(line: 743, column: 15, scope: !13423)
!13425 = !DILocation(line: 744, column: 15, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !2280, line: 744, column: 15)
!13427 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 744, column: 15)
!13428 = !DILocation(line: 744, column: 15, scope: !13427)
!13429 = !DILocation(line: 747, column: 15, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !2280, line: 747, column: 15)
!13431 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 747, column: 15)
!13432 = !DILocation(line: 747, column: 15, scope: !13431)
!13433 = !DILocation(line: 748, column: 15, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2280, line: 748, column: 15)
!13435 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 748, column: 15)
!13436 = !DILocation(line: 748, column: 15, scope: !13435)
!13437 = !DILocation(line: 749, column: 51, scope: !13321)
!13438 = !DILocation(line: 749, column: 54, scope: !13321)
!13439 = !DILocation(line: 749, column: 15, scope: !13321)
!13440 = !DILocation(line: 750, column: 15, scope: !13321)
!13441 = !DILocation(line: 752, column: 15, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !2280, line: 752, column: 15)
!13443 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 752, column: 15)
!13444 = !DILocation(line: 752, column: 15, scope: !13443)
!13445 = !DILocation(line: 753, column: 15, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !2280, line: 753, column: 15)
!13447 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 753, column: 15)
!13448 = !DILocation(line: 753, column: 15, scope: !13447)
!13449 = !DILocation(line: 754, column: 15, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !2280, line: 754, column: 15)
!13451 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 754, column: 15)
!13452 = !DILocation(line: 754, column: 15, scope: !13451)
!13453 = !DILocation(line: 755, column: 15, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !2280, line: 755, column: 15)
!13455 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 755, column: 15)
!13456 = !DILocation(line: 755, column: 15, scope: !13455)
!13457 = !DILocation(line: 758, column: 15, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !2280, line: 758, column: 15)
!13459 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 758, column: 15)
!13460 = !DILocation(line: 758, column: 15, scope: !13459)
!13461 = !DILocation(line: 759, column: 15, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !2280, line: 759, column: 15)
!13463 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 759, column: 15)
!13464 = !DILocation(line: 759, column: 15, scope: !13463)
!13465 = !DILocation(line: 760, column: 15, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !2280, line: 760, column: 15)
!13467 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 760, column: 15)
!13468 = !DILocation(line: 760, column: 15, scope: !13467)
!13469 = !DILocation(line: 761, column: 15, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !2280, line: 761, column: 15)
!13471 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 761, column: 15)
!13472 = !DILocation(line: 761, column: 15, scope: !13471)
!13473 = !DILocation(line: 762, column: 15, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !2280, line: 762, column: 15)
!13475 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 762, column: 15)
!13476 = !DILocation(line: 762, column: 15, scope: !13475)
!13477 = !DILocation(line: 763, column: 15, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !2280, line: 763, column: 15)
!13479 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 763, column: 15)
!13480 = !DILocation(line: 763, column: 15, scope: !13479)
!13481 = !DILocation(line: 764, column: 15, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !2280, line: 764, column: 15)
!13483 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 764, column: 15)
!13484 = !DILocation(line: 764, column: 15, scope: !13483)
!13485 = !DILocation(line: 765, column: 15, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13487, file: !2280, line: 765, column: 15)
!13487 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 765, column: 15)
!13488 = !DILocation(line: 765, column: 15, scope: !13487)
!13489 = !DILocation(line: 766, column: 15, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13491, file: !2280, line: 766, column: 15)
!13491 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 766, column: 15)
!13492 = !DILocation(line: 766, column: 15, scope: !13491)
!13493 = !DILocation(line: 767, column: 15, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13495, file: !2280, line: 767, column: 15)
!13495 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 767, column: 15)
!13496 = !DILocation(line: 767, column: 15, scope: !13495)
!13497 = !DILocation(line: 770, column: 15, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13499, file: !2280, line: 770, column: 15)
!13499 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 770, column: 15)
!13500 = !DILocation(line: 770, column: 15, scope: !13499)
!13501 = !DILocation(line: 771, column: 15, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !2280, line: 771, column: 15)
!13503 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 771, column: 15)
!13504 = !DILocation(line: 771, column: 15, scope: !13503)
!13505 = !DILocation(line: 772, column: 15, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !2280, line: 772, column: 15)
!13507 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 772, column: 15)
!13508 = !DILocation(line: 772, column: 15, scope: !13507)
!13509 = !DILocation(line: 773, column: 15, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13511, file: !2280, line: 773, column: 15)
!13511 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 773, column: 15)
!13512 = !DILocation(line: 773, column: 15, scope: !13511)
!13513 = !DILocation(line: 774, column: 15, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13515, file: !2280, line: 774, column: 15)
!13515 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 774, column: 15)
!13516 = !DILocation(line: 774, column: 15, scope: !13515)
!13517 = !DILocation(line: 775, column: 15, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !2280, line: 775, column: 15)
!13519 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 775, column: 15)
!13520 = !DILocation(line: 775, column: 15, scope: !13519)
!13521 = !DILocation(line: 776, column: 15, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13523, file: !2280, line: 776, column: 15)
!13523 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 776, column: 15)
!13524 = !DILocation(line: 776, column: 15, scope: !13523)
!13525 = !DILocation(line: 777, column: 15, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13527, file: !2280, line: 777, column: 15)
!13527 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 777, column: 15)
!13528 = !DILocation(line: 777, column: 15, scope: !13527)
!13529 = !DILocation(line: 778, column: 15, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13531, file: !2280, line: 778, column: 15)
!13531 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 778, column: 15)
!13532 = !DILocation(line: 778, column: 15, scope: !13531)
!13533 = !DILocation(line: 779, column: 15, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13535, file: !2280, line: 779, column: 15)
!13535 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 779, column: 15)
!13536 = !DILocation(line: 779, column: 15, scope: !13535)
!13537 = !DILocation(line: 780, column: 15, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !2280, line: 780, column: 15)
!13539 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 780, column: 15)
!13540 = !DILocation(line: 780, column: 15, scope: !13539)
!13541 = !DILocation(line: 783, column: 15, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13543, file: !2280, line: 783, column: 15)
!13543 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 783, column: 15)
!13544 = !DILocation(line: 783, column: 15, scope: !13543)
!13545 = !DILocation(line: 784, column: 15, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13547, file: !2280, line: 784, column: 15)
!13547 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 784, column: 15)
!13548 = !DILocation(line: 784, column: 15, scope: !13547)
!13549 = !DILocation(line: 785, column: 15, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13551, file: !2280, line: 785, column: 15)
!13551 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 785, column: 15)
!13552 = !DILocation(line: 785, column: 15, scope: !13551)
!13553 = !DILocation(line: 786, column: 15, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !2280, line: 786, column: 15)
!13555 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 786, column: 15)
!13556 = !DILocation(line: 786, column: 15, scope: !13555)
!13557 = !DILocation(line: 787, column: 15, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !2280, line: 787, column: 15)
!13559 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 787, column: 15)
!13560 = !DILocation(line: 787, column: 15, scope: !13559)
!13561 = !DILocation(line: 788, column: 15, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13563, file: !2280, line: 788, column: 15)
!13563 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 788, column: 15)
!13564 = !DILocation(line: 788, column: 15, scope: !13563)
!13565 = !DILocation(line: 789, column: 15, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !2280, line: 789, column: 15)
!13567 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 789, column: 15)
!13568 = !DILocation(line: 789, column: 15, scope: !13567)
!13569 = !DILocation(line: 790, column: 15, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !2280, line: 790, column: 15)
!13571 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 790, column: 15)
!13572 = !DILocation(line: 790, column: 15, scope: !13571)
!13573 = !DILocation(line: 791, column: 15, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !2280, line: 791, column: 15)
!13575 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 791, column: 15)
!13576 = !DILocation(line: 791, column: 15, scope: !13575)
!13577 = !DILocation(line: 792, column: 15, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !2280, line: 792, column: 15)
!13579 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 792, column: 15)
!13580 = !DILocation(line: 792, column: 15, scope: !13579)
!13581 = !DILocation(line: 793, column: 15, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !2280, line: 793, column: 15)
!13583 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 793, column: 15)
!13584 = !DILocation(line: 793, column: 15, scope: !13583)
!13585 = !DILocation(line: 794, column: 15, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !2280, line: 794, column: 15)
!13587 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 794, column: 15)
!13588 = !DILocation(line: 794, column: 15, scope: !13587)
!13589 = !DILocation(line: 795, column: 15, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !2280, line: 795, column: 15)
!13591 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 795, column: 15)
!13592 = !DILocation(line: 795, column: 15, scope: !13591)
!13593 = !DILocation(line: 796, column: 15, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !2280, line: 796, column: 15)
!13595 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 796, column: 15)
!13596 = !DILocation(line: 796, column: 15, scope: !13595)
!13597 = !DILocation(line: 797, column: 15, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !2280, line: 797, column: 15)
!13599 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 797, column: 15)
!13600 = !DILocation(line: 797, column: 15, scope: !13599)
!13601 = !DILocation(line: 798, column: 15, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !2280, line: 798, column: 15)
!13603 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 798, column: 15)
!13604 = !DILocation(line: 798, column: 15, scope: !13603)
!13605 = !DILocation(line: 799, column: 15, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !2280, line: 799, column: 15)
!13607 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 799, column: 15)
!13608 = !DILocation(line: 799, column: 15, scope: !13607)
!13609 = !DILocation(line: 800, column: 15, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !2280, line: 800, column: 15)
!13611 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 800, column: 15)
!13612 = !DILocation(line: 800, column: 15, scope: !13611)
!13613 = !DILocation(line: 803, column: 15, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !2280, line: 803, column: 15)
!13615 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 803, column: 15)
!13616 = !DILocation(line: 803, column: 15, scope: !13615)
!13617 = !DILocation(line: 804, column: 15, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !2280, line: 804, column: 15)
!13619 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 804, column: 15)
!13620 = !DILocation(line: 804, column: 15, scope: !13619)
!13621 = !DILocation(line: 805, column: 15, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !2280, line: 805, column: 15)
!13623 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 805, column: 15)
!13624 = !DILocation(line: 805, column: 15, scope: !13623)
!13625 = !DILocation(line: 806, column: 15, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !2280, line: 806, column: 15)
!13627 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 806, column: 15)
!13628 = !DILocation(line: 806, column: 15, scope: !13627)
!13629 = !DILocation(line: 807, column: 15, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !2280, line: 807, column: 15)
!13631 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 807, column: 15)
!13632 = !DILocation(line: 807, column: 15, scope: !13631)
!13633 = !DILocation(line: 808, column: 15, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13635, file: !2280, line: 808, column: 15)
!13635 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 808, column: 15)
!13636 = !DILocation(line: 808, column: 15, scope: !13635)
!13637 = !DILocation(line: 809, column: 15, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13639, file: !2280, line: 809, column: 15)
!13639 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 809, column: 15)
!13640 = !DILocation(line: 809, column: 15, scope: !13639)
!13641 = !DILocation(line: 810, column: 15, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13643, file: !2280, line: 810, column: 15)
!13643 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 810, column: 15)
!13644 = !DILocation(line: 810, column: 15, scope: !13643)
!13645 = !DILocation(line: 811, column: 15, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13647, file: !2280, line: 811, column: 15)
!13647 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 811, column: 15)
!13648 = !DILocation(line: 811, column: 15, scope: !13647)
!13649 = !DILocation(line: 812, column: 15, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13651, file: !2280, line: 812, column: 15)
!13651 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 812, column: 15)
!13652 = !DILocation(line: 812, column: 15, scope: !13651)
!13653 = !DILocation(line: 813, column: 15, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !2280, line: 813, column: 15)
!13655 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 813, column: 15)
!13656 = !DILocation(line: 813, column: 15, scope: !13655)
!13657 = !DILocation(line: 814, column: 15, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13659, file: !2280, line: 814, column: 15)
!13659 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 814, column: 15)
!13660 = !DILocation(line: 814, column: 15, scope: !13659)
!13661 = !DILocation(line: 815, column: 15, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13663, file: !2280, line: 815, column: 15)
!13663 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 815, column: 15)
!13664 = !DILocation(line: 815, column: 15, scope: !13663)
!13665 = !DILocation(line: 818, column: 15, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !2280, line: 818, column: 15)
!13667 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 818, column: 15)
!13668 = !DILocation(line: 818, column: 15, scope: !13667)
!13669 = !DILocation(line: 819, column: 15, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13671, file: !2280, line: 819, column: 15)
!13671 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 819, column: 15)
!13672 = !DILocation(line: 819, column: 15, scope: !13671)
!13673 = !DILocation(line: 820, column: 15, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13675, file: !2280, line: 820, column: 15)
!13675 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 820, column: 15)
!13676 = !DILocation(line: 820, column: 15, scope: !13675)
!13677 = !DILocation(line: 821, column: 15, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !2280, line: 821, column: 15)
!13679 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 821, column: 15)
!13680 = !DILocation(line: 821, column: 15, scope: !13679)
!13681 = !DILocation(line: 822, column: 15, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13683, file: !2280, line: 822, column: 15)
!13683 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 822, column: 15)
!13684 = !DILocation(line: 822, column: 15, scope: !13683)
!13685 = !DILocation(line: 823, column: 15, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13687, file: !2280, line: 823, column: 15)
!13687 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 823, column: 15)
!13688 = !DILocation(line: 823, column: 15, scope: !13687)
!13689 = !DILocation(line: 824, column: 15, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !2280, line: 824, column: 15)
!13691 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 824, column: 15)
!13692 = !DILocation(line: 824, column: 15, scope: !13691)
!13693 = !DILocation(line: 825, column: 15, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13695, file: !2280, line: 825, column: 15)
!13695 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 825, column: 15)
!13696 = !DILocation(line: 825, column: 15, scope: !13695)
!13697 = !DILocation(line: 826, column: 15, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13699, file: !2280, line: 826, column: 15)
!13699 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 826, column: 15)
!13700 = !DILocation(line: 826, column: 15, scope: !13699)
!13701 = !DILocation(line: 827, column: 15, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !2280, line: 827, column: 15)
!13703 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 827, column: 15)
!13704 = !DILocation(line: 827, column: 15, scope: !13703)
!13705 = !DILocation(line: 828, column: 15, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13707, file: !2280, line: 828, column: 15)
!13707 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 828, column: 15)
!13708 = !DILocation(line: 828, column: 15, scope: !13707)
!13709 = !DILocation(line: 829, column: 15, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13711, file: !2280, line: 829, column: 15)
!13711 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 829, column: 15)
!13712 = !DILocation(line: 829, column: 15, scope: !13711)
!13713 = !DILocation(line: 830, column: 15, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13715, file: !2280, line: 830, column: 15)
!13715 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 830, column: 15)
!13716 = !DILocation(line: 830, column: 15, scope: !13715)
!13717 = !DILocation(line: 831, column: 15, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13719, file: !2280, line: 831, column: 15)
!13719 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 831, column: 15)
!13720 = !DILocation(line: 831, column: 15, scope: !13719)
!13721 = !DILocation(line: 834, column: 15, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !2280, line: 834, column: 15)
!13723 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 834, column: 15)
!13724 = !DILocation(line: 834, column: 15, scope: !13723)
!13725 = !DILocation(line: 835, column: 15, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13727, file: !2280, line: 835, column: 15)
!13727 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 835, column: 15)
!13728 = !DILocation(line: 835, column: 15, scope: !13727)
!13729 = !DILocation(line: 836, column: 15, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !2280, line: 836, column: 15)
!13731 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 836, column: 15)
!13732 = !DILocation(line: 836, column: 15, scope: !13731)
!13733 = !DILocation(line: 837, column: 15, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13735, file: !2280, line: 837, column: 15)
!13735 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 837, column: 15)
!13736 = !DILocation(line: 837, column: 15, scope: !13735)
!13737 = !DILocation(line: 838, column: 15, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !2280, line: 838, column: 15)
!13739 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 838, column: 15)
!13740 = !DILocation(line: 838, column: 15, scope: !13739)
!13741 = !DILocation(line: 839, column: 15, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !2280, line: 839, column: 15)
!13743 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 839, column: 15)
!13744 = !DILocation(line: 839, column: 15, scope: !13743)
!13745 = !DILocation(line: 840, column: 15, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !2280, line: 840, column: 15)
!13747 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 840, column: 15)
!13748 = !DILocation(line: 840, column: 15, scope: !13747)
!13749 = !DILocation(line: 841, column: 15, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13751, file: !2280, line: 841, column: 15)
!13751 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 841, column: 15)
!13752 = !DILocation(line: 841, column: 15, scope: !13751)
!13753 = !DILocation(line: 842, column: 15, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !2280, line: 842, column: 15)
!13755 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 842, column: 15)
!13756 = !DILocation(line: 842, column: 15, scope: !13755)
!13757 = !DILocation(line: 843, column: 15, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !2280, line: 843, column: 15)
!13759 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 843, column: 15)
!13760 = !DILocation(line: 843, column: 15, scope: !13759)
!13761 = !DILocation(line: 844, column: 15, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13763, file: !2280, line: 844, column: 15)
!13763 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 844, column: 15)
!13764 = !DILocation(line: 844, column: 15, scope: !13763)
!13765 = !DILocation(line: 845, column: 15, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13767, file: !2280, line: 845, column: 15)
!13767 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 845, column: 15)
!13768 = !DILocation(line: 845, column: 15, scope: !13767)
!13769 = !DILocation(line: 846, column: 15, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !2280, line: 846, column: 15)
!13771 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 846, column: 15)
!13772 = !DILocation(line: 846, column: 15, scope: !13771)
!13773 = !DILocation(line: 847, column: 15, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13775, file: !2280, line: 847, column: 15)
!13775 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 847, column: 15)
!13776 = !DILocation(line: 847, column: 15, scope: !13775)
!13777 = !DILocation(line: 848, column: 15, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !2280, line: 848, column: 15)
!13779 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 848, column: 15)
!13780 = !DILocation(line: 848, column: 15, scope: !13779)
!13781 = !DILocation(line: 851, column: 15, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !2280, line: 851, column: 15)
!13783 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 851, column: 15)
!13784 = !DILocation(line: 851, column: 15, scope: !13783)
!13785 = !DILocation(line: 852, column: 15, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !2280, line: 852, column: 15)
!13787 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 852, column: 15)
!13788 = !DILocation(line: 852, column: 15, scope: !13787)
!13789 = !DILocation(line: 853, column: 15, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13791, file: !2280, line: 853, column: 15)
!13791 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 853, column: 15)
!13792 = !DILocation(line: 853, column: 15, scope: !13791)
!13793 = !DILocation(line: 854, column: 15, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !2280, line: 854, column: 15)
!13795 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 854, column: 15)
!13796 = !DILocation(line: 854, column: 15, scope: !13795)
!13797 = !DILocation(line: 855, column: 15, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !2280, line: 855, column: 15)
!13799 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 855, column: 15)
!13800 = !DILocation(line: 855, column: 15, scope: !13799)
!13801 = !DILocation(line: 856, column: 15, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !2280, line: 856, column: 15)
!13803 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 856, column: 15)
!13804 = !DILocation(line: 856, column: 15, scope: !13803)
!13805 = !DILocation(line: 857, column: 15, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2280, line: 857, column: 15)
!13807 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 857, column: 15)
!13808 = !DILocation(line: 857, column: 15, scope: !13807)
!13809 = !DILocation(line: 858, column: 15, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !2280, line: 858, column: 15)
!13811 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 858, column: 15)
!13812 = !DILocation(line: 858, column: 15, scope: !13811)
!13813 = !DILocation(line: 859, column: 15, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13815, file: !2280, line: 859, column: 15)
!13815 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 859, column: 15)
!13816 = !DILocation(line: 859, column: 15, scope: !13815)
!13817 = !DILocation(line: 860, column: 15, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !2280, line: 860, column: 15)
!13819 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 860, column: 15)
!13820 = !DILocation(line: 860, column: 15, scope: !13819)
!13821 = !DILocation(line: 861, column: 15, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !2280, line: 861, column: 15)
!13823 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 861, column: 15)
!13824 = !DILocation(line: 861, column: 15, scope: !13823)
!13825 = !DILocation(line: 862, column: 15, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !2280, line: 862, column: 15)
!13827 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 862, column: 15)
!13828 = !DILocation(line: 862, column: 15, scope: !13827)
!13829 = !DILocation(line: 863, column: 15, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13831, file: !2280, line: 863, column: 15)
!13831 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 863, column: 15)
!13832 = !DILocation(line: 863, column: 15, scope: !13831)
!13833 = !DILocation(line: 864, column: 15, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13835, file: !2280, line: 864, column: 15)
!13835 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 864, column: 15)
!13836 = !DILocation(line: 864, column: 15, scope: !13835)
!13837 = !DILocation(line: 865, column: 15, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13839, file: !2280, line: 865, column: 15)
!13839 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 865, column: 15)
!13840 = !DILocation(line: 865, column: 15, scope: !13839)
!13841 = !DILocation(line: 868, column: 15, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13843, file: !2280, line: 868, column: 15)
!13843 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 868, column: 15)
!13844 = !DILocation(line: 868, column: 15, scope: !13843)
!13845 = !DILocation(line: 869, column: 15, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13847, file: !2280, line: 869, column: 15)
!13847 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 869, column: 15)
!13848 = !DILocation(line: 869, column: 15, scope: !13847)
!13849 = !DILocation(line: 870, column: 15, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !2280, line: 870, column: 15)
!13851 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 870, column: 15)
!13852 = !DILocation(line: 870, column: 15, scope: !13851)
!13853 = !DILocation(line: 871, column: 15, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !2280, line: 871, column: 15)
!13855 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 871, column: 15)
!13856 = !DILocation(line: 871, column: 15, scope: !13855)
!13857 = !DILocation(line: 872, column: 15, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13859, file: !2280, line: 872, column: 15)
!13859 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 872, column: 15)
!13860 = !DILocation(line: 872, column: 15, scope: !13859)
!13861 = !DILocation(line: 873, column: 15, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13863, file: !2280, line: 873, column: 15)
!13863 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 873, column: 15)
!13864 = !DILocation(line: 873, column: 15, scope: !13863)
!13865 = !DILocation(line: 874, column: 15, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13867, file: !2280, line: 874, column: 15)
!13867 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 874, column: 15)
!13868 = !DILocation(line: 874, column: 15, scope: !13867)
!13869 = !DILocation(line: 875, column: 15, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !2280, line: 875, column: 15)
!13871 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 875, column: 15)
!13872 = !DILocation(line: 875, column: 15, scope: !13871)
!13873 = !DILocation(line: 876, column: 15, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13875, file: !2280, line: 876, column: 15)
!13875 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 876, column: 15)
!13876 = !DILocation(line: 876, column: 15, scope: !13875)
!13877 = !DILocation(line: 877, column: 15, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13879, file: !2280, line: 877, column: 15)
!13879 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 877, column: 15)
!13880 = !DILocation(line: 877, column: 15, scope: !13879)
!13881 = !DILocation(line: 878, column: 15, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13883, file: !2280, line: 878, column: 15)
!13883 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 878, column: 15)
!13884 = !DILocation(line: 878, column: 15, scope: !13883)
!13885 = !DILocation(line: 881, column: 15, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13887, file: !2280, line: 881, column: 15)
!13887 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 881, column: 15)
!13888 = !DILocation(line: 881, column: 15, scope: !13887)
!13889 = !DILocation(line: 882, column: 15, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13891, file: !2280, line: 882, column: 15)
!13891 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 882, column: 15)
!13892 = !DILocation(line: 882, column: 15, scope: !13891)
!13893 = !DILocation(line: 883, column: 15, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !2280, line: 883, column: 15)
!13895 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 883, column: 15)
!13896 = !DILocation(line: 883, column: 15, scope: !13895)
!13897 = !DILocation(line: 884, column: 15, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13899, file: !2280, line: 884, column: 15)
!13899 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 884, column: 15)
!13900 = !DILocation(line: 884, column: 15, scope: !13899)
!13901 = !DILocation(line: 885, column: 15, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13903, file: !2280, line: 885, column: 15)
!13903 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 885, column: 15)
!13904 = !DILocation(line: 885, column: 15, scope: !13903)
!13905 = !DILocation(line: 886, column: 15, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !2280, line: 886, column: 15)
!13907 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 886, column: 15)
!13908 = !DILocation(line: 886, column: 15, scope: !13907)
!13909 = !DILocation(line: 887, column: 15, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13911, file: !2280, line: 887, column: 15)
!13911 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 887, column: 15)
!13912 = !DILocation(line: 887, column: 15, scope: !13911)
!13913 = !DILocation(line: 888, column: 15, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !2280, line: 888, column: 15)
!13915 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 888, column: 15)
!13916 = !DILocation(line: 888, column: 15, scope: !13915)
!13917 = !DILocation(line: 889, column: 15, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !2280, line: 889, column: 15)
!13919 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 889, column: 15)
!13920 = !DILocation(line: 889, column: 15, scope: !13919)
!13921 = !DILocation(line: 890, column: 15, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !2280, line: 890, column: 15)
!13923 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 890, column: 15)
!13924 = !DILocation(line: 890, column: 15, scope: !13923)
!13925 = !DILocation(line: 891, column: 15, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !2280, line: 891, column: 15)
!13927 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 891, column: 15)
!13928 = !DILocation(line: 891, column: 15, scope: !13927)
!13929 = !DILocation(line: 892, column: 15, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !2280, line: 892, column: 15)
!13931 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 892, column: 15)
!13932 = !DILocation(line: 892, column: 15, scope: !13931)
!13933 = !DILocation(line: 895, column: 15, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !2280, line: 895, column: 15)
!13935 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 895, column: 15)
!13936 = !DILocation(line: 895, column: 15, scope: !13935)
!13937 = !DILocation(line: 896, column: 15, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13939, file: !2280, line: 896, column: 15)
!13939 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 896, column: 15)
!13940 = !DILocation(line: 896, column: 15, scope: !13939)
!13941 = !DILocation(line: 897, column: 15, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !2280, line: 897, column: 15)
!13943 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 897, column: 15)
!13944 = !DILocation(line: 897, column: 15, scope: !13943)
!13945 = !DILocation(line: 898, column: 15, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13947, file: !2280, line: 898, column: 15)
!13947 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 898, column: 15)
!13948 = !DILocation(line: 898, column: 15, scope: !13947)
!13949 = !DILocation(line: 899, column: 15, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13951, file: !2280, line: 899, column: 15)
!13951 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 899, column: 15)
!13952 = !DILocation(line: 899, column: 15, scope: !13951)
!13953 = !DILocation(line: 900, column: 15, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !2280, line: 900, column: 15)
!13955 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 900, column: 15)
!13956 = !DILocation(line: 900, column: 15, scope: !13955)
!13957 = !DILocation(line: 901, column: 15, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13959, file: !2280, line: 901, column: 15)
!13959 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 901, column: 15)
!13960 = !DILocation(line: 901, column: 15, scope: !13959)
!13961 = !DILocation(line: 902, column: 15, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13963, file: !2280, line: 902, column: 15)
!13963 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 902, column: 15)
!13964 = !DILocation(line: 902, column: 15, scope: !13963)
!13965 = !DILocation(line: 903, column: 15, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !2280, line: 903, column: 15)
!13967 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 903, column: 15)
!13968 = !DILocation(line: 903, column: 15, scope: !13967)
!13969 = !DILocation(line: 904, column: 15, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !2280, line: 904, column: 15)
!13971 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 904, column: 15)
!13972 = !DILocation(line: 904, column: 15, scope: !13971)
!13973 = !DILocation(line: 905, column: 15, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !2280, line: 905, column: 15)
!13975 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 905, column: 15)
!13976 = !DILocation(line: 905, column: 15, scope: !13975)
!13977 = !DILocation(line: 908, column: 15, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !2280, line: 908, column: 15)
!13979 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 908, column: 15)
!13980 = !DILocation(line: 908, column: 15, scope: !13979)
!13981 = !DILocation(line: 909, column: 15, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13983, file: !2280, line: 909, column: 15)
!13983 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 909, column: 15)
!13984 = !DILocation(line: 909, column: 15, scope: !13983)
!13985 = !DILocation(line: 910, column: 15, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13987, file: !2280, line: 910, column: 15)
!13987 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 910, column: 15)
!13988 = !DILocation(line: 910, column: 15, scope: !13987)
!13989 = !DILocation(line: 911, column: 15, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !2280, line: 911, column: 15)
!13991 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 911, column: 15)
!13992 = !DILocation(line: 911, column: 15, scope: !13991)
!13993 = !DILocation(line: 912, column: 15, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !2280, line: 912, column: 15)
!13995 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 912, column: 15)
!13996 = !DILocation(line: 912, column: 15, scope: !13995)
!13997 = !DILocation(line: 913, column: 15, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13999, file: !2280, line: 913, column: 15)
!13999 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 913, column: 15)
!14000 = !DILocation(line: 913, column: 15, scope: !13999)
!14001 = !DILocation(line: 914, column: 15, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !2280, line: 914, column: 15)
!14003 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 914, column: 15)
!14004 = !DILocation(line: 914, column: 15, scope: !14003)
!14005 = !DILocation(line: 915, column: 15, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !2280, line: 915, column: 15)
!14007 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 915, column: 15)
!14008 = !DILocation(line: 915, column: 15, scope: !14007)
!14009 = !DILocation(line: 916, column: 15, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !2280, line: 916, column: 15)
!14011 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 916, column: 15)
!14012 = !DILocation(line: 916, column: 15, scope: !14011)
!14013 = !DILocation(line: 917, column: 15, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !2280, line: 917, column: 15)
!14015 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 917, column: 15)
!14016 = !DILocation(line: 917, column: 15, scope: !14015)
!14017 = !DILocation(line: 918, column: 15, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14019, file: !2280, line: 918, column: 15)
!14019 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 918, column: 15)
!14020 = !DILocation(line: 918, column: 15, scope: !14019)
!14021 = !DILocation(line: 919, column: 15, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !2280, line: 919, column: 15)
!14023 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 919, column: 15)
!14024 = !DILocation(line: 919, column: 15, scope: !14023)
!14025 = !DILocation(line: 920, column: 15, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14027, file: !2280, line: 920, column: 15)
!14027 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 920, column: 15)
!14028 = !DILocation(line: 920, column: 15, scope: !14027)
!14029 = !DILocation(line: 921, column: 15, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14031, file: !2280, line: 921, column: 15)
!14031 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 921, column: 15)
!14032 = !DILocation(line: 921, column: 15, scope: !14031)
!14033 = !DILocation(line: 922, column: 15, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !2280, line: 922, column: 15)
!14035 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 922, column: 15)
!14036 = !DILocation(line: 922, column: 15, scope: !14035)
!14037 = !DILocation(line: 923, column: 15, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !2280, line: 923, column: 15)
!14039 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 923, column: 15)
!14040 = !DILocation(line: 923, column: 15, scope: !14039)
!14041 = !DILocation(line: 924, column: 15, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !2280, line: 924, column: 15)
!14043 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 924, column: 15)
!14044 = !DILocation(line: 924, column: 15, scope: !14043)
!14045 = !DILocation(line: 925, column: 15, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !2280, line: 925, column: 15)
!14047 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 925, column: 15)
!14048 = !DILocation(line: 925, column: 15, scope: !14047)
!14049 = !DILocation(line: 928, column: 15, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14051, file: !2280, line: 928, column: 15)
!14051 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 928, column: 15)
!14052 = !DILocation(line: 928, column: 15, scope: !14051)
!14053 = !DILocation(line: 929, column: 15, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2280, line: 929, column: 15)
!14055 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 929, column: 15)
!14056 = !DILocation(line: 929, column: 15, scope: !14055)
!14057 = !DILocation(line: 930, column: 15, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !2280, line: 930, column: 15)
!14059 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 930, column: 15)
!14060 = !DILocation(line: 930, column: 15, scope: !14059)
!14061 = !DILocation(line: 931, column: 15, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !2280, line: 931, column: 15)
!14063 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 931, column: 15)
!14064 = !DILocation(line: 931, column: 15, scope: !14063)
!14065 = !DILocation(line: 932, column: 15, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !2280, line: 932, column: 15)
!14067 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 932, column: 15)
!14068 = !DILocation(line: 932, column: 15, scope: !14067)
!14069 = !DILocation(line: 933, column: 15, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !2280, line: 933, column: 15)
!14071 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 933, column: 15)
!14072 = !DILocation(line: 933, column: 15, scope: !14071)
!14073 = !DILocation(line: 934, column: 15, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14075, file: !2280, line: 934, column: 15)
!14075 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 934, column: 15)
!14076 = !DILocation(line: 934, column: 15, scope: !14075)
!14077 = !DILocation(line: 935, column: 15, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !2280, line: 935, column: 15)
!14079 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 935, column: 15)
!14080 = !DILocation(line: 935, column: 15, scope: !14079)
!14081 = !DILocation(line: 936, column: 15, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14083, file: !2280, line: 936, column: 15)
!14083 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 936, column: 15)
!14084 = !DILocation(line: 936, column: 15, scope: !14083)
!14085 = !DILocation(line: 937, column: 15, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !2280, line: 937, column: 15)
!14087 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 937, column: 15)
!14088 = !DILocation(line: 937, column: 15, scope: !14087)
!14089 = !DILocation(line: 938, column: 15, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !2280, line: 938, column: 15)
!14091 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 938, column: 15)
!14092 = !DILocation(line: 938, column: 15, scope: !14091)
!14093 = !DILocation(line: 939, column: 15, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !2280, line: 939, column: 15)
!14095 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 939, column: 15)
!14096 = !DILocation(line: 939, column: 15, scope: !14095)
!14097 = !DILocation(line: 940, column: 15, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14099, file: !2280, line: 940, column: 15)
!14099 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 940, column: 15)
!14100 = !DILocation(line: 940, column: 15, scope: !14099)
!14101 = !DILocation(line: 941, column: 15, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2280, line: 941, column: 15)
!14103 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 941, column: 15)
!14104 = !DILocation(line: 941, column: 15, scope: !14103)
!14105 = !DILocation(line: 942, column: 15, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14107, file: !2280, line: 942, column: 15)
!14107 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 942, column: 15)
!14108 = !DILocation(line: 942, column: 15, scope: !14107)
!14109 = !DILocation(line: 943, column: 15, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !2280, line: 943, column: 15)
!14111 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 943, column: 15)
!14112 = !DILocation(line: 943, column: 15, scope: !14111)
!14113 = !DILocation(line: 944, column: 15, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !2280, line: 944, column: 15)
!14115 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 944, column: 15)
!14116 = !DILocation(line: 944, column: 15, scope: !14115)
!14117 = !DILocation(line: 945, column: 15, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !2280, line: 945, column: 15)
!14119 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 945, column: 15)
!14120 = !DILocation(line: 945, column: 15, scope: !14119)
!14121 = !DILocation(line: 946, column: 15, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !2280, line: 946, column: 15)
!14123 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 946, column: 15)
!14124 = !DILocation(line: 946, column: 15, scope: !14123)
!14125 = !DILocation(line: 947, column: 15, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !2280, line: 947, column: 15)
!14127 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 947, column: 15)
!14128 = !DILocation(line: 947, column: 15, scope: !14127)
!14129 = !DILocation(line: 948, column: 15, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14131, file: !2280, line: 948, column: 15)
!14131 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 948, column: 15)
!14132 = !DILocation(line: 948, column: 15, scope: !14131)
!14133 = !DILocation(line: 949, column: 15, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !2280, line: 949, column: 15)
!14135 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 949, column: 15)
!14136 = !DILocation(line: 949, column: 15, scope: !14135)
!14137 = !DILocation(line: 952, column: 15, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !2280, line: 952, column: 15)
!14139 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 952, column: 15)
!14140 = !DILocation(line: 952, column: 15, scope: !14139)
!14141 = !DILocation(line: 953, column: 15, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !2280, line: 953, column: 15)
!14143 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 953, column: 15)
!14144 = !DILocation(line: 953, column: 15, scope: !14143)
!14145 = !DILocation(line: 954, column: 15, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !2280, line: 954, column: 15)
!14147 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 954, column: 15)
!14148 = !DILocation(line: 954, column: 15, scope: !14147)
!14149 = !DILocation(line: 955, column: 15, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !2280, line: 955, column: 15)
!14151 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 955, column: 15)
!14152 = !DILocation(line: 955, column: 15, scope: !14151)
!14153 = !DILocation(line: 956, column: 15, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14155, file: !2280, line: 956, column: 15)
!14155 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 956, column: 15)
!14156 = !DILocation(line: 956, column: 15, scope: !14155)
!14157 = !DILocation(line: 957, column: 15, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !2280, line: 957, column: 15)
!14159 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 957, column: 15)
!14160 = !DILocation(line: 957, column: 15, scope: !14159)
!14161 = !DILocation(line: 958, column: 15, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14163, file: !2280, line: 958, column: 15)
!14163 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 958, column: 15)
!14164 = !DILocation(line: 958, column: 15, scope: !14163)
!14165 = !DILocation(line: 959, column: 15, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !2280, line: 959, column: 15)
!14167 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 959, column: 15)
!14168 = !DILocation(line: 959, column: 15, scope: !14167)
!14169 = !DILocation(line: 960, column: 23, scope: !13321)
!14170 = !DILocation(line: 960, column: 35, scope: !13321)
!14171 = !DILocation(line: 960, column: 73, scope: !13321)
!14172 = !DILocation(line: 960, column: 61, scope: !13321)
!14173 = !DILocation(line: 960, column: 15, scope: !13321)
!14174 = !DILocation(line: 965, column: 49, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 961, column: 17)
!14176 = !DILocation(line: 965, column: 56, scope: !14175)
!14177 = !DILocation(line: 965, column: 19, scope: !14175)
!14178 = !DILocation(line: 966, column: 19, scope: !14175)
!14179 = !DILocation(line: 968, column: 19, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !2280, line: 968, column: 19)
!14181 = distinct !DILexicalBlock(scope: !14175, file: !2280, line: 968, column: 19)
!14182 = !DILocation(line: 968, column: 19, scope: !14181)
!14183 = !DILocation(line: 973, column: 15, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14185, file: !2280, line: 973, column: 15)
!14185 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 973, column: 15)
!14186 = !DILocation(line: 973, column: 15, scope: !14185)
!14187 = !DILocation(line: 974, column: 15, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14189, file: !2280, line: 974, column: 15)
!14189 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 974, column: 15)
!14190 = !DILocation(line: 974, column: 15, scope: !14189)
!14191 = !DILocation(line: 975, column: 15, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !2280, line: 975, column: 15)
!14193 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 975, column: 15)
!14194 = !DILocation(line: 975, column: 15, scope: !14193)
!14195 = !DILocation(line: 976, column: 15, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !2280, line: 976, column: 15)
!14197 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 976, column: 15)
!14198 = !DILocation(line: 976, column: 15, scope: !14197)
!14199 = !DILocation(line: 977, column: 15, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !2280, line: 977, column: 15)
!14201 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 977, column: 15)
!14202 = !DILocation(line: 977, column: 15, scope: !14201)
!14203 = !DILocation(line: 978, column: 15, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14205, file: !2280, line: 978, column: 15)
!14205 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 978, column: 15)
!14206 = !DILocation(line: 978, column: 15, scope: !14205)
!14207 = !DILocation(line: 979, column: 15, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !2280, line: 979, column: 15)
!14209 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 979, column: 15)
!14210 = !DILocation(line: 979, column: 15, scope: !14209)
!14211 = !DILocation(line: 980, column: 15, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14213, file: !2280, line: 980, column: 15)
!14213 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 980, column: 15)
!14214 = !DILocation(line: 980, column: 15, scope: !14213)
!14215 = !DILocation(line: 981, column: 15, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !2280, line: 981, column: 15)
!14217 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 981, column: 15)
!14218 = !DILocation(line: 981, column: 15, scope: !14217)
!14219 = !DILocation(line: 984, column: 15, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14221, file: !2280, line: 984, column: 15)
!14221 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 984, column: 15)
!14222 = !DILocation(line: 984, column: 15, scope: !14221)
!14223 = !DILocation(line: 985, column: 15, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !2280, line: 985, column: 15)
!14225 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 985, column: 15)
!14226 = !DILocation(line: 985, column: 15, scope: !14225)
!14227 = !DILocation(line: 986, column: 15, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14229, file: !2280, line: 986, column: 15)
!14229 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 986, column: 15)
!14230 = !DILocation(line: 986, column: 15, scope: !14229)
!14231 = !DILocation(line: 987, column: 15, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !2280, line: 987, column: 15)
!14233 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 987, column: 15)
!14234 = !DILocation(line: 987, column: 15, scope: !14233)
!14235 = !DILocation(line: 990, column: 15, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !2280, line: 990, column: 15)
!14237 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 990, column: 15)
!14238 = !DILocation(line: 990, column: 15, scope: !14237)
!14239 = !DILocation(line: 991, column: 15, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2280, line: 991, column: 15)
!14241 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 991, column: 15)
!14242 = !DILocation(line: 991, column: 15, scope: !14241)
!14243 = !DILocation(line: 994, column: 38, scope: !13320)
!14244 = !DILocation(line: 994, column: 29, scope: !13320)
!14245 = !DILocation(line: 0, scope: !13320)
!14246 = !DILocation(line: 0, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14248, file: !2280, line: 996, column: 19)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !2280, line: 996, column: 19)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !2280, line: 995, column: 46)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !2280, line: 995, column: 17)
!14251 = distinct !DILexicalBlock(scope: !13320, file: !2280, line: 995, column: 17)
!14252 = !DILocation(line: 995, column: 22, scope: !14251)
!14253 = !DILocation(line: 0, scope: !14251)
!14254 = !DILocation(line: 995, column: 33, scope: !14250)
!14255 = !DILocation(line: 995, column: 17, scope: !14251)
!14256 = !DILocation(line: 996, column: 19, scope: !14247)
!14257 = !DILocation(line: 996, column: 19, scope: !14248)
!14258 = !DILocation(line: 995, column: 42, scope: !14250)
!14259 = !DILocation(line: 995, column: 17, scope: !14250)
!14260 = distinct !{!14260, !14255, !14261}
!14261 = !DILocation(line: 997, column: 17, scope: !14251)
!14262 = !DILocation(line: 1001, column: 15, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !2280, line: 1001, column: 15)
!14264 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1001, column: 15)
!14265 = !DILocation(line: 1001, column: 15, scope: !14264)
!14266 = !DILocation(line: 1002, column: 15, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !2280, line: 1002, column: 15)
!14268 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1002, column: 15)
!14269 = !DILocation(line: 1002, column: 15, scope: !14268)
!14270 = !DILocation(line: 1003, column: 15, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !2280, line: 1003, column: 15)
!14272 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1003, column: 15)
!14273 = !DILocation(line: 1003, column: 15, scope: !14272)
!14274 = !DILocation(line: 1009, column: 42, scope: !13326)
!14275 = !DILocation(line: 1009, column: 33, scope: !13326)
!14276 = !DILocation(line: 0, scope: !13326)
!14277 = !DILocation(line: 0, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !2280, line: 1011, column: 23)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !2280, line: 1011, column: 23)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !2280, line: 1010, column: 50)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !2280, line: 1010, column: 21)
!14282 = distinct !DILexicalBlock(scope: !13326, file: !2280, line: 1010, column: 21)
!14283 = !DILocation(line: 1010, column: 26, scope: !14282)
!14284 = !DILocation(line: 0, scope: !14282)
!14285 = !DILocation(line: 1010, column: 37, scope: !14281)
!14286 = !DILocation(line: 1010, column: 21, scope: !14282)
!14287 = !DILocation(line: 1011, column: 23, scope: !14278)
!14288 = !DILocation(line: 1011, column: 23, scope: !14279)
!14289 = !DILocation(line: 1010, column: 46, scope: !14281)
!14290 = !DILocation(line: 1010, column: 21, scope: !14281)
!14291 = distinct !{!14291, !14286, !14292}
!14292 = !DILocation(line: 1012, column: 21, scope: !14282)
!14293 = !DILocation(line: 1018, column: 15, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !2280, line: 1018, column: 15)
!14295 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1018, column: 15)
!14296 = !DILocation(line: 1018, column: 15, scope: !14295)
!14297 = !DILocation(line: 1019, column: 15, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14299, file: !2280, line: 1019, column: 15)
!14299 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1019, column: 15)
!14300 = !DILocation(line: 1019, column: 15, scope: !14299)
!14301 = !DILocation(line: 1020, column: 15, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14303, file: !2280, line: 1020, column: 15)
!14303 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1020, column: 15)
!14304 = !DILocation(line: 1020, column: 15, scope: !14303)
!14305 = !DILocation(line: 1021, column: 15, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14307, file: !2280, line: 1021, column: 15)
!14307 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1021, column: 15)
!14308 = !DILocation(line: 1021, column: 15, scope: !14307)
!14309 = !DILocation(line: 1022, column: 15, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !2280, line: 1022, column: 15)
!14311 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1022, column: 15)
!14312 = !DILocation(line: 1022, column: 15, scope: !14311)
!14313 = !DILocation(line: 1025, column: 15, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2280, line: 1025, column: 15)
!14315 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1025, column: 15)
!14316 = !DILocation(line: 1025, column: 15, scope: !14315)
!14317 = !DILocation(line: 1026, column: 15, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !2280, line: 1026, column: 15)
!14319 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1026, column: 15)
!14320 = !DILocation(line: 1026, column: 15, scope: !14319)
!14321 = !DILocation(line: 1027, column: 15, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !2280, line: 1027, column: 15)
!14323 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1027, column: 15)
!14324 = !DILocation(line: 1027, column: 15, scope: !14323)
!14325 = !DILocation(line: 1028, column: 15, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14327, file: !2280, line: 1028, column: 15)
!14327 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1028, column: 15)
!14328 = !DILocation(line: 1028, column: 15, scope: !14327)
!14329 = !DILocation(line: 1029, column: 15, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !2280, line: 1029, column: 15)
!14331 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1029, column: 15)
!14332 = !DILocation(line: 1029, column: 15, scope: !14331)
!14333 = !DILocation(line: 1030, column: 15, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !2280, line: 1030, column: 15)
!14335 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1030, column: 15)
!14336 = !DILocation(line: 1030, column: 15, scope: !14335)
!14337 = !DILocation(line: 1031, column: 15, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !2280, line: 1031, column: 15)
!14339 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1031, column: 15)
!14340 = !DILocation(line: 1031, column: 15, scope: !14339)
!14341 = !DILocation(line: 1032, column: 15, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14343, file: !2280, line: 1032, column: 15)
!14343 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1032, column: 15)
!14344 = !DILocation(line: 1032, column: 15, scope: !14343)
!14345 = !DILocation(line: 1033, column: 15, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !2280, line: 1033, column: 15)
!14347 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1033, column: 15)
!14348 = !DILocation(line: 1033, column: 15, scope: !14347)
!14349 = !DILocation(line: 1036, column: 15, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !2280, line: 1036, column: 15)
!14351 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1036, column: 15)
!14352 = !DILocation(line: 1036, column: 15, scope: !14351)
!14353 = !DILocation(line: 1037, column: 15, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14355, file: !2280, line: 1037, column: 15)
!14355 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1037, column: 15)
!14356 = !DILocation(line: 1037, column: 15, scope: !14355)
!14357 = !DILocation(line: 1038, column: 15, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14359, file: !2280, line: 1038, column: 15)
!14359 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1038, column: 15)
!14360 = !DILocation(line: 1038, column: 15, scope: !14359)
!14361 = !DILocation(line: 1039, column: 15, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14363, file: !2280, line: 1039, column: 15)
!14363 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1039, column: 15)
!14364 = !DILocation(line: 1039, column: 15, scope: !14363)
!14365 = !DILocation(line: 1040, column: 15, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !2280, line: 1040, column: 15)
!14367 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1040, column: 15)
!14368 = !DILocation(line: 1040, column: 15, scope: !14367)
!14369 = !DILocation(line: 1041, column: 15, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !2280, line: 1041, column: 15)
!14371 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1041, column: 15)
!14372 = !DILocation(line: 1041, column: 15, scope: !14371)
!14373 = !DILocation(line: 1042, column: 15, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !2280, line: 1042, column: 15)
!14375 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1042, column: 15)
!14376 = !DILocation(line: 1042, column: 15, scope: !14375)
!14377 = !DILocation(line: 1043, column: 15, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14379, file: !2280, line: 1043, column: 15)
!14379 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1043, column: 15)
!14380 = !DILocation(line: 1043, column: 15, scope: !14379)
!14381 = !DILocation(line: 1044, column: 15, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14383, file: !2280, line: 1044, column: 15)
!14383 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1044, column: 15)
!14384 = !DILocation(line: 1044, column: 15, scope: !14383)
!14385 = !DILocation(line: 1045, column: 15, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !2280, line: 1045, column: 15)
!14387 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1045, column: 15)
!14388 = !DILocation(line: 1045, column: 15, scope: !14387)
!14389 = !DILocation(line: 1048, column: 58, scope: !13330)
!14390 = !DILocation(line: 1048, column: 76, scope: !13330)
!14391 = !DILocation(line: 1048, column: 29, scope: !13330)
!14392 = !DILocation(line: 0, scope: !13330)
!14393 = !DILocation(line: 0, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !2280, line: 1050, column: 19)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !2280, line: 1050, column: 19)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !2280, line: 1049, column: 46)
!14397 = distinct !DILexicalBlock(scope: !14398, file: !2280, line: 1049, column: 17)
!14398 = distinct !DILexicalBlock(scope: !13330, file: !2280, line: 1049, column: 17)
!14399 = !DILocation(line: 1049, column: 22, scope: !14398)
!14400 = !DILocation(line: 0, scope: !14398)
!14401 = !DILocation(line: 1049, column: 33, scope: !14397)
!14402 = !DILocation(line: 1049, column: 17, scope: !14398)
!14403 = !DILocation(line: 1050, column: 19, scope: !14394)
!14404 = !DILocation(line: 1050, column: 19, scope: !14395)
!14405 = !DILocation(line: 1049, column: 42, scope: !14397)
!14406 = !DILocation(line: 1049, column: 17, scope: !14397)
!14407 = distinct !{!14407, !14402, !14408}
!14408 = !DILocation(line: 1051, column: 17, scope: !14398)
!14409 = !DILocation(line: 1055, column: 15, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14411, file: !2280, line: 1055, column: 15)
!14411 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1055, column: 15)
!14412 = !DILocation(line: 1055, column: 15, scope: !14411)
!14413 = !DILocation(line: 1056, column: 15, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !2280, line: 1056, column: 15)
!14415 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1056, column: 15)
!14416 = !DILocation(line: 1056, column: 15, scope: !14415)
!14417 = !DILocation(line: 1057, column: 15, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !2280, line: 1057, column: 15)
!14419 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1057, column: 15)
!14420 = !DILocation(line: 1057, column: 15, scope: !14419)
!14421 = !DILocation(line: 1058, column: 15, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14423, file: !2280, line: 1058, column: 15)
!14423 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1058, column: 15)
!14424 = !DILocation(line: 1058, column: 15, scope: !14423)
!14425 = !DILocation(line: 1061, column: 15, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !2280, line: 1061, column: 15)
!14427 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1061, column: 15)
!14428 = !DILocation(line: 1061, column: 15, scope: !14427)
!14429 = !DILocation(line: 1062, column: 15, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14431, file: !2280, line: 1062, column: 15)
!14431 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1062, column: 15)
!14432 = !DILocation(line: 1062, column: 15, scope: !14431)
!14433 = !DILocation(line: 1063, column: 15, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !2280, line: 1063, column: 15)
!14435 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1063, column: 15)
!14436 = !DILocation(line: 1063, column: 15, scope: !14435)
!14437 = !DILocation(line: 1066, column: 15, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !2280, line: 1066, column: 15)
!14439 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1066, column: 15)
!14440 = !DILocation(line: 1066, column: 15, scope: !14439)
!14441 = !DILocation(line: 1067, column: 15, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14443, file: !2280, line: 1067, column: 15)
!14443 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1067, column: 15)
!14444 = !DILocation(line: 1067, column: 15, scope: !14443)
!14445 = !DILocation(line: 1068, column: 15, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !2280, line: 1068, column: 15)
!14447 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1068, column: 15)
!14448 = !DILocation(line: 1068, column: 15, scope: !14447)
!14449 = !DILocation(line: 1069, column: 15, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14451, file: !2280, line: 1069, column: 15)
!14451 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1069, column: 15)
!14452 = !DILocation(line: 1069, column: 15, scope: !14451)
!14453 = !DILocation(line: 1072, column: 57, scope: !13333)
!14454 = !DILocation(line: 1072, column: 38, scope: !13333)
!14455 = !DILocation(line: 1072, column: 29, scope: !13333)
!14456 = !DILocation(line: 0, scope: !13333)
!14457 = !DILocation(line: 0, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !2280, line: 1074, column: 19)
!14459 = distinct !DILexicalBlock(scope: !14460, file: !2280, line: 1074, column: 19)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2280, line: 1073, column: 46)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2280, line: 1073, column: 17)
!14462 = distinct !DILexicalBlock(scope: !13333, file: !2280, line: 1073, column: 17)
!14463 = !DILocation(line: 1073, column: 22, scope: !14462)
!14464 = !DILocation(line: 0, scope: !14462)
!14465 = !DILocation(line: 1073, column: 33, scope: !14461)
!14466 = !DILocation(line: 1073, column: 17, scope: !14462)
!14467 = !DILocation(line: 1074, column: 19, scope: !14458)
!14468 = !DILocation(line: 1074, column: 19, scope: !14459)
!14469 = !DILocation(line: 1073, column: 42, scope: !14461)
!14470 = !DILocation(line: 1073, column: 17, scope: !14461)
!14471 = distinct !{!14471, !14466, !14472}
!14472 = !DILocation(line: 1075, column: 17, scope: !14462)
!14473 = !DILocation(line: 1079, column: 15, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !2280, line: 1079, column: 15)
!14475 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1079, column: 15)
!14476 = !DILocation(line: 1079, column: 15, scope: !14475)
!14477 = !DILocation(line: 1080, column: 15, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !2280, line: 1080, column: 15)
!14479 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1080, column: 15)
!14480 = !DILocation(line: 1080, column: 15, scope: !14479)
!14481 = !DILocation(line: 1083, column: 15, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !2280, line: 1083, column: 15)
!14483 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1083, column: 15)
!14484 = !DILocation(line: 1083, column: 15, scope: !14483)
!14485 = !DILocation(line: 1084, column: 15, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !2280, line: 1084, column: 15)
!14487 = distinct !DILexicalBlock(scope: !13321, file: !2280, line: 1084, column: 15)
!14488 = !DILocation(line: 1084, column: 15, scope: !14487)
!14489 = !DILocation(line: 1091, column: 11, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14491, file: !2280, line: 1091, column: 11)
!14491 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1091, column: 11)
!14492 = !DILocation(line: 1091, column: 11, scope: !14491)
!14493 = !DILocation(line: 1092, column: 11, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !2280, line: 1092, column: 11)
!14495 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1092, column: 11)
!14496 = !DILocation(line: 1092, column: 11, scope: !14495)
!14497 = !DILocation(line: 1093, column: 49, scope: !13322)
!14498 = !DILocation(line: 1093, column: 60, scope: !13322)
!14499 = !DILocation(line: 1093, column: 11, scope: !13322)
!14500 = !DILocation(line: 1094, column: 19, scope: !13322)
!14501 = !DILocation(line: 1094, column: 11, scope: !13322)
!14502 = !DILocation(line: 1097, column: 15, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !2280, line: 1097, column: 15)
!14504 = distinct !DILexicalBlock(scope: !14505, file: !2280, line: 1097, column: 15)
!14505 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1095, column: 13)
!14506 = !DILocation(line: 1097, column: 15, scope: !14504)
!14507 = !DILocation(line: 1100, column: 15, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !2280, line: 1100, column: 15)
!14509 = distinct !DILexicalBlock(scope: !14505, file: !2280, line: 1100, column: 15)
!14510 = !DILocation(line: 1100, column: 15, scope: !14509)
!14511 = !DILocation(line: 1109, column: 11, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14513, file: !2280, line: 1109, column: 11)
!14513 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1109, column: 11)
!14514 = !DILocation(line: 1109, column: 11, scope: !14513)
!14515 = !DILocation(line: 1110, column: 11, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2280, line: 1110, column: 11)
!14517 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1110, column: 11)
!14518 = !DILocation(line: 1110, column: 11, scope: !14517)
!14519 = !DILocation(line: 1111, column: 11, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !2280, line: 1111, column: 11)
!14521 = distinct !DILexicalBlock(scope: !13322, file: !2280, line: 1111, column: 11)
!14522 = !DILocation(line: 1111, column: 11, scope: !14521)
!14523 = !DILocation(line: 1116, column: 12, scope: !13323)
!14524 = !DILocation(line: 1116, column: 38, scope: !13323)
!14525 = !DILocation(line: 1116, column: 81, scope: !13323)
!14526 = !DILocation(line: 1116, column: 143, scope: !13323)
!14527 = !DILocation(line: 0, scope: !13323)
!14528 = distinct !{!14528, !13339, !14529}
!14529 = !DILocation(line: 1117, column: 5, scope: !13314)
!14530 = !DILocation(line: 1118, column: 1, scope: !13314)
!14531 = distinct !DISubprogram(name: "gt_pch_nx_VEC_c_goto_bindings_p_gc", scope: !2280, file: !2280, line: 599, type: !1478, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14532)
!14532 = !{!14533, !14534, !14535, !14539}
!14533 = !DILocalVariable(name: "x_p", arg: 1, scope: !14531, file: !2280, line: 599, type: !624)
!14534 = !DILocalVariable(name: "x", scope: !14531, file: !2280, line: 601, type: !13014)
!14535 = !DILocalVariable(name: "i0", scope: !14536, file: !2280, line: 605, type: !1107)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !2280, line: 604, column: 7)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !2280, line: 603, column: 5)
!14538 = distinct !DILexicalBlock(scope: !14531, file: !2280, line: 602, column: 7)
!14539 = !DILocalVariable(name: "l0", scope: !14536, file: !2280, line: 606, type: !1107)
!14540 = !DILocation(line: 0, scope: !14531)
!14541 = !DILocation(line: 602, column: 7, scope: !14538)
!14542 = !DILocation(line: 602, column: 7, scope: !14531)
!14543 = !DILocation(line: 606, column: 42, scope: !14536)
!14544 = !DILocation(line: 606, column: 21, scope: !14536)
!14545 = !DILocation(line: 0, scope: !14536)
!14546 = !DILocation(line: 0, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !2280, line: 608, column: 11)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !2280, line: 608, column: 11)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !2280, line: 607, column: 38)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !2280, line: 607, column: 9)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !2280, line: 607, column: 9)
!14552 = !DILocation(line: 607, column: 14, scope: !14551)
!14553 = !DILocation(line: 0, scope: !14551)
!14554 = !DILocation(line: 607, column: 25, scope: !14550)
!14555 = !DILocation(line: 607, column: 9, scope: !14551)
!14556 = !DILocation(line: 608, column: 11, scope: !14547)
!14557 = !DILocation(line: 608, column: 11, scope: !14548)
!14558 = !DILocation(line: 607, column: 34, scope: !14550)
!14559 = !DILocation(line: 607, column: 9, scope: !14550)
!14560 = distinct !{!14560, !14555, !14561}
!14561 = !DILocation(line: 609, column: 9, scope: !14551)
!14562 = !DILocation(line: 612, column: 1, scope: !14531)
!14563 = distinct !DISubprogram(name: "gt_pch_p_24VEC_c_goto_bindings_p_gc", scope: !2280, file: !2280, line: 1159, type: !13289, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14564)
!14564 = !{!14565, !14566, !14567, !14568, !14569, !14570, !14572}
!14565 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14563, file: !2280, line: 1159, type: !624)
!14566 = !DILocalVariable(name: "x_p", arg: 2, scope: !14563, file: !2280, line: 1160, type: !624)
!14567 = !DILocalVariable(name: "op", arg: 3, scope: !14563, file: !2280, line: 1161, type: !13291)
!14568 = !DILocalVariable(name: "cookie", arg: 4, scope: !14563, file: !2280, line: 1162, type: !624)
!14569 = !DILocalVariable(name: "x", scope: !14563, file: !2280, line: 1164, type: !13014)
!14570 = !DILocalVariable(name: "i0", scope: !14571, file: !2280, line: 1166, type: !1107)
!14571 = distinct !DILexicalBlock(scope: !14563, file: !2280, line: 1165, column: 3)
!14572 = !DILocalVariable(name: "l0", scope: !14571, file: !2280, line: 1167, type: !1107)
!14573 = !DILocation(line: 0, scope: !14563)
!14574 = !DILocation(line: 1167, column: 38, scope: !14571)
!14575 = !DILocation(line: 1167, column: 17, scope: !14571)
!14576 = !DILocation(line: 0, scope: !14571)
!14577 = !DILocation(line: 0, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !2280, line: 1169, column: 11)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !2280, line: 1168, column: 34)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !2280, line: 1168, column: 5)
!14581 = distinct !DILexicalBlock(scope: !14571, file: !2280, line: 1168, column: 5)
!14582 = !DILocation(line: 1168, column: 10, scope: !14581)
!14583 = !DILocation(line: 0, scope: !14581)
!14584 = !DILocation(line: 1168, column: 21, scope: !14580)
!14585 = !DILocation(line: 1168, column: 5, scope: !14581)
!14586 = !DILocation(line: 1170, column: 15, scope: !14578)
!14587 = !DILocation(line: 1170, column: 13, scope: !14578)
!14588 = !DILocation(line: 1170, column: 9, scope: !14578)
!14589 = !DILocation(line: 1168, column: 30, scope: !14580)
!14590 = !DILocation(line: 1168, column: 5, scope: !14580)
!14591 = distinct !{!14591, !14585, !14592}
!14592 = !DILocation(line: 1171, column: 5, scope: !14581)
!14593 = !DILocation(line: 1173, column: 1, scope: !14563)
!14594 = distinct !DISubprogram(name: "gt_pch_nx_c_goto_bindings", scope: !2280, file: !2280, line: 615, type: !1478, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14595)
!14595 = !{!14596, !14597}
!14596 = !DILocalVariable(name: "x_p", arg: 1, scope: !14594, file: !2280, line: 615, type: !624)
!14597 = !DILocalVariable(name: "x", scope: !14594, file: !2280, line: 617, type: !13047)
!14598 = !DILocation(line: 0, scope: !14594)
!14599 = !DILocation(line: 618, column: 7, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14594, file: !2280, line: 618, column: 7)
!14601 = !DILocation(line: 618, column: 7, scope: !14594)
!14602 = !DILocation(line: 620, column: 7, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !2280, line: 620, column: 7)
!14604 = distinct !DILexicalBlock(scope: !14605, file: !2280, line: 620, column: 7)
!14605 = distinct !DILexicalBlock(scope: !14600, file: !2280, line: 619, column: 5)
!14606 = !DILocation(line: 620, column: 7, scope: !14604)
!14607 = !DILocation(line: 621, column: 7, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !2280, line: 621, column: 7)
!14609 = distinct !DILexicalBlock(scope: !14605, file: !2280, line: 621, column: 7)
!14610 = !DILocation(line: 621, column: 7, scope: !14609)
!14611 = !DILocation(line: 623, column: 1, scope: !14594)
!14612 = distinct !DISubprogram(name: "gt_pch_p_15c_goto_bindings", scope: !2280, file: !2280, line: 1176, type: !13289, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14613)
!14613 = !{!14614, !14615, !14616, !14617, !14618}
!14614 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14612, file: !2280, line: 1176, type: !624)
!14615 = !DILocalVariable(name: "x_p", arg: 2, scope: !14612, file: !2280, line: 1177, type: !624)
!14616 = !DILocalVariable(name: "op", arg: 3, scope: !14612, file: !2280, line: 1178, type: !13291)
!14617 = !DILocalVariable(name: "cookie", arg: 4, scope: !14612, file: !2280, line: 1179, type: !624)
!14618 = !DILocalVariable(name: "x", scope: !14612, file: !2280, line: 1181, type: !13047)
!14619 = !DILocation(line: 0, scope: !14612)
!14620 = !DILocation(line: 1182, column: 19, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14612, file: !2280, line: 1182, column: 7)
!14622 = !DILocation(line: 1182, column: 7, scope: !14612)
!14623 = !DILocation(line: 1183, column: 16, scope: !14621)
!14624 = !DILocation(line: 1183, column: 5, scope: !14621)
!14625 = !DILocation(line: 1184, column: 7, scope: !14612)
!14626 = !DILocation(line: 1185, column: 30, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14612, file: !2280, line: 1184, column: 7)
!14628 = !DILocation(line: 1185, column: 5, scope: !14627)
!14629 = !DILocation(line: 1186, column: 1, scope: !14612)
!14630 = distinct !DISubprogram(name: "gt_pch_nx_c_scope", scope: !2280, file: !2280, line: 626, type: !1478, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14631)
!14631 = !{!14632, !14633, !14634}
!14632 = !DILocalVariable(name: "x_p", arg: 1, scope: !14630, file: !2280, line: 626, type: !624)
!14633 = !DILocalVariable(name: "x", scope: !14630, file: !2280, line: 628, type: !2077)
!14634 = !DILocalVariable(name: "xlimit", scope: !14630, file: !2280, line: 629, type: !2077)
!14635 = !DILocation(line: 0, scope: !14630)
!14636 = !DILocation(line: 628, column: 24, scope: !14630)
!14637 = !DILocation(line: 630, column: 3, scope: !14630)
!14638 = !DILocation(line: 630, column: 10, scope: !14630)
!14639 = !DILocation(line: 632, column: 3, scope: !14630)
!14640 = !DILocation(line: 631, column: 24, scope: !14630)
!14641 = distinct !{!14641, !14637, !14642}
!14642 = !DILocation(line: 631, column: 29, scope: !14630)
!14643 = !DILocation(line: 632, column: 12, scope: !14630)
!14644 = !DILocation(line: 634, column: 7, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !2280, line: 634, column: 7)
!14646 = distinct !DILexicalBlock(scope: !14647, file: !2280, line: 634, column: 7)
!14647 = distinct !DILexicalBlock(scope: !14630, file: !2280, line: 633, column: 5)
!14648 = !DILocation(line: 634, column: 7, scope: !14646)
!14649 = !DILocation(line: 635, column: 7, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14651, file: !2280, line: 635, column: 7)
!14651 = distinct !DILexicalBlock(scope: !14647, file: !2280, line: 635, column: 7)
!14652 = !DILocation(line: 635, column: 7, scope: !14651)
!14653 = !DILocation(line: 636, column: 7, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !2280, line: 636, column: 7)
!14655 = distinct !DILexicalBlock(scope: !14647, file: !2280, line: 636, column: 7)
!14656 = !DILocation(line: 636, column: 7, scope: !14655)
!14657 = !DILocation(line: 637, column: 7, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14659, file: !2280, line: 637, column: 7)
!14659 = distinct !DILexicalBlock(scope: !14647, file: !2280, line: 637, column: 7)
!14660 = !DILocation(line: 637, column: 7, scope: !14659)
!14661 = !DILocation(line: 638, column: 7, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14663, file: !2280, line: 638, column: 7)
!14663 = distinct !DILexicalBlock(scope: !14647, file: !2280, line: 638, column: 7)
!14664 = !DILocation(line: 638, column: 7, scope: !14663)
!14665 = !DILocation(line: 639, column: 17, scope: !14647)
!14666 = distinct !{!14666, !14639, !14667}
!14667 = !DILocation(line: 640, column: 5, scope: !14630)
!14668 = !DILocation(line: 641, column: 1, scope: !14630)
!14669 = distinct !DISubprogram(name: "gt_pch_nx_c_binding", scope: !2280, file: !2280, line: 644, type: !1478, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14670)
!14670 = !{!14671, !14672, !14673}
!14671 = !DILocalVariable(name: "x_p", arg: 1, scope: !14669, file: !2280, line: 644, type: !624)
!14672 = !DILocalVariable(name: "x", scope: !14669, file: !2280, line: 646, type: !2061)
!14673 = !DILocalVariable(name: "xlimit", scope: !14669, file: !2280, line: 647, type: !2061)
!14674 = !DILocation(line: 0, scope: !14669)
!14675 = !DILocation(line: 646, column: 26, scope: !14669)
!14676 = !DILocation(line: 648, column: 3, scope: !14669)
!14677 = !DILocation(line: 648, column: 10, scope: !14669)
!14678 = !DILocation(line: 650, column: 3, scope: !14669)
!14679 = !DILocation(line: 649, column: 24, scope: !14669)
!14680 = distinct !{!14680, !14676, !14681}
!14681 = !DILocation(line: 649, column: 28, scope: !14669)
!14682 = !DILocation(line: 650, column: 12, scope: !14669)
!14683 = !DILocation(line: 652, column: 15, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14669, file: !2280, line: 651, column: 5)
!14685 = !DILocation(line: 652, column: 37, scope: !14684)
!14686 = !DILocation(line: 652, column: 7, scope: !14684)
!14687 = !DILocation(line: 655, column: 11, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14689, file: !2280, line: 655, column: 11)
!14689 = distinct !DILexicalBlock(scope: !14690, file: !2280, line: 655, column: 11)
!14690 = distinct !DILexicalBlock(scope: !14684, file: !2280, line: 653, column: 9)
!14691 = !DILocation(line: 655, column: 11, scope: !14689)
!14692 = !DILocation(line: 658, column: 11, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !2280, line: 658, column: 11)
!14694 = distinct !DILexicalBlock(scope: !14690, file: !2280, line: 658, column: 11)
!14695 = !DILocation(line: 658, column: 11, scope: !14694)
!14696 = !DILocation(line: 663, column: 7, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !2280, line: 663, column: 7)
!14698 = distinct !DILexicalBlock(scope: !14684, file: !2280, line: 663, column: 7)
!14699 = !DILocation(line: 663, column: 7, scope: !14698)
!14700 = !DILocation(line: 664, column: 7, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2280, line: 664, column: 7)
!14702 = distinct !DILexicalBlock(scope: !14684, file: !2280, line: 664, column: 7)
!14703 = !DILocation(line: 664, column: 7, scope: !14702)
!14704 = !DILocation(line: 665, column: 7, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !2280, line: 665, column: 7)
!14706 = distinct !DILexicalBlock(scope: !14684, file: !2280, line: 665, column: 7)
!14707 = !DILocation(line: 665, column: 7, scope: !14706)
!14708 = !DILocation(line: 666, column: 7, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14710, file: !2280, line: 666, column: 7)
!14710 = distinct !DILexicalBlock(scope: !14684, file: !2280, line: 666, column: 7)
!14711 = !DILocation(line: 666, column: 7, scope: !14710)
!14712 = !DILocation(line: 667, column: 17, scope: !14684)
!14713 = distinct !{!14713, !14678, !14714}
!14714 = !DILocation(line: 668, column: 5, scope: !14669)
!14715 = !DILocation(line: 669, column: 1, scope: !14669)
!14716 = distinct !DISubprogram(name: "gt_pch_p_7c_scope", scope: !2280, file: !2280, line: 1189, type: !13289, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14717)
!14717 = !{!14718, !14719, !14720, !14721, !14722}
!14718 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14716, file: !2280, line: 1189, type: !624)
!14719 = !DILocalVariable(name: "x_p", arg: 2, scope: !14716, file: !2280, line: 1190, type: !624)
!14720 = !DILocalVariable(name: "op", arg: 3, scope: !14716, file: !2280, line: 1191, type: !13291)
!14721 = !DILocalVariable(name: "cookie", arg: 4, scope: !14716, file: !2280, line: 1192, type: !624)
!14722 = !DILocalVariable(name: "x", scope: !14716, file: !2280, line: 1194, type: !14723)
!14723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2077)
!14724 = !DILocation(line: 0, scope: !14716)
!14725 = !DILocation(line: 1195, column: 19, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14716, file: !2280, line: 1195, column: 7)
!14727 = !DILocation(line: 1195, column: 7, scope: !14716)
!14728 = !DILocation(line: 1196, column: 5, scope: !14726)
!14729 = !DILocation(line: 1197, column: 7, scope: !14716)
!14730 = !DILocation(line: 1198, column: 16, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14716, file: !2280, line: 1197, column: 7)
!14732 = !DILocation(line: 1198, column: 5, scope: !14731)
!14733 = !DILocation(line: 1199, column: 7, scope: !14716)
!14734 = !DILocation(line: 1200, column: 16, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14716, file: !2280, line: 1199, column: 7)
!14736 = !DILocation(line: 1200, column: 5, scope: !14735)
!14737 = !DILocation(line: 1201, column: 7, scope: !14716)
!14738 = !DILocation(line: 1202, column: 16, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14716, file: !2280, line: 1201, column: 7)
!14740 = !DILocation(line: 1202, column: 5, scope: !14739)
!14741 = !DILocation(line: 1203, column: 7, scope: !14716)
!14742 = !DILocation(line: 1204, column: 16, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14716, file: !2280, line: 1203, column: 7)
!14744 = !DILocation(line: 1204, column: 5, scope: !14743)
!14745 = !DILocation(line: 1205, column: 1, scope: !14716)
!14746 = distinct !DISubprogram(name: "gt_pch_p_9c_binding", scope: !2280, file: !2280, line: 1208, type: !13289, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14747)
!14747 = !{!14748, !14749, !14750, !14751, !14752}
!14748 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14746, file: !2280, line: 1208, type: !624)
!14749 = !DILocalVariable(name: "x_p", arg: 2, scope: !14746, file: !2280, line: 1209, type: !624)
!14750 = !DILocalVariable(name: "op", arg: 3, scope: !14746, file: !2280, line: 1210, type: !13291)
!14751 = !DILocalVariable(name: "cookie", arg: 4, scope: !14746, file: !2280, line: 1211, type: !624)
!14752 = !DILocalVariable(name: "x", scope: !14746, file: !2280, line: 1213, type: !14753)
!14753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2061)
!14754 = !DILocation(line: 0, scope: !14746)
!14755 = !DILocation(line: 1214, column: 11, scope: !14746)
!14756 = !DILocation(line: 1214, column: 33, scope: !14746)
!14757 = !DILocation(line: 0, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14746, file: !2280, line: 1215, column: 5)
!14759 = !DILocation(line: 1214, column: 3, scope: !14746)
!14760 = !DILocation(line: 1217, column: 11, scope: !14758)
!14761 = !DILocation(line: 1218, column: 9, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14758, file: !2280, line: 1217, column: 11)
!14763 = !DILocation(line: 1221, column: 11, scope: !14758)
!14764 = !DILocation(line: 1222, column: 9, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14758, file: !2280, line: 1221, column: 11)
!14766 = !DILocation(line: 1227, column: 7, scope: !14746)
!14767 = !DILocation(line: 1228, column: 5, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14746, file: !2280, line: 1227, column: 7)
!14769 = !DILocation(line: 1229, column: 7, scope: !14746)
!14770 = !DILocation(line: 1230, column: 16, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14746, file: !2280, line: 1229, column: 7)
!14772 = !DILocation(line: 1230, column: 5, scope: !14771)
!14773 = !DILocation(line: 1231, column: 7, scope: !14746)
!14774 = !DILocation(line: 1232, column: 16, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14746, file: !2280, line: 1231, column: 7)
!14776 = !DILocation(line: 1232, column: 5, scope: !14775)
!14777 = !DILocation(line: 1233, column: 7, scope: !14746)
!14778 = !DILocation(line: 1234, column: 16, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14746, file: !2280, line: 1233, column: 7)
!14780 = !DILocation(line: 1234, column: 5, scope: !14779)
!14781 = !DILocation(line: 1235, column: 1, scope: !14746)
!14782 = distinct !DISubprogram(name: "gt_pch_nx_c_label_vars", scope: !2280, file: !2280, line: 672, type: !1478, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14783)
!14783 = !{!14784, !14785}
!14784 = !DILocalVariable(name: "x_p", arg: 1, scope: !14782, file: !2280, line: 672, type: !624)
!14785 = !DILocalVariable(name: "x", scope: !14782, file: !2280, line: 674, type: !13152)
!14786 = !DILocation(line: 0, scope: !14782)
!14787 = !DILocation(line: 675, column: 7, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14782, file: !2280, line: 675, column: 7)
!14789 = !DILocation(line: 675, column: 7, scope: !14782)
!14790 = !DILocation(line: 677, column: 7, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14792, file: !2280, line: 677, column: 7)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !2280, line: 677, column: 7)
!14793 = distinct !DILexicalBlock(scope: !14788, file: !2280, line: 676, column: 5)
!14794 = !DILocation(line: 677, column: 7, scope: !14792)
!14795 = !DILocation(line: 678, column: 7, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14797, file: !2280, line: 678, column: 7)
!14797 = distinct !DILexicalBlock(scope: !14793, file: !2280, line: 678, column: 7)
!14798 = !DILocation(line: 678, column: 7, scope: !14797)
!14799 = !DILocation(line: 679, column: 7, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14801, file: !2280, line: 679, column: 7)
!14801 = distinct !DILexicalBlock(scope: !14793, file: !2280, line: 679, column: 7)
!14802 = !DILocation(line: 679, column: 7, scope: !14801)
!14803 = !DILocation(line: 680, column: 7, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !2280, line: 680, column: 7)
!14805 = distinct !DILexicalBlock(scope: !14793, file: !2280, line: 680, column: 7)
!14806 = !DILocation(line: 680, column: 7, scope: !14805)
!14807 = !DILocation(line: 681, column: 7, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !2280, line: 681, column: 7)
!14809 = distinct !DILexicalBlock(scope: !14793, file: !2280, line: 681, column: 7)
!14810 = !DILocation(line: 681, column: 7, scope: !14809)
!14811 = !DILocation(line: 683, column: 1, scope: !14782)
!14812 = distinct !DISubprogram(name: "gt_pch_p_12c_label_vars", scope: !2280, file: !2280, line: 1238, type: !13289, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14813)
!14813 = !{!14814, !14815, !14816, !14817, !14818}
!14814 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14812, file: !2280, line: 1238, type: !624)
!14815 = !DILocalVariable(name: "x_p", arg: 2, scope: !14812, file: !2280, line: 1239, type: !624)
!14816 = !DILocalVariable(name: "op", arg: 3, scope: !14812, file: !2280, line: 1240, type: !13291)
!14817 = !DILocalVariable(name: "cookie", arg: 4, scope: !14812, file: !2280, line: 1241, type: !624)
!14818 = !DILocalVariable(name: "x", scope: !14812, file: !2280, line: 1243, type: !13152)
!14819 = !DILocation(line: 0, scope: !14812)
!14820 = !DILocation(line: 1244, column: 19, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14812, file: !2280, line: 1244, column: 7)
!14822 = !DILocation(line: 1244, column: 7, scope: !14812)
!14823 = !DILocation(line: 1245, column: 5, scope: !14821)
!14824 = !DILocation(line: 1246, column: 7, scope: !14812)
!14825 = !DILocation(line: 1247, column: 16, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14812, file: !2280, line: 1246, column: 7)
!14827 = !DILocation(line: 1247, column: 5, scope: !14826)
!14828 = !DILocation(line: 1248, column: 7, scope: !14812)
!14829 = !DILocation(line: 1249, column: 31, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14812, file: !2280, line: 1248, column: 7)
!14831 = !DILocation(line: 1249, column: 5, scope: !14830)
!14832 = !DILocation(line: 1250, column: 7, scope: !14812)
!14833 = !DILocation(line: 1251, column: 16, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14812, file: !2280, line: 1250, column: 7)
!14835 = !DILocation(line: 1251, column: 5, scope: !14834)
!14836 = !DILocation(line: 1252, column: 7, scope: !14812)
!14837 = !DILocation(line: 1253, column: 16, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14812, file: !2280, line: 1252, column: 7)
!14839 = !DILocation(line: 1253, column: 5, scope: !14838)
!14840 = !DILocation(line: 1254, column: 1, scope: !14812)
!14841 = distinct !DISubprogram(name: "gt_pch_nx_language_function", scope: !2280, file: !2280, line: 686, type: !1478, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14842)
!14842 = !{!14843, !14844}
!14843 = !DILocalVariable(name: "x_p", arg: 1, scope: !14841, file: !2280, line: 686, type: !624)
!14844 = !DILocalVariable(name: "x", scope: !14841, file: !2280, line: 688, type: !13183)
!14845 = !DILocation(line: 0, scope: !14841)
!14846 = !DILocation(line: 689, column: 7, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14841, file: !2280, line: 689, column: 7)
!14848 = !DILocation(line: 689, column: 7, scope: !14841)
!14849 = !DILocation(line: 691, column: 7, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !2280, line: 691, column: 7)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !2280, line: 691, column: 7)
!14852 = distinct !DILexicalBlock(scope: !14847, file: !2280, line: 690, column: 5)
!14853 = !DILocation(line: 691, column: 7, scope: !14851)
!14854 = !DILocation(line: 692, column: 7, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14856, file: !2280, line: 692, column: 7)
!14856 = distinct !DILexicalBlock(scope: !14852, file: !2280, line: 692, column: 7)
!14857 = !DILocation(line: 692, column: 7, scope: !14856)
!14858 = !DILocation(line: 693, column: 7, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !2280, line: 693, column: 7)
!14860 = distinct !DILexicalBlock(scope: !14852, file: !2280, line: 693, column: 7)
!14861 = !DILocation(line: 693, column: 7, scope: !14860)
!14862 = !DILocation(line: 695, column: 1, scope: !14841)
!14863 = distinct !DISubprogram(name: "gt_pch_p_17language_function", scope: !2280, file: !2280, line: 1257, type: !13289, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14864)
!14864 = !{!14865, !14866, !14867, !14868, !14869}
!14865 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14863, file: !2280, line: 1257, type: !624)
!14866 = !DILocalVariable(name: "x_p", arg: 2, scope: !14863, file: !2280, line: 1258, type: !624)
!14867 = !DILocalVariable(name: "op", arg: 3, scope: !14863, file: !2280, line: 1259, type: !13291)
!14868 = !DILocalVariable(name: "cookie", arg: 4, scope: !14863, file: !2280, line: 1260, type: !624)
!14869 = !DILocalVariable(name: "x", scope: !14863, file: !2280, line: 1262, type: !13183)
!14870 = !DILocation(line: 0, scope: !14863)
!14871 = !DILocation(line: 1263, column: 19, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14863, file: !2280, line: 1263, column: 7)
!14873 = !DILocation(line: 1263, column: 7, scope: !14863)
!14874 = !DILocation(line: 1264, column: 5, scope: !14872)
!14875 = !DILocation(line: 1265, column: 7, scope: !14863)
!14876 = !DILocation(line: 1266, column: 16, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14863, file: !2280, line: 1265, column: 7)
!14878 = !DILocation(line: 1266, column: 5, scope: !14877)
!14879 = !DILocation(line: 1267, column: 7, scope: !14863)
!14880 = !DILocation(line: 1268, column: 16, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14863, file: !2280, line: 1267, column: 7)
!14882 = !DILocation(line: 1268, column: 5, scope: !14881)
!14883 = !DILocation(line: 1269, column: 1, scope: !14863)
!14884 = distinct !DISubprogram(name: "gt_pch_p_14lang_tree_node", scope: !2280, file: !2280, line: 1272, type: !13289, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14885)
!14885 = !{!14886, !14887, !14888, !14889, !14890, !14892, !14896, !14897, !14900, !14901, !14903, !14904, !14906}
!14886 = !DILocalVariable(name: "this_obj", arg: 1, scope: !14884, file: !2280, line: 1272, type: !624)
!14887 = !DILocalVariable(name: "x_p", arg: 2, scope: !14884, file: !2280, line: 1273, type: !624)
!14888 = !DILocalVariable(name: "op", arg: 3, scope: !14884, file: !2280, line: 1274, type: !13291)
!14889 = !DILocalVariable(name: "cookie", arg: 4, scope: !14884, file: !2280, line: 1275, type: !624)
!14890 = !DILocalVariable(name: "x", scope: !14884, file: !2280, line: 1277, type: !14891)
!14891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2225)
!14892 = !DILocalVariable(name: "i1", scope: !14893, file: !2280, line: 1786, type: !1107)
!14893 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1785, column: 11)
!14894 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1282, column: 9)
!14895 = distinct !DILexicalBlock(scope: !14884, file: !2280, line: 1279, column: 5)
!14896 = !DILocalVariable(name: "l1", scope: !14893, file: !2280, line: 1787, type: !1107)
!14897 = !DILocalVariable(name: "i2", scope: !14898, file: !2280, line: 1805, type: !1107)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2280, line: 1804, column: 15)
!14899 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1802, column: 13)
!14900 = !DILocalVariable(name: "l2", scope: !14898, file: !2280, line: 1806, type: !1107)
!14901 = !DILocalVariable(name: "i3", scope: !14902, file: !2280, line: 1869, type: !1107)
!14902 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1868, column: 11)
!14903 = !DILocalVariable(name: "l3", scope: !14902, file: !2280, line: 1870, type: !1107)
!14904 = !DILocalVariable(name: "i4", scope: !14905, file: !2280, line: 1905, type: !1107)
!14905 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1904, column: 11)
!14906 = !DILocalVariable(name: "l4", scope: !14905, file: !2280, line: 1906, type: !1107)
!14907 = !DILocation(line: 0, scope: !14884)
!14908 = !DILocation(line: 1278, column: 11, scope: !14884)
!14909 = !DILocation(line: 1278, column: 39, scope: !14884)
!14910 = !DILocation(line: 1278, column: 3, scope: !14884)
!14911 = !DILocation(line: 1281, column: 43, scope: !14895)
!14912 = !DILocation(line: 1281, column: 15, scope: !14895)
!14913 = !DILocation(line: 1281, column: 7, scope: !14895)
!14914 = !DILocation(line: 1286, column: 27, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1286, column: 15)
!14916 = !DILocation(line: 1286, column: 15, scope: !14894)
!14917 = !DILocation(line: 1287, column: 39, scope: !14915)
!14918 = !DILocation(line: 1287, column: 13, scope: !14915)
!14919 = !DILocation(line: 1288, column: 15, scope: !14894)
!14920 = !DILocation(line: 1289, column: 39, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1288, column: 15)
!14922 = !DILocation(line: 1289, column: 13, scope: !14921)
!14923 = !DILocation(line: 1292, column: 27, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1292, column: 15)
!14925 = !DILocation(line: 1292, column: 15, scope: !14894)
!14926 = !DILocation(line: 1293, column: 47, scope: !14924)
!14927 = !DILocation(line: 1293, column: 13, scope: !14924)
!14928 = !DILocation(line: 1294, column: 15, scope: !14894)
!14929 = !DILocation(line: 1295, column: 47, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1294, column: 15)
!14931 = !DILocation(line: 1295, column: 13, scope: !14930)
!14932 = !DILocation(line: 1298, column: 27, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1298, column: 15)
!14934 = !DILocation(line: 1298, column: 15, scope: !14894)
!14935 = !DILocation(line: 1299, column: 48, scope: !14933)
!14936 = !DILocation(line: 1299, column: 13, scope: !14933)
!14937 = !DILocation(line: 1300, column: 15, scope: !14894)
!14938 = !DILocation(line: 1301, column: 48, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1300, column: 15)
!14940 = !DILocation(line: 1301, column: 13, scope: !14939)
!14941 = !DILocation(line: 1302, column: 15, scope: !14894)
!14942 = !DILocation(line: 1303, column: 41, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1302, column: 15)
!14944 = !DILocation(line: 1303, column: 13, scope: !14943)
!14945 = !DILocation(line: 1306, column: 27, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1306, column: 15)
!14947 = !DILocation(line: 1306, column: 15, scope: !14894)
!14948 = !DILocation(line: 1307, column: 49, scope: !14946)
!14949 = !DILocation(line: 1307, column: 13, scope: !14946)
!14950 = !DILocation(line: 1308, column: 15, scope: !14894)
!14951 = !DILocation(line: 1309, column: 49, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1308, column: 15)
!14953 = !DILocation(line: 1309, column: 13, scope: !14952)
!14954 = !DILocation(line: 1310, column: 15, scope: !14894)
!14955 = !DILocation(line: 1311, column: 42, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1310, column: 15)
!14957 = !DILocation(line: 1311, column: 13, scope: !14956)
!14958 = !DILocation(line: 1314, column: 27, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1314, column: 15)
!14960 = !DILocation(line: 1314, column: 15, scope: !14894)
!14961 = !DILocation(line: 1315, column: 46, scope: !14959)
!14962 = !DILocation(line: 1315, column: 13, scope: !14959)
!14963 = !DILocation(line: 1316, column: 15, scope: !14894)
!14964 = !DILocation(line: 1317, column: 46, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1316, column: 15)
!14966 = !DILocation(line: 1317, column: 13, scope: !14965)
!14967 = !DILocation(line: 1318, column: 15, scope: !14894)
!14968 = !DILocation(line: 1319, column: 39, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1318, column: 15)
!14970 = !DILocation(line: 1319, column: 13, scope: !14969)
!14971 = !DILocation(line: 1322, column: 27, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1322, column: 15)
!14973 = !DILocation(line: 1322, column: 15, scope: !14894)
!14974 = !DILocation(line: 1323, column: 46, scope: !14972)
!14975 = !DILocation(line: 1323, column: 13, scope: !14972)
!14976 = !DILocation(line: 1324, column: 15, scope: !14894)
!14977 = !DILocation(line: 1325, column: 46, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1324, column: 15)
!14979 = !DILocation(line: 1325, column: 13, scope: !14978)
!14980 = !DILocation(line: 1328, column: 27, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1328, column: 15)
!14982 = !DILocation(line: 1328, column: 15, scope: !14894)
!14983 = !DILocation(line: 1329, column: 47, scope: !14981)
!14984 = !DILocation(line: 1329, column: 13, scope: !14981)
!14985 = !DILocation(line: 1330, column: 15, scope: !14894)
!14986 = !DILocation(line: 1331, column: 47, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1330, column: 15)
!14988 = !DILocation(line: 1331, column: 13, scope: !14987)
!14989 = !DILocation(line: 1332, column: 15, scope: !14894)
!14990 = !DILocation(line: 1333, column: 40, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1332, column: 15)
!14992 = !DILocation(line: 1333, column: 13, scope: !14991)
!14993 = !DILocation(line: 1334, column: 15, scope: !14894)
!14994 = !DILocation(line: 1335, column: 40, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1334, column: 15)
!14996 = !DILocation(line: 1335, column: 13, scope: !14995)
!14997 = !DILocation(line: 1338, column: 27, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1338, column: 15)
!14999 = !DILocation(line: 1338, column: 15, scope: !14894)
!15000 = !DILocation(line: 1339, column: 50, scope: !14998)
!15001 = !DILocation(line: 1339, column: 13, scope: !14998)
!15002 = !DILocation(line: 1340, column: 15, scope: !14894)
!15003 = !DILocation(line: 1341, column: 50, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1340, column: 15)
!15005 = !DILocation(line: 1341, column: 13, scope: !15004)
!15006 = !DILocation(line: 1342, column: 15, scope: !14894)
!15007 = !DILocation(line: 1343, column: 43, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1342, column: 15)
!15009 = !DILocation(line: 1343, column: 13, scope: !15008)
!15010 = !DILocation(line: 1346, column: 27, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1346, column: 15)
!15012 = !DILocation(line: 1346, column: 15, scope: !14894)
!15013 = !DILocation(line: 1347, column: 52, scope: !15011)
!15014 = !DILocation(line: 1347, column: 13, scope: !15011)
!15015 = !DILocation(line: 1348, column: 15, scope: !14894)
!15016 = !DILocation(line: 1349, column: 52, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1348, column: 15)
!15018 = !DILocation(line: 1349, column: 13, scope: !15017)
!15019 = !DILocation(line: 1350, column: 15, scope: !14894)
!15020 = !DILocation(line: 1351, column: 45, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1350, column: 15)
!15022 = !DILocation(line: 1351, column: 13, scope: !15021)
!15023 = !DILocation(line: 1352, column: 15, scope: !14894)
!15024 = !DILocation(line: 1353, column: 45, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1352, column: 15)
!15026 = !DILocation(line: 1353, column: 13, scope: !15025)
!15027 = !DILocation(line: 1356, column: 27, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1356, column: 15)
!15029 = !DILocation(line: 1356, column: 15, scope: !14894)
!15030 = !DILocation(line: 1357, column: 58, scope: !15028)
!15031 = !DILocation(line: 1357, column: 13, scope: !15028)
!15032 = !DILocation(line: 1358, column: 15, scope: !14894)
!15033 = !DILocation(line: 1359, column: 58, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1358, column: 15)
!15035 = !DILocation(line: 1359, column: 13, scope: !15034)
!15036 = !DILocation(line: 1360, column: 15, scope: !14894)
!15037 = !DILocation(line: 1361, column: 51, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1360, column: 15)
!15039 = !DILocation(line: 1361, column: 13, scope: !15038)
!15040 = !DILocation(line: 1362, column: 15, scope: !14894)
!15041 = !DILocation(line: 1363, column: 51, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1362, column: 15)
!15043 = !DILocation(line: 1363, column: 13, scope: !15042)
!15044 = !DILocation(line: 1364, column: 15, scope: !14894)
!15045 = !DILocation(line: 1365, column: 44, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1364, column: 15)
!15047 = !DILocation(line: 1365, column: 13, scope: !15046)
!15048 = !DILocation(line: 1366, column: 15, scope: !14894)
!15049 = !DILocation(line: 1367, column: 44, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1366, column: 15)
!15051 = !DILocation(line: 1367, column: 13, scope: !15050)
!15052 = !DILocation(line: 1368, column: 15, scope: !14894)
!15053 = !DILocation(line: 1369, column: 44, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1368, column: 15)
!15055 = !DILocation(line: 1369, column: 13, scope: !15054)
!15056 = !DILocation(line: 1370, column: 15, scope: !14894)
!15057 = !DILocation(line: 1371, column: 44, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1370, column: 15)
!15059 = !DILocation(line: 1371, column: 13, scope: !15058)
!15060 = !DILocation(line: 1372, column: 15, scope: !14894)
!15061 = !DILocation(line: 1373, column: 44, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1372, column: 15)
!15063 = !DILocation(line: 1373, column: 13, scope: !15062)
!15064 = !DILocation(line: 1374, column: 15, scope: !14894)
!15065 = !DILocation(line: 1375, column: 44, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1374, column: 15)
!15067 = !DILocation(line: 1375, column: 13, scope: !15066)
!15068 = !DILocation(line: 1378, column: 27, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1378, column: 15)
!15070 = !DILocation(line: 1378, column: 15, scope: !14894)
!15071 = !DILocation(line: 1379, column: 67, scope: !15069)
!15072 = !DILocation(line: 1379, column: 13, scope: !15069)
!15073 = !DILocation(line: 1380, column: 15, scope: !14894)
!15074 = !DILocation(line: 1381, column: 67, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1380, column: 15)
!15076 = !DILocation(line: 1381, column: 13, scope: !15075)
!15077 = !DILocation(line: 1382, column: 15, scope: !14894)
!15078 = !DILocation(line: 1383, column: 60, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1382, column: 15)
!15080 = !DILocation(line: 1383, column: 13, scope: !15079)
!15081 = !DILocation(line: 1384, column: 15, scope: !14894)
!15082 = !DILocation(line: 1385, column: 60, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1384, column: 15)
!15084 = !DILocation(line: 1385, column: 13, scope: !15083)
!15085 = !DILocation(line: 1386, column: 15, scope: !14894)
!15086 = !DILocation(line: 1387, column: 53, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1386, column: 15)
!15088 = !DILocation(line: 1387, column: 13, scope: !15087)
!15089 = !DILocation(line: 1388, column: 15, scope: !14894)
!15090 = !DILocation(line: 1389, column: 53, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1388, column: 15)
!15092 = !DILocation(line: 1389, column: 13, scope: !15091)
!15093 = !DILocation(line: 1390, column: 15, scope: !14894)
!15094 = !DILocation(line: 1391, column: 53, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1390, column: 15)
!15096 = !DILocation(line: 1391, column: 13, scope: !15095)
!15097 = !DILocation(line: 1392, column: 15, scope: !14894)
!15098 = !DILocation(line: 1393, column: 53, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1392, column: 15)
!15100 = !DILocation(line: 1393, column: 13, scope: !15099)
!15101 = !DILocation(line: 1394, column: 15, scope: !14894)
!15102 = !DILocation(line: 1395, column: 53, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1394, column: 15)
!15104 = !DILocation(line: 1395, column: 13, scope: !15103)
!15105 = !DILocation(line: 1396, column: 15, scope: !14894)
!15106 = !DILocation(line: 1397, column: 53, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1396, column: 15)
!15108 = !DILocation(line: 1397, column: 13, scope: !15107)
!15109 = !DILocation(line: 1398, column: 15, scope: !14894)
!15110 = !DILocation(line: 1399, column: 46, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1398, column: 15)
!15112 = !DILocation(line: 1399, column: 13, scope: !15111)
!15113 = !DILocation(line: 1402, column: 27, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1402, column: 15)
!15115 = !DILocation(line: 1402, column: 15, scope: !14894)
!15116 = !DILocation(line: 1403, column: 83, scope: !15114)
!15117 = !DILocation(line: 1403, column: 13, scope: !15114)
!15118 = !DILocation(line: 1404, column: 15, scope: !14894)
!15119 = !DILocation(line: 1405, column: 83, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1404, column: 15)
!15121 = !DILocation(line: 1405, column: 13, scope: !15120)
!15122 = !DILocation(line: 1406, column: 15, scope: !14894)
!15123 = !DILocation(line: 1407, column: 76, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1406, column: 15)
!15125 = !DILocation(line: 1407, column: 13, scope: !15124)
!15126 = !DILocation(line: 1408, column: 15, scope: !14894)
!15127 = !DILocation(line: 1409, column: 76, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1408, column: 15)
!15129 = !DILocation(line: 1409, column: 13, scope: !15128)
!15130 = !DILocation(line: 1410, column: 15, scope: !14894)
!15131 = !DILocation(line: 1411, column: 69, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1410, column: 15)
!15133 = !DILocation(line: 1411, column: 13, scope: !15132)
!15134 = !DILocation(line: 1412, column: 15, scope: !14894)
!15135 = !DILocation(line: 1413, column: 69, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1412, column: 15)
!15137 = !DILocation(line: 1413, column: 13, scope: !15136)
!15138 = !DILocation(line: 1414, column: 15, scope: !14894)
!15139 = !DILocation(line: 1415, column: 69, scope: !15140)
!15140 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1414, column: 15)
!15141 = !DILocation(line: 1415, column: 13, scope: !15140)
!15142 = !DILocation(line: 1416, column: 15, scope: !14894)
!15143 = !DILocation(line: 1417, column: 69, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1416, column: 15)
!15145 = !DILocation(line: 1417, column: 13, scope: !15144)
!15146 = !DILocation(line: 1418, column: 15, scope: !14894)
!15147 = !DILocation(line: 1419, column: 69, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1418, column: 15)
!15149 = !DILocation(line: 1419, column: 13, scope: !15148)
!15150 = !DILocation(line: 1420, column: 15, scope: !14894)
!15151 = !DILocation(line: 1421, column: 69, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1420, column: 15)
!15153 = !DILocation(line: 1421, column: 13, scope: !15152)
!15154 = !DILocation(line: 1422, column: 15, scope: !14894)
!15155 = !DILocation(line: 1423, column: 62, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1422, column: 15)
!15157 = !DILocation(line: 1423, column: 13, scope: !15156)
!15158 = !DILocation(line: 1424, column: 15, scope: !14894)
!15159 = !DILocation(line: 1425, column: 55, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1424, column: 15)
!15161 = !DILocation(line: 1425, column: 13, scope: !15160)
!15162 = !DILocation(line: 1426, column: 15, scope: !14894)
!15163 = !DILocation(line: 1427, column: 55, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1426, column: 15)
!15165 = !DILocation(line: 1427, column: 13, scope: !15164)
!15166 = !DILocation(line: 1428, column: 15, scope: !14894)
!15167 = !DILocation(line: 1429, column: 55, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1428, column: 15)
!15169 = !DILocation(line: 1429, column: 13, scope: !15168)
!15170 = !DILocation(line: 1430, column: 15, scope: !14894)
!15171 = !DILocation(line: 1431, column: 48, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1430, column: 15)
!15173 = !DILocation(line: 1431, column: 13, scope: !15172)
!15174 = !DILocation(line: 1432, column: 15, scope: !14894)
!15175 = !DILocation(line: 1433, column: 48, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1432, column: 15)
!15177 = !DILocation(line: 1433, column: 13, scope: !15176)
!15178 = !DILocation(line: 1434, column: 15, scope: !14894)
!15179 = !DILocation(line: 1435, column: 48, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1434, column: 15)
!15181 = !DILocation(line: 1435, column: 13, scope: !15180)
!15182 = !DILocation(line: 1436, column: 15, scope: !14894)
!15183 = !DILocation(line: 1437, column: 48, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1436, column: 15)
!15185 = !DILocation(line: 1437, column: 13, scope: !15184)
!15186 = !DILocation(line: 1440, column: 27, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1440, column: 15)
!15188 = !DILocation(line: 1440, column: 15, scope: !14894)
!15189 = !DILocation(line: 1441, column: 70, scope: !15187)
!15190 = !DILocation(line: 1441, column: 13, scope: !15187)
!15191 = !DILocation(line: 1442, column: 15, scope: !14894)
!15192 = !DILocation(line: 1443, column: 70, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1442, column: 15)
!15194 = !DILocation(line: 1443, column: 13, scope: !15193)
!15195 = !DILocation(line: 1444, column: 15, scope: !14894)
!15196 = !DILocation(line: 1445, column: 63, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1444, column: 15)
!15198 = !DILocation(line: 1445, column: 13, scope: !15197)
!15199 = !DILocation(line: 1446, column: 15, scope: !14894)
!15200 = !DILocation(line: 1447, column: 63, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1446, column: 15)
!15202 = !DILocation(line: 1447, column: 13, scope: !15201)
!15203 = !DILocation(line: 1448, column: 15, scope: !14894)
!15204 = !DILocation(line: 1449, column: 56, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1448, column: 15)
!15206 = !DILocation(line: 1449, column: 13, scope: !15205)
!15207 = !DILocation(line: 1450, column: 15, scope: !14894)
!15208 = !DILocation(line: 1451, column: 56, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1450, column: 15)
!15210 = !DILocation(line: 1451, column: 13, scope: !15209)
!15211 = !DILocation(line: 1452, column: 15, scope: !14894)
!15212 = !DILocation(line: 1453, column: 56, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1452, column: 15)
!15214 = !DILocation(line: 1453, column: 13, scope: !15213)
!15215 = !DILocation(line: 1454, column: 15, scope: !14894)
!15216 = !DILocation(line: 1455, column: 56, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1454, column: 15)
!15218 = !DILocation(line: 1455, column: 13, scope: !15217)
!15219 = !DILocation(line: 1456, column: 15, scope: !14894)
!15220 = !DILocation(line: 1457, column: 56, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1456, column: 15)
!15222 = !DILocation(line: 1457, column: 13, scope: !15221)
!15223 = !DILocation(line: 1458, column: 15, scope: !14894)
!15224 = !DILocation(line: 1459, column: 56, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1458, column: 15)
!15226 = !DILocation(line: 1459, column: 13, scope: !15225)
!15227 = !DILocation(line: 1460, column: 15, scope: !14894)
!15228 = !DILocation(line: 1461, column: 49, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1460, column: 15)
!15230 = !DILocation(line: 1461, column: 13, scope: !15229)
!15231 = !DILocation(line: 1462, column: 15, scope: !14894)
!15232 = !DILocation(line: 1463, column: 42, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1462, column: 15)
!15234 = !DILocation(line: 1463, column: 13, scope: !15233)
!15235 = !DILocation(line: 1464, column: 15, scope: !14894)
!15236 = !DILocation(line: 1465, column: 42, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1464, column: 15)
!15238 = !DILocation(line: 1465, column: 13, scope: !15237)
!15239 = !DILocation(line: 1468, column: 27, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1468, column: 15)
!15241 = !DILocation(line: 1468, column: 15, scope: !14894)
!15242 = !DILocation(line: 1469, column: 74, scope: !15240)
!15243 = !DILocation(line: 1469, column: 13, scope: !15240)
!15244 = !DILocation(line: 1470, column: 15, scope: !14894)
!15245 = !DILocation(line: 1471, column: 74, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1470, column: 15)
!15247 = !DILocation(line: 1471, column: 13, scope: !15246)
!15248 = !DILocation(line: 1472, column: 15, scope: !14894)
!15249 = !DILocation(line: 1473, column: 67, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1472, column: 15)
!15251 = !DILocation(line: 1473, column: 13, scope: !15250)
!15252 = !DILocation(line: 1474, column: 15, scope: !14894)
!15253 = !DILocation(line: 1475, column: 67, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1474, column: 15)
!15255 = !DILocation(line: 1475, column: 13, scope: !15254)
!15256 = !DILocation(line: 1476, column: 15, scope: !14894)
!15257 = !DILocation(line: 1477, column: 60, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1476, column: 15)
!15259 = !DILocation(line: 1477, column: 13, scope: !15258)
!15260 = !DILocation(line: 1478, column: 15, scope: !14894)
!15261 = !DILocation(line: 1479, column: 60, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1478, column: 15)
!15263 = !DILocation(line: 1479, column: 13, scope: !15262)
!15264 = !DILocation(line: 1480, column: 15, scope: !14894)
!15265 = !DILocation(line: 1481, column: 60, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1480, column: 15)
!15267 = !DILocation(line: 1481, column: 13, scope: !15266)
!15268 = !DILocation(line: 1482, column: 15, scope: !14894)
!15269 = !DILocation(line: 1483, column: 60, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1482, column: 15)
!15271 = !DILocation(line: 1483, column: 13, scope: !15270)
!15272 = !DILocation(line: 1484, column: 15, scope: !14894)
!15273 = !DILocation(line: 1485, column: 60, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1484, column: 15)
!15275 = !DILocation(line: 1485, column: 13, scope: !15274)
!15276 = !DILocation(line: 1486, column: 15, scope: !14894)
!15277 = !DILocation(line: 1487, column: 60, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1486, column: 15)
!15279 = !DILocation(line: 1487, column: 13, scope: !15278)
!15280 = !DILocation(line: 1488, column: 15, scope: !14894)
!15281 = !DILocation(line: 1489, column: 53, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1488, column: 15)
!15283 = !DILocation(line: 1489, column: 13, scope: !15282)
!15284 = !DILocation(line: 1490, column: 15, scope: !14894)
!15285 = !DILocation(line: 1491, column: 46, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1490, column: 15)
!15287 = !DILocation(line: 1491, column: 13, scope: !15286)
!15288 = !DILocation(line: 1492, column: 15, scope: !14894)
!15289 = !DILocation(line: 1493, column: 46, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1492, column: 15)
!15291 = !DILocation(line: 1493, column: 13, scope: !15290)
!15292 = !DILocation(line: 1494, column: 15, scope: !14894)
!15293 = !DILocation(line: 1495, column: 46, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1494, column: 15)
!15295 = !DILocation(line: 1495, column: 13, scope: !15294)
!15296 = !DILocation(line: 1498, column: 27, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1498, column: 15)
!15298 = !DILocation(line: 1498, column: 15, scope: !14894)
!15299 = !DILocation(line: 1499, column: 76, scope: !15297)
!15300 = !DILocation(line: 1499, column: 13, scope: !15297)
!15301 = !DILocation(line: 1500, column: 15, scope: !14894)
!15302 = !DILocation(line: 1501, column: 76, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1500, column: 15)
!15304 = !DILocation(line: 1501, column: 13, scope: !15303)
!15305 = !DILocation(line: 1502, column: 15, scope: !14894)
!15306 = !DILocation(line: 1503, column: 69, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1502, column: 15)
!15308 = !DILocation(line: 1503, column: 13, scope: !15307)
!15309 = !DILocation(line: 1504, column: 15, scope: !14894)
!15310 = !DILocation(line: 1505, column: 69, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1504, column: 15)
!15312 = !DILocation(line: 1505, column: 13, scope: !15311)
!15313 = !DILocation(line: 1506, column: 15, scope: !14894)
!15314 = !DILocation(line: 1507, column: 62, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1506, column: 15)
!15316 = !DILocation(line: 1507, column: 13, scope: !15315)
!15317 = !DILocation(line: 1508, column: 15, scope: !14894)
!15318 = !DILocation(line: 1509, column: 62, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1508, column: 15)
!15320 = !DILocation(line: 1509, column: 13, scope: !15319)
!15321 = !DILocation(line: 1510, column: 15, scope: !14894)
!15322 = !DILocation(line: 1511, column: 62, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1510, column: 15)
!15324 = !DILocation(line: 1511, column: 13, scope: !15323)
!15325 = !DILocation(line: 1512, column: 15, scope: !14894)
!15326 = !DILocation(line: 1513, column: 62, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1512, column: 15)
!15328 = !DILocation(line: 1513, column: 13, scope: !15327)
!15329 = !DILocation(line: 1514, column: 15, scope: !14894)
!15330 = !DILocation(line: 1515, column: 62, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1514, column: 15)
!15332 = !DILocation(line: 1515, column: 13, scope: !15331)
!15333 = !DILocation(line: 1516, column: 15, scope: !14894)
!15334 = !DILocation(line: 1517, column: 62, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1516, column: 15)
!15336 = !DILocation(line: 1517, column: 13, scope: !15335)
!15337 = !DILocation(line: 1518, column: 15, scope: !14894)
!15338 = !DILocation(line: 1519, column: 55, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1518, column: 15)
!15340 = !DILocation(line: 1519, column: 13, scope: !15339)
!15341 = !DILocation(line: 1520, column: 15, scope: !14894)
!15342 = !DILocation(line: 1521, column: 48, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1520, column: 15)
!15344 = !DILocation(line: 1521, column: 13, scope: !15343)
!15345 = !DILocation(line: 1522, column: 15, scope: !14894)
!15346 = !DILocation(line: 1523, column: 48, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1522, column: 15)
!15348 = !DILocation(line: 1523, column: 13, scope: !15347)
!15349 = !DILocation(line: 1524, column: 15, scope: !14894)
!15350 = !DILocation(line: 1525, column: 48, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1524, column: 15)
!15352 = !DILocation(line: 1525, column: 13, scope: !15351)
!15353 = !DILocation(line: 1526, column: 15, scope: !14894)
!15354 = !DILocation(line: 1527, column: 41, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1526, column: 15)
!15356 = !DILocation(line: 1527, column: 13, scope: !15355)
!15357 = !DILocation(line: 1530, column: 27, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1530, column: 15)
!15359 = !DILocation(line: 1530, column: 15, scope: !14894)
!15360 = !DILocation(line: 1531, column: 64, scope: !15358)
!15361 = !DILocation(line: 1531, column: 13, scope: !15358)
!15362 = !DILocation(line: 1532, column: 15, scope: !14894)
!15363 = !DILocation(line: 1533, column: 64, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1532, column: 15)
!15365 = !DILocation(line: 1533, column: 13, scope: !15364)
!15366 = !DILocation(line: 1534, column: 15, scope: !14894)
!15367 = !DILocation(line: 1535, column: 57, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1534, column: 15)
!15369 = !DILocation(line: 1535, column: 13, scope: !15368)
!15370 = !DILocation(line: 1536, column: 15, scope: !14894)
!15371 = !DILocation(line: 1537, column: 57, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1536, column: 15)
!15373 = !DILocation(line: 1537, column: 13, scope: !15372)
!15374 = !DILocation(line: 1538, column: 15, scope: !14894)
!15375 = !DILocation(line: 1539, column: 50, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1538, column: 15)
!15377 = !DILocation(line: 1539, column: 13, scope: !15376)
!15378 = !DILocation(line: 1540, column: 15, scope: !14894)
!15379 = !DILocation(line: 1541, column: 50, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1540, column: 15)
!15381 = !DILocation(line: 1541, column: 13, scope: !15380)
!15382 = !DILocation(line: 1542, column: 15, scope: !14894)
!15383 = !DILocation(line: 1543, column: 50, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1542, column: 15)
!15385 = !DILocation(line: 1543, column: 13, scope: !15384)
!15386 = !DILocation(line: 1544, column: 15, scope: !14894)
!15387 = !DILocation(line: 1545, column: 50, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1544, column: 15)
!15389 = !DILocation(line: 1545, column: 13, scope: !15388)
!15390 = !DILocation(line: 1546, column: 15, scope: !14894)
!15391 = !DILocation(line: 1547, column: 50, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1546, column: 15)
!15393 = !DILocation(line: 1547, column: 13, scope: !15392)
!15394 = !DILocation(line: 1548, column: 15, scope: !14894)
!15395 = !DILocation(line: 1549, column: 50, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1548, column: 15)
!15397 = !DILocation(line: 1549, column: 13, scope: !15396)
!15398 = !DILocation(line: 1550, column: 15, scope: !14894)
!15399 = !DILocation(line: 1551, column: 43, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1550, column: 15)
!15401 = !DILocation(line: 1551, column: 13, scope: !15400)
!15402 = !DILocation(line: 1552, column: 15, scope: !14894)
!15403 = !DILocation(line: 1553, column: 43, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1552, column: 15)
!15405 = !DILocation(line: 1553, column: 13, scope: !15404)
!15406 = !DILocation(line: 1554, column: 15, scope: !14894)
!15407 = !DILocation(line: 1555, column: 43, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1554, column: 15)
!15409 = !DILocation(line: 1555, column: 13, scope: !15408)
!15410 = !DILocation(line: 1556, column: 15, scope: !14894)
!15411 = !DILocation(line: 1557, column: 43, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1556, column: 15)
!15413 = !DILocation(line: 1557, column: 13, scope: !15412)
!15414 = !DILocation(line: 1558, column: 15, scope: !14894)
!15415 = !DILocation(line: 1559, column: 43, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1558, column: 15)
!15417 = !DILocation(line: 1559, column: 13, scope: !15416)
!15418 = !DILocation(line: 1562, column: 27, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1562, column: 15)
!15420 = !DILocation(line: 1562, column: 15, scope: !14894)
!15421 = !DILocation(line: 1563, column: 71, scope: !15419)
!15422 = !DILocation(line: 1563, column: 13, scope: !15419)
!15423 = !DILocation(line: 1564, column: 15, scope: !14894)
!15424 = !DILocation(line: 1565, column: 71, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1564, column: 15)
!15426 = !DILocation(line: 1565, column: 13, scope: !15425)
!15427 = !DILocation(line: 1566, column: 15, scope: !14894)
!15428 = !DILocation(line: 1567, column: 64, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1566, column: 15)
!15430 = !DILocation(line: 1567, column: 13, scope: !15429)
!15431 = !DILocation(line: 1568, column: 15, scope: !14894)
!15432 = !DILocation(line: 1569, column: 64, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1568, column: 15)
!15434 = !DILocation(line: 1569, column: 13, scope: !15433)
!15435 = !DILocation(line: 1570, column: 15, scope: !14894)
!15436 = !DILocation(line: 1571, column: 57, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1570, column: 15)
!15438 = !DILocation(line: 1571, column: 13, scope: !15437)
!15439 = !DILocation(line: 1572, column: 15, scope: !14894)
!15440 = !DILocation(line: 1573, column: 57, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1572, column: 15)
!15442 = !DILocation(line: 1573, column: 13, scope: !15441)
!15443 = !DILocation(line: 1574, column: 15, scope: !14894)
!15444 = !DILocation(line: 1575, column: 57, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1574, column: 15)
!15446 = !DILocation(line: 1575, column: 13, scope: !15445)
!15447 = !DILocation(line: 1576, column: 15, scope: !14894)
!15448 = !DILocation(line: 1577, column: 57, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1576, column: 15)
!15450 = !DILocation(line: 1577, column: 13, scope: !15449)
!15451 = !DILocation(line: 1578, column: 15, scope: !14894)
!15452 = !DILocation(line: 1579, column: 57, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1578, column: 15)
!15454 = !DILocation(line: 1579, column: 13, scope: !15453)
!15455 = !DILocation(line: 1580, column: 15, scope: !14894)
!15456 = !DILocation(line: 1581, column: 57, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1580, column: 15)
!15458 = !DILocation(line: 1581, column: 13, scope: !15457)
!15459 = !DILocation(line: 1582, column: 15, scope: !14894)
!15460 = !DILocation(line: 1583, column: 50, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1582, column: 15)
!15462 = !DILocation(line: 1583, column: 13, scope: !15461)
!15463 = !DILocation(line: 1586, column: 27, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1586, column: 15)
!15465 = !DILocation(line: 1586, column: 15, scope: !14894)
!15466 = !DILocation(line: 1587, column: 72, scope: !15464)
!15467 = !DILocation(line: 1587, column: 13, scope: !15464)
!15468 = !DILocation(line: 1588, column: 15, scope: !14894)
!15469 = !DILocation(line: 1589, column: 72, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1588, column: 15)
!15471 = !DILocation(line: 1589, column: 13, scope: !15470)
!15472 = !DILocation(line: 1590, column: 15, scope: !14894)
!15473 = !DILocation(line: 1591, column: 65, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1590, column: 15)
!15475 = !DILocation(line: 1591, column: 13, scope: !15474)
!15476 = !DILocation(line: 1592, column: 15, scope: !14894)
!15477 = !DILocation(line: 1593, column: 65, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1592, column: 15)
!15479 = !DILocation(line: 1593, column: 13, scope: !15478)
!15480 = !DILocation(line: 1594, column: 15, scope: !14894)
!15481 = !DILocation(line: 1595, column: 58, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1594, column: 15)
!15483 = !DILocation(line: 1595, column: 13, scope: !15482)
!15484 = !DILocation(line: 1596, column: 15, scope: !14894)
!15485 = !DILocation(line: 1597, column: 58, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1596, column: 15)
!15487 = !DILocation(line: 1597, column: 13, scope: !15486)
!15488 = !DILocation(line: 1598, column: 15, scope: !14894)
!15489 = !DILocation(line: 1599, column: 58, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1598, column: 15)
!15491 = !DILocation(line: 1599, column: 13, scope: !15490)
!15492 = !DILocation(line: 1600, column: 15, scope: !14894)
!15493 = !DILocation(line: 1601, column: 58, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1600, column: 15)
!15495 = !DILocation(line: 1601, column: 13, scope: !15494)
!15496 = !DILocation(line: 1602, column: 15, scope: !14894)
!15497 = !DILocation(line: 1603, column: 58, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1602, column: 15)
!15499 = !DILocation(line: 1603, column: 13, scope: !15498)
!15500 = !DILocation(line: 1604, column: 15, scope: !14894)
!15501 = !DILocation(line: 1605, column: 58, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1604, column: 15)
!15503 = !DILocation(line: 1605, column: 13, scope: !15502)
!15504 = !DILocation(line: 1606, column: 15, scope: !14894)
!15505 = !DILocation(line: 1607, column: 51, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1606, column: 15)
!15507 = !DILocation(line: 1607, column: 13, scope: !15506)
!15508 = !DILocation(line: 1608, column: 15, scope: !14894)
!15509 = !DILocation(line: 1609, column: 44, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1608, column: 15)
!15511 = !DILocation(line: 1609, column: 13, scope: !15510)
!15512 = !DILocation(line: 1612, column: 27, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1612, column: 15)
!15514 = !DILocation(line: 1612, column: 15, scope: !14894)
!15515 = !DILocation(line: 1613, column: 71, scope: !15513)
!15516 = !DILocation(line: 1613, column: 13, scope: !15513)
!15517 = !DILocation(line: 1614, column: 15, scope: !14894)
!15518 = !DILocation(line: 1615, column: 71, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1614, column: 15)
!15520 = !DILocation(line: 1615, column: 13, scope: !15519)
!15521 = !DILocation(line: 1616, column: 15, scope: !14894)
!15522 = !DILocation(line: 1617, column: 64, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1616, column: 15)
!15524 = !DILocation(line: 1617, column: 13, scope: !15523)
!15525 = !DILocation(line: 1618, column: 15, scope: !14894)
!15526 = !DILocation(line: 1619, column: 64, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1618, column: 15)
!15528 = !DILocation(line: 1619, column: 13, scope: !15527)
!15529 = !DILocation(line: 1620, column: 15, scope: !14894)
!15530 = !DILocation(line: 1621, column: 57, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1620, column: 15)
!15532 = !DILocation(line: 1621, column: 13, scope: !15531)
!15533 = !DILocation(line: 1622, column: 15, scope: !14894)
!15534 = !DILocation(line: 1623, column: 57, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1622, column: 15)
!15536 = !DILocation(line: 1623, column: 13, scope: !15535)
!15537 = !DILocation(line: 1624, column: 15, scope: !14894)
!15538 = !DILocation(line: 1625, column: 57, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1624, column: 15)
!15540 = !DILocation(line: 1625, column: 13, scope: !15539)
!15541 = !DILocation(line: 1626, column: 15, scope: !14894)
!15542 = !DILocation(line: 1627, column: 57, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1626, column: 15)
!15544 = !DILocation(line: 1627, column: 13, scope: !15543)
!15545 = !DILocation(line: 1628, column: 15, scope: !14894)
!15546 = !DILocation(line: 1629, column: 57, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1628, column: 15)
!15548 = !DILocation(line: 1629, column: 13, scope: !15547)
!15549 = !DILocation(line: 1630, column: 15, scope: !14894)
!15550 = !DILocation(line: 1631, column: 57, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1630, column: 15)
!15552 = !DILocation(line: 1631, column: 13, scope: !15551)
!15553 = !DILocation(line: 1632, column: 15, scope: !14894)
!15554 = !DILocation(line: 1633, column: 50, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1632, column: 15)
!15556 = !DILocation(line: 1633, column: 13, scope: !15555)
!15557 = !DILocation(line: 1636, column: 27, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1636, column: 15)
!15559 = !DILocation(line: 1636, column: 15, scope: !14894)
!15560 = !DILocation(line: 1637, column: 84, scope: !15558)
!15561 = !DILocation(line: 1637, column: 13, scope: !15558)
!15562 = !DILocation(line: 1638, column: 15, scope: !14894)
!15563 = !DILocation(line: 1639, column: 84, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1638, column: 15)
!15565 = !DILocation(line: 1639, column: 13, scope: !15564)
!15566 = !DILocation(line: 1640, column: 15, scope: !14894)
!15567 = !DILocation(line: 1641, column: 77, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1640, column: 15)
!15569 = !DILocation(line: 1641, column: 13, scope: !15568)
!15570 = !DILocation(line: 1642, column: 15, scope: !14894)
!15571 = !DILocation(line: 1643, column: 77, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1642, column: 15)
!15573 = !DILocation(line: 1643, column: 13, scope: !15572)
!15574 = !DILocation(line: 1644, column: 15, scope: !14894)
!15575 = !DILocation(line: 1645, column: 70, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1644, column: 15)
!15577 = !DILocation(line: 1645, column: 13, scope: !15576)
!15578 = !DILocation(line: 1646, column: 15, scope: !14894)
!15579 = !DILocation(line: 1647, column: 70, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1646, column: 15)
!15581 = !DILocation(line: 1647, column: 13, scope: !15580)
!15582 = !DILocation(line: 1648, column: 15, scope: !14894)
!15583 = !DILocation(line: 1649, column: 70, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1648, column: 15)
!15585 = !DILocation(line: 1649, column: 13, scope: !15584)
!15586 = !DILocation(line: 1650, column: 15, scope: !14894)
!15587 = !DILocation(line: 1651, column: 70, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1650, column: 15)
!15589 = !DILocation(line: 1651, column: 13, scope: !15588)
!15590 = !DILocation(line: 1652, column: 15, scope: !14894)
!15591 = !DILocation(line: 1653, column: 70, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1652, column: 15)
!15593 = !DILocation(line: 1653, column: 13, scope: !15592)
!15594 = !DILocation(line: 1654, column: 15, scope: !14894)
!15595 = !DILocation(line: 1655, column: 70, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1654, column: 15)
!15597 = !DILocation(line: 1655, column: 13, scope: !15596)
!15598 = !DILocation(line: 1656, column: 15, scope: !14894)
!15599 = !DILocation(line: 1657, column: 63, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1656, column: 15)
!15601 = !DILocation(line: 1657, column: 13, scope: !15600)
!15602 = !DILocation(line: 1658, column: 15, scope: !14894)
!15603 = !DILocation(line: 1659, column: 56, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1658, column: 15)
!15605 = !DILocation(line: 1659, column: 13, scope: !15604)
!15606 = !DILocation(line: 1660, column: 15, scope: !14894)
!15607 = !DILocation(line: 1661, column: 56, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1660, column: 15)
!15609 = !DILocation(line: 1661, column: 13, scope: !15608)
!15610 = !DILocation(line: 1662, column: 15, scope: !14894)
!15611 = !DILocation(line: 1663, column: 56, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1662, column: 15)
!15613 = !DILocation(line: 1663, column: 13, scope: !15612)
!15614 = !DILocation(line: 1664, column: 15, scope: !14894)
!15615 = !DILocation(line: 1665, column: 49, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1664, column: 15)
!15617 = !DILocation(line: 1665, column: 13, scope: !15616)
!15618 = !DILocation(line: 1666, column: 15, scope: !14894)
!15619 = !DILocation(line: 1667, column: 49, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1666, column: 15)
!15621 = !DILocation(line: 1667, column: 13, scope: !15620)
!15622 = !DILocation(line: 1668, column: 15, scope: !14894)
!15623 = !DILocation(line: 1669, column: 49, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1668, column: 15)
!15625 = !DILocation(line: 1669, column: 13, scope: !15624)
!15626 = !DILocation(line: 1670, column: 15, scope: !14894)
!15627 = !DILocation(line: 1671, column: 49, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1670, column: 15)
!15629 = !DILocation(line: 1671, column: 13, scope: !15628)
!15630 = !DILocation(line: 1674, column: 27, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1674, column: 15)
!15632 = !DILocation(line: 1674, column: 15, scope: !14894)
!15633 = !DILocation(line: 1675, column: 88, scope: !15631)
!15634 = !DILocation(line: 1675, column: 13, scope: !15631)
!15635 = !DILocation(line: 1676, column: 15, scope: !14894)
!15636 = !DILocation(line: 1677, column: 88, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1676, column: 15)
!15638 = !DILocation(line: 1677, column: 13, scope: !15637)
!15639 = !DILocation(line: 1678, column: 15, scope: !14894)
!15640 = !DILocation(line: 1679, column: 81, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1678, column: 15)
!15642 = !DILocation(line: 1679, column: 13, scope: !15641)
!15643 = !DILocation(line: 1680, column: 15, scope: !14894)
!15644 = !DILocation(line: 1681, column: 81, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1680, column: 15)
!15646 = !DILocation(line: 1681, column: 13, scope: !15645)
!15647 = !DILocation(line: 1682, column: 15, scope: !14894)
!15648 = !DILocation(line: 1683, column: 74, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1682, column: 15)
!15650 = !DILocation(line: 1683, column: 13, scope: !15649)
!15651 = !DILocation(line: 1684, column: 15, scope: !14894)
!15652 = !DILocation(line: 1685, column: 74, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1684, column: 15)
!15654 = !DILocation(line: 1685, column: 13, scope: !15653)
!15655 = !DILocation(line: 1686, column: 15, scope: !14894)
!15656 = !DILocation(line: 1687, column: 74, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1686, column: 15)
!15658 = !DILocation(line: 1687, column: 13, scope: !15657)
!15659 = !DILocation(line: 1688, column: 15, scope: !14894)
!15660 = !DILocation(line: 1689, column: 74, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1688, column: 15)
!15662 = !DILocation(line: 1689, column: 13, scope: !15661)
!15663 = !DILocation(line: 1690, column: 15, scope: !14894)
!15664 = !DILocation(line: 1691, column: 74, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1690, column: 15)
!15666 = !DILocation(line: 1691, column: 13, scope: !15665)
!15667 = !DILocation(line: 1692, column: 15, scope: !14894)
!15668 = !DILocation(line: 1693, column: 74, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1692, column: 15)
!15670 = !DILocation(line: 1693, column: 13, scope: !15669)
!15671 = !DILocation(line: 1694, column: 15, scope: !14894)
!15672 = !DILocation(line: 1695, column: 67, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1694, column: 15)
!15674 = !DILocation(line: 1695, column: 13, scope: !15673)
!15675 = !DILocation(line: 1696, column: 15, scope: !14894)
!15676 = !DILocation(line: 1697, column: 60, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1696, column: 15)
!15678 = !DILocation(line: 1697, column: 13, scope: !15677)
!15679 = !DILocation(line: 1698, column: 15, scope: !14894)
!15680 = !DILocation(line: 1699, column: 60, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1698, column: 15)
!15682 = !DILocation(line: 1699, column: 13, scope: !15681)
!15683 = !DILocation(line: 1700, column: 15, scope: !14894)
!15684 = !DILocation(line: 1701, column: 60, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1700, column: 15)
!15686 = !DILocation(line: 1701, column: 13, scope: !15685)
!15687 = !DILocation(line: 1702, column: 15, scope: !14894)
!15688 = !DILocation(line: 1703, column: 53, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1702, column: 15)
!15690 = !DILocation(line: 1703, column: 13, scope: !15689)
!15691 = !DILocation(line: 1704, column: 15, scope: !14894)
!15692 = !DILocation(line: 1705, column: 53, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1704, column: 15)
!15694 = !DILocation(line: 1705, column: 13, scope: !15693)
!15695 = !DILocation(line: 1706, column: 15, scope: !14894)
!15696 = !DILocation(line: 1707, column: 53, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1706, column: 15)
!15698 = !DILocation(line: 1707, column: 13, scope: !15697)
!15699 = !DILocation(line: 1708, column: 15, scope: !14894)
!15700 = !DILocation(line: 1709, column: 53, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1708, column: 15)
!15702 = !DILocation(line: 1709, column: 13, scope: !15701)
!15703 = !DILocation(line: 1710, column: 15, scope: !14894)
!15704 = !DILocation(line: 1711, column: 46, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1710, column: 15)
!15706 = !DILocation(line: 1711, column: 13, scope: !15705)
!15707 = !DILocation(line: 1712, column: 15, scope: !14894)
!15708 = !DILocation(line: 1713, column: 46, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1712, column: 15)
!15710 = !DILocation(line: 1713, column: 13, scope: !15709)
!15711 = !DILocation(line: 1714, column: 15, scope: !14894)
!15712 = !DILocation(line: 1715, column: 46, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1714, column: 15)
!15714 = !DILocation(line: 1715, column: 13, scope: !15713)
!15715 = !DILocation(line: 1716, column: 15, scope: !14894)
!15716 = !DILocation(line: 1717, column: 46, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1716, column: 15)
!15718 = !DILocation(line: 1717, column: 13, scope: !15717)
!15719 = !DILocation(line: 1720, column: 27, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1720, column: 15)
!15721 = !DILocation(line: 1720, column: 15, scope: !14894)
!15722 = !DILocation(line: 1721, column: 44, scope: !15720)
!15723 = !DILocation(line: 1721, column: 13, scope: !15720)
!15724 = !DILocation(line: 1722, column: 15, scope: !14894)
!15725 = !DILocation(line: 1723, column: 44, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1722, column: 15)
!15727 = !DILocation(line: 1723, column: 13, scope: !15726)
!15728 = !DILocation(line: 1724, column: 15, scope: !14894)
!15729 = !DILocation(line: 1725, column: 37, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1724, column: 15)
!15731 = !DILocation(line: 1725, column: 13, scope: !15730)
!15732 = !DILocation(line: 1726, column: 15, scope: !14894)
!15733 = !DILocation(line: 1727, column: 37, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1726, column: 15)
!15735 = !DILocation(line: 1727, column: 13, scope: !15734)
!15736 = !DILocation(line: 1728, column: 15, scope: !14894)
!15737 = !DILocation(line: 1729, column: 37, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1728, column: 15)
!15739 = !DILocation(line: 1729, column: 13, scope: !15738)
!15740 = !DILocation(line: 1730, column: 15, scope: !14894)
!15741 = !DILocation(line: 1731, column: 37, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1730, column: 15)
!15743 = !DILocation(line: 1731, column: 13, scope: !15742)
!15744 = !DILocation(line: 1732, column: 15, scope: !14894)
!15745 = !DILocation(line: 1733, column: 37, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1732, column: 15)
!15747 = !DILocation(line: 1733, column: 13, scope: !15746)
!15748 = !DILocation(line: 1734, column: 15, scope: !14894)
!15749 = !DILocation(line: 1735, column: 37, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1734, column: 15)
!15751 = !DILocation(line: 1735, column: 13, scope: !15750)
!15752 = !DILocation(line: 1736, column: 19, scope: !14894)
!15753 = !DILocation(line: 1736, column: 31, scope: !14894)
!15754 = !DILocation(line: 1736, column: 69, scope: !14894)
!15755 = !DILocation(line: 1736, column: 57, scope: !14894)
!15756 = !DILocation(line: 1736, column: 11, scope: !14894)
!15757 = !DILocation(line: 1741, column: 19, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1737, column: 13)
!15759 = !DILocation(line: 1742, column: 41, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15758, file: !2280, line: 1741, column: 19)
!15761 = !DILocation(line: 1742, column: 17, scope: !15760)
!15762 = !DILocation(line: 1745, column: 19, scope: !15758)
!15763 = !DILocation(line: 1746, column: 41, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15758, file: !2280, line: 1745, column: 19)
!15765 = !DILocation(line: 1746, column: 17, scope: !15764)
!15766 = !DILocation(line: 1751, column: 15, scope: !14894)
!15767 = !DILocation(line: 1752, column: 37, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1751, column: 15)
!15769 = !DILocation(line: 1752, column: 13, scope: !15768)
!15770 = !DILocation(line: 1753, column: 15, scope: !14894)
!15771 = !DILocation(line: 1754, column: 37, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1753, column: 15)
!15773 = !DILocation(line: 1754, column: 13, scope: !15772)
!15774 = !DILocation(line: 1755, column: 15, scope: !14894)
!15775 = !DILocation(line: 1756, column: 37, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1755, column: 15)
!15777 = !DILocation(line: 1756, column: 13, scope: !15776)
!15778 = !DILocation(line: 1757, column: 15, scope: !14894)
!15779 = !DILocation(line: 1758, column: 37, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1757, column: 15)
!15781 = !DILocation(line: 1758, column: 13, scope: !15780)
!15782 = !DILocation(line: 1759, column: 15, scope: !14894)
!15783 = !DILocation(line: 1760, column: 37, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1759, column: 15)
!15785 = !DILocation(line: 1760, column: 13, scope: !15784)
!15786 = !DILocation(line: 1761, column: 15, scope: !14894)
!15787 = !DILocation(line: 1762, column: 37, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1761, column: 15)
!15789 = !DILocation(line: 1762, column: 13, scope: !15788)
!15790 = !DILocation(line: 1763, column: 15, scope: !14894)
!15791 = !DILocation(line: 1764, column: 37, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1763, column: 15)
!15793 = !DILocation(line: 1764, column: 13, scope: !15792)
!15794 = !DILocation(line: 1765, column: 15, scope: !14894)
!15795 = !DILocation(line: 1766, column: 37, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1765, column: 15)
!15797 = !DILocation(line: 1766, column: 13, scope: !15796)
!15798 = !DILocation(line: 1767, column: 15, scope: !14894)
!15799 = !DILocation(line: 1768, column: 37, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1767, column: 15)
!15801 = !DILocation(line: 1768, column: 13, scope: !15800)
!15802 = !DILocation(line: 1771, column: 27, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1771, column: 15)
!15804 = !DILocation(line: 1771, column: 15, scope: !14894)
!15805 = !DILocation(line: 1772, column: 44, scope: !15803)
!15806 = !DILocation(line: 1772, column: 13, scope: !15803)
!15807 = !DILocation(line: 1773, column: 15, scope: !14894)
!15808 = !DILocation(line: 1774, column: 44, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1773, column: 15)
!15810 = !DILocation(line: 1774, column: 13, scope: !15809)
!15811 = !DILocation(line: 1775, column: 15, scope: !14894)
!15812 = !DILocation(line: 1776, column: 37, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1775, column: 15)
!15814 = !DILocation(line: 1776, column: 13, scope: !15813)
!15815 = !DILocation(line: 1777, column: 15, scope: !14894)
!15816 = !DILocation(line: 1778, column: 37, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1777, column: 15)
!15818 = !DILocation(line: 1778, column: 13, scope: !15817)
!15819 = !DILocation(line: 1781, column: 27, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1781, column: 15)
!15821 = !DILocation(line: 1781, column: 15, scope: !14894)
!15822 = !DILocation(line: 1782, column: 43, scope: !15820)
!15823 = !DILocation(line: 1782, column: 13, scope: !15820)
!15824 = !DILocation(line: 1783, column: 15, scope: !14894)
!15825 = !DILocation(line: 1784, column: 43, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1783, column: 15)
!15827 = !DILocation(line: 1784, column: 13, scope: !15826)
!15828 = !DILocation(line: 1787, column: 34, scope: !14893)
!15829 = !DILocation(line: 1787, column: 25, scope: !14893)
!15830 = !DILocation(line: 0, scope: !14893)
!15831 = !DILocation(line: 0, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !2280, line: 1789, column: 19)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !2280, line: 1788, column: 42)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2280, line: 1788, column: 13)
!15835 = distinct !DILexicalBlock(scope: !14893, file: !2280, line: 1788, column: 13)
!15836 = !DILocation(line: 1788, column: 18, scope: !15835)
!15837 = !DILocation(line: 0, scope: !15835)
!15838 = !DILocation(line: 1788, column: 29, scope: !15834)
!15839 = !DILocation(line: 1788, column: 13, scope: !15835)
!15840 = !DILocation(line: 1790, column: 23, scope: !15832)
!15841 = !DILocation(line: 1790, column: 21, scope: !15832)
!15842 = !DILocation(line: 1790, column: 17, scope: !15832)
!15843 = !DILocation(line: 1788, column: 38, scope: !15834)
!15844 = !DILocation(line: 1788, column: 13, scope: !15834)
!15845 = distinct !{!15845, !15839, !15846}
!15846 = !DILocation(line: 1791, column: 13, scope: !15835)
!15847 = !DILocation(line: 1963, column: 1, scope: !14884)
!15848 = !DILocation(line: 1795, column: 27, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1795, column: 15)
!15850 = !DILocation(line: 1795, column: 15, scope: !14894)
!15851 = !DILocation(line: 1796, column: 43, scope: !15849)
!15852 = !DILocation(line: 1796, column: 13, scope: !15849)
!15853 = !DILocation(line: 1797, column: 15, scope: !14894)
!15854 = !DILocation(line: 1798, column: 43, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1797, column: 15)
!15856 = !DILocation(line: 1798, column: 13, scope: !15855)
!15857 = !DILocation(line: 1799, column: 15, scope: !14894)
!15858 = !DILocation(line: 1800, column: 36, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1799, column: 15)
!15860 = !DILocation(line: 1800, column: 13, scope: !15859)
!15861 = !DILocation(line: 1806, column: 38, scope: !14898)
!15862 = !DILocation(line: 1806, column: 29, scope: !14898)
!15863 = !DILocation(line: 0, scope: !14898)
!15864 = !DILocation(line: 0, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !2280, line: 1808, column: 23)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !2280, line: 1807, column: 46)
!15867 = distinct !DILexicalBlock(scope: !15868, file: !2280, line: 1807, column: 17)
!15868 = distinct !DILexicalBlock(scope: !14898, file: !2280, line: 1807, column: 17)
!15869 = !DILocation(line: 1807, column: 22, scope: !15868)
!15870 = !DILocation(line: 0, scope: !15868)
!15871 = !DILocation(line: 1807, column: 33, scope: !15867)
!15872 = !DILocation(line: 1807, column: 17, scope: !15868)
!15873 = !DILocation(line: 1809, column: 27, scope: !15865)
!15874 = !DILocation(line: 1809, column: 25, scope: !15865)
!15875 = !DILocation(line: 1809, column: 21, scope: !15865)
!15876 = !DILocation(line: 1807, column: 42, scope: !15867)
!15877 = !DILocation(line: 1807, column: 17, scope: !15867)
!15878 = distinct !{!15878, !15872, !15879}
!15879 = !DILocation(line: 1810, column: 17, scope: !15868)
!15880 = !DILocation(line: 1816, column: 27, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1816, column: 15)
!15882 = !DILocation(line: 1816, column: 15, scope: !14894)
!15883 = !DILocation(line: 1817, column: 48, scope: !15881)
!15884 = !DILocation(line: 1817, column: 13, scope: !15881)
!15885 = !DILocation(line: 1818, column: 15, scope: !14894)
!15886 = !DILocation(line: 1819, column: 48, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1818, column: 15)
!15888 = !DILocation(line: 1819, column: 13, scope: !15887)
!15889 = !DILocation(line: 1820, column: 15, scope: !14894)
!15890 = !DILocation(line: 1821, column: 41, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1820, column: 15)
!15892 = !DILocation(line: 1821, column: 13, scope: !15891)
!15893 = !DILocation(line: 1822, column: 15, scope: !14894)
!15894 = !DILocation(line: 1823, column: 41, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1822, column: 15)
!15896 = !DILocation(line: 1823, column: 13, scope: !15895)
!15897 = !DILocation(line: 1824, column: 15, scope: !14894)
!15898 = !DILocation(line: 1825, column: 41, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1824, column: 15)
!15900 = !DILocation(line: 1825, column: 13, scope: !15899)
!15901 = !DILocation(line: 1828, column: 27, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1828, column: 15)
!15903 = !DILocation(line: 1828, column: 15, scope: !14894)
!15904 = !DILocation(line: 1829, column: 45, scope: !15902)
!15905 = !DILocation(line: 1829, column: 13, scope: !15902)
!15906 = !DILocation(line: 1830, column: 15, scope: !14894)
!15907 = !DILocation(line: 1831, column: 45, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1830, column: 15)
!15909 = !DILocation(line: 1831, column: 13, scope: !15908)
!15910 = !DILocation(line: 1832, column: 15, scope: !14894)
!15911 = !DILocation(line: 1833, column: 38, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1832, column: 15)
!15913 = !DILocation(line: 1833, column: 13, scope: !15912)
!15914 = !DILocation(line: 1834, column: 15, scope: !14894)
!15915 = !DILocation(line: 1835, column: 38, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1834, column: 15)
!15917 = !DILocation(line: 1835, column: 13, scope: !15916)
!15918 = !DILocation(line: 1836, column: 15, scope: !14894)
!15919 = !DILocation(line: 1837, column: 38, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1836, column: 15)
!15921 = !DILocation(line: 1837, column: 13, scope: !15920)
!15922 = !DILocation(line: 1838, column: 15, scope: !14894)
!15923 = !DILocation(line: 1839, column: 38, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1838, column: 15)
!15925 = !DILocation(line: 1839, column: 13, scope: !15924)
!15926 = !DILocation(line: 1840, column: 15, scope: !14894)
!15927 = !DILocation(line: 1841, column: 38, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1840, column: 15)
!15929 = !DILocation(line: 1841, column: 13, scope: !15928)
!15930 = !DILocation(line: 1842, column: 15, scope: !14894)
!15931 = !DILocation(line: 1843, column: 38, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1842, column: 15)
!15933 = !DILocation(line: 1843, column: 13, scope: !15932)
!15934 = !DILocation(line: 1844, column: 15, scope: !14894)
!15935 = !DILocation(line: 1845, column: 38, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1844, column: 15)
!15937 = !DILocation(line: 1845, column: 13, scope: !15936)
!15938 = !DILocation(line: 1848, column: 27, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1848, column: 15)
!15940 = !DILocation(line: 1848, column: 15, scope: !14894)
!15941 = !DILocation(line: 1849, column: 45, scope: !15939)
!15942 = !DILocation(line: 1849, column: 13, scope: !15939)
!15943 = !DILocation(line: 1850, column: 15, scope: !14894)
!15944 = !DILocation(line: 1851, column: 45, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1850, column: 15)
!15946 = !DILocation(line: 1851, column: 13, scope: !15945)
!15947 = !DILocation(line: 1852, column: 15, scope: !14894)
!15948 = !DILocation(line: 1853, column: 38, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1852, column: 15)
!15950 = !DILocation(line: 1853, column: 13, scope: !15949)
!15951 = !DILocation(line: 1854, column: 15, scope: !14894)
!15952 = !DILocation(line: 1855, column: 38, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1854, column: 15)
!15954 = !DILocation(line: 1855, column: 13, scope: !15953)
!15955 = !DILocation(line: 1856, column: 15, scope: !14894)
!15956 = !DILocation(line: 1857, column: 38, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1856, column: 15)
!15958 = !DILocation(line: 1857, column: 13, scope: !15957)
!15959 = !DILocation(line: 1858, column: 15, scope: !14894)
!15960 = !DILocation(line: 1859, column: 38, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1858, column: 15)
!15962 = !DILocation(line: 1859, column: 13, scope: !15961)
!15963 = !DILocation(line: 1860, column: 15, scope: !14894)
!15964 = !DILocation(line: 1861, column: 38, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1860, column: 15)
!15966 = !DILocation(line: 1861, column: 13, scope: !15965)
!15967 = !DILocation(line: 1862, column: 15, scope: !14894)
!15968 = !DILocation(line: 1863, column: 38, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1862, column: 15)
!15970 = !DILocation(line: 1863, column: 13, scope: !15969)
!15971 = !DILocation(line: 1864, column: 15, scope: !14894)
!15972 = !DILocation(line: 1865, column: 38, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1864, column: 15)
!15974 = !DILocation(line: 1865, column: 13, scope: !15973)
!15975 = !DILocation(line: 1866, column: 15, scope: !14894)
!15976 = !DILocation(line: 1867, column: 38, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1866, column: 15)
!15978 = !DILocation(line: 1867, column: 13, scope: !15977)
!15979 = !DILocation(line: 1870, column: 54, scope: !14902)
!15980 = !DILocation(line: 1870, column: 72, scope: !14902)
!15981 = !DILocation(line: 1870, column: 25, scope: !14902)
!15982 = !DILocation(line: 0, scope: !14902)
!15983 = !DILocation(line: 0, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !2280, line: 1872, column: 19)
!15985 = distinct !DILexicalBlock(scope: !15986, file: !2280, line: 1871, column: 42)
!15986 = distinct !DILexicalBlock(scope: !15987, file: !2280, line: 1871, column: 13)
!15987 = distinct !DILexicalBlock(scope: !14902, file: !2280, line: 1871, column: 13)
!15988 = !DILocation(line: 1871, column: 18, scope: !15987)
!15989 = !DILocation(line: 0, scope: !15987)
!15990 = !DILocation(line: 1871, column: 29, scope: !15986)
!15991 = !DILocation(line: 1871, column: 13, scope: !15987)
!15992 = !DILocation(line: 1873, column: 23, scope: !15984)
!15993 = !DILocation(line: 1873, column: 21, scope: !15984)
!15994 = !DILocation(line: 1873, column: 17, scope: !15984)
!15995 = !DILocation(line: 1871, column: 38, scope: !15986)
!15996 = !DILocation(line: 1871, column: 13, scope: !15986)
!15997 = distinct !{!15997, !15991, !15998}
!15998 = !DILocation(line: 1874, column: 13, scope: !15987)
!15999 = !DILocation(line: 1878, column: 27, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1878, column: 15)
!16001 = !DILocation(line: 1878, column: 15, scope: !14894)
!16002 = !DILocation(line: 1879, column: 49, scope: !16000)
!16003 = !DILocation(line: 1879, column: 13, scope: !16000)
!16004 = !DILocation(line: 1880, column: 15, scope: !14894)
!16005 = !DILocation(line: 1881, column: 49, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1880, column: 15)
!16007 = !DILocation(line: 1881, column: 13, scope: !16006)
!16008 = !DILocation(line: 1882, column: 15, scope: !14894)
!16009 = !DILocation(line: 1883, column: 42, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1882, column: 15)
!16011 = !DILocation(line: 1883, column: 13, scope: !16010)
!16012 = !DILocation(line: 1884, column: 15, scope: !14894)
!16013 = !DILocation(line: 1885, column: 42, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1884, column: 15)
!16015 = !DILocation(line: 1885, column: 13, scope: !16014)
!16016 = !DILocation(line: 1888, column: 27, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1888, column: 15)
!16018 = !DILocation(line: 1888, column: 15, scope: !14894)
!16019 = !DILocation(line: 1889, column: 51, scope: !16017)
!16020 = !DILocation(line: 1889, column: 13, scope: !16017)
!16021 = !DILocation(line: 1890, column: 15, scope: !14894)
!16022 = !DILocation(line: 1891, column: 51, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1890, column: 15)
!16024 = !DILocation(line: 1891, column: 13, scope: !16023)
!16025 = !DILocation(line: 1892, column: 15, scope: !14894)
!16026 = !DILocation(line: 1893, column: 44, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1892, column: 15)
!16028 = !DILocation(line: 1893, column: 13, scope: !16027)
!16029 = !DILocation(line: 1896, column: 27, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1896, column: 15)
!16031 = !DILocation(line: 1896, column: 15, scope: !14894)
!16032 = !DILocation(line: 1897, column: 50, scope: !16030)
!16033 = !DILocation(line: 1897, column: 13, scope: !16030)
!16034 = !DILocation(line: 1898, column: 15, scope: !14894)
!16035 = !DILocation(line: 1899, column: 50, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1898, column: 15)
!16037 = !DILocation(line: 1899, column: 13, scope: !16036)
!16038 = !DILocation(line: 1900, column: 15, scope: !14894)
!16039 = !DILocation(line: 1901, column: 43, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1900, column: 15)
!16041 = !DILocation(line: 1901, column: 13, scope: !16040)
!16042 = !DILocation(line: 1902, column: 15, scope: !14894)
!16043 = !DILocation(line: 1903, column: 43, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1902, column: 15)
!16045 = !DILocation(line: 1903, column: 13, scope: !16044)
!16046 = !DILocation(line: 1906, column: 53, scope: !14905)
!16047 = !DILocation(line: 1906, column: 34, scope: !14905)
!16048 = !DILocation(line: 1906, column: 25, scope: !14905)
!16049 = !DILocation(line: 0, scope: !14905)
!16050 = !DILocation(line: 0, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16052, file: !2280, line: 1908, column: 19)
!16052 = distinct !DILexicalBlock(scope: !16053, file: !2280, line: 1907, column: 42)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2280, line: 1907, column: 13)
!16054 = distinct !DILexicalBlock(scope: !14905, file: !2280, line: 1907, column: 13)
!16055 = !DILocation(line: 1907, column: 18, scope: !16054)
!16056 = !DILocation(line: 0, scope: !16054)
!16057 = !DILocation(line: 1907, column: 29, scope: !16053)
!16058 = !DILocation(line: 1907, column: 13, scope: !16054)
!16059 = !DILocation(line: 1909, column: 23, scope: !16051)
!16060 = !DILocation(line: 1909, column: 21, scope: !16051)
!16061 = !DILocation(line: 1909, column: 17, scope: !16051)
!16062 = !DILocation(line: 1907, column: 38, scope: !16053)
!16063 = !DILocation(line: 1907, column: 13, scope: !16053)
!16064 = distinct !{!16064, !16058, !16065}
!16065 = !DILocation(line: 1910, column: 13, scope: !16054)
!16066 = !DILocation(line: 1914, column: 27, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1914, column: 15)
!16068 = !DILocation(line: 1914, column: 15, scope: !14894)
!16069 = !DILocation(line: 1915, column: 52, scope: !16067)
!16070 = !DILocation(line: 1915, column: 13, scope: !16067)
!16071 = !DILocation(line: 1916, column: 15, scope: !14894)
!16072 = !DILocation(line: 1917, column: 52, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1916, column: 15)
!16074 = !DILocation(line: 1917, column: 13, scope: !16073)
!16075 = !DILocation(line: 1920, column: 27, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1920, column: 15)
!16077 = !DILocation(line: 1920, column: 15, scope: !14894)
!16078 = !DILocation(line: 1921, column: 53, scope: !16076)
!16079 = !DILocation(line: 1921, column: 13, scope: !16076)
!16080 = !DILocation(line: 1922, column: 15, scope: !14894)
!16081 = !DILocation(line: 1923, column: 53, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !14894, file: !2280, line: 1922, column: 15)
!16083 = !DILocation(line: 1923, column: 13, scope: !16082)
!16084 = !DILocation(line: 1930, column: 23, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1930, column: 11)
!16086 = !DILocation(line: 1930, column: 11, scope: !14895)
!16087 = !DILocation(line: 1931, column: 48, scope: !16085)
!16088 = !DILocation(line: 1931, column: 9, scope: !16085)
!16089 = !DILocation(line: 1932, column: 11, scope: !14895)
!16090 = !DILocation(line: 1933, column: 48, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1932, column: 11)
!16092 = !DILocation(line: 1933, column: 9, scope: !16091)
!16093 = !DILocation(line: 1934, column: 11, scope: !14895)
!16094 = !DILocation(line: 1935, column: 41, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1934, column: 11)
!16096 = !DILocation(line: 1935, column: 9, scope: !16095)
!16097 = !DILocation(line: 1936, column: 15, scope: !14895)
!16098 = !DILocation(line: 1936, column: 7, scope: !14895)
!16099 = !DILocation(line: 1939, column: 15, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1937, column: 9)
!16101 = !DILocation(line: 1940, column: 50, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16100, file: !2280, line: 1939, column: 15)
!16103 = !DILocation(line: 1940, column: 13, scope: !16102)
!16104 = !DILocation(line: 1943, column: 15, scope: !16100)
!16105 = !DILocation(line: 1944, column: 50, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16100, file: !2280, line: 1943, column: 15)
!16107 = !DILocation(line: 1944, column: 13, scope: !16106)
!16108 = !DILocation(line: 1953, column: 11, scope: !14895)
!16109 = !DILocation(line: 1954, column: 31, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1953, column: 11)
!16111 = !DILocation(line: 1954, column: 9, scope: !16110)
!16112 = !DILocation(line: 1955, column: 11, scope: !14895)
!16113 = !DILocation(line: 1956, column: 31, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1955, column: 11)
!16115 = !DILocation(line: 1956, column: 9, scope: !16114)
!16116 = !DILocation(line: 1957, column: 11, scope: !14895)
!16117 = !DILocation(line: 1958, column: 31, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !14895, file: !2280, line: 1957, column: 11)
!16119 = !DILocation(line: 1958, column: 9, scope: !16118)
!16120 = distinct !DISubprogram(name: "gt_pch_nx_lang_decl", scope: !2280, file: !2280, line: 1121, type: !1478, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16121)
!16121 = !{!16122, !16123}
!16122 = !DILocalVariable(name: "x_p", arg: 1, scope: !16120, file: !2280, line: 1121, type: !624)
!16123 = !DILocalVariable(name: "x", scope: !16120, file: !2280, line: 1123, type: !13206)
!16124 = !DILocation(line: 0, scope: !16120)
!16125 = !DILocation(line: 1124, column: 7, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16120, file: !2280, line: 1124, column: 7)
!16127 = !DILocation(line: 1127, column: 1, scope: !16120)
!16128 = distinct !DISubprogram(name: "gt_pch_nx_lang_type", scope: !2280, file: !2280, line: 1130, type: !1478, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16129)
!16129 = !{!16130, !16131}
!16130 = !DILocalVariable(name: "x_p", arg: 1, scope: !16128, file: !2280, line: 1130, type: !624)
!16131 = !DILocalVariable(name: "x", scope: !16128, file: !2280, line: 1132, type: !13216)
!16132 = !DILocation(line: 0, scope: !16128)
!16133 = !DILocation(line: 1133, column: 7, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16128, file: !2280, line: 1133, column: 7)
!16135 = !DILocation(line: 1133, column: 7, scope: !16128)
!16136 = !DILocation(line: 1135, column: 7, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !2280, line: 1135, column: 7)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !2280, line: 1135, column: 7)
!16139 = distinct !DILexicalBlock(scope: !16134, file: !2280, line: 1134, column: 5)
!16140 = !DILocation(line: 1135, column: 7, scope: !16138)
!16141 = !DILocation(line: 1136, column: 33, scope: !16139)
!16142 = !DILocation(line: 1136, column: 7, scope: !16139)
!16143 = !DILocation(line: 1137, column: 7, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16145, file: !2280, line: 1137, column: 7)
!16145 = distinct !DILexicalBlock(scope: !16139, file: !2280, line: 1137, column: 7)
!16146 = !DILocation(line: 1137, column: 7, scope: !16145)
!16147 = !DILocation(line: 1138, column: 7, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2280, line: 1138, column: 7)
!16149 = distinct !DILexicalBlock(scope: !16139, file: !2280, line: 1138, column: 7)
!16150 = !DILocation(line: 1138, column: 7, scope: !16149)
!16151 = !DILocation(line: 1139, column: 7, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16153, file: !2280, line: 1139, column: 7)
!16153 = distinct !DILexicalBlock(scope: !16139, file: !2280, line: 1139, column: 7)
!16154 = !DILocation(line: 1139, column: 7, scope: !16153)
!16155 = !DILocation(line: 1141, column: 1, scope: !16128)
!16156 = distinct !DISubprogram(name: "gt_pch_p_9lang_decl", scope: !2280, file: !2280, line: 1966, type: !13289, scopeLine: 1970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16157)
!16157 = !{!16158, !16159, !16160, !16161, !16162}
!16158 = !DILocalVariable(name: "this_obj", arg: 1, scope: !16156, file: !2280, line: 1966, type: !624)
!16159 = !DILocalVariable(name: "x_p", arg: 2, scope: !16156, file: !2280, line: 1967, type: !624)
!16160 = !DILocalVariable(name: "op", arg: 3, scope: !16156, file: !2280, line: 1968, type: !13291)
!16161 = !DILocalVariable(name: "cookie", arg: 4, scope: !16156, file: !2280, line: 1969, type: !624)
!16162 = !DILocalVariable(name: "x", scope: !16156, file: !2280, line: 1971, type: !13206)
!16163 = !DILocation(line: 0, scope: !16156)
!16164 = !DILocation(line: 1972, column: 1, scope: !16156)
!16165 = distinct !DISubprogram(name: "gt_pch_p_9lang_type", scope: !2280, file: !2280, line: 1975, type: !13289, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16166)
!16166 = !{!16167, !16168, !16169, !16170, !16171}
!16167 = !DILocalVariable(name: "this_obj", arg: 1, scope: !16165, file: !2280, line: 1975, type: !624)
!16168 = !DILocalVariable(name: "x_p", arg: 2, scope: !16165, file: !2280, line: 1976, type: !624)
!16169 = !DILocalVariable(name: "op", arg: 3, scope: !16165, file: !2280, line: 1977, type: !13291)
!16170 = !DILocalVariable(name: "cookie", arg: 4, scope: !16165, file: !2280, line: 1978, type: !624)
!16171 = !DILocalVariable(name: "x", scope: !16165, file: !2280, line: 1980, type: !13216)
!16172 = !DILocation(line: 0, scope: !16165)
!16173 = !DILocation(line: 1981, column: 19, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16165, file: !2280, line: 1981, column: 7)
!16175 = !DILocation(line: 1981, column: 7, scope: !16165)
!16176 = !DILocation(line: 1982, column: 5, scope: !16174)
!16177 = !DILocation(line: 1983, column: 7, scope: !16165)
!16178 = !DILocation(line: 1984, column: 16, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16165, file: !2280, line: 1983, column: 7)
!16180 = !DILocation(line: 1984, column: 5, scope: !16179)
!16181 = !DILocation(line: 1985, column: 7, scope: !16165)
!16182 = !DILocation(line: 1986, column: 16, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16165, file: !2280, line: 1985, column: 7)
!16184 = !DILocation(line: 1986, column: 5, scope: !16183)
!16185 = !DILocation(line: 1987, column: 7, scope: !16165)
!16186 = !DILocation(line: 1988, column: 16, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16165, file: !2280, line: 1987, column: 7)
!16188 = !DILocation(line: 1988, column: 5, scope: !16187)
!16189 = !DILocation(line: 1989, column: 1, scope: !16165)
!16190 = distinct !DISubprogram(name: "update_spot_bindings", scope: !3, file: !3, line: 801, type: !16191, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16193)
!16191 = !DISubroutineType(types: !16192)
!16192 = !{!619, !2077, !2137}
!16193 = !{!16194, !16195}
!16194 = !DILocalVariable(name: "scope", arg: 1, scope: !16190, file: !3, line: 801, type: !2077)
!16195 = !DILocalVariable(name: "p", arg: 2, scope: !16190, file: !3, line: 801, type: !2137)
!16196 = !DILocation(line: 0, scope: !16190)
!16197 = !DILocation(line: 803, column: 10, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16190, file: !3, line: 803, column: 7)
!16199 = !DILocation(line: 803, column: 16, scope: !16198)
!16200 = !DILocation(line: 803, column: 7, scope: !16190)
!16201 = !DILocation(line: 813, column: 21, scope: !16190)
!16202 = !DILocation(line: 813, column: 12, scope: !16190)
!16203 = !DILocation(line: 814, column: 29, scope: !16190)
!16204 = !DILocation(line: 814, column: 36, scope: !16190)
!16205 = !DILocation(line: 814, column: 6, scope: !16190)
!16206 = !DILocation(line: 814, column: 24, scope: !16190)
!16207 = !DILocation(line: 816, column: 3, scope: !16190)
!16208 = !DILocation(line: 817, column: 1, scope: !16190)
!16209 = distinct !DISubprogram(name: "VEC_tree_gc_safe_push", scope: !135, file: !135, line: 183, type: !16210, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{!996, !7626, !672}
!16212 = !{!16213, !16214}
!16213 = !DILocalVariable(name: "vec_", arg: 1, scope: !16209, file: !135, line: 183, type: !7626)
!16214 = !DILocalVariable(name: "obj_", arg: 2, scope: !16209, file: !135, line: 183, type: !672)
!16215 = !DILocation(line: 0, scope: !16209)
!16216 = !DILocation(line: 183, column: 1, scope: !16209)
!16217 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !135, file: !135, line: 183, type: !16218, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!620, !7626, !620}
!16220 = !{!16221, !16222, !16223}
!16221 = !DILocalVariable(name: "vec_", arg: 1, scope: !16217, file: !135, line: 183, type: !7626)
!16222 = !DILocalVariable(name: "alloc_", arg: 2, scope: !16217, file: !135, line: 183, type: !620)
!16223 = !DILocalVariable(name: "extend", scope: !16217, file: !135, line: 183, type: !620)
!16224 = !DILocation(line: 0, scope: !16217)
!16225 = !DILocation(line: 183, column: 1, scope: !16217)
!16226 = !DILocation(line: 183, column: 1, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16217, file: !135, line: 183, column: 1)
!16228 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !135, file: !135, line: 182, type: !16229, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16231)
!16229 = !DISubroutineType(types: !16230)
!16230 = !{!620, !7616, !620}
!16231 = !{!16232, !16233}
!16232 = !DILocalVariable(name: "vec_", arg: 1, scope: !16228, file: !135, line: 182, type: !7616)
!16233 = !DILocalVariable(name: "alloc_", arg: 2, scope: !16228, file: !135, line: 182, type: !620)
!16234 = !DILocation(line: 0, scope: !16228)
!16235 = !DILocation(line: 182, column: 1, scope: !16228)
!16236 = distinct !DISubprogram(name: "diagnose_mismatched_decls", scope: !3, file: !3, line: 1640, type: !16237, scopeLine: 1642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16239)
!16237 = !DISubroutineType(types: !16238)
!16238 = !{!619, !672, !672, !996, !996}
!16239 = !{!16240, !16241, !16242, !16243, !16244, !16245, !16246, !16247, !16248, !16249, !16254, !16259, !16260, !16263, !16264, !16270}
!16240 = !DILocalVariable(name: "newdecl", arg: 1, scope: !16236, file: !3, line: 1640, type: !672)
!16241 = !DILocalVariable(name: "olddecl", arg: 2, scope: !16236, file: !3, line: 1640, type: !672)
!16242 = !DILocalVariable(name: "newtypep", arg: 3, scope: !16236, file: !3, line: 1641, type: !996)
!16243 = !DILocalVariable(name: "oldtypep", arg: 4, scope: !16236, file: !3, line: 1641, type: !996)
!16244 = !DILocalVariable(name: "newtype", scope: !16236, file: !3, line: 1643, type: !672)
!16245 = !DILocalVariable(name: "oldtype", scope: !16236, file: !3, line: 1643, type: !672)
!16246 = !DILocalVariable(name: "pedwarned", scope: !16236, file: !3, line: 1644, type: !619)
!16247 = !DILocalVariable(name: "warned", scope: !16236, file: !3, line: 1645, type: !619)
!16248 = !DILocalVariable(name: "retval", scope: !16236, file: !3, line: 1646, type: !619)
!16249 = !DILocalVariable(name: "trytype", scope: !16250, file: !3, line: 1696, type: !672)
!16250 = distinct !DILexicalBlock(scope: !16251, file: !3, line: 1693, column: 2)
!16251 = distinct !DILexicalBlock(scope: !16252, file: !3, line: 1691, column: 11)
!16252 = distinct !DILexicalBlock(scope: !16253, file: !3, line: 1690, column: 5)
!16253 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1689, column: 7)
!16254 = !DILocalVariable(name: "new_quals", scope: !16255, file: !3, line: 1749, type: !620)
!16255 = distinct !DILexicalBlock(scope: !16256, file: !3, line: 1748, column: 2)
!16256 = distinct !DILexicalBlock(scope: !16257, file: !3, line: 1737, column: 16)
!16257 = distinct !DILexicalBlock(scope: !16258, file: !3, line: 1724, column: 16)
!16258 = distinct !DILexicalBlock(scope: !16251, file: !3, line: 1710, column: 16)
!16259 = !DILocalVariable(name: "old_quals", scope: !16255, file: !3, line: 1750, type: !620)
!16260 = !DILocalVariable(name: "new_addr", scope: !16261, file: !3, line: 1754, type: !2221)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !3, line: 1753, column: 6)
!16262 = distinct !DILexicalBlock(scope: !16255, file: !3, line: 1752, column: 8)
!16263 = !DILocalVariable(name: "old_addr", scope: !16261, file: !3, line: 1755, type: !2221)
!16264 = !DILocalVariable(name: "newa", scope: !16265, file: !3, line: 1911, type: !619)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 1910, column: 2)
!16266 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1908, column: 11)
!16267 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 1811, column: 5)
!16268 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 1810, column: 12)
!16269 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1789, column: 7)
!16270 = !DILocalVariable(name: "olda", scope: !16265, file: !3, line: 1913, type: !619)
!16271 = !DILocation(line: 0, scope: !16236)
!16272 = !DILocation(line: 1653, column: 18, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1653, column: 7)
!16274 = !DILocation(line: 1653, column: 15, scope: !16273)
!16275 = !DILocation(line: 1653, column: 45, scope: !16273)
!16276 = !DILocation(line: 1653, column: 34, scope: !16273)
!16277 = !DILocation(line: 1655, column: 25, scope: !16236)
!16278 = !DILocation(line: 1655, column: 13, scope: !16236)
!16279 = !DILocation(line: 1656, column: 25, scope: !16236)
!16280 = !DILocation(line: 1656, column: 13, scope: !16236)
!16281 = !DILocation(line: 1657, column: 18, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1657, column: 7)
!16283 = !DILocation(line: 1657, column: 15, scope: !16282)
!16284 = !DILocation(line: 1657, column: 45, scope: !16282)
!16285 = !DILocation(line: 1657, column: 34, scope: !16282)
!16286 = !DILocation(line: 1662, column: 7, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1662, column: 7)
!16288 = !DILocation(line: 1662, column: 30, scope: !16287)
!16289 = !DILocation(line: 1662, column: 27, scope: !16287)
!16290 = !DILocation(line: 1662, column: 7, scope: !16236)
!16291 = !DILocation(line: 1664, column: 33, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16293, file: !3, line: 1664, column: 11)
!16293 = distinct !DILexicalBlock(scope: !16287, file: !3, line: 1663, column: 5)
!16294 = !DILocation(line: 1665, column: 6, scope: !16292)
!16295 = !DILocation(line: 1665, column: 9, scope: !16292)
!16296 = !DILocation(line: 1666, column: 6, scope: !16292)
!16297 = !DILocation(line: 1666, column: 10, scope: !16292)
!16298 = !DILocation(line: 1664, column: 11, scope: !16293)
!16299 = !DILocation(line: 1668, column: 4, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 1667, column: 2)
!16301 = !DILocation(line: 1669, column: 4, scope: !16300)
!16302 = !DILocation(line: 1670, column: 2, scope: !16300)
!16303 = !DILocation(line: 1671, column: 16, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 1671, column: 16)
!16305 = !DILocation(line: 1671, column: 16, scope: !16292)
!16306 = !DILocation(line: 1672, column: 2, scope: !16304)
!16307 = !DILocation(line: 1675, column: 2, scope: !16304)
!16308 = !DILocation(line: 1682, column: 27, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 1682, column: 7)
!16310 = !DILocation(line: 1682, column: 7, scope: !16236)
!16311 = !DILocation(line: 1684, column: 7, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16309, file: !3, line: 1683, column: 5)
!16313 = !DILocation(line: 1685, column: 7, scope: !16312)
!16314 = !DILocation(line: 1686, column: 7, scope: !16312)
!16315 = !DILocation(line: 1689, column: 8, scope: !16253)
!16316 = !DILocation(line: 1689, column: 7, scope: !16236)
!16317 = !DILocation(line: 1691, column: 11, scope: !16251)
!16318 = !DILocation(line: 1691, column: 31, scope: !16251)
!16319 = !DILocation(line: 1692, column: 4, scope: !16251)
!16320 = !DILocation(line: 1692, column: 7, scope: !16251)
!16321 = !DILocation(line: 1692, column: 31, scope: !16251)
!16322 = !DILocation(line: 1692, column: 35, scope: !16251)
!16323 = !DILocation(line: 1691, column: 11, scope: !16252)
!16324 = !DILocation(line: 1696, column: 19, scope: !16250)
!16325 = !DILocation(line: 0, scope: !16250)
!16326 = !DILocation(line: 1698, column: 8, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16250, file: !3, line: 1698, column: 8)
!16328 = !DILocation(line: 1698, column: 16, scope: !16327)
!16329 = !DILocation(line: 1698, column: 19, scope: !16327)
!16330 = !DILocation(line: 1698, column: 8, scope: !16250)
!16331 = !DILocation(line: 1699, column: 16, scope: !16327)
!16332 = !DILocation(line: 1709, column: 2, scope: !16251)
!16333 = !DILocation(line: 1705, column: 8, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 1701, column: 6)
!16335 = !DILocation(line: 1707, column: 8, scope: !16334)
!16336 = !DILocation(line: 1711, column: 9, scope: !16258)
!16337 = !DILocation(line: 1711, column: 12, scope: !16258)
!16338 = !DILocation(line: 1710, column: 16, scope: !16251)
!16339 = !DILocation(line: 1718, column: 33, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16258, file: !3, line: 1712, column: 2)
!16341 = !DILocation(line: 1719, column: 4, scope: !16340)
!16342 = !DILocation(line: 1724, column: 16, scope: !16257)
!16343 = !DILocation(line: 1724, column: 36, scope: !16257)
!16344 = !DILocation(line: 1724, column: 53, scope: !16257)
!16345 = !DILocation(line: 1724, column: 56, scope: !16257)
!16346 = !DILocation(line: 1725, column: 9, scope: !16257)
!16347 = !DILocation(line: 1725, column: 12, scope: !16257)
!16348 = !DILocation(line: 1725, column: 55, scope: !16257)
!16349 = !DILocation(line: 1725, column: 52, scope: !16257)
!16350 = !DILocation(line: 1726, column: 9, scope: !16257)
!16351 = !DILocation(line: 1726, column: 12, scope: !16257)
!16352 = !DILocation(line: 1726, column: 55, scope: !16257)
!16353 = !DILocation(line: 1726, column: 52, scope: !16257)
!16354 = !DILocation(line: 1727, column: 9, scope: !16257)
!16355 = !DILocation(line: 1727, column: 12, scope: !16257)
!16356 = !DILocation(line: 1727, column: 46, scope: !16257)
!16357 = !DILocation(line: 1727, column: 50, scope: !16257)
!16358 = !DILocation(line: 1724, column: 16, scope: !16258)
!16359 = !DILocation(line: 1729, column: 25, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16257, file: !3, line: 1728, column: 2)
!16361 = !DILocation(line: 1729, column: 16, scope: !16360)
!16362 = !DILocation(line: 1732, column: 36, scope: !16360)
!16363 = !DILocation(line: 1732, column: 24, scope: !16360)
!16364 = !DILocation(line: 1733, column: 38, scope: !16360)
!16365 = !DILocation(line: 1734, column: 2, scope: !16360)
!16366 = !DILocation(line: 1738, column: 9, scope: !16256)
!16367 = !DILocation(line: 1738, column: 12, scope: !16256)
!16368 = !DILocation(line: 1738, column: 55, scope: !16256)
!16369 = !DILocation(line: 1738, column: 52, scope: !16256)
!16370 = !DILocation(line: 1739, column: 9, scope: !16256)
!16371 = !DILocation(line: 1739, column: 12, scope: !16256)
!16372 = !DILocation(line: 1739, column: 55, scope: !16256)
!16373 = !DILocation(line: 1739, column: 52, scope: !16256)
!16374 = !DILocation(line: 1740, column: 9, scope: !16256)
!16375 = !DILocation(line: 1740, column: 12, scope: !16256)
!16376 = !DILocation(line: 1740, column: 38, scope: !16256)
!16377 = !DILocation(line: 1740, column: 42, scope: !16256)
!16378 = !DILocation(line: 1737, column: 16, scope: !16257)
!16379 = !DILocation(line: 1742, column: 25, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16256, file: !3, line: 1741, column: 2)
!16381 = !DILocation(line: 1742, column: 16, scope: !16380)
!16382 = !DILocation(line: 1745, column: 36, scope: !16380)
!16383 = !DILocation(line: 1745, column: 24, scope: !16380)
!16384 = !DILocation(line: 1749, column: 20, scope: !16255)
!16385 = !DILocation(line: 0, scope: !16255)
!16386 = !DILocation(line: 1750, column: 20, scope: !16255)
!16387 = !DILocation(line: 1752, column: 18, scope: !16262)
!16388 = !DILocation(line: 1752, column: 8, scope: !16255)
!16389 = !DILocation(line: 1754, column: 32, scope: !16261)
!16390 = !DILocation(line: 0, scope: !16261)
!16391 = !DILocation(line: 1755, column: 32, scope: !16261)
!16392 = !DILocation(line: 1756, column: 12, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16261, file: !3, line: 1756, column: 12)
!16394 = !DILocation(line: 1756, column: 24, scope: !16393)
!16395 = !DILocation(line: 1756, column: 21, scope: !16393)
!16396 = !DILocation(line: 1756, column: 12, scope: !16261)
!16397 = !DILocation(line: 1758, column: 9, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16399, file: !3, line: 1758, column: 9)
!16399 = distinct !DILexicalBlock(scope: !16393, file: !3, line: 1757, column: 3)
!16400 = !DILocation(line: 1758, column: 9, scope: !16399)
!16401 = !DILocation(line: 1761, column: 7, scope: !16398)
!16402 = !DILocation(line: 1759, column: 7, scope: !16398)
!16403 = !DILocation(line: 1762, column: 14, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16398, file: !3, line: 1762, column: 14)
!16405 = !DILocation(line: 0, scope: !16404)
!16406 = !DILocation(line: 1762, column: 14, scope: !16398)
!16407 = !DILocation(line: 1763, column: 7, scope: !16404)
!16408 = !DILocation(line: 1770, column: 7, scope: !16404)
!16409 = !DILocation(line: 1767, column: 7, scope: !16404)
!16410 = !DILocation(line: 1775, column: 5, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16261, file: !3, line: 1774, column: 12)
!16412 = !DILocation(line: 1774, column: 12, scope: !16261)
!16413 = !DILocation(line: 1776, column: 3, scope: !16411)
!16414 = !DILocation(line: 1779, column: 6, scope: !16262)
!16415 = !DILocation(line: 1780, column: 4, scope: !16255)
!16416 = !DILocation(line: 1781, column: 4, scope: !16255)
!16417 = !DILocation(line: 1656, column: 23, scope: !16236)
!16418 = !DILocation(line: 1789, column: 7, scope: !16269)
!16419 = !DILocation(line: 1789, column: 27, scope: !16269)
!16420 = !DILocation(line: 1789, column: 7, scope: !16236)
!16421 = !DILocation(line: 1791, column: 11, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !3, line: 1791, column: 11)
!16423 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 1790, column: 5)
!16424 = !DILocation(line: 1792, column: 4, scope: !16422)
!16425 = !DILocation(line: 1792, column: 7, scope: !16422)
!16426 = !DILocation(line: 1793, column: 4, scope: !16422)
!16427 = !DILocation(line: 1793, column: 7, scope: !16422)
!16428 = !DILocation(line: 1794, column: 4, scope: !16422)
!16429 = !DILocation(line: 1794, column: 7, scope: !16422)
!16430 = !DILocation(line: 1791, column: 11, scope: !16423)
!16431 = !DILocation(line: 1797, column: 7, scope: !16423)
!16432 = !DILocation(line: 1798, column: 7, scope: !16423)
!16433 = !DILocation(line: 1799, column: 7, scope: !16423)
!16434 = !DILocation(line: 1810, column: 32, scope: !16268)
!16435 = !DILocation(line: 1810, column: 12, scope: !16269)
!16436 = !DILocation(line: 1816, column: 11, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1816, column: 11)
!16438 = !DILocation(line: 1817, column: 4, scope: !16437)
!16439 = !DILocation(line: 1817, column: 8, scope: !16437)
!16440 = !DILocation(line: 1818, column: 4, scope: !16437)
!16441 = !DILocation(line: 1818, column: 9, scope: !16437)
!16442 = !DILocation(line: 1819, column: 8, scope: !16437)
!16443 = !DILocation(line: 1819, column: 12, scope: !16437)
!16444 = !DILocation(line: 1820, column: 5, scope: !16437)
!16445 = !DILocation(line: 1820, column: 9, scope: !16437)
!16446 = !DILocation(line: 1816, column: 11, scope: !16267)
!16447 = !DILocation(line: 1822, column: 4, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16437, file: !3, line: 1821, column: 2)
!16449 = !DILocation(line: 1825, column: 4, scope: !16448)
!16450 = !DILocation(line: 1828, column: 11, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1828, column: 11)
!16452 = !DILocation(line: 0, scope: !16451)
!16453 = !DILocation(line: 1828, column: 11, scope: !16267)
!16454 = !DILocation(line: 1830, column: 8, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16451, file: !3, line: 1829, column: 2)
!16456 = !DILocation(line: 1836, column: 14, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16458, file: !3, line: 1836, column: 12)
!16458 = distinct !DILexicalBlock(scope: !16459, file: !3, line: 1831, column: 6)
!16459 = distinct !DILexicalBlock(scope: !16455, file: !3, line: 1830, column: 8)
!16460 = !DILocation(line: 1837, column: 6, scope: !16457)
!16461 = !DILocation(line: 1837, column: 9, scope: !16457)
!16462 = !DILocation(line: 1838, column: 6, scope: !16457)
!16463 = !DILocation(line: 1838, column: 11, scope: !16457)
!16464 = !DILocation(line: 1839, column: 10, scope: !16457)
!16465 = !DILocation(line: 1840, column: 7, scope: !16457)
!16466 = !DILocation(line: 1841, column: 8, scope: !16457)
!16467 = !DILocation(line: 1840, column: 11, scope: !16457)
!16468 = !DILocation(line: 1842, column: 10, scope: !16457)
!16469 = !DILocation(line: 1842, column: 15, scope: !16457)
!16470 = !DILocation(line: 1843, column: 7, scope: !16457)
!16471 = !DILocation(line: 1844, column: 8, scope: !16457)
!16472 = !DILocation(line: 1843, column: 11, scope: !16457)
!16473 = !DILocation(line: 1846, column: 5, scope: !16457)
!16474 = !DILocation(line: 1846, column: 8, scope: !16457)
!16475 = !DILocation(line: 1836, column: 12, scope: !16458)
!16476 = !DILocation(line: 1848, column: 5, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 1847, column: 3)
!16478 = !DILocation(line: 1849, column: 5, scope: !16477)
!16479 = !DILocation(line: 1850, column: 5, scope: !16477)
!16480 = !DILocation(line: 1857, column: 9, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16451, file: !3, line: 1856, column: 16)
!16482 = !DILocation(line: 1857, column: 13, scope: !16481)
!16483 = !DILocation(line: 1857, column: 38, scope: !16481)
!16484 = !DILocation(line: 1857, column: 41, scope: !16481)
!16485 = !DILocation(line: 1858, column: 9, scope: !16481)
!16486 = !DILocation(line: 1858, column: 12, scope: !16481)
!16487 = !DILocation(line: 1859, column: 9, scope: !16481)
!16488 = !DILocation(line: 1859, column: 13, scope: !16481)
!16489 = !DILocation(line: 1856, column: 16, scope: !16451)
!16490 = !DILocation(line: 1861, column: 4, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16481, file: !3, line: 1860, column: 2)
!16492 = !DILocation(line: 1862, column: 4, scope: !16491)
!16493 = !DILocation(line: 1873, column: 11, scope: !16494)
!16494 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1873, column: 11)
!16495 = !DILocation(line: 1873, column: 33, scope: !16494)
!16496 = !DILocation(line: 1889, column: 16, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 1889, column: 16)
!16498 = !DILocation(line: 1873, column: 37, scope: !16494)
!16499 = !DILocation(line: 1873, column: 11, scope: !16267)
!16500 = !DILocation(line: 1880, column: 9, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 1880, column: 8)
!16502 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 1874, column: 2)
!16503 = !DILocation(line: 1881, column: 8, scope: !16501)
!16504 = !DILocation(line: 1881, column: 12, scope: !16501)
!16505 = !DILocation(line: 1880, column: 8, scope: !16502)
!16506 = !DILocation(line: 1883, column: 8, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16501, file: !3, line: 1882, column: 6)
!16508 = !DILocation(line: 1885, column: 8, scope: !16507)
!16509 = !DILocation(line: 1886, column: 6, scope: !16507)
!16510 = !DILocation(line: 1889, column: 38, scope: !16497)
!16511 = !DILocation(line: 1889, column: 16, scope: !16494)
!16512 = !DILocation(line: 1891, column: 8, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16514, file: !3, line: 1891, column: 8)
!16514 = distinct !DILexicalBlock(scope: !16497, file: !3, line: 1890, column: 2)
!16515 = !DILocation(line: 1891, column: 8, scope: !16514)
!16516 = !DILocation(line: 1893, column: 8, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 1892, column: 6)
!16518 = !DILocation(line: 1895, column: 8, scope: !16517)
!16519 = !DILocation(line: 1896, column: 8, scope: !16517)
!16520 = !DILocation(line: 1898, column: 13, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 1898, column: 13)
!16522 = !DILocation(line: 1898, column: 13, scope: !16513)
!16523 = !DILocation(line: 1900, column: 18, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16521, file: !3, line: 1899, column: 6)
!16525 = !DILocation(line: 1903, column: 6, scope: !16524)
!16526 = !DILocation(line: 1908, column: 11, scope: !16266)
!16527 = !DILocation(line: 1909, column: 4, scope: !16266)
!16528 = !DILocation(line: 1909, column: 7, scope: !16266)
!16529 = !DILocation(line: 1908, column: 11, scope: !16267)
!16530 = !DILocation(line: 1912, column: 6, scope: !16265)
!16531 = !DILocation(line: 1911, column: 16, scope: !16265)
!16532 = !DILocation(line: 1912, column: 33, scope: !16265)
!16533 = !DILocation(line: 0, scope: !16265)
!16534 = !DILocation(line: 1914, column: 6, scope: !16265)
!16535 = !DILocation(line: 1913, column: 16, scope: !16265)
!16536 = !DILocation(line: 1914, column: 33, scope: !16265)
!16537 = !DILocation(line: 1915, column: 13, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16265, file: !3, line: 1915, column: 8)
!16539 = !DILocation(line: 1915, column: 8, scope: !16265)
!16540 = !DILocation(line: 1917, column: 18, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 1916, column: 6)
!16542 = !DILocation(line: 1918, column: 4, scope: !16541)
!16543 = !DILocation(line: 1917, column: 8, scope: !16541)
!16544 = !DILocation(line: 1919, column: 18, scope: !16541)
!16545 = !DILocation(line: 1919, column: 8, scope: !16541)
!16546 = !DILocation(line: 1921, column: 6, scope: !16541)
!16547 = !DILocation(line: 1924, column: 32, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 1924, column: 12)
!16549 = !DILocation(line: 1924, column: 12, scope: !16268)
!16550 = !DILocation(line: 1928, column: 11, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16552, file: !3, line: 1928, column: 11)
!16552 = distinct !DILexicalBlock(scope: !16548, file: !3, line: 1925, column: 5)
!16553 = !DILocation(line: 1928, column: 44, scope: !16551)
!16554 = !DILocation(line: 0, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16551, file: !3, line: 1935, column: 16)
!16556 = !DILocation(line: 1935, column: 16, scope: !16555)
!16557 = !DILocation(line: 1928, column: 48, scope: !16551)
!16558 = !DILocation(line: 1928, column: 11, scope: !16552)
!16559 = !DILocation(line: 1935, column: 49, scope: !16555)
!16560 = !DILocation(line: 1935, column: 46, scope: !16555)
!16561 = !DILocation(line: 1935, column: 16, scope: !16551)
!16562 = !DILocation(line: 1937, column: 8, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16564, file: !3, line: 1937, column: 8)
!16564 = distinct !DILexicalBlock(scope: !16555, file: !3, line: 1936, column: 2)
!16565 = !DILocation(line: 1937, column: 8, scope: !16564)
!16566 = !DILocation(line: 1938, column: 6, scope: !16563)
!16567 = !DILocation(line: 1941, column: 6, scope: !16563)
!16568 = !DILocation(line: 1944, column: 4, scope: !16564)
!16569 = !DILocation(line: 1945, column: 4, scope: !16564)
!16570 = !DILocation(line: 1949, column: 11, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16552, file: !3, line: 1949, column: 11)
!16572 = !DILocation(line: 1949, column: 34, scope: !16571)
!16573 = !DILocation(line: 1949, column: 37, scope: !16571)
!16574 = !DILocation(line: 1949, column: 11, scope: !16552)
!16575 = !DILocation(line: 1951, column: 4, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16571, file: !3, line: 1950, column: 2)
!16577 = !DILocation(line: 1952, column: 4, scope: !16576)
!16578 = !DILocation(line: 1953, column: 4, scope: !16576)
!16579 = !DILocation(line: 1964, column: 11, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16552, file: !3, line: 1964, column: 11)
!16581 = !DILocation(line: 1965, column: 4, scope: !16580)
!16582 = !DILocation(line: 1965, column: 32, scope: !16580)
!16583 = !DILocation(line: 1965, column: 29, scope: !16580)
!16584 = !DILocation(line: 1964, column: 11, scope: !16552)
!16585 = !DILocation(line: 1967, column: 8, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !3, line: 1967, column: 8)
!16587 = distinct !DILexicalBlock(scope: !16580, file: !3, line: 1966, column: 2)
!16588 = !DILocation(line: 1967, column: 8, scope: !16587)
!16589 = !DILocation(line: 1969, column: 13, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16591, file: !3, line: 1969, column: 12)
!16591 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 1968, column: 6)
!16592 = !DILocation(line: 1969, column: 12, scope: !16591)
!16593 = !DILocation(line: 1971, column: 5, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 1970, column: 3)
!16595 = !DILocation(line: 1973, column: 5, scope: !16594)
!16596 = !DILocation(line: 1974, column: 5, scope: !16594)
!16597 = !DILocation(line: 1976, column: 17, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 1976, column: 17)
!16599 = !DILocation(line: 1976, column: 17, scope: !16590)
!16600 = !DILocation(line: 1978, column: 15, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16598, file: !3, line: 1977, column: 3)
!16602 = !DILocation(line: 1981, column: 3, scope: !16601)
!16603 = !DILocation(line: 1985, column: 12, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 1985, column: 12)
!16605 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 1984, column: 6)
!16606 = !DILocation(line: 1985, column: 12, scope: !16605)
!16607 = !DILocation(line: 1986, column: 3, scope: !16604)
!16608 = !DILocation(line: 1989, column: 3, scope: !16604)
!16609 = !DILocation(line: 1992, column: 8, scope: !16605)
!16610 = !DILocation(line: 1993, column: 8, scope: !16605)
!16611 = !DILocation(line: 1998, column: 17, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16580, file: !3, line: 1998, column: 16)
!16613 = !DILocation(line: 1998, column: 16, scope: !16580)
!16614 = !DILocation(line: 2000, column: 8, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16616, file: !3, line: 2000, column: 8)
!16616 = distinct !DILexicalBlock(scope: !16612, file: !3, line: 1999, column: 2)
!16617 = !DILocation(line: 2000, column: 8, scope: !16616)
!16618 = !DILocation(line: 2005, column: 13, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16615, file: !3, line: 2005, column: 13)
!16620 = !DILocation(line: 2005, column: 13, scope: !16615)
!16621 = !DILocation(line: 2007, column: 8, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 2006, column: 6)
!16623 = !DILocation(line: 2009, column: 8, scope: !16622)
!16624 = !DILocation(line: 2010, column: 6, scope: !16622)
!16625 = !DILocation(line: 2013, column: 8, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 2012, column: 6)
!16627 = !DILocation(line: 2014, column: 8, scope: !16626)
!16628 = !DILocation(line: 2022, column: 11, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16552, file: !3, line: 2022, column: 11)
!16630 = !DILocation(line: 2023, column: 4, scope: !16629)
!16631 = !DILocation(line: 2023, column: 7, scope: !16629)
!16632 = !DILocation(line: 2024, column: 4, scope: !16629)
!16633 = !DILocation(line: 2024, column: 8, scope: !16629)
!16634 = !DILocation(line: 2025, column: 4, scope: !16629)
!16635 = !DILocation(line: 2025, column: 8, scope: !16629)
!16636 = !DILocation(line: 2022, column: 11, scope: !16552)
!16637 = !DILocation(line: 2026, column: 24, scope: !16629)
!16638 = !DILocation(line: 2026, column: 12, scope: !16629)
!16639 = !DILocation(line: 2026, column: 9, scope: !16629)
!16640 = !DILocation(line: 2026, column: 2, scope: !16629)
!16641 = !DILocation(line: 2035, column: 7, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2035, column: 7)
!16643 = !DILocation(line: 2036, column: 7, scope: !16642)
!16644 = !DILocation(line: 2036, column: 10, scope: !16642)
!16645 = !DILocation(line: 2036, column: 46, scope: !16642)
!16646 = !DILocation(line: 2036, column: 49, scope: !16642)
!16647 = !DILocation(line: 2037, column: 7, scope: !16642)
!16648 = !DILocation(line: 2037, column: 36, scope: !16642)
!16649 = !DILocation(line: 2035, column: 7, scope: !16236)
!16650 = !DILocation(line: 2039, column: 17, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16642, file: !3, line: 2038, column: 5)
!16652 = !DILocation(line: 2039, column: 14, scope: !16651)
!16653 = !DILocation(line: 2043, column: 7, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2043, column: 7)
!16655 = !DILocation(line: 2041, column: 5, scope: !16651)
!16656 = !DILocation(line: 2043, column: 27, scope: !16654)
!16657 = !DILocation(line: 2043, column: 7, scope: !16236)
!16658 = !DILocation(line: 2046, column: 11, scope: !16659)
!16659 = distinct !DILexicalBlock(scope: !16660, file: !3, line: 2046, column: 11)
!16660 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 2044, column: 5)
!16661 = !DILocation(line: 2047, column: 4, scope: !16659)
!16662 = !DILocation(line: 2047, column: 37, scope: !16659)
!16663 = !DILocation(line: 2047, column: 7, scope: !16659)
!16664 = !DILocation(line: 2046, column: 11, scope: !16660)
!16665 = !DILocation(line: 2049, column: 14, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 2048, column: 2)
!16667 = !DILocation(line: 2049, column: 11, scope: !16666)
!16668 = !DILocation(line: 2052, column: 2, scope: !16666)
!16669 = !DILocation(line: 2053, column: 16, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 2053, column: 16)
!16671 = !DILocation(line: 2054, column: 9, scope: !16670)
!16672 = !DILocation(line: 2054, column: 42, scope: !16670)
!16673 = !DILocation(line: 2054, column: 12, scope: !16670)
!16674 = !DILocation(line: 2053, column: 16, scope: !16659)
!16675 = !DILocation(line: 2056, column: 14, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 2055, column: 2)
!16677 = !DILocation(line: 2056, column: 11, scope: !16676)
!16678 = !DILocation(line: 2059, column: 2, scope: !16676)
!16679 = !DILocation(line: 2072, column: 31, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16681, file: !3, line: 2072, column: 11)
!16681 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 2062, column: 5)
!16682 = !DILocation(line: 2073, column: 4, scope: !16680)
!16683 = !DILocation(line: 2073, column: 9, scope: !16680)
!16684 = !DILocation(line: 2073, column: 36, scope: !16680)
!16685 = !DILocation(line: 2073, column: 39, scope: !16680)
!16686 = !DILocation(line: 2072, column: 11, scope: !16681)
!16687 = !DILocation(line: 2075, column: 4, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16680, file: !3, line: 2074, column: 2)
!16689 = !DILocation(line: 2076, column: 4, scope: !16688)
!16690 = !DILocation(line: 2077, column: 4, scope: !16688)
!16691 = !DILocation(line: 2082, column: 15, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2082, column: 7)
!16693 = !DILocation(line: 2083, column: 10, scope: !16692)
!16694 = !DILocation(line: 2086, column: 12, scope: !16692)
!16695 = !DILocation(line: 2086, column: 32, scope: !16692)
!16696 = !DILocation(line: 2087, column: 5, scope: !16692)
!16697 = !DILocation(line: 2087, column: 8, scope: !16692)
!16698 = !DILocation(line: 2087, column: 31, scope: !16692)
!16699 = !DILocation(line: 2087, column: 35, scope: !16692)
!16700 = !DILocation(line: 2089, column: 7, scope: !16692)
!16701 = !DILocation(line: 2090, column: 5, scope: !16692)
!16702 = !DILocation(line: 2090, column: 9, scope: !16692)
!16703 = !DILocation(line: 2091, column: 5, scope: !16692)
!16704 = !DILocation(line: 2091, column: 8, scope: !16692)
!16705 = !DILocation(line: 2092, column: 5, scope: !16692)
!16706 = !DILocation(line: 2092, column: 9, scope: !16692)
!16707 = !DILocation(line: 2094, column: 7, scope: !16692)
!16708 = !DILocation(line: 2094, column: 12, scope: !16692)
!16709 = !DILocation(line: 2094, column: 36, scope: !16692)
!16710 = !DILocation(line: 2094, column: 40, scope: !16692)
!16711 = !DILocation(line: 2096, column: 7, scope: !16692)
!16712 = !DILocation(line: 2096, column: 32, scope: !16692)
!16713 = !DILocation(line: 2097, column: 5, scope: !16692)
!16714 = !DILocation(line: 2097, column: 8, scope: !16692)
!16715 = !DILocation(line: 2097, column: 35, scope: !16692)
!16716 = !DILocation(line: 2097, column: 39, scope: !16692)
!16717 = !DILocation(line: 2099, column: 7, scope: !16692)
!16718 = !DILocation(line: 2099, column: 32, scope: !16692)
!16719 = !DILocation(line: 2100, column: 5, scope: !16692)
!16720 = !DILocation(line: 2100, column: 8, scope: !16692)
!16721 = !DILocation(line: 2100, column: 31, scope: !16692)
!16722 = !DILocation(line: 2100, column: 35, scope: !16692)
!16723 = !DILocation(line: 2082, column: 7, scope: !16236)
!16724 = !DILocation(line: 2102, column: 16, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 2101, column: 5)
!16726 = !DILocation(line: 2107, column: 14, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 2107, column: 7)
!16728 = !DILocation(line: 2104, column: 5, scope: !16725)
!16729 = !DILocation(line: 2108, column: 5, scope: !16727)
!16730 = !DILocation(line: 2113, column: 1, scope: !16236)
!16731 = distinct !DISubprogram(name: "merge_decls", scope: !3, file: !3, line: 2121, type: !16732, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !16734)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{null, !672, !672, !672, !672}
!16734 = !{!16735, !16736, !16737, !16738, !16739, !16740, !16741, !16742, !16743, !16746, !16747, !16752, !16754, !16755, !16756}
!16735 = !DILocalVariable(name: "newdecl", arg: 1, scope: !16731, file: !3, line: 2121, type: !672)
!16736 = !DILocalVariable(name: "olddecl", arg: 2, scope: !16731, file: !3, line: 2121, type: !672)
!16737 = !DILocalVariable(name: "newtype", arg: 3, scope: !16731, file: !3, line: 2121, type: !672)
!16738 = !DILocalVariable(name: "oldtype", arg: 4, scope: !16731, file: !3, line: 2121, type: !672)
!16739 = !DILocalVariable(name: "new_is_definition", scope: !16731, file: !3, line: 2123, type: !619)
!16740 = !DILocalVariable(name: "new_is_prototype", scope: !16731, file: !3, line: 2125, type: !619)
!16741 = !DILocalVariable(name: "old_is_prototype", scope: !16731, file: !3, line: 2127, type: !619)
!16742 = !DILocalVariable(name: "extern_changed", scope: !16731, file: !3, line: 2129, type: !619)
!16743 = !DILocalVariable(name: "b", scope: !16744, file: !3, line: 2137, type: !2061)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !3, line: 2136, column: 5)
!16745 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2134, column: 7)
!16746 = !DILocalVariable(name: "here", scope: !16744, file: !3, line: 2137, type: !3550)
!16747 = !DILocalVariable(name: "t", scope: !16748, file: !3, line: 2366, type: !672)
!16748 = distinct !DILexicalBlock(scope: !16749, file: !3, line: 2365, column: 2)
!16749 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2364, column: 11)
!16750 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2313, column: 5)
!16751 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2312, column: 7)
!16752 = !DILocalVariable(name: "olddecl_uid", scope: !16753, file: !3, line: 2399, type: !7)
!16753 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2398, column: 3)
!16754 = !DILocalVariable(name: "olddecl_context", scope: !16753, file: !3, line: 2400, type: !672)
!16755 = !DILocalVariable(name: "olddecl_arguments", scope: !16753, file: !3, line: 2401, type: !672)
!16756 = !DILabel(scope: !16744, name: "found", file: !3, line: 2144)
!16757 = !DILocation(line: 0, scope: !16731)
!16758 = !DILocation(line: 2123, column: 29, scope: !16731)
!16759 = !DILocation(line: 2123, column: 49, scope: !16731)
!16760 = !DILocation(line: 2124, column: 8, scope: !16731)
!16761 = !DILocation(line: 2124, column: 11, scope: !16731)
!16762 = !DILocation(line: 2124, column: 34, scope: !16731)
!16763 = !DILocation(line: 2126, column: 7, scope: !16731)
!16764 = !DILocation(line: 2126, column: 10, scope: !16731)
!16765 = !DILocation(line: 2126, column: 47, scope: !16731)
!16766 = !DILocation(line: 2127, column: 28, scope: !16731)
!16767 = !DILocation(line: 2127, column: 48, scope: !16731)
!16768 = !DILocation(line: 2128, column: 7, scope: !16731)
!16769 = !DILocation(line: 2128, column: 10, scope: !16731)
!16770 = !DILocation(line: 2128, column: 47, scope: !16731)
!16771 = !DILocation(line: 2134, column: 27, scope: !16745)
!16772 = !DILocation(line: 2135, column: 7, scope: !16745)
!16773 = !DILocation(line: 2135, column: 10, scope: !16745)
!16774 = !DILocation(line: 2135, column: 37, scope: !16745)
!16775 = !DILocation(line: 2135, column: 41, scope: !16745)
!16776 = !DILocation(line: 2134, column: 7, scope: !16731)
!16777 = !DILocation(line: 2139, column: 20, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 2139, column: 7)
!16779 = !DILocation(line: 2139, column: 35, scope: !16778)
!16780 = !DILocation(line: 0, scope: !16744)
!16781 = !DILocation(line: 2139, column: 12, scope: !16778)
!16782 = !DILocation(line: 0, scope: !16778)
!16783 = !DILocation(line: 2139, column: 45, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16778, file: !3, line: 2139, column: 7)
!16785 = !DILocation(line: 2139, column: 7, scope: !16778)
!16786 = !DILocation(line: 2140, column: 15, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !16784, file: !3, line: 2140, column: 6)
!16788 = !DILocation(line: 2140, column: 20, scope: !16787)
!16789 = !DILocation(line: 2140, column: 6, scope: !16784)
!16790 = !DILocation(line: 2139, column: 69, scope: !16784)
!16791 = !DILocation(line: 2139, column: 7, scope: !16784)
!16792 = distinct !{!16792, !16785, !16793}
!16793 = !DILocation(line: 2141, column: 9, scope: !16778)
!16794 = !DILocation(line: 2142, column: 7, scope: !16744)
!16795 = !DILocation(line: 2145, column: 11, scope: !16744)
!16796 = !DILocation(line: 2147, column: 17, scope: !16744)
!16797 = !DILocation(line: 2148, column: 7, scope: !16744)
!16798 = !DILocation(line: 2144, column: 5, scope: !16744)
!16799 = !DILocation(line: 2146, column: 18, scope: !16744)
!16800 = !DILocation(line: 2146, column: 13, scope: !16744)
!16801 = !DILocation(line: 2147, column: 32, scope: !16744)
!16802 = !DILocation(line: 2147, column: 15, scope: !16744)
!16803 = !DILocation(line: 2148, column: 31, scope: !16744)
!16804 = !DILocation(line: 2150, column: 34, scope: !16744)
!16805 = !DILocation(line: 2151, column: 5, scope: !16744)
!16806 = !DILocation(line: 2154, column: 15, scope: !16731)
!16807 = !DILocation(line: 2154, column: 7, scope: !16731)
!16808 = !DILocation(line: 2153, column: 3, scope: !16731)
!16809 = !DILocation(line: 2154, column: 5, scope: !16731)
!16810 = !DILocation(line: 2159, column: 7, scope: !16731)
!16811 = !DILocation(line: 2158, column: 7, scope: !16731)
!16812 = !DILocation(line: 2159, column: 5, scope: !16731)
!16813 = !DILocation(line: 2157, column: 3, scope: !16731)
!16814 = !DILocation(line: 2158, column: 5, scope: !16731)
!16815 = !DILocation(line: 2162, column: 8, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2162, column: 7)
!16817 = !DILocation(line: 2162, column: 7, scope: !16731)
!16818 = !DILocation(line: 2164, column: 11, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !3, line: 2164, column: 11)
!16820 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 2163, column: 5)
!16821 = !DILocation(line: 2164, column: 34, scope: !16819)
!16822 = !DILocation(line: 2164, column: 31, scope: !16819)
!16823 = !DILocation(line: 2164, column: 11, scope: !16820)
!16824 = !DILocation(line: 2165, column: 2, scope: !16819)
!16825 = !DILocation(line: 2166, column: 11, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16820, file: !3, line: 2166, column: 11)
!16827 = !DILocation(line: 2166, column: 31, scope: !16826)
!16828 = !DILocation(line: 2167, column: 4, scope: !16826)
!16829 = !DILocation(line: 2167, column: 27, scope: !16826)
!16830 = !DILocation(line: 2168, column: 4, scope: !16826)
!16831 = !DILocation(line: 2168, column: 27, scope: !16826)
!16832 = !DILocation(line: 2166, column: 11, scope: !16820)
!16833 = !DILocation(line: 2169, column: 2, scope: !16826)
!16834 = !DILocation(line: 2174, column: 29, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 2172, column: 5)
!16836 = !DILocation(line: 2174, column: 7, scope: !16835)
!16837 = !DILocation(line: 2174, column: 27, scope: !16835)
!16838 = !DILocation(line: 2175, column: 34, scope: !16835)
!16839 = !DILocation(line: 2175, column: 7, scope: !16835)
!16840 = !DILocation(line: 2175, column: 32, scope: !16835)
!16841 = !DILocation(line: 2176, column: 29, scope: !16835)
!16842 = !DILocation(line: 2176, column: 7, scope: !16835)
!16843 = !DILocation(line: 2176, column: 27, scope: !16835)
!16844 = !DILocation(line: 2177, column: 11, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16835, file: !3, line: 2177, column: 11)
!16846 = !DILocation(line: 2177, column: 34, scope: !16845)
!16847 = !DILocation(line: 2177, column: 32, scope: !16845)
!16848 = !DILocation(line: 2177, column: 11, scope: !16835)
!16849 = !DILocation(line: 2179, column: 25, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16845, file: !3, line: 2178, column: 2)
!16851 = !DILocation(line: 2180, column: 33, scope: !16850)
!16852 = !DILocation(line: 2180, column: 30, scope: !16850)
!16853 = !DILocation(line: 2181, column: 2, scope: !16850)
!16854 = !DILocation(line: 2185, column: 7, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2185, column: 7)
!16856 = !DILocation(line: 2185, column: 7, scope: !16731)
!16857 = !DILocation(line: 2186, column: 5, scope: !16855)
!16858 = !DILocation(line: 2189, column: 7, scope: !16859)
!16859 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2189, column: 7)
!16860 = !DILocation(line: 2189, column: 7, scope: !16731)
!16861 = !DILocation(line: 2190, column: 29, scope: !16859)
!16862 = !DILocation(line: 2192, column: 7, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2192, column: 7)
!16864 = !DILocation(line: 2190, column: 5, scope: !16859)
!16865 = !DILocation(line: 2192, column: 7, scope: !16731)
!16866 = !DILocation(line: 2193, column: 34, scope: !16863)
!16867 = !DILocation(line: 2196, column: 7, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2196, column: 7)
!16869 = !DILocation(line: 2193, column: 5, scope: !16863)
!16870 = !DILocation(line: 2196, column: 7, scope: !16731)
!16871 = !DILocation(line: 2203, column: 7, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2203, column: 7)
!16873 = !DILocation(line: 2197, column: 31, scope: !16868)
!16874 = !DILocation(line: 2197, column: 5, scope: !16868)
!16875 = !DILocation(line: 2204, column: 7, scope: !16872)
!16876 = !DILocation(line: 2204, column: 10, scope: !16872)
!16877 = !DILocation(line: 2205, column: 7, scope: !16872)
!16878 = !DILocation(line: 2205, column: 11, scope: !16872)
!16879 = !DILocation(line: 2203, column: 7, scope: !16731)
!16880 = !DILocation(line: 2206, column: 38, scope: !16872)
!16881 = !DILocation(line: 2206, column: 36, scope: !16872)
!16882 = !DILocation(line: 2206, column: 5, scope: !16872)
!16883 = !DILocation(line: 2207, column: 12, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 2207, column: 12)
!16885 = !DILocation(line: 2208, column: 5, scope: !16884)
!16886 = !DILocation(line: 2208, column: 8, scope: !16884)
!16887 = !DILocation(line: 2209, column: 5, scope: !16884)
!16888 = !DILocation(line: 2209, column: 9, scope: !16884)
!16889 = !DILocation(line: 2207, column: 12, scope: !16872)
!16890 = !DILocation(line: 2210, column: 38, scope: !16884)
!16891 = !DILocation(line: 2210, column: 36, scope: !16884)
!16892 = !DILocation(line: 2210, column: 5, scope: !16884)
!16893 = !DILocation(line: 2211, column: 13, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16884, file: !3, line: 2211, column: 12)
!16895 = !DILocation(line: 2211, column: 36, scope: !16894)
!16896 = !DILocation(line: 2211, column: 41, scope: !16894)
!16897 = !DILocation(line: 2211, column: 44, scope: !16894)
!16898 = !DILocation(line: 2211, column: 67, scope: !16894)
!16899 = !DILocation(line: 2212, column: 5, scope: !16894)
!16900 = !DILocation(line: 2212, column: 9, scope: !16894)
!16901 = !DILocation(line: 2212, column: 26, scope: !16894)
!16902 = !DILocation(line: 2213, column: 13, scope: !16894)
!16903 = !DILocation(line: 2211, column: 12, scope: !16884)
!16904 = !DILocation(line: 2214, column: 38, scope: !16894)
!16905 = !DILocation(line: 2214, column: 5, scope: !16894)
!16906 = !DILocation(line: 2214, column: 36, scope: !16894)
!16907 = !DILocation(line: 2217, column: 8, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2217, column: 8)
!16909 = !DILocation(line: 2217, column: 31, scope: !16908)
!16910 = !DILocation(line: 2217, column: 8, scope: !16731)
!16911 = !DILocation(line: 2218, column: 30, scope: !16908)
!16912 = !DILocation(line: 2218, column: 28, scope: !16908)
!16913 = !DILocation(line: 2218, column: 5, scope: !16908)
!16914 = !DILocation(line: 2221, column: 7, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2221, column: 7)
!16916 = !DILocation(line: 2221, column: 27, scope: !16915)
!16917 = !DILocation(line: 2221, column: 39, scope: !16915)
!16918 = !DILocation(line: 2221, column: 42, scope: !16915)
!16919 = !DILocation(line: 2221, column: 7, scope: !16731)
!16920 = !DILocation(line: 2223, column: 34, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 2222, column: 5)
!16922 = !DILocation(line: 2223, column: 7, scope: !16921)
!16923 = !DILocation(line: 2223, column: 32, scope: !16921)
!16924 = !DILocation(line: 2224, column: 7, scope: !16921)
!16925 = !DILocation(line: 2224, column: 40, scope: !16921)
!16926 = !DILocation(line: 2227, column: 7, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2227, column: 7)
!16928 = !DILocation(line: 2225, column: 5, scope: !16921)
!16929 = !DILocation(line: 2227, column: 7, scope: !16731)
!16930 = !DILocation(line: 2233, column: 11, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 2233, column: 11)
!16932 = distinct !DILexicalBlock(scope: !16927, file: !3, line: 2228, column: 5)
!16933 = !DILocation(line: 2233, column: 39, scope: !16931)
!16934 = !DILocation(line: 2233, column: 11, scope: !16932)
!16935 = !DILocation(line: 2234, column: 32, scope: !16931)
!16936 = !DILocation(line: 2234, column: 30, scope: !16931)
!16937 = !DILocation(line: 2238, column: 7, scope: !16932)
!16938 = !DILocation(line: 2234, column: 2, scope: !16931)
!16939 = !DILocation(line: 2241, column: 11, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 2241, column: 11)
!16941 = !DILocation(line: 2241, column: 11, scope: !16932)
!16942 = !DILocation(line: 2243, column: 32, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16940, file: !3, line: 2242, column: 2)
!16944 = !DILocation(line: 2243, column: 4, scope: !16943)
!16945 = !DILocation(line: 2243, column: 30, scope: !16943)
!16946 = !DILocation(line: 2244, column: 40, scope: !16943)
!16947 = !DILocation(line: 2245, column: 2, scope: !16943)
!16948 = !DILocation(line: 2247, column: 11, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 2247, column: 11)
!16950 = !DILocation(line: 2247, column: 31, scope: !16949)
!16951 = !DILocation(line: 2247, column: 11, scope: !16932)
!16952 = !DILocation(line: 2249, column: 40, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16949, file: !3, line: 2248, column: 2)
!16954 = !DILocation(line: 2249, column: 4, scope: !16953)
!16955 = !DILocation(line: 2249, column: 37, scope: !16953)
!16956 = !DILocation(line: 2250, column: 40, scope: !16953)
!16957 = !DILocation(line: 2250, column: 37, scope: !16953)
!16958 = !DILocation(line: 2251, column: 37, scope: !16953)
!16959 = !DILocation(line: 2251, column: 34, scope: !16953)
!16960 = !DILocation(line: 2253, column: 9, scope: !16953)
!16961 = !DILocation(line: 2253, column: 6, scope: !16953)
!16962 = !DILocation(line: 2254, column: 36, scope: !16953)
!16963 = !DILocation(line: 2254, column: 33, scope: !16953)
!16964 = !DILocation(line: 2255, column: 32, scope: !16953)
!16965 = !DILocation(line: 2255, column: 29, scope: !16953)
!16966 = !DILocation(line: 2256, column: 38, scope: !16953)
!16967 = !DILocation(line: 2256, column: 35, scope: !16953)
!16968 = !DILocation(line: 2257, column: 31, scope: !16953)
!16969 = !DILocation(line: 2257, column: 28, scope: !16953)
!16970 = !DILocation(line: 2258, column: 29, scope: !16953)
!16971 = !DILocation(line: 2258, column: 26, scope: !16953)
!16972 = !DILocation(line: 2259, column: 32, scope: !16953)
!16973 = !DILocation(line: 2259, column: 29, scope: !16953)
!16974 = !DILocation(line: 2260, column: 2, scope: !16953)
!16975 = !DILocation(line: 2263, column: 7, scope: !16932)
!16976 = !DILocation(line: 2266, column: 11, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 2266, column: 11)
!16978 = !DILocation(line: 2266, column: 31, scope: !16977)
!16979 = !DILocation(line: 2266, column: 11, scope: !16932)
!16980 = !DILocation(line: 2268, column: 29, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16977, file: !3, line: 2267, column: 2)
!16982 = !DILocation(line: 2268, column: 26, scope: !16981)
!16983 = !DILocation(line: 2271, column: 28, scope: !16981)
!16984 = !DILocation(line: 2271, column: 26, scope: !16981)
!16985 = !DILocation(line: 2273, column: 9, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 2273, column: 8)
!16987 = !DILocation(line: 2273, column: 8, scope: !16981)
!16988 = !DILocation(line: 2274, column: 6, scope: !16986)
!16989 = !DILocation(line: 2274, column: 40, scope: !16986)
!16990 = !DILocation(line: 2281, column: 7, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2281, column: 7)
!16992 = !DILocation(line: 2281, column: 27, scope: !16991)
!16993 = !DILocation(line: 2282, column: 11, scope: !16991)
!16994 = !DILocation(line: 2282, column: 7, scope: !16991)
!16995 = !DILocation(line: 2283, column: 11, scope: !16991)
!16996 = !DILocation(line: 2284, column: 4, scope: !16991)
!16997 = !DILocation(line: 2284, column: 7, scope: !16991)
!16998 = !DILocation(line: 2285, column: 7, scope: !16991)
!16999 = !DILocation(line: 2286, column: 4, scope: !16991)
!17000 = !DILocation(line: 2286, column: 8, scope: !16991)
!17001 = !DILocation(line: 2287, column: 4, scope: !16991)
!17002 = !DILocation(line: 2287, column: 8, scope: !16991)
!17003 = !DILocation(line: 2288, column: 7, scope: !16991)
!17004 = !DILocation(line: 2288, column: 10, scope: !16991)
!17005 = !DILocation(line: 2289, column: 7, scope: !16991)
!17006 = !DILocation(line: 2289, column: 43, scope: !16991)
!17007 = !DILocation(line: 2289, column: 11, scope: !16991)
!17008 = !DILocation(line: 2290, column: 11, scope: !16991)
!17009 = !DILocation(line: 2290, column: 7, scope: !16991)
!17010 = !DILocation(line: 2291, column: 29, scope: !16991)
!17011 = !DILocation(line: 2291, column: 5, scope: !16991)
!17012 = !DILocation(line: 2293, column: 7, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2293, column: 7)
!17014 = !DILocation(line: 2293, column: 7, scope: !16731)
!17015 = !DILocation(line: 2295, column: 31, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 2294, column: 5)
!17017 = !DILocation(line: 2295, column: 29, scope: !17016)
!17018 = !DILocation(line: 2296, column: 33, scope: !17016)
!17019 = !DILocation(line: 2296, column: 31, scope: !17016)
!17020 = !DILocation(line: 2299, column: 31, scope: !17016)
!17021 = !DILocation(line: 2299, column: 29, scope: !17016)
!17022 = !DILocation(line: 2300, column: 12, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17016, file: !3, line: 2300, column: 11)
!17024 = !DILocation(line: 2300, column: 11, scope: !17016)
!17025 = !DILocation(line: 2302, column: 29, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17023, file: !3, line: 2301, column: 2)
!17027 = !DILocation(line: 2302, column: 4, scope: !17026)
!17028 = !DILocation(line: 2302, column: 27, scope: !17026)
!17029 = !DILocation(line: 2303, column: 28, scope: !17026)
!17030 = !DILocation(line: 2303, column: 4, scope: !17026)
!17031 = !DILocation(line: 2303, column: 26, scope: !17026)
!17032 = !DILocation(line: 2304, column: 2, scope: !17026)
!17033 = !DILocation(line: 2308, column: 31, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 2307, column: 5)
!17035 = !DILocation(line: 2308, column: 29, scope: !17034)
!17036 = !DILocation(line: 2309, column: 31, scope: !17034)
!17037 = !DILocation(line: 2309, column: 29, scope: !17034)
!17038 = !DILocation(line: 2312, column: 7, scope: !16751)
!17039 = !DILocation(line: 2312, column: 27, scope: !16751)
!17040 = !DILocation(line: 2312, column: 7, scope: !16731)
!17041 = !DILocation(line: 2318, column: 29, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2318, column: 11)
!17043 = !DILocation(line: 2318, column: 32, scope: !17042)
!17044 = !DILocation(line: 2318, column: 11, scope: !16750)
!17045 = !DILocation(line: 2320, column: 2, scope: !17042)
!17046 = !DILocation(line: 2320, column: 29, scope: !17042)
!17047 = !DILocation(line: 2325, column: 8, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2325, column: 8)
!17049 = distinct !DILexicalBlock(scope: !17042, file: !3, line: 2322, column: 2)
!17050 = !DILocation(line: 2326, column: 8, scope: !17048)
!17051 = !DILocation(line: 2326, column: 11, scope: !17048)
!17052 = !DILocation(line: 2325, column: 8, scope: !17049)
!17053 = !DILocation(line: 2327, column: 39, scope: !17048)
!17054 = !DILocation(line: 2327, column: 6, scope: !17048)
!17055 = !DILocation(line: 2330, column: 9, scope: !17049)
!17056 = !DILocation(line: 2330, column: 36, scope: !17049)
!17057 = !DILocation(line: 0, scope: !17049)
!17058 = !DILocation(line: 2330, column: 6, scope: !17049)
!17059 = !DILocation(line: 2330, column: 39, scope: !17049)
!17060 = !DILocation(line: 2329, column: 33, scope: !17049)
!17061 = !DILocation(line: 2329, column: 31, scope: !17049)
!17062 = !DILocation(line: 2334, column: 9, scope: !17049)
!17063 = !DILocation(line: 2335, column: 9, scope: !17049)
!17064 = !DILocation(line: 2334, column: 6, scope: !17049)
!17065 = !DILocation(line: 2335, column: 12, scope: !17049)
!17066 = !DILocation(line: 2333, column: 6, scope: !17049)
!17067 = !DILocation(line: 2338, column: 11, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2338, column: 11)
!17069 = !DILocation(line: 2338, column: 11, scope: !16750)
!17070 = !DILocation(line: 2342, column: 4, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 2339, column: 2)
!17072 = !DILocation(line: 2342, column: 34, scope: !17071)
!17073 = !DILocation(line: 2343, column: 35, scope: !17071)
!17074 = !DILocation(line: 2343, column: 33, scope: !17071)
!17075 = !DILocation(line: 2344, column: 38, scope: !17071)
!17076 = !DILocation(line: 2345, column: 8, scope: !17071)
!17077 = !DILocation(line: 2346, column: 41, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17071, file: !3, line: 2345, column: 8)
!17079 = !DILocation(line: 2346, column: 6, scope: !17078)
!17080 = !DILocation(line: 2349, column: 10, scope: !17078)
!17081 = !DILocation(line: 2349, column: 8, scope: !17078)
!17082 = !DILocation(line: 2353, column: 11, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2353, column: 11)
!17084 = !DILocation(line: 2354, column: 4, scope: !17083)
!17085 = !DILocation(line: 2354, column: 8, scope: !17083)
!17086 = !DILocation(line: 2353, column: 11, scope: !16750)
!17087 = !DILocation(line: 2356, column: 4, scope: !17083)
!17088 = !DILocation(line: 2355, column: 2, scope: !17083)
!17089 = !DILocation(line: 2358, column: 11, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2358, column: 11)
!17091 = !DILocation(line: 2359, column: 4, scope: !17090)
!17092 = !DILocation(line: 2359, column: 8, scope: !17090)
!17093 = !DILocation(line: 2358, column: 11, scope: !16750)
!17094 = !DILocation(line: 2361, column: 4, scope: !17090)
!17095 = !DILocation(line: 2360, column: 2, scope: !17090)
!17096 = !DILocation(line: 2364, column: 11, scope: !16750)
!17097 = !DILocation(line: 2367, column: 28, scope: !16748)
!17098 = !DILocation(line: 2367, column: 4, scope: !16748)
!17099 = !DILocation(line: 2367, column: 26, scope: !16748)
!17100 = !DILocation(line: 2368, column: 29, scope: !16748)
!17101 = !DILocation(line: 2368, column: 27, scope: !16748)
!17102 = !DILocation(line: 2369, column: 37, scope: !16748)
!17103 = !DILocation(line: 2369, column: 4, scope: !16748)
!17104 = !DILocation(line: 2369, column: 35, scope: !16748)
!17105 = !DILocation(line: 2370, column: 32, scope: !16748)
!17106 = !DILocation(line: 2370, column: 4, scope: !16748)
!17107 = !DILocation(line: 2370, column: 30, scope: !16748)
!17108 = !DILocation(line: 2371, column: 30, scope: !16748)
!17109 = !DILocation(line: 2371, column: 4, scope: !16748)
!17110 = !DILocation(line: 2372, column: 42, scope: !16748)
!17111 = !DILocation(line: 2372, column: 31, scope: !16748)
!17112 = !DILocation(line: 2372, column: 4, scope: !16748)
!17113 = !DILocation(line: 2372, column: 29, scope: !16748)
!17114 = !DILocation(line: 0, scope: !16748)
!17115 = !DILocation(line: 2373, column: 9, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !16748, file: !3, line: 2373, column: 4)
!17117 = !DILocation(line: 0, scope: !17116)
!17118 = !DILocation(line: 2373, column: 4, scope: !17116)
!17119 = !DILocation(line: 2374, column: 6, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17116, file: !3, line: 2373, column: 4)
!17121 = !DILocation(line: 2374, column: 23, scope: !17120)
!17122 = !DILocation(line: 2373, column: 47, scope: !17120)
!17123 = !DILocation(line: 2373, column: 4, scope: !17120)
!17124 = distinct !{!17124, !17118, !17125}
!17125 = !DILocation(line: 2374, column: 25, scope: !17116)
!17126 = !DILocation(line: 2377, column: 8, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !16748, file: !3, line: 2377, column: 8)
!17128 = !DILocation(line: 2377, column: 8, scope: !16748)
!17129 = !DILocation(line: 2379, column: 10, scope: !17127)
!17130 = !DILocation(line: 2378, column: 6, scope: !17127)
!17131 = !DILocation(line: 2379, column: 8, scope: !17127)
!17132 = !DILocation(line: 2383, column: 20, scope: !16731)
!17133 = !DILocation(line: 2383, column: 44, scope: !16731)
!17134 = !DILocation(line: 2383, column: 48, scope: !16731)
!17135 = !DILocation(line: 2386, column: 7, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2386, column: 7)
!17137 = !DILocation(line: 0, scope: !17136)
!17138 = !DILocation(line: 2386, column: 7, scope: !16731)
!17139 = !DILocation(line: 2387, column: 25, scope: !17136)
!17140 = !DILocation(line: 2390, column: 7, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2390, column: 7)
!17142 = !DILocation(line: 2387, column: 5, scope: !17136)
!17143 = !DILocation(line: 2388, column: 12, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17136, file: !3, line: 2388, column: 12)
!17145 = !DILocation(line: 2388, column: 12, scope: !17136)
!17146 = !DILocation(line: 2389, column: 25, scope: !17144)
!17147 = !DILocation(line: 2389, column: 5, scope: !17144)
!17148 = !DILocation(line: 0, scope: !17141)
!17149 = !DILocation(line: 2390, column: 7, scope: !16731)
!17150 = !DILocation(line: 2391, column: 31, scope: !17141)
!17151 = !DILocation(line: 2391, column: 5, scope: !17141)
!17152 = !DILocation(line: 2392, column: 12, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17141, file: !3, line: 2392, column: 12)
!17154 = !DILocation(line: 2392, column: 12, scope: !17141)
!17155 = !DILocation(line: 2393, column: 31, scope: !17153)
!17156 = !DILocation(line: 2393, column: 5, scope: !17153)
!17157 = !DILocation(line: 2399, column: 28, scope: !16753)
!17158 = !DILocation(line: 0, scope: !16753)
!17159 = !DILocation(line: 2400, column: 28, scope: !16753)
!17160 = !DILocation(line: 2402, column: 9, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 2402, column: 9)
!17162 = !DILocation(line: 2402, column: 29, scope: !17161)
!17163 = !DILocation(line: 2402, column: 9, scope: !16753)
!17164 = !DILocation(line: 2403, column: 27, scope: !17161)
!17165 = !DILocation(line: 2403, column: 7, scope: !17161)
!17166 = !DILocation(line: 2405, column: 30, scope: !16753)
!17167 = !DILocation(line: 2406, column: 23, scope: !16753)
!17168 = !DILocation(line: 2405, column: 5, scope: !16753)
!17169 = !DILocation(line: 2408, column: 13, scope: !16753)
!17170 = !DILocation(line: 2408, column: 5, scope: !16753)
!17171 = !DILocation(line: 2411, column: 28, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 2409, column: 7)
!17173 = !DILocation(line: 2411, column: 2, scope: !17172)
!17174 = !DILocation(line: 2423, column: 19, scope: !17172)
!17175 = !DILocation(line: 2421, column: 27, scope: !17172)
!17176 = !DILocation(line: 2422, column: 20, scope: !17172)
!17177 = !DILocation(line: 2423, column: 3, scope: !17172)
!17178 = !DILocation(line: 2423, column: 40, scope: !17172)
!17179 = !DILocation(line: 2421, column: 2, scope: !17172)
!17180 = !DILocation(line: 2424, column: 2, scope: !17172)
!17181 = !DILocation(line: 2428, column: 27, scope: !17172)
!17182 = !DILocation(line: 2429, column: 20, scope: !17172)
!17183 = !DILocation(line: 2428, column: 2, scope: !17172)
!17184 = !DILocation(line: 2431, column: 7, scope: !17172)
!17185 = !DILocation(line: 2432, column: 24, scope: !16753)
!17186 = !DILocation(line: 2433, column: 28, scope: !16753)
!17187 = !DILocation(line: 2434, column: 9, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 2434, column: 9)
!17189 = !DILocation(line: 2434, column: 29, scope: !17188)
!17190 = !DILocation(line: 2434, column: 9, scope: !16753)
!17191 = !DILocation(line: 2435, column: 7, scope: !17188)
!17192 = !DILocation(line: 2435, column: 32, scope: !17188)
!17193 = !DILocation(line: 2441, column: 7, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2441, column: 7)
!17195 = !DILocation(line: 2442, column: 7, scope: !17194)
!17196 = !DILocation(line: 2443, column: 4, scope: !17194)
!17197 = !DILocation(line: 2443, column: 28, scope: !17194)
!17198 = !DILocation(line: 2444, column: 8, scope: !17194)
!17199 = !DILocation(line: 2444, column: 11, scope: !17194)
!17200 = !DILocation(line: 2441, column: 7, scope: !16731)
!17201 = !DILocation(line: 2445, column: 5, scope: !17194)
!17202 = !DILocation(line: 2450, column: 7, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !16731, file: !3, line: 2450, column: 7)
!17204 = !DILocation(line: 2450, column: 22, scope: !17203)
!17205 = !DILocation(line: 2451, column: 10, scope: !17203)
!17206 = !DILocation(line: 2451, column: 30, scope: !17203)
!17207 = !DILocation(line: 2451, column: 47, scope: !17203)
!17208 = !DILocation(line: 2451, column: 50, scope: !17203)
!17209 = !DILocation(line: 2450, column: 7, scope: !16731)
!17210 = !DILocation(line: 2452, column: 5, scope: !17203)
!17211 = !DILocation(line: 2453, column: 1, scope: !16731)
!17212 = distinct !DISubprogram(name: "match_builtin_function_types", scope: !3, file: !3, line: 1472, type: !17213, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17215)
!17213 = !DISubroutineType(types: !17214)
!17214 = !{!672, !672, !672}
!17215 = !{!17216, !17217, !17218, !17219, !17220, !17221, !17222, !17223}
!17216 = !DILocalVariable(name: "newtype", arg: 1, scope: !17212, file: !3, line: 1472, type: !672)
!17217 = !DILocalVariable(name: "oldtype", arg: 2, scope: !17212, file: !3, line: 1472, type: !672)
!17218 = !DILocalVariable(name: "newrettype", scope: !17212, file: !3, line: 1474, type: !672)
!17219 = !DILocalVariable(name: "oldrettype", scope: !17212, file: !3, line: 1474, type: !672)
!17220 = !DILocalVariable(name: "newargs", scope: !17212, file: !3, line: 1475, type: !672)
!17221 = !DILocalVariable(name: "oldargs", scope: !17212, file: !3, line: 1475, type: !672)
!17222 = !DILocalVariable(name: "trytype", scope: !17212, file: !3, line: 1476, type: !672)
!17223 = !DILocalVariable(name: "tryargs", scope: !17212, file: !3, line: 1476, type: !672)
!17224 = !DILocation(line: 0, scope: !17212)
!17225 = !DILocation(line: 1479, column: 16, scope: !17212)
!17226 = !DILocation(line: 1480, column: 16, scope: !17212)
!17227 = !DILocation(line: 1482, column: 7, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17212, file: !3, line: 1482, column: 7)
!17229 = !DILocation(line: 1482, column: 33, scope: !17228)
!17230 = !DILocation(line: 1482, column: 30, scope: !17228)
!17231 = !DILocation(line: 1482, column: 7, scope: !17212)
!17232 = !DILocation(line: 1485, column: 13, scope: !17212)
!17233 = !DILocation(line: 1486, column: 13, scope: !17212)
!17234 = !DILocation(line: 1489, column: 3, scope: !17212)
!17235 = !DILocation(line: 1489, column: 10, scope: !17212)
!17236 = !DILocation(line: 1489, column: 18, scope: !17212)
!17237 = !DILocation(line: 1492, column: 4, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 1491, column: 11)
!17239 = distinct !DILexicalBlock(scope: !17212, file: !3, line: 1490, column: 5)
!17240 = !DILocation(line: 1493, column: 8, scope: !17238)
!17241 = !DILocation(line: 1494, column: 4, scope: !17238)
!17242 = !DILocation(line: 1494, column: 8, scope: !17238)
!17243 = !DILocation(line: 1495, column: 4, scope: !17238)
!17244 = !DILocation(line: 1495, column: 7, scope: !17238)
!17245 = !DILocation(line: 0, scope: !17238)
!17246 = !DILocation(line: 1496, column: 10, scope: !17238)
!17247 = !DILocation(line: 1496, column: 7, scope: !17238)
!17248 = !DILocation(line: 1491, column: 11, scope: !17239)
!17249 = !DILocation(line: 1499, column: 17, scope: !17239)
!17250 = !DILocation(line: 1500, column: 17, scope: !17239)
!17251 = distinct !{!17251, !17234, !17252}
!17252 = !DILocation(line: 1501, column: 5, scope: !17212)
!17253 = !DILocation(line: 1503, column: 13, scope: !17212)
!17254 = !DILocation(line: 1504, column: 49, scope: !17212)
!17255 = !DILocation(line: 1504, column: 10, scope: !17212)
!17256 = !DILocation(line: 1504, column: 3, scope: !17212)
!17257 = !DILocation(line: 1505, column: 1, scope: !17212)
!17258 = distinct !DISubprogram(name: "diagnose_arglist_conflict", scope: !3, file: !3, line: 1511, type: !16732, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17259)
!17259 = !{!17260, !17261, !17262, !17263, !17264, !17265}
!17260 = !DILocalVariable(name: "newdecl", arg: 1, scope: !17258, file: !3, line: 1511, type: !672)
!17261 = !DILocalVariable(name: "olddecl", arg: 2, scope: !17258, file: !3, line: 1511, type: !672)
!17262 = !DILocalVariable(name: "newtype", arg: 3, scope: !17258, file: !3, line: 1512, type: !672)
!17263 = !DILocalVariable(name: "oldtype", arg: 4, scope: !17258, file: !3, line: 1512, type: !672)
!17264 = !DILocalVariable(name: "t", scope: !17258, file: !3, line: 1514, type: !672)
!17265 = !DILocalVariable(name: "type", scope: !17266, file: !3, line: 1528, type: !672)
!17266 = distinct !DILexicalBlock(scope: !17267, file: !3, line: 1527, column: 5)
!17267 = distinct !DILexicalBlock(scope: !17268, file: !3, line: 1526, column: 3)
!17268 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 1526, column: 3)
!17269 = !DILocation(line: 0, scope: !17258)
!17270 = !DILocation(line: 1516, column: 7, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 1516, column: 7)
!17272 = !DILocation(line: 1516, column: 27, scope: !17271)
!17273 = !DILocation(line: 1517, column: 7, scope: !17271)
!17274 = !DILocation(line: 1517, column: 22, scope: !17271)
!17275 = !DILocation(line: 1517, column: 43, scope: !17271)
!17276 = !DILocation(line: 1517, column: 11, scope: !17271)
!17277 = !DILocation(line: 1518, column: 7, scope: !17271)
!17278 = !DILocation(line: 1518, column: 13, scope: !17271)
!17279 = !DILocation(line: 1518, column: 38, scope: !17271)
!17280 = !DILocation(line: 1518, column: 43, scope: !17271)
!17281 = !DILocation(line: 1518, column: 46, scope: !17271)
!17282 = !DILocation(line: 1518, column: 69, scope: !17271)
!17283 = !DILocation(line: 1519, column: 5, scope: !17271)
!17284 = !DILocation(line: 1520, column: 6, scope: !17271)
!17285 = !DILocation(line: 1520, column: 31, scope: !17271)
!17286 = !DILocation(line: 1520, column: 36, scope: !17271)
!17287 = !DILocation(line: 1520, column: 39, scope: !17271)
!17288 = !DILocation(line: 1520, column: 62, scope: !17271)
!17289 = !DILocation(line: 1516, column: 7, scope: !17258)
!17290 = !DILocation(line: 1524, column: 7, scope: !17258)
!17291 = !DILocation(line: 1525, column: 9, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 1524, column: 7)
!17293 = !DILocation(line: 1525, column: 5, scope: !17292)
!17294 = !DILocation(line: 1526, column: 3, scope: !17258)
!17295 = !DILocation(line: 1526, column: 3, scope: !17268)
!17296 = !DILocation(line: 1528, column: 19, scope: !17266)
!17297 = !DILocation(line: 0, scope: !17266)
!17298 = !DILocation(line: 1530, column: 11, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 1530, column: 11)
!17300 = !DILocation(line: 1530, column: 26, scope: !17299)
!17301 = !DILocation(line: 1531, column: 4, scope: !17299)
!17302 = !DILocation(line: 1531, column: 7, scope: !17299)
!17303 = !DILocation(line: 1531, column: 35, scope: !17299)
!17304 = !DILocation(line: 1531, column: 32, scope: !17299)
!17305 = !DILocation(line: 1530, column: 11, scope: !17266)
!17306 = !DILocation(line: 1533, column: 12, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17299, file: !3, line: 1532, column: 2)
!17308 = !DILocation(line: 1533, column: 4, scope: !17307)
!17309 = !DILocation(line: 1535, column: 4, scope: !17307)
!17310 = !DILocation(line: 1538, column: 11, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 1538, column: 11)
!17312 = !DILocation(line: 1538, column: 37, scope: !17311)
!17313 = !DILocation(line: 1538, column: 11, scope: !17266)
!17314 = !DILocation(line: 1540, column: 12, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17311, file: !3, line: 1539, column: 2)
!17316 = !DILocation(line: 1540, column: 4, scope: !17315)
!17317 = !DILocation(line: 1542, column: 4, scope: !17315)
!17318 = !DILocation(line: 1526, column: 17, scope: !17267)
!17319 = !DILocation(line: 1526, column: 3, scope: !17267)
!17320 = distinct !{!17320, !17295, !17321}
!17321 = !DILocation(line: 1544, column: 5, scope: !17268)
!17322 = !DILocation(line: 1545, column: 1, scope: !17258)
!17323 = distinct !DISubprogram(name: "validate_proto_after_old_defn", scope: !3, file: !3, line: 1552, type: !17324, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17326)
!17324 = !DISubroutineType(types: !17325)
!17325 = !{!619, !672, !672, !672}
!17326 = !{!17327, !17328, !17329, !17330, !17331, !17332, !17333, !17337}
!17327 = !DILocalVariable(name: "newdecl", arg: 1, scope: !17323, file: !3, line: 1552, type: !672)
!17328 = !DILocalVariable(name: "newtype", arg: 2, scope: !17323, file: !3, line: 1552, type: !672)
!17329 = !DILocalVariable(name: "oldtype", arg: 3, scope: !17323, file: !3, line: 1552, type: !672)
!17330 = !DILocalVariable(name: "newargs", scope: !17323, file: !3, line: 1554, type: !672)
!17331 = !DILocalVariable(name: "oldargs", scope: !17323, file: !3, line: 1554, type: !672)
!17332 = !DILocalVariable(name: "i", scope: !17323, file: !3, line: 1555, type: !620)
!17333 = !DILocalVariable(name: "oldargtype", scope: !17334, file: !3, line: 1565, type: !672)
!17334 = distinct !DILexicalBlock(scope: !17335, file: !3, line: 1564, column: 5)
!17335 = distinct !DILexicalBlock(scope: !17336, file: !3, line: 1563, column: 3)
!17336 = distinct !DILexicalBlock(scope: !17323, file: !3, line: 1563, column: 3)
!17337 = !DILocalVariable(name: "newargtype", scope: !17334, file: !3, line: 1566, type: !672)
!17338 = !DILocation(line: 0, scope: !17323)
!17339 = !DILocation(line: 1559, column: 13, scope: !17323)
!17340 = !DILocation(line: 1560, column: 13, scope: !17323)
!17341 = !DILocation(line: 1563, column: 3, scope: !17323)
!17342 = !DILocation(line: 1561, column: 5, scope: !17323)
!17343 = !DILocation(line: 1559, column: 11, scope: !17323)
!17344 = !DILocation(line: 1560, column: 11, scope: !17323)
!17345 = !DILocation(line: 1565, column: 25, scope: !17334)
!17346 = !DILocation(line: 0, scope: !17334)
!17347 = !DILocation(line: 1566, column: 25, scope: !17334)
!17348 = !DILocation(line: 1568, column: 25, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 1568, column: 11)
!17350 = !DILocation(line: 1568, column: 22, scope: !17349)
!17351 = !DILocation(line: 1568, column: 55, scope: !17349)
!17352 = !DILocation(line: 1568, column: 41, scope: !17349)
!17353 = !DILocation(line: 1571, column: 20, scope: !17334)
!17354 = !DILocation(line: 1572, column: 20, scope: !17334)
!17355 = !DILocation(line: 1574, column: 11, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 1574, column: 11)
!17357 = !DILocation(line: 1574, column: 42, scope: !17356)
!17358 = !DILocation(line: 1574, column: 39, scope: !17356)
!17359 = !DILocation(line: 1579, column: 11, scope: !17334)
!17360 = !DILocation(line: 1581, column: 4, scope: !17361)
!17361 = distinct !DILexicalBlock(scope: !17362, file: !3, line: 1580, column: 2)
!17362 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 1579, column: 11)
!17363 = !DILocation(line: 1583, column: 4, scope: !17361)
!17364 = !DILocation(line: 1585, column: 16, scope: !17362)
!17365 = !DILocation(line: 1587, column: 4, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17367, file: !3, line: 1586, column: 2)
!17367 = distinct !DILexicalBlock(scope: !17362, file: !3, line: 1585, column: 16)
!17368 = !DILocation(line: 1589, column: 4, scope: !17366)
!17369 = !DILocation(line: 1594, column: 17, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17367, file: !3, line: 1594, column: 16)
!17371 = !DILocation(line: 1594, column: 16, scope: !17367)
!17372 = !DILocation(line: 1596, column: 4, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17370, file: !3, line: 1595, column: 2)
!17374 = !DILocation(line: 1599, column: 4, scope: !17373)
!17375 = !DILocation(line: 1602, column: 17, scope: !17334)
!17376 = !DILocation(line: 1603, column: 17, scope: !17334)
!17377 = !DILocation(line: 1604, column: 8, scope: !17334)
!17378 = !DILocation(line: 1605, column: 5, scope: !17335)
!17379 = distinct !{!17379, !17380, !17381}
!17380 = !DILocation(line: 1563, column: 3, scope: !17336)
!17381 = !DILocation(line: 1605, column: 5, scope: !17336)
!17382 = !DILocation(line: 1609, column: 3, scope: !17323)
!17383 = !DILocation(line: 1611, column: 3, scope: !17323)
!17384 = !DILocation(line: 1613, column: 1, scope: !17323)
!17385 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_gc_alloc", scope: !3, file: !3, line: 303, type: !17386, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17388)
!17386 = !DISubroutineType(types: !17387)
!17387 = !{!2098, !620}
!17388 = !{!17389}
!17389 = !DILocalVariable(name: "alloc_", arg: 1, scope: !17385, file: !3, line: 303, type: !620)
!17390 = !DILocation(line: 0, scope: !17385)
!17391 = !DILocation(line: 303, column: 1, scope: !17385)
!17392 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_gc_reserve", scope: !3, file: !3, line: 303, type: !17393, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17395)
!17393 = !DISubroutineType(types: !17394)
!17394 = !{!620, !4605, !620}
!17395 = !{!17396, !17397, !17398}
!17396 = !DILocalVariable(name: "vec_", arg: 1, scope: !17392, file: !3, line: 303, type: !4605)
!17397 = !DILocalVariable(name: "alloc_", arg: 2, scope: !17392, file: !3, line: 303, type: !620)
!17398 = !DILocalVariable(name: "extend", scope: !17392, file: !3, line: 303, type: !620)
!17399 = !DILocation(line: 0, scope: !17392)
!17400 = !DILocation(line: 303, column: 1, scope: !17392)
!17401 = !DILocation(line: 303, column: 1, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17392, file: !3, line: 303, column: 1)
!17403 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_base_quick_push", scope: !3, file: !3, line: 302, type: !17404, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17407)
!17404 = !DISubroutineType(types: !17405)
!17405 = !{!3731, !17406, !2110}
!17406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!17407 = !{!17408, !17409, !17410}
!17408 = !DILocalVariable(name: "vec_", arg: 1, scope: !17403, file: !3, line: 302, type: !17406)
!17409 = !DILocalVariable(name: "obj_", arg: 2, scope: !17403, file: !3, line: 302, type: !2110)
!17410 = !DILocalVariable(name: "slot_", scope: !17403, file: !3, line: 302, type: !3731)
!17411 = !DILocation(line: 0, scope: !17403)
!17412 = !DILocation(line: 302, column: 1, scope: !17403)
!17413 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_base_space", scope: !3, file: !3, line: 302, type: !17414, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17416)
!17414 = !DISubroutineType(types: !17415)
!17415 = !{!620, !17406, !620}
!17416 = !{!17417, !17418}
!17417 = !DILocalVariable(name: "vec_", arg: 1, scope: !17413, file: !3, line: 302, type: !17406)
!17418 = !DILocalVariable(name: "alloc_", arg: 2, scope: !17413, file: !3, line: 302, type: !620)
!17419 = !DILocation(line: 0, scope: !17413)
!17420 = !DILocation(line: 302, column: 1, scope: !17413)
!17421 = distinct !DISubprogram(name: "VEC_c_goto_bindings_p_base_truncate", scope: !3, file: !3, line: 302, type: !17422, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17424)
!17422 = !DISubroutineType(types: !17423)
!17423 = !{null, !17406, !7}
!17424 = !{!17425, !17426}
!17425 = !DILocalVariable(name: "vec_", arg: 1, scope: !17421, file: !3, line: 302, type: !17406)
!17426 = !DILocalVariable(name: "size_", arg: 2, scope: !17421, file: !3, line: 302, type: !7)
!17427 = !DILocation(line: 0, scope: !17421)
!17428 = !DILocation(line: 302, column: 1, scope: !17421)
!17429 = !DILocation(line: 302, column: 1, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17421, file: !3, line: 302, column: 1)
!17431 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !17432, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17436)
!17432 = !DISubroutineType(types: !17433)
!17433 = !{!7, !17434}
!17434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17435, size: 64)
!17435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!17436 = !{!17437}
!17437 = !DILocalVariable(name: "vec_", arg: 1, scope: !17431, file: !135, line: 1537, type: !17434)
!17438 = !DILocation(line: 0, scope: !17431)
!17439 = !DILocation(line: 1537, column: 1, scope: !17431)
!17440 = distinct !DISubprogram(name: "VEC_constructor_elt_base_last", scope: !135, file: !135, line: 1537, type: !17441, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17445)
!17441 = !DISubroutineType(types: !17442)
!17442 = !{!17443, !17444}
!17443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!17444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!17445 = !{!17446}
!17446 = !DILocalVariable(name: "vec_", arg: 1, scope: !17440, file: !135, line: 1537, type: !17444)
!17447 = !DILocation(line: 0, scope: !17440)
!17448 = !DILocation(line: 1537, column: 1, scope: !17440)
!17449 = distinct !DISubprogram(name: "warn_variable_length_array", scope: !3, file: !3, line: 4653, type: !3480, scopeLine: 4654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17450)
!17450 = !{!17451, !17452, !17453}
!17451 = !DILocalVariable(name: "name", arg: 1, scope: !17449, file: !3, line: 4653, type: !672)
!17452 = !DILocalVariable(name: "size", arg: 2, scope: !17449, file: !3, line: 4653, type: !672)
!17453 = !DILocalVariable(name: "const_size", scope: !17449, file: !3, line: 4655, type: !620)
!17454 = !DILocation(line: 0, scope: !17449)
!17455 = !DILocation(line: 4655, column: 20, scope: !17449)
!17456 = !DILocation(line: 4657, column: 8, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 4657, column: 7)
!17458 = !DILocation(line: 4657, column: 23, scope: !17457)
!17459 = !DILocation(line: 4657, column: 20, scope: !17457)
!17460 = !DILocation(line: 4657, column: 35, scope: !17457)
!17461 = !DILocation(line: 4657, column: 44, scope: !17457)
!17462 = !DILocation(line: 4659, column: 11, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 4659, column: 11)
!17464 = distinct !DILexicalBlock(scope: !17457, file: !3, line: 4658, column: 5)
!17465 = !DILocation(line: 0, scope: !17463)
!17466 = !DILocation(line: 4659, column: 11, scope: !17464)
!17467 = !DILocation(line: 4661, column: 8, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17463, file: !3, line: 4660, column: 2)
!17469 = !DILocation(line: 4662, column: 6, scope: !17470)
!17470 = distinct !DILexicalBlock(scope: !17468, file: !3, line: 4661, column: 8)
!17471 = !DILocation(line: 4667, column: 6, scope: !17470)
!17472 = !DILocation(line: 4672, column: 8, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17463, file: !3, line: 4671, column: 2)
!17474 = !DILocation(line: 4673, column: 6, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17473, file: !3, line: 4672, column: 8)
!17476 = !DILocation(line: 4677, column: 6, scope: !17475)
!17477 = !DILocation(line: 4680, column: 21, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17457, file: !3, line: 4680, column: 12)
!17479 = !DILocation(line: 4680, column: 12, scope: !17457)
!17480 = !DILocation(line: 4682, column: 11, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17482, file: !3, line: 4682, column: 11)
!17482 = distinct !DILexicalBlock(scope: !17478, file: !3, line: 4681, column: 5)
!17483 = !DILocation(line: 0, scope: !17481)
!17484 = !DILocation(line: 4682, column: 11, scope: !17482)
!17485 = !DILocation(line: 4684, column: 8, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 4683, column: 9)
!17487 = !DILocation(line: 4685, column: 6, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17486, file: !3, line: 4684, column: 8)
!17489 = !DILocation(line: 4689, column: 6, scope: !17488)
!17490 = !DILocation(line: 4694, column: 8, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 4693, column: 2)
!17492 = !DILocation(line: 4695, column: 6, scope: !17493)
!17493 = distinct !DILexicalBlock(scope: !17491, file: !3, line: 4694, column: 8)
!17494 = !DILocation(line: 4699, column: 6, scope: !17493)
!17495 = !DILocation(line: 4703, column: 1, scope: !17449)
!17496 = distinct !DISubprogram(name: "c_variable_size", scope: !3, file: !3, line: 4713, type: !2812, scopeLine: 4714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17497)
!17497 = !{!17498, !17499}
!17498 = !DILocalVariable(name: "size", arg: 1, scope: !17496, file: !3, line: 4713, type: !672)
!17499 = !DILocalVariable(name: "save", scope: !17496, file: !3, line: 4715, type: !672)
!17500 = !DILocation(line: 0, scope: !17496)
!17501 = !DILocation(line: 4717, column: 7, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 4717, column: 7)
!17503 = !DILocation(line: 4717, column: 7, scope: !17496)
!17504 = !DILocation(line: 4720, column: 10, scope: !17496)
!17505 = !DILocation(line: 4722, column: 10, scope: !17496)
!17506 = !DILocation(line: 4724, column: 7, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 4724, column: 7)
!17508 = !DILocation(line: 4724, column: 12, scope: !17507)
!17509 = !DILocation(line: 4724, column: 21, scope: !17507)
!17510 = !DILocation(line: 4724, column: 15, scope: !17507)
!17511 = !DILocation(line: 4724, column: 7, scope: !17496)
!17512 = !DILocation(line: 4727, column: 8, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 4727, column: 7)
!17514 = !DILocation(line: 4727, column: 7, scope: !17496)
!17515 = !DILocation(line: 4728, column: 5, scope: !17513)
!17516 = !DILocation(line: 4731, column: 1, scope: !17496)
!17517 = distinct !DISubprogram(name: "grokparms", scope: !3, file: !3, line: 6056, type: !17518, scopeLine: 6057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17520)
!17518 = !DISubroutineType(types: !17519)
!17519 = !{!672, !1622, !619}
!17520 = !{!17521, !17522, !17523, !17524, !17528, !17529, !17530, !17531}
!17521 = !DILocalVariable(name: "arg_info", arg: 1, scope: !17517, file: !3, line: 6056, type: !1622)
!17522 = !DILocalVariable(name: "funcdef_flag", arg: 2, scope: !17517, file: !3, line: 6056, type: !619)
!17523 = !DILocalVariable(name: "arg_types", scope: !17517, file: !3, line: 6058, type: !672)
!17524 = !DILocalVariable(name: "parm", scope: !17525, file: !3, line: 6085, type: !672)
!17525 = distinct !DILexicalBlock(scope: !17526, file: !3, line: 6084, column: 5)
!17526 = distinct !DILexicalBlock(scope: !17527, file: !3, line: 6074, column: 12)
!17527 = distinct !DILexicalBlock(scope: !17517, file: !3, line: 6071, column: 7)
!17528 = !DILocalVariable(name: "type", scope: !17525, file: !3, line: 6085, type: !672)
!17529 = !DILocalVariable(name: "typelt", scope: !17525, file: !3, line: 6085, type: !672)
!17530 = !DILocalVariable(name: "parmno", scope: !17525, file: !3, line: 6086, type: !7)
!17531 = !DILocalVariable(name: "errmsg", scope: !17525, file: !3, line: 6087, type: !625)
!17532 = !DILocation(line: 0, scope: !17517)
!17533 = !DILocation(line: 6058, column: 30, scope: !17517)
!17534 = !DILocation(line: 6060, column: 7, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17517, file: !3, line: 6060, column: 7)
!17536 = !DILocation(line: 6060, column: 20, scope: !17535)
!17537 = !DILocation(line: 6060, column: 33, scope: !17535)
!17538 = !DILocation(line: 6060, column: 23, scope: !17535)
!17539 = !DILocation(line: 6060, column: 7, scope: !17517)
!17540 = !DILocation(line: 6064, column: 7, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17535, file: !3, line: 6061, column: 5)
!17542 = !DILocation(line: 6065, column: 5, scope: !17541)
!17543 = !DILocation(line: 6067, column: 17, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17517, file: !3, line: 6067, column: 7)
!17545 = !DILocation(line: 6067, column: 26, scope: !17544)
!17546 = !DILocation(line: 6067, column: 22, scope: !17544)
!17547 = !DILocation(line: 6067, column: 43, scope: !17544)
!17548 = !DILocation(line: 6067, column: 7, scope: !17517)
!17549 = !DILocation(line: 6068, column: 5, scope: !17544)
!17550 = !DILocation(line: 6071, column: 20, scope: !17527)
!17551 = !DILocation(line: 6071, column: 17, scope: !17527)
!17552 = !DILocation(line: 6071, column: 7, scope: !17517)
!17553 = !DILocation(line: 6074, column: 12, scope: !17526)
!17554 = !DILocation(line: 6074, column: 22, scope: !17526)
!17555 = !DILocation(line: 6074, column: 25, scope: !17526)
!17556 = !DILocation(line: 6074, column: 60, scope: !17526)
!17557 = !DILocation(line: 6074, column: 12, scope: !17527)
!17558 = !DILocation(line: 6076, column: 11, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17526, file: !3, line: 6075, column: 5)
!17560 = !DILocation(line: 6077, column: 11, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17559, file: !3, line: 6076, column: 11)
!17562 = !DILocation(line: 6077, column: 2, scope: !17561)
!17563 = !DILocation(line: 6079, column: 35, scope: !17559)
!17564 = !DILocation(line: 6079, column: 23, scope: !17559)
!17565 = !DILocation(line: 6080, column: 23, scope: !17559)
!17566 = !DILocation(line: 6081, column: 7, scope: !17559)
!17567 = !DILocation(line: 6098, column: 29, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17525, file: !3, line: 6098, column: 7)
!17569 = !DILocation(line: 0, scope: !17525)
!17570 = !DILocation(line: 6098, column: 12, scope: !17568)
!17571 = !DILocation(line: 6058, column: 8, scope: !17517)
!17572 = !DILocation(line: 0, scope: !17568)
!17573 = !DILocation(line: 6098, column: 7, scope: !17568)
!17574 = !DILocation(line: 6102, column: 11, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 6101, column: 2)
!17576 = distinct !DILexicalBlock(scope: !17568, file: !3, line: 6098, column: 7)
!17577 = !DILocation(line: 6103, column: 16, scope: !17578)
!17578 = distinct !DILexicalBlock(scope: !17575, file: !3, line: 6103, column: 8)
!17579 = !DILocation(line: 6103, column: 13, scope: !17578)
!17580 = !DILocation(line: 6103, column: 8, scope: !17575)
!17581 = !DILocation(line: 6106, column: 9, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17575, file: !3, line: 6106, column: 8)
!17583 = !DILocation(line: 6106, column: 8, scope: !17575)
!17584 = !DILocation(line: 6123, column: 17, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17586, file: !3, line: 6123, column: 17)
!17586 = distinct !DILexicalBlock(scope: !17587, file: !3, line: 6108, column: 12)
!17587 = distinct !DILexicalBlock(scope: !17582, file: !3, line: 6107, column: 6)
!17588 = !DILocation(line: 6123, column: 17, scope: !17586)
!17589 = !DILocation(line: 6125, column: 9, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17591, file: !3, line: 6125, column: 9)
!17591 = distinct !DILexicalBlock(scope: !17585, file: !3, line: 6124, column: 3)
!17592 = !DILocation(line: 6125, column: 9, scope: !17591)
!17593 = !DILocation(line: 6126, column: 19, scope: !17590)
!17594 = !DILocation(line: 6126, column: 7, scope: !17590)
!17595 = !DILocation(line: 6130, column: 19, scope: !17590)
!17596 = !DILocation(line: 6130, column: 7, scope: !17590)
!17597 = !DILocation(line: 6136, column: 21, scope: !17575)
!17598 = !DILocation(line: 6136, column: 13, scope: !17575)
!17599 = !DILocation(line: 6137, column: 8, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17575, file: !3, line: 6137, column: 8)
!17601 = !DILocation(line: 6137, column: 8, scope: !17575)
!17602 = !DILocation(line: 6139, column: 8, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17600, file: !3, line: 6138, column: 6)
!17604 = !DILocation(line: 6140, column: 30, scope: !17603)
!17605 = !DILocation(line: 6140, column: 28, scope: !17603)
!17606 = !DILocation(line: 6141, column: 8, scope: !17603)
!17607 = !DILocation(line: 6141, column: 25, scope: !17603)
!17608 = !DILocation(line: 6143, column: 6, scope: !17603)
!17609 = !DILocation(line: 6145, column: 8, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17575, file: !3, line: 6145, column: 8)
!17611 = !DILocation(line: 6145, column: 25, scope: !17610)
!17612 = !DILocation(line: 6145, column: 28, scope: !17610)
!17613 = !DILocation(line: 6145, column: 8, scope: !17575)
!17614 = !DILocation(line: 6146, column: 6, scope: !17610)
!17615 = !DILocation(line: 6100, column: 12, scope: !17576)
!17616 = !DILocation(line: 6100, column: 40, scope: !17576)
!17617 = !DILocation(line: 6100, column: 67, scope: !17576)
!17618 = !DILocation(line: 6098, column: 7, scope: !17576)
!17619 = distinct !{!17619, !17573, !17620}
!17620 = !DILocation(line: 6147, column: 2, scope: !17568)
!17621 = !DILocation(line: 6150, column: 1, scope: !17517)
!17622 = !DILocation(line: 6110, column: 9, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17624, file: !3, line: 6110, column: 9)
!17624 = distinct !DILexicalBlock(scope: !17586, file: !3, line: 6109, column: 3)
!17625 = !DILocation(line: 6110, column: 9, scope: !17624)
!17626 = !DILocation(line: 6111, column: 17, scope: !17623)
!17627 = !DILocation(line: 6111, column: 7, scope: !17623)
!17628 = !DILocation(line: 6115, column: 17, scope: !17623)
!17629 = !DILocation(line: 6115, column: 7, scope: !17623)
!17630 = !DILocation(line: 6119, column: 27, scope: !17624)
!17631 = !DILocation(line: 6119, column: 25, scope: !17624)
!17632 = !DILocation(line: 6120, column: 5, scope: !17624)
!17633 = !DILocation(line: 6120, column: 22, scope: !17624)
!17634 = !DILocation(line: 6122, column: 3, scope: !17624)
!17635 = !DILocation(line: 0, scope: !17527)
!17636 = distinct !DISubprogram(name: "check_bitfield_type_and_width", scope: !3, file: !3, line: 4566, type: !17637, scopeLine: 4567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17639)
!17637 = !DISubroutineType(types: !17638)
!17638 = !{null, !996, !996, !672}
!17639 = !{!17640, !17641, !17642, !17643, !17644, !17645, !17646, !17647}
!17640 = !DILocalVariable(name: "type", arg: 1, scope: !17636, file: !3, line: 4566, type: !996)
!17641 = !DILocalVariable(name: "width", arg: 2, scope: !17636, file: !3, line: 4566, type: !996)
!17642 = !DILocalVariable(name: "orig_name", arg: 3, scope: !17636, file: !3, line: 4566, type: !672)
!17643 = !DILocalVariable(name: "type_mv", scope: !17636, file: !3, line: 4568, type: !672)
!17644 = !DILocalVariable(name: "max_width", scope: !17636, file: !3, line: 4569, type: !7)
!17645 = !DILocalVariable(name: "w", scope: !17636, file: !3, line: 4570, type: !689)
!17646 = !DILocalVariable(name: "name", scope: !17636, file: !3, line: 4571, type: !625)
!17647 = !DILocalVariable(name: "lt", scope: !17648, file: !3, line: 4640, type: !1725)
!17648 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 4639, column: 5)
!17649 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 4638, column: 7)
!17650 = !DILocation(line: 0, scope: !17636)
!17651 = !DILocation(line: 4571, column: 23, scope: !17636)
!17652 = !DILocation(line: 4572, column: 33, scope: !17636)
!17653 = !DILocation(line: 4572, column: 11, scope: !17636)
!17654 = !DILocation(line: 4577, column: 8, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 4577, column: 7)
!17656 = !DILocation(line: 4577, column: 7, scope: !17636)
!17657 = !DILocation(line: 4579, column: 7, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 4578, column: 5)
!17659 = !DILocation(line: 4580, column: 16, scope: !17658)
!17660 = !DILocation(line: 4580, column: 14, scope: !17658)
!17661 = !DILocation(line: 4581, column: 5, scope: !17658)
!17662 = !DILocation(line: 4584, column: 11, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4584, column: 11)
!17664 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 4583, column: 5)
!17665 = !DILocation(line: 4584, column: 30, scope: !17663)
!17666 = !DILocation(line: 4584, column: 11, scope: !17664)
!17667 = !DILocation(line: 4586, column: 13, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17663, file: !3, line: 4585, column: 2)
!17669 = !DILocation(line: 4586, column: 11, scope: !17668)
!17670 = !DILocation(line: 4587, column: 8, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17668, file: !3, line: 4587, column: 8)
!17672 = !DILocation(line: 4587, column: 27, scope: !17671)
!17673 = !DILocation(line: 4587, column: 8, scope: !17668)
!17674 = !DILocation(line: 4588, column: 15, scope: !17671)
!17675 = !DILocation(line: 4588, column: 6, scope: !17671)
!17676 = !DILocation(line: 4592, column: 11, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4592, column: 11)
!17678 = !DILocation(line: 4592, column: 30, scope: !17677)
!17679 = !DILocation(line: 4592, column: 11, scope: !17664)
!17680 = !DILocation(line: 4594, column: 4, scope: !17681)
!17681 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 4593, column: 2)
!17682 = !DILocation(line: 4595, column: 13, scope: !17681)
!17683 = !DILocation(line: 4595, column: 11, scope: !17681)
!17684 = !DILocation(line: 4596, column: 2, scope: !17681)
!17685 = !DILocation(line: 4597, column: 36, scope: !17664)
!17686 = !DILocation(line: 4597, column: 7, scope: !17664)
!17687 = !DILocation(line: 4598, column: 29, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4598, column: 11)
!17689 = !DILocation(line: 4598, column: 11, scope: !17688)
!17690 = !DILocation(line: 4598, column: 37, scope: !17688)
!17691 = !DILocation(line: 4598, column: 11, scope: !17664)
!17692 = !DILocation(line: 4600, column: 4, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17688, file: !3, line: 4599, column: 2)
!17694 = !DILocation(line: 4601, column: 13, scope: !17693)
!17695 = !DILocation(line: 4601, column: 11, scope: !17693)
!17696 = !DILocation(line: 4602, column: 2, scope: !17693)
!17697 = !DILocation(line: 4603, column: 31, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17688, file: !3, line: 4603, column: 16)
!17699 = !DILocation(line: 4603, column: 16, scope: !17698)
!17700 = !DILocation(line: 4603, column: 42, scope: !17698)
!17701 = !DILocation(line: 4603, column: 39, scope: !17698)
!17702 = !DILocation(line: 4605, column: 4, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17698, file: !3, line: 4604, column: 2)
!17704 = !DILocation(line: 4606, column: 13, scope: !17703)
!17705 = !DILocation(line: 4606, column: 11, scope: !17703)
!17706 = !DILocation(line: 4607, column: 2, scope: !17703)
!17707 = !DILocation(line: 4611, column: 7, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 4611, column: 7)
!17709 = !DILocation(line: 4611, column: 25, scope: !17708)
!17710 = !DILocation(line: 4612, column: 7, scope: !17708)
!17711 = !DILocation(line: 4612, column: 28, scope: !17708)
!17712 = !DILocation(line: 4613, column: 7, scope: !17708)
!17713 = !DILocation(line: 4613, column: 28, scope: !17708)
!17714 = !DILocation(line: 4611, column: 7, scope: !17636)
!17715 = !DILocation(line: 4615, column: 7, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17708, file: !3, line: 4614, column: 5)
!17717 = !DILocation(line: 4616, column: 15, scope: !17716)
!17718 = !DILocation(line: 4616, column: 13, scope: !17716)
!17719 = !DILocation(line: 4617, column: 5, scope: !17716)
!17720 = !DILocation(line: 4619, column: 13, scope: !17636)
!17721 = !DILocation(line: 4620, column: 8, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 4620, column: 7)
!17723 = !DILocation(line: 4621, column: 21, scope: !17722)
!17724 = !DILocation(line: 4621, column: 18, scope: !17722)
!17725 = !DILocation(line: 4621, column: 7, scope: !17722)
!17726 = !DILocation(line: 4622, column: 21, scope: !17722)
!17727 = !DILocation(line: 4622, column: 18, scope: !17722)
!17728 = !DILocation(line: 4623, column: 21, scope: !17722)
!17729 = !DILocation(line: 4623, column: 18, scope: !17722)
!17730 = !DILocation(line: 4624, column: 14, scope: !17722)
!17731 = !DILocation(line: 4624, column: 5, scope: !17722)
!17732 = !DILocation(line: 4627, column: 15, scope: !17636)
!17733 = !DILocation(line: 4629, column: 29, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 4629, column: 7)
!17735 = !DILocation(line: 4629, column: 37, scope: !17734)
!17736 = !DILocation(line: 4629, column: 11, scope: !17734)
!17737 = !DILocation(line: 4629, column: 9, scope: !17734)
!17738 = !DILocation(line: 4629, column: 7, scope: !17636)
!17739 = !DILocation(line: 4631, column: 7, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 4630, column: 5)
!17741 = !DILocation(line: 4633, column: 16, scope: !17740)
!17742 = !DILocation(line: 4633, column: 14, scope: !17740)
!17743 = !DILocation(line: 4634, column: 5, scope: !17740)
!17744 = !DILocation(line: 4636, column: 23, scope: !17734)
!17745 = !DILocation(line: 4636, column: 9, scope: !17734)
!17746 = !DILocation(line: 0, scope: !17734)
!17747 = !DILocation(line: 4638, column: 7, scope: !17649)
!17748 = !DILocation(line: 4638, column: 25, scope: !17649)
!17749 = !DILocation(line: 4638, column: 7, scope: !17636)
!17750 = !DILocation(line: 4640, column: 30, scope: !17648)
!17751 = !DILocation(line: 0, scope: !17648)
!17752 = !DILocation(line: 4641, column: 12, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17648, file: !3, line: 4641, column: 11)
!17754 = !DILocation(line: 4642, column: 4, scope: !17753)
!17755 = !DILocation(line: 4642, column: 43, scope: !17753)
!17756 = !DILocation(line: 4642, column: 53, scope: !17753)
!17757 = !DILocation(line: 4642, column: 11, scope: !17753)
!17758 = !DILocation(line: 4642, column: 9, scope: !17753)
!17759 = !DILocation(line: 4643, column: 4, scope: !17753)
!17760 = !DILocation(line: 4643, column: 43, scope: !17753)
!17761 = !DILocation(line: 4643, column: 53, scope: !17753)
!17762 = !DILocation(line: 4643, column: 11, scope: !17753)
!17763 = !DILocation(line: 4643, column: 9, scope: !17753)
!17764 = !DILocation(line: 4641, column: 11, scope: !17648)
!17765 = !DILocation(line: 4644, column: 2, scope: !17753)
!17766 = !DILocation(line: 4646, column: 1, scope: !17636)
!17767 = distinct !DISubprogram(name: "VEC_c_binding_ptr_heap_reserve", scope: !3, file: !3, line: 509, type: !17768, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17770)
!17768 = !DISubroutineType(types: !17769)
!17769 = !{!620, !8263, !620}
!17770 = !{!17771, !17772, !17773}
!17771 = !DILocalVariable(name: "vec_", arg: 1, scope: !17767, file: !3, line: 509, type: !8263)
!17772 = !DILocalVariable(name: "alloc_", arg: 2, scope: !17767, file: !3, line: 509, type: !620)
!17773 = !DILocalVariable(name: "extend", scope: !17767, file: !3, line: 509, type: !620)
!17774 = !DILocation(line: 0, scope: !17767)
!17775 = !DILocation(line: 509, column: 1, scope: !17767)
!17776 = !DILocation(line: 509, column: 1, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17767, file: !3, line: 509, column: 1)
!17778 = distinct !DISubprogram(name: "VEC_c_binding_ptr_base_quick_push", scope: !3, file: !3, line: 508, type: !17779, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17782)
!17779 = !DISubroutineType(types: !17780)
!17780 = !{!8262, !17781, !2184}
!17781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!17782 = !{!17783, !17784, !17785}
!17783 = !DILocalVariable(name: "vec_", arg: 1, scope: !17778, file: !3, line: 508, type: !17781)
!17784 = !DILocalVariable(name: "obj_", arg: 2, scope: !17778, file: !3, line: 508, type: !2184)
!17785 = !DILocalVariable(name: "slot_", scope: !17778, file: !3, line: 508, type: !8262)
!17786 = !DILocation(line: 0, scope: !17778)
!17787 = !DILocation(line: 508, column: 1, scope: !17778)
!17788 = distinct !DISubprogram(name: "VEC_c_binding_ptr_base_space", scope: !3, file: !3, line: 508, type: !17789, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17791)
!17789 = !DISubroutineType(types: !17790)
!17790 = !{!620, !17781, !620}
!17791 = !{!17792, !17793}
!17792 = !DILocalVariable(name: "vec_", arg: 1, scope: !17788, file: !3, line: 508, type: !17781)
!17793 = !DILocalVariable(name: "alloc_", arg: 2, scope: !17788, file: !3, line: 508, type: !620)
!17794 = !DILocation(line: 0, scope: !17788)
!17795 = !DILocation(line: 508, column: 1, scope: !17788)
!17796 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !17797, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17799)
!17797 = !DISubroutineType(types: !17798)
!17798 = !{!7, !4614}
!17799 = !{!17800}
!17800 = !DILocalVariable(name: "vec_", arg: 1, scope: !17796, file: !135, line: 182, type: !4614)
!17801 = !DILocation(line: 0, scope: !17796)
!17802 = !DILocation(line: 182, column: 1, scope: !17796)
!17803 = distinct !DISubprogram(name: "VEC_c_binding_ptr_base_iterate", scope: !3, file: !3, line: 508, type: !17804, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17808)
!17804 = !DISubroutineType(types: !17805)
!17805 = !{!620, !17806, !7, !8262}
!17806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17807, size: 64)
!17807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!17808 = !{!17809, !17810, !17811}
!17809 = !DILocalVariable(name: "vec_", arg: 1, scope: !17803, file: !3, line: 508, type: !17806)
!17810 = !DILocalVariable(name: "ix_", arg: 2, scope: !17803, file: !3, line: 508, type: !7)
!17811 = !DILocalVariable(name: "ptr", arg: 3, scope: !17803, file: !3, line: 508, type: !8262)
!17812 = !DILocation(line: 0, scope: !17803)
!17813 = !DILocation(line: 508, column: 1, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17803, file: !3, line: 508, column: 1)
!17815 = !DILocation(line: 508, column: 1, scope: !17803)
!17816 = !DILocation(line: 508, column: 1, scope: !17817)
!17817 = distinct !DILexicalBlock(scope: !17814, file: !3, line: 508, column: 1)
!17818 = !DILocation(line: 508, column: 1, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17814, file: !3, line: 508, column: 1)
!17820 = !DILocation(line: 0, scope: !17814)
!17821 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !135, file: !135, line: 184, type: !17822, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !17824)
!17822 = !DISubroutineType(types: !17823)
!17823 = !{!620, !8918, !620}
!17824 = !{!17825, !17826, !17827}
!17825 = !DILocalVariable(name: "vec_", arg: 1, scope: !17821, file: !135, line: 184, type: !8918)
!17826 = !DILocalVariable(name: "alloc_", arg: 2, scope: !17821, file: !135, line: 184, type: !620)
!17827 = !DILocalVariable(name: "extend", scope: !17821, file: !135, line: 184, type: !620)
!17828 = !DILocation(line: 0, scope: !17821)
!17829 = !DILocation(line: 184, column: 1, scope: !17821)
!17830 = !DILocation(line: 184, column: 1, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17821, file: !135, line: 184, column: 1)
