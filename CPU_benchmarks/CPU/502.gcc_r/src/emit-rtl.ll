; ModuleID = 'emit-rtl.bc'
source_filename = "emit-rtl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.ggc_cache_tab = type { %struct.htab**, i64, i64, void (i8*)*, void (i8*)*, i32 (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.reg_attrs = type { %union.tree_node*, i64 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@split_branch_probability = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !0
@const_int_rtx = common dso_local local_unnamed_addr global [129 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2134
@const_int_htab = internal global %struct.htab* null, align 8, !dbg !2139
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"emit-rtl.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@reload_in_progress = external dso_local local_unnamed_addr global i32, align 4
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = common dso_local local_unnamed_addr global %struct.rtl_data zeroinitializer, align 8, !dbg !1921
@global_rtl = common dso_local local_unnamed_addr global [11 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2093
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@pic_offset_table_rtx = common dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2130
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@word_mode = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1915
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@generating_concat_p = external dso_local local_unnamed_addr global i32, align 4
@regno_reg_rtx = common dso_local local_unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2091
@label_num = internal global i32 1, align 4, !dbg !2174
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@flag_argument_noalias = external dso_local local_unnamed_addr global i32, align 4
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@spill_slot_decl = internal global %union.tree_node* null, align 8, !dbg !2149
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"%sfp\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [8 x i8] c"unshare\00", align 1
@pass_unshare_all_rtl = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8 ()* null, i32 ()* @unshare_all_rtl, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1025 } }, align 8, !dbg !1845
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@flag_enable_icf_debug = external dso_local local_unnamed_addr global i32, align 4
@debug_hooks = external dso_local local_unnamed_addr global %struct.gcc_debug_hooks*, align 8
@optimize = external dso_local local_unnamed_addr global i32, align 4
@free_sequence_stack = internal global %struct.sequence_stack* null, align 8, !dbg !2151
@copy_insn_n_scratches = internal unnamed_addr global i32 0, align 4, !dbg !2160
@copy_insn_scratch_in = internal unnamed_addr global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2153
@copy_insn_scratch_out = internal unnamed_addr global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2158
@orig_asm_constraints_vector = internal unnamed_addr global %struct.rtvec_def* null, align 8, !dbg !2166
@copy_asm_constraints_vector = internal unnamed_addr global %struct.rtvec_def* null, align 8, !dbg !2168
@orig_asm_operands_vector = internal unnamed_addr global %struct.rtvec_def* null, align 8, !dbg !2162
@copy_asm_operands_vector = internal unnamed_addr global %struct.rtvec_def* null, align 8, !dbg !2164
@static_regno_reg_rtx = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2098
@mode_nunits = external dso_local local_unnamed_addr constant [87 x i8], align 16
@const_tiny_rtx = common dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]] zeroinitializer, align 16, !dbg !2103
@reg_attrs_htab = internal global %struct.htab* null, align 8, !dbg !2143
@reg_raw_mode = external dso_local local_unnamed_addr global [53 x i32], align 16
@const_double_htab = internal global %struct.htab* null, align 8, !dbg !2145
@const_fixed_htab = internal global %struct.htab* null, align 8, !dbg !2147
@mem_attrs_htab = internal global %struct.htab* null, align 8, !dbg !2141
@byte_mode = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1913
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@ptr_mode = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1919
@const_true_rtx = common dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2108
@dconst0 = common dso_local global %struct.real_value zeroinitializer, align 8, !dbg !2110
@dconst1 = common dso_local global %struct.real_value zeroinitializer, align 8, !dbg !2112
@dconst2 = common dso_local global %struct.real_value zeroinitializer, align 8, !dbg !2114
@dconstm1 = common dso_local local_unnamed_addr global %struct.real_value zeroinitializer, align 8, !dbg !2116
@dconsthalf = common dso_local local_unnamed_addr global %struct.real_value zeroinitializer, align 8, !dbg !2118
@fconst0 = common dso_local global [18 x %struct.fixed_value] zeroinitializer, align 16, !dbg !2120
@fconst1 = common dso_local global [8 x %struct.fixed_value] zeroinitializer, align 16, !dbg !2125
@mode_fbit = external dso_local local_unnamed_addr constant [87 x i8], align 16
@hard_reg_clobbers = internal global [87 x [53 x %struct.rtx_def*]] zeroinitializer, align 16, !dbg !2170
@gt_ggc_r_gt_emit_rtl_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @spill_slot_decl to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast ([53 x %struct.rtx_def*]* @static_regno_reg_rtx to i8*), i64 53, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1873
@gt_ggc_rd_gt_emit_rtl_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast ([87 x [53 x %struct.rtx_def*]]* @hard_reg_clobbers to i8*), i64 1, i64 36888, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (%struct.sequence_stack** @free_sequence_stack to i8*), i64 1, i64 8, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1887
@gt_ggc_rc_gt_emit_rtl_h = dso_local local_unnamed_addr constant [6 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { %struct.htab** @const_fixed_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @const_double_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @reg_attrs_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_reg_attrs, void (i8*)* @gt_pch_nx_reg_attrs, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @mem_attrs_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_mem_attrs, void (i8*)* @gt_pch_nx_mem_attrs, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @const_int_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16, !dbg !1889
@gt_pch_rc_gt_emit_rtl_h = dso_local local_unnamed_addr constant [6 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @const_fixed_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7rtx_def4htab, void (i8*)* @gt_pch_n_P7rtx_def4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @const_double_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7rtx_def4htab, void (i8*)* @gt_pch_n_P7rtx_def4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @reg_attrs_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9reg_attrs4htab, void (i8*)* @gt_pch_n_P9reg_attrs4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @mem_attrs_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9mem_attrs4htab, void (i8*)* @gt_pch_n_P9mem_attrs4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @const_int_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7rtx_def4htab, void (i8*)* @gt_pch_n_P7rtx_def4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1907
@gt_pch_rs_gt_emit_rtl_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @label_num to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1910
@double_mode = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1917
@return_address_pointer_rtx = common dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2132

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2180 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2193, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2194, metadata !DIExpression()), !dbg !2195
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2196
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !2197
  ret i32 %call, !dbg !2198
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2199 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2203
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !2204
  ret i32 %call, !dbg !2205
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2260, metadata !DIExpression()), !dbg !2261
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2262
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2262
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2262
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2262
  %cmp = icmp uge i8* %0, %1, !dbg !2262
  %conv1 = zext i1 %cmp to i64, !dbg !2262
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2262
  %tobool = icmp eq i64 %expval, 0, !dbg !2262
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2262

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2262
  br label %cond.end, !dbg !2262

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2262
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2262
  %2 = load i8, i8* %0, align 1, !dbg !2262
  %conv3 = zext i8 %2 to i32, !dbg !2262
  br label %cond.end, !dbg !2262

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2262
  ret i32 %cond, !dbg !2263
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2264 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2266, metadata !DIExpression()), !dbg !2267
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2268
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2268
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2268
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2268
  %cmp = icmp uge i8* %0, %1, !dbg !2268
  %conv1 = zext i1 %cmp to i64, !dbg !2268
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2268
  %tobool = icmp eq i64 %expval, 0, !dbg !2268
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2268

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2268
  br label %cond.end, !dbg !2268

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2268
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2268
  %2 = load i8, i8* %0, align 1, !dbg !2268
  %conv3 = zext i8 %2 to i32, !dbg !2268
  br label %cond.end, !dbg !2268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2268
  ret i32 %cond, !dbg !2269
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2270 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2271
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2271
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2271
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2271
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2271
  %cmp = icmp uge i8* %1, %2, !dbg !2271
  %conv1 = zext i1 %cmp to i64, !dbg !2271
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2271
  %tobool = icmp eq i64 %expval, 0, !dbg !2271
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2271

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !2271
  br label %cond.end, !dbg !2271

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2271
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2271
  %3 = load i8, i8* %1, align 1, !dbg !2271
  %conv3 = zext i8 %3 to i32, !dbg !2271
  br label %cond.end, !dbg !2271

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2271
  ret i32 %cond, !dbg !2272
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2273 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2277, metadata !DIExpression()), !dbg !2278
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2279
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !2280
  ret i32 %call, !dbg !2281
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2282 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2286, metadata !DIExpression()), !dbg !2288
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2287, metadata !DIExpression()), !dbg !2288
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2289
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2289
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2289
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2289
  %cmp = icmp uge i8* %0, %1, !dbg !2289
  %conv1 = zext i1 %cmp to i64, !dbg !2289
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2289
  %tobool = icmp eq i64 %expval, 0, !dbg !2289
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2289

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2289
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2289
  br label %cond.end, !dbg !2289

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2289
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2289
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2289
  store i8 %conv2, i8* %0, align 1, !dbg !2289
  %conv6 = and i32 %__c, 255, !dbg !2289
  br label %cond.end, !dbg !2289

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2289
  ret i32 %cond, !dbg !2290
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2291 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2293, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2294, metadata !DIExpression()), !dbg !2295
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2296
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2296
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2296
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2296
  %cmp = icmp uge i8* %0, %1, !dbg !2296
  %conv1 = zext i1 %cmp to i64, !dbg !2296
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2296
  %tobool = icmp eq i64 %expval, 0, !dbg !2296
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2296

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2296
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2296
  br label %cond.end, !dbg !2296

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2296
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2296
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2296
  store i8 %conv2, i8* %0, align 1, !dbg !2296
  %conv6 = and i32 %__c, 255, !dbg !2296
  br label %cond.end, !dbg !2296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2296
  ret i32 %cond, !dbg !2297
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2298 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2300, metadata !DIExpression()), !dbg !2301
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2302
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2302
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2302
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2302
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2302
  %cmp = icmp uge i8* %1, %2, !dbg !2302
  %conv1 = zext i1 %cmp to i64, !dbg !2302
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2302
  %tobool = icmp eq i64 %expval, 0, !dbg !2302
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2302

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2302
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !2302
  br label %cond.end, !dbg !2302

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2302
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2302
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2302
  store i8 %conv4, i8* %1, align 1, !dbg !2302
  %conv6 = and i32 %__c, 255, !dbg !2302
  br label %cond.end, !dbg !2302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2302
  ret i32 %cond, !dbg !2303
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2304 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2310, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2311, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2312, metadata !DIExpression()), !dbg !2313
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !2314
  ret i64 %call, !dbg !2315
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2316 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2318, metadata !DIExpression()), !dbg !2319
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2320
  %0 = load i32, i32* %_flags, align 8, !dbg !2320
  %and = lshr i32 %0, 4, !dbg !2320
  %and.lobit = and i32 %and, 1, !dbg !2320
  ret i32 %and.lobit, !dbg !2321
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2322 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2324, metadata !DIExpression()), !dbg !2325
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2326
  %0 = load i32, i32* %_flags, align 8, !dbg !2326
  %and = lshr i32 %0, 5, !dbg !2326
  %and.lobit = and i32 %and, 1, !dbg !2326
  ret i32 %and.lobit, !dbg !2327
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2328 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2331, metadata !DIExpression()), !dbg !2332
  %__c.off = add i32 %__c, 128, !dbg !2333
  %0 = icmp ult i32 %__c.off, 384, !dbg !2333
  br i1 %0, label %cond.true, label %cond.end, !dbg !2333

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !2334
  %1 = load i32*, i32** %call, align 8, !dbg !2335
  %idxprom = sext i32 %__c to i64, !dbg !2336
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2336
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2336
  br label %cond.end, !dbg !2337

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2337
  ret i32 %cond, !dbg !2338
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2341, metadata !DIExpression()), !dbg !2342
  %__c.off = add i32 %__c, 128, !dbg !2343
  %0 = icmp ult i32 %__c.off, 384, !dbg !2343
  br i1 %0, label %cond.true, label %cond.end, !dbg !2343

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !2344
  %1 = load i32*, i32** %call, align 8, !dbg !2345
  %idxprom = sext i32 %__c to i64, !dbg !2346
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2346
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2346
  br label %cond.end, !dbg !2347

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2347
  ret i32 %cond, !dbg !2348
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2349 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2354, metadata !DIExpression()), !dbg !2355
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2356
  %conv = trunc i64 %call to i32, !dbg !2357
  ret i32 %conv, !dbg !2358
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2359 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2363, metadata !DIExpression()), !dbg !2364
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2365
  ret i64 %call, !dbg !2366
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2367 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2372, metadata !DIExpression()), !dbg !2373
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !2374
  ret i64 %call, !dbg !2375
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2376 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2382, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2383, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2384, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2385, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2386, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 0, metadata !2387, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2388, metadata !DIExpression()), !dbg !2392
  br label %while.cond, !dbg !2393

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2394
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2388, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2387, metadata !DIExpression()), !dbg !2392
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2395
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2393

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2396
  %div = lshr i64 %add, 1, !dbg !2398
  call void @llvm.dbg.value(metadata i64 %div, metadata !2389, metadata !DIExpression()), !dbg !2392
  %mul = mul i64 %div, %__size, !dbg !2399
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2400
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2390, metadata !DIExpression()), !dbg !2392
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !2401
  call void @llvm.dbg.value(metadata i32 %call, metadata !2391, metadata !DIExpression()), !dbg !2392
  %cmp1 = icmp slt i32 %call, 0, !dbg !2402
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2404

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2405
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2407

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2408
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2387, metadata !DIExpression()), !dbg !2392
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2392
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2388, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2387, metadata !DIExpression()), !dbg !2392
  br label %while.cond, !dbg !2393, !llvm.loop !2409

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2392
  ret i8* %retval.0, !dbg !2411
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2412 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2418, metadata !DIExpression()), !dbg !2419
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !2420
  ret double %call, !dbg !2421
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2422 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2431, metadata !DIExpression()), !dbg !2434
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2432, metadata !DIExpression()), !dbg !2434
  call void @llvm.dbg.value(metadata i32 %base, metadata !2433, metadata !DIExpression()), !dbg !2434
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2435
  ret i64 %call, !dbg !2436
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2437 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2443, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2444, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %base, metadata !2445, metadata !DIExpression()), !dbg !2446
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2447
  ret i64 %call, !dbg !2448
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2449 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2460, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2461, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata i32 %base, metadata !2462, metadata !DIExpression()), !dbg !2463
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2464
  ret i64 %call, !dbg !2465
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2466 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2470, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2471, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata i32 %base, metadata !2472, metadata !DIExpression()), !dbg !2473
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2474
  ret i64 %call, !dbg !2475
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2476 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2516, metadata !DIExpression()), !dbg !2518
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2517, metadata !DIExpression()), !dbg !2518
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2519
  ret i32 %call, !dbg !2520
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2521 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2523, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2524, metadata !DIExpression()), !dbg !2525
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2526
  ret i32 %call, !dbg !2527
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2528 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2532, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2533, metadata !DIExpression()), !dbg !2534
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !2535
  ret i32 %call, !dbg !2536
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2537 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2541, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2542, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2543, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2544, metadata !DIExpression()), !dbg !2545
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !2546
  ret i32 %call, !dbg !2547
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2548 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2552, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2553, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2554, metadata !DIExpression()), !dbg !2555
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2554, metadata !DIExpression(DW_OP_deref)), !dbg !2555
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2556
  ret i32 %call, !dbg !2557
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2558 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2562, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2563, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2564, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2565, metadata !DIExpression()), !dbg !2566
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2565, metadata !DIExpression(DW_OP_deref)), !dbg !2566
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2567
  ret i32 %call, !dbg !2568
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2569 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2593, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2594, metadata !DIExpression()), !dbg !2595
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2596
  ret i32 %call, !dbg !2597
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2598 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2600, metadata !DIExpression()), !dbg !2602
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2601, metadata !DIExpression()), !dbg !2602
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2603
  ret i32 %call, !dbg !2604
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2605 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2609, metadata !DIExpression()), !dbg !2611
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2610, metadata !DIExpression()), !dbg !2611
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !2612
  ret i32 %call, !dbg !2613
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2618, metadata !DIExpression()), !dbg !2622
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2619, metadata !DIExpression()), !dbg !2622
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2620, metadata !DIExpression()), !dbg !2622
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2621, metadata !DIExpression()), !dbg !2622
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !2623
  ret i32 %call, !dbg !2624
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 %regno) local_unnamed_addr #5 !dbg !2625 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2629, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.value(metadata i32 %regno, metadata !2630, metadata !DIExpression()), !dbg !2632
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32 37, i32 %mode, i32 %regno) #7, !dbg !2633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2631, metadata !DIExpression()), !dbg !2632
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2634
  %rt_uint = bitcast %union.rtunion_def* %0 to i32*, !dbg !2634
  store i32 %regno, i32* %rt_uint, align 8, !dbg !2635
  ret %struct.rtx_def* %call, !dbg !2636
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32 %mode, i64 %arg) local_unnamed_addr #5 !dbg !2637 {
entry:
  %arg.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2641, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i64 %arg, metadata !2642, metadata !DIExpression()), !dbg !2644
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.value(metadata i64 %arg, metadata !2642, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i64 %arg, metadata !2642, metadata !DIExpression()), !dbg !2644
  %arg.off = add i64 %arg, 64, !dbg !2645
  %0 = icmp ult i64 %arg.off, 129, !dbg !2645
  br i1 %0, label %if.then, label %if.end, !dbg !2645

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %arg, metadata !2642, metadata !DIExpression()), !dbg !2644
  %arrayidx = getelementptr inbounds [129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 %arg.off, !dbg !2647
  %retval.0.pre = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !2644
  br label %cleanup, !dbg !2648

if.end:                                           ; preds = %entry
  %1 = load %struct.htab*, %struct.htab** @const_int_htab, align 8, !dbg !2649
  %2 = bitcast i64* %arg.addr to i8*, !dbg !2650
  call void @llvm.dbg.value(metadata i64 %arg, metadata !2642, metadata !DIExpression()), !dbg !2644
  %conv = trunc i64 %arg to i32, !dbg !2651
  %call = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %2, i32 %conv, i32 1) #7, !dbg !2652
  call void @llvm.dbg.value(metadata i8** %call, metadata !2643, metadata !DIExpression()), !dbg !2644
  %3 = load i8*, i8** %call, align 8, !dbg !2653
  %cmp2 = icmp eq i8* %3, null, !dbg !2655
  br i1 %cmp2, label %if.then4, label %if.end.if.end6_crit_edge, !dbg !2656

if.end.if.end6_crit_edge:                         ; preds = %if.end
  %4 = bitcast i8* %3 to %struct.rtx_def*, !dbg !2656
  br label %if.end6, !dbg !2656

if.then4:                                         ; preds = %if.end
  %5 = load i64, i64* %arg.addr, align 8, !dbg !2657
  call void @llvm.dbg.value(metadata i64 %5, metadata !2642, metadata !DIExpression()), !dbg !2644
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_w_stat(i32 30, i32 0, i64 %5) #7, !dbg !2657
  %6 = bitcast i8** %call to %struct.rtx_def**, !dbg !2658
  store %struct.rtx_def* %call5, %struct.rtx_def** %6, align 8, !dbg !2658
  br label %if.end6, !dbg !2659

if.end6:                                          ; preds = %if.end.if.end6_crit_edge, %if.then4
  %retval.02 = phi %struct.rtx_def* [ %call5, %if.then4 ], [ %4, %if.end.if.end6_crit_edge ]
  br label %cleanup, !dbg !2660

cleanup:                                          ; preds = %if.end6, %if.then
  %retval.0 = phi %struct.rtx_def* [ %retval.0.pre, %if.then ], [ %retval.02, %if.end6 ], !dbg !2644
  ret %struct.rtx_def* %retval.0, !dbg !2661
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_w_stat(i32, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_int_mode(i64 %c, i32 %mode) local_unnamed_addr #5 !dbg !2662 {
entry:
  call void @llvm.dbg.value(metadata i64 %c, metadata !2666, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2667, metadata !DIExpression()), !dbg !2668
  %call = tail call i64 @trunc_int_for_mode(i64 %c, i32 %mode) #7, !dbg !2669
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #8, !dbg !2669
  ret %struct.rtx_def* %call1, !dbg !2670
}

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %value, i32 %mode) local_unnamed_addr #5 !dbg !2671 {
entry:
  call void @llvm.dbg.declare(metadata %struct.real_value* %value, metadata !2675, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2676, metadata !DIExpression()), !dbg !2679
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 32) #7, !dbg !2680
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2677, metadata !DIExpression()), !dbg !2679
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2681
  %bf.load = load i32, i32* %0, align 8, !dbg !2681
  %bf.value = shl i32 %mode, 16, !dbg !2681
  %bf.shl = and i32 %bf.value, 16711680, !dbg !2681
  %bf.clear = and i32 %bf.load, -16711681, !dbg !2681
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !2681
  store i32 %bf.set, i32* %0, align 8, !dbg !2681
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !2682
  %1 = bitcast %union.u* %u to i8*, !dbg !2683
  %2 = bitcast %struct.real_value* %value to i8*, !dbg !2683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !2683
  %call1 = tail call fastcc %struct.rtx_def* @lookup_const_double(%struct.rtx_def* %call) #8, !dbg !2684
  ret %struct.rtx_def* %call1, !dbg !2685
}

declare dso_local %struct.rtx_def* @rtx_alloc_stat(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @lookup_const_double(%struct.rtx_def* %real) unnamed_addr #5 !dbg !2686 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %real, metadata !2690, metadata !DIExpression()), !dbg !2692
  %0 = load %struct.htab*, %struct.htab** @const_double_htab, align 8, !dbg !2693
  %1 = bitcast %struct.rtx_def* %real to i8*, !dbg !2694
  %call = tail call i8** @htab_find_slot(%struct.htab* %0, i8* %1, i32 1) #7, !dbg !2695
  call void @llvm.dbg.value(metadata i8** %call, metadata !2691, metadata !DIExpression()), !dbg !2692
  %2 = load i8*, i8** %call, align 8, !dbg !2696
  %cmp = icmp eq i8* %2, null, !dbg !2698
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !2699

entry.if.end_crit_edge:                           ; preds = %entry
  %3 = bitcast i8* %2 to %struct.rtx_def*, !dbg !2699
  br label %if.end, !dbg !2699

if.then:                                          ; preds = %entry
  %4 = bitcast i8** %call to %struct.rtx_def**, !dbg !2700
  store %struct.rtx_def* %real, %struct.rtx_def** %4, align 8, !dbg !2700
  br label %if.end, !dbg !2701

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %5 = phi %struct.rtx_def* [ %real, %if.then ], [ %3, %entry.if.end_crit_edge ], !dbg !2702
  ret %struct.rtx_def* %5, !dbg !2703
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8 %value, i32 %mode) local_unnamed_addr #5 !dbg !2704 {
entry:
  call void @llvm.dbg.declare(metadata %struct.fixed_value* %value, metadata !2708, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2709, metadata !DIExpression()), !dbg !2712
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 31) #7, !dbg !2713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2710, metadata !DIExpression()), !dbg !2712
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2714
  %bf.load = load i32, i32* %0, align 8, !dbg !2714
  %bf.value = shl i32 %mode, 16, !dbg !2714
  %bf.shl = and i32 %bf.value, 16711680, !dbg !2714
  %bf.clear = and i32 %bf.load, -16711681, !dbg !2714
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !2714
  store i32 %bf.set, i32* %0, align 8, !dbg !2714
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !2715
  %1 = bitcast %union.u* %u to i8*, !dbg !2716
  %2 = bitcast %struct.fixed_value* %value to i8*, !dbg !2716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !2716
  %call1 = tail call fastcc %struct.rtx_def* @lookup_const_fixed(%struct.rtx_def* %call) #8, !dbg !2717
  ret %struct.rtx_def* %call1, !dbg !2718
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @lookup_const_fixed(%struct.rtx_def* %fixed) unnamed_addr #5 !dbg !2719 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %fixed, metadata !2721, metadata !DIExpression()), !dbg !2723
  %0 = load %struct.htab*, %struct.htab** @const_fixed_htab, align 8, !dbg !2724
  %1 = bitcast %struct.rtx_def* %fixed to i8*, !dbg !2725
  %call = tail call i8** @htab_find_slot(%struct.htab* %0, i8* %1, i32 1) #7, !dbg !2726
  call void @llvm.dbg.value(metadata i8** %call, metadata !2722, metadata !DIExpression()), !dbg !2723
  %2 = load i8*, i8** %call, align 8, !dbg !2727
  %cmp = icmp eq i8* %2, null, !dbg !2729
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !2730

entry.if.end_crit_edge:                           ; preds = %entry
  %3 = bitcast i8* %2 to %struct.rtx_def*, !dbg !2730
  br label %if.end, !dbg !2730

if.then:                                          ; preds = %entry
  %4 = bitcast i8** %call to %struct.rtx_def**, !dbg !2731
  store %struct.rtx_def* %fixed, %struct.rtx_def** %4, align 8, !dbg !2731
  br label %if.end, !dbg !2732

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %5 = phi %struct.rtx_def* [ %fixed, %if.then ], [ %3, %entry.if.end_crit_edge ], !dbg !2733
  ret %struct.rtx_def* %5, !dbg !2734
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @immed_double_const(i64 %i0, i64 %i1, i32 %mode) local_unnamed_addr #5 !dbg !2735 {
entry:
  call void @llvm.dbg.value(metadata i64 %i0, metadata !2739, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i64 %i1, metadata !2740, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2741, metadata !DIExpression()), !dbg !2744
  %cmp = icmp eq i32 %mode, 0, !dbg !2745
  br i1 %cmp, label %if.end42, label %if.then, !dbg !2747

if.then:                                          ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !2748
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !2748
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2748
  %cmp1 = icmp eq i8 %0, 2, !dbg !2748
  br i1 %cmp1, label %cond.end, label %lor.lhs.false, !dbg !2748

lor.lhs.false:                                    ; preds = %if.then
  %cmp6 = icmp eq i8 %0, 3, !dbg !2748
  br i1 %cmp6, label %cond.end, label %lor.lhs.false8, !dbg !2748

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8 %0, 12, !dbg !2748
  br i1 %cmp12, label %cond.end, label %lor.lhs.false14, !dbg !2748

lor.lhs.false14:                                  ; preds = %lor.lhs.false8
  %cmp18 = icmp eq i8 %0, 17, !dbg !2748
  br i1 %cmp18, label %cond.end, label %cond.true, !dbg !2748

cond.true:                                        ; preds = %lor.lhs.false14
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 547, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2748
  br label %cond.end, !dbg !2748

cond.end:                                         ; preds = %if.then, %lor.lhs.false, %lor.lhs.false8, %lor.lhs.false14, %cond.true
  %arrayidx21 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2750
  %1 = load i8, i8* %arrayidx21, align 1, !dbg !2750
  %cmp26 = icmp ult i8 %1, 9, !dbg !2752
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !2753

if.then28:                                        ; preds = %cond.end
  %call = tail call %struct.rtx_def* @gen_int_mode(i64 %i0, i32 %mode) #8, !dbg !2754
  br label %cleanup, !dbg !2755

if.end:                                           ; preds = %cond.end
  %cmp36 = icmp eq i8 %1, 16, !dbg !2756
  br i1 %cmp36, label %if.end42, label %cond.true38, !dbg !2756

cond.true38:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 552, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2756
  br label %if.end42, !dbg !2756

if.end42:                                         ; preds = %entry, %cond.true38, %if.end
  %cmp43 = icmp eq i64 %i1, 0, !dbg !2757
  %cmp45 = icmp sgt i64 %i0, -1, !dbg !2759
  %or.cond = and i1 %cmp43, %cmp45, !dbg !2760
  br i1 %or.cond, label %if.then53, label %lor.lhs.false47, !dbg !2760

lor.lhs.false47:                                  ; preds = %if.end42
  %cmp48 = icmp eq i64 %i1, -1, !dbg !2761
  %cmp51 = icmp slt i64 %i0, 0, !dbg !2762
  %or.cond1 = and i1 %cmp48, %cmp51, !dbg !2763
  br i1 %or.cond1, label %if.then53, label %if.end55, !dbg !2763

if.then53:                                        ; preds = %lor.lhs.false47, %if.end42
  %call54 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %i0) #8, !dbg !2764
  br label %cleanup, !dbg !2765

if.end55:                                         ; preds = %lor.lhs.false47
  %call56 = tail call %struct.rtx_def* @rtx_alloc_stat(i32 32) #7, !dbg !2766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !2742, metadata !DIExpression()), !dbg !2744
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 0, !dbg !2767
  %bf.load = load i32, i32* %2, align 8, !dbg !2767
  %bf.clear = and i32 %bf.load, -16711681, !dbg !2767
  store i32 %bf.clear, i32* %2, align 8, !dbg !2767
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 1, !dbg !2768
  %arrayidx57 = bitcast %union.u* %u to i64*, !dbg !2768
  store i64 %i0, i64* %arrayidx57, align 8, !dbg !2769
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2770
  %3 = bitcast %union.rtunion_def* %arrayidx60 to i64*, !dbg !2770
  store i64 %i1, i64* %3, align 8, !dbg !2771
  call void @llvm.dbg.value(metadata i32 2, metadata !2743, metadata !DIExpression()), !dbg !2744
  %hwint65 = bitcast %union.u* %u to [1 x i64]*, !dbg !2772
  br label %for.cond, !dbg !2775

for.cond:                                         ; preds = %for.body, %if.end55
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 2, %if.end55 ], !dbg !2776
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2743, metadata !DIExpression()), !dbg !2744
  %exitcond = icmp eq i64 %indvars.iv, 4, !dbg !2777
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2778

for.body:                                         ; preds = %for.cond
  %arrayidx67 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint65, i64 0, i64 %indvars.iv, !dbg !2779
  store i64 0, i64* %arrayidx67, align 8, !dbg !2780
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2781
  call void @llvm.dbg.value(metadata i32 undef, metadata !2743, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2744
  br label %for.cond, !dbg !2782, !llvm.loop !2783

for.end:                                          ; preds = %for.cond
  %call68 = tail call fastcc %struct.rtx_def* @lookup_const_double(%struct.rtx_def* %call56) #8, !dbg !2785
  br label %cleanup, !dbg !2786

cleanup:                                          ; preds = %for.end, %if.then53, %if.then28
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then28 ], [ %call54, %if.then53 ], [ %call68, %for.end ], !dbg !2744
  ret %struct.rtx_def* %retval.0, !dbg !2787
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %regno) local_unnamed_addr #5 !dbg !2788 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2792, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata i32 %regno, metadata !2793, metadata !DIExpression()), !dbg !2794
  %cmp = icmp ne i32 %mode, 16, !dbg !2795
  %0 = load i32, i32* @reload_in_progress, align 4, !dbg !2797
  %tobool = icmp ne i32 %0, 0, !dbg !2797
  %or.cond = or i1 %cmp, %tobool, !dbg !2798
  br i1 %or.cond, label %if.end47, label %if.then, !dbg !2798

if.then:                                          ; preds = %entry
  switch i32 %regno, label %if.end18 [
    i32 20, label %land.lhs.true2
    i32 6, label %if.then.land.lhs.true8_crit_edge
    i32 16, label %if.then17
  ], !dbg !2799

if.then.land.lhs.true8_crit_edge:                 ; preds = %if.then
  %.pre = load i32, i32* @reload_completed, align 4, !dbg !2802
  br label %land.lhs.true8, !dbg !2799

land.lhs.true2:                                   ; preds = %if.then
  %1 = load i32, i32* @reload_completed, align 4, !dbg !2804
  %tobool3 = icmp eq i32 %1, 0, !dbg !2804
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !2805

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %2 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !2806
  %tobool4 = icmp eq i8 %2, 0, !dbg !2806
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !2807

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true2
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2808
  br label %return, !dbg !2809

if.end:                                           ; preds = %lor.lhs.false
  switch i32 20, label %if.end18 [
    i32 6, label %land.lhs.true8
    i32 16, label %if.then17
  ], !dbg !2810

land.lhs.true8:                                   ; preds = %if.then.land.lhs.true8_crit_edge, %if.end
  %4 = phi i32 [ %.pre, %if.then.land.lhs.true8_crit_edge ], [ %1, %if.end ], !dbg !2802
  %tobool9 = icmp eq i32 %4, 0, !dbg !2802
  br i1 %tobool9, label %if.then13, label %lor.lhs.false10, !dbg !2811

lor.lhs.false10:                                  ; preds = %land.lhs.true8
  %5 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !2812
  %tobool12 = icmp eq i8 %5, 0, !dbg !2812
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !2813

if.then13:                                        ; preds = %lor.lhs.false10, %land.lhs.true8
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2814
  br label %return, !dbg !2815

if.end14:                                         ; preds = %lor.lhs.false10
  %cmp15 = icmp eq i32 %regno, 16, !dbg !2816
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !2818

if.then17:                                        ; preds = %if.then, %if.end, %if.end14
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2819
  br label %return, !dbg !2820

if.end18:                                         ; preds = %if.then, %if.end, %if.end14
  %8 = load i32, i32* @flag_pic, align 4, !dbg !2821
  %tobool19 = icmp eq i32 %8, 0, !dbg !2821
  br i1 %tobool19, label %cond.end23, label %cond.false, !dbg !2821

cond.false:                                       ; preds = %if.end18
  %9 = load i32, i32* @reload_completed, align 4, !dbg !2821
  %tobool20 = icmp eq i32 %9, 0, !dbg !2821
  br i1 %tobool20, label %cond.end23, label %cond.true21, !dbg !2821

cond.true21:                                      ; preds = %cond.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2821
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %10) #8, !dbg !2821
  br label %cond.end23, !dbg !2821

cond.end23:                                       ; preds = %cond.false, %if.end18, %cond.true21
  %cond24 = phi i32 [ -1, %if.end18 ], [ %call, %cond.true21 ], [ 3, %cond.false ], !dbg !2821
  %cmp25 = icmp eq i32 %cond24, %regno, !dbg !2823
  br i1 %cmp25, label %land.lhs.true27, label %if.end42, !dbg !2824

land.lhs.true27:                                  ; preds = %cond.end23
  %11 = load i32, i32* @flag_pic, align 4, !dbg !2825
  %tobool28 = icmp eq i32 %11, 0, !dbg !2825
  br i1 %tobool28, label %cond.end37, label %cond.false30, !dbg !2825

cond.false30:                                     ; preds = %land.lhs.true27
  %12 = load i32, i32* @reload_completed, align 4, !dbg !2825
  %tobool31 = icmp eq i32 %12, 0, !dbg !2825
  br i1 %tobool31, label %cond.end37, label %cond.true32, !dbg !2825

cond.true32:                                      ; preds = %cond.false30
  %13 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2825
  %call33 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #8, !dbg !2825
  %phitmp = zext i32 %call33 to i64, !dbg !2825
  br label %cond.end37, !dbg !2825

cond.end37:                                       ; preds = %cond.false30, %land.lhs.true27, %cond.true32
  %cond38 = phi i64 [ 4294967295, %land.lhs.true27 ], [ %phitmp, %cond.true32 ], [ 3, %cond.false30 ]
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %cond38, !dbg !2826
  %14 = load i8, i8* %arrayidx, align 1, !dbg !2826
  %tobool40 = icmp eq i8 %14, 0, !dbg !2826
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !2827

if.then41:                                        ; preds = %cond.end37
  %15 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2828
  br label %return, !dbg !2829

if.end42:                                         ; preds = %cond.end37, %cond.end23
  %cmp43 = icmp eq i32 %regno, 7, !dbg !2830
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !2832

if.then45:                                        ; preds = %if.end42
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2833
  br label %return, !dbg !2834

if.end47:                                         ; preds = %if.end42, %entry
  %call48 = tail call %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 %regno) #8, !dbg !2835
  br label %return, !dbg !2836

return:                                           ; preds = %if.end47, %if.then45, %if.then41, %if.then17, %if.then13, %if.then5
  %retval.0 = phi %struct.rtx_def* [ %call48, %if.end47 ], [ %3, %if.then5 ], [ %6, %if.then13 ], [ %7, %if.then17 ], [ %15, %if.then41 ], [ %16, %if.then45 ], !dbg !2794
  ret %struct.rtx_def* %retval.0, !dbg !2837
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !2838 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2842, metadata !DIExpression()), !dbg !2843
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2844
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2844
  %0 = load i32, i32* %rt_uint, align 8, !dbg !2844
  ret i32 %0, !dbg !2845
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !2846 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2850, metadata !DIExpression()), !dbg !2853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !2851, metadata !DIExpression()), !dbg !2853
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e0_stat(i32 43, i32 %mode, %struct.rtx_def* %addr) #7, !dbg !2854
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2852, metadata !DIExpression()), !dbg !2853
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2855
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !2855
  store %struct.mem_attrs* null, %struct.mem_attrs** %rt_mem, align 8, !dbg !2856
  ret %struct.rtx_def* %call, !dbg !2857
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e0_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_const_mem(i32 %mode, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !2858 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2860, metadata !DIExpression()), !dbg !2863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !2861, metadata !DIExpression()), !dbg !2863
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr) #8, !dbg !2864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2862, metadata !DIExpression()), !dbg !2863
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2865
  %bf.load = load i32, i32* %0, align 8, !dbg !2866
  %bf.set3 = or i32 %bf.load, 100663296, !dbg !2867
  store i32 %bf.set3, i32* %0, align 8, !dbg !2867
  ret %struct.rtx_def* %call, !dbg !2868
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_frame_mem(i32 %mode, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !2869 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2871, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !2872, metadata !DIExpression()), !dbg !2874
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr) #8, !dbg !2875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2873, metadata !DIExpression()), !dbg !2874
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2876
  %bf.load = load i32, i32* %0, align 8, !dbg !2877
  %bf.set = or i32 %bf.load, 33554432, !dbg !2877
  store i32 %bf.set, i32* %0, align 8, !dbg !2877
  %call1 = tail call i32 @get_frame_alias_set() #7, !dbg !2878
  tail call void @set_mem_alias_set(%struct.rtx_def* %call, i32 %call1) #8, !dbg !2879
  ret %struct.rtx_def* %call, !dbg !2880
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_alias_set(%struct.rtx_def* %mem, i32 %set) local_unnamed_addr #5 !dbg !2881 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !2885, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.value(metadata i32 %set, metadata !2886, metadata !DIExpression()), !dbg !2887
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2888
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !2888
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !2888
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !2888
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !2888

cond.false:                                       ; preds = %entry
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !2888
  %2 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !2888
  br label %cond.end, !dbg !2888

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !2888
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !2889

cond.false11:                                     ; preds = %cond.end
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !2889
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !2889
  br label %cond.end16, !dbg !2889

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %struct.rtx_def* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !2889
  br i1 %cmp, label %cond.false28, label %cond.true23, !dbg !2890

cond.true23:                                      ; preds = %cond.end16
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !2890
  %4 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !2890
  br label %cond.end39, !dbg !2890

cond.false28:                                     ; preds = %cond.end16
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !2890
  %bf.load = load i32, i32* %5, align 8, !dbg !2890
  %bf.clear = and i32 %bf.load, 16711680, !dbg !2890
  %cmp29 = icmp eq i32 %bf.clear, 65536, !dbg !2890
  br i1 %cmp29, label %cond.end39, label %cond.true30, !dbg !2890

cond.true30:                                      ; preds = %cond.false28
  %bf.lshr32 = lshr i32 %bf.load, 16, !dbg !2890
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !2890
  %idxprom = zext i32 %bf.clear33 to i64, !dbg !2890
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2890
  %6 = load i8, i8* %arrayidx34, align 1, !dbg !2890
  %conv35 = zext i8 %6 to i64, !dbg !2890
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv35) #8, !dbg !2890
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !2891
  br label %cond.end39, !dbg !2890

cond.end39:                                       ; preds = %cond.false28, %cond.true30, %cond.true23
  %7 = phi %struct.mem_attrs* [ %1, %cond.true23 ], [ %.pre, %cond.true30 ], [ null, %cond.false28 ], !dbg !2891
  %cond40 = phi %struct.rtx_def* [ %4, %cond.true23 ], [ %call, %cond.true30 ], [ null, %cond.false28 ], !dbg !2890
  %cmp45 = icmp eq %struct.mem_attrs* %7, null, !dbg !2891
  br i1 %cmp45, label %cond.end53, label %cond.true47, !dbg !2891

cond.true47:                                      ; preds = %cond.end39
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 4, !dbg !2891
  %8 = load i32, i32* %align, align 4, !dbg !2891
  br label %cond.end53, !dbg !2891

cond.end53:                                       ; preds = %cond.end39, %cond.true47
  %cond54 = phi i32 [ %8, %cond.true47 ], [ 8, %cond.end39 ], !dbg !2891
  br i1 %cmp45, label %cond.end68, label %cond.false62, !dbg !2892

cond.false62:                                     ; preds = %cond.end53
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !2892
  %9 = load i8, i8* %addrspace, align 8, !dbg !2892
  br label %cond.end68, !dbg !2892

cond.end68:                                       ; preds = %cond.end53, %cond.false62
  %cond69 = phi i8 [ %9, %cond.false62 ], [ 0, %cond.end53 ]
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !2893
  %bf.load71 = load i32, i32* %10, align 8, !dbg !2893
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !2893
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !2893
  %call74 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %set, %union.tree_node* %cond, %struct.rtx_def* %cond17, %struct.rtx_def* %cond40, i32 %cond54, i8 zeroext %cond69, i32 %bf.clear73) #8, !dbg !2894
  store %struct.mem_attrs* %call74, %struct.mem_attrs** %rt_mem, align 8, !dbg !2895
  ret void, !dbg !2896
}

declare dso_local i32 @get_frame_alias_set() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_tmp_stack_mem(i32 %mode, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !2897 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2899, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !2900, metadata !DIExpression()), !dbg !2902
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr) #8, !dbg !2903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2901, metadata !DIExpression()), !dbg !2902
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2904
  %bf.load = load i32, i32* %0, align 8, !dbg !2905
  %bf.set = or i32 %bf.load, 33554432, !dbg !2905
  store i32 %bf.set, i32* %0, align 8, !dbg !2905
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2906
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 20, !dbg !2908
  %bf.load1 = load i32, i32* %calls_alloca, align 8, !dbg !2908
  %bf.clear2 = and i32 %bf.load1, 524288, !dbg !2908
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !2906
  br i1 %tobool, label %if.then, label %if.end, !dbg !2909

if.then:                                          ; preds = %entry
  %call3 = tail call i32 @get_frame_alias_set() #7, !dbg !2910
  tail call void @set_mem_alias_set(%struct.rtx_def* %call, i32 %call3) #8, !dbg !2911
  br label %if.end, !dbg !2911

if.end:                                           ; preds = %entry, %if.then
  ret %struct.rtx_def* %call, !dbg !2912
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_subreg(i32 %omode, i32 %imode, %struct.rtx_def* %reg, i32 %offset) local_unnamed_addr #5 !dbg !2913 {
entry:
  call void @llvm.dbg.value(metadata i32 %omode, metadata !2917, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata i32 %imode, metadata !2918, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !2919, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata i32 %offset, metadata !2920, metadata !DIExpression()), !dbg !2930
  %idxprom = zext i32 %imode to i64, !dbg !2931
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2931
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2931
  %conv1 = zext i8 %0 to i32, !dbg !2931
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !2921, metadata !DIExpression()), !dbg !2930
  %idxprom2 = zext i32 %omode to i64, !dbg !2932
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2, !dbg !2932
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !2932
  %conv5 = zext i8 %1 to i32, !dbg !2932
  call void @llvm.dbg.value(metadata i32 %conv5, metadata !2922, metadata !DIExpression()), !dbg !2930
  %rem = urem i32 %offset, %conv5, !dbg !2933
  %cmp = icmp ne i32 %rem, 0, !dbg !2935
  %cmp7 = icmp ule i32 %conv1, %offset, !dbg !2936
  %or.cond2 = or i1 %cmp, %cmp7, !dbg !2938
  br i1 %or.cond2, label %cleanup267, label %if.end10, !dbg !2938

if.end10:                                         ; preds = %entry
  %2 = load i32, i32* @word_mode, align 4, !dbg !2939
  %cmp11 = icmp eq i32 %2, %omode, !dbg !2941
  br i1 %cmp11, label %if.end173, label %if.else, !dbg !2942

if.else:                                          ; preds = %if.end10
  %cmp14 = icmp ugt i8 %1, 3, !dbg !2943
  %cmp16 = icmp uge i8 %0, %1, !dbg !2945
  %or.cond = and i1 %cmp14, %cmp16, !dbg !2946
  br i1 %or.cond, label %if.end173, label %if.else19, !dbg !2946

if.else19:                                        ; preds = %if.else
  %arrayidx21 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !2947
  %3 = load i8, i8* %arrayidx21, align 1, !dbg !2947
  %cmp23 = icmp eq i8 %3, 10, !dbg !2947
  br i1 %cmp23, label %land.lhs.true66, label %lor.lhs.false, !dbg !2947

lor.lhs.false:                                    ; preds = %if.else19
  %cmp28 = icmp eq i8 %3, 11, !dbg !2947
  br i1 %cmp28, label %land.lhs.true66, label %lor.lhs.false30, !dbg !2949

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %cmp34 = icmp eq i8 %3, 12, !dbg !2950
  br i1 %cmp34, label %land.lhs.true66, label %lor.lhs.false36, !dbg !2950

lor.lhs.false36:                                  ; preds = %lor.lhs.false30
  %cmp40 = icmp eq i8 %3, 17, !dbg !2950
  br i1 %cmp40, label %land.lhs.true66, label %lor.lhs.false42, !dbg !2950

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %cmp46 = icmp eq i8 %3, 13, !dbg !2950
  br i1 %cmp46, label %land.lhs.true66, label %lor.lhs.false48, !dbg !2950

lor.lhs.false48:                                  ; preds = %lor.lhs.false42
  %cmp52 = icmp eq i8 %3, 14, !dbg !2950
  br i1 %cmp52, label %land.lhs.true66, label %lor.lhs.false54, !dbg !2950

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %cmp58 = icmp eq i8 %3, 15, !dbg !2950
  br i1 %cmp58, label %land.lhs.true66, label %lor.lhs.false60, !dbg !2950

lor.lhs.false60:                                  ; preds = %lor.lhs.false54
  %cmp64 = icmp eq i8 %3, 16, !dbg !2950
  br i1 %cmp64, label %land.lhs.true66, label %if.else73, !dbg !2951

land.lhs.true66:                                  ; preds = %lor.lhs.false60, %lor.lhs.false54, %lor.lhs.false48, %lor.lhs.false42, %lor.lhs.false36, %lor.lhs.false30, %lor.lhs.false, %if.else19
  %arrayidx68 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !2952
  %4 = load i8, i8* %arrayidx68, align 1, !dbg !2952
  %conv69 = zext i8 %4 to i32, !dbg !2952
  %cmp70 = icmp eq i32 %conv69, %omode, !dbg !2953
  br i1 %cmp70, label %if.end173, label %if.else73, !dbg !2954

if.else73:                                        ; preds = %land.lhs.true66, %lor.lhs.false60
  %arrayidx75 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2, !dbg !2955
  %5 = load i8, i8* %arrayidx75, align 1, !dbg !2955
  %cmp77 = icmp eq i8 %5, 12, !dbg !2955
  br i1 %cmp77, label %land.lhs.true109, label %lor.lhs.false79, !dbg !2955

lor.lhs.false79:                                  ; preds = %if.else73
  %cmp83 = icmp eq i8 %5, 17, !dbg !2955
  br i1 %cmp83, label %land.lhs.true109, label %lor.lhs.false85, !dbg !2955

lor.lhs.false85:                                  ; preds = %lor.lhs.false79
  %cmp89 = icmp eq i8 %5, 13, !dbg !2955
  br i1 %cmp89, label %land.lhs.true109, label %lor.lhs.false91, !dbg !2955

lor.lhs.false91:                                  ; preds = %lor.lhs.false85
  %cmp95 = icmp eq i8 %5, 14, !dbg !2955
  br i1 %cmp95, label %land.lhs.true109, label %lor.lhs.false97, !dbg !2955

lor.lhs.false97:                                  ; preds = %lor.lhs.false91
  %cmp101 = icmp eq i8 %5, 15, !dbg !2955
  br i1 %cmp101, label %land.lhs.true109, label %lor.lhs.false103, !dbg !2955

lor.lhs.false103:                                 ; preds = %lor.lhs.false97
  %cmp107 = icmp eq i8 %5, 16, !dbg !2955
  br i1 %cmp107, label %land.lhs.true109, label %if.else116, !dbg !2957

land.lhs.true109:                                 ; preds = %lor.lhs.false103, %lor.lhs.false97, %lor.lhs.false91, %lor.lhs.false85, %lor.lhs.false79, %if.else73
  %arrayidx111 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2, !dbg !2958
  %6 = load i8, i8* %arrayidx111, align 1, !dbg !2958
  %conv112 = zext i8 %6 to i32, !dbg !2958
  %cmp113 = icmp eq i32 %conv112, %imode, !dbg !2959
  br i1 %cmp113, label %if.end173, label %if.else116, !dbg !2960

if.else116:                                       ; preds = %land.lhs.true109, %lor.lhs.false103
  %cmp120 = icmp eq i8 %3, 8, !dbg !2961
  br i1 %cmp120, label %if.then164, label %lor.lhs.false122, !dbg !2961

lor.lhs.false122:                                 ; preds = %if.else116
  %cmp126 = icmp eq i8 %3, 9, !dbg !2961
  br i1 %cmp126, label %if.then164, label %lor.lhs.false128, !dbg !2961

lor.lhs.false128:                                 ; preds = %lor.lhs.false122
  %cmp132 = icmp eq i8 %3, 11, !dbg !2961
  br i1 %cmp132, label %if.then164, label %lor.lhs.false134, !dbg !2961

lor.lhs.false134:                                 ; preds = %lor.lhs.false128
  %cmp138 = icmp eq i8 %3, 17, !dbg !2961
  br i1 %cmp138, label %if.then164, label %lor.lhs.false140, !dbg !2963

lor.lhs.false140:                                 ; preds = %lor.lhs.false134
  %cmp144 = icmp eq i8 %5, 8, !dbg !2964
  br i1 %cmp144, label %if.then164, label %lor.lhs.false146, !dbg !2964

lor.lhs.false146:                                 ; preds = %lor.lhs.false140
  %cmp150 = icmp eq i8 %5, 9, !dbg !2964
  br i1 %cmp150, label %if.then164, label %lor.lhs.false152, !dbg !2964

lor.lhs.false152:                                 ; preds = %lor.lhs.false146
  %cmp156 = icmp eq i8 %5, 11, !dbg !2964
  br i1 %cmp156, label %if.then164, label %lor.lhs.false158, !dbg !2964

lor.lhs.false158:                                 ; preds = %lor.lhs.false152
  %cmp162 = icmp eq i8 %5, 17, !dbg !2964
  %cmp165 = icmp ne i8 %0, %1, !dbg !2965
  %or.cond3 = and i1 %cmp162, %cmp165, !dbg !2968
  br i1 %or.cond3, label %cleanup267, label %if.end173, !dbg !2968

if.then164:                                       ; preds = %lor.lhs.false152, %lor.lhs.false146, %lor.lhs.false140, %lor.lhs.false134, %lor.lhs.false128, %lor.lhs.false122, %if.else116
  %cmp165.old = icmp eq i8 %0, %1, !dbg !2965
  br i1 %cmp165.old, label %if.end173, label %cleanup267, !dbg !2969

if.end173:                                        ; preds = %if.then164, %if.else, %land.lhs.true109, %lor.lhs.false158, %land.lhs.true66, %if.end10
  %cmp174 = icmp ugt i8 %1, %0, !dbg !2970
  br i1 %cmp174, label %if.then176, label %if.end180, !dbg !2972

if.then176:                                       ; preds = %if.end173
  %cmp177 = icmp eq i32 %offset, 0, !dbg !2973
  %conv179 = zext i1 %cmp177 to i8, !dbg !2974
  br label %cleanup267, !dbg !2975

if.end180:                                        ; preds = %if.end173
  %tobool = icmp eq %struct.rtx_def* %reg, null, !dbg !2976
  br i1 %tobool, label %if.end252, label %land.lhs.true181, !dbg !2977

land.lhs.true181:                                 ; preds = %if.end180
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !2978
  %bf.load = load i32, i32* %7, align 8, !dbg !2978
  %bf.clear = and i32 %bf.load, 65535, !dbg !2978
  %cmp182 = icmp eq i32 %bf.clear, 37, !dbg !2978
  br i1 %cmp182, label %land.lhs.true184, label %if.end252, !dbg !2979

land.lhs.true184:                                 ; preds = %land.lhs.true181
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %reg) #8, !dbg !2980
  %cmp185 = icmp ult i32 %call, 53, !dbg !2980
  br i1 %cmp185, label %if.then187, label %if.end252, !dbg !2981

if.then187:                                       ; preds = %land.lhs.true184
  %call188 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %reg) #8, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %call188, metadata !2923, metadata !DIExpression()), !dbg !2983
  %arrayidx190 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !2984
  %8 = load i8, i8* %arrayidx190, align 1, !dbg !2984
  %cmp192 = icmp eq i8 %8, 10, !dbg !2984
  br i1 %cmp192, label %land.lhs.true236, label %lor.lhs.false194, !dbg !2984

lor.lhs.false194:                                 ; preds = %if.then187
  %cmp198 = icmp eq i8 %8, 11, !dbg !2984
  br i1 %cmp198, label %land.lhs.true236, label %lor.lhs.false200, !dbg !2986

lor.lhs.false200:                                 ; preds = %lor.lhs.false194
  %cmp204 = icmp eq i8 %8, 12, !dbg !2987
  br i1 %cmp204, label %land.lhs.true236, label %lor.lhs.false206, !dbg !2987

lor.lhs.false206:                                 ; preds = %lor.lhs.false200
  %cmp210 = icmp eq i8 %8, 17, !dbg !2987
  br i1 %cmp210, label %land.lhs.true236, label %lor.lhs.false212, !dbg !2987

lor.lhs.false212:                                 ; preds = %lor.lhs.false206
  %cmp216 = icmp eq i8 %8, 13, !dbg !2987
  br i1 %cmp216, label %land.lhs.true236, label %lor.lhs.false218, !dbg !2987

lor.lhs.false218:                                 ; preds = %lor.lhs.false212
  %cmp222 = icmp eq i8 %8, 14, !dbg !2987
  br i1 %cmp222, label %land.lhs.true236, label %lor.lhs.false224, !dbg !2987

lor.lhs.false224:                                 ; preds = %lor.lhs.false218
  %cmp228 = icmp eq i8 %8, 15, !dbg !2987
  br i1 %cmp228, label %land.lhs.true236, label %lor.lhs.false230, !dbg !2987

lor.lhs.false230:                                 ; preds = %lor.lhs.false224
  %cmp234 = icmp eq i8 %8, 16, !dbg !2987
  br i1 %cmp234, label %land.lhs.true236, label %if.else243, !dbg !2988

land.lhs.true236:                                 ; preds = %lor.lhs.false230, %lor.lhs.false224, %lor.lhs.false218, %lor.lhs.false212, %lor.lhs.false206, %lor.lhs.false200, %lor.lhs.false194, %if.then187
  %arrayidx238 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !2989
  %9 = load i8, i8* %arrayidx238, align 1, !dbg !2989
  %conv239 = zext i8 %9 to i32, !dbg !2989
  %cmp240 = icmp eq i32 %conv239, %omode, !dbg !2990
  br i1 %cmp240, label %if.end250, label %if.else243, !dbg !2991

if.else243:                                       ; preds = %land.lhs.true236, %lor.lhs.false230
  %idxprom244 = zext i32 %call188 to i64, !dbg !2992
  %arrayidx245 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom244, !dbg !2992
  %10 = load i32, i32* %arrayidx245, align 4, !dbg !2992
  %call246 = tail call zeroext i8 @ix86_cannot_change_mode_class(i32 %imode, i32 %omode, i32 %10) #7, !dbg !2992
  %tobool247 = icmp eq i8 %call246, 0, !dbg !2992
  br i1 %tobool247, label %if.end250, label %cleanup267, !dbg !2994

if.end250:                                        ; preds = %if.else243, %land.lhs.true236
  %call251 = tail call zeroext i8 @subreg_offset_representable_p(i32 %call188, i32 %imode, i32 %offset, i32 %omode) #7, !dbg !2995
  br label %cleanup267, !dbg !2996

if.end252:                                        ; preds = %if.end180, %land.lhs.true184, %land.lhs.true181
  %cmp253 = icmp ult i8 %1, 4, !dbg !2997
  br i1 %cmp253, label %if.then255, label %if.end266, !dbg !2998

if.then255:                                       ; preds = %if.end252
  %cmp256 = icmp ugt i8 %0, 4, !dbg !2999
  %11 = load i32, i32* @word_mode, align 4, !dbg !3000
  %cond = select i1 %cmp256, i32 %11, i32 %imode, !dbg !3000
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2926, metadata !DIExpression()), !dbg !3001
  %call258 = tail call i32 @subreg_lowpart_offset(i32 %omode, i32 %cond) #8, !dbg !3002
  call void @llvm.dbg.value(metadata i32 0, metadata !2929, metadata !DIExpression()), !dbg !3001
  %rem259 = and i32 %offset, 3, !dbg !3003
  %cmp260 = icmp eq i32 %rem259, 0, !dbg !3005
  br i1 %cmp260, label %if.end266, label %cleanup267

if.end266:                                        ; preds = %if.then255, %if.end252
  br label %cleanup267, !dbg !3006

cleanup267:                                       ; preds = %if.then164, %if.else243, %lor.lhs.false158, %if.end250, %entry, %if.then255, %if.end266, %if.then176
  %retval.2 = phi i8 [ %conv179, %if.then176 ], [ 0, %if.then255 ], [ 1, %if.end266 ], [ 0, %entry ], [ 0, %if.then164 ], [ %call251, %if.end250 ], [ 0, %if.else243 ], [ 0, %lor.lhs.false158 ], !dbg !2930
  ret i8 %retval.2, !dbg !3007
}

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @subreg_offset_representable_p(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_lowpart_offset(i32 %outermode, i32 %innermode) local_unnamed_addr #5 !dbg !3008 {
entry:
  call void @llvm.dbg.value(metadata i32 %outermode, metadata !3012, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.value(metadata i32 %innermode, metadata !3013, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.value(metadata i32 0, metadata !3014, metadata !DIExpression()), !dbg !3016
  ret i32 0, !dbg !3017
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32 %mode, %struct.rtx_def* %reg, i32 %offset) local_unnamed_addr #5 !dbg !3018 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3022, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3023, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3024, metadata !DIExpression()), !dbg !3025
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3026
  %bf.load = load i32, i32* %0, align 8, !dbg !3026
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3026
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3026
  %call = tail call zeroext i8 @validate_subreg(i32 %mode, i32 %bf.clear, %struct.rtx_def* %reg, i32 %offset) #8, !dbg !3026
  %tobool = icmp eq i8 %call, 0, !dbg !3026
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3026

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 776, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3026
  br label %cond.end, !dbg !3026

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ei_stat(i32 39, i32 %mode, %struct.rtx_def* %reg, i32 %offset) #7, !dbg !3027
  ret %struct.rtx_def* %call1, !dbg !3028
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ei_stat(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32 %mode, %struct.rtx_def* %reg) local_unnamed_addr #5 !dbg !3029 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3031, metadata !DIExpression()), !dbg !3034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3032, metadata !DIExpression()), !dbg !3034
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3035
  %bf.load = load i32, i32* %0, align 8, !dbg !3035
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3035
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3033, metadata !DIExpression()), !dbg !3034
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3036
  %spec.select = select i1 %cmp, i32 %mode, i32 %bf.clear, !dbg !3038
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3033, metadata !DIExpression()), !dbg !3034
  %call = tail call i32 @subreg_lowpart_offset(i32 %mode, i32 %spec.select) #8, !dbg !3039
  %call1 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %mode, %struct.rtx_def* %reg, i32 0) #8, !dbg !3040
  ret %struct.rtx_def* %call1, !dbg !3041
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtvec_def* @gen_rtvec(i32 %n, ...) local_unnamed_addr #5 !dbg !3042 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %n, metadata !3046, metadata !DIExpression()), !dbg !3056
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !3057
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !3057
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !3049, metadata !DIExpression()), !dbg !3058
  call void @llvm.va_start(i8* %0), !dbg !3059
  %cmp = icmp eq i32 %n, 0, !dbg !3060
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3062

if.end:                                           ; preds = %entry
  %call = call %struct.rtvec_def* @rtvec_alloc(i32 %n) #7, !dbg !3063
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call, metadata !3048, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.value(metadata i32 0, metadata !3047, metadata !DIExpression()), !dbg !3056
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 0, !dbg !3064
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 2, !dbg !3064
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 3, !dbg !3064
  %2 = sext i32 %n to i64, !dbg !3067
  br label %for.cond, !dbg !3067

for.cond:                                         ; preds = %vaarg.end, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %vaarg.end ], [ 0, %if.end ], !dbg !3068
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3047, metadata !DIExpression()), !dbg !3056
  %cmp2 = icmp slt i64 %indvars.iv, %2, !dbg !3069
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3070

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !3071
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !3071
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !3071

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !3071
  %3 = sext i32 %gp_offset to i64, !dbg !3071
  %4 = getelementptr i8, i8* %reg_save_area, i64 %3, !dbg !3071
  %5 = add i32 %gp_offset, 8, !dbg !3071
  store i32 %5, i32* %gp_offset_p, align 16, !dbg !3071
  br label %vaarg.end, !dbg !3071

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !3071
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !3071
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !3071
  br label %vaarg.end, !dbg !3071

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %4, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %6 = bitcast i8* %vaarg.addr.in to i64*, !dbg !3071
  %7 = load i64, i64* %6, align 8, !dbg !3071
  %arrayidx = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !3072
  %8 = bitcast %struct.rtx_def** %arrayidx to i64*, !dbg !3073
  store i64 %7, i64* %8, align 8, !dbg !3073
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3074
  call void @llvm.dbg.value(metadata i32 undef, metadata !3047, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3056
  br label %for.cond, !dbg !3075, !llvm.loop !3076

for.end:                                          ; preds = %for.cond
  call void @llvm.va_end(i8* nonnull %0), !dbg !3078
  br label %cleanup, !dbg !3079

cleanup:                                          ; preds = %entry, %for.end
  %retval.0 = phi %struct.rtvec_def* [ %call, %for.end ], [ null, %entry ], !dbg !3056
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !3080
  ret %struct.rtvec_def* %retval.0, !dbg !3080
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind uwtable
define dso_local %struct.rtvec_def* @gen_rtvec_v(i32 %n, %struct.rtx_def** %argp) local_unnamed_addr #5 !dbg !3081 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !3085, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata %struct.rtx_def** %argp, metadata !3086, metadata !DIExpression()), !dbg !3089
  %cmp = icmp eq i32 %n, 0, !dbg !3090
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3092

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtvec_def* @rtvec_alloc(i32 %n) #7, !dbg !3093
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call, metadata !3088, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 0, metadata !3087, metadata !DIExpression()), !dbg !3089
  %0 = sext i32 %n to i64, !dbg !3094
  br label %for.cond, !dbg !3094

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !3096
  %argp.addr.0 = phi %struct.rtx_def** [ %incdec.ptr, %for.body ], [ %argp, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def** %argp.addr.0, metadata !3086, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3087, metadata !DIExpression()), !dbg !3089
  %cmp1 = icmp slt i64 %indvars.iv, %0, !dbg !3097
  br i1 %cmp1, label %for.body, label %cleanup.loopexit, !dbg !3099

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %argp.addr.0, i64 1, !dbg !3100
  call void @llvm.dbg.value(metadata %struct.rtx_def** %incdec.ptr, metadata !3086, metadata !DIExpression()), !dbg !3089
  %1 = bitcast %struct.rtx_def** %argp.addr.0 to i64*, !dbg !3101
  %2 = load i64, i64* %1, align 8, !dbg !3101
  %arrayidx = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !3102
  %3 = bitcast %struct.rtx_def** %arrayidx to i64*, !dbg !3103
  store i64 %2, i64* %3, align 8, !dbg !3103
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3104
  call void @llvm.dbg.value(metadata i32 undef, metadata !3087, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3089
  br label %for.cond, !dbg !3105, !llvm.loop !3106

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3108

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %struct.rtvec_def* [ null, %entry ], [ %call, %cleanup.loopexit ], !dbg !3089
  ret %struct.rtvec_def* %retval.0, !dbg !3108
}

; Function Attrs: nounwind uwtable
define dso_local i32 @byte_lowpart_offset(i32 %outer_mode, i32 %inner_mode) local_unnamed_addr #5 !dbg !3109 {
entry:
  call void @llvm.dbg.value(metadata i32 %outer_mode, metadata !3113, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata i32 %inner_mode, metadata !3114, metadata !DIExpression()), !dbg !3115
  %idxprom = zext i32 %outer_mode to i64, !dbg !3116
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3116
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3116
  %idxprom2 = zext i32 %inner_mode to i64, !dbg !3118
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2, !dbg !3118
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !3118
  %cmp = icmp ult i8 %0, %1, !dbg !3119
  br i1 %cmp, label %if.then, label %if.else, !dbg !3120

if.then:                                          ; preds = %entry
  %call = tail call i32 @subreg_lowpart_offset(i32 %outer_mode, i32 %inner_mode) #8, !dbg !3121
  br label %return, !dbg !3122

if.else:                                          ; preds = %entry
  %call7 = tail call i32 @subreg_lowpart_offset(i32 %inner_mode, i32 %outer_mode) #8, !dbg !3123
  br label %return, !dbg !3124

return:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !3125
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_reg_rtx(i32 %mode) local_unnamed_addr #5 !dbg !3126 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3130, metadata !DIExpression()), !dbg !3146
  %call = tail call i32 @get_mode_alignment(i32 %mode) #7, !dbg !3147
  call void @llvm.dbg.value(metadata i32 %call, metadata !3132, metadata !DIExpression()), !dbg !3146
  %0 = load i32, i32* @reload_in_progress, align 4, !dbg !3148
  %1 = load i32, i32* @reload_completed, align 4, !dbg !3148
  %2 = or i32 %0, %1, !dbg !3148
  %3 = icmp eq i32 %2, 0, !dbg !3148
  br i1 %3, label %cond.end, label %cond.true, !dbg !3148

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3148
  br label %cond.end, !dbg !3148

cond.end:                                         ; preds = %entry, %cond.true
  %4 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3149
  %cmp = icmp uge i32 %4, %call, !dbg !3150
  %5 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 46), align 2, !dbg !3151
  %tobool3 = icmp ne i8 %5, 0, !dbg !3152
  %or.cond1 = or i1 %cmp, %tobool3, !dbg !3153
  br i1 %or.cond1, label %if.end7, label %if.then, !dbg !3153

if.then:                                          ; preds = %cond.end
  %call4 = tail call i32 @ix86_minimum_alignment(%union.tree_node* null, i32 %mode, i32 %call) #7, !dbg !3154
  call void @llvm.dbg.value(metadata i32 %call4, metadata !3133, metadata !DIExpression()), !dbg !3155
  %6 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3156
  %cmp5 = icmp ult i32 %6, %call4, !dbg !3158
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3159

if.then6:                                         ; preds = %if.then
  store i32 %call4, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 26), align 4, !dbg !3160
  br label %if.end7, !dbg !3161

if.end7:                                          ; preds = %if.then, %if.then6, %cond.end
  %7 = load i32, i32* @generating_concat_p, align 4, !dbg !3162
  %tobool8 = icmp eq i32 %7, 0, !dbg !3162
  br i1 %tobool8, label %if.end24, label %land.lhs.true9, !dbg !3163

land.lhs.true9:                                   ; preds = %if.end7
  %idxprom = zext i32 %mode to i64, !dbg !3164
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3164
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3164
  %cmp10 = icmp eq i8 %8, 11, !dbg !3165
  br i1 %cmp10, label %if.then17, label %lor.lhs.false, !dbg !3166

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %cmp15 = icmp eq i8 %8, 10, !dbg !3167
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !3168

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true9
  %arrayidx19 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !3169
  %9 = load i8, i8* %arrayidx19, align 1, !dbg !3169
  %conv20 = zext i8 %9 to i32, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %conv20, metadata !3140, metadata !DIExpression()), !dbg !3170
  %call21 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %conv20) #8, !dbg !3171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !3136, metadata !DIExpression()), !dbg !3170
  %call22 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %conv20) #8, !dbg !3172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !3139, metadata !DIExpression()), !dbg !3170
  %call23 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %mode, %struct.rtx_def* %call21, %struct.rtx_def* %call22) #7, !dbg !3173
  ret %struct.rtx_def* %call23, !dbg !3174

if.end24:                                         ; preds = %if.end7, %lor.lhs.false
  %10 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !3175
  %11 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 8), align 4, !dbg !3176
  %cmp25 = icmp eq i32 %10, %11, !dbg !3177
  br i1 %cmp25, label %if.then27, label %if.end43, !dbg !3178

if.then27:                                        ; preds = %if.end24
  call void @llvm.dbg.value(metadata i32 %11, metadata !3141, metadata !DIExpression()), !dbg !3179
  %12 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3180
  %mul = shl nsw i32 %10, 1, !dbg !3180
  %conv28 = sext i32 %mul to i64, !dbg !3180
  %call30 = tail call i8* @xrealloc(i8* %12, i64 %conv28) #7, !dbg !3180
  call void @llvm.dbg.value(metadata i8* %call30, metadata !3144, metadata !DIExpression()), !dbg !3179
  %idx.ext = sext i32 %10 to i64, !dbg !3181
  %add.ptr = getelementptr inbounds i8, i8* %call30, i64 %idx.ext, !dbg !3181
  %call32 = tail call i8* @memset(i8* %add.ptr, i32 0, i64 %idx.ext) #7, !dbg !3182
  store i8* %call30, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3183
  %13 = load i8*, i8** bitcast (%struct.rtx_def*** @regno_reg_rtx to i8**), align 8, !dbg !3184
  %mul35 = shl nsw i64 %conv28, 3, !dbg !3184
  %call36 = tail call i8* @ggc_realloc_stat(i8* %13, i64 %mul35) #7, !dbg !3184
  %14 = bitcast i8* %call36 to %struct.rtx_def**, !dbg !3184
  call void @llvm.dbg.value(metadata %struct.rtx_def** %14, metadata !3145, metadata !DIExpression()), !dbg !3179
  %add.ptr38 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %14, i64 %idx.ext, !dbg !3185
  %15 = bitcast %struct.rtx_def** %add.ptr38 to i8*, !dbg !3186
  %mul40 = shl nsw i64 %idx.ext, 3, !dbg !3187
  %call41 = tail call i8* @memset(i8* %15, i32 0, i64 %mul40) #7, !dbg !3188
  store i8* %call36, i8** bitcast (%struct.rtx_def*** @regno_reg_rtx to i8**), align 8, !dbg !3189
  store i32 %mul, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 8), align 4, !dbg !3190
  %.pre = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !3191
  br label %if.end43, !dbg !3192

if.end43:                                         ; preds = %if.then27, %if.end24
  %16 = phi i32 [ %.pre, %if.then27 ], [ %10, %if.end24 ], !dbg !3191
  %call44 = tail call %struct.rtx_def* @gen_raw_REG(i32 %mode, i32 %16) #8, !dbg !3193
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !3131, metadata !DIExpression()), !dbg !3146
  %17 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !3194
  %18 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !3195
  %inc = add nsw i32 %18, 1, !dbg !3195
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !3195
  %idxprom45 = sext i32 %18 to i64, !dbg !3194
  %arrayidx46 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %17, i64 %idxprom45, !dbg !3194
  store %struct.rtx_def* %call44, %struct.rtx_def** %arrayidx46, align 8, !dbg !3196
  ret %struct.rtx_def* %call44, !dbg !3174
}

declare dso_local i32 @get_mode_alignment(i32) local_unnamed_addr #2

declare dso_local i32 @ix86_minimum_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i8* @ggc_realloc_stat(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_REG_offset(%struct.rtx_def* %reg, i32 %mode, i32 %regno, i32 %offset) local_unnamed_addr #5 !dbg !3197 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3201, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3202, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3203, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3204, metadata !DIExpression()), !dbg !3206
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %regno) #8, !dbg !3207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3205, metadata !DIExpression()), !dbg !3206
  tail call fastcc void @update_reg_offset(%struct.rtx_def* %call, %struct.rtx_def* %reg, i32 %offset) #8, !dbg !3208
  ret %struct.rtx_def* %call, !dbg !3209
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_reg_offset(%struct.rtx_def* %new_rtx, %struct.rtx_def* %reg, i32 %offset) unnamed_addr #5 !dbg !3210 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx, metadata !3214, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3215, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3216, metadata !DIExpression()), !dbg !3217
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3218
  %rt_reg = bitcast %union.rtunion_def* %0 to %struct.reg_attrs**, !dbg !3218
  %1 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !3218
  %cmp = icmp eq %struct.reg_attrs* %1, null, !dbg !3218
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3218

cond.false:                                       ; preds = %entry
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %1, i64 0, i32 0, !dbg !3218
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3218
  br label %cond.end, !dbg !3218

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !3218
  br i1 %cmp, label %cond.end17, label %cond.false11, !dbg !3219

cond.false11:                                     ; preds = %cond.end
  %offset16 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %1, i64 0, i32 1, !dbg !3219
  %3 = load i64, i64* %offset16, align 8, !dbg !3219
  %phitmp = trunc i64 %3 to i32, !dbg !3219
  br label %cond.end17, !dbg !3219

cond.end17:                                       ; preds = %cond.end, %cond.false11
  %cond18 = phi i32 [ %phitmp, %cond.false11 ], [ 0, %cond.end ]
  %conv19 = add i32 %cond18, %offset, !dbg !3219
  %call = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %cond, i32 %conv19) #8, !dbg !3220
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3221
  %rt_reg23 = bitcast %union.rtunion_def* %4 to %struct.reg_attrs**, !dbg !3221
  store %struct.reg_attrs* %call, %struct.reg_attrs** %rt_reg23, align 8, !dbg !3222
  ret void, !dbg !3223
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_reg_rtx_offset(%struct.rtx_def* %reg, i32 %mode, i32 %offset) local_unnamed_addr #5 !dbg !3224 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3228, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3229, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3230, metadata !DIExpression()), !dbg !3232
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #8, !dbg !3233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3231, metadata !DIExpression()), !dbg !3232
  tail call fastcc void @update_reg_offset(%struct.rtx_def* %call, %struct.rtx_def* %reg, i32 %offset) #8, !dbg !3234
  ret %struct.rtx_def* %call, !dbg !3235
}

; Function Attrs: nounwind uwtable
define dso_local void @adjust_reg_mode(%struct.rtx_def* %reg, i32 %mode) local_unnamed_addr #5 !dbg !3236 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3240, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3241, metadata !DIExpression()), !dbg !3242
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3243
  %bf.load = load i32, i32* %0, align 8, !dbg !3243
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3243
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3243
  %call = tail call i32 @byte_lowpart_offset(i32 %mode, i32 %bf.clear) #8, !dbg !3244
  tail call fastcc void @update_reg_offset(%struct.rtx_def* %reg, %struct.rtx_def* %reg, i32 0) #8, !dbg !3245
  %bf.load1 = load i32, i32* %0, align 8, !dbg !3246
  %bf.value = shl i32 %mode, 16, !dbg !3246
  %bf.shl = and i32 %bf.value, 16711680, !dbg !3246
  %bf.clear2 = and i32 %bf.load1, -16711681, !dbg !3246
  %bf.set = or i32 %bf.clear2, %bf.shl, !dbg !3246
  store i32 %bf.set, i32* %0, align 8, !dbg !3246
  ret void, !dbg !3247
}

; Function Attrs: nounwind uwtable
define dso_local void @set_reg_attrs_from_value(%struct.rtx_def* %reg, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3248 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3252, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3253, metadata !DIExpression()), !dbg !3255
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #8, !dbg !3256
  %cmp = icmp ult i32 %call, 53, !dbg !3256
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3258

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3259
  %bf.load = load i32, i32* %0, align 8, !dbg !3259
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3259
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3259
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3260
  %bf.load1 = load i32, i32* %1, align 8, !dbg !3260
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !3260
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !3260
  %call4 = tail call i32 @byte_lowpart_offset(i32 %bf.clear, i32 %bf.clear3) #8, !dbg !3261
  call void @llvm.dbg.value(metadata i32 0, metadata !3254, metadata !DIExpression()), !dbg !3255
  %bf.load5 = load i32, i32* %1, align 8, !dbg !3262
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3262
  %cmp7 = icmp eq i32 %bf.clear6, 43, !dbg !3262
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !3264

if.then8:                                         ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3265
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !3265
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3265
  %cmp9 = icmp eq %struct.mem_attrs* %3, null, !dbg !3265
  br i1 %cmp9, label %if.end65, label %cond.false, !dbg !3268

cond.false:                                       ; preds = %if.then8
  %offset14 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 1, !dbg !3265
  %4 = load %struct.rtx_def*, %struct.rtx_def** %offset14, align 8, !dbg !3265
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !3265
  br i1 %tobool, label %if.end65, label %land.lhs.true, !dbg !3268

land.lhs.true:                                    ; preds = %cond.false
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3268
  %bf.load27 = load i32, i32* %5, align 8, !dbg !3269
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3269
  %cmp29 = icmp eq i32 %bf.clear28, 30, !dbg !3269
  br i1 %cmp29, label %if.then30, label %if.end65, !dbg !3270

if.then30:                                        ; preds = %land.lhs.true
  br i1 false, label %if.then30.cond.end42_crit_edge, label %cond.false37, !dbg !3271

if.then30.cond.end42_crit_edge:                   ; preds = %if.then30
  br label %cond.end42, !dbg !3271

cond.false37:                                     ; preds = %if.then30
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 0, !dbg !3271
  %6 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3271
  br label %cond.end42, !dbg !3271

cond.end42:                                       ; preds = %if.then30.cond.end42_crit_edge, %cond.false37
  %cond43 = phi %union.tree_node* [ %6, %cond.false37 ], [ undef, %if.then30.cond.end42_crit_edge ], !dbg !3271
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !3272
  %arrayidx59 = bitcast %union.u* %u58 to i64*, !dbg !3272
  %7 = load i64, i64* %arrayidx59, align 8, !dbg !3272
  %8 = trunc i64 %7 to i32, !dbg !3272
  %call61 = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %cond43, i32 %8) #8, !dbg !3273
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3274
  %rt_reg = bitcast %union.rtunion_def* %9 to %struct.reg_attrs**, !dbg !3274
  store %struct.reg_attrs* %call61, %struct.reg_attrs** %rt_reg, align 8, !dbg !3275
  %bf.load66.pre = load i32, i32* %1, align 8, !dbg !3276
  br label %if.end65, !dbg !3274

if.end65:                                         ; preds = %cond.false, %if.then8, %cond.end42, %land.lhs.true
  %bf.load66 = phi i32 [ %bf.load5, %cond.false ], [ %bf.load5, %if.then8 ], [ %bf.load66.pre, %cond.end42 ], [ %bf.load5, %land.lhs.true ], !dbg !3276
  %bf.clear68 = and i32 %bf.load66, 1073741824, !dbg !3276
  %tobool69 = icmp eq i32 %bf.clear68, 0, !dbg !3276
  br i1 %tobool69, label %cleanup.cont, label %if.then70, !dbg !3278

if.then70:                                        ; preds = %if.end65
  tail call void @mark_reg_pointer(%struct.rtx_def* %reg, i32 0) #8, !dbg !3279
  br label %cleanup.cont, !dbg !3279

if.else:                                          ; preds = %if.end
  %cmp74 = icmp eq i32 %bf.clear6, 37, !dbg !3280
  br i1 %cmp74, label %if.then76, label %cleanup.cont, !dbg !3282

if.then76:                                        ; preds = %if.else
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3283
  %rt_reg80 = bitcast %union.rtunion_def* %10 to %struct.reg_attrs**, !dbg !3283
  %11 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg80, align 8, !dbg !3283
  %tobool81 = icmp eq %struct.reg_attrs* %11, null, !dbg !3283
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !3286

if.then82:                                        ; preds = %if.then76
  tail call fastcc void @update_reg_offset(%struct.rtx_def* %reg, %struct.rtx_def* %x, i32 0) #8, !dbg !3287
  %bf.load84.pre = load i32, i32* %1, align 8, !dbg !3288
  br label %if.end83, !dbg !3287

if.end83:                                         ; preds = %if.then76, %if.then82
  %bf.load84 = phi i32 [ %bf.load5, %if.then76 ], [ %bf.load84.pre, %if.then82 ], !dbg !3288
  %bf.clear86 = and i32 %bf.load84, 1073741824, !dbg !3288
  %tobool87 = icmp eq i32 %bf.clear86, 0, !dbg !3288
  br i1 %tobool87, label %cleanup.cont, label %if.then88, !dbg !3290

if.then88:                                        ; preds = %if.end83
  %12 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3291
  %call89 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !3291
  %idxprom = zext i32 %call89 to i64, !dbg !3291
  %arrayidx90 = getelementptr inbounds i8, i8* %12, i64 %idxprom, !dbg !3291
  %13 = load i8, i8* %arrayidx90, align 1, !dbg !3291
  %conv91 = zext i8 %13 to i32, !dbg !3291
  tail call void @mark_reg_pointer(%struct.rtx_def* %reg, i32 %conv91) #8, !dbg !3292
  br label %cleanup.cont, !dbg !3292

cleanup.cont:                                     ; preds = %if.end65, %if.end83, %entry, %if.else, %if.then88, %if.then70
  ret void, !dbg !3293
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %decl, i32 %offset) unnamed_addr #5 !dbg !3294 {
entry:
  %attrs = alloca %struct.reg_attrs, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3298, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3299, metadata !DIExpression()), !dbg !3302
  %0 = bitcast %struct.reg_attrs* %attrs to i8*, !dbg !3303
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !3303
  %cmp = icmp eq %union.tree_node* %decl, null, !dbg !3304
  %cmp1 = icmp eq i32 %offset, 0, !dbg !3306
  %or.cond = and i1 %cmp, %cmp1, !dbg !3307
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !3307

if.end:                                           ; preds = %entry
  %decl2 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %attrs, i64 0, i32 0, !dbg !3308
  store %union.tree_node* %decl, %union.tree_node** %decl2, align 8, !dbg !3309
  %conv = sext i32 %offset to i64, !dbg !3310
  %offset3 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %attrs, i64 0, i32 1, !dbg !3311
  store i64 %conv, i64* %offset3, align 8, !dbg !3312
  %1 = load %struct.htab*, %struct.htab** @reg_attrs_htab, align 8, !dbg !3313
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #7, !dbg !3314
  call void @llvm.dbg.value(metadata i8** %call, metadata !3301, metadata !DIExpression()), !dbg !3302
  %2 = load i8*, i8** %call, align 8, !dbg !3315
  %cmp4 = icmp eq i8* %2, null, !dbg !3317
  br i1 %cmp4, label %if.then6, label %if.end.if.end9_crit_edge, !dbg !3318

if.end.if.end9_crit_edge:                         ; preds = %if.end
  %3 = bitcast i8* %2 to %struct.reg_attrs*, !dbg !3318
  br label %if.end9, !dbg !3318

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @ggc_alloc_stat(i64 16) #7, !dbg !3319
  store i8* %call7, i8** %call, align 8, !dbg !3321
  %call8 = call i8* @memcpy(i8* %call7, i8* nonnull %0, i64 16) #7, !dbg !3322
  %.phi.trans.insert = bitcast i8** %call to %struct.reg_attrs**, !dbg !3302
  %.pre = load %struct.reg_attrs*, %struct.reg_attrs** %.phi.trans.insert, align 8, !dbg !3323
  br label %if.end9, !dbg !3324

if.end9:                                          ; preds = %if.end.if.end9_crit_edge, %if.then6
  %4 = phi %struct.reg_attrs* [ %.pre, %if.then6 ], [ %3, %if.end.if.end9_crit_edge ], !dbg !3323
  br label %cleanup, !dbg !3325

cleanup:                                          ; preds = %entry, %if.end9
  %retval.0 = phi %struct.reg_attrs* [ %4, %if.end9 ], [ null, %entry ], !dbg !3302
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !3326
  ret %struct.reg_attrs* %retval.0, !dbg !3326
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_reg_pointer(%struct.rtx_def* %reg, i32 %align) local_unnamed_addr #5 !dbg !3327 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3331, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.value(metadata i32 %align, metadata !3332, metadata !DIExpression()), !dbg !3333
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3334
  %bf.load = load i32, i32* %0, align 8, !dbg !3334
  %bf.clear = and i32 %bf.load, 1073741824, !dbg !3334
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !3334
  br i1 %tobool, label %if.then, label %if.else, !dbg !3336

if.then:                                          ; preds = %entry
  %bf.set = or i32 %bf.load, 1073741824, !dbg !3337
  store i32 %bf.set, i32* %0, align 8, !dbg !3337
  %tobool3 = icmp eq i32 %align, 0, !dbg !3339
  br i1 %tobool3, label %if.end17, label %if.then4, !dbg !3341

if.then4:                                         ; preds = %if.then
  %conv = trunc i32 %align to i8, !dbg !3342
  %1 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3343
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #8, !dbg !3343
  %idxprom = zext i32 %call to i64, !dbg !3343
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !3343
  store i8 %conv, i8* %arrayidx, align 1, !dbg !3344
  br label %if.end17, !dbg !3343

if.else:                                          ; preds = %entry
  %tobool5 = icmp eq i32 %align, 0, !dbg !3345
  br i1 %tobool5, label %if.end17, label %land.lhs.true, !dbg !3347

land.lhs.true:                                    ; preds = %if.else
  %2 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3348
  %call6 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #8, !dbg !3348
  %idxprom7 = zext i32 %call6 to i64, !dbg !3348
  %arrayidx8 = getelementptr inbounds i8, i8* %2, i64 %idxprom7, !dbg !3348
  %3 = load i8, i8* %arrayidx8, align 1, !dbg !3348
  %conv9 = zext i8 %3 to i32, !dbg !3348
  %cmp = icmp sgt i32 %conv9, %align, !dbg !3349
  br i1 %cmp, label %if.then11, label %if.end17, !dbg !3350

if.then11:                                        ; preds = %land.lhs.true
  %conv12 = trunc i32 %align to i8, !dbg !3351
  %4 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !3352
  %call13 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #8, !dbg !3352
  %idxprom14 = zext i32 %call13 to i64, !dbg !3352
  %arrayidx15 = getelementptr inbounds i8, i8* %4, i64 %idxprom14, !dbg !3352
  store i8 %conv12, i8* %arrayidx15, align 1, !dbg !3353
  br label %if.end17, !dbg !3352

if.end17:                                         ; preds = %if.else, %if.then, %land.lhs.true, %if.then11, %if.then4
  ret void, !dbg !3354
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_reg_rtx_and_attrs(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3355 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3357, metadata !DIExpression()), !dbg !3359
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3360
  %bf.load = load i32, i32* %0, align 8, !dbg !3360
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3360
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3360
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #8, !dbg !3361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3358, metadata !DIExpression()), !dbg !3359
  tail call void @set_reg_attrs_from_value(%struct.rtx_def* %call, %struct.rtx_def* %x) #8, !dbg !3362
  ret %struct.rtx_def* %call, !dbg !3363
}

; Function Attrs: nounwind uwtable
define dso_local void @set_reg_attrs_for_parm(%struct.rtx_def* %parm_rtx, %struct.rtx_def* %mem) local_unnamed_addr #5 !dbg !3364 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %parm_rtx, metadata !3366, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !3367, metadata !DIExpression()), !dbg !3376
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parm_rtx, i64 0, i32 0, !dbg !3377
  %bf.load = load i32, i32* %0, align 8, !dbg !3377
  %bf.clear = and i32 %bf.load, 65535, !dbg !3377
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3377
  br i1 %cmp, label %if.then, label %if.else, !dbg !3378

if.then:                                          ; preds = %entry
  tail call void @set_reg_attrs_from_value(%struct.rtx_def* %parm_rtx, %struct.rtx_def* %mem) #8, !dbg !3379
  br label %if.end51, !dbg !3379

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 15, !dbg !3380
  br i1 %cmp3, label %if.then4, label %if.end51, !dbg !3381

if.then4:                                         ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parm_rtx, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3382
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !3382
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3382
  %arrayidx5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 0, !dbg !3382
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !3382
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3382
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !3382
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3382
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !3382
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !3368, metadata !DIExpression()), !dbg !3383
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3384
  %rt_mem = bitcast %union.rtunion_def* %4 to %struct.mem_attrs**, !dbg !3384
  %5 = zext i1 %tobool to i64, !dbg !3386
  br label %for.cond, !dbg !3386

for.cond:                                         ; preds = %for.inc, %if.then4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %5, %if.then4 ]
  %.pre1 = phi %struct.rtvec_def* [ %.pre, %for.inc ], [ %1, %if.then4 ]
  %6 = phi %struct.rtvec_def* [ %.pre, %for.inc ], [ %1, %if.then4 ], !dbg !3387
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3368, metadata !DIExpression()), !dbg !3383
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !3387
  %7 = load i32, i32* %num_elem, align 8, !dbg !3387
  %8 = sext i32 %7 to i64, !dbg !3388
  %cmp13 = icmp slt i64 %indvars.iv, %8, !dbg !3388
  br i1 %cmp13, label %for.body, label %if.end51.loopexit, !dbg !3389

for.body:                                         ; preds = %for.cond
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv, !dbg !3390
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !3390
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !3372, metadata !DIExpression()), !dbg !3391
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3392
  %10 = bitcast %union.rtunion_def* %arrayidx22 to i32**, !dbg !3392
  %11 = load i32*, i32** %10, align 8, !dbg !3392
  %bf.load24 = load i32, i32* %11, align 8, !dbg !3392
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !3392
  %cmp26 = icmp eq i32 %bf.clear25, 37, !dbg !3392
  br i1 %cmp26, label %if.then27, label %for.inc, !dbg !3393

if.then27:                                        ; preds = %for.body
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3394
  %cmp31 = icmp eq %struct.mem_attrs* %12, null, !dbg !3394
  br i1 %cmp31, label %cond.end, label %cond.false, !dbg !3394

cond.false:                                       ; preds = %if.then27
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 0, !dbg !3394
  %13 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3394
  br label %cond.end, !dbg !3394

cond.end:                                         ; preds = %if.then27, %cond.false
  %cond36 = phi %union.tree_node* [ %13, %cond.false ], [ null, %if.then27 ], !dbg !3394
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3395
  %rt_rtx40 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !3395
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !3395
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, !dbg !3395
  %arrayidx42 = bitcast %union.u* %u41 to i64*, !dbg !3395
  %16 = load i64, i64* %arrayidx42, align 8, !dbg !3395
  %conv = trunc i64 %16 to i32, !dbg !3395
  %call = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %cond36, i32 %conv) #8, !dbg !3396
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !3397
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !3397
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3397
  %rt_reg = bitcast %union.rtunion_def* %18 to %struct.reg_attrs**, !dbg !3397
  store %struct.reg_attrs* %call, %struct.reg_attrs** %rt_reg, align 8, !dbg !3398
  %.pre.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3387
  br label %for.inc, !dbg !3397

for.inc:                                          ; preds = %for.body, %cond.end
  %.pre = phi %struct.rtvec_def* [ %.pre1, %for.body ], [ %.pre.pre, %cond.end ], !dbg !3387
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3399
  call void @llvm.dbg.value(metadata i32 undef, metadata !3368, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3383
  br label %for.cond, !dbg !3400, !llvm.loop !3401

if.end51.loopexit:                                ; preds = %for.cond
  br label %if.end51, !dbg !3403

if.end51:                                         ; preds = %if.end51.loopexit, %if.else, %if.then
  ret void, !dbg !3403
}

; Function Attrs: nounwind uwtable
define dso_local void @set_reg_attrs_for_decl_rtl(%union.tree_node* %t, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3404 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3408, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3409, metadata !DIExpression()), !dbg !3418
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3419
  %bf.load = load i32, i32* %0, align 8, !dbg !3419
  %bf.clear = and i32 %bf.load, 65535, !dbg !3419
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !3421
  br i1 %cmp, label %if.then, label %if.end, !dbg !3422

if.then:                                          ; preds = %entry
  %call = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %x) #8, !dbg !3423
  %tobool = icmp eq i32 %call, 0, !dbg !3423
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3423

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1039, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3423
  br label %cond.end, !dbg !3423

cond.end:                                         ; preds = %if.then, %cond.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3425
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3425
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3409, metadata !DIExpression()), !dbg !3418
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3426
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3428
  br label %if.end, !dbg !3429

if.end:                                           ; preds = %cond.end, %entry
  %bf.load5 = phi i32 [ %bf.load1.pre, %cond.end ], [ %bf.load, %entry ], !dbg !3428
  %x.addr.0 = phi %struct.rtx_def* [ %1, %cond.end ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3409, metadata !DIExpression()), !dbg !3418
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !3428
  %bf.clear2 = and i32 %bf.load5, 65535, !dbg !3428
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !3428
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !3430

if.then4:                                         ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !3431
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !3431
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3432
  %3 = bitcast i40* %mode to i64*, !dbg !3432
  %bf.load7 = load i64, i64* %3, align 8, !dbg !3432
  %4 = trunc i64 %bf.load7 to i32, !dbg !3432
  %bf.cast = and i32 %4, 255, !dbg !3432
  %call9 = tail call i32 @byte_lowpart_offset(i32 %bf.clear6, i32 %bf.cast) #8, !dbg !3433
  %call10 = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %t, i32 0) #8, !dbg !3434
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3435
  %rt_reg = bitcast %union.rtunion_def* %5 to %struct.reg_attrs**, !dbg !3435
  store %struct.reg_attrs* %call10, %struct.reg_attrs** %rt_reg, align 8, !dbg !3436
  %bf.load15.pre = load i32, i32* %2, align 8, !dbg !3437
  br label %if.end14, !dbg !3435

if.end14:                                         ; preds = %if.then4, %if.end
  %bf.load15 = phi i32 [ %bf.load15.pre, %if.then4 ], [ %bf.load5, %if.end ], !dbg !3437
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3437
  %cmp17 = icmp eq i32 %bf.clear16, 41, !dbg !3439
  br i1 %cmp17, label %if.then18, label %if.end94, !dbg !3440

if.then18:                                        ; preds = %if.end14
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3441
  %6 = bitcast %union.rtunion_def* %arrayidx21 to i32**, !dbg !3441
  %7 = load i32*, i32** %6, align 8, !dbg !3441
  %bf.load23 = load i32, i32* %7, align 8, !dbg !3441
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3441
  %cmp25 = icmp eq i32 %bf.clear24, 37, !dbg !3441
  br i1 %cmp25, label %if.then26, label %if.end36, !dbg !3444

if.then26:                                        ; preds = %if.then18
  %call27 = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %t, i32 0) #8, !dbg !3445
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3446
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !3446
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3446
  %rt_reg35 = bitcast %union.rtunion_def* %9 to %struct.reg_attrs**, !dbg !3446
  store %struct.reg_attrs* %call27, %struct.reg_attrs** %rt_reg35, align 8, !dbg !3447
  br label %if.end36, !dbg !3446

if.end36:                                         ; preds = %if.then26, %if.then18
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3448
  %11 = bitcast %union.rtunion_def* %10 to i32**, !dbg !3448
  %12 = load i32*, i32** %11, align 8, !dbg !3448
  %bf.load41 = load i32, i32* %12, align 8, !dbg !3448
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !3448
  %cmp43 = icmp eq i32 %bf.clear42, 37, !dbg !3448
  br i1 %cmp43, label %if.then44, label %if.end94, !dbg !3450

if.then44:                                        ; preds = %if.end36
  %13 = load i32*, i32** %6, align 8, !dbg !3451
  %bf.load49 = load i32, i32* %13, align 8, !dbg !3451
  %bf.lshr50 = lshr i32 %bf.load49, 16, !dbg !3451
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !3451
  %idxprom = zext i32 %bf.clear51 to i64, !dbg !3451
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !3451
  %14 = load i8, i8* %arrayidx52, align 1, !dbg !3451
  %cmp53 = icmp eq i8 %14, 0, !dbg !3451
  br i1 %cmp53, label %cond.true55, label %cond.false67, !dbg !3451

cond.true55:                                      ; preds = %if.then44
  br label %cond.end82, !dbg !3451

cond.false67:                                     ; preds = %if.then44
  %idxprom78 = zext i8 %14 to i64, !dbg !3451
  br label %cond.end82, !dbg !3451

cond.end82:                                       ; preds = %cond.false67, %cond.true55
  %idxprom63.pn = phi i64 [ %idxprom, %cond.true55 ], [ %idxprom78, %cond.false67 ]
  %cond83.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom63.pn, !dbg !3451
  %cond83.in = load i8, i8* %cond83.in.in, align 1, !dbg !3451
  %cond83 = zext i8 %cond83.in to i32, !dbg !3451
  %call84 = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %t, i32 %cond83) #8, !dbg !3452
  %rt_rtx88 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !3453
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !3453
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3453
  %rt_reg92 = bitcast %union.rtunion_def* %16 to %struct.reg_attrs**, !dbg !3453
  store %struct.reg_attrs* %call84, %struct.reg_attrs** %rt_reg92, align 8, !dbg !3454
  br label %if.end94, !dbg !3453

if.end94:                                         ; preds = %if.end36, %cond.end82, %if.end14
  %bf.load95 = load i32, i32* %2, align 8, !dbg !3455
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !3455
  %cmp97 = icmp eq i32 %bf.clear96, 15, !dbg !3456
  br i1 %cmp97, label %if.then99, label %if.end150, !dbg !3457

if.then99:                                        ; preds = %if.end94
  %arrayidx102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3458
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtvec_def**, !dbg !3458
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3458
  %arrayidx103 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 0, !dbg !3458
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx103, align 8, !dbg !3458
  %arrayidx106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3458
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !3458
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !3458
  %tobool108 = icmp eq %struct.rtx_def* %19, null, !dbg !3458
  call void @llvm.dbg.value(metadata i1 %tobool108, metadata !3413, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i1 %tobool108, metadata !3410, metadata !DIExpression()), !dbg !3460
  %20 = zext i1 %tobool108 to i64, !dbg !3461
  br label %for.cond, !dbg !3461

for.cond:                                         ; preds = %for.inc, %if.then99
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %20, %if.then99 ]
  %.pre3 = phi %struct.rtvec_def* [ %.pre, %for.inc ], [ %17, %if.then99 ]
  %21 = phi %struct.rtvec_def* [ %.pre, %for.inc ], [ %17, %if.then99 ], !dbg !3462
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3410, metadata !DIExpression()), !dbg !3460
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i64 0, i32 0, !dbg !3462
  %22 = load i32, i32* %num_elem, align 8, !dbg !3462
  %23 = sext i32 %22 to i64, !dbg !3463
  %cmp115 = icmp slt i64 %indvars.iv, %23, !dbg !3463
  br i1 %cmp115, label %for.body, label %if.end150.loopexit, !dbg !3464

for.body:                                         ; preds = %for.cond
  %arrayidx123 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i64 0, i32 1, i64 %indvars.iv, !dbg !3465
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx123, align 8, !dbg !3465
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !3414, metadata !DIExpression()), !dbg !3466
  %arrayidx126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3467
  %25 = bitcast %union.rtunion_def* %arrayidx126 to i32**, !dbg !3467
  %26 = load i32*, i32** %25, align 8, !dbg !3467
  %bf.load128 = load i32, i32* %26, align 8, !dbg !3467
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !3467
  %cmp130 = icmp eq i32 %bf.clear129, 37, !dbg !3467
  br i1 %cmp130, label %if.then132, label %for.inc, !dbg !3469

if.then132:                                       ; preds = %for.body
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3470
  %rt_rtx136 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !3470
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !3470
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, !dbg !3470
  %arrayidx138 = bitcast %union.u* %u137 to i64*, !dbg !3470
  %29 = load i64, i64* %arrayidx138, align 8, !dbg !3470
  %conv139 = trunc i64 %29 to i32, !dbg !3470
  %call140 = tail call fastcc %struct.reg_attrs* @get_reg_attrs(%union.tree_node* %t, i32 %conv139) #8, !dbg !3471
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !3472
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !3472
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3472
  %rt_reg148 = bitcast %union.rtunion_def* %31 to %struct.reg_attrs**, !dbg !3472
  store %struct.reg_attrs* %call140, %struct.reg_attrs** %rt_reg148, align 8, !dbg !3473
  %.pre.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3462
  br label %for.inc, !dbg !3472

for.inc:                                          ; preds = %for.body, %if.then132
  %.pre = phi %struct.rtvec_def* [ %.pre3, %for.body ], [ %.pre.pre, %if.then132 ], !dbg !3462
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3474
  call void @llvm.dbg.value(metadata i32 undef, metadata !3410, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3460
  br label %for.cond, !dbg !3475, !llvm.loop !3476

if.end150.loopexit:                               ; preds = %for.cond
  br label %if.end150, !dbg !3478

if.end150:                                        ; preds = %if.end150.loopexit, %if.end94
  ret void, !dbg !3478
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_lowpart_p(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3479 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3483, metadata !DIExpression()), !dbg !3484
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3485
  %bf.load = load i32, i32* %0, align 8, !dbg !3485
  %bf.clear = and i32 %bf.load, 65535, !dbg !3485
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !3487
  br i1 %cmp, label %if.else, label %return, !dbg !3488

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3489
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3489
  %2 = load i32*, i32** %1, align 8, !dbg !3489
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3489
  %bf.clear2 = and i32 %bf.load1, 16711680, !dbg !3489
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !3491
  br i1 %cmp3, label %return, label %if.end5, !dbg !3492

if.end5:                                          ; preds = %if.else
  %bf.lshr7 = lshr i32 %bf.load, 16, !dbg !3493
  %bf.clear8 = and i32 %bf.lshr7, 255, !dbg !3493
  %bf.lshr14 = lshr i32 %bf.load1, 16, !dbg !3494
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !3494
  %call = tail call i32 @subreg_lowpart_offset(i32 %bf.clear8, i32 %bf.clear15) #8, !dbg !3495
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3496
  %rt_uint = bitcast %union.rtunion_def* %3 to i32*, !dbg !3496
  %4 = load i32, i32* %rt_uint, align 8, !dbg !3496
  %cmp19 = icmp eq i32 %4, 0, !dbg !3497
  %conv = zext i1 %cmp19 to i32, !dbg !3497
  br label %return, !dbg !3498

return:                                           ; preds = %entry, %if.else, %if.end5
  %retval.0 = phi i32 [ %conv, %if.end5 ], [ 1, %entry ], [ 0, %if.else ], !dbg !3484
  ret i32 %retval.0, !dbg !3499
}

; Function Attrs: nounwind uwtable
define dso_local void @set_decl_rtl(%union.tree_node* %t, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3500 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3502, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3503, metadata !DIExpression()), !dbg !3504
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3505
  store %struct.rtx_def* %x, %struct.rtx_def** %rtl, align 8, !dbg !3506
  %tobool = icmp eq %struct.rtx_def* %x, null, !dbg !3507
  br i1 %tobool, label %if.end, label %if.then, !dbg !3509

if.then:                                          ; preds = %entry
  tail call void @set_reg_attrs_for_decl_rtl(%union.tree_node* %t, %struct.rtx_def* nonnull %x) #8, !dbg !3510
  br label %if.end, !dbg !3510

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3511
}

; Function Attrs: nounwind uwtable
define dso_local void @set_decl_incoming_rtl(%union.tree_node* %t, %struct.rtx_def* %x, i8 zeroext %by_reference_p) local_unnamed_addr #5 !dbg !3512 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3516, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3517, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8 %by_reference_p, metadata !3518, metadata !DIExpression()), !dbg !3519
  %incoming_rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3520
  %0 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !3520
  store %struct.rtx_def* %x, %struct.rtx_def** %0, align 8, !dbg !3521
  %tobool = icmp eq %struct.rtx_def* %x, null, !dbg !3522
  %tobool1 = icmp ne i8 %by_reference_p, 0, !dbg !3524
  %or.cond = or i1 %tobool, %tobool1, !dbg !3525
  br i1 %or.cond, label %if.end, label %if.then, !dbg !3525

if.then:                                          ; preds = %entry
  tail call void @set_reg_attrs_for_decl_rtl(%union.tree_node* %t, %struct.rtx_def* %x) #8, !dbg !3526
  br label %if.end, !dbg !3526

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3527
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_user_reg(%struct.rtx_def* %reg) local_unnamed_addr #5 !dbg !3528 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3532, metadata !DIExpression()), !dbg !3533
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3534
  %bf.load = load i32, i32* %0, align 8, !dbg !3534
  %bf.clear = and i32 %bf.load, 65535, !dbg !3534
  %cmp = icmp eq i32 %bf.clear, 41, !dbg !3536
  br i1 %cmp, label %if.then, label %if.else, !dbg !3537

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3538
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3538
  %2 = load i32*, i32** %1, align 8, !dbg !3538
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3540
  %bf.set = or i32 %bf.load1, 134217728, !dbg !3540
  store i32 %bf.set, i32* %2, align 8, !dbg !3540
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3541
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !3541
  %5 = load i32*, i32** %4, align 8, !dbg !3541
  %bf.load7 = load i32, i32* %5, align 8, !dbg !3542
  %bf.set9 = or i32 %bf.load7, 134217728, !dbg !3542
  store i32 %bf.set9, i32* %5, align 8, !dbg !3542
  br label %if.end, !dbg !3543

if.else:                                          ; preds = %entry
  %cmp12 = icmp eq i32 %bf.clear, 37, !dbg !3544
  br i1 %cmp12, label %cond.end, label %cond.true, !dbg !3544

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3544
  %bf.load13.pre = load i32, i32* %0, align 8, !dbg !3546
  br label %cond.end, !dbg !3544

cond.end:                                         ; preds = %if.else, %cond.true
  %bf.load13 = phi i32 [ %bf.load, %if.else ], [ %bf.load13.pre, %cond.true ], !dbg !3546
  %bf.set15 = or i32 %bf.load13, 134217728, !dbg !3546
  store i32 %bf.set15, i32* %0, align 8, !dbg !3546
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !3547
}

; Function Attrs: nounwind uwtable
define dso_local i32 @max_reg_num() local_unnamed_addr #5 !dbg !3548 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !3549
  ret i32 %0, !dbg !3550
}

; Function Attrs: nounwind uwtable
define dso_local i32 @max_label_num() local_unnamed_addr #5 !dbg !3551 {
entry:
  %0 = load i32, i32* @label_num, align 4, !dbg !3552
  ret i32 %0, !dbg !3553
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_first_label_num() local_unnamed_addr #5 !dbg !3554 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 1), align 4, !dbg !3555
  ret i32 %0, !dbg !3556
}

; Function Attrs: nounwind uwtable
define dso_local void @maybe_set_first_label_num(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3557 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3559, metadata !DIExpression()), !dbg !3560
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !3561
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !3561
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !3561
  %1 = load i32, i32* %rt_int, align 8, !dbg !3561
  %2 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 1), align 4, !dbg !3563
  %cmp = icmp slt i32 %1, %2, !dbg !3564
  br i1 %cmp, label %if.then, label %if.end, !dbg !3565

if.then:                                          ; preds = %entry
  store i32 %1, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 1), align 4, !dbg !3566
  br label %if.end, !dbg !3567

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3568
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_lowpart_common(i32 %mode, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3569 {
entry:
  %idxprom = zext i32 %mode to i64, !dbg !3577
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3577
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3578
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3577
  %bf.load.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3580
  br label %tailrecurse, !dbg !3581

tailrecurse:                                      ; preds = %if.then94, %entry
  %bf.load = phi i32 [ %bf.load.pre, %entry ], [ %bf.load70, %if.then94 ], !dbg !3580
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %6, %if.then94 ]
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !3572, metadata !DIExpression()), !dbg !3577
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3586
  %conv1 = zext i8 %0 to i32, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !3573, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 0, metadata !3575, metadata !DIExpression()), !dbg !3577
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !3580
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3580
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3576, metadata !DIExpression()), !dbg !3577
  %bf.clear3 = and i32 %bf.load, 65535, !dbg !3587
  %cmp = icmp eq i32 %bf.clear3, 30, !dbg !3587
  %cmp5 = icmp ult i8 %0, 9, !dbg !3589
  %or.cond = and i1 %cmp, %cmp5, !dbg !3590
  br i1 %or.cond, label %if.then, label %if.else, !dbg !3590

if.then:                                          ; preds = %tailrecurse
  %call = tail call i32 @mode_for_size(i32 64, i32 2, i32 0) #7, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %call, metadata !3576, metadata !DIExpression()), !dbg !3577
  br label %if.end11, !dbg !3592

if.else:                                          ; preds = %tailrecurse
  %cmp7 = icmp eq i32 %bf.clear, 0, !dbg !3593
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !3595

if.then9:                                         ; preds = %if.else
  %call10 = tail call i32 @mode_for_size(i32 128, i32 2, i32 0) #7, !dbg !3596
  call void @llvm.dbg.value(metadata i32 %call10, metadata !3576, metadata !DIExpression()), !dbg !3577
  br label %if.end11, !dbg !3597

if.end11:                                         ; preds = %if.else, %if.then9, %if.then
  %innermode.1 = phi i32 [ %call, %if.then ], [ %call10, %if.then9 ], [ %bf.clear, %if.else ], !dbg !3598
  call void @llvm.dbg.value(metadata i32 %innermode.1, metadata !3576, metadata !DIExpression()), !dbg !3577
  %idxprom12 = zext i32 %innermode.1 to i64, !dbg !3599
  %arrayidx13 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom12, !dbg !3599
  %2 = load i8, i8* %arrayidx13, align 1, !dbg !3599
  %conv15 = zext i8 %2 to i32, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %conv15, metadata !3574, metadata !DIExpression()), !dbg !3577
  %switch = icmp ult i32 %innermode.1, 2, !dbg !3600
  br i1 %switch, label %cond.true, label %cond.end, !dbg !3600

cond.true:                                        ; preds = %if.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1195, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3600
  br label %cond.end, !dbg !3600

cond.end:                                         ; preds = %if.end11, %cond.true
  %cmp21 = icmp eq i32 %innermode.1, %mode, !dbg !3601
  br i1 %cmp21, label %cleanup.loopexit, label %if.end24, !dbg !3603

if.end24:                                         ; preds = %cond.end
  %add = add nuw nsw i32 %conv1, 3, !dbg !3604
  %div = lshr i32 %add, 2, !dbg !3606
  %add25 = add nuw nsw i32 %conv15, 3, !dbg !3607
  %div26 = lshr i32 %add25, 2, !dbg !3608
  %cmp27 = icmp ugt i32 %div, %div26, !dbg !3609
  br i1 %cmp27, label %cleanup.loopexit, label %if.end30, !dbg !3610

if.end30:                                         ; preds = %if.end24
  %3 = load i8, i8* %arrayidx32, align 1, !dbg !3611
  %cmp34 = icmp eq i8 %3, 8, !dbg !3611
  br i1 %cmp34, label %land.lhs.true41, label %lor.lhs.false, !dbg !3611

lor.lhs.false:                                    ; preds = %if.end30
  %cmp39 = icmp eq i8 %3, 9, !dbg !3611
  %cmp42 = icmp ugt i8 %0, %2, !dbg !3612
  %or.cond1 = and i1 %cmp39, %cmp42, !dbg !3613
  br i1 %or.cond1, label %cleanup.loopexit, label %if.end45, !dbg !3613

land.lhs.true41:                                  ; preds = %if.end30
  %cmp42.old = icmp ugt i8 %0, %2, !dbg !3612
  br i1 %cmp42.old, label %cleanup.loopexit, label %if.end45, !dbg !3614

if.end45:                                         ; preds = %land.lhs.true41, %lor.lhs.false
  %call46 = tail call i32 @subreg_lowpart_offset(i32 %mode, i32 %innermode.1) #8, !dbg !3615
  call void @llvm.dbg.value(metadata i32 0, metadata !3575, metadata !DIExpression()), !dbg !3577
  %bf.load47 = load i32, i32* %1, align 8, !dbg !3616
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !3616
  %cmp49 = icmp eq i32 %bf.clear48, 99, !dbg !3617
  br i1 %cmp49, label %land.lhs.true56, label %lor.lhs.false51, !dbg !3618

lor.lhs.false51:                                  ; preds = %if.end45
  %cmp54 = icmp eq i32 %bf.clear48, 98, !dbg !3619
  br i1 %cmp54, label %land.lhs.true56, label %if.else114, !dbg !3620

land.lhs.true56:                                  ; preds = %lor.lhs.false51, %if.end45
  %cmp60 = icmp eq i8 %3, 2, !dbg !3621
  br i1 %cmp60, label %if.then68, label %lor.lhs.false62, !dbg !3622

lor.lhs.false62:                                  ; preds = %land.lhs.true56
  %cmp66 = icmp eq i8 %3, 3, !dbg !3623
  br i1 %cmp66, label %if.then68, label %if.else114, !dbg !3624

if.then68:                                        ; preds = %lor.lhs.false62, %land.lhs.true56
  %arrayidx69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3625
  %4 = bitcast %union.rtunion_def* %arrayidx69 to i32**, !dbg !3625
  %5 = load i32*, i32** %4, align 8, !dbg !3625
  %bf.load70 = load i32, i32* %5, align 8, !dbg !3625
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !3625
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !3625
  %cmp73 = icmp eq i32 %bf.clear72, %mode, !dbg !3626
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !3627
  br i1 %cmp73, label %cleanup.loopexit, label %if.else80, !dbg !3628

if.else80:                                        ; preds = %if.then68
  %idxprom88 = zext i32 %bf.clear72 to i64, !dbg !3629
  %arrayidx89 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom88, !dbg !3629
  %7 = load i8, i8* %arrayidx89, align 1, !dbg !3629
  %cmp92 = icmp ult i8 %0, %7, !dbg !3630
  br i1 %cmp92, label %if.then94, label %if.else100, !dbg !3631

if.then94:                                        ; preds = %if.else80
  br label %tailrecurse, !dbg !3581

if.else100:                                       ; preds = %if.else80
  %.lcssa34 = phi %struct.rtx_def* [ %6, %if.else80 ], !dbg !3627
  %bf.clear48.lcssa33 = phi i32 [ %bf.clear48, %if.else80 ], !dbg !3616
  %.lcssa30 = phi i8 [ %2, %if.else80 ], !dbg !3599
  %.lcssa25 = phi i8 [ %0, %if.else80 ], !dbg !3586
  %cmp101 = icmp ult i8 %.lcssa25, %.lcssa30, !dbg !3632
  br i1 %cmp101, label %if.then103, label %cleanup, !dbg !3634

if.then103:                                       ; preds = %if.else100
  %call110 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %bf.clear48.lcssa33, i32 %mode, %struct.rtx_def* %.lcssa34) #7, !dbg !3635
  br label %cleanup, !dbg !3636

if.else114:                                       ; preds = %lor.lhs.false62, %lor.lhs.false51
  %bf.clear48.lcssa = phi i32 [ %bf.clear48, %lor.lhs.false62 ], [ %bf.clear48, %lor.lhs.false51 ], !dbg !3616
  %innermode.1.lcssa31 = phi i32 [ %innermode.1, %lor.lhs.false62 ], [ %innermode.1, %lor.lhs.false51 ], !dbg !3598
  %x.tr.lcssa26 = phi %struct.rtx_def* [ %x.tr, %lor.lhs.false62 ], [ %x.tr, %lor.lhs.false51 ]
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %innermode.1.lcssa31, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa26, metadata !3572, metadata !DIExpression()), !dbg !3577
  %cmp117 = icmp eq i32 %bf.clear48.lcssa, 39, !dbg !3637
  br i1 %cmp117, label %if.then144, label %lor.lhs.false119, !dbg !3639

lor.lhs.false119:                                 ; preds = %if.else114
  %cmp122 = icmp eq i32 %bf.clear48.lcssa, 37, !dbg !3640
  br i1 %cmp122, label %if.then144, label %lor.lhs.false124, !dbg !3641

lor.lhs.false124:                                 ; preds = %lor.lhs.false119
  %cmp127 = icmp eq i32 %bf.clear48.lcssa, 41, !dbg !3642
  br i1 %cmp127, label %if.then144, label %lor.lhs.false129, !dbg !3643

lor.lhs.false129:                                 ; preds = %lor.lhs.false124
  %cmp132 = icmp eq i32 %bf.clear48.lcssa, 33, !dbg !3644
  br i1 %cmp132, label %if.then144, label %lor.lhs.false134, !dbg !3645

lor.lhs.false134:                                 ; preds = %lor.lhs.false129
  %cmp137 = icmp eq i32 %bf.clear48.lcssa, 32, !dbg !3646
  br i1 %cmp137, label %if.then144, label %lor.lhs.false139, !dbg !3647

lor.lhs.false139:                                 ; preds = %lor.lhs.false134
  %cmp142 = icmp eq i32 %bf.clear48.lcssa, 30, !dbg !3648
  br i1 %cmp142, label %if.then144, label %cleanup, !dbg !3649

if.then144:                                       ; preds = %lor.lhs.false139, %lor.lhs.false134, %lor.lhs.false129, %lor.lhs.false124, %lor.lhs.false119, %if.else114
  %call145 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %mode, %struct.rtx_def* %x.tr.lcssa26, i32 %innermode.1.lcssa31, i32 0) #7, !dbg !3650
  br label %cleanup, !dbg !3651

cleanup.loopexit:                                 ; preds = %cond.end, %if.end24, %lor.lhs.false, %land.lhs.true41, %if.then68
  %retval.0.ph = phi %struct.rtx_def* [ %6, %if.then68 ], [ null, %land.lhs.true41 ], [ null, %lor.lhs.false ], [ null, %if.end24 ], [ %x.tr, %cond.end ]
  br label %cleanup, !dbg !3652

cleanup:                                          ; preds = %cleanup.loopexit, %if.else100, %lor.lhs.false139, %if.then144, %if.then103
  %retval.0 = phi %struct.rtx_def* [ %call110, %if.then103 ], [ %call145, %if.then144 ], [ null, %lor.lhs.false139 ], [ null, %if.else100 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3577
  ret %struct.rtx_def* %retval.0, !dbg !3652
}

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_highpart(i32 %mode, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !3653 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3655, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3656, metadata !DIExpression()), !dbg !3659
  %idxprom = zext i32 %mode to i64, !dbg !3660
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3660
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3660
  call void @llvm.dbg.value(metadata i8 %0, metadata !3657, metadata !DIExpression()), !dbg !3659
  %cmp = icmp ult i8 %0, 5, !dbg !3661
  br i1 %cmp, label %cond.end29, label %lor.lhs.false, !dbg !3661

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3661
  %bf.load = load i32, i32* %1, align 8, !dbg !3661
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3661
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3661
  %idxprom3 = zext i32 %bf.clear to i64, !dbg !3661
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom3, !dbg !3661
  %2 = load i8, i8* %arrayidx4, align 1, !dbg !3661
  %cmp6 = icmp eq i8 %2, 0, !dbg !3661
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3661

cond.true:                                        ; preds = %lor.lhs.false
  br label %cond.end, !dbg !3661

cond.false:                                       ; preds = %lor.lhs.false
  %idxprom21 = zext i8 %2 to i64, !dbg !3661
  br label %cond.end, !dbg !3661

cond.end:                                         ; preds = %cond.false, %cond.true
  %idxprom11.pn = phi i64 [ %idxprom3, %cond.true ], [ %idxprom21, %cond.false ]
  %cond.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom11.pn, !dbg !3661
  %cond.in = load i8, i8* %cond.in.in, align 1, !dbg !3661
  %cmp25 = icmp eq i8 %cond.in, %0, !dbg !3661
  br i1 %cmp25, label %cond.end29, label %cond.true27, !dbg !3661

cond.true27:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3661
  br label %cond.end29, !dbg !3661

cond.end29:                                       ; preds = %entry, %cond.end, %cond.true27
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3662
  %bf.load31 = load i32, i32* %3, align 8, !dbg !3662
  %bf.lshr32 = lshr i32 %bf.load31, 16, !dbg !3662
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !3662
  %call = tail call i32 @subreg_highpart_offset(i32 %mode, i32 %bf.clear33) #8, !dbg !3663
  %call37 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %mode, %struct.rtx_def* %x, i32 %bf.clear33, i32 %call) #7, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !3658, metadata !DIExpression()), !dbg !3659
  %tobool = icmp eq %struct.rtx_def* %call37, null, !dbg !3665
  br i1 %tobool, label %cond.true38, label %cond.end40, !dbg !3665

cond.true38:                                      ; preds = %cond.end29
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1252, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3665
  br label %cond.end40, !dbg !3665

cond.end40:                                       ; preds = %cond.end29, %cond.true38
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call37, i64 0, i32 0, !dbg !3666
  %bf.load42 = load i32, i32* %4, align 8, !dbg !3666
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !3666
  %cmp44 = icmp eq i32 %bf.clear43, 43, !dbg !3666
  br i1 %cmp44, label %if.then, label %if.end, !dbg !3668

if.then:                                          ; preds = %cond.end40
  %call46 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call37) #7, !dbg !3669
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call46, metadata !3658, metadata !DIExpression()), !dbg !3659
  %tobool47 = icmp eq %struct.rtx_def* %call46, null, !dbg !3671
  br i1 %tobool47, label %cond.true48, label %if.end, !dbg !3671

cond.true48:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3671
  br label %if.end, !dbg !3671

if.end:                                           ; preds = %if.then, %cond.true48, %cond.end40
  %result.0 = phi %struct.rtx_def* [ %call37, %cond.end40 ], [ %call46, %if.then ], [ null, %cond.true48 ], !dbg !3659
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.0, metadata !3658, metadata !DIExpression()), !dbg !3659
  ret %struct.rtx_def* %result.0, !dbg !3672
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_highpart_offset(i32 %outermode, i32 %innermode) local_unnamed_addr #5 !dbg !3673 {
entry:
  call void @llvm.dbg.value(metadata i32 %outermode, metadata !3675, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 %innermode, metadata !3676, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 0, metadata !3677, metadata !DIExpression()), !dbg !3679
  %idxprom = zext i32 %innermode to i64, !dbg !3680
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3680
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3680
  %conv1 = zext i8 %0 to i32, !dbg !3680
  %idxprom2 = zext i32 %outermode to i64, !dbg !3681
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2, !dbg !3681
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !3681
  %conv5 = zext i8 %1 to i32, !dbg !3681
  %sub = sub nsw i32 %conv1, %conv5, !dbg !3682
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3678, metadata !DIExpression()), !dbg !3679
  %cmp = icmp ult i8 %0, %1, !dbg !3683
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3683

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3683
  br label %cond.end, !dbg !3683

cond.end:                                         ; preds = %entry, %cond.true
  %cmp15 = icmp sgt i32 %sub, 0, !dbg !3684
  br i1 %cmp15, label %if.then, label %if.end, !dbg !3686

if.then:                                          ; preds = %cond.end
  %div = sdiv i32 %sub, 4, !dbg !3687
  %mul = shl nsw i32 %div, 2, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3677, metadata !DIExpression()), !dbg !3679
  %rem = srem i32 %sub, 4, !dbg !3691
  %add17 = add nsw i32 %mul, %rem, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %add17, metadata !3677, metadata !DIExpression()), !dbg !3679
  br label %if.end, !dbg !3694

if.end:                                           ; preds = %if.then, %cond.end
  %offset.0 = phi i32 [ %add17, %if.then ], [ 0, %cond.end ], !dbg !3679
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !3677, metadata !DIExpression()), !dbg !3679
  ret i32 %offset.0, !dbg !3695
}

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_highpart_mode(i32 %outermode, i32 %innermode, %struct.rtx_def* %exp) local_unnamed_addr #5 !dbg !3696 {
entry:
  call void @llvm.dbg.value(metadata i32 %outermode, metadata !3700, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 %innermode, metadata !3701, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp, metadata !3702, metadata !DIExpression()), !dbg !3703
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !3704
  %bf.load = load i32, i32* %0, align 8, !dbg !3704
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3704
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3706
  br i1 %cmp, label %if.end, label %if.then, !dbg !3707

if.then:                                          ; preds = %entry
  %bf.lshr2 = lshr i32 %bf.load, 16, !dbg !3708
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !3708
  %cmp4 = icmp eq i32 %bf.clear3, %innermode, !dbg !3708
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !3708

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3708
  br label %cond.end, !dbg !3708

cond.end:                                         ; preds = %if.then, %cond.true
  %call = tail call %struct.rtx_def* @gen_highpart(i32 %outermode, %struct.rtx_def* %exp) #8, !dbg !3710
  br label %return, !dbg !3711

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @subreg_highpart_offset(i32 %outermode, i32 %innermode) #8, !dbg !3712
  %call6 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %outermode, %struct.rtx_def* %exp, i32 %innermode, i32 %call5) #7, !dbg !3713
  br label %return, !dbg !3714

return:                                           ; preds = %if.end, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %call, %cond.end ], [ %call6, %if.end ], !dbg !3703
  ret %struct.rtx_def* %retval.0, !dbg !3715
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @operand_subword(%struct.rtx_def* %op, i32 %offset, i32 %validate_address, i32 %mode) local_unnamed_addr #5 !dbg !3716 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !3720, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3721, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i32 %validate_address, metadata !3722, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3723, metadata !DIExpression()), !dbg !3727
  %cmp = icmp eq i32 %mode, 0, !dbg !3728
  br i1 %cmp, label %if.then, label %if.end, !dbg !3730

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !3731
  %bf.load = load i32, i32* %0, align 8, !dbg !3731
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3731
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3731
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3723, metadata !DIExpression()), !dbg !3727
  br label %if.end, !dbg !3732

if.end:                                           ; preds = %if.then, %entry
  %mode.addr.0 = phi i32 [ %bf.clear, %if.then ], [ %mode, %entry ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !3723, metadata !DIExpression()), !dbg !3727
  switch i32 %mode.addr.0, label %land.lhs.true [
    i32 0, label %cond.true
    i32 1, label %if.end18
  ], !dbg !3733

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3733
  br label %land.lhs.true, !dbg !3734

land.lhs.true:                                    ; preds = %cond.true, %if.end
  %idxprom = zext i32 %mode.addr.0 to i64, !dbg !3736
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3736
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3736
  %cmp4 = icmp ult i8 %1, 4, !dbg !3737
  br i1 %cmp4, label %return, label %if.end7, !dbg !3738

if.end7:                                          ; preds = %land.lhs.true
  %cmp8 = icmp eq i32 %mode.addr.0, 1, !dbg !3739
  br i1 %cmp8, label %if.end18, label %land.lhs.true10, !dbg !3741

land.lhs.true10:                                  ; preds = %if.end7
  %add = shl i32 %offset, 2, !dbg !3742
  %mul = add i32 %add, 4, !dbg !3742
  %conv14 = zext i8 %1 to i32, !dbg !3743
  %cmp15 = icmp ugt i32 %mul, %conv14, !dbg !3744
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3745

if.then17:                                        ; preds = %land.lhs.true10
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3746
  br label %return, !dbg !3747

if.end18:                                         ; preds = %if.end7, %if.end, %land.lhs.true10
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !3748
  %bf.load19 = load i32, i32* %3, align 8, !dbg !3748
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3748
  %cmp21 = icmp eq i32 %bf.clear20, 43, !dbg !3748
  br i1 %cmp21, label %if.then23, label %if.end18.if.end57_crit_edge, !dbg !3749

if.end18.if.end57_crit_edge:                      ; preds = %if.end18
  %.pre = shl i32 %offset, 2, !dbg !3750
  br label %if.end57, !dbg !3749

if.then23:                                        ; preds = %if.end18
  %4 = load i32, i32* @word_mode, align 4, !dbg !3751
  %mul24 = shl i32 %offset, 2, !dbg !3751
  %conv25 = zext i32 %mul24 to i64, !dbg !3751
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op, i32 %4, i64 %conv25, i32 0, i32 1) #8, !dbg !3751
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3724, metadata !DIExpression()), !dbg !3752
  %tobool = icmp eq i32 %validate_address, 0, !dbg !3753
  br i1 %tobool, label %cleanup, label %if.else, !dbg !3755

if.else:                                          ; preds = %if.then23
  %5 = load i32, i32* @reload_completed, align 4, !dbg !3756
  %tobool27 = icmp eq i32 %5, 0, !dbg !3756
  br i1 %tobool27, label %if.else49, label %if.then28, !dbg !3758

if.then28:                                        ; preds = %if.else
  %6 = load i32, i32* @word_mode, align 4, !dbg !3759
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3762
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !3762
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3762
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3763
  %rt_mem = bitcast %union.rtunion_def* %8 to %struct.mem_attrs**, !dbg !3763
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3763
  %cmp33 = icmp eq %struct.mem_attrs* %9, null, !dbg !3763
  br i1 %cmp33, label %cond.end42, label %cond.false36, !dbg !3763

cond.false36:                                     ; preds = %if.then28
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 5, !dbg !3763
  %10 = load i8, i8* %addrspace, align 8, !dbg !3763
  br label %cond.end42, !dbg !3763

cond.end42:                                       ; preds = %if.then28, %cond.false36
  %cond43 = phi i8 [ %10, %cond.false36 ], [ 0, %if.then28 ]
  %call45 = tail call i32 @strict_memory_address_addr_space_p(i32 %6, %struct.rtx_def* %7, i8 zeroext %cond43) #7, !dbg !3764
  %tobool46 = icmp ne i32 %call45, 0, !dbg !3764
  br label %cleanup, !dbg !3765

if.else49:                                        ; preds = %if.else
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3766
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !3766
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !3766
  %call54 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %call, %struct.rtx_def* %11) #8, !dbg !3767
  br label %cleanup, !dbg !3768

cleanup:                                          ; preds = %if.then23, %cond.end42, %if.else49
  %cleanup.dest.slot.0 = phi i1 [ false, %if.else49 ], [ false, %if.then23 ], [ %tobool46, %cond.end42 ]
  %retval.0 = phi %struct.rtx_def* [ %call54, %if.else49 ], [ %call, %if.then23 ], [ null, %cond.end42 ]
  br i1 %cleanup.dest.slot.0, label %if.end57, label %return

if.end57:                                         ; preds = %if.end18.if.end57_crit_edge, %cleanup
  %mul58.pre-phi = phi i32 [ %.pre, %if.end18.if.end57_crit_edge ], [ %mul24, %cleanup ], !dbg !3750
  %12 = load i32, i32* @word_mode, align 4, !dbg !3769
  %call59 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %12, %struct.rtx_def* %op, i32 %mode.addr.0, i32 %mul58.pre-phi) #7, !dbg !3770
  br label %return, !dbg !3771

return:                                           ; preds = %cleanup, %land.lhs.true, %if.end57, %if.then17
  %retval.1 = phi %struct.rtx_def* [ %2, %if.then17 ], [ %retval.0, %cleanup ], [ %call59, %if.end57 ], [ null, %land.lhs.true ]
  ret %struct.rtx_def* %retval.1, !dbg !3772
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %memref, i32 %mode, i64 %offset, i32 %validate, i32 %adjust) local_unnamed_addr #5 !dbg !3773 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !3777, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3778, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i64 %offset, metadata !3779, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %validate, metadata !3780, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %adjust, metadata !3781, metadata !DIExpression()), !dbg !3794
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3795
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3795
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3782, metadata !DIExpression()), !dbg !3794
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3796
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !3796
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3796
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !3796
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3796

cond.false:                                       ; preds = %entry
  %offset8 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 1, !dbg !3796
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset8, align 8, !dbg !3796
  br label %cond.end, !dbg !3796

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.rtx_def* [ %3, %cond.false ], [ null, %entry ], !dbg !3796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !3784, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3785, metadata !DIExpression()), !dbg !3794
  br i1 %cmp, label %cond.end20, label %cond.true14, !dbg !3797

cond.true14:                                      ; preds = %cond.end
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 4, !dbg !3797
  %4 = load i32, i32* %align, align 4, !dbg !3797
  br label %cond.end20, !dbg !3797

cond.end20:                                       ; preds = %cond.end, %cond.true14
  %cond21 = phi i32 [ %4, %cond.true14 ], [ 8, %cond.end ], !dbg !3797
  call void @llvm.dbg.value(metadata i32 %cond21, metadata !3786, metadata !DIExpression()), !dbg !3794
  br i1 %cmp, label %cond.end33, label %cond.false28, !dbg !3798

cond.false28:                                     ; preds = %cond.end20
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !3798
  %5 = load i8, i8* %addrspace, align 8, !dbg !3798
  br label %cond.end33, !dbg !3798

cond.end33:                                       ; preds = %cond.end20, %cond.false28
  %cond34 = phi i8 [ %5, %cond.false28 ], [ 0, %cond.end20 ], !dbg !3798
  call void @llvm.dbg.value(metadata i8 %cond34, metadata !3787, metadata !DIExpression()), !dbg !3794
  %6 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !3799
  %call = tail call i32 %6(i8 zeroext %cond34) #7, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %call, metadata !3789, metadata !DIExpression()), !dbg !3794
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 0, !dbg !3801
  %bf.load = load i32, i32* %7, align 8, !dbg !3801
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3801
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3801
  %cmp36 = icmp ne i32 %bf.clear, %mode, !dbg !3803
  %tobool = icmp ne i64 %offset, 0, !dbg !3804
  %or.cond = or i1 %cmp36, %tobool, !dbg !3805
  br i1 %or.cond, label %if.end, label %land.lhs.true38, !dbg !3805

land.lhs.true38:                                  ; preds = %cond.end33
  %tobool39 = icmp eq i32 %validate, 0, !dbg !3806
  br i1 %tobool39, label %cleanup, label %lor.lhs.false, !dbg !3807

lor.lhs.false:                                    ; preds = %land.lhs.true38
  %call40 = tail call i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %0, i8 zeroext %cond34) #7, !dbg !3808
  %tobool41 = icmp eq i32 %call40, 0, !dbg !3808
  br i1 %tobool41, label %if.end, label %cleanup, !dbg !3809

if.end:                                           ; preds = %lor.lhs.false, %cond.end33
  %call42 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %0) #7, !dbg !3810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !3782, metadata !DIExpression()), !dbg !3794
  %idxprom = zext i32 %call to i64, !dbg !3811
  %arrayidx43 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3811
  %8 = load i8, i8* %arrayidx43, align 1, !dbg !3811
  call void @llvm.dbg.value(metadata i8 %8, metadata !3790, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !3794
  %cmp48 = icmp ult i8 %8, 8, !dbg !3812
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !3813

if.then50:                                        ; preds = %if.end
  %conv45 = zext i8 %8 to i64, !dbg !3811
  call void @llvm.dbg.value(metadata i8 %8, metadata !3790, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !3794
  %mul = shl nuw nsw i64 %conv45, 3, !dbg !3811
  call void @llvm.dbg.value(metadata i8 %8, metadata !3790, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !3794
  %sub = sub nsw i64 64, %mul, !dbg !3814
  %sh_prom = and i64 %sub, 4294967288, !dbg !3815
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3791, metadata !DIExpression()), !dbg !3816
  %shl = shl i64 %offset, %sh_prom, !dbg !3815
  %shr = ashr i64 %shl, %sh_prom, !dbg !3817
  call void @llvm.dbg.value(metadata i64 %shr, metadata !3779, metadata !DIExpression()), !dbg !3794
  br label %if.end52, !dbg !3818

if.end52:                                         ; preds = %if.then50, %if.end
  %offset.addr.0 = phi i64 [ %shr, %if.then50 ], [ %offset, %if.end ]
  call void @llvm.dbg.value(metadata i64 %offset.addr.0, metadata !3779, metadata !DIExpression()), !dbg !3794
  %tobool53 = icmp eq i32 %adjust, 0, !dbg !3819
  br i1 %tobool53, label %if.end89, label %if.then54, !dbg !3821

if.then54:                                        ; preds = %if.end52
  %bf.load55 = load i32, i32* %7, align 8, !dbg !3822
  %bf.clear57 = and i32 %bf.load55, 16711680, !dbg !3822
  %cmp58 = icmp eq i32 %bf.clear57, 65536, !dbg !3825
  br i1 %cmp58, label %if.else, label %land.lhs.true60, !dbg !3826

land.lhs.true60:                                  ; preds = %if.then54
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !3827
  %bf.load61 = load i32, i32* %9, align 8, !dbg !3827
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !3827
  %cmp63 = icmp eq i32 %bf.clear62, 122, !dbg !3828
  %cmp66 = icmp sgt i64 %offset.addr.0, -1, !dbg !3829
  %or.cond1 = and i1 %cmp63, %cmp66, !dbg !3830
  br i1 %or.cond1, label %land.lhs.true68, label %if.else, !dbg !3830

land.lhs.true68:                                  ; preds = %land.lhs.true60
  %bf.lshr70 = lshr i32 %bf.load55, 16, !dbg !3831
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !3831
  %call72 = tail call i32 @get_mode_alignment(i32 %bf.clear71) #7, !dbg !3831
  %div = lshr i32 %call72, 3, !dbg !3832
  %conv73 = zext i32 %div to i64, !dbg !3831
  %cmp74 = icmp ult i64 %offset.addr.0, %conv73, !dbg !3833
  br i1 %cmp74, label %if.then76, label %if.else, !dbg !3834

if.then76:                                        ; preds = %land.lhs.true68
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3835
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !3835
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !3835
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3835
  %rt_rtx84 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !3835
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !3835
  %call85 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %12, i64 %offset.addr.0) #7, !dbg !3835
  %call86 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 122, i32 %call, %struct.rtx_def* %10, %struct.rtx_def* %call85) #7, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !3782, metadata !DIExpression()), !dbg !3794
  br label %if.end89, !dbg !3836

if.else:                                          ; preds = %if.then54, %land.lhs.true68, %land.lhs.true60
  %call87 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call42, i64 %offset.addr.0) #7, !dbg !3837
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call87, metadata !3782, metadata !DIExpression()), !dbg !3794
  br label %if.end89

if.end89:                                         ; preds = %if.end52, %if.then76, %if.else
  %addr.1 = phi %struct.rtx_def* [ %call42, %if.end52 ], [ %call86, %if.then76 ], [ %call87, %if.else ], !dbg !3794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.1, metadata !3782, metadata !DIExpression()), !dbg !3794
  %call90 = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr.1, i32 %validate) #8, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call90, metadata !3783, metadata !DIExpression()), !dbg !3794
  %cmp91 = icmp eq %struct.rtx_def* %call90, %memref, !dbg !3839
  %cmp94 = icmp ne i64 %offset.addr.0, 0, !dbg !3841
  %or.cond2 = and i1 %cmp91, %cmp94, !dbg !3842
  br i1 %or.cond2, label %if.then96, label %if.end98, !dbg !3842

if.then96:                                        ; preds = %if.end89
  %call97 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %memref) #7, !dbg !3843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call97, metadata !3783, metadata !DIExpression()), !dbg !3794
  br label %if.end98, !dbg !3844

if.end98:                                         ; preds = %if.then96, %if.end89
  %new_rtx.0 = phi %struct.rtx_def* [ %call97, %if.then96 ], [ %call90, %if.end89 ], !dbg !3794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !3783, metadata !DIExpression()), !dbg !3794
  %tobool99 = icmp eq %struct.rtx_def* %cond, null, !dbg !3845
  br i1 %tobool99, label %if.end104, label %if.then100, !dbg !3847

if.then100:                                       ; preds = %if.end98
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, !dbg !3848
  %arrayidx102 = bitcast %union.u* %u101 to i64*, !dbg !3848
  %13 = load i64, i64* %arrayidx102, align 8, !dbg !3848
  %add = add nsw i64 %offset.addr.0, %13, !dbg !3848
  %call103 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #8, !dbg !3848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call103, metadata !3784, metadata !DIExpression()), !dbg !3794
  br label %if.end104, !dbg !3849

if.end104:                                        ; preds = %if.end98, %if.then100
  %memoffset.0 = phi %struct.rtx_def* [ %call103, %if.then100 ], [ null, %if.end98 ], !dbg !3794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.0, metadata !3784, metadata !DIExpression()), !dbg !3794
  %cmp105 = icmp eq i64 %offset.addr.0, 0, !dbg !3850
  br i1 %cmp105, label %if.end122, label %if.then107, !dbg !3852

if.then107:                                       ; preds = %if.end104
  %conv108 = zext i32 %cond21 to i64, !dbg !3853
  %sub109 = sub nsw i64 0, %offset.addr.0, !dbg !3853
  %and = and i64 %offset.addr.0, %sub109, !dbg !3853
  %mul110 = shl i64 %and, 3, !dbg !3853
  %cmp111 = icmp ugt i64 %mul110, %conv108, !dbg !3853
  br i1 %cmp111, label %cond.true113, label %cond.false115, !dbg !3853

cond.true113:                                     ; preds = %if.then107
  br label %cond.end119, !dbg !3853

cond.false115:                                    ; preds = %if.then107
  br label %cond.end119, !dbg !3853

cond.end119:                                      ; preds = %cond.false115, %cond.true113
  %cond120 = phi i64 [ %conv108, %cond.true113 ], [ %mul110, %cond.false115 ], !dbg !3853
  %conv121 = trunc i64 %cond120 to i32, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %conv121, metadata !3786, metadata !DIExpression()), !dbg !3794
  br label %if.end122, !dbg !3854

if.end122:                                        ; preds = %if.end104, %cond.end119
  %memalign.0 = phi i32 [ %conv121, %cond.end119 ], [ %cond21, %if.end104 ], !dbg !3794
  call void @llvm.dbg.value(metadata i32 %memalign.0, metadata !3786, metadata !DIExpression()), !dbg !3794
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 0, !dbg !3855
  %bf.load123 = load i32, i32* %14, align 8, !dbg !3855
  %bf.clear125 = and i32 %bf.load123, 16711680, !dbg !3855
  %cmp126 = icmp eq i32 %bf.clear125, 65536, !dbg !3857
  br i1 %cmp126, label %if.else137, label %if.then128, !dbg !3858

if.then128:                                       ; preds = %if.end122
  %bf.lshr130 = lshr i32 %bf.load123, 16, !dbg !3859
  %bf.clear131 = and i32 %bf.lshr130, 255, !dbg !3859
  %idxprom132 = zext i32 %bf.clear131 to i64, !dbg !3859
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom132, !dbg !3859
  %15 = load i8, i8* %arrayidx133, align 1, !dbg !3859
  %conv135 = zext i8 %15 to i64, !dbg !3859
  %call136 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv135) #8, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !3785, metadata !DIExpression()), !dbg !3794
  br label %if.end204, !dbg !3860

if.else137:                                       ; preds = %if.end122
  %16 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3861
  %cmp142 = icmp eq %struct.mem_attrs* %16, null, !dbg !3861
  br i1 %cmp142, label %cond.false151, label %cond.true144, !dbg !3863

cond.true144:                                     ; preds = %if.else137
  %size149 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 2, !dbg !3861
  %17 = load %struct.rtx_def*, %struct.rtx_def** %size149, align 8, !dbg !3861
  %tobool150 = icmp eq %struct.rtx_def* %17, null, !dbg !3861
  br i1 %tobool150, label %if.end204, label %if.then168, !dbg !3861

cond.false151:                                    ; preds = %if.else137
  %bf.load152 = load i32, i32* %7, align 8, !dbg !3861
  %bf.clear154 = and i32 %bf.load152, 16711680, !dbg !3861
  %cmp155 = icmp eq i32 %bf.clear154, 65536, !dbg !3861
  br i1 %cmp155, label %if.end204, label %cond.true157, !dbg !3863

cond.true157:                                     ; preds = %cond.false151
  %bf.lshr159 = lshr i32 %bf.load152, 16, !dbg !3861
  %bf.clear160 = and i32 %bf.lshr159, 255, !dbg !3861
  %idxprom161 = zext i32 %bf.clear160 to i64, !dbg !3861
  %arrayidx162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom161, !dbg !3861
  %18 = load i8, i8* %arrayidx162, align 1, !dbg !3861
  %conv164 = zext i8 %18 to i64, !dbg !3861
  %call165 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv164) #8, !dbg !3861
  %tobool166 = icmp eq %struct.rtx_def* %call165, null, !dbg !3861
  br i1 %tobool166, label %if.end204, label %cond.true157.if.then168_crit_edge, !dbg !3861

cond.true157.if.then168_crit_edge:                ; preds = %cond.true157
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3864
  br label %if.then168, !dbg !3861

if.then168:                                       ; preds = %cond.true157.if.then168_crit_edge, %cond.true144
  %19 = phi %struct.mem_attrs* [ %.pre, %cond.true157.if.then168_crit_edge ], [ %16, %cond.true144 ], !dbg !3864
  %cmp173 = icmp eq %struct.mem_attrs* %19, null, !dbg !3864
  br i1 %cmp173, label %cond.false181, label %cond.true175, !dbg !3864

cond.true175:                                     ; preds = %if.then168
  %size180 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %19, i64 0, i32 2, !dbg !3864
  %20 = load %struct.rtx_def*, %struct.rtx_def** %size180, align 8, !dbg !3864
  br label %cond.end199, !dbg !3864

cond.false181:                                    ; preds = %if.then168
  %bf.load182 = load i32, i32* %7, align 8, !dbg !3864
  %bf.clear184 = and i32 %bf.load182, 16711680, !dbg !3864
  %cmp185 = icmp eq i32 %bf.clear184, 65536, !dbg !3864
  br i1 %cmp185, label %cond.end199, label %cond.true187, !dbg !3864

cond.true187:                                     ; preds = %cond.false181
  %bf.lshr189 = lshr i32 %bf.load182, 16, !dbg !3864
  %bf.clear190 = and i32 %bf.lshr189, 255, !dbg !3864
  %idxprom191 = zext i32 %bf.clear190 to i64, !dbg !3864
  %arrayidx192 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom191, !dbg !3864
  %21 = load i8, i8* %arrayidx192, align 1, !dbg !3864
  %conv194 = zext i8 %21 to i64, !dbg !3864
  %call195 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv194) #8, !dbg !3864
  br label %cond.end199, !dbg !3864

cond.end199:                                      ; preds = %cond.false181, %cond.true187, %cond.true175
  %cond200 = phi %struct.rtx_def* [ %20, %cond.true175 ], [ %call195, %cond.true187 ], [ null, %cond.false181 ], !dbg !3864
  %sub201 = sub nsw i64 0, %offset.addr.0, !dbg !3865
  %call202 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %cond200, i64 %sub201) #7, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call202, metadata !3785, metadata !DIExpression()), !dbg !3794
  br label %if.end204, !dbg !3867

if.end204:                                        ; preds = %cond.true144, %cond.true157, %cond.false151, %cond.end199, %if.then128
  %size.1 = phi %struct.rtx_def* [ %call136, %if.then128 ], [ %call202, %cond.end199 ], [ null, %cond.true144 ], [ null, %cond.true157 ], [ null, %cond.false151 ], !dbg !3868
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.1, metadata !3785, metadata !DIExpression()), !dbg !3794
  %22 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3869
  %cmp209 = icmp eq %struct.mem_attrs* %22, null, !dbg !3869
  br i1 %cmp209, label %cond.end217, label %cond.false212, !dbg !3869

cond.false212:                                    ; preds = %if.end204
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %22, i64 0, i32 3, !dbg !3869
  %23 = load i32, i32* %alias, align 8, !dbg !3869
  br label %cond.end217, !dbg !3869

cond.end217:                                      ; preds = %if.end204, %cond.false212
  %cond218 = phi i32 [ %23, %cond.false212 ], [ 0, %if.end204 ], !dbg !3869
  br i1 %cmp209, label %cond.end231, label %cond.false226, !dbg !3870

cond.false226:                                    ; preds = %cond.end217
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %22, i64 0, i32 0, !dbg !3870
  %24 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3870
  br label %cond.end231, !dbg !3870

cond.end231:                                      ; preds = %cond.end217, %cond.false226
  %cond232 = phi %union.tree_node* [ %24, %cond.false226 ], [ null, %cond.end217 ], !dbg !3870
  %bf.load233 = load i32, i32* %14, align 8, !dbg !3871
  %bf.lshr234 = lshr i32 %bf.load233, 16, !dbg !3871
  %bf.clear235 = and i32 %bf.lshr234, 255, !dbg !3871
  %call236 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond218, %union.tree_node* %cond232, %struct.rtx_def* %memoffset.0, %struct.rtx_def* %size.1, i32 %memalign.0, i8 zeroext %cond34, i32 %bf.clear235) #8, !dbg !3872
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3873
  %rt_mem240 = bitcast %union.rtunion_def* %25 to %struct.mem_attrs**, !dbg !3873
  store %struct.mem_attrs* %call236, %struct.mem_attrs** %rt_mem240, align 8, !dbg !3874
  br label %cleanup, !dbg !3875

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true38, %cond.end231
  %retval.0 = phi %struct.rtx_def* [ %new_rtx.0, %cond.end231 ], [ %memref, %lor.lhs.false ], [ %memref, %land.lhs.true38 ], !dbg !3794
  ret %struct.rtx_def* %retval.0, !dbg !3876
}

declare dso_local i32 @strict_memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %memref, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !3877 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !3881, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !3882, metadata !DIExpression()), !dbg !3883
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3884
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3884
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3884
  tail call void @update_temp_slot_address(%struct.rtx_def* %0, %struct.rtx_def* %addr) #7, !dbg !3885
  %call = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %addr, i32 1) #8, !dbg !3886
  ret %struct.rtx_def* %call, !dbg !3887
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op, i32 %offset, i32 %mode) local_unnamed_addr #5 !dbg !3888 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !3892, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i32 %offset, metadata !3893, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3894, metadata !DIExpression()), !dbg !3896
  %call = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %op, i32 %offset, i32 1, i32 %mode) #8, !dbg !3897
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3895, metadata !DIExpression()), !dbg !3896
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3898
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3900

if.end:                                           ; preds = %entry
  %switch = icmp ult i32 %mode, 2, !dbg !3901
  br i1 %switch, label %if.end8, label %if.then2, !dbg !3901

if.then2:                                         ; preds = %if.end
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !3903
  %bf.load = load i32, i32* %0, align 8, !dbg !3903
  %bf.clear = and i32 %bf.load, 65535, !dbg !3903
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !3903
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3906

if.then4:                                         ; preds = %if.then2
  %call5 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %op) #7, !dbg !3907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !3892, metadata !DIExpression()), !dbg !3896
  br label %if.end8, !dbg !3908

if.else:                                          ; preds = %if.then2
  %call6 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op) #7, !dbg !3909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !3892, metadata !DIExpression()), !dbg !3896
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4, %if.else
  %op.addr.1 = phi %struct.rtx_def* [ %op, %if.end ], [ %call5, %if.then4 ], [ %call6, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.addr.1, metadata !3892, metadata !DIExpression()), !dbg !3896
  %call9 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %op.addr.1, i32 %offset, i32 1, i32 %mode) #8, !dbg !3910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !3895, metadata !DIExpression()), !dbg !3896
  %tobool10 = icmp eq %struct.rtx_def* %call9, null, !dbg !3911
  br i1 %tobool10, label %cond.true, label %cleanup, !dbg !3911

cond.true:                                        ; preds = %if.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1428, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3911
  br label %cleanup, !dbg !3911

cleanup:                                          ; preds = %if.end8, %entry, %cond.true
  %retval.0 = phi %struct.rtx_def* [ %call, %entry ], [ %call9, %if.end8 ], [ null, %cond.true ], !dbg !3896
  ret %struct.rtx_def* %retval.0, !dbg !3912
}

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @mem_expr_equal_p(%union.tree_node* %expr1, %union.tree_node* %expr2) local_unnamed_addr #5 !dbg !3913 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr1, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %union.tree_node* %expr2, metadata !3921, metadata !DIExpression()), !dbg !3922
  %cmp = icmp eq %union.tree_node* %expr1, %expr2, !dbg !3923
  br i1 %cmp, label %return, label %if.end, !dbg !3925

if.end:                                           ; preds = %entry
  %tobool = icmp ne %union.tree_node* %expr1, null, !dbg !3926
  %tobool1 = icmp ne %union.tree_node* %expr2, null, !dbg !3928
  %or.cond = and i1 %tobool, %tobool1, !dbg !3929
  br i1 %or.cond, label %if.end3, label %return, !dbg !3929

if.end3:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3930
  %bf.load = load i64, i64* %0, align 8, !dbg !3930
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3932
  %bf.load5 = load i64, i64* %1, align 8, !dbg !3932
  %2 = xor i64 %bf.load, %bf.load5, !dbg !3933
  %3 = and i64 %2, 65535, !dbg !3933
  %cmp8 = icmp eq i64 %3, 0, !dbg !3933
  br i1 %cmp8, label %if.end10, label %return, !dbg !3934

if.end10:                                         ; preds = %if.end3
  %call = tail call i32 @operand_equal_p(%union.tree_node* nonnull %expr1, %union.tree_node* nonnull %expr2, i32 0) #7, !dbg !3935
  br label %return, !dbg !3936

return:                                           ; preds = %if.end3, %if.end, %entry, %if.end10
  %retval.0 = phi i32 [ %call, %if.end10 ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], !dbg !3922
  ret i32 %retval.0, !dbg !3937
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem_align_offset(%struct.rtx_def* %mem, i32 %align) local_unnamed_addr #5 !dbg !3938 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !3942, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 %align, metadata !3943, metadata !DIExpression()), !dbg !3955
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !3956
  %bf.load = load i32, i32* %0, align 8, !dbg !3956
  %bf.clear = and i32 %bf.load, 65535, !dbg !3956
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !3956
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3956

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1476, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3956
  br label %cond.end, !dbg !3956

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3957
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !3957
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3957
  %cmp1 = icmp eq %struct.mem_attrs* %2, null, !dbg !3957
  br i1 %cmp1, label %cond.end9, label %cond.false3, !dbg !3957

cond.false3:                                      ; preds = %cond.end
  %expr8 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 0, !dbg !3957
  %3 = load %union.tree_node*, %union.tree_node** %expr8, align 8, !dbg !3957
  br label %cond.end9, !dbg !3957

cond.end9:                                        ; preds = %cond.end, %cond.false3
  %cond10 = phi %union.tree_node* [ %3, %cond.false3 ], [ null, %cond.end ], !dbg !3957
  call void @llvm.dbg.value(metadata %union.tree_node* %cond10, metadata !3944, metadata !DIExpression()), !dbg !3955
  %cmp11 = icmp eq %union.tree_node* %cond10, null, !dbg !3958
  br i1 %cmp11, label %cleanup156, label %lor.lhs.false, !dbg !3960

lor.lhs.false:                                    ; preds = %cond.end9
  br i1 %cmp1, label %cond.end24, label %cond.false18, !dbg !3961

cond.false18:                                     ; preds = %lor.lhs.false
  %offset23 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 1, !dbg !3961
  %4 = load %struct.rtx_def*, %struct.rtx_def** %offset23, align 8, !dbg !3961
  %phitmp = icmp eq %struct.rtx_def* %4, null, !dbg !3961
  br label %cond.end24, !dbg !3961

cond.end24:                                       ; preds = %lor.lhs.false, %cond.false18
  %cond25 = phi i1 [ %phitmp, %cond.false18 ], [ true, %lor.lhs.false ]
  br i1 %cond25, label %cleanup156, label %lor.lhs.false27, !dbg !3962

lor.lhs.false27:                                  ; preds = %cond.end24
  %offset39 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 1, !dbg !3963
  %5 = bitcast %struct.rtx_def** %offset39 to i32**, !dbg !3963
  %6 = load i32*, i32** %5, align 8, !dbg !3963
  %bf.load42 = load i32, i32* %6, align 8, !dbg !3963
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !3963
  %cmp44 = icmp eq i32 %bf.clear43, 30, !dbg !3963
  br i1 %cmp44, label %if.end, label %cleanup156, !dbg !3964

if.end:                                           ; preds = %lor.lhs.false27
  %u59 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !3965
  %arrayidx60 = bitcast i32* %u59 to i64*, !dbg !3965
  %7 = load i64, i64* %arrayidx60, align 8, !dbg !3965
  call void @llvm.dbg.value(metadata i64 %7, metadata !3945, metadata !DIExpression()), !dbg !3955
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3966
  %bf.load61 = load i64, i64* %8, align 8, !dbg !3966
  %bf.cast = and i64 %bf.load61, 65535, !dbg !3966
  %arrayidx63 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3966
  %9 = load i32, i32* %arrayidx63, align 4, !dbg !3966
  %cmp64 = icmp eq i32 %9, 3, !dbg !3966
  br i1 %cmp64, label %if.then65, label %if.else, !dbg !3967

if.then65:                                        ; preds = %if.end
  %align66 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3968
  %10 = load i32, i32* %align66, align 8, !dbg !3968
  %cmp67 = icmp ult i32 %10, %align, !dbg !3971
  br i1 %cmp67, label %cleanup156, label %if.end153, !dbg !3972

if.else:                                          ; preds = %if.end
  %cmp74 = icmp eq i64 %bf.cast, 47, !dbg !3973
  br i1 %cmp74, label %if.then87, label %lor.lhs.false75, !dbg !3973

lor.lhs.false75:                                  ; preds = %if.else
  %cmp80 = icmp eq i64 %bf.cast, 48, !dbg !3973
  br i1 %cmp80, label %if.then87, label %lor.lhs.false81, !dbg !3973

lor.lhs.false81:                                  ; preds = %lor.lhs.false75
  %cmp86 = icmp eq i64 %bf.cast, 49, !dbg !3973
  br i1 %cmp86, label %if.then87, label %if.else93, !dbg !3974

if.then87:                                        ; preds = %lor.lhs.false81, %lor.lhs.false75, %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3975
  %11 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3975
  %12 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !3975
  %align89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 7, !dbg !3975
  %13 = load i32, i32* %align89, align 8, !dbg !3975
  %cmp90 = icmp ult i32 %13, %align, !dbg !3978
  br i1 %cmp90, label %cleanup156, label %if.end153, !dbg !3979

if.else93:                                        ; preds = %lor.lhs.false81
  %cmp98 = icmp eq i64 %bf.cast, 41, !dbg !3980
  br i1 %cmp98, label %while.cond.preheader, label %cleanup156, !dbg !3981

while.cond.preheader:                             ; preds = %if.else93
  br label %while.cond, !dbg !3982

while.cond:                                       ; preds = %while.cond.preheader, %cleanup
  %expr.0 = phi %union.tree_node* [ %expr.1, %cleanup ], [ %cond10, %while.cond.preheader ], !dbg !3983
  %offset.0 = phi i64 [ %offset.1, %cleanup ], [ %7, %while.cond.preheader ], !dbg !3955
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !3945, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !3944, metadata !DIExpression()), !dbg !3955
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3984
  %14 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3984
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3946, metadata !DIExpression()), !dbg !3985
  %arrayidx103 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3986
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx103, align 8, !dbg !3986
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3952, metadata !DIExpression()), !dbg !3985
  %call = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* %expr.0) #7, !dbg !3987
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3953, metadata !DIExpression()), !dbg !3985
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3988
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !3988
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3954, metadata !DIExpression()), !dbg !3985
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3989
  br i1 %tobool, label %cleanup, label %lor.lhs.false105, !dbg !3991

lor.lhs.false105:                                 ; preds = %while.cond
  %call106 = tail call i32 @host_integerp(%union.tree_node* nonnull %call, i32 1) #7, !dbg !3992
  %tobool107 = icmp eq i32 %call106, 0, !dbg !3992
  br i1 %tobool107, label %cleanup, label %lor.lhs.false108, !dbg !3993

lor.lhs.false108:                                 ; preds = %lor.lhs.false105
  %call109 = tail call i32 @host_integerp(%union.tree_node* %17, i32 1) #7, !dbg !3994
  %tobool110 = icmp eq i32 %call109, 0, !dbg !3994
  br i1 %tobool110, label %cleanup, label %if.end112, !dbg !3995

if.end112:                                        ; preds = %lor.lhs.false108
  %call113 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %call, i32 1) #7, !dbg !3996
  %add = add i64 %offset.0, %call113, !dbg !3997
  call void @llvm.dbg.value(metadata i64 %add, metadata !3945, metadata !DIExpression()), !dbg !3955
  %call114 = tail call i64 @tree_low_cst(%union.tree_node* %17, i32 1) #7, !dbg !3998
  %div = sdiv i64 %call114, 8, !dbg !3999
  %add115 = add i64 %add, %div, !dbg !4000
  call void @llvm.dbg.value(metadata i64 %add115, metadata !3945, metadata !DIExpression()), !dbg !3955
  %cmp116 = icmp eq %union.tree_node* %14, null, !dbg !4001
  br i1 %cmp116, label %if.then117, label %if.else123, !dbg !4003

if.then117:                                       ; preds = %if.end112
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4004
  %18 = bitcast %union.tree_node** %context to %struct.tree_type**, !dbg !4004
  %19 = load %struct.tree_type*, %struct.tree_type** %18, align 8, !dbg !4004
  %align119 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 7, !dbg !4004
  %20 = load i32, i32* %align119, align 8, !dbg !4004
  %cmp120 = icmp ult i32 %20, %align, !dbg !4007
  %. = select i1 %cmp120, i32 1, i32 3, !dbg !4008
  br label %cleanup, !dbg !4008

if.else123:                                       ; preds = %if.end112
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4009
  %bf.load125 = load i64, i64* %21, align 8, !dbg !4009
  %bf.cast127 = and i64 %bf.load125, 65535, !dbg !4009
  %arrayidx129 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast127, !dbg !4009
  %22 = load i32, i32* %arrayidx129, align 4, !dbg !4009
  %cmp130 = icmp eq i32 %22, 3, !dbg !4009
  br i1 %cmp130, label %if.then131, label %if.else137, !dbg !4011

if.then131:                                       ; preds = %if.else123
  %align133 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4012
  %23 = load i32, i32* %align133, align 8, !dbg !4012
  %cmp134 = icmp ult i32 %23, %align, !dbg !4015
  %.1 = select i1 %cmp134, i32 1, i32 3, !dbg !4016
  br label %cleanup, !dbg !4016

if.else137:                                       ; preds = %if.else123
  %cmp142 = icmp ne i64 %bf.cast127, 41, !dbg !4017
  %spec.select = select i1 %cmp142, %union.tree_node* %expr.0, %union.tree_node* %14, !dbg !4019
  %spec.select3 = zext i1 %cmp142 to i32, !dbg !4019
  br label %cleanup, !dbg !4019

cleanup:                                          ; preds = %lor.lhs.false108, %lor.lhs.false105, %while.cond, %if.else137, %if.then131, %if.then117
  %expr.1 = phi %union.tree_node* [ %expr.0, %lor.lhs.false108 ], [ %expr.0, %lor.lhs.false105 ], [ %expr.0, %while.cond ], [ %expr.0, %if.then117 ], [ %expr.0, %if.then131 ], [ %spec.select, %if.else137 ], !dbg !3955
  %offset.1 = phi i64 [ %offset.0, %lor.lhs.false108 ], [ %offset.0, %lor.lhs.false105 ], [ %offset.0, %while.cond ], [ %add115, %if.then117 ], [ %add115, %if.then131 ], [ %add115, %if.else137 ], !dbg !3955
  %cleanup.dest.slot.0 = phi i32 [ 1, %lor.lhs.false108 ], [ 1, %lor.lhs.false105 ], [ 1, %while.cond ], [ %., %if.then117 ], [ %.1, %if.then131 ], [ %spec.select3, %if.else137 ]
  call void @llvm.dbg.value(metadata i64 %offset.1, metadata !3945, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !3944, metadata !DIExpression()), !dbg !3955
  switch i32 %cleanup.dest.slot.0, label %cleanup156.loopexit [
    i32 0, label %while.cond
    i32 3, label %if.end153.loopexit
  ], !llvm.loop !4020

if.end153.loopexit:                               ; preds = %cleanup
  %offset.1.lcssa13 = phi i64 [ %offset.1, %cleanup ], !dbg !3955
  call void @llvm.dbg.value(metadata i64 %offset.1.lcssa13, metadata !3945, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i64 %offset.1.lcssa13, metadata !3945, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i64 %offset.1.lcssa13, metadata !3945, metadata !DIExpression()), !dbg !3955
  br label %if.end153, !dbg !4022

if.end153:                                        ; preds = %if.end153.loopexit, %if.then87, %if.then65
  %offset.3 = phi i64 [ %7, %if.then65 ], [ %7, %if.then87 ], [ %offset.1.lcssa13, %if.end153.loopexit ], !dbg !4023
  call void @llvm.dbg.value(metadata i64 %offset.3, metadata !3945, metadata !DIExpression()), !dbg !3955
  %div154 = lshr i32 %align, 3, !dbg !4022
  %sub = add nsw i32 %div154, -1, !dbg !4024
  %24 = trunc i64 %offset.3 to i32, !dbg !4025
  %conv155 = and i32 %sub, %24, !dbg !4025
  br label %cleanup156, !dbg !4026

cleanup156.loopexit:                              ; preds = %cleanup
  br label %cleanup156, !dbg !4027

cleanup156:                                       ; preds = %cleanup156.loopexit, %if.else93, %if.then87, %if.then65, %cond.end9, %cond.end24, %lor.lhs.false27, %if.end153
  %retval.2 = phi i32 [ %conv155, %if.end153 ], [ -1, %lor.lhs.false27 ], [ -1, %cond.end24 ], [ -1, %cond.end9 ], [ -1, %if.then65 ], [ -1, %if.then87 ], [ -1, %if.else93 ], [ -1, %cleanup156.loopexit ], !dbg !3955
  ret i32 %retval.2, !dbg !4027
}

declare dso_local %union.tree_node* @component_ref_field_offset(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_attributes_minus_bitpos(%struct.rtx_def* %ref, %union.tree_node* %t, i32 %objectp, i64 %bitpos) local_unnamed_addr #5 !dbg !4028 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ref, metadata !4032, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4033, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %objectp, metadata !4034, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !4035, metadata !DIExpression()), !dbg !4070
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %ref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4071
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4071
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4071
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4071
  br label %cond.end, !dbg !4071

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !4071

cond.end:                                         ; preds = %entry, %cond.false
  call void @llvm.dbg.value(metadata i32 undef, metadata !4036, metadata !DIExpression()), !dbg !4070
  br i1 %cmp, label %cond.end18, label %cond.false12, !dbg !4072

cond.false12:                                     ; preds = %cond.end
  %expr17 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4072
  %2 = load %union.tree_node*, %union.tree_node** %expr17, align 8, !dbg !4072
  br label %cond.end18, !dbg !4072

cond.end18:                                       ; preds = %cond.end, %cond.false12
  %cond19 = phi %union.tree_node* [ %2, %cond.false12 ], [ null, %cond.end ], !dbg !4072
  call void @llvm.dbg.value(metadata %union.tree_node* %cond19, metadata !4037, metadata !DIExpression()), !dbg !4070
  br i1 %cmp, label %cond.end32, label %cond.false26, !dbg !4073

cond.false26:                                     ; preds = %cond.end18
  %offset31 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4073
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset31, align 8, !dbg !4073
  br label %cond.end32, !dbg !4073

cond.end32:                                       ; preds = %cond.end18, %cond.false26
  %cond33 = phi %struct.rtx_def* [ %3, %cond.false26 ], [ null, %cond.end18 ], !dbg !4073
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond33, metadata !4038, metadata !DIExpression()), !dbg !4070
  br i1 %cmp, label %cond.false45, label %cond.true39, !dbg !4074

cond.true39:                                      ; preds = %cond.end32
  %size44 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !4074
  %4 = load %struct.rtx_def*, %struct.rtx_def** %size44, align 8, !dbg !4074
  br label %cond.end56, !dbg !4074

cond.false45:                                     ; preds = %cond.end32
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %ref, i64 0, i32 0, !dbg !4074
  %bf.load = load i32, i32* %5, align 8, !dbg !4074
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4074
  %cmp46 = icmp eq i32 %bf.clear, 65536, !dbg !4074
  br i1 %cmp46, label %cond.end56, label %cond.true47, !dbg !4074

cond.true47:                                      ; preds = %cond.false45
  %bf.lshr49 = lshr i32 %bf.load, 16, !dbg !4074
  %bf.clear50 = and i32 %bf.lshr49, 255, !dbg !4074
  %idxprom = zext i32 %bf.clear50 to i64, !dbg !4074
  %arrayidx51 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4074
  %6 = load i8, i8* %arrayidx51, align 1, !dbg !4074
  %conv52 = zext i8 %6 to i64, !dbg !4074
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv52) #8, !dbg !4074
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4075
  br label %cond.end56, !dbg !4074

cond.end56:                                       ; preds = %cond.false45, %cond.true47, %cond.true39
  %7 = phi %struct.mem_attrs* [ %1, %cond.true39 ], [ %.pre, %cond.true47 ], [ null, %cond.false45 ], !dbg !4075
  %cond57 = phi %struct.rtx_def* [ %4, %cond.true39 ], [ %call, %cond.true47 ], [ null, %cond.false45 ], !dbg !4074
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond57, metadata !4039, metadata !DIExpression()), !dbg !4070
  %cmp62 = icmp eq %struct.mem_attrs* %7, null, !dbg !4075
  br i1 %cmp62, label %cond.end71, label %cond.true64, !dbg !4075

cond.true64:                                      ; preds = %cond.end56
  %align69 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 4, !dbg !4075
  %8 = load i32, i32* %align69, align 4, !dbg !4075
  br label %cond.end71, !dbg !4075

cond.end71:                                       ; preds = %cond.end56, %cond.true64
  %cond72 = phi i32 [ %8, %cond.true64 ], [ 8, %cond.end56 ], !dbg !4075
  call void @llvm.dbg.value(metadata i32 %cond72, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 0, metadata !4041, metadata !DIExpression()), !dbg !4070
  %cmp73 = icmp eq %union.tree_node* %t, null, !dbg !4076
  br i1 %cmp73, label %cleanup.cont, label %if.end, !dbg !4078

if.end:                                           ; preds = %cond.end71
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4079
  %bf.load75 = load i64, i64* %9, align 8, !dbg !4079
  %bf.cast = and i64 %bf.load75, 65535, !dbg !4079
  %arrayidx78 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4079
  %10 = load i32, i32* %arrayidx78, align 4, !dbg !4079
  %cmp79 = icmp eq i32 %10, 2, !dbg !4079
  br i1 %cmp79, label %cond.end84, label %cond.false82, !dbg !4079

cond.false82:                                     ; preds = %if.end
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4080
  %11 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !4080
  br label %cond.end84, !dbg !4079

cond.end84:                                       ; preds = %if.end, %cond.false82
  %cond85 = phi %union.tree_node* [ %11, %cond.false82 ], [ %t, %if.end ], !dbg !4079
  call void @llvm.dbg.value(metadata %union.tree_node* %cond85, metadata !4042, metadata !DIExpression()), !dbg !4070
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4081
  %cmp86 = icmp eq %union.tree_node* %cond85, %12, !dbg !4083
  br i1 %cmp86, label %cleanup.cont, label %if.end89, !dbg !4084

if.end89:                                         ; preds = %cond.end84
  %cmp96 = icmp eq i32 %10, 3, !dbg !4085
  br i1 %cmp96, label %lor.lhs.false, label %cond.end127, !dbg !4085

lor.lhs.false:                                    ; preds = %if.end89
  %arrayidx104 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !4085
  %13 = load i8, i8* %arrayidx104, align 1, !dbg !4085
  %tobool = icmp eq i8 %13, 0, !dbg !4085
  br i1 %tobool, label %cond.end121, label %land.lhs.true, !dbg !4085

land.lhs.true:                                    ; preds = %lor.lhs.false
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4085
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4085
  %cmp106 = icmp eq %struct.rtx_def* %14, null, !dbg !4085
  br i1 %cmp106, label %cond.end121, label %cond.true108, !dbg !4085

cond.true108:                                     ; preds = %land.lhs.true
  br i1 false, label %cond.false115, label %cond.true112, !dbg !4085

cond.true112:                                     ; preds = %cond.true108
  br label %cond.end121, !dbg !4085

cond.false115:                                    ; preds = %cond.true108
  br label %cond.end121, !dbg !4085

cond.end121:                                      ; preds = %land.lhs.true, %lor.lhs.false, %cond.true112, %cond.false115
  %cond122 = phi %struct.rtx_def* [ %14, %cond.true112 ], [ undef, %cond.false115 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false ], !dbg !4085
  %cmp123 = icmp eq %struct.rtx_def* %cond122, %ref, !dbg !4085
  br i1 %cmp123, label %cond.true125, label %cond.end127, !dbg !4085

cond.true125:                                     ; preds = %cond.end121
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1566, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4085
  br label %cond.end127, !dbg !4085

cond.end127:                                      ; preds = %cond.end121, %if.end89, %cond.true125
  %call129 = tail call i32 @get_alias_set(%union.tree_node* nonnull %t) #7, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %call129, metadata !4036, metadata !DIExpression()), !dbg !4070
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4087
  %bf.load131 = load i64, i64* %15, align 8, !dbg !4087
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %ref, i64 0, i32 0, !dbg !4088
  %bf.load135 = load i32, i32* %16, align 8, !dbg !4089
  %bf.load131.tr = trunc i64 %bf.load131 to i32, !dbg !4089
  %17 = shl i32 %bf.load131.tr, 8, !dbg !4089
  %18 = and i32 %17, 134217728, !dbg !4089
  %bf.set = or i32 %18, %bf.load135, !dbg !4089
  store i32 %bf.set, i32* %16, align 8, !dbg !4089
  %bf.load141 = load i64, i64* %15, align 8, !dbg !4090
  %bf.cast14314 = and i64 %bf.load141, 65535, !dbg !4090
  %cmp144 = icmp eq i64 %bf.cast14314, 15, !dbg !4090
  br i1 %cmp144, label %lor.end, label %lor.lhs.false146, !dbg !4090

lor.lhs.false146:                                 ; preds = %cond.end127
  %cmp151 = icmp eq i64 %bf.cast14314, 16, !dbg !4090
  br i1 %cmp151, label %lor.end, label %lor.lhs.false153, !dbg !4090

lor.lhs.false153:                                 ; preds = %lor.lhs.false146
  %cmp158 = icmp eq i64 %bf.cast14314, 17, !dbg !4090
  br i1 %cmp158, label %lor.end, label %lor.lhs.false160, !dbg !4090

lor.lhs.false160:                                 ; preds = %lor.lhs.false153
  %cmp165 = icmp eq i64 %bf.cast14314, 18, !dbg !4090
  br i1 %cmp165, label %lor.end, label %lor.rhs, !dbg !4091

lor.rhs:                                          ; preds = %lor.lhs.false160
  %cmp171 = icmp eq i64 %bf.cast14314, 13, !dbg !4092
  br label %lor.end, !dbg !4091

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false160, %lor.lhs.false153, %lor.lhs.false146, %cond.end127
  %19 = phi i1 [ true, %lor.lhs.false160 ], [ true, %lor.lhs.false153 ], [ true, %lor.lhs.false146 ], [ true, %cond.end127 ], [ %cmp171, %lor.rhs ]
  %lor.ext = zext i1 %19 to i32, !dbg !4091
  %bf.shl175 = shl nuw nsw i32 %lor.ext, 28, !dbg !4093
  %bf.clear176 = and i32 %bf.set, -268435457, !dbg !4093
  %bf.set177 = or i32 %bf.clear176, %bf.shl175, !dbg !4093
  store i32 %bf.set177, i32* %16, align 8, !dbg !4093
  %bf.load179 = load i64, i64* %15, align 8, !dbg !4094
  %bf.cast18119 = and i64 %bf.load179, 65535, !dbg !4094
  %cmp182 = icmp eq i64 %bf.cast18119, 10, !dbg !4094
  br i1 %cmp182, label %lor.end191, label %lor.rhs184, !dbg !4094

lor.rhs184:                                       ; preds = %lor.end
  %cmp189 = icmp eq i64 %bf.cast18119, 12, !dbg !4094
  br label %lor.end191, !dbg !4094

lor.end191:                                       ; preds = %lor.rhs184, %lor.end
  %20 = phi i1 [ true, %lor.end ], [ %cmp189, %lor.rhs184 ]
  %lor.ext192 = zext i1 %20 to i32, !dbg !4094
  %bf.shl195 = shl nuw nsw i32 %lor.ext192, 30, !dbg !4095
  %bf.clear196 = and i32 %bf.set177, -1073741825, !dbg !4095
  %bf.set197 = or i32 %bf.clear196, %bf.shl195, !dbg !4095
  store i32 %bf.set197, i32* %16, align 8, !dbg !4095
  %tobool198 = icmp eq i32 %objectp, 0, !dbg !4096
  br i1 %tobool198, label %lor.lhs.false199, label %land.lhs.true208, !dbg !4098

lor.lhs.false199:                                 ; preds = %lor.end191
  %bf.load201 = load i64, i64* %9, align 8, !dbg !4099
  %bf.cast203 = and i64 %bf.load201, 65535, !dbg !4099
  %arrayidx205 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast203, !dbg !4099
  %21 = load i32, i32* %arrayidx205, align 4, !dbg !4099
  %cmp206 = icmp eq i32 %21, 3, !dbg !4099
  br i1 %cmp206, label %land.lhs.true208, label %if.end247, !dbg !4100

land.lhs.true208:                                 ; preds = %lor.end191, %lor.lhs.false199
  %bf.load210 = load i64, i64* %15, align 8, !dbg !4101
  %bf.cast21260 = and i64 %bf.load210, 65535, !dbg !4101
  %cmp213 = icmp eq i64 %bf.cast21260, 15, !dbg !4101
  br i1 %cmp213, label %if.end247, label %lor.lhs.false215, !dbg !4101

lor.lhs.false215:                                 ; preds = %land.lhs.true208
  %cmp220 = icmp eq i64 %bf.cast21260, 16, !dbg !4101
  br i1 %cmp220, label %if.end247, label %lor.lhs.false222, !dbg !4101

lor.lhs.false222:                                 ; preds = %lor.lhs.false215
  %cmp227 = icmp eq i64 %bf.cast21260, 17, !dbg !4101
  br i1 %cmp227, label %if.end247, label %lor.lhs.false229, !dbg !4101

lor.lhs.false229:                                 ; preds = %lor.lhs.false222
  %cmp234 = icmp eq i64 %bf.cast21260, 18, !dbg !4101
  br i1 %cmp234, label %if.end247, label %land.lhs.true236, !dbg !4102

land.lhs.true236:                                 ; preds = %lor.lhs.false229
  %cmp241 = icmp eq i64 %bf.cast21260, 13, !dbg !4103
  br i1 %cmp241, label %if.end247, label %if.then243, !dbg !4104

if.then243:                                       ; preds = %land.lhs.true236
  %bf.set246 = or i32 %bf.set197, -2147483648, !dbg !4105
  store i32 %bf.set246, i32* %16, align 8, !dbg !4105
  br label %if.end247, !dbg !4106

if.end247:                                        ; preds = %land.lhs.true236, %if.then243, %lor.lhs.false229, %lor.lhs.false222, %lor.lhs.false215, %land.lhs.true208, %lor.lhs.false199
  br i1 %tobool198, label %lor.lhs.false249, label %if.then270, !dbg !4107

lor.lhs.false249:                                 ; preds = %if.end247
  %bf.load251 = load i64, i64* %9, align 8, !dbg !4109
  %bf.cast25321 = and i64 %bf.load251, 65535, !dbg !4110
  %cmp254 = icmp eq i64 %bf.cast25321, 47, !dbg !4110
  br i1 %cmp254, label %if.then270, label %lor.lhs.false256, !dbg !4111

lor.lhs.false256:                                 ; preds = %lor.lhs.false249
  %cmp261 = icmp eq i64 %bf.cast25321, 48, !dbg !4112
  br i1 %cmp261, label %if.then270, label %lor.lhs.false263, !dbg !4113

lor.lhs.false263:                                 ; preds = %lor.lhs.false256
  %bf.load265 = load i64, i64* %15, align 8, !dbg !4114
  %bf.cast26823 = and i64 %bf.load265, 33554432, !dbg !4114
  %tobool269 = icmp eq i64 %bf.cast26823, 0, !dbg !4114
  br i1 %tobool269, label %if.else, label %if.then270, !dbg !4115

if.then270:                                       ; preds = %lor.lhs.false263, %if.end247, %lor.lhs.false256, %lor.lhs.false249
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4116
  %23 = load i32, i32* %22, align 8, !dbg !4116
  %cmp273 = icmp ugt i32 %cond72, %23, !dbg !4116
  br i1 %cmp273, label %if.end300, label %cond.false276, !dbg !4116

cond.false276:                                    ; preds = %if.then270
  br label %if.end300, !dbg !4116

if.else:                                          ; preds = %lor.lhs.false263
  %cmp285 = icmp eq i64 %bf.cast25321, 49, !dbg !4117
  br i1 %cmp285, label %if.then287, label %if.end300, !dbg !4119

if.then287:                                       ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4120
  %arrayidx288 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4120
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx288, align 8, !dbg !4120
  %call289 = tail call i32 @integer_zerop(%union.tree_node* %24) #7, !dbg !4123
  %tobool290 = icmp eq i32 %call289, 0, !dbg !4123
  br i1 %tobool290, label %if.else292, label %if.end300, !dbg !4124

if.else292:                                       ; preds = %if.then287
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx288, align 8, !dbg !4125
  %call296 = tail call i64 @tree_low_cst(%union.tree_node* %25, i32 1) #7, !dbg !4126
  %conv297 = trunc i64 %call296 to i32, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %conv297, metadata !4040, metadata !DIExpression()), !dbg !4070
  br label %if.end300

if.end300:                                        ; preds = %if.then287, %if.else, %if.else292, %cond.false276, %if.then270
  %align.2 = phi i32 [ %23, %cond.false276 ], [ %cond72, %if.then270 ], [ %cond72, %if.else ], [ %conv297, %if.else292 ], [ 8, %if.then287 ], !dbg !4127
  call void @llvm.dbg.value(metadata i32 %align.2, metadata !4040, metadata !DIExpression()), !dbg !4070
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4128
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !4128
  %tobool302 = icmp eq %union.tree_node* %27, null, !dbg !4128
  br i1 %tobool302, label %if.end313, label %land.lhs.true303, !dbg !4130

land.lhs.true303:                                 ; preds = %if.end300
  %call306 = tail call i32 @host_integerp(%union.tree_node* nonnull %27, i32 1) #7, !dbg !4131
  %tobool307 = icmp eq i32 %call306, 0, !dbg !4131
  br i1 %tobool307, label %if.end313, label %if.then308, !dbg !4132

if.then308:                                       ; preds = %land.lhs.true303
  %28 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !4133
  %call311 = tail call i64 @tree_low_cst(%union.tree_node* %28, i32 1) #7, !dbg !4133
  %call312 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call311) #8, !dbg !4133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call312, metadata !4039, metadata !DIExpression()), !dbg !4070
  br label %if.end313, !dbg !4134

if.end313:                                        ; preds = %land.lhs.true303, %if.end300, %if.then308
  %size.0 = phi %struct.rtx_def* [ %call312, %if.then308 ], [ %cond57, %land.lhs.true303 ], [ %cond57, %if.end300 ], !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.0, metadata !4039, metadata !DIExpression()), !dbg !4070
  %bf.load315 = load i64, i64* %9, align 8, !dbg !4135
  %bf.cast317 = and i64 %bf.load315, 65535, !dbg !4135
  %arrayidx319 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast317, !dbg !4135
  %29 = load i32, i32* %arrayidx319, align 4, !dbg !4135
  %cmp320 = icmp eq i32 %29, 2, !dbg !4135
  br i1 %cmp320, label %if.end752, label %if.then322, !dbg !4136

if.then322:                                       ; preds = %if.end313
  call void @llvm.dbg.value(metadata i8 0, metadata !4046, metadata !DIExpression()), !dbg !4137
  %bf.cast32825 = and i64 %bf.load315, 524288, !dbg !4138
  %tobool329 = icmp eq i64 %bf.cast32825, 0, !dbg !4138
  br i1 %tobool329, label %if.end334, label %if.then330, !dbg !4140

if.then330:                                       ; preds = %if.then322
  %bf.load331 = load i32, i32* %16, align 8, !dbg !4141
  %bf.set333 = or i32 %bf.load331, 134217728, !dbg !4141
  store i32 %bf.set333, i32* %16, align 8, !dbg !4141
  br label %if.end334, !dbg !4142

if.end334:                                        ; preds = %if.then322, %if.then330
  br label %while.cond, !dbg !4143

while.cond:                                       ; preds = %while.body, %if.end334
  %t.addr.0 = phi %union.tree_node* [ %t, %if.end334 ], [ %31, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !4033, metadata !DIExpression()), !dbg !4070
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4144
  %bf.load336 = load i64, i64* %30, align 8, !dbg !4144
  %bf.cast33826 = and i64 %bf.load336, 65535, !dbg !4144
  %cmp339 = icmp eq i64 %bf.cast33826, 116, !dbg !4144
  br i1 %cmp339, label %while.body, label %lor.lhs.false341, !dbg !4144

lor.lhs.false341:                                 ; preds = %while.cond
  %cmp346 = icmp eq i64 %bf.cast33826, 113, !dbg !4144
  br i1 %cmp346, label %while.body, label %lor.lhs.false348, !dbg !4145

lor.lhs.false348:                                 ; preds = %lor.lhs.false341
  %cmp353 = icmp eq i64 %bf.cast33826, 118, !dbg !4146
  %cmp360 = icmp eq i64 %bf.cast33826, 120, !dbg !4147
  %or.cond67 = or i1 %cmp353, %cmp360, !dbg !4148
  br i1 %or.cond67, label %while.body, label %while.cond367.preheader, !dbg !4148

while.cond367.preheader:                          ; preds = %lor.lhs.false348
  %t.addr.0.lcssa = phi %union.tree_node* [ %t.addr.0, %lor.lhs.false348 ]
  %.lcssa69 = phi i64* [ %30, %lor.lhs.false348 ], !dbg !4144
  %bf.load336.lcssa = phi i64 [ %bf.load336, %lor.lhs.false348 ], !dbg !4144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4033, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4033, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4033, metadata !DIExpression()), !dbg !4070
  br label %while.cond367, !dbg !4149

while.body:                                       ; preds = %while.cond, %lor.lhs.false341, %lor.lhs.false348
  %operands365 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4150
  %31 = load %union.tree_node*, %union.tree_node** %operands365, align 8, !dbg !4150
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !4033, metadata !DIExpression()), !dbg !4070
  br label %while.cond, !dbg !4143, !llvm.loop !4151

while.cond367:                                    ; preds = %while.cond367.preheader, %while.body397
  %bf.load403 = phi i64 [ %bf.load369.pre, %while.body397 ], [ %bf.load336.lcssa, %while.cond367.preheader ], !dbg !4152
  %base323.0 = phi %union.tree_node* [ %32, %while.body397 ], [ %t.addr.0.lcssa, %while.cond367.preheader ], !dbg !4137
  call void @llvm.dbg.value(metadata %union.tree_node* %base323.0, metadata !4043, metadata !DIExpression()), !dbg !4137
  %bf.cast37130 = and i64 %bf.load403, 65535, !dbg !4153
  %cmp372 = icmp eq i64 %bf.cast37130, 41, !dbg !4153
  br i1 %cmp372, label %while.body397, label %lor.lhs.false374, !dbg !4154

lor.lhs.false374:                                 ; preds = %while.cond367
  %cmp379 = icmp eq i64 %bf.cast37130, 43, !dbg !4155
  br i1 %cmp379, label %while.body397, label %lor.lhs.false381, !dbg !4156

lor.lhs.false381:                                 ; preds = %lor.lhs.false374
  %cmp386 = icmp eq i64 %bf.cast37130, 44, !dbg !4157
  %cmp393 = icmp eq i64 %bf.cast37130, 42, !dbg !4158
  %or.cond66 = or i1 %cmp386, %cmp393, !dbg !4159
  br i1 %or.cond66, label %while.body397, label %while.end401, !dbg !4159

while.body397:                                    ; preds = %while.cond367, %lor.lhs.false374, %lor.lhs.false381
  %operands399 = getelementptr inbounds %union.tree_node, %union.tree_node* %base323.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4160
  %32 = load %union.tree_node*, %union.tree_node** %operands399, align 8, !dbg !4160
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4043, metadata !DIExpression()), !dbg !4137
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4137
  %bf.load369.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4152
  br label %while.cond367, !dbg !4149, !llvm.loop !4161

while.end401:                                     ; preds = %lor.lhs.false381
  %bf.load403.lcssa = phi i64 [ %bf.load403, %lor.lhs.false381 ], !dbg !4152
  %base323.0.lcssa = phi %union.tree_node* [ %base323.0, %lor.lhs.false381 ], !dbg !4137
  %bf.cast37130.lcssa = phi i64 [ %bf.cast37130, %lor.lhs.false381 ], !dbg !4153
  call void @llvm.dbg.value(metadata %union.tree_node* %base323.0.lcssa, metadata !4043, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata %union.tree_node* %base323.0.lcssa, metadata !4043, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata %union.tree_node* %base323.0.lcssa, metadata !4043, metadata !DIExpression()), !dbg !4137
  %arrayidx407 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast37130.lcssa, !dbg !4162
  %33 = load i32, i32* %arrayidx407, align 4, !dbg !4162
  %cmp408 = icmp eq i32 %33, 3, !dbg !4162
  br i1 %cmp408, label %if.then410, label %if.else434, !dbg !4164

if.then410:                                       ; preds = %while.end401
  %arrayidx417 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast37130.lcssa, i64 13, !dbg !4165
  %34 = load i8, i8* %arrayidx417, align 1, !dbg !4165
  %tobool418 = icmp eq i8 %34, 0, !dbg !4165
  br i1 %tobool418, label %if.else429, label %if.then419, !dbg !4168

if.then419:                                       ; preds = %if.then410
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %base323.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4169
  %35 = bitcast i24* %weak_flag to i32*, !dbg !4169
  %bf.load420 = load i32, i32* %35, align 8, !dbg !4169
  %bf.load424 = load i32, i32* %16, align 8, !dbg !4170
  %36 = shl i32 %bf.load420, 18, !dbg !4170
  %.not = and i32 %36, 33554432, !dbg !4170
  %bf.clear427 = and i32 %bf.load424, -33554433, !dbg !4170
  %37 = or i32 %.not, %bf.clear427, !dbg !4170
  %bf.set428 = xor i32 %37, 33554432, !dbg !4170
  store i32 %bf.set428, i32* %16, align 8, !dbg !4170
  br label %if.end445, !dbg !4171

if.else429:                                       ; preds = %if.then410
  %bf.load430 = load i32, i32* %16, align 8, !dbg !4172
  %bf.set432 = or i32 %bf.load430, 33554432, !dbg !4172
  store i32 %bf.set432, i32* %16, align 8, !dbg !4172
  br label %if.end445

if.else434:                                       ; preds = %while.end401
  %bf.load440 = load i32, i32* %16, align 8, !dbg !4173
  %38 = trunc i64 %bf.load403.lcssa to i32, !dbg !4173
  %bf.shl442 = and i32 %38, 33554432, !dbg !4173
  %bf.clear443 = and i32 %bf.load440, -33554433, !dbg !4173
  %bf.set444 = or i32 %bf.clear443, %bf.shl442, !dbg !4173
  store i32 %bf.set444, i32* %16, align 8, !dbg !4173
  br label %if.end445

if.end445:                                        ; preds = %if.then419, %if.else429, %if.else434
  %call446 = tail call %union.tree_node* @get_base_address(%union.tree_node* %base323.0.lcssa) #7, !dbg !4174
  call void @llvm.dbg.value(metadata %union.tree_node* %call446, metadata !4043, metadata !DIExpression()), !dbg !4137
  %tobool447 = icmp eq %union.tree_node* %call446, null, !dbg !4175
  br i1 %tobool447, label %if.end501, label %land.lhs.true448, !dbg !4176

land.lhs.true448:                                 ; preds = %if.end445
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4177
  %bf.load450 = load i64, i64* %39, align 8, !dbg !4177
  %bf.cast452 = and i64 %bf.load450, 65535, !dbg !4177
  %arrayidx454 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast452, !dbg !4177
  %40 = load i32, i32* %arrayidx454, align 4, !dbg !4177
  %cmp455 = icmp eq i32 %40, 3, !dbg !4177
  br i1 %cmp455, label %land.lhs.true457, label %if.end501, !dbg !4178

land.lhs.true457:                                 ; preds = %land.lhs.true448
  %bf.cast46256 = and i64 %bf.load450, 1048576, !dbg !4179
  %tobool463 = icmp eq i64 %bf.cast46256, 0, !dbg !4179
  br i1 %tobool463, label %if.end501, label %land.lhs.true464, !dbg !4180

land.lhs.true464:                                 ; preds = %land.lhs.true457
  %bf.cast46957 = and i64 %bf.load450, 67108864, !dbg !4181
  %tobool470 = icmp eq i64 %bf.cast46957, 0, !dbg !4181
  br i1 %tobool470, label %lor.lhs.false471, label %if.then477, !dbg !4182

lor.lhs.false471:                                 ; preds = %land.lhs.true464
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4183
  %41 = bitcast i40* %decl_flag_1 to i64*, !dbg !4183
  %bf.load472 = load i64, i64* %41, align 8, !dbg !4183
  %bf.cast47558 = and i64 %bf.load472, 33554432, !dbg !4183
  %tobool476 = icmp eq i64 %bf.cast47558, 0, !dbg !4183
  br i1 %tobool476, label %if.end501, label %if.then477, !dbg !4184

if.then477:                                       ; preds = %lor.lhs.false471, %land.lhs.true464
  %type479 = getelementptr inbounds %union.tree_node, %union.tree_node* %call446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4185
  %42 = load %union.tree_node*, %union.tree_node** %type479, align 8, !dbg !4185
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !4047, metadata !DIExpression()), !dbg !4186
  %tobool480 = icmp eq %union.tree_node* %42, null, !dbg !4187
  br i1 %tobool480, label %cond.end496, label %land.lhs.true481, !dbg !4187

land.lhs.true481:                                 ; preds = %if.then477
  %type482 = bitcast %union.tree_node* %42 to %struct.tree_type*, !dbg !4187
  %needs_constructing_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type482, i64 0, i32 6, !dbg !4187
  %bf.load483 = load i32, i32* %needs_constructing_flag, align 4, !dbg !4187
  %bf.clear485 = and i32 %bf.load483, 2048, !dbg !4187
  %tobool486 = icmp eq i32 %bf.clear485, 0, !dbg !4187
  br i1 %tobool486, label %cond.end496, label %lor.lhs.false487, !dbg !4187

lor.lhs.false487:                                 ; preds = %land.lhs.true481
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4187
  %43 = bitcast i40* %artificial_flag to i64*, !dbg !4187
  %bf.load489 = load i64, i64* %43, align 8, !dbg !4187
  %bf.cast49259 = and i64 %bf.load489, 4096, !dbg !4187
  %tobool493 = icmp eq i64 %bf.cast49259, 0, !dbg !4187
  br i1 %tobool493, label %cond.true494, label %cond.end496, !dbg !4187

cond.true494:                                     ; preds = %lor.lhs.false487
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4187
  br label %cond.end496, !dbg !4187

cond.end496:                                      ; preds = %lor.lhs.false487, %land.lhs.true481, %if.then477, %cond.true494
  %bf.load498 = load i32, i32* %16, align 8, !dbg !4188
  %bf.set500 = or i32 %bf.load498, 67108864, !dbg !4188
  store i32 %bf.set500, i32* %16, align 8, !dbg !4188
  br label %if.end501, !dbg !4189

if.end501:                                        ; preds = %lor.lhs.false471, %land.lhs.true457, %if.end445, %cond.end496, %land.lhs.true448
  %call502 = tail call zeroext i8 @component_uses_parent_alias_set(%union.tree_node* %t.addr.0.lcssa) #7, !dbg !4190
  %tobool503 = icmp eq i8 %call502, 0, !dbg !4190
  br i1 %tobool503, label %if.end508, label %if.then504, !dbg !4192

if.then504:                                       ; preds = %if.end501
  %bf.load505 = load i32, i32* %16, align 8, !dbg !4193
  %bf.set507 = or i32 %bf.load505, 16777216, !dbg !4193
  store i32 %bf.set507, i32* %16, align 8, !dbg !4193
  br label %if.end508, !dbg !4194

if.end508:                                        ; preds = %if.end501, %if.then504
  %bf.load510 = load i64, i64* %.lcssa69, align 8, !dbg !4195
  %bf.cast512 = and i64 %bf.load510, 65535, !dbg !4195
  %arrayidx514 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast512, !dbg !4195
  %44 = load i32, i32* %arrayidx514, align 4, !dbg !4195
  %cmp515 = icmp eq i32 %44, 3, !dbg !4195
  br i1 %cmp515, label %if.then517, label %if.else536, !dbg !4196

if.then517:                                       ; preds = %if.end508
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4037, metadata !DIExpression()), !dbg !4070
  %45 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !4041, metadata !DIExpression()), !dbg !4070
  %size_unit519 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4199
  %46 = load %union.tree_node*, %union.tree_node** %size_unit519, align 8, !dbg !4199
  %tobool520 = icmp eq %union.tree_node* %46, null, !dbg !4199
  br i1 %tobool520, label %cond.end532, label %land.lhs.true521, !dbg !4200

land.lhs.true521:                                 ; preds = %if.then517
  %call524 = tail call i32 @host_integerp(%union.tree_node* nonnull %46, i32 1) #7, !dbg !4201
  %tobool525 = icmp eq i32 %call524, 0, !dbg !4201
  br i1 %tobool525, label %cond.end532, label %cond.true526, !dbg !4199

cond.true526:                                     ; preds = %land.lhs.true521
  %47 = load %union.tree_node*, %union.tree_node** %size_unit519, align 8, !dbg !4202
  %call529 = tail call i64 @tree_low_cst(%union.tree_node* %47, i32 1) #7, !dbg !4202
  %call530 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call529) #8, !dbg !4202
  br label %cond.end532, !dbg !4199

cond.end532:                                      ; preds = %land.lhs.true521, %if.then517, %cond.true526
  %cond533 = phi %struct.rtx_def* [ %call530, %cond.true526 ], [ null, %land.lhs.true521 ], [ null, %if.then517 ], !dbg !4199
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond533, metadata !4039, metadata !DIExpression()), !dbg !4070
  %align535 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4203
  %48 = load i32, i32* %align535, align 8, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %48, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8 1, metadata !4046, metadata !DIExpression()), !dbg !4137
  br label %if.end716, !dbg !4204

if.else536:                                       ; preds = %if.end508
  %cmp543 = icmp eq i32 %44, 1, !dbg !4205
  br i1 %cmp543, label %if.then545, label %if.else549, !dbg !4206

if.then545:                                       ; preds = %if.else536
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4207
  %50 = load i32, i32* %49, align 8, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %50, metadata !4040, metadata !DIExpression()), !dbg !4070
  %call548 = tail call i32 @ix86_constant_alignment(%union.tree_node* %t.addr.0.lcssa, i32 %50) #7, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %call548, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8 1, metadata !4046, metadata !DIExpression()), !dbg !4137
  br label %if.end716, !dbg !4210

if.else549:                                       ; preds = %if.else536
  %cmp554 = icmp eq i64 %bf.cast512, 41, !dbg !4211
  br i1 %cmp554, label %land.lhs.true556, label %if.else568, !dbg !4212

land.lhs.true556:                                 ; preds = %if.else549
  %operands558 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4213
  %arrayidx559 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands558, i64 1, !dbg !4213
  %51 = bitcast %union.tree_node** %arrayidx559 to %struct.tree_decl_common**, !dbg !4213
  %52 = load %struct.tree_decl_common*, %struct.tree_decl_common** %51, align 8, !dbg !4213
  %decl_flag_1561 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %52, i64 0, i32 2, !dbg !4213
  %53 = bitcast i40* %decl_flag_1561 to i64*, !dbg !4213
  %bf.load562 = load i64, i64* %53, align 8, !dbg !4213
  %bf.cast56555 = and i64 %bf.load562, 33554432, !dbg !4213
  %tobool566 = icmp eq i64 %bf.cast56555, 0, !dbg !4213
  br i1 %tobool566, label %if.then567, label %if.else568, !dbg !4214

if.then567:                                       ; preds = %land.lhs.true556
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4037, metadata !DIExpression()), !dbg !4070
  %54 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %54, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !4041, metadata !DIExpression()), !dbg !4070
  br label %if.end716, !dbg !4217

if.else568:                                       ; preds = %land.lhs.true556, %if.else549
  %cmp573 = icmp eq i64 %bf.cast512, 45, !dbg !4218
  br i1 %cmp573, label %if.then575, label %if.else677, !dbg !4219

if.then575:                                       ; preds = %if.else568
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !4220
  call void @llvm.dbg.value(metadata %union.tree_node* %55, metadata !4050, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0.lcssa, metadata !4056, metadata !DIExpression()), !dbg !4221
  br label %do.body, !dbg !4222

do.body:                                          ; preds = %if.end587, %if.then575
  %off_tree.0 = phi %union.tree_node* [ %55, %if.then575 ], [ %call590, %if.end587 ], !dbg !4221
  %t2.0 = phi %union.tree_node* [ %t.addr.0.lcssa, %if.then575 ], [ %59, %if.end587 ], !dbg !4221
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !4056, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata %union.tree_node* %off_tree.0, metadata !4050, metadata !DIExpression()), !dbg !4221
  %operands577 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4223
  %arrayidx578 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands577, i64 1, !dbg !4223
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx578, align 8, !dbg !4223
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !4057, metadata !DIExpression()), !dbg !4224
  %call579 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %t2.0) #7, !dbg !4225
  call void @llvm.dbg.value(metadata %union.tree_node* %call579, metadata !4059, metadata !DIExpression()), !dbg !4224
  %call580 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %t2.0) #7, !dbg !4226
  call void @llvm.dbg.value(metadata %union.tree_node* %call580, metadata !4060, metadata !DIExpression()), !dbg !4224
  %call581 = tail call i32 @integer_zerop(%union.tree_node* %call579) #7, !dbg !4227
  %tobool582 = icmp eq i32 %call581, 0, !dbg !4227
  br i1 %tobool582, label %if.then583, label %if.end587, !dbg !4229

if.then583:                                       ; preds = %do.body
  %type585 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4230
  %57 = load %union.tree_node*, %union.tree_node** %type585, align 8, !dbg !4230
  %call586 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %57, %union.tree_node* %56, %union.tree_node* %call579) #7, !dbg !4230
  call void @llvm.dbg.value(metadata %union.tree_node* %call586, metadata !4057, metadata !DIExpression()), !dbg !4224
  br label %if.end587, !dbg !4231

if.end587:                                        ; preds = %do.body, %if.then583
  %index.0 = phi %union.tree_node* [ %56, %do.body ], [ %call586, %if.then583 ], !dbg !4224
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !4057, metadata !DIExpression()), !dbg !4224
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4232
  %call588 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %58, %union.tree_node* %index.0) #7, !dbg !4232
  %call589 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %call588, %union.tree_node* %call580) #7, !dbg !4232
  %call590 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call589, %union.tree_node* %off_tree.0) #7, !dbg !4232
  call void @llvm.dbg.value(metadata %union.tree_node* %call590, metadata !4050, metadata !DIExpression()), !dbg !4221
  %59 = load %union.tree_node*, %union.tree_node** %operands577, align 8, !dbg !4233
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !4056, metadata !DIExpression()), !dbg !4221
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4234
  %bf.load595 = load i64, i64* %60, align 8, !dbg !4234
  %bf.cast59749 = and i64 %bf.load595, 65535, !dbg !4235
  %cmp598 = icmp eq i64 %bf.cast59749, 45, !dbg !4235
  br i1 %cmp598, label %do.body, label %do.end, !dbg !4236, !llvm.loop !4237

do.end:                                           ; preds = %if.end587
  %call590.lcssa = phi %union.tree_node* [ %call590, %if.end587 ], !dbg !4232
  %.lcssa = phi %union.tree_node* [ %59, %if.end587 ], !dbg !4233
  %bf.cast59749.lcssa = phi i64 [ %bf.cast59749, %if.end587 ], !dbg !4235
  %arrayidx605 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast59749.lcssa, !dbg !4239
  %61 = load i32, i32* %arrayidx605, align 4, !dbg !4239
  %cmp606 = icmp eq i32 %61, 3, !dbg !4239
  br i1 %cmp606, label %if.then608, label %if.else625, !dbg !4240

if.then608:                                       ; preds = %do.end
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !4037, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4038, metadata !DIExpression()), !dbg !4070
  %call609 = tail call i32 @host_integerp(%union.tree_node* %call590.lcssa, i32 1) #7, !dbg !4241
  %tobool610 = icmp eq i32 %call609, 0, !dbg !4241
  br i1 %tobool610, label %if.end716, label %if.then611, !dbg !4242

if.then611:                                       ; preds = %if.then608
  %call612 = tail call i64 @tree_low_cst(%union.tree_node* %call590.lcssa, i32 1) #7, !dbg !4243
  call void @llvm.dbg.value(metadata i64 %call612, metadata !4061, metadata !DIExpression()), !dbg !4244
  %sub = sub nsw i64 0, %call612, !dbg !4245
  %and = and i64 %call612, %sub, !dbg !4246
  %mul = shl nsw i64 %and, 3, !dbg !4247
  call void @llvm.dbg.value(metadata i64 %mul, metadata !4066, metadata !DIExpression()), !dbg !4244
  %align614 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4248
  %62 = load i32, i32* %align614, align 8, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %62, metadata !4040, metadata !DIExpression()), !dbg !4070
  %tobool615 = icmp ne i64 %and, 0, !dbg !4249
  %conv617 = zext i32 %62 to i64, !dbg !4251
  %cmp618 = icmp ult i64 %mul, %conv617, !dbg !4252
  %or.cond = and i1 %tobool615, %cmp618, !dbg !4253
  %conv621 = trunc i64 %mul to i32, !dbg !4253
  %align.3 = select i1 %or.cond, i32 %conv621, i32 %62, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %align.3, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8 1, metadata !4046, metadata !DIExpression()), !dbg !4137
  %call623 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call612) #8, !dbg !4254
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call623, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !4041, metadata !DIExpression()), !dbg !4070
  br label %if.end716, !dbg !4255

if.else625:                                       ; preds = %do.end
  %cmp630 = icmp eq i64 %bf.cast59749.lcssa, 41, !dbg !4256
  br i1 %cmp630, label %if.then632, label %if.else639, !dbg !4258

if.then632:                                       ; preds = %if.else625
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !4037, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4038, metadata !DIExpression()), !dbg !4070
  %call633 = tail call i32 @host_integerp(%union.tree_node* %call590.lcssa, i32 1) #7, !dbg !4259
  %tobool634 = icmp eq i32 %call633, 0, !dbg !4259
  br i1 %tobool634, label %if.end716, label %if.then635, !dbg !4262

if.then635:                                       ; preds = %if.then632
  %call636 = tail call i64 @tree_low_cst(%union.tree_node* %call590.lcssa, i32 1) #7, !dbg !4263
  %call637 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call636) #8, !dbg !4263
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call637, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !4041, metadata !DIExpression()), !dbg !4070
  br label %if.end716, !dbg !4265

if.else639:                                       ; preds = %if.else625
  %63 = load i32, i32* @flag_argument_noalias, align 4, !dbg !4266
  %cmp640 = icmp sgt i32 %63, 1, !dbg !4268
  br i1 %cmp640, label %land.lhs.true642, label %if.end716, !dbg !4269

land.lhs.true642:                                 ; preds = %if.else639
  %cmp647 = icmp eq i64 %bf.cast59749.lcssa, 47, !dbg !4270
  br i1 %cmp647, label %land.lhs.true663, label %lor.lhs.false649, !dbg !4270

lor.lhs.false649:                                 ; preds = %land.lhs.true642
  %cmp654 = icmp eq i64 %bf.cast59749.lcssa, 48, !dbg !4270
  br i1 %cmp654, label %land.lhs.true663, label %lor.lhs.false656, !dbg !4270

lor.lhs.false656:                                 ; preds = %lor.lhs.false649
  %cmp661 = icmp eq i64 %bf.cast59749.lcssa, 49, !dbg !4270
  br i1 %cmp661, label %land.lhs.true663, label %if.end716, !dbg !4271

land.lhs.true663:                                 ; preds = %lor.lhs.false656, %lor.lhs.false649, %land.lhs.true642
  %operands665 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4272
  %64 = bitcast %union.tree_node** %operands665 to i64**, !dbg !4272
  %65 = load i64*, i64** %64, align 8, !dbg !4272
  %bf.load668 = load i64, i64* %65, align 8, !dbg !4272
  %bf.cast67054 = and i64 %bf.load668, 65535, !dbg !4273
  %cmp671 = icmp eq i64 %bf.cast67054, 34, !dbg !4273
  %spec.select = select i1 %cmp671, %struct.rtx_def* null, %struct.rtx_def* %cond33, !dbg !4274
  %spec.select5 = select i1 %cmp671, %union.tree_node* %.lcssa, %union.tree_node* %cond19, !dbg !4274
  br label %if.end716, !dbg !4274

if.else677:                                       ; preds = %if.else568
  %66 = load i32, i32* @flag_argument_noalias, align 4, !dbg !4275
  %cmp678 = icmp sgt i32 %66, 1, !dbg !4277
  br i1 %cmp678, label %land.lhs.true680, label %if.end716, !dbg !4278

land.lhs.true680:                                 ; preds = %if.else677
  %cmp685 = icmp eq i64 %bf.cast512, 47, !dbg !4279
  br i1 %cmp685, label %land.lhs.true701, label %lor.lhs.false687, !dbg !4279

lor.lhs.false687:                                 ; preds = %land.lhs.true680
  %cmp692 = icmp eq i64 %bf.cast512, 48, !dbg !4279
  br i1 %cmp692, label %land.lhs.true701, label %lor.lhs.false694, !dbg !4279

lor.lhs.false694:                                 ; preds = %lor.lhs.false687
  %cmp699 = icmp eq i64 %bf.cast512, 49, !dbg !4279
  br i1 %cmp699, label %land.lhs.true701, label %if.end716, !dbg !4280

land.lhs.true701:                                 ; preds = %lor.lhs.false694, %lor.lhs.false687, %land.lhs.true680
  %operands703 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4281
  %67 = bitcast %union.tree_node** %operands703 to i64**, !dbg !4281
  %68 = load i64*, i64** %67, align 8, !dbg !4281
  %bf.load706 = load i64, i64* %68, align 8, !dbg !4281
  %bf.cast70848 = and i64 %bf.load706, 65535, !dbg !4282
  %cmp709 = icmp eq i64 %bf.cast70848, 34, !dbg !4282
  %spec.select6 = select i1 %cmp709, %struct.rtx_def* null, %struct.rtx_def* %cond33, !dbg !4283
  %spec.select7 = select i1 %cmp709, %union.tree_node* %t.addr.0.lcssa, %union.tree_node* %cond19, !dbg !4283
  br label %if.end716, !dbg !4283

if.end716:                                        ; preds = %if.then608, %if.then632, %land.lhs.true701, %land.lhs.true663, %if.then545, %if.then635, %lor.lhs.false656, %if.else639, %if.then611, %lor.lhs.false694, %if.else677, %if.then567, %cond.end532
  %align_computed.5 = phi i1 [ true, %cond.end532 ], [ true, %if.then545 ], [ false, %if.then567 ], [ true, %if.then611 ], [ false, %if.then608 ], [ false, %if.else639 ], [ false, %lor.lhs.false656 ], [ false, %land.lhs.true663 ], [ false, %if.then632 ], [ false, %if.then635 ], [ false, %land.lhs.true701 ], [ false, %lor.lhs.false694 ], [ false, %if.else677 ]
  %apply_bitpos.7 = phi i64 [ %bitpos, %cond.end532 ], [ 0, %if.then545 ], [ %bitpos, %if.then567 ], [ %bitpos, %if.then611 ], [ 0, %if.then608 ], [ 0, %if.else639 ], [ 0, %lor.lhs.false656 ], [ 0, %land.lhs.true663 ], [ 0, %if.then632 ], [ %bitpos, %if.then635 ], [ 0, %land.lhs.true701 ], [ 0, %lor.lhs.false694 ], [ 0, %if.else677 ], !dbg !4070
  %align.9 = phi i32 [ %48, %cond.end532 ], [ %call548, %if.then545 ], [ %align.2, %if.then567 ], [ %align.3, %if.then611 ], [ %align.2, %if.then608 ], [ %align.2, %if.else639 ], [ %align.2, %lor.lhs.false656 ], [ %align.2, %land.lhs.true663 ], [ %align.2, %if.then632 ], [ %align.2, %if.then635 ], [ %align.2, %land.lhs.true701 ], [ %align.2, %lor.lhs.false694 ], [ %align.2, %if.else677 ], !dbg !4284
  %size.1 = phi %struct.rtx_def* [ %cond533, %cond.end532 ], [ %size.0, %if.then545 ], [ %size.0, %if.then567 ], [ %size.0, %if.then611 ], [ %size.0, %if.then608 ], [ %size.0, %if.else639 ], [ %size.0, %lor.lhs.false656 ], [ %size.0, %land.lhs.true663 ], [ %size.0, %if.then632 ], [ %size.0, %if.then635 ], [ %size.0, %land.lhs.true701 ], [ %size.0, %lor.lhs.false694 ], [ %size.0, %if.else677 ], !dbg !4070
  %offset.9 = phi %struct.rtx_def* [ %45, %cond.end532 ], [ %cond33, %if.then545 ], [ %54, %if.then567 ], [ %call623, %if.then611 ], [ null, %if.then608 ], [ %cond33, %if.else639 ], [ %cond33, %lor.lhs.false656 ], [ %spec.select, %land.lhs.true663 ], [ null, %if.then632 ], [ %call637, %if.then635 ], [ %spec.select6, %land.lhs.true701 ], [ %cond33, %lor.lhs.false694 ], [ %cond33, %if.else677 ], !dbg !4070
  %expr.7 = phi %union.tree_node* [ %t.addr.0.lcssa, %cond.end532 ], [ %cond19, %if.then545 ], [ %t.addr.0.lcssa, %if.then567 ], [ %.lcssa, %if.then611 ], [ %.lcssa, %if.then608 ], [ %cond19, %if.else639 ], [ %cond19, %lor.lhs.false656 ], [ %spec.select5, %land.lhs.true663 ], [ %.lcssa, %if.then632 ], [ %.lcssa, %if.then635 ], [ %spec.select7, %land.lhs.true701 ], [ %cond19, %lor.lhs.false694 ], [ %cond19, %if.else677 ], !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.7, metadata !4037, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset.9, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.1, metadata !4039, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %align.9, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %apply_bitpos.7, metadata !4041, metadata !DIExpression()), !dbg !4070
  br i1 %align_computed.5, label %if.end752, label %land.lhs.true718, !dbg !4285

land.lhs.true718:                                 ; preds = %if.end716
  %bf.load720 = load i64, i64* %.lcssa69, align 8, !dbg !4286
  %bf.cast72237 = and i64 %bf.load720, 65535, !dbg !4286
  %cmp723 = icmp eq i64 %bf.cast72237, 47, !dbg !4286
  br i1 %cmp723, label %if.end752, label %lor.lhs.false725, !dbg !4286

lor.lhs.false725:                                 ; preds = %land.lhs.true718
  %cmp730 = icmp eq i64 %bf.cast72237, 48, !dbg !4286
  br i1 %cmp730, label %if.end752, label %lor.lhs.false732, !dbg !4286

lor.lhs.false732:                                 ; preds = %lor.lhs.false725
  %cmp737 = icmp eq i64 %bf.cast72237, 49, !dbg !4286
  br i1 %cmp737, label %if.end752, label %if.then739, !dbg !4287

if.then739:                                       ; preds = %lor.lhs.false732
  %69 = load i32, i32* @ix86_isa_flags, align 4, !dbg !4288
  %and740 = and i32 %69, 32, !dbg !4288
  %cmp741 = icmp eq i32 %and740, 0, !dbg !4288
  %cond743 = select i1 %cmp741, i32 128, i32 256, !dbg !4288
  %call744 = tail call i32 @get_object_alignment(%union.tree_node* %t.addr.0.lcssa, i32 %align.9, i32 %cond743) #7, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %call744, metadata !4067, metadata !DIExpression()), !dbg !4290
  %cmp745 = icmp ugt i32 %align.9, %call744, !dbg !4291
  %align.9.call744 = select i1 %cmp745, i32 %align.9, i32 %call744, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %align.9.call744, metadata !4040, metadata !DIExpression()), !dbg !4070
  br label %if.end752, !dbg !4292

if.end752:                                        ; preds = %if.end716, %land.lhs.true718, %lor.lhs.false725, %lor.lhs.false732, %if.then739, %if.end313
  %apply_bitpos.8 = phi i64 [ 0, %if.end313 ], [ %apply_bitpos.7, %if.then739 ], [ %apply_bitpos.7, %lor.lhs.false732 ], [ %apply_bitpos.7, %lor.lhs.false725 ], [ %apply_bitpos.7, %land.lhs.true718 ], [ %apply_bitpos.7, %if.end716 ], !dbg !4070
  %align.11 = phi i32 [ %align.2, %if.end313 ], [ %align.9.call744, %if.then739 ], [ %align.9, %lor.lhs.false732 ], [ %align.9, %lor.lhs.false725 ], [ %align.9, %land.lhs.true718 ], [ %align.9, %if.end716 ], !dbg !4070
  %size.2 = phi %struct.rtx_def* [ %size.0, %if.end313 ], [ %size.1, %if.then739 ], [ %size.1, %lor.lhs.false732 ], [ %size.1, %lor.lhs.false725 ], [ %size.1, %land.lhs.true718 ], [ %size.1, %if.end716 ], !dbg !4070
  %offset.10 = phi %struct.rtx_def* [ %cond33, %if.end313 ], [ %offset.9, %if.then739 ], [ %offset.9, %lor.lhs.false732 ], [ %offset.9, %lor.lhs.false725 ], [ %offset.9, %land.lhs.true718 ], [ %offset.9, %if.end716 ], !dbg !4070
  %expr.8 = phi %union.tree_node* [ %cond19, %if.end313 ], [ %expr.7, %if.then739 ], [ %expr.7, %lor.lhs.false732 ], [ %expr.7, %lor.lhs.false725 ], [ %expr.7, %land.lhs.true718 ], [ %expr.7, %if.end716 ], !dbg !4070
  %t.addr.1 = phi %union.tree_node* [ %t, %if.end313 ], [ %t.addr.0.lcssa, %if.then739 ], [ %t.addr.0.lcssa, %lor.lhs.false732 ], [ %t.addr.0.lcssa, %lor.lhs.false725 ], [ %t.addr.0.lcssa, %land.lhs.true718 ], [ %t.addr.0.lcssa, %if.end716 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1, metadata !4033, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.8, metadata !4037, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset.10, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.2, metadata !4039, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %align.11, metadata !4040, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i64 %apply_bitpos.8, metadata !4041, metadata !DIExpression()), !dbg !4070
  %tobool753 = icmp eq i64 %apply_bitpos.8, 0, !dbg !4293
  br i1 %tobool753, label %if.end762, label %if.then754, !dbg !4295

if.then754:                                       ; preds = %if.end752
  %div = sdiv i64 %apply_bitpos.8, 8, !dbg !4296
  %sub755 = sub nsw i64 0, %div, !dbg !4298
  %call756 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %offset.10, i64 %sub755) #7, !dbg !4299
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call756, metadata !4038, metadata !DIExpression()), !dbg !4070
  %tobool757 = icmp eq %struct.rtx_def* %size.2, null, !dbg !4300
  br i1 %tobool757, label %if.end762, label %if.then758, !dbg !4302

if.then758:                                       ; preds = %if.then754
  %call760 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %size.2, i64 %div) #7, !dbg !4303
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call760, metadata !4039, metadata !DIExpression()), !dbg !4070
  br label %if.end762, !dbg !4304

if.end762:                                        ; preds = %if.then754, %if.end752, %if.then758
  %size.4 = phi %struct.rtx_def* [ %size.2, %if.end752 ], [ %call760, %if.then758 ], [ null, %if.then754 ], !dbg !4070
  %offset.11 = phi %struct.rtx_def* [ %offset.10, %if.end752 ], [ %call756, %if.then758 ], [ %call756, %if.then754 ], !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset.11, metadata !4038, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.4, metadata !4039, metadata !DIExpression()), !dbg !4070
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4305
  %bf.load764 = load i64, i64* %70, align 8, !dbg !4305
  %bf.cast76640 = and i64 %bf.load764, 65535, !dbg !4307
  %cmp767 = icmp eq i64 %bf.cast76640, 48, !dbg !4307
  %spec.select8 = select i1 %cmp767, %struct.rtx_def* null, %struct.rtx_def* %offset.11, !dbg !4308
  %spec.select9 = select i1 %cmp767, %union.tree_node* null, %union.tree_node* %expr.8, !dbg !4308
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select9, metadata !4037, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select8, metadata !4038, metadata !DIExpression()), !dbg !4070
  %bf.load772 = load i64, i64* %15, align 8, !dbg !4309
  %bf.lshr773 = lshr i64 %bf.load772, 56, !dbg !4309
  %conv775 = trunc i64 %bf.lshr773 to i8, !dbg !4309
  %bf.load776 = load i32, i32* %16, align 8, !dbg !4310
  %bf.lshr777 = lshr i32 %bf.load776, 16, !dbg !4310
  %bf.clear778 = and i32 %bf.lshr777, 255, !dbg !4310
  %call779 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %call129, %union.tree_node* %spec.select9, %struct.rtx_def* %spec.select8, %struct.rtx_def* %size.4, i32 %align.11, i8 zeroext %conv775, i32 %bf.clear778) #8, !dbg !4311
  store %struct.mem_attrs* %call779, %struct.mem_attrs** %rt_mem, align 8, !dbg !4312
  %bf.load784 = load i32, i32* %16, align 8, !dbg !4313
  %bf.clear786 = and i32 %bf.load784, 268435456, !dbg !4313
  %tobool787 = icmp eq i32 %bf.clear786, 0, !dbg !4313
  br i1 %tobool787, label %lor.lhs.false788, label %cleanup.cont, !dbg !4315

lor.lhs.false788:                                 ; preds = %if.end762
  %tobool791 = icmp slt i32 %bf.load784, 0, !dbg !4316
  br i1 %tobool791, label %cleanup.cont, label %if.else793, !dbg !4317

if.else793:                                       ; preds = %lor.lhs.false788
  %bf.load795 = load i64, i64* %70, align 8, !dbg !4318
  %bf.cast79741 = and i64 %bf.load795, 65535, !dbg !4320
  %cmp798 = icmp eq i64 %bf.cast79741, 41, !dbg !4320
  br i1 %cmp798, label %if.then821, label %lor.lhs.false800, !dbg !4321

lor.lhs.false800:                                 ; preds = %if.else793
  %cmp805 = icmp eq i64 %bf.cast79741, 45, !dbg !4322
  br i1 %cmp805, label %if.then821, label %lor.lhs.false807, !dbg !4323

lor.lhs.false807:                                 ; preds = %lor.lhs.false800
  %cmp812 = icmp eq i64 %bf.cast79741, 46, !dbg !4324
  br i1 %cmp812, label %if.then821, label %lor.lhs.false814, !dbg !4325

lor.lhs.false814:                                 ; preds = %lor.lhs.false807
  %cmp819 = icmp eq i64 %bf.cast79741, 42, !dbg !4326
  br i1 %cmp819, label %if.then821, label %cleanup.cont, !dbg !4327

if.then821:                                       ; preds = %lor.lhs.false814, %lor.lhs.false807, %lor.lhs.false800, %if.else793
  %bf.set824 = or i32 %bf.load784, 268435456, !dbg !4328
  store i32 %bf.set824, i32* %16, align 8, !dbg !4328
  br label %cleanup.cont, !dbg !4329

cleanup.cont:                                     ; preds = %if.end762, %cond.end71, %cond.end84, %lor.lhs.false788, %lor.lhs.false814, %if.then821
  ret void, !dbg !4330
}

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @component_uses_parent_alias_set(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @ix86_constant_alignment(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_element_size(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @get_object_alignment(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.mem_attrs* @get_mem_attrs(i32 %alias, %union.tree_node* %expr, %struct.rtx_def* %offset, %struct.rtx_def* %size, i32 %align, i8 zeroext %addrspace, i32 %mode) unnamed_addr #5 !dbg !4331 {
entry:
  %attrs = alloca %struct.mem_attrs, align 8
  call void @llvm.dbg.value(metadata i32 %alias, metadata !4335, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4336, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset, metadata !4337, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !4338, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %align, metadata !4339, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 %addrspace, metadata !4340, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4341, metadata !DIExpression()), !dbg !4344
  %0 = bitcast %struct.mem_attrs* %attrs to i8*, !dbg !4345
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #6, !dbg !4345
  %cmp = icmp eq i32 %alias, 0, !dbg !4346
  %cmp1 = icmp eq %union.tree_node* %expr, null, !dbg !4348
  %or.cond = and i1 %cmp, %cmp1, !dbg !4349
  %cmp3 = icmp eq %struct.rtx_def* %offset, null, !dbg !4350
  %or.cond1 = and i1 %or.cond, %cmp3, !dbg !4349
  %cmp5 = icmp eq i8 %addrspace, 0, !dbg !4351
  %or.cond2 = and i1 %or.cond1, %cmp5, !dbg !4349
  br i1 %or.cond2, label %land.lhs.true7, label %if.end, !dbg !4349

land.lhs.true7:                                   ; preds = %entry
  %cmp8 = icmp eq %struct.rtx_def* %size, null, !dbg !4352
  br i1 %cmp8, label %cond.false, label %lor.lhs.false, !dbg !4353

lor.lhs.false:                                    ; preds = %land.lhs.true7
  %cmp10 = icmp eq i32 %mode, 1, !dbg !4354
  br i1 %cmp10, label %if.end, label %land.lhs.true12, !dbg !4355

land.lhs.true12:                                  ; preds = %lor.lhs.false
  %idxprom = zext i32 %mode to i64, !dbg !4356
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4356
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4356
  %conv14 = zext i8 %1 to i64, !dbg !4356
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !4357
  %arrayidx15 = bitcast %union.u* %u to i64*, !dbg !4357
  %2 = load i64, i64* %arrayidx15, align 8, !dbg !4357
  %cmp16 = icmp eq i64 %2, %conv14, !dbg !4358
  %cmp24 = icmp eq i32 %align, 8, !dbg !4359
  %or.cond3 = and i1 %cmp16, %cmp24, !dbg !4360
  br i1 %or.cond3, label %cleanup, label %if.end, !dbg !4360

cond.false:                                       ; preds = %land.lhs.true7
  %cmp24.old = icmp eq i32 %align, 8, !dbg !4359
  br i1 %cmp24.old, label %cleanup, label %if.end, !dbg !4361

if.end:                                           ; preds = %lor.lhs.false, %cond.false, %land.lhs.true12, %entry
  %alias26 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 3, !dbg !4362
  store i32 %alias, i32* %alias26, align 8, !dbg !4363
  %expr27 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 0, !dbg !4364
  store %union.tree_node* %expr, %union.tree_node** %expr27, align 8, !dbg !4365
  %offset28 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 1, !dbg !4366
  store %struct.rtx_def* %offset, %struct.rtx_def** %offset28, align 8, !dbg !4367
  %size29 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 2, !dbg !4368
  store %struct.rtx_def* %size, %struct.rtx_def** %size29, align 8, !dbg !4369
  %align30 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 4, !dbg !4370
  store i32 %align, i32* %align30, align 4, !dbg !4371
  %addrspace31 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %attrs, i64 0, i32 5, !dbg !4372
  store i8 %addrspace, i8* %addrspace31, align 8, !dbg !4373
  %3 = load %struct.htab*, %struct.htab** @mem_attrs_htab, align 8, !dbg !4374
  %call32 = call i8** @htab_find_slot(%struct.htab* %3, i8* nonnull %0, i32 1) #7, !dbg !4375
  call void @llvm.dbg.value(metadata i8** %call32, metadata !4343, metadata !DIExpression()), !dbg !4344
  %4 = load i8*, i8** %call32, align 8, !dbg !4376
  %cmp33 = icmp eq i8* %4, null, !dbg !4378
  br i1 %cmp33, label %if.then35, label %if.end.if.end38_crit_edge, !dbg !4379

if.end.if.end38_crit_edge:                        ; preds = %if.end
  %5 = bitcast i8* %4 to %struct.mem_attrs*, !dbg !4379
  br label %if.end38, !dbg !4379

if.then35:                                        ; preds = %if.end
  %call36 = call i8* @ggc_alloc_stat(i64 40) #7, !dbg !4380
  store i8* %call36, i8** %call32, align 8, !dbg !4382
  %call37 = call i8* @memcpy(i8* %call36, i8* nonnull %0, i64 40) #7, !dbg !4383
  %.phi.trans.insert = bitcast i8** %call32 to %struct.mem_attrs**, !dbg !4344
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %.phi.trans.insert, align 8, !dbg !4384
  br label %if.end38, !dbg !4385

if.end38:                                         ; preds = %if.end.if.end38_crit_edge, %if.then35
  %6 = phi %struct.mem_attrs* [ %.pre, %if.then35 ], [ %5, %if.end.if.end38_crit_edge ], !dbg !4384
  br label %cleanup, !dbg !4386

cleanup:                                          ; preds = %cond.false, %land.lhs.true12, %if.end38
  %retval.0 = phi %struct.mem_attrs* [ %6, %if.end38 ], [ null, %land.lhs.true12 ], [ null, %cond.false ], !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #6, !dbg !4387
  ret %struct.mem_attrs* %retval.0, !dbg !4387
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_attributes(%struct.rtx_def* %ref, %union.tree_node* %t, i32 %objectp) local_unnamed_addr #5 !dbg !4388 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ref, metadata !4392, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4393, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i32 %objectp, metadata !4394, metadata !DIExpression()), !dbg !4395
  tail call void @set_mem_attributes_minus_bitpos(%struct.rtx_def* %ref, %union.tree_node* %t, i32 %objectp, i64 0) #8, !dbg !4396
  ret void, !dbg !4397
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_addr_space(%struct.rtx_def* %mem, i8 zeroext %addrspace) local_unnamed_addr #5 !dbg !4398 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4402, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i8 %addrspace, metadata !4403, metadata !DIExpression()), !dbg !4404
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4405
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4405
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4405
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4405
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4405

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 3, !dbg !4405
  %2 = load i32, i32* %alias, align 8, !dbg !4405
  br label %cond.end, !dbg !4405

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %entry ], !dbg !4405
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !4406

cond.false11:                                     ; preds = %cond.end
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4406
  %3 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4406
  br label %cond.end16, !dbg !4406

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %union.tree_node* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !4406
  br i1 %cmp, label %cond.end29, label %cond.false24, !dbg !4407

cond.false24:                                     ; preds = %cond.end16
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4407
  %4 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !4407
  br label %cond.end29, !dbg !4407

cond.end29:                                       ; preds = %cond.end16, %cond.false24
  %cond30 = phi %struct.rtx_def* [ %4, %cond.false24 ], [ null, %cond.end16 ], !dbg !4407
  br i1 %cmp, label %cond.false41, label %cond.true36, !dbg !4408

cond.true36:                                      ; preds = %cond.end29
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !4408
  %5 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4408
  br label %cond.end52, !dbg !4408

cond.false41:                                     ; preds = %cond.end29
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4408
  %bf.load = load i32, i32* %6, align 8, !dbg !4408
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4408
  %cmp42 = icmp eq i32 %bf.clear, 65536, !dbg !4408
  br i1 %cmp42, label %cond.end52, label %cond.true43, !dbg !4408

cond.true43:                                      ; preds = %cond.false41
  %bf.lshr45 = lshr i32 %bf.load, 16, !dbg !4408
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !4408
  %idxprom = zext i32 %bf.clear46 to i64, !dbg !4408
  %arrayidx47 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4408
  %7 = load i8, i8* %arrayidx47, align 1, !dbg !4408
  %conv48 = zext i8 %7 to i64, !dbg !4408
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv48) #8, !dbg !4408
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4409
  br label %cond.end52, !dbg !4408

cond.end52:                                       ; preds = %cond.false41, %cond.true43, %cond.true36
  %8 = phi %struct.mem_attrs* [ %1, %cond.true36 ], [ %.pre, %cond.true43 ], [ null, %cond.false41 ], !dbg !4409
  %cond53 = phi %struct.rtx_def* [ %5, %cond.true36 ], [ %call, %cond.true43 ], [ null, %cond.false41 ], !dbg !4408
  %cmp58 = icmp eq %struct.mem_attrs* %8, null, !dbg !4409
  br i1 %cmp58, label %cond.end66, label %cond.true60, !dbg !4409

cond.true60:                                      ; preds = %cond.end52
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 4, !dbg !4409
  %9 = load i32, i32* %align, align 4, !dbg !4409
  br label %cond.end66, !dbg !4409

cond.end66:                                       ; preds = %cond.end52, %cond.true60
  %cond67 = phi i32 [ %9, %cond.true60 ], [ 8, %cond.end52 ], !dbg !4409
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4410
  %bf.load68 = load i32, i32* %10, align 8, !dbg !4410
  %bf.lshr69 = lshr i32 %bf.load68, 16, !dbg !4410
  %bf.clear70 = and i32 %bf.lshr69, 255, !dbg !4410
  %call71 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond, %union.tree_node* %cond17, %struct.rtx_def* %cond30, %struct.rtx_def* %cond53, i32 %cond67, i8 zeroext %addrspace, i32 %bf.clear70) #8, !dbg !4411
  store %struct.mem_attrs* %call71, %struct.mem_attrs** %rt_mem, align 8, !dbg !4412
  ret void, !dbg !4413
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_align(%struct.rtx_def* %mem, i32 %align) local_unnamed_addr #5 !dbg !4414 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4418, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i32 %align, metadata !4419, metadata !DIExpression()), !dbg !4420
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4421
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4421
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4421
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4421
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4421

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 3, !dbg !4421
  %2 = load i32, i32* %alias, align 8, !dbg !4421
  br label %cond.end, !dbg !4421

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %entry ], !dbg !4421
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !4422

cond.false11:                                     ; preds = %cond.end
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4422
  %3 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4422
  br label %cond.end16, !dbg !4422

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %union.tree_node* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !4422
  br i1 %cmp, label %cond.end29, label %cond.false24, !dbg !4423

cond.false24:                                     ; preds = %cond.end16
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4423
  %4 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !4423
  br label %cond.end29, !dbg !4423

cond.end29:                                       ; preds = %cond.end16, %cond.false24
  %cond30 = phi %struct.rtx_def* [ %4, %cond.false24 ], [ null, %cond.end16 ], !dbg !4423
  br i1 %cmp, label %cond.false41, label %cond.true36, !dbg !4424

cond.true36:                                      ; preds = %cond.end29
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !4424
  %5 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4424
  br label %cond.end52, !dbg !4424

cond.false41:                                     ; preds = %cond.end29
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4424
  %bf.load = load i32, i32* %6, align 8, !dbg !4424
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4424
  %cmp42 = icmp eq i32 %bf.clear, 65536, !dbg !4424
  br i1 %cmp42, label %cond.end52, label %cond.true43, !dbg !4424

cond.true43:                                      ; preds = %cond.false41
  %bf.lshr45 = lshr i32 %bf.load, 16, !dbg !4424
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !4424
  %idxprom = zext i32 %bf.clear46 to i64, !dbg !4424
  %arrayidx47 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4424
  %7 = load i8, i8* %arrayidx47, align 1, !dbg !4424
  %conv48 = zext i8 %7 to i64, !dbg !4424
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv48) #8, !dbg !4424
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4425
  br label %cond.end52, !dbg !4424

cond.end52:                                       ; preds = %cond.false41, %cond.true43, %cond.true36
  %8 = phi %struct.mem_attrs* [ %1, %cond.true36 ], [ %.pre, %cond.true43 ], [ null, %cond.false41 ], !dbg !4425
  %cond53 = phi %struct.rtx_def* [ %5, %cond.true36 ], [ %call, %cond.true43 ], [ null, %cond.false41 ], !dbg !4424
  %cmp58 = icmp eq %struct.mem_attrs* %8, null, !dbg !4425
  br i1 %cmp58, label %cond.end67, label %cond.false61, !dbg !4425

cond.false61:                                     ; preds = %cond.end52
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 5, !dbg !4425
  %9 = load i8, i8* %addrspace, align 8, !dbg !4425
  br label %cond.end67, !dbg !4425

cond.end67:                                       ; preds = %cond.end52, %cond.false61
  %cond68 = phi i8 [ %9, %cond.false61 ], [ 0, %cond.end52 ]
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4426
  %bf.load70 = load i32, i32* %10, align 8, !dbg !4426
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !4426
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !4426
  %call73 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond, %union.tree_node* %cond17, %struct.rtx_def* %cond30, %struct.rtx_def* %cond53, i32 %align, i8 zeroext %cond68, i32 %bf.clear72) #8, !dbg !4427
  store %struct.mem_attrs* %call73, %struct.mem_attrs** %rt_mem, align 8, !dbg !4428
  ret void, !dbg !4429
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_expr(%struct.rtx_def* %mem, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !4430 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4434, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !4435, metadata !DIExpression()), !dbg !4436
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4437
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4437
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4437
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4437
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4437

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 3, !dbg !4437
  %2 = load i32, i32* %alias, align 8, !dbg !4437
  br label %cond.end, !dbg !4437

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %entry ], !dbg !4437
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !4438

cond.false11:                                     ; preds = %cond.end
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4438
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !4438
  br label %cond.end16, !dbg !4438

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %struct.rtx_def* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !4438
  br i1 %cmp, label %cond.false28, label %cond.true23, !dbg !4439

cond.true23:                                      ; preds = %cond.end16
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !4439
  %4 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4439
  br label %cond.end39, !dbg !4439

cond.false28:                                     ; preds = %cond.end16
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4439
  %bf.load = load i32, i32* %5, align 8, !dbg !4439
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4439
  %cmp29 = icmp eq i32 %bf.clear, 65536, !dbg !4439
  br i1 %cmp29, label %cond.end39, label %cond.true30, !dbg !4439

cond.true30:                                      ; preds = %cond.false28
  %bf.lshr32 = lshr i32 %bf.load, 16, !dbg !4439
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !4439
  %idxprom = zext i32 %bf.clear33 to i64, !dbg !4439
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4439
  %6 = load i8, i8* %arrayidx34, align 1, !dbg !4439
  %conv35 = zext i8 %6 to i64, !dbg !4439
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv35) #8, !dbg !4439
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4440
  br label %cond.end39, !dbg !4439

cond.end39:                                       ; preds = %cond.false28, %cond.true30, %cond.true23
  %7 = phi %struct.mem_attrs* [ %1, %cond.true23 ], [ %.pre, %cond.true30 ], [ null, %cond.false28 ], !dbg !4440
  %cond40 = phi %struct.rtx_def* [ %4, %cond.true23 ], [ %call, %cond.true30 ], [ null, %cond.false28 ], !dbg !4439
  %cmp45 = icmp eq %struct.mem_attrs* %7, null, !dbg !4440
  br i1 %cmp45, label %cond.end53, label %cond.true47, !dbg !4440

cond.true47:                                      ; preds = %cond.end39
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 4, !dbg !4440
  %8 = load i32, i32* %align, align 4, !dbg !4440
  br label %cond.end53, !dbg !4440

cond.end53:                                       ; preds = %cond.end39, %cond.true47
  %cond54 = phi i32 [ %8, %cond.true47 ], [ 8, %cond.end39 ], !dbg !4440
  br i1 %cmp45, label %cond.end68, label %cond.false62, !dbg !4441

cond.false62:                                     ; preds = %cond.end53
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !4441
  %9 = load i8, i8* %addrspace, align 8, !dbg !4441
  br label %cond.end68, !dbg !4441

cond.end68:                                       ; preds = %cond.end53, %cond.false62
  %cond69 = phi i8 [ %9, %cond.false62 ], [ 0, %cond.end53 ]
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4442
  %bf.load71 = load i32, i32* %10, align 8, !dbg !4442
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !4442
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !4442
  %call74 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond, %union.tree_node* %expr, %struct.rtx_def* %cond17, %struct.rtx_def* %cond40, i32 %cond54, i8 zeroext %cond69, i32 %bf.clear73) #8, !dbg !4443
  store %struct.mem_attrs* %call74, %struct.mem_attrs** %rt_mem, align 8, !dbg !4444
  ret void, !dbg !4445
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_offset(%struct.rtx_def* %mem, %struct.rtx_def* %offset) local_unnamed_addr #5 !dbg !4446 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4448, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset, metadata !4449, metadata !DIExpression()), !dbg !4450
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4451
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4451
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4451
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4451
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4451

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 3, !dbg !4451
  %2 = load i32, i32* %alias, align 8, !dbg !4451
  br label %cond.end, !dbg !4451

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %entry ], !dbg !4451
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !4452

cond.false11:                                     ; preds = %cond.end
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4452
  %3 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4452
  br label %cond.end16, !dbg !4452

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %union.tree_node* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !4452
  br i1 %cmp, label %cond.false28, label %cond.true23, !dbg !4453

cond.true23:                                      ; preds = %cond.end16
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !4453
  %4 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4453
  br label %cond.end39, !dbg !4453

cond.false28:                                     ; preds = %cond.end16
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4453
  %bf.load = load i32, i32* %5, align 8, !dbg !4453
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4453
  %cmp29 = icmp eq i32 %bf.clear, 65536, !dbg !4453
  br i1 %cmp29, label %cond.end39, label %cond.true30, !dbg !4453

cond.true30:                                      ; preds = %cond.false28
  %bf.lshr32 = lshr i32 %bf.load, 16, !dbg !4453
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !4453
  %idxprom = zext i32 %bf.clear33 to i64, !dbg !4453
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4453
  %6 = load i8, i8* %arrayidx34, align 1, !dbg !4453
  %conv35 = zext i8 %6 to i64, !dbg !4453
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv35) #8, !dbg !4453
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4454
  br label %cond.end39, !dbg !4453

cond.end39:                                       ; preds = %cond.false28, %cond.true30, %cond.true23
  %7 = phi %struct.mem_attrs* [ %1, %cond.true23 ], [ %.pre, %cond.true30 ], [ null, %cond.false28 ], !dbg !4454
  %cond40 = phi %struct.rtx_def* [ %4, %cond.true23 ], [ %call, %cond.true30 ], [ null, %cond.false28 ], !dbg !4453
  %cmp45 = icmp eq %struct.mem_attrs* %7, null, !dbg !4454
  br i1 %cmp45, label %cond.end53, label %cond.true47, !dbg !4454

cond.true47:                                      ; preds = %cond.end39
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 4, !dbg !4454
  %8 = load i32, i32* %align, align 4, !dbg !4454
  br label %cond.end53, !dbg !4454

cond.end53:                                       ; preds = %cond.end39, %cond.true47
  %cond54 = phi i32 [ %8, %cond.true47 ], [ 8, %cond.end39 ], !dbg !4454
  br i1 %cmp45, label %cond.end68, label %cond.false62, !dbg !4455

cond.false62:                                     ; preds = %cond.end53
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !4455
  %9 = load i8, i8* %addrspace, align 8, !dbg !4455
  br label %cond.end68, !dbg !4455

cond.end68:                                       ; preds = %cond.end53, %cond.false62
  %cond69 = phi i8 [ %9, %cond.false62 ], [ 0, %cond.end53 ]
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4456
  %bf.load71 = load i32, i32* %10, align 8, !dbg !4456
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !4456
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !4456
  %call74 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond, %union.tree_node* %cond17, %struct.rtx_def* %offset, %struct.rtx_def* %cond40, i32 %cond54, i8 zeroext %cond69, i32 %bf.clear73) #8, !dbg !4457
  store %struct.mem_attrs* %call74, %struct.mem_attrs** %rt_mem, align 8, !dbg !4458
  ret void, !dbg !4459
}

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_size(%struct.rtx_def* %mem, %struct.rtx_def* %size) local_unnamed_addr #5 !dbg !4460 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4462, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4465
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4465
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4465
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4465
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4465

cond.false:                                       ; preds = %entry
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 3, !dbg !4465
  %2 = load i32, i32* %alias, align 8, !dbg !4465
  br label %cond.end, !dbg !4465

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %entry ], !dbg !4465
  br i1 %cmp, label %cond.end16, label %cond.false11, !dbg !4466

cond.false11:                                     ; preds = %cond.end
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4466
  %3 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4466
  br label %cond.end16, !dbg !4466

cond.end16:                                       ; preds = %cond.end, %cond.false11
  %cond17 = phi %union.tree_node* [ %3, %cond.false11 ], [ null, %cond.end ], !dbg !4466
  br i1 %cmp, label %cond.end29, label %cond.false24, !dbg !4467

cond.false24:                                     ; preds = %cond.end16
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4467
  %4 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !4467
  br label %cond.end29, !dbg !4467

cond.end29:                                       ; preds = %cond.end16, %cond.false24
  %cond30 = phi %struct.rtx_def* [ %4, %cond.false24 ], [ null, %cond.end16 ], !dbg !4467
  br i1 %cmp, label %cond.end42, label %cond.true36, !dbg !4468

cond.true36:                                      ; preds = %cond.end29
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 4, !dbg !4468
  %5 = load i32, i32* %align, align 4, !dbg !4468
  br label %cond.end42, !dbg !4468

cond.end42:                                       ; preds = %cond.end29, %cond.true36
  %cond43 = phi i32 [ %5, %cond.true36 ], [ 8, %cond.end29 ], !dbg !4468
  br i1 %cmp, label %cond.end55, label %cond.false50, !dbg !4469

cond.false50:                                     ; preds = %cond.end42
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 5, !dbg !4469
  %6 = load i8, i8* %addrspace, align 8, !dbg !4469
  br label %cond.end55, !dbg !4469

cond.end55:                                       ; preds = %cond.end42, %cond.false50
  %cond56 = phi i8 [ %6, %cond.false50 ], [ 0, %cond.end42 ]
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4470
  %bf.load = load i32, i32* %7, align 8, !dbg !4470
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4470
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4470
  %call = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond, %union.tree_node* %cond17, %struct.rtx_def* %cond30, %struct.rtx_def* %size, i32 %cond43, i8 zeroext %cond56, i32 %bf.clear) #8, !dbg !4471
  store %struct.mem_attrs* %call, %struct.mem_attrs** %rt_mem, align 8, !dbg !4472
  ret void, !dbg !4473
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @change_address(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !4474 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4478, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4479, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !4480, metadata !DIExpression()), !dbg !4485
  %call = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr, i32 1) #8, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4481, metadata !DIExpression()), !dbg !4485
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4487
  %bf.load = load i32, i32* %0, align 8, !dbg !4487
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4487
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4483, metadata !DIExpression()), !dbg !4485
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !4488
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4489

cond.false:                                       ; preds = %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !4490
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4490
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4490
  %conv1 = zext i8 %1 to i64, !dbg !4490
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1) #8, !dbg !4490
  br label %cond.end, !dbg !4489

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.rtx_def* [ %call2, %cond.false ], [ null, %entry ], !dbg !4489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4482, metadata !DIExpression()), !dbg !4485
  br i1 %cmp, label %cond.end8, label %cond.false6, !dbg !4491

cond.false6:                                      ; preds = %cond.end
  %call7 = tail call i32 @get_mode_alignment(i32 %bf.clear) #7, !dbg !4492
  br label %cond.end8, !dbg !4491

cond.end8:                                        ; preds = %cond.end, %cond.false6
  %cond9 = phi i32 [ %call7, %cond.false6 ], [ 8, %cond.end ], !dbg !4491
  call void @llvm.dbg.value(metadata i32 %cond9, metadata !4484, metadata !DIExpression()), !dbg !4485
  %cmp10 = icmp eq %struct.rtx_def* %call, %memref, !dbg !4493
  br i1 %cmp10, label %if.then, label %cond.end8.if.end165_crit_edge, !dbg !4495

cond.end8.if.end165_crit_edge:                    ; preds = %cond.end8
  br label %if.end165, !dbg !4495

if.then:                                          ; preds = %cond.end8
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4496
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !4496
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4496
  %cmp13 = icmp eq %struct.mem_attrs* %3, null, !dbg !4499
  br i1 %cmp13, label %cleanup, label %lor.lhs.false, !dbg !4500

lor.lhs.false:                                    ; preds = %if.then
  br i1 false, label %lor.lhs.false.cond.end27_crit_edge, label %cond.false22, !dbg !4501

lor.lhs.false.cond.end27_crit_edge:               ; preds = %lor.lhs.false
  br label %cond.end27, !dbg !4501

cond.false22:                                     ; preds = %lor.lhs.false
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 0, !dbg !4501
  %4 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4501
  %phitmp = icmp eq %union.tree_node* %4, null, !dbg !4501
  br label %cond.end27, !dbg !4501

cond.end27:                                       ; preds = %lor.lhs.false.cond.end27_crit_edge, %cond.false22
  %cond28 = phi i1 [ %phitmp, %cond.false22 ], [ undef, %lor.lhs.false.cond.end27_crit_edge ]
  br i1 %cond28, label %land.lhs.true, label %if.end, !dbg !4502

land.lhs.true:                                    ; preds = %cond.end27
  br i1 false, label %land.lhs.true.cond.end43_crit_edge, label %cond.false38, !dbg !4503

land.lhs.true.cond.end43_crit_edge:               ; preds = %land.lhs.true
  br label %cond.end43, !dbg !4503

cond.false38:                                     ; preds = %land.lhs.true
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 1, !dbg !4503
  %5 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !4503
  %phitmp1 = icmp eq %struct.rtx_def* %5, null, !dbg !4503
  br label %cond.end43, !dbg !4503

cond.end43:                                       ; preds = %land.lhs.true.cond.end43_crit_edge, %cond.false38
  %cond44 = phi i1 [ %phitmp1, %cond.false38 ], [ undef, %land.lhs.true.cond.end43_crit_edge ]
  br i1 %cond44, label %land.lhs.true47, label %if.end, !dbg !4504

land.lhs.true47:                                  ; preds = %cond.end43
  br i1 false, label %cond.false60, label %cond.true54, !dbg !4505

cond.true54:                                      ; preds = %land.lhs.true47
  %size59 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 2, !dbg !4505
  %6 = load %struct.rtx_def*, %struct.rtx_def** %size59, align 8, !dbg !4505
  br label %cond.end78, !dbg !4505

cond.false60:                                     ; preds = %land.lhs.true47
  br i1 undef, label %cond.false60.cond.end78_crit_edge, label %cond.true66, !dbg !4505

cond.false60.cond.end78_crit_edge:                ; preds = %cond.false60
  br label %cond.end78, !dbg !4505

cond.true66:                                      ; preds = %cond.false60
  br label %cond.end78, !dbg !4505

cond.end78:                                       ; preds = %cond.false60.cond.end78_crit_edge, %cond.true66, %cond.true54
  %cond79 = phi %struct.rtx_def* [ %6, %cond.true54 ], [ undef, %cond.true66 ], [ undef, %cond.false60.cond.end78_crit_edge ], !dbg !4505
  %cmp80 = icmp eq %struct.rtx_def* %cond79, %cond, !dbg !4506
  br i1 %cmp80, label %land.lhs.true82, label %if.end, !dbg !4507

land.lhs.true82:                                  ; preds = %cond.end78
  br i1 false, label %land.lhs.true82.cond.end96_crit_edge, label %cond.true89, !dbg !4508

land.lhs.true82.cond.end96_crit_edge:             ; preds = %land.lhs.true82
  br label %cond.end96, !dbg !4508

cond.true89:                                      ; preds = %land.lhs.true82
  %align94 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 4, !dbg !4508
  %7 = load i32, i32* %align94, align 4, !dbg !4508
  br label %cond.end96, !dbg !4508

cond.end96:                                       ; preds = %land.lhs.true82.cond.end96_crit_edge, %cond.true89
  %cond97 = phi i32 [ %7, %cond.true89 ], [ undef, %land.lhs.true82.cond.end96_crit_edge ], !dbg !4508
  %cmp98 = icmp eq i32 %cond97, %cond9, !dbg !4509
  br i1 %cmp98, label %cleanup, label %if.end, !dbg !4510

if.end:                                           ; preds = %cond.end96, %cond.end78, %cond.end43, %cond.end27
  %arrayidx103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4511
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !4511
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4511
  %call104 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear, %struct.rtx_def* %8) #8, !dbg !4512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !4481, metadata !DIExpression()), !dbg !4485
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 0, !dbg !4513
  %bf.load105 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear107 = and i32 %bf.load105, 134217728, !dbg !4513
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call104, i64 0, i32 0, !dbg !4513
  %bf.load108 = load i32, i32* %10, align 8, !dbg !4513
  %bf.clear109 = and i32 %bf.load108, -134217729, !dbg !4513
  %bf.set = or i32 %bf.clear109, %bf.clear107, !dbg !4513
  store i32 %bf.set, i32* %10, align 8, !dbg !4513
  %bf.load110 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear112 = and i32 %bf.load110, 268435456, !dbg !4513
  %bf.clear116 = and i32 %bf.set, -268435457, !dbg !4513
  %bf.set117 = or i32 %bf.clear116, %bf.clear112, !dbg !4513
  store i32 %bf.set117, i32* %10, align 8, !dbg !4513
  %bf.load118 = load i32, i32* %9, align 8, !dbg !4513
  %bf.lshr119 = and i32 %bf.load118, -2147483648, !dbg !4513
  %bf.clear123 = and i32 %bf.set117, 2147483647, !dbg !4513
  %bf.set124 = or i32 %bf.clear123, %bf.lshr119, !dbg !4513
  store i32 %bf.set124, i32* %10, align 8, !dbg !4513
  %bf.load125 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear127 = and i32 %bf.load125, 33554432, !dbg !4513
  %bf.clear131 = and i32 %bf.set124, -33554433, !dbg !4513
  %bf.set132 = or i32 %bf.clear131, %bf.clear127, !dbg !4513
  store i32 %bf.set132, i32* %10, align 8, !dbg !4513
  %bf.load133 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear135 = and i32 %bf.load133, 67108864, !dbg !4513
  %bf.clear139 = and i32 %bf.set132, -67108865, !dbg !4513
  %bf.set140 = or i32 %bf.clear139, %bf.clear135, !dbg !4513
  store i32 %bf.set140, i32* %10, align 8, !dbg !4513
  %bf.load141 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear143 = and i32 %bf.load141, 16777216, !dbg !4513
  %bf.clear147 = and i32 %bf.set140, -16777217, !dbg !4513
  %bf.set148 = or i32 %bf.clear147, %bf.clear143, !dbg !4513
  store i32 %bf.set148, i32* %10, align 8, !dbg !4513
  %bf.load149 = load i32, i32* %9, align 8, !dbg !4513
  %bf.clear151 = and i32 %bf.load149, 1073741824, !dbg !4513
  %bf.clear155 = and i32 %bf.set148, -1073741825, !dbg !4513
  %bf.set156 = or i32 %bf.clear155, %bf.clear151, !dbg !4513
  store i32 %bf.set156, i32* %10, align 8, !dbg !4513
  %11 = bitcast %union.rtunion_def* %2 to i64*, !dbg !4513
  %12 = load i64, i64* %11, align 8, !dbg !4513
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call104, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4513
  %14 = bitcast %union.rtunion_def* %13 to i64*, !dbg !4513
  store i64 %12, i64* %14, align 8, !dbg !4513
  br label %if.end165, !dbg !4514

if.end165:                                        ; preds = %cond.end8.if.end165_crit_edge, %if.end
  %new_rtx.0 = phi %struct.rtx_def* [ %call104, %if.end ], [ %call, %cond.end8.if.end165_crit_edge ], !dbg !4485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !4481, metadata !DIExpression()), !dbg !4485
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4515
  %rt_mem169 = bitcast %union.rtunion_def* %15 to %struct.mem_attrs**, !dbg !4515
  %16 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem169, align 8, !dbg !4515
  %cmp170 = icmp eq %struct.mem_attrs* %16, null, !dbg !4515
  br i1 %cmp170, label %cond.end178, label %cond.false173, !dbg !4515

cond.false173:                                    ; preds = %if.end165
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 3, !dbg !4515
  %17 = load i32, i32* %alias, align 8, !dbg !4515
  br label %cond.end178, !dbg !4515

cond.end178:                                      ; preds = %if.end165, %cond.false173
  %cond179 = phi i32 [ %17, %cond.false173 ], [ 0, %if.end165 ], !dbg !4515
  br i1 %cmp170, label %cond.end193, label %cond.false187, !dbg !4516

cond.false187:                                    ; preds = %cond.end178
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 5, !dbg !4516
  %18 = load i8, i8* %addrspace, align 8, !dbg !4516
  br label %cond.end193, !dbg !4516

cond.end193:                                      ; preds = %cond.end178, %cond.false187
  %cond194 = phi i8 [ %18, %cond.false187 ], [ 0, %cond.end178 ]
  %call196 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond179, %union.tree_node* null, %struct.rtx_def* null, %struct.rtx_def* %cond, i32 %cond9, i8 zeroext %cond194, i32 %bf.clear) #8, !dbg !4517
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4518
  %rt_mem200 = bitcast %union.rtunion_def* %19 to %struct.mem_attrs**, !dbg !4518
  store %struct.mem_attrs* %call196, %struct.mem_attrs** %rt_mem200, align 8, !dbg !4519
  br label %cleanup, !dbg !4520

cleanup:                                          ; preds = %if.then, %cond.end96, %cond.end193
  %retval.0 = phi %struct.rtx_def* [ %new_rtx.0, %cond.end193 ], [ %memref, %cond.end96 ], [ %memref, %if.then ], !dbg !4485
  ret %struct.rtx_def* %retval.0, !dbg !4521
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr, i32 %validate) unnamed_addr #5 !dbg !4522 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4526, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4527, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !4528, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32 %validate, metadata !4529, metadata !DIExpression()), !dbg !4532
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 0, !dbg !4533
  %bf.load = load i32, i32* %0, align 8, !dbg !4533
  %bf.clear = and i32 %bf.load, 65535, !dbg !4533
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4533
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4533

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1899, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4533
  br label %cond.end, !dbg !4533

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4534
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !4534
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4534
  %cmp1 = icmp eq %struct.mem_attrs* %2, null, !dbg !4534
  br i1 %cmp1, label %cond.end8, label %cond.false3, !dbg !4534

cond.false3:                                      ; preds = %cond.end
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !4534
  %3 = load i8, i8* %addrspace, align 8, !dbg !4534
  br label %cond.end8, !dbg !4534

cond.end8:                                        ; preds = %cond.end, %cond.false3
  %cond9 = phi i8 [ %3, %cond.false3 ], [ 0, %cond.end ]
  call void @llvm.dbg.value(metadata i8 %cond9, metadata !4530, metadata !DIExpression()), !dbg !4532
  %cmp11 = icmp eq i32 %mode, 0, !dbg !4535
  br i1 %cmp11, label %if.then, label %if.end, !dbg !4537

if.then:                                          ; preds = %cond.end8
  %bf.load13 = load i32, i32* %0, align 8, !dbg !4538
  %bf.lshr = lshr i32 %bf.load13, 16, !dbg !4538
  %bf.clear14 = and i32 %bf.lshr, 255, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %bf.clear14, metadata !4527, metadata !DIExpression()), !dbg !4532
  br label %if.end, !dbg !4539

if.end:                                           ; preds = %if.then, %cond.end8
  %mode.addr.0 = phi i32 [ %bf.clear14, %if.then ], [ %mode, %cond.end8 ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !4527, metadata !DIExpression()), !dbg !4532
  %cmp15 = icmp eq %struct.rtx_def* %addr, null, !dbg !4540
  br i1 %cmp15, label %if.then17, label %if.end21, !dbg !4542

if.then17:                                        ; preds = %if.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4543
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !4543
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4528, metadata !DIExpression()), !dbg !4532
  br label %if.end21, !dbg !4544

if.end21:                                         ; preds = %if.then17, %if.end
  %addr.addr.0 = phi %struct.rtx_def* [ %4, %if.then17 ], [ %addr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.addr.0, metadata !4528, metadata !DIExpression()), !dbg !4532
  %bf.load22 = load i32, i32* %0, align 8, !dbg !4545
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !4545
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !4545
  %cmp25 = icmp eq i32 %mode.addr.0, %bf.clear24, !dbg !4547
  br i1 %cmp25, label %land.lhs.true, label %if.end36, !dbg !4548

land.lhs.true:                                    ; preds = %if.end21
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4549
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !4549
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !4549
  %cmp31 = icmp eq %struct.rtx_def* %addr.addr.0, %5, !dbg !4550
  br i1 %cmp31, label %land.lhs.true33, label %if.end36, !dbg !4551

land.lhs.true33:                                  ; preds = %land.lhs.true
  %tobool = icmp eq i32 %validate, 0, !dbg !4552
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !4553

lor.lhs.false:                                    ; preds = %land.lhs.true33
  %call = tail call i32 @memory_address_addr_space_p(i32 %mode.addr.0, %struct.rtx_def* %addr.addr.0, i8 zeroext %cond9) #7, !dbg !4554
  %tobool34 = icmp eq i32 %call, 0, !dbg !4554
  br i1 %tobool34, label %if.end36, label %cleanup, !dbg !4555

if.end36:                                         ; preds = %lor.lhs.false, %land.lhs.true, %if.end21
  %tobool37 = icmp eq i32 %validate, 0, !dbg !4556
  br i1 %tobool37, label %if.end51, label %if.then38, !dbg !4558

if.then38:                                        ; preds = %if.end36
  %6 = load i32, i32* @reload_in_progress, align 4, !dbg !4559
  %7 = load i32, i32* @reload_completed, align 4, !dbg !4562
  %8 = or i32 %6, %7, !dbg !4563
  %9 = icmp eq i32 %8, 0, !dbg !4563
  br i1 %9, label %if.else, label %if.then42, !dbg !4563

if.then42:                                        ; preds = %if.then38
  %call43 = tail call i32 @memory_address_addr_space_p(i32 %mode.addr.0, %struct.rtx_def* %addr.addr.0, i8 zeroext %cond9) #7, !dbg !4564
  %tobool44 = icmp eq i32 %call43, 0, !dbg !4564
  br i1 %tobool44, label %cond.true45, label %if.end51, !dbg !4564

cond.true45:                                      ; preds = %if.then42
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 1912, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4564
  br label %if.end51, !dbg !4564

if.else:                                          ; preds = %if.then38
  %call49 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %mode.addr.0, %struct.rtx_def* %addr.addr.0, i8 zeroext %cond9) #7, !dbg !4565
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !4528, metadata !DIExpression()), !dbg !4532
  br label %if.end51

if.end51:                                         ; preds = %if.then42, %if.end36, %if.else, %cond.true45
  %addr.addr.2 = phi %struct.rtx_def* [ %addr.addr.0, %if.end36 ], [ %call49, %if.else ], [ %addr.addr.0, %if.then42 ], [ %addr.addr.0, %cond.true45 ], !dbg !4566
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.addr.2, metadata !4528, metadata !DIExpression()), !dbg !4532
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4567
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !4567
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !4567
  %call56 = tail call i32 @rtx_equal_p(%struct.rtx_def* %addr.addr.2, %struct.rtx_def* %10) #7, !dbg !4569
  %tobool57 = icmp eq i32 %call56, 0, !dbg !4569
  br i1 %tobool57, label %if.end65, label %land.lhs.true58, !dbg !4570

land.lhs.true58:                                  ; preds = %if.end51
  %bf.load59 = load i32, i32* %0, align 8, !dbg !4571
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !4571
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !4571
  %cmp62 = icmp eq i32 %mode.addr.0, %bf.clear61, !dbg !4572
  br i1 %cmp62, label %cleanup, label %if.end65, !dbg !4573

if.end65:                                         ; preds = %if.end51, %land.lhs.true58
  %call66 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode.addr.0, %struct.rtx_def* %addr.addr.2) #8, !dbg !4574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !4531, metadata !DIExpression()), !dbg !4532
  %bf.load67 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear69 = and i32 %bf.load67, 134217728, !dbg !4575
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call66, i64 0, i32 0, !dbg !4575
  %bf.load70 = load i32, i32* %11, align 8, !dbg !4575
  %bf.clear71 = and i32 %bf.load70, -134217729, !dbg !4575
  %bf.set = or i32 %bf.clear71, %bf.clear69, !dbg !4575
  store i32 %bf.set, i32* %11, align 8, !dbg !4575
  %bf.load72 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear74 = and i32 %bf.load72, 268435456, !dbg !4575
  %bf.clear78 = and i32 %bf.set, -268435457, !dbg !4575
  %bf.set79 = or i32 %bf.clear78, %bf.clear74, !dbg !4575
  store i32 %bf.set79, i32* %11, align 8, !dbg !4575
  %bf.load80 = load i32, i32* %0, align 8, !dbg !4575
  %bf.lshr81 = and i32 %bf.load80, -2147483648, !dbg !4575
  %bf.clear85 = and i32 %bf.set79, 2147483647, !dbg !4575
  %bf.set86 = or i32 %bf.clear85, %bf.lshr81, !dbg !4575
  store i32 %bf.set86, i32* %11, align 8, !dbg !4575
  %bf.load87 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear89 = and i32 %bf.load87, 33554432, !dbg !4575
  %bf.clear93 = and i32 %bf.set86, -33554433, !dbg !4575
  %bf.set94 = or i32 %bf.clear93, %bf.clear89, !dbg !4575
  store i32 %bf.set94, i32* %11, align 8, !dbg !4575
  %bf.load95 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear97 = and i32 %bf.load95, 67108864, !dbg !4575
  %bf.clear101 = and i32 %bf.set94, -67108865, !dbg !4575
  %bf.set102 = or i32 %bf.clear101, %bf.clear97, !dbg !4575
  store i32 %bf.set102, i32* %11, align 8, !dbg !4575
  %bf.load103 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear105 = and i32 %bf.load103, 16777216, !dbg !4575
  %bf.clear109 = and i32 %bf.set102, -16777217, !dbg !4575
  %bf.set110 = or i32 %bf.clear109, %bf.clear105, !dbg !4575
  store i32 %bf.set110, i32* %11, align 8, !dbg !4575
  %bf.load111 = load i32, i32* %0, align 8, !dbg !4575
  %bf.clear113 = and i32 %bf.load111, 1073741824, !dbg !4575
  %bf.clear117 = and i32 %bf.set110, -1073741825, !dbg !4575
  %bf.set118 = or i32 %bf.clear117, %bf.clear113, !dbg !4575
  store i32 %bf.set118, i32* %11, align 8, !dbg !4575
  %12 = bitcast %union.rtunion_def* %1 to i64*, !dbg !4575
  %13 = load i64, i64* %12, align 8, !dbg !4575
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call66, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4575
  %15 = bitcast %union.rtunion_def* %14 to i64*, !dbg !4575
  store i64 %13, i64* %15, align 8, !dbg !4575
  br label %cleanup, !dbg !4576

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true33, %land.lhs.true58, %if.end65
  %retval.0 = phi %struct.rtx_def* [ %call66, %if.end65 ], [ %memref, %lor.lhs.false ], [ %memref, %land.lhs.true33 ], [ %memref, %land.lhs.true58 ], !dbg !4532
  ret %struct.rtx_def* %retval.0, !dbg !4577
}

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %memref, i32 %mode, %struct.rtx_def* %addr, i64 %offset, i32 %validate) local_unnamed_addr #5 !dbg !4578 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4582, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4583, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !4584, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i64 %offset, metadata !4585, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %validate, metadata !4586, metadata !DIExpression()), !dbg !4587
  %call = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %addr, i32 %validate) #8, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4582, metadata !DIExpression()), !dbg !4587
  %call1 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call, i32 %mode, i64 %offset, i32 %validate, i32 0) #8, !dbg !4589
  ret %struct.rtx_def* %call1, !dbg !4590
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @offset_address(%struct.rtx_def* %memref, %struct.rtx_def* %offset, i64 %pow2) local_unnamed_addr #5 !dbg !4591 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4595, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset, metadata !4596, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i64 %pow2, metadata !4597, metadata !DIExpression()), !dbg !4602
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4603
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4603
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4599, metadata !DIExpression()), !dbg !4602
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4604
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !4604
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4604
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !4604
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4604

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !4604
  %3 = load i8, i8* %addrspace, align 8, !dbg !4604
  br label %cond.end, !dbg !4604

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %3, %cond.false ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i8 %cond, metadata !4600, metadata !DIExpression()), !dbg !4602
  %4 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !4605
  %call = tail call i32 %4(i8 zeroext %cond) #7, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %call, metadata !4601, metadata !DIExpression()), !dbg !4602
  %call9 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %call, %struct.rtx_def* %0, %struct.rtx_def* %offset) #7, !dbg !4607
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !4598, metadata !DIExpression()), !dbg !4602
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 0, !dbg !4608
  %bf.load = load i32, i32* %5, align 8, !dbg !4608
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4608
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4608
  %call10 = tail call i32 @memory_address_addr_space_p(i32 %bf.clear, %struct.rtx_def* %call9, i8 zeroext %cond) #7, !dbg !4610
  %tobool = icmp eq i32 %call10, 0, !dbg !4610
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4611

land.lhs.true:                                    ; preds = %cond.end
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4612
  %bf.load11 = load i32, i32* %6, align 8, !dbg !4612
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !4612
  %cmp13 = icmp eq i32 %bf.clear12, 49, !dbg !4613
  br i1 %cmp13, label %land.lhs.true15, label %if.end, !dbg !4614

land.lhs.true15:                                  ; preds = %land.lhs.true
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4615
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4615
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !4615
  %8 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !4616
  %cmp20 = icmp eq %struct.rtx_def* %7, %8, !dbg !4617
  br i1 %cmp20, label %if.then, label %if.end, !dbg !4618

if.then:                                          ; preds = %land.lhs.true15
  %bf.lshr23 = lshr i32 %bf.load11, 16, !dbg !4619
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !4619
  %call25 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear24, %struct.rtx_def* %0) #7, !dbg !4621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !4599, metadata !DIExpression()), !dbg !4602
  %call26 = tail call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %call, %struct.rtx_def* %call25, %struct.rtx_def* %offset) #7, !dbg !4622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !4598, metadata !DIExpression()), !dbg !4602
  br label %if.end, !dbg !4623

if.end:                                           ; preds = %cond.end, %if.then, %land.lhs.true15, %land.lhs.true
  %new_rtx.0 = phi %struct.rtx_def* [ %call9, %cond.end ], [ %call26, %if.then ], [ %call9, %land.lhs.true15 ], [ %call9, %land.lhs.true ], !dbg !4602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !4598, metadata !DIExpression()), !dbg !4602
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4624
  tail call void @update_temp_slot_address(%struct.rtx_def* %9, %struct.rtx_def* %new_rtx.0) #7, !dbg !4625
  %call31 = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %new_rtx.0, i32 1) #8, !dbg !4626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !4598, metadata !DIExpression()), !dbg !4602
  %cmp32 = icmp eq %struct.rtx_def* %call31, %memref, !dbg !4627
  br i1 %cmp32, label %cleanup, label %if.end35, !dbg !4629

if.end35:                                         ; preds = %if.end
  %10 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4630
  %cmp40 = icmp eq %struct.mem_attrs* %10, null, !dbg !4630
  br i1 %cmp40, label %cond.end48, label %cond.false43, !dbg !4630

cond.false43:                                     ; preds = %if.end35
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 3, !dbg !4630
  %11 = load i32, i32* %alias, align 8, !dbg !4630
  br label %cond.end48, !dbg !4630

cond.end48:                                       ; preds = %if.end35, %cond.false43
  %cond49 = phi i32 [ %11, %cond.false43 ], [ 0, %if.end35 ], !dbg !4630
  br i1 %cmp40, label %cond.end62, label %cond.false57, !dbg !4631

cond.false57:                                     ; preds = %cond.end48
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 0, !dbg !4631
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4631
  br label %cond.end62, !dbg !4631

cond.end62:                                       ; preds = %cond.end48, %cond.false57
  %cond63 = phi %union.tree_node* [ %12, %cond.false57 ], [ null, %cond.end48 ], !dbg !4631
  br i1 %cmp40, label %cond.end76, label %cond.true70, !dbg !4632

cond.true70:                                      ; preds = %cond.end62
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 4, !dbg !4632
  %13 = load i32, i32* %align, align 4, !dbg !4632
  %phitmp = zext i32 %13 to i64, !dbg !4632
  br label %cond.end76, !dbg !4632

cond.end76:                                       ; preds = %cond.end62, %cond.true70
  %cond77 = phi i64 [ %phitmp, %cond.true70 ], [ 8, %cond.end62 ]
  %mul = shl i64 %pow2, 3, !dbg !4632
  %cmp79 = icmp ult i64 %cond77, %mul, !dbg !4632
  br i1 %cmp79, label %cond.true81, label %cond.false98, !dbg !4632

cond.true81:                                      ; preds = %cond.end76
  br i1 %cmp40, label %cond.end95, label %cond.true88, !dbg !4632

cond.true88:                                      ; preds = %cond.true81
  %align93 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 4, !dbg !4632
  %14 = load i32, i32* %align93, align 4, !dbg !4632
  %phitmp1 = zext i32 %14 to i64, !dbg !4632
  br label %cond.end95, !dbg !4632

cond.end95:                                       ; preds = %cond.true81, %cond.true88
  %cond96 = phi i64 [ %phitmp1, %cond.true88 ], [ 8, %cond.true81 ]
  br label %cond.end100, !dbg !4632

cond.false98:                                     ; preds = %cond.end76
  br label %cond.end100, !dbg !4632

cond.end100:                                      ; preds = %cond.false98, %cond.end95
  %cond101 = phi i64 [ %cond96, %cond.end95 ], [ %mul, %cond.false98 ], !dbg !4632
  %conv102 = trunc i64 %cond101 to i32, !dbg !4632
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !4633
  %bf.load103 = load i32, i32* %15, align 8, !dbg !4633
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !4633
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !4633
  %call106 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond49, %union.tree_node* %cond63, %struct.rtx_def* null, %struct.rtx_def* null, i32 %conv102, i8 zeroext %cond, i32 %bf.clear105) #8, !dbg !4634
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4635
  %rt_mem110 = bitcast %union.rtunion_def* %16 to %struct.mem_attrs**, !dbg !4635
  store %struct.mem_attrs* %call106, %struct.mem_attrs** %rt_mem110, align 8, !dbg !4636
  br label %cleanup, !dbg !4637

cleanup:                                          ; preds = %if.end, %cond.end100
  ret %struct.rtx_def* %call31, !dbg !4638
}

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @update_temp_slot_address(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %memref, %struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !4639 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4641, metadata !DIExpression()), !dbg !4643
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  %call = tail call fastcc %struct.rtx_def* @change_address_1(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %addr, i32 0) #8, !dbg !4644
  ret %struct.rtx_def* %call, !dbg !4645
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @widen_memory_access(%struct.rtx_def* %memref, i32 %mode, i64 %offset) local_unnamed_addr #5 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !4650, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4651, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i64 %offset, metadata !4652, metadata !DIExpression()), !dbg !4662
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %memref, i32 %mode, i64 %offset, i32 1, i32 1) #8, !dbg !4663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4653, metadata !DIExpression()), !dbg !4662
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4664
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !4664
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4664
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !4664
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4664

cond.false:                                       ; preds = %entry
  %expr5 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !4664
  %2 = load %union.tree_node*, %union.tree_node** %expr5, align 8, !dbg !4664
  br label %cond.end, !dbg !4664

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4654, metadata !DIExpression()), !dbg !4662
  br i1 %cmp, label %cond.end18, label %cond.false12, !dbg !4665

cond.false12:                                     ; preds = %cond.end
  %offset17 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !4665
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset17, align 8, !dbg !4665
  br label %cond.end18, !dbg !4665

cond.end18:                                       ; preds = %cond.end, %cond.false12
  %cond19 = phi %struct.rtx_def* [ %3, %cond.false12 ], [ null, %cond.end ], !dbg !4665
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond19, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i8 undef, metadata !4656, metadata !DIExpression()), !dbg !4662
  %cmp22 = icmp eq %struct.rtx_def* %call, %memref, !dbg !4666
  br i1 %cmp22, label %cleanup150, label %if.end, !dbg !4668

if.end:                                           ; preds = %cond.end18
  %idxprom = zext i32 %mode to i64, !dbg !4669
  %arrayidx20 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4669
  %4 = load i8, i8* %arrayidx20, align 1, !dbg !4669
  call void @llvm.dbg.value(metadata i8 %4, metadata !4656, metadata !DIExpression()), !dbg !4662
  %tobool = icmp eq %struct.rtx_def* %cond19, null, !dbg !4670
  %spec.select = select i1 %tobool, %union.tree_node* null, %union.tree_node* %cond, !dbg !4672
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !4654, metadata !DIExpression()), !dbg !4662
  %conv46 = zext i8 %4 to i64, !dbg !4673
  br label %while.cond, !dbg !4675

while.cond:                                       ; preds = %cleanup, %if.end
  %expr.1 = phi %union.tree_node* [ %spec.select, %if.end ], [ %expr.2, %cleanup ], !dbg !4676
  %memoffset.0 = phi %struct.rtx_def* [ %cond19, %if.end ], [ %memoffset.1, %cleanup ], !dbg !4677
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.0, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !4654, metadata !DIExpression()), !dbg !4662
  %tobool26 = icmp eq %union.tree_node* %expr.1, null, !dbg !4675
  br i1 %tobool26, label %while.end.loopexit, label %while.body, !dbg !4675

while.body:                                       ; preds = %while.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4678
  %bf.load = load i64, i64* %5, align 8, !dbg !4678
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4679
  %cmp27 = icmp eq i64 %bf.cast2, 41, !dbg !4679
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !4680

if.then29:                                        ; preds = %while.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4681
  %arrayidx30 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4681
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx30, align 8, !dbg !4681
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4657, metadata !DIExpression()), !dbg !4682
  %call32 = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* nonnull %expr.1) #7, !dbg !4683
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !4661, metadata !DIExpression()), !dbg !4682
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4684
  %7 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4684
  %tobool33 = icmp eq %union.tree_node* %7, null, !dbg !4684
  br i1 %tobool33, label %cleanup, label %if.end35, !dbg !4686

if.end35:                                         ; preds = %if.then29
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4686
  %bf.load39 = load i64, i64* %8, align 8, !dbg !4687
  %bf.cast414 = and i64 %bf.load39, 65535, !dbg !4688
  %cmp42 = icmp eq i64 %bf.cast414, 23, !dbg !4688
  br i1 %cmp42, label %land.lhs.true, label %if.end56, !dbg !4689

land.lhs.true:                                    ; preds = %if.end35
  %call47 = tail call i32 @compare_tree_int(%union.tree_node* nonnull %7, i64 %conv46) #7, !dbg !4690
  %cmp48 = icmp sgt i32 %call47, -1, !dbg !4691
  br i1 %cmp48, label %land.lhs.true50, label %if.end56, !dbg !4692

land.lhs.true50:                                  ; preds = %land.lhs.true
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memoffset.0, i64 0, i32 1, !dbg !4693
  %arrayidx52 = bitcast %union.u* %u51 to i64*, !dbg !4693
  %9 = load i64, i64* %arrayidx52, align 8, !dbg !4693
  %cmp53 = icmp sgt i64 %9, -1, !dbg !4694
  br i1 %cmp53, label %cleanup, label %if.end56, !dbg !4695

if.end56:                                         ; preds = %land.lhs.true50, %land.lhs.true, %if.end35
  %call57 = tail call i32 @host_integerp(%union.tree_node* %call32, i32 1) #7, !dbg !4696
  %tobool58 = icmp eq i32 %call57, 0, !dbg !4696
  br i1 %tobool58, label %cleanup, label %if.end60, !dbg !4698

if.end60:                                         ; preds = %if.end56
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4699
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4654, metadata !DIExpression()), !dbg !4662
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memoffset.0, i64 0, i32 1, !dbg !4700
  %arrayidx66 = bitcast %union.u* %u64 to i64*, !dbg !4700
  %11 = load i64, i64* %arrayidx66, align 8, !dbg !4700
  %call67 = tail call i64 @tree_low_cst(%union.tree_node* %call32, i32 1) #7, !dbg !4700
  %add = add nsw i64 %11, %call67, !dbg !4700
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4700
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4700
  %call68 = tail call i64 @tree_low_cst(%union.tree_node* %13, i32 1) #7, !dbg !4700
  %div = sdiv i64 %call68, 8, !dbg !4700
  %add69 = add nsw i64 %add, %div, !dbg !4700
  %call70 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add69) #8, !dbg !4700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !4655, metadata !DIExpression()), !dbg !4662
  br label %cleanup, !dbg !4701

cleanup:                                          ; preds = %if.end56, %if.then29, %land.lhs.true50, %if.end60
  %expr.2 = phi %union.tree_node* [ %10, %if.end60 ], [ null, %if.then29 ], [ %expr.1, %land.lhs.true50 ], [ null, %if.end56 ], !dbg !4662
  %memoffset.1 = phi %struct.rtx_def* [ %call70, %if.end60 ], [ %memoffset.0, %if.then29 ], [ %memoffset.0, %land.lhs.true50 ], [ %memoffset.0, %if.end56 ], !dbg !4662
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end60 ], [ false, %if.then29 ], [ false, %land.lhs.true50 ], [ false, %if.end56 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.1, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.2, metadata !4654, metadata !DIExpression()), !dbg !4662
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end.loopexit, !llvm.loop !4702

if.else:                                          ; preds = %while.body
  %expr.1.lcssa12 = phi %union.tree_node* [ %expr.1, %while.body ], !dbg !4676
  %memoffset.0.lcssa11 = phi %struct.rtx_def* [ %memoffset.0, %while.body ], !dbg !4677
  %bf.cast2.lcssa = phi i64 [ %bf.cast2, %while.body ], !dbg !4679
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1.lcssa12, metadata !4654, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.0.lcssa11, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1.lcssa12, metadata !4654, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.0.lcssa11, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1.lcssa12, metadata !4654, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.0.lcssa11, metadata !4655, metadata !DIExpression()), !dbg !4662
  %arrayidx77 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast2.lcssa, !dbg !4704
  %14 = load i32, i32* %arrayidx77, align 4, !dbg !4704
  %cmp78 = icmp eq i32 %14, 3, !dbg !4704
  br i1 %cmp78, label %land.lhs.true80, label %if.else108, !dbg !4706

land.lhs.true80:                                  ; preds = %if.else
  %size_unit82 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.1.lcssa12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4707
  %15 = load %union.tree_node*, %union.tree_node** %size_unit82, align 8, !dbg !4707
  %tobool83 = icmp eq %union.tree_node* %15, null, !dbg !4707
  br i1 %tobool83, label %if.else108, label %land.lhs.true84, !dbg !4708

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4708
  %bf.load88 = load i64, i64* %16, align 8, !dbg !4709
  %bf.cast903 = and i64 %bf.load88, 65535, !dbg !4710
  %cmp91 = icmp eq i64 %bf.cast903, 23, !dbg !4710
  br i1 %cmp91, label %land.lhs.true93, label %if.else108, !dbg !4711

land.lhs.true93:                                  ; preds = %land.lhs.true84
  %call97 = tail call i32 @compare_tree_int(%union.tree_node* nonnull %15, i64 %conv46) #7, !dbg !4712
  %cmp98 = icmp sgt i32 %call97, -1, !dbg !4713
  br i1 %cmp98, label %land.lhs.true100, label %if.else108, !dbg !4714

land.lhs.true100:                                 ; preds = %land.lhs.true93
  %tobool101 = icmp eq %struct.rtx_def* %memoffset.0.lcssa11, null, !dbg !4715
  br i1 %tobool101, label %while.end, label %lor.lhs.false, !dbg !4716

lor.lhs.false:                                    ; preds = %land.lhs.true100
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memoffset.0.lcssa11, i64 0, i32 1, !dbg !4717
  %arrayidx104 = bitcast %union.u* %u102 to i64*, !dbg !4717
  %17 = load i64, i64* %arrayidx104, align 8, !dbg !4717
  %cmp105 = icmp sgt i64 %17, -1, !dbg !4718
  br i1 %cmp105, label %while.end, label %if.else108, !dbg !4719

if.else108:                                       ; preds = %land.lhs.true80, %lor.lhs.false, %land.lhs.true93, %land.lhs.true84, %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4654, metadata !DIExpression()), !dbg !4662
  br label %while.end, !dbg !4720

while.end.loopexit:                               ; preds = %cleanup, %while.cond
  %expr.3.ph = phi %union.tree_node* [ null, %while.cond ], [ %expr.2, %cleanup ]
  %memoffset.2.ph = phi %struct.rtx_def* [ %memoffset.0, %while.cond ], [ %memoffset.1, %cleanup ]
  br label %while.end, !dbg !4722

while.end:                                        ; preds = %while.end.loopexit, %land.lhs.true100, %lor.lhs.false, %if.else108
  %expr.3 = phi %union.tree_node* [ null, %if.else108 ], [ %expr.1.lcssa12, %lor.lhs.false ], [ %expr.1.lcssa12, %land.lhs.true100 ], [ %expr.3.ph, %while.end.loopexit ], !dbg !4662
  %memoffset.2 = phi %struct.rtx_def* [ %memoffset.0.lcssa11, %if.else108 ], [ %memoffset.0.lcssa11, %lor.lhs.false ], [ null, %land.lhs.true100 ], [ %memoffset.2.ph, %while.end.loopexit ], !dbg !4677
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memoffset.2, metadata !4655, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.3, metadata !4654, metadata !DIExpression()), !dbg !4662
  %tobool110 = icmp eq %union.tree_node* %expr.3, null, !dbg !4722
  %spec.select1 = select i1 %tobool110, %struct.rtx_def* null, %struct.rtx_def* %memoffset.2, !dbg !4724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select1, metadata !4655, metadata !DIExpression()), !dbg !4662
  %call114 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv46) #8, !dbg !4725
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4726
  %cmp119 = icmp eq %struct.mem_attrs* %18, null, !dbg !4726
  br i1 %cmp119, label %cond.end127, label %cond.true121, !dbg !4726

cond.true121:                                     ; preds = %while.end
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 4, !dbg !4726
  %19 = load i32, i32* %align, align 4, !dbg !4726
  br label %cond.end127, !dbg !4726

cond.end127:                                      ; preds = %while.end, %cond.true121
  %cond128 = phi i32 [ %19, %cond.true121 ], [ 8, %while.end ], !dbg !4726
  br i1 %cmp119, label %cond.end142, label %cond.false136, !dbg !4727

cond.false136:                                    ; preds = %cond.end127
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 5, !dbg !4727
  %20 = load i8, i8* %addrspace, align 8, !dbg !4727
  br label %cond.end142, !dbg !4727

cond.end142:                                      ; preds = %cond.end127, %cond.false136
  %cond143 = phi i8 [ %20, %cond.false136 ], [ 0, %cond.end127 ]
  %call145 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 0, %union.tree_node* %expr.3, %struct.rtx_def* %spec.select1, %struct.rtx_def* %call114, i32 %cond128, i8 zeroext %cond143, i32 %mode) #8, !dbg !4728
  store %struct.mem_attrs* %call145, %struct.mem_attrs** %rt_mem, align 8, !dbg !4729
  br label %cleanup150, !dbg !4730

cleanup150:                                       ; preds = %cond.end18, %cond.end142
  ret %struct.rtx_def* %call, !dbg !4731
}

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_spill_slot_decl(i8 zeroext %force_build_p) local_unnamed_addr #5 !dbg !4732 {
entry:
  call void @llvm.dbg.value(metadata i8 %force_build_p, metadata !4736, metadata !DIExpression()), !dbg !4739
  %0 = load %union.tree_node*, %union.tree_node** @spill_slot_decl, align 8, !dbg !4740
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4737, metadata !DIExpression()), !dbg !4739
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !4741
  %tobool1 = icmp ne i8 %force_build_p, 0, !dbg !4743
  %or.cond = and i1 %tobool, %tobool1, !dbg !4744
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !4744

if.end:                                           ; preds = %entry
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_minimal**), align 8, !dbg !4745
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 1, !dbg !4745
  %2 = load i32, i32* %locus, align 8, !dbg !4745
  %call = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !4745
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4745
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 %2, i32 32, %union.tree_node* %call, %union.tree_node* %3) #7, !dbg !4745
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4737, metadata !DIExpression()), !dbg !4739
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4746
  %4 = bitcast i40* %artificial_flag to i64*, !dbg !4746
  %bf.load = load i64, i64* %4, align 8, !dbg !4747
  %bf.set6 = or i64 %bf.load, 5120, !dbg !4748
  store i64 %bf.set6, i64* %4, align 8, !dbg !4748
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4749
  %bf.load7 = load i64, i64* %5, align 8, !dbg !4750
  %bf.set13 = or i64 %bf.load7, 50331648, !dbg !4751
  store i64 %bf.set13, i64* %5, align 8, !dbg !4751
  store %union.tree_node* %call2, %union.tree_node** @spill_slot_decl, align 8, !dbg !4752
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !4753
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %6) #8, !dbg !4754
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !4738, metadata !DIExpression()), !dbg !4739
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 0, !dbg !4755
  %bf.load15 = load i32, i32* %7, align 8, !dbg !4756
  %bf.set17 = or i32 %bf.load15, 33554432, !dbg !4756
  store i32 %bf.set17, i32* %7, align 8, !dbg !4756
  %call18 = tail call i32 @new_alias_set() #7, !dbg !4757
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4758
  %call19 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %call18, %union.tree_node* %call2, %struct.rtx_def* %8, %struct.rtx_def* null, i32 0, i8 zeroext 0, i32 1) #8, !dbg !4759
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4760
  %rt_mem = bitcast %union.rtunion_def* %9 to %struct.mem_attrs**, !dbg !4760
  store %struct.mem_attrs* %call19, %struct.mem_attrs** %rt_mem, align 8, !dbg !4761
  tail call void @set_decl_rtl(%union.tree_node* %call2, %struct.rtx_def* %call14) #8, !dbg !4762
  br label %cleanup, !dbg !4763

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call2, %if.end ], [ %0, %entry ], !dbg !4739
  ret %union.tree_node* %retval.0, !dbg !4764
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local i32 @new_alias_set() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_mem_attrs_for_spill(%struct.rtx_def* %mem) local_unnamed_addr #5 !dbg !4765 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4767, metadata !DIExpression()), !dbg !4772
  %call = tail call %union.tree_node* @get_spill_slot_decl(i8 zeroext 1) #8, !dbg !4773
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4771, metadata !DIExpression()), !dbg !4772
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4774
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4774
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4774
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4774

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4774

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %call) #7, !dbg !4774
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4774
  br label %cond.end, !dbg !4774

cond.end:                                         ; preds = %cond.false, %cond.true
  %1 = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %0, %cond.true ], !dbg !4774
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4774
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !4774
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4774
  %cmp = icmp eq %struct.mem_attrs* %3, null, !dbg !4774
  br i1 %cmp, label %cond.end23, label %cond.false6, !dbg !4774

cond.false6:                                      ; preds = %cond.end
  %tobool9 = icmp eq %struct.rtx_def* %1, null, !dbg !4774
  br i1 %tobool9, label %cond.false13, label %cond.true10, !dbg !4774

cond.true10:                                      ; preds = %cond.false6
  br label %cond.end16, !dbg !4774

cond.false13:                                     ; preds = %cond.false6
  tail call void @make_decl_rtl(%union.tree_node* %call) #7, !dbg !4774
  %cond17.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4774
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond17.pre, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4772
  %rt_mem21.phi.trans.insert = bitcast %union.rtunion_def* %.phi.trans.insert to %struct.mem_attrs**, !dbg !4772
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem21.phi.trans.insert, align 8, !dbg !4774
  br label %cond.end16, !dbg !4774

cond.end16:                                       ; preds = %cond.false13, %cond.true10
  %4 = phi %struct.mem_attrs* [ %.pre, %cond.false13 ], [ %3, %cond.true10 ], !dbg !4774
  %alias22 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %4, i64 0, i32 3, !dbg !4774
  %5 = load i32, i32* %alias22, align 8, !dbg !4774
  br label %cond.end23, !dbg !4774

cond.end23:                                       ; preds = %cond.end, %cond.end16
  %cond24 = phi i32 [ %5, %cond.end16 ], [ 0, %cond.end ], !dbg !4774
  call void @llvm.dbg.value(metadata i32 %cond24, metadata !4768, metadata !DIExpression()), !dbg !4772
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4775
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !4775
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4769, metadata !DIExpression()), !dbg !4772
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4770, metadata !DIExpression()), !dbg !4772
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4777
  %bf.load = load i32, i32* %8, align 8, !dbg !4777
  %bf.clear = and i32 %bf.load, 65535, !dbg !4777
  %cmp28 = icmp eq i32 %bf.clear, 49, !dbg !4779
  br i1 %cmp28, label %land.lhs.true, label %if.end, !dbg !4780

land.lhs.true:                                    ; preds = %cond.end23
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4781
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !4781
  %11 = load i32*, i32** %10, align 8, !dbg !4781
  %bf.load33 = load i32, i32* %11, align 8, !dbg !4781
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4781
  %cmp35 = icmp eq i32 %bf.clear34, 30, !dbg !4781
  br i1 %cmp35, label %if.then, label %if.end, !dbg !4782

if.then:                                          ; preds = %land.lhs.true
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !4782
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4770, metadata !DIExpression()), !dbg !4772
  br label %if.end, !dbg !4783

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end23
  %offset.0 = phi %struct.rtx_def* [ %12, %if.then ], [ %7, %land.lhs.true ], [ %7, %cond.end23 ], !dbg !4772
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset.0, metadata !4770, metadata !DIExpression()), !dbg !4772
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4784
  %rt_mem43 = bitcast %union.rtunion_def* %13 to %struct.mem_attrs**, !dbg !4784
  %14 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem43, align 8, !dbg !4784
  %cmp44 = icmp eq %struct.mem_attrs* %14, null, !dbg !4784
  br i1 %cmp44, label %cond.false50, label %cond.true45, !dbg !4784

cond.true45:                                      ; preds = %if.end
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %14, i64 0, i32 2, !dbg !4784
  %15 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !4784
  br label %cond.end64, !dbg !4784

cond.false50:                                     ; preds = %if.end
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4784
  %bf.load51 = load i32, i32* %16, align 8, !dbg !4784
  %bf.clear52 = and i32 %bf.load51, 16711680, !dbg !4784
  %cmp53 = icmp eq i32 %bf.clear52, 65536, !dbg !4784
  br i1 %cmp53, label %cond.end64, label %cond.true54, !dbg !4784

cond.true54:                                      ; preds = %cond.false50
  %bf.lshr56 = lshr i32 %bf.load51, 16, !dbg !4784
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !4784
  %idxprom = zext i32 %bf.clear57 to i64, !dbg !4784
  %arrayidx58 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4784
  %17 = load i8, i8* %arrayidx58, align 1, !dbg !4784
  %conv59 = zext i8 %17 to i64, !dbg !4784
  %call60 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv59) #8, !dbg !4784
  %.pre3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem43, align 8, !dbg !4785
  br label %cond.end64, !dbg !4784

cond.end64:                                       ; preds = %cond.false50, %cond.true54, %cond.true45
  %18 = phi %struct.mem_attrs* [ %14, %cond.true45 ], [ %.pre3, %cond.true54 ], [ null, %cond.false50 ], !dbg !4785
  %cond65 = phi %struct.rtx_def* [ %15, %cond.true45 ], [ %call60, %cond.true54 ], [ null, %cond.false50 ], !dbg !4784
  %cmp70 = icmp eq %struct.mem_attrs* %18, null, !dbg !4785
  br i1 %cmp70, label %cond.end78, label %cond.true72, !dbg !4785

cond.true72:                                      ; preds = %cond.end64
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 4, !dbg !4785
  %19 = load i32, i32* %align, align 4, !dbg !4785
  br label %cond.end78, !dbg !4785

cond.end78:                                       ; preds = %cond.end64, %cond.true72
  %cond79 = phi i32 [ %19, %cond.true72 ], [ 8, %cond.end64 ], !dbg !4785
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4786
  %bf.load80 = load i32, i32* %20, align 8, !dbg !4786
  %bf.lshr81 = lshr i32 %bf.load80, 16, !dbg !4786
  %bf.clear82 = and i32 %bf.lshr81, 255, !dbg !4786
  %call83 = tail call fastcc %struct.mem_attrs* @get_mem_attrs(i32 %cond24, %union.tree_node* %call, %struct.rtx_def* %offset.0, %struct.rtx_def* %cond65, i32 %cond79, i8 zeroext 0, i32 %bf.clear82) #8, !dbg !4787
  store %struct.mem_attrs* %call83, %struct.mem_attrs** %rt_mem43, align 8, !dbg !4788
  %bf.load88 = load i32, i32* %20, align 8, !dbg !4789
  %bf.set = or i32 %bf.load88, 33554432, !dbg !4789
  store i32 %bf.set, i32* %20, align 8, !dbg !4789
  ret void, !dbg !4790
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #5 !dbg !4791 {
entry:
  %0 = load i32, i32* @label_num, align 4, !dbg !4794
  %inc = add nsw i32 %0, 1, !dbg !4794
  store i32 %inc, i32* @label_num, align 4, !dbg !4794
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_iuuB00is_stat(i32 12, i32 0, i32 0, %struct.rtx_def* null, %struct.rtx_def* null, %struct.basic_block_def* null, i32 %0, i8* null) #7, !dbg !4794
  ret %struct.rtx_def* %call, !dbg !4795
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_iuuB00is_stat(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_new_first_and_last_insn(%struct.rtx_def* %first, %struct.rtx_def* %last) local_unnamed_addr #5 !dbg !4796 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !4798, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !4799, metadata !DIExpression()), !dbg !4804
  store %struct.rtx_def* %first, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !4805
  store %struct.rtx_def* %last, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !4806
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !4807
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4808
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 117, i32 1, !dbg !4808
  %1 = load i32, i32* %value, align 8, !dbg !4808
  %2 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4809
  %3 = or i32 %1, %2, !dbg !4810
  %4 = icmp eq i32 %3, 0, !dbg !4810
  br i1 %4, label %for.cond45.preheader, label %if.then, !dbg !4810

for.cond45.preheader:                             ; preds = %entry
  br label %for.cond45, !dbg !4811

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !4801, metadata !DIExpression()), !dbg !4813
  %sub = add nsw i32 %1, -1, !dbg !4814
  store i32 %sub, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !4815
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !4816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !4800, metadata !DIExpression()), !dbg !4804
  br label %for.cond, !dbg !4817

for.cond:                                         ; preds = %for.inc, %if.then
  %cond.pre = phi i32 [ 0, %if.then ], [ %7, %for.inc ]
  %cond30.pre = phi i32 [ %sub, %if.then ], [ %8, %for.inc ]
  %insn.0 = phi %struct.rtx_def* [ %first, %if.then ], [ %10, %for.inc ], !dbg !4819
  %debug_count.0 = phi i32 [ 0, %if.then ], [ %debug_count.2, %for.inc ], !dbg !4820
  call void @llvm.dbg.value(metadata i32 %debug_count.0, metadata !4801, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4800, metadata !DIExpression()), !dbg !4804
  %tobool4 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4821
  br i1 %tobool4, label %for.end, label %for.body, !dbg !4821

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4822
  %rt_int = bitcast %union.rtunion_def* %arrayidx5 to i32*, !dbg !4822
  %5 = load i32, i32* %rt_int, align 8, !dbg !4822
  %cmp = icmp slt i32 %5, %1, !dbg !4825
  br i1 %cmp, label %if.then8, label %if.else, !dbg !4826

if.then8:                                         ; preds = %for.body
  %cmp13 = icmp sgt i32 %cond.pre, %5, !dbg !4827
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4827

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !4827

cond.false:                                       ; preds = %if.then8
  br label %cond.end, !dbg !4827

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %cond.pre, %cond.true ], [ %5, %cond.false ], !dbg !4827
  store i32 %cond, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !4828
  br label %for.inc, !dbg !4829

if.else:                                          ; preds = %for.body
  %cmp22 = icmp sgt i32 %cond30.pre, %5, !dbg !4830
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !4830

cond.true23:                                      ; preds = %if.else
  br label %cond.end29, !dbg !4830

cond.false24:                                     ; preds = %if.else
  br label %cond.end29, !dbg !4830

cond.end29:                                       ; preds = %cond.false24, %cond.true23
  %cond30 = phi i32 [ %cond30.pre, %cond.true23 ], [ %5, %cond.false24 ], !dbg !4830
  store i32 %cond30, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !4832
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4833
  %bf.load = load i32, i32* %6, align 8, !dbg !4833
  %bf.clear = and i32 %bf.load, 65535, !dbg !4833
  %cmp31 = icmp eq i32 %bf.clear, 7, !dbg !4833
  %inc = zext i1 %cmp31 to i32, !dbg !4835
  %spec.select = add nsw i32 %debug_count.0, %inc, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4801, metadata !DIExpression()), !dbg !4813
  br label %for.inc

for.inc:                                          ; preds = %cond.end, %cond.end29
  %7 = phi i32 [ %cond, %cond.end ], [ %cond.pre, %cond.end29 ]
  %8 = phi i32 [ %cond30.pre, %cond.end ], [ %cond30, %cond.end29 ]
  %debug_count.2 = phi i32 [ %debug_count.0, %cond.end ], [ %spec.select, %cond.end29 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %debug_count.2, metadata !4801, metadata !DIExpression()), !dbg !4813
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4836
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !4836
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4800, metadata !DIExpression()), !dbg !4804
  br label %for.cond, !dbg !4837, !llvm.loop !4838

for.end:                                          ; preds = %for.cond
  %cond.pre.lcssa = phi i32 [ %cond.pre, %for.cond ]
  %cond30.pre.lcssa = phi i32 [ %cond30.pre, %for.cond ]
  %debug_count.0.lcssa = phi i32 [ %debug_count.0, %for.cond ], !dbg !4820
  call void @llvm.dbg.value(metadata i32 %debug_count.0.lcssa, metadata !4801, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 %debug_count.0.lcssa, metadata !4801, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 %debug_count.0.lcssa, metadata !4801, metadata !DIExpression()), !dbg !4813
  %tobool37 = icmp eq i32 %debug_count.0.lcssa, 0, !dbg !4840
  br i1 %tobool37, label %if.else41, label %if.then38, !dbg !4842

if.then38:                                        ; preds = %for.end
  %add = add nsw i32 %1, %debug_count.0.lcssa, !dbg !4843
  store i32 %add, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !4844
  br label %if.end67, !dbg !4845

if.else41:                                        ; preds = %for.end
  %inc42 = add nsw i32 %cond.pre.lcssa, 1, !dbg !4846
  store i32 %inc42, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !4846
  br label %if.end67

for.cond45:                                       ; preds = %for.cond45.preheader, %cond.end59
  %cond60.pre = phi i32 [ %cond60, %cond.end59 ], [ 0, %for.cond45.preheader ]
  %insn.1 = phi %struct.rtx_def* [ %13, %cond.end59 ], [ %first, %for.cond45.preheader ], !dbg !4847
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4800, metadata !DIExpression()), !dbg !4804
  %tobool46 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !4811
  br i1 %tobool46, label %if.end67.loopexit, label %for.body47, !dbg !4811

for.body47:                                       ; preds = %for.cond45
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4848
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !4848
  %11 = load i32, i32* %rt_int51, align 8, !dbg !4848
  %cmp52 = icmp sgt i32 %cond60.pre, %11, !dbg !4848
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !4848

cond.true53:                                      ; preds = %for.body47
  br label %cond.end59, !dbg !4848

cond.false54:                                     ; preds = %for.body47
  br label %cond.end59, !dbg !4848

cond.end59:                                       ; preds = %cond.false54, %cond.true53
  %cond60 = phi i32 [ %cond60.pre, %cond.true53 ], [ %11, %cond.false54 ], !dbg !4848
  store i32 %cond60, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !4850
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4851
  %rt_rtx65 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4851
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !4851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !4800, metadata !DIExpression()), !dbg !4804
  br label %for.cond45, !dbg !4852, !llvm.loop !4853

if.end67.loopexit:                                ; preds = %for.cond45
  %cond60.pre.lcssa = phi i32 [ %cond60.pre, %for.cond45 ]
  br label %if.end67, !dbg !4855

if.end67:                                         ; preds = %if.end67.loopexit, %if.then38, %if.else41
  %14 = phi i32 [ %cond60.pre.lcssa, %if.end67.loopexit ], [ %cond30.pre.lcssa, %if.then38 ], [ %cond30.pre.lcssa, %if.else41 ], !dbg !4855
  %inc68 = add nsw i32 %14, 1, !dbg !4855
  store i32 %inc68, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !4855
  ret void, !dbg !4856
}

; Function Attrs: nounwind uwtable
define dso_local void @unshare_all_rtl_again(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4857 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4859, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4860, metadata !DIExpression()), !dbg !4862
  br label %for.cond, !dbg !4863

for.cond:                                         ; preds = %for.inc, %entry
  %p.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %6, %for.inc ], !dbg !4865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0, metadata !4860, metadata !DIExpression()), !dbg !4862
  %tobool = icmp eq %struct.rtx_def* %p.0, null, !dbg !4866
  br i1 %tobool, label %for.end, label %for.body, !dbg !4866

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 0, !dbg !4867
  %bf.load = load i32, i32* %0, align 8, !dbg !4867
  %bf.clear = and i32 %bf.load, 65535, !dbg !4867
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4867
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4867

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4867
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !4867

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4867
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !4867

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4867
  br i1 %cmp11, label %if.then, label %for.inc, !dbg !4870

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, !dbg !4871
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4871
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4871
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4871
  tail call void @reset_used_flags(%struct.rtx_def* %2) #8, !dbg !4873
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4874
  %rt_rtx15 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4874
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !4874
  tail call void @reset_used_flags(%struct.rtx_def* %4) #8, !dbg !4875
  br label %for.inc, !dbg !4876

for.inc:                                          ; preds = %lor.lhs.false8, %if.then
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4877
  %rt_rtx19 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !4877
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4860, metadata !DIExpression()), !dbg !4862
  br label %for.cond, !dbg !4878, !llvm.loop !4879

for.end:                                          ; preds = %for.cond
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4881
  %decl20 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 6, !dbg !4881
  %8 = bitcast %union.tree_node** %decl20 to %struct.tree_decl_common**, !dbg !4881
  %9 = load %struct.tree_decl_common*, %struct.tree_decl_common** %8, align 8, !dbg !4881
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %9, i64 0, i32 5, !dbg !4881
  %10 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4881
  tail call fastcc void @set_used_decls(%union.tree_node* %10) #8, !dbg !4882
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4883
  %decl22 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 6, !dbg !4883
  %12 = bitcast %union.tree_node** %decl22 to %struct.tree_decl_non_common**, !dbg !4883
  %13 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %12, align 8, !dbg !4883
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %13, i64 0, i32 2, !dbg !4883
  br label %for.cond23, !dbg !4885

for.cond23:                                       ; preds = %cond.end, %for.end
  %decl.0.in = phi %union.tree_node** [ %arguments, %for.end ], [ %chain, %cond.end ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !4886
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4861, metadata !DIExpression()), !dbg !4862
  %tobool24 = icmp eq %union.tree_node* %decl.0, null, !dbg !4887
  br i1 %tobool24, label %for.end32, label %for.body25, !dbg !4887

for.body25:                                       ; preds = %for.cond23
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4888
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4888
  %tobool26 = icmp eq %struct.rtx_def* %14, null, !dbg !4888
  br i1 %tobool26, label %cond.false, label %cond.true, !dbg !4888

cond.true:                                        ; preds = %for.body25
  br label %cond.end, !dbg !4888

cond.false:                                       ; preds = %for.body25
  tail call void @make_decl_rtl(%union.tree_node* nonnull %decl.0) #7, !dbg !4888
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4888
  br label %cond.end, !dbg !4888

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %14, %cond.true ], !dbg !4888
  tail call void @set_used_flags(%struct.rtx_def* %cond) #8, !dbg !4890
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4891
  br label %for.cond23, !dbg !4892, !llvm.loop !4893

for.end32:                                        ; preds = %for.cond23
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !4895
  tail call void @reset_used_flags(%struct.rtx_def* %15) #8, !dbg !4896
  tail call fastcc void @unshare_all_rtl_1(%struct.rtx_def* %insn) #8, !dbg !4897
  ret void, !dbg !4898
}

; Function Attrs: nounwind uwtable
define dso_local void @reset_used_flags(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !4899 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4901, metadata !DIExpression()), !dbg !4908
  br label %repeat, !dbg !4909

repeat.loopexit:                                  ; preds = %sw.bb9
  %.lcssa = phi %struct.rtx_def* [ %5, %sw.bb9 ], !dbg !4910
  br label %repeat, !dbg !4915

repeat:                                           ; preds = %repeat.loopexit, %entry
  %x.addr.0 = phi %struct.rtx_def* [ %x, %entry ], [ %.lcssa, %repeat.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !4901, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.label(metadata !4907), !dbg !4916
  %cmp = icmp eq %struct.rtx_def* %x.addr.0, null, !dbg !4917
  br i1 %cmp, label %cleanup.cont.loopexit1, label %if.end, !dbg !4915

if.end:                                           ; preds = %repeat
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !4919
  %bf.load = load i32, i32* %0, align 8, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !4904, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4908
  %trunc = trunc i32 %bf.load to i16, !dbg !4920
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup.cont.loopexit1
    i16 2, label %cleanup.cont.loopexit1
    i16 1, label %cleanup.cont.loopexit1
    i16 30, label %cleanup.cont.loopexit1
    i16 32, label %cleanup.cont.loopexit1
    i16 31, label %cleanup.cont.loopexit1
    i16 33, label %cleanup.cont.loopexit1
    i16 45, label %cleanup.cont.loopexit1
    i16 12, label %cleanup.cont.loopexit1
    i16 36, label %cleanup.cont.loopexit1
    i16 46, label %cleanup.cont.loopexit1
    i16 7, label %cleanup.cont.loopexit1
    i16 8, label %cleanup.cont.loopexit1
    i16 9, label %cleanup.cont.loopexit1
    i16 10, label %cleanup.cont.loopexit1
    i16 13, label %cleanup.cont.loopexit1
    i16 44, label %cleanup.cont.loopexit1
    i16 11, label %cleanup.cont.loopexit1
  ], !dbg !4920

sw.epilog:                                        ; preds = %if.end
  %bf.clear = and i32 %bf.load, 65535, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4904, metadata !DIExpression()), !dbg !4908
  %bf.clear3 = and i32 %bf.load, -536870913, !dbg !4921
  store i32 %bf.clear3, i32* %0, align 8, !dbg !4921
  %idxprom = zext i32 %bf.clear to i64, !dbg !4922
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4922
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %1, metadata !4905, metadata !DIExpression()), !dbg !4908
  %arrayidx5 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4923
  %2 = load i8, i8* %arrayidx5, align 1, !dbg !4923
  %conv = zext i8 %2 to i64, !dbg !4923
  call void @llvm.dbg.value(metadata i8 %2, metadata !4906, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 0, metadata !4902, metadata !DIExpression()), !dbg !4908
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, !dbg !4924
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !4924
  %sub = add nuw nsw i64 %conv, 4294967295, !dbg !4927
  %3 = and i64 %sub, 4294967295, !dbg !4929
  %wide.trip.count = zext i8 %2 to i64, !dbg !4930
  br label %for.cond, !dbg !4929

for.cond:                                         ; preds = %for.inc38, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc38 ], [ 0, %sw.epilog ], !dbg !4908
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc38 ], [ %1, %sw.epilog ], !dbg !4908
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !4902, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !4905, metadata !DIExpression()), !dbg !4908
  %exitcond = icmp eq i64 %indvars.iv2, %wide.trip.count, !dbg !4930
  br i1 %exitcond, label %cleanup.cont.loopexit, label %for.body, !dbg !4931

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4905, metadata !DIExpression()), !dbg !4908
  %4 = load i8, i8* %format_ptr.0, align 1, !dbg !4933
  %conv8 = sext i8 %4 to i32, !dbg !4933
  switch i32 %conv8, label %for.inc38 [
    i32 101, label %sw.bb9
    i32 69, label %for.cond22.preheader
  ], !dbg !4934

for.cond22.preheader:                             ; preds = %for.body
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 %indvars.iv2, !dbg !4924
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtvec_def**, !dbg !4924
  br label %for.cond22, !dbg !4935

sw.bb9:                                           ; preds = %for.body
  %cmp10 = icmp eq i64 %indvars.iv2, %3, !dbg !4936
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 %indvars.iv2, !dbg !4910
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !4910
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4910
  br i1 %cmp10, label %repeat.loopexit, label %if.end15, !dbg !4937

if.end15:                                         ; preds = %sw.bb9
  tail call void @reset_used_flags(%struct.rtx_def* %5) #8, !dbg !4938
  br label %for.inc38, !dbg !4939

for.cond22:                                       ; preds = %for.cond22.preheader, %for.body29
  %indvars.iv = phi i64 [ 0, %for.cond22.preheader ], [ %indvars.iv.next, %for.body29 ], !dbg !4940
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4903, metadata !DIExpression()), !dbg !4908
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4941
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !4941
  %7 = load i32, i32* %num_elem, align 8, !dbg !4941
  %8 = sext i32 %7 to i64, !dbg !4942
  %cmp27 = icmp slt i64 %indvars.iv, %8, !dbg !4942
  br i1 %cmp27, label %for.body29, label %for.inc38.loopexit, !dbg !4935

for.body29:                                       ; preds = %for.cond22
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv, !dbg !4943
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx36, align 8, !dbg !4943
  tail call void @reset_used_flags(%struct.rtx_def* %9) #8, !dbg !4944
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4945
  call void @llvm.dbg.value(metadata i32 undef, metadata !4903, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4908
  br label %for.cond22, !dbg !4946, !llvm.loop !4947

for.inc38.loopexit:                               ; preds = %for.cond22
  br label %for.inc38, !dbg !4949

for.inc38:                                        ; preds = %for.inc38.loopexit, %if.end15, %for.body
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !4949
  call void @llvm.dbg.value(metadata i32 undef, metadata !4902, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4908
  br label %for.cond, !dbg !4950, !llvm.loop !4951

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !4953

cleanup.cont.loopexit1:                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %repeat
  br label %cleanup.cont, !dbg !4953

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit1, %cleanup.cont.loopexit
  ret void, !dbg !4953
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_used_decls(%union.tree_node* %blk) unnamed_addr #5 !dbg !4954 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %blk, metadata !4958, metadata !DIExpression()), !dbg !4960
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %blk, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4961
  br label %for.cond, !dbg !4963

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !4964
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4959, metadata !DIExpression()), !dbg !4960
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !4965
  br i1 %tobool, label %for.end, label %for.body, !dbg !4965

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4966
  %bf.load = load i64, i64* %1, align 8, !dbg !4966
  %bf.cast = and i64 %bf.load, 65535, !dbg !4966
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !4966
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !4966
  %tobool2 = icmp eq i8 %2, 0, !dbg !4966
  br i1 %tobool2, label %for.inc, label %land.lhs.true, !dbg !4966

land.lhs.true:                                    ; preds = %for.body
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4966
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4966
  %cmp = icmp eq %struct.rtx_def* %3, null, !dbg !4966
  br i1 %cmp, label %for.inc, label %if.then, !dbg !4969

if.then:                                          ; preds = %land.lhs.true
  br i1 false, label %cond.false, label %cond.true, !dbg !4970

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4970

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4970

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @set_used_flags(%struct.rtx_def* nonnull %3) #8, !dbg !4971
  br label %for.inc, !dbg !4971

for.inc:                                          ; preds = %land.lhs.true, %for.body, %cond.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4972
  br label %for.cond, !dbg !4973, !llvm.loop !4974

for.end:                                          ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %blk, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4976
  br label %for.cond12, !dbg !4978

for.cond12:                                       ; preds = %for.body14, %for.end
  %t.1.in = phi %union.tree_node** [ %4, %for.end ], [ %chain17, %for.body14 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !4979
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !4959, metadata !DIExpression()), !dbg !4960
  %tobool13 = icmp eq %union.tree_node* %t.1, null, !dbg !4980
  br i1 %tobool13, label %for.end18, label %for.body14, !dbg !4980

for.body14:                                       ; preds = %for.cond12
  tail call fastcc void @set_used_decls(%union.tree_node* nonnull %t.1) #8, !dbg !4981
  %chain17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4983
  br label %for.cond12, !dbg !4984, !llvm.loop !4985

for.end18:                                        ; preds = %for.cond12
  ret void, !dbg !4987
}

; Function Attrs: nounwind uwtable
define dso_local void @set_used_flags(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !4988 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4990, metadata !DIExpression()), !dbg !4995
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !4996
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !4998

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4999
  %bf.load = load i32, i32* %0, align 8, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !4993, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4995
  %trunc = trunc i32 %bf.load to i16, !dbg !5000
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup.cont
    i16 2, label %cleanup.cont
    i16 1, label %cleanup.cont
    i16 30, label %cleanup.cont
    i16 32, label %cleanup.cont
    i16 31, label %cleanup.cont
    i16 33, label %cleanup.cont
    i16 45, label %cleanup.cont
    i16 12, label %cleanup.cont
    i16 36, label %cleanup.cont
    i16 46, label %cleanup.cont
    i16 7, label %cleanup.cont
    i16 8, label %cleanup.cont
    i16 9, label %cleanup.cont
    i16 10, label %cleanup.cont
    i16 13, label %cleanup.cont
    i16 44, label %cleanup.cont
    i16 11, label %cleanup.cont
  ], !dbg !5000

sw.epilog:                                        ; preds = %if.end
  %bf.clear = and i32 %bf.load, 65535, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4993, metadata !DIExpression()), !dbg !4995
  %bf.set = or i32 %bf.load, 536870912, !dbg !5001
  store i32 %bf.set, i32* %0, align 8, !dbg !5001
  %idxprom = zext i32 %bf.clear to i64, !dbg !5002
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5002
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %1, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i32 0, metadata !4991, metadata !DIExpression()), !dbg !4995
  %arrayidx5 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5003
  %2 = load i8, i8* %arrayidx5, align 1, !dbg !5003
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !5006
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !5006
  %wide.trip.count = zext i8 %2 to i64, !dbg !5011
  br label %for.cond, !dbg !5012

for.cond:                                         ; preds = %for.inc29, %sw.epilog
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc29 ], [ 0, %sw.epilog ], !dbg !4995
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc29 ], [ %1, %sw.epilog ], !dbg !4995
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4991, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !4994, metadata !DIExpression()), !dbg !4995
  %exitcond = icmp eq i64 %indvars.iv1, %wide.trip.count, !dbg !5011
  br i1 %exitcond, label %cleanup.cont.loopexit, label %for.body, !dbg !5013

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4994, metadata !DIExpression()), !dbg !4995
  %3 = load i8, i8* %format_ptr.0, align 1, !dbg !5015
  %conv8 = sext i8 %3 to i32, !dbg !5015
  switch i32 %conv8, label %for.inc29 [
    i32 101, label %sw.bb9
    i32 69, label %for.cond13.preheader
  ], !dbg !5016

for.cond13.preheader:                             ; preds = %for.body
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 %indvars.iv1, !dbg !5006
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !5006
  br label %for.cond13, !dbg !5017

sw.bb9:                                           ; preds = %for.body
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 %indvars.iv1, !dbg !5018
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5018
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5018
  tail call void @set_used_flags(%struct.rtx_def* %4) #8, !dbg !5019
  br label %for.inc29, !dbg !5020

for.cond13:                                       ; preds = %for.cond13.preheader, %for.body20
  %indvars.iv = phi i64 [ 0, %for.cond13.preheader ], [ %indvars.iv.next, %for.body20 ], !dbg !5021
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4992, metadata !DIExpression()), !dbg !4995
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5022
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 0, !dbg !5022
  %6 = load i32, i32* %num_elem, align 8, !dbg !5022
  %7 = sext i32 %6 to i64, !dbg !5023
  %cmp18 = icmp slt i64 %indvars.iv, %7, !dbg !5023
  br i1 %cmp18, label %for.body20, label %for.inc29.loopexit, !dbg !5017

for.body20:                                       ; preds = %for.cond13
  %arrayidx27 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv, !dbg !5024
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx27, align 8, !dbg !5024
  tail call void @set_used_flags(%struct.rtx_def* %8) #8, !dbg !5025
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5026
  call void @llvm.dbg.value(metadata i32 undef, metadata !4992, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4995
  br label %for.cond13, !dbg !5027, !llvm.loop !5028

for.inc29.loopexit:                               ; preds = %for.cond13
  br label %for.inc29, !dbg !5030

for.inc29:                                        ; preds = %for.inc29.loopexit, %sw.bb9, %for.body
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5030
  call void @llvm.dbg.value(metadata i32 undef, metadata !4991, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4995
  br label %for.cond, !dbg !5031, !llvm.loop !5032

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5034

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  ret void, !dbg !5034
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unshare_all_rtl_1(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5035 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5037, metadata !DIExpression()), !dbg !5038
  tail call void @unshare_all_rtl_in_chain(%struct.rtx_def* %insn) #8, !dbg !5039
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !5040
  %call = tail call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %0) #8, !dbg !5041
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 13), align 8, !dbg !5042
  ret void, !dbg !5043
}

; Function Attrs: nounwind uwtable
define dso_local i32 @unshare_all_rtl() #5 !dbg !5044 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #8, !dbg !5045
  tail call fastcc void @unshare_all_rtl_1(%struct.rtx_def* %call) #8, !dbg !5046
  ret i32 0, !dbg !5047
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #5 !dbg !5048 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !5049
  ret %struct.rtx_def* %0, !dbg !5050
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_rtl_sharing() local_unnamed_addr #5 !dbg !5051 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #8, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5055, metadata !DIExpression()), !dbg !5066
  br label %for.cond, !dbg !5067

for.cond:                                         ; preds = %for.inc63, %entry
  %p.0 = phi %struct.rtx_def* [ %call, %entry ], [ %17, %for.inc63 ], !dbg !5068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0, metadata !5055, metadata !DIExpression()), !dbg !5066
  %tobool = icmp eq %struct.rtx_def* %p.0, null, !dbg !5069
  br i1 %tobool, label %for.end68, label %for.body, !dbg !5069

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 0, !dbg !5070
  %bf.load = load i32, i32* %0, align 8, !dbg !5070
  %bf.clear = and i32 %bf.load, 65535, !dbg !5070
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5070
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5070

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5070
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5070

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5070
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !5070

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5070
  br i1 %cmp11, label %if.then, label %for.inc63, !dbg !5071

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, !dbg !5072
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5072
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5072
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5072
  tail call void @reset_used_flags(%struct.rtx_def* %2) #8, !dbg !5073
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !5074
  %rt_rtx15 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5074
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !5074
  tail call void @reset_used_flags(%struct.rtx_def* %4) #8, !dbg !5075
  %5 = bitcast %union.rtunion_def* %1 to i32**, !dbg !5076
  %6 = load i32*, i32** %5, align 8, !dbg !5076
  %bf.load20 = load i32, i32* %6, align 8, !dbg !5076
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5076
  %cmp22 = icmp eq i32 %bf.clear21, 5, !dbg !5077
  br i1 %cmp22, label %if.then23, label %for.inc63, !dbg !5078

if.then23:                                        ; preds = %if.then
  call void @llvm.dbg.value(metadata i32* %6, metadata !5064, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 0, metadata !5056, metadata !DIExpression()), !dbg !5079
  %arrayidx31 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !5080
  %rt_rtvec = bitcast i32* %arrayidx31 to %struct.rtvec_def**, !dbg !5080
  br label %for.cond28, !dbg !5083

for.cond28:                                       ; preds = %cond.end, %if.then23
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end ], [ 0, %if.then23 ], !dbg !5084
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5056, metadata !DIExpression()), !dbg !5079
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5085
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !5085
  %8 = load i32, i32* %num_elem, align 8, !dbg !5085
  %9 = sext i32 %8 to i64, !dbg !5086
  %cmp32 = icmp slt i64 %indvars.iv, %9, !dbg !5086
  br i1 %cmp32, label %for.body33, label %for.inc63.loopexit, !dbg !5087

for.body33:                                       ; preds = %for.cond28
  %arrayidx38 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv, !dbg !5088
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8, !dbg !5088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5063, metadata !DIExpression()), !dbg !5079
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !5090
  %bf.load39 = load i32, i32* %11, align 8, !dbg !5090
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !5090
  %cmp41 = icmp eq i32 %bf.clear40, 8, !dbg !5090
  br i1 %cmp41, label %cond.end, label %lor.lhs.false42, !dbg !5090

lor.lhs.false42:                                  ; preds = %for.body33
  %cmp45 = icmp eq i32 %bf.clear40, 7, !dbg !5090
  br i1 %cmp45, label %cond.end, label %lor.lhs.false46, !dbg !5090

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %cmp49 = icmp eq i32 %bf.clear40, 9, !dbg !5090
  br i1 %cmp49, label %cond.end, label %lor.lhs.false50, !dbg !5090

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %cmp53 = icmp eq i32 %bf.clear40, 10, !dbg !5090
  br i1 %cmp53, label %cond.end, label %cond.true, !dbg !5090

cond.true:                                        ; preds = %lor.lhs.false50
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2528, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5090
  br label %cond.end, !dbg !5090

cond.end:                                         ; preds = %for.body33, %lor.lhs.false42, %lor.lhs.false46, %lor.lhs.false50, %cond.true
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !5091
  %12 = getelementptr inbounds %union.u, %union.u* %u54, i64 1, i32 0, i32 0, i64 0, !dbg !5091
  %rt_rtx57 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5091
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !5091
  tail call void @reset_used_flags(%struct.rtx_def* %13) #8, !dbg !5092
  %14 = getelementptr inbounds %union.u, %union.u* %u54, i64 1, i32 0, i32 0, i64 2, !dbg !5093
  %rt_rtx61 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5093
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !5093
  tail call void @reset_used_flags(%struct.rtx_def* %15) #8, !dbg !5094
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5095
  call void @llvm.dbg.value(metadata i32 undef, metadata !5056, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5079
  br label %for.cond28, !dbg !5096, !llvm.loop !5097

for.inc63.loopexit:                               ; preds = %for.cond28
  br label %for.inc63, !dbg !5099

for.inc63:                                        ; preds = %for.inc63.loopexit, %lor.lhs.false8, %if.then
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5099
  %rt_rtx67 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !5099
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !5099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !5055, metadata !DIExpression()), !dbg !5066
  br label %for.cond, !dbg !5100, !llvm.loop !5101

for.end68:                                        ; preds = %for.cond
  %call69 = tail call %struct.rtx_def* @get_insns() #8, !dbg !5103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call69, metadata !5055, metadata !DIExpression()), !dbg !5066
  br label %for.cond70, !dbg !5105

for.cond70:                                       ; preds = %for.inc98, %for.end68
  %p.1 = phi %struct.rtx_def* [ %call69, %for.end68 ], [ %24, %for.inc98 ], !dbg !5106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.1, metadata !5055, metadata !DIExpression()), !dbg !5066
  %tobool71 = icmp eq %struct.rtx_def* %p.1, null, !dbg !5107
  br i1 %tobool71, label %for.end103, label %for.body72, !dbg !5107

for.body72:                                       ; preds = %for.cond70
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.1, i64 0, i32 0, !dbg !5108
  %bf.load73 = load i32, i32* %18, align 8, !dbg !5108
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !5108
  %cmp75 = icmp eq i32 %bf.clear74, 8, !dbg !5108
  br i1 %cmp75, label %if.then88, label %lor.lhs.false76, !dbg !5108

lor.lhs.false76:                                  ; preds = %for.body72
  %cmp79 = icmp eq i32 %bf.clear74, 7, !dbg !5108
  br i1 %cmp79, label %if.then88, label %lor.lhs.false80, !dbg !5108

lor.lhs.false80:                                  ; preds = %lor.lhs.false76
  %cmp83 = icmp eq i32 %bf.clear74, 9, !dbg !5108
  br i1 %cmp83, label %if.then88, label %lor.lhs.false84, !dbg !5108

lor.lhs.false84:                                  ; preds = %lor.lhs.false80
  %cmp87 = icmp eq i32 %bf.clear74, 10, !dbg !5108
  br i1 %cmp87, label %if.then88, label %for.inc98, !dbg !5111

if.then88:                                        ; preds = %lor.lhs.false84, %lor.lhs.false80, %lor.lhs.false76, %for.body72
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.1, i64 0, i32 1, !dbg !5112
  %19 = getelementptr inbounds %union.u, %union.u* %u89, i64 1, i32 0, i32 0, i64 0, !dbg !5112
  %rt_rtx92 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5112
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !5112
  tail call fastcc void @verify_rtx_sharing(%struct.rtx_def* %20, %struct.rtx_def* nonnull %p.1) #8, !dbg !5114
  %21 = getelementptr inbounds %union.u, %union.u* %u89, i64 1, i32 0, i32 0, i64 2, !dbg !5115
  %rt_rtx96 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !5115
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !5115
  tail call fastcc void @verify_rtx_sharing(%struct.rtx_def* %22, %struct.rtx_def* nonnull %p.1) #8, !dbg !5116
  br label %for.inc98, !dbg !5117

for.inc98:                                        ; preds = %lor.lhs.false84, %if.then88
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5118
  %rt_rtx102 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5118
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !5118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !5055, metadata !DIExpression()), !dbg !5066
  br label %for.cond70, !dbg !5119, !llvm.loop !5120

for.end103:                                       ; preds = %for.cond70
  ret void, !dbg !5122
}

; Function Attrs: nounwind uwtable
define internal fastcc void @verify_rtx_sharing(%struct.rtx_def* %orig, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !5123 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !5125, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5126, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !5127, metadata !DIExpression()), !dbg !5139
  %cmp = icmp eq %struct.rtx_def* %orig, null, !dbg !5140
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5142

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 0, !dbg !5143
  %bf.load = load i32, i32* %0, align 8, !dbg !5143
  %bf.clear = and i32 %bf.load, 65535, !dbg !5143
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5129, metadata !DIExpression()), !dbg !5139
  %trunc = trunc i32 %bf.load to i16, !dbg !5144
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup
    i16 2, label %cleanup
    i16 1, label %cleanup
    i16 30, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 45, label %cleanup
    i16 44, label %cleanup
    i16 12, label %cleanup
    i16 36, label %cleanup
    i16 46, label %cleanup
    i16 38, label %cleanup
    i16 25, label %sw.bb1
    i16 35, label %sw.bb12
    i16 43, label %sw.bb16
  ], !dbg !5144

sw.bb1:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5145
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5145
  %2 = load i32*, i32** %1, align 8, !dbg !5145
  %bf.load2 = load i32, i32* %2, align 8, !dbg !5145
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5145
  %cmp4 = icmp eq i32 %bf.clear3, 37, !dbg !5145
  br i1 %cmp4, label %land.lhs.true, label %sw.epilog, !dbg !5148

land.lhs.true:                                    ; preds = %sw.bb1
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !5148
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #8, !dbg !5149
  %cmp9 = icmp ult i32 %call, 53, !dbg !5150
  br i1 %cmp9, label %cleanup, label %sw.epilog, !dbg !5151

sw.bb12:                                          ; preds = %if.end
  %call13 = tail call zeroext i8 @shared_const_p(%struct.rtx_def* nonnull %orig) #7, !dbg !5152
  %tobool = icmp eq i8 %call13, 0, !dbg !5152
  br i1 %tobool, label %sw.epilog, label %cleanup, !dbg !5154

sw.bb16:                                          ; preds = %if.end
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5155
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !5155
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5155
  %call21 = tail call zeroext i8 @constant_address_p(%struct.rtx_def* %4) #7, !dbg !5155
  %tobool22 = icmp ne i8 %call21, 0, !dbg !5155
  %5 = load i32, i32* @reload_completed, align 4, !dbg !5157
  %6 = load i32, i32* @reload_in_progress, align 4, !dbg !5158
  %7 = or i32 %5, %6, !dbg !5159
  %8 = icmp ne i32 %7, 0, !dbg !5159
  %9 = or i1 %8, %tobool22, !dbg !5159
  br i1 %9, label %cleanup, label %sw.epilog, !dbg !5159

sw.epilog:                                        ; preds = %sw.bb12, %if.end, %sw.bb16, %sw.bb1, %land.lhs.true
  %bf.load28 = load i32, i32* %0, align 8, !dbg !5160
  %bf.clear29 = and i32 %bf.load28, 536870912, !dbg !5160
  %tobool30 = icmp eq i32 %bf.clear29, 0, !dbg !5160
  br i1 %tobool30, label %cond.end, label %cond.true, !dbg !5160

cond.true:                                        ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2467, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5160
  %bf.load31.pre = load i32, i32* %0, align 8, !dbg !5161
  br label %cond.end, !dbg !5160

cond.end:                                         ; preds = %sw.epilog, %cond.true
  %bf.load31 = phi i32 [ %bf.load28, %sw.epilog ], [ %bf.load31.pre, %cond.true ], !dbg !5161
  %bf.set = or i32 %bf.load31, 536870912, !dbg !5161
  store i32 %bf.set, i32* %0, align 8, !dbg !5161
  %idxprom = zext i32 %bf.clear to i64, !dbg !5162
  %arrayidx33 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5162
  %10 = load i8*, i8** %arrayidx33, align 8, !dbg !5162
  call void @llvm.dbg.value(metadata i8* %10, metadata !5130, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i32 0, metadata !5128, metadata !DIExpression()), !dbg !5139
  %arrayidx35 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5163
  %11 = load i8, i8* %arrayidx35, align 1, !dbg !5163
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, !dbg !5164
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !5164
  %wide.trip.count = zext i8 %11 to i64, !dbg !5165
  br label %for.cond, !dbg !5166

for.cond:                                         ; preds = %for.inc117, %cond.end
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc117 ], [ 0, %cond.end ], !dbg !5167
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc117 ], [ %10, %cond.end ], !dbg !5139
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !5130, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !5128, metadata !DIExpression()), !dbg !5139
  %exitcond = icmp eq i64 %indvars.iv5, %wide.trip.count, !dbg !5165
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !5168

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !5169
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !5130, metadata !DIExpression()), !dbg !5139
  %12 = load i8, i8* %format_ptr.0, align 1, !dbg !5170
  %conv39 = sext i8 %12 to i32, !dbg !5170
  switch i32 %conv39, label %for.inc117 [
    i32 101, label %sw.bb40
    i32 69, label %sw.bb46
  ], !dbg !5171

sw.bb40:                                          ; preds = %for.body
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 %indvars.iv5, !dbg !5172
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !5172
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !5172
  tail call fastcc void @verify_rtx_sharing(%struct.rtx_def* %13, %struct.rtx_def* %insn) #8, !dbg !5173
  br label %for.inc117, !dbg !5174

sw.bb46:                                          ; preds = %for.body
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 %indvars.iv5, !dbg !5175
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtvec_def**, !dbg !5175
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5175
  %cmp51 = icmp eq %struct.rtvec_def* %14, null, !dbg !5176
  br i1 %cmp51, label %for.inc117, label %if.then53, !dbg !5177

if.then53:                                        ; preds = %sw.bb46
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 0, !dbg !5178
  %15 = load i32, i32* %num_elem, align 8, !dbg !5178
  call void @llvm.dbg.value(metadata i32 %15, metadata !5138, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i32 0, metadata !5131, metadata !DIExpression()), !dbg !5179
  %16 = sext i32 %15 to i64, !dbg !5180
  br label %for.cond59, !dbg !5180

for.cond59:                                       ; preds = %for.inc, %if.then53
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then53 ], !dbg !5182
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5131, metadata !DIExpression()), !dbg !5179
  %cmp60 = icmp slt i64 %indvars.iv, %16, !dbg !5183
  br i1 %cmp60, label %for.body62, label %for.inc117.loopexit, !dbg !5185

for.body62:                                       ; preds = %for.cond59
  %tobool63 = icmp eq i64 %indvars.iv, 0, !dbg !5186
  br i1 %tobool63, label %for.body62.if.else_crit_edge, label %land.lhs.true64, !dbg !5189

for.body62.if.else_crit_edge:                     ; preds = %for.body62
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5190
  %arrayidx113.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre, i64 0, i32 1, i64 0, !dbg !5191
  %.pre4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113.phi.trans.insert, align 8, !dbg !5190
  br label %if.else, !dbg !5189

land.lhs.true64:                                  ; preds = %for.body62
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5192
  %arrayidx71 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv, !dbg !5192
  %18 = bitcast %struct.rtx_def** %arrayidx71 to i32**, !dbg !5192
  %19 = load i32*, i32** %18, align 8, !dbg !5192
  %bf.load72 = load i32, i32* %19, align 8, !dbg !5192
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !5192
  %cmp74 = icmp eq i32 %bf.clear73, 23, !dbg !5193
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !5194
  br i1 %cmp74, label %land.lhs.true76, label %if.else, !dbg !5194

land.lhs.true76:                                  ; preds = %land.lhs.true64
  %21 = getelementptr inbounds i32, i32* %19, i64 4, !dbg !5195
  %22 = bitcast i32* %21 to i32**, !dbg !5195
  %23 = load i32*, i32** %22, align 8, !dbg !5195
  %bf.load89 = load i32, i32* %23, align 8, !dbg !5195
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !5195
  %cmp91 = icmp eq i32 %bf.clear90, 17, !dbg !5196
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !5197

if.then93:                                        ; preds = %land.lhs.true76
  %arrayidx104 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !5198
  %rt_rtx105 = bitcast i32* %arrayidx104 to %struct.rtx_def**, !dbg !5198
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !5198
  tail call fastcc void @verify_rtx_sharing(%struct.rtx_def* %24, %struct.rtx_def* %insn) #8, !dbg !5199
  br label %for.inc, !dbg !5199

if.else:                                          ; preds = %for.body62.if.else_crit_edge, %land.lhs.true76, %land.lhs.true64
  %25 = phi %struct.rtx_def* [ %.pre4, %for.body62.if.else_crit_edge ], [ %20, %land.lhs.true76 ], [ %20, %land.lhs.true64 ], !dbg !5190
  tail call fastcc void @verify_rtx_sharing(%struct.rtx_def* %25, %struct.rtx_def* %insn) #8, !dbg !5200
  br label %for.inc

for.inc:                                          ; preds = %if.then93, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5201
  call void @llvm.dbg.value(metadata i32 undef, metadata !5131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5179
  br label %for.cond59, !dbg !5202, !llvm.loop !5203

for.inc117.loopexit:                              ; preds = %for.cond59
  br label %for.inc117, !dbg !5205

for.inc117:                                       ; preds = %for.inc117.loopexit, %sw.bb46, %sw.bb40, %for.body
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !5205
  call void @llvm.dbg.value(metadata i32 undef, metadata !5128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5139
  br label %for.cond, !dbg !5206, !llvm.loop !5207

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5209

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb12, %sw.bb16, %land.lhs.true, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %entry
  ret void, !dbg !5209
}

; Function Attrs: nounwind uwtable
define dso_local void @unshare_all_rtl_in_chain(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5210 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5212, metadata !DIExpression()), !dbg !5213
  br label %for.cond, !dbg !5214

for.cond:                                         ; preds = %for.inc, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %6, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5212, metadata !DIExpression()), !dbg !5213
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5215
  br i1 %tobool, label %for.end, label %for.body, !dbg !5215

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 0, !dbg !5217
  %bf.load = load i32, i32* %0, align 8, !dbg !5217
  %bf.clear = and i32 %bf.load, 65535, !dbg !5217
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5217
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5217

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5217
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5217

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5217
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !5217

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5217
  br i1 %cmp11, label %if.then, label %for.inc, !dbg !5220

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, !dbg !5221
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5221
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5221
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5221
  %call = tail call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %2) #8, !dbg !5223
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx, align 8, !dbg !5224
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !5225
  %rt_rtx19 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5225
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !5225
  %call20 = tail call %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %4) #8, !dbg !5226
  store %struct.rtx_def* %call20, %struct.rtx_def** %rt_rtx19, align 8, !dbg !5227
  br label %for.inc, !dbg !5228

for.inc:                                          ; preds = %lor.lhs.false8, %if.then
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5229
  %rt_rtx28 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5229
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5229
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5212, metadata !DIExpression()), !dbg !5213
  br label %for.cond, !dbg !5230, !llvm.loop !5231

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5233
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @copy_rtx_if_shared(%struct.rtx_def* %orig) local_unnamed_addr #5 !dbg !5234 {
entry:
  %orig.addr = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !5236, metadata !DIExpression()), !dbg !5237
  store %struct.rtx_def* %orig, %struct.rtx_def** %orig.addr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %orig.addr, metadata !5236, metadata !DIExpression(DW_OP_deref)), !dbg !5237
  call fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** nonnull %orig.addr) #8, !dbg !5238
  %0 = load %struct.rtx_def*, %struct.rtx_def** %orig.addr, align 8, !dbg !5239
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5236, metadata !DIExpression()), !dbg !5237
  ret %struct.rtx_def* %0, !dbg !5240
}

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** %orig1) unnamed_addr #5 !dbg !5241 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %orig1, metadata !5245, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 0, metadata !5251, metadata !DIExpression()), !dbg !5262
  br label %repeat, !dbg !5263

repeat:                                           ; preds = %for.end89, %entry
  %copied.0 = phi i32 [ 0, %entry ], [ %copied.1, %for.end89 ], !dbg !5262
  %orig1.addr.0 = phi %struct.rtx_def** [ %orig1, %entry ], [ %last_ptr.0.lcssa, %for.end89 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def** %orig1.addr.0, metadata !5245, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 %copied.0, metadata !5251, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.label(metadata !5261), !dbg !5264
  %0 = load %struct.rtx_def*, %struct.rtx_def** %orig1.addr.0, align 8, !dbg !5265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5246, metadata !DIExpression()), !dbg !5262
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !5266
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5268

if.end:                                           ; preds = %repeat
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5269
  %bf.load = load i32, i32* %1, align 8, !dbg !5269
  %bf.clear = and i32 %bf.load, 65535, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5248, metadata !DIExpression()), !dbg !5262
  %trunc = trunc i32 %bf.load to i16, !dbg !5270
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup
    i16 2, label %cleanup
    i16 1, label %cleanup
    i16 30, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 45, label %cleanup
    i16 44, label %cleanup
    i16 12, label %cleanup
    i16 36, label %cleanup
    i16 46, label %cleanup
    i16 38, label %cleanup
    i16 25, label %sw.bb1
    i16 35, label %sw.bb12
    i16 7, label %cleanup
    i16 8, label %cleanup
    i16 9, label %cleanup
    i16 10, label %cleanup
    i16 13, label %cleanup
    i16 11, label %cleanup
  ], !dbg !5270

sw.bb1:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5271
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5271
  %3 = load i32*, i32** %2, align 8, !dbg !5271
  %bf.load2 = load i32, i32* %3, align 8, !dbg !5271
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5271
  %cmp4 = icmp eq i32 %bf.clear3, 37, !dbg !5271
  br i1 %cmp4, label %land.lhs.true, label %sw.epilog, !dbg !5274

land.lhs.true:                                    ; preds = %sw.bb1
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5274
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #8, !dbg !5275
  %cmp9 = icmp ult i32 %call, 53, !dbg !5276
  br i1 %cmp9, label %cleanup, label %sw.epilog, !dbg !5277

sw.bb12:                                          ; preds = %if.end
  %call13 = tail call zeroext i8 @shared_const_p(%struct.rtx_def* nonnull %0) #7, !dbg !5278
  %tobool = icmp eq i8 %call13, 0, !dbg !5278
  br i1 %tobool, label %sw.epilog, label %cleanup, !dbg !5280

sw.epilog:                                        ; preds = %sw.bb12, %if.end, %sw.bb1, %land.lhs.true
  %bf.load17 = load i32, i32* %1, align 8, !dbg !5281
  %bf.clear18 = and i32 %bf.load17, 536870912, !dbg !5281
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !5281
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !5283

if.then20:                                        ; preds = %sw.epilog
  %call21 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* nonnull %0) #7, !dbg !5284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !5246, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 1, metadata !5251, metadata !DIExpression()), !dbg !5262
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call21, i64 0, i32 0, !dbg !5262
  %bf.load23.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5286
  br label %if.end22, !dbg !5287

if.end22:                                         ; preds = %sw.epilog, %if.then20
  %bf.load23 = phi i32 [ %bf.load23.pre, %if.then20 ], [ %bf.load17, %sw.epilog ], !dbg !5286
  %copied.1 = phi i32 [ 1, %if.then20 ], [ %copied.0, %sw.epilog ], !dbg !5262
  %x.0 = phi %struct.rtx_def* [ %call21, %if.then20 ], [ %0, %sw.epilog ], !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5246, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 %copied.1, metadata !5251, metadata !DIExpression()), !dbg !5262
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !5288
  %bf.set = or i32 %bf.load23, 536870912, !dbg !5286
  store i32 %bf.set, i32* %5, align 8, !dbg !5286
  %idxprom = zext i32 %bf.clear to i64, !dbg !5289
  %arrayidx25 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5289
  %6 = load i8*, i8** %arrayidx25, align 8, !dbg !5289
  call void @llvm.dbg.value(metadata i8* %6, metadata !5250, metadata !DIExpression()), !dbg !5262
  %arrayidx27 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5290
  %7 = load i8, i8* %arrayidx27, align 1, !dbg !5290
  call void @llvm.dbg.value(metadata i8 %7, metadata !5252, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** null, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 0, metadata !5247, metadata !DIExpression()), !dbg !5262
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, !dbg !5291
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !5291
  %tobool53 = icmp eq i32 %copied.1, 0, !dbg !5292
  br i1 %tobool53, label %if.end22.if.end22.split_crit_edge, label %if.end22.split.us, !dbg !5294

if.end22.if.end22.split_crit_edge:                ; preds = %if.end22
  %8 = zext i8 %7 to i64, !dbg !5294
  call void @llvm.dbg.value(metadata i64 %8, metadata !5252, metadata !DIExpression()), !dbg !5262
  br label %for.cond, !dbg !5294

if.end22.split.us:                                ; preds = %if.end22
  %9 = zext i8 %7 to i64, !dbg !5294
  br label %for.cond.us, !dbg !5294

for.cond.us:                                      ; preds = %for.inc87.us, %if.end22.split.us
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc87.us ], [ 0, %if.end22.split.us ], !dbg !5262
  %format_ptr.0.us = phi i8* [ %incdec.ptr.us, %for.inc87.us ], [ %6, %if.end22.split.us ], !dbg !5262
  %last_ptr.0.us = phi %struct.rtx_def** [ %last_ptr.3.us, %for.inc87.us ], [ null, %if.end22.split.us ], !dbg !5295
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !5247, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.us, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %format_ptr.0.us, metadata !5250, metadata !DIExpression()), !dbg !5262
  %exitcond = icmp eq i64 %indvars.iv5, %9, !dbg !5296
  br i1 %exitcond, label %for.end89.us-lcssa.us, label %for.body.us, !dbg !5297

for.body.us:                                      ; preds = %for.cond.us
  %incdec.ptr.us = getelementptr inbounds i8, i8* %format_ptr.0.us, i64 1, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.us, metadata !5250, metadata !DIExpression()), !dbg !5262
  %10 = load i8, i8* %format_ptr.0.us, align 1, !dbg !5299
  %conv30.us = sext i8 %10 to i32, !dbg !5299
  switch i32 %conv30.us, label %for.inc87.us [
    i32 101, label %sw.bb31.us
    i32 69, label %sw.bb40.us
  ], !dbg !5300

sw.bb40.us:                                       ; preds = %for.body.us
  %arrayidx44.us = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv5, !dbg !5301
  %rt_rtvec.us = bitcast %union.rtunion_def* %arrayidx44.us to %struct.rtvec_def**, !dbg !5301
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec.us, align 8, !dbg !5301
  %cmp45.us = icmp eq %struct.rtvec_def* %11, null, !dbg !5302
  br i1 %cmp45.us, label %for.inc87.us, label %if.then47.us, !dbg !5303

if.then47.us:                                     ; preds = %sw.bb40.us
  %num_elem.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 0, !dbg !5304
  %12 = load i32, i32* %num_elem.us, align 8, !dbg !5304
  call void @llvm.dbg.value(metadata i32 %12, metadata !5260, metadata !DIExpression()), !dbg !5305
  %cmp55.us = icmp sgt i32 %12, 0, !dbg !5306
  br i1 %cmp55.us, label %if.then57.us, label %if.end69.us, !dbg !5307

if.then57.us:                                     ; preds = %if.then47.us
  %arraydecay.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 0, !dbg !5308
  %call63.us = tail call %struct.rtvec_def* @gen_rtvec_v(i32 %12, %struct.rtx_def** nonnull %arraydecay.us) #8, !dbg !5309
  store %struct.rtvec_def* %call63.us, %struct.rtvec_def** %rt_rtvec.us, align 8, !dbg !5310
  br label %if.end69.us, !dbg !5311

if.end69.us:                                      ; preds = %if.then57.us, %if.then47.us
  %13 = phi %struct.rtvec_def* [ %call63.us, %if.then57.us ], [ %11, %if.then47.us ]
  call void @llvm.dbg.value(metadata i32 0, metadata !5253, metadata !DIExpression()), !dbg !5305
  %14 = sext i32 %12 to i64, !dbg !5312
  br label %for.cond70.us, !dbg !5312

for.cond70.us:                                    ; preds = %if.end76.us, %if.end69.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end76.us ], [ 0, %if.end69.us ]
  %15 = phi %struct.rtvec_def* [ %16, %if.end76.us ], [ %13, %if.end69.us ]
  %last_ptr.1.us = phi %struct.rtx_def** [ %arrayidx84.us, %if.end76.us ], [ %last_ptr.0.us, %if.end69.us ], !dbg !5262
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5253, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.us, metadata !5249, metadata !DIExpression()), !dbg !5262
  %cmp71.us = icmp slt i64 %indvars.iv, %14, !dbg !5314
  br i1 %cmp71.us, label %for.body73.us, label %for.inc87.loopexit.us, !dbg !5316

for.body73.us:                                    ; preds = %for.cond70.us
  %tobool74.us = icmp eq %struct.rtx_def** %last_ptr.1.us, null, !dbg !5317
  br i1 %tobool74.us, label %if.end76.us, label %if.then75.us, !dbg !5320

if.then75.us:                                     ; preds = %for.body73.us
  tail call fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** nonnull %last_ptr.1.us) #8, !dbg !5321
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec.us, align 8, !dbg !5322
  br label %if.end76.us, !dbg !5321

if.end76.us:                                      ; preds = %if.then75.us, %for.body73.us
  %16 = phi %struct.rtvec_def* [ %.pre, %if.then75.us ], [ %15, %for.body73.us ], !dbg !5322
  %arrayidx84.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx84.us, metadata !5249, metadata !DIExpression()), !dbg !5262
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5323
  call void @llvm.dbg.value(metadata i32 undef, metadata !5253, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5305
  br label %for.cond70.us, !dbg !5324, !llvm.loop !5325

sw.bb31.us:                                       ; preds = %for.body.us
  %tobool32.us = icmp eq %struct.rtx_def** %last_ptr.0.us, null, !dbg !5327
  br i1 %tobool32.us, label %if.end34.us, label %if.then33.us, !dbg !5329

if.then33.us:                                     ; preds = %sw.bb31.us
  tail call fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** nonnull %last_ptr.0.us) #8, !dbg !5330
  br label %if.end34.us, !dbg !5330

if.end34.us:                                      ; preds = %if.then33.us, %sw.bb31.us
  %arrayidx38.us = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv5, !dbg !5331
  %rt_rtx39.us = bitcast %union.rtunion_def* %arrayidx38.us to %struct.rtx_def**, !dbg !5331
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx39.us, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.inc87.us, !dbg !5332

for.inc87.us:                                     ; preds = %for.inc87.loopexit.us, %if.end34.us, %sw.bb40.us, %for.body.us
  %last_ptr.3.us = phi %struct.rtx_def** [ %last_ptr.0.us, %for.body.us ], [ %rt_rtx39.us, %if.end34.us ], [ %last_ptr.0.us, %sw.bb40.us ], [ %last_ptr.1.us.lcssa, %for.inc87.loopexit.us ], !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.3.us, metadata !5249, metadata !DIExpression()), !dbg !5262
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !5333
  call void @llvm.dbg.value(metadata i32 undef, metadata !5247, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5262
  br label %for.cond.us, !dbg !5334, !llvm.loop !5335

for.inc87.loopexit.us:                            ; preds = %for.cond70.us
  %last_ptr.1.us.lcssa = phi %struct.rtx_def** [ %last_ptr.1.us, %for.cond70.us ], !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.us.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.us.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.us.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.inc87.us, !dbg !5333

for.end89.us-lcssa.us:                            ; preds = %for.cond.us
  %last_ptr.0.us.lcssa = phi %struct.rtx_def** [ %last_ptr.0.us, %for.cond.us ], !dbg !5295
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.us.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.us.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.end89, !dbg !5337

for.cond:                                         ; preds = %for.inc87, %if.end22.if.end22.split_crit_edge
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc87 ], [ 0, %if.end22.if.end22.split_crit_edge ], !dbg !5262
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc87 ], [ %6, %if.end22.if.end22.split_crit_edge ], !dbg !5262
  %last_ptr.0 = phi %struct.rtx_def** [ %last_ptr.3, %for.inc87 ], [ null, %if.end22.if.end22.split_crit_edge ], !dbg !5295
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !5247, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !5250, metadata !DIExpression()), !dbg !5262
  %exitcond11 = icmp eq i64 %indvars.iv9, %8, !dbg !5296
  br i1 %exitcond11, label %for.end89.us-lcssa, label %for.body, !dbg !5297

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !5250, metadata !DIExpression()), !dbg !5262
  %17 = load i8, i8* %format_ptr.0, align 1, !dbg !5299
  %conv30 = sext i8 %17 to i32, !dbg !5299
  switch i32 %conv30, label %for.inc87 [
    i32 101, label %sw.bb31
    i32 69, label %sw.bb40
  ], !dbg !5300

sw.bb31:                                          ; preds = %for.body
  %tobool32 = icmp eq %struct.rtx_def** %last_ptr.0, null, !dbg !5327
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !5329

if.then33:                                        ; preds = %sw.bb31
  tail call fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** nonnull %last_ptr.0) #8, !dbg !5330
  br label %if.end34, !dbg !5330

if.end34:                                         ; preds = %sw.bb31, %if.then33
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv9, !dbg !5331
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !5331
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx39, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.inc87, !dbg !5332

sw.bb40:                                          ; preds = %for.body
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv9, !dbg !5301
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtvec_def**, !dbg !5301
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5301
  %cmp45 = icmp eq %struct.rtvec_def* %18, null, !dbg !5302
  br i1 %cmp45, label %for.inc87, label %if.then47, !dbg !5303

if.then47:                                        ; preds = %sw.bb40
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i64 0, i32 0, !dbg !5304
  %19 = load i32, i32* %num_elem, align 8, !dbg !5304
  call void @llvm.dbg.value(metadata i32 %19, metadata !5260, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 0, metadata !5253, metadata !DIExpression()), !dbg !5305
  %20 = sext i32 %19 to i64, !dbg !5312
  br label %for.cond70, !dbg !5312

for.cond70:                                       ; preds = %if.end76, %if.then47
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %if.end76 ], [ 0, %if.then47 ]
  %21 = phi %struct.rtvec_def* [ %22, %if.end76 ], [ %18, %if.then47 ]
  %last_ptr.1 = phi %struct.rtx_def** [ %arrayidx84, %if.end76 ], [ %last_ptr.0, %if.then47 ], !dbg !5262
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !5253, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1, metadata !5249, metadata !DIExpression()), !dbg !5262
  %cmp71 = icmp slt i64 %indvars.iv7, %20, !dbg !5314
  br i1 %cmp71, label %for.body73, label %for.inc87.loopexit, !dbg !5316

for.body73:                                       ; preds = %for.cond70
  %tobool74 = icmp eq %struct.rtx_def** %last_ptr.1, null, !dbg !5317
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !5320

if.then75:                                        ; preds = %for.body73
  tail call fastcc void @copy_rtx_if_shared_1(%struct.rtx_def** nonnull %last_ptr.1) #8, !dbg !5321
  %.pre3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5322
  br label %if.end76, !dbg !5321

if.end76:                                         ; preds = %for.body73, %if.then75
  %22 = phi %struct.rtvec_def* [ %21, %for.body73 ], [ %.pre3, %if.then75 ], !dbg !5322
  %arrayidx84 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i64 0, i32 1, i64 %indvars.iv7, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx84, metadata !5249, metadata !DIExpression()), !dbg !5262
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !5323
  call void @llvm.dbg.value(metadata i32 undef, metadata !5253, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5305
  br label %for.cond70, !dbg !5324, !llvm.loop !5325

for.inc87.loopexit:                               ; preds = %for.cond70
  %last_ptr.1.lcssa = phi %struct.rtx_def** [ %last_ptr.1, %for.cond70 ], !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.1.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.inc87, !dbg !5333

for.inc87:                                        ; preds = %for.inc87.loopexit, %sw.bb40, %if.end34, %for.body
  %last_ptr.3 = phi %struct.rtx_def** [ %last_ptr.0, %for.body ], [ %rt_rtx39, %if.end34 ], [ %last_ptr.0, %sw.bb40 ], [ %last_ptr.1.lcssa, %for.inc87.loopexit ], !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.3, metadata !5249, metadata !DIExpression()), !dbg !5262
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !5333
  call void @llvm.dbg.value(metadata i32 undef, metadata !5247, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5262
  br label %for.cond, !dbg !5334, !llvm.loop !5335

for.end89.us-lcssa:                               ; preds = %for.cond
  %last_ptr.0.lcssa12 = phi %struct.rtx_def** [ %last_ptr.0, %for.cond ], !dbg !5295
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.lcssa12, metadata !5249, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.lcssa12, metadata !5249, metadata !DIExpression()), !dbg !5262
  br label %for.end89, !dbg !5337

for.end89:                                        ; preds = %for.end89.us-lcssa.us, %for.end89.us-lcssa
  %last_ptr.0.lcssa = phi %struct.rtx_def** [ %last_ptr.0.lcssa12, %for.end89.us-lcssa ], [ %last_ptr.0.us.lcssa, %for.end89.us-lcssa.us ], !dbg !5295
  call void @llvm.dbg.value(metadata %struct.rtx_def** %last_ptr.0.lcssa, metadata !5249, metadata !DIExpression()), !dbg !5262
  store %struct.rtx_def* %x.0, %struct.rtx_def** %orig1.addr.0, align 8, !dbg !5337
  %tobool90 = icmp eq %struct.rtx_def** %last_ptr.0.lcssa, null, !dbg !5338
  br i1 %tobool90, label %cleanup, label %repeat, !dbg !5340

cleanup:                                          ; preds = %for.end89, %sw.bb12, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %land.lhs.true, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %repeat
  ret void, !dbg !5341
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @make_safe_from(%struct.rtx_def* %x, %struct.rtx_def* %other) local_unnamed_addr #5 !dbg !5342 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5344, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other, metadata !5345, metadata !DIExpression()), !dbg !5350
  br label %while.body, !dbg !5351

while.body:                                       ; preds = %entry, %sw.epilog
  %other.addr.0 = phi %struct.rtx_def* [ %other, %entry ], [ %other.addr.1, %sw.epilog ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.addr.0, metadata !5345, metadata !DIExpression()), !dbg !5350
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %other.addr.0, i64 0, i32 0, !dbg !5352
  %bf.load = load i32, i32* %0, align 8, !dbg !5352
  %trunc = trunc i32 %bf.load to i16, !dbg !5353
  switch i16 %trunc, label %done [
    i16 39, label %sw.bb
    i16 40, label %sw.bb1
    i16 98, label %sw.bb1
    i16 99, label %sw.bb1
  ], !dbg !5353

sw.bb:                                            ; preds = %while.body
  br label %sw.epilog, !dbg !5354

sw.bb1:                                           ; preds = %while.body, %while.body, %while.body
  br label %sw.epilog, !dbg !5356

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  %other.addr.1.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %other.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5357
  %other.addr.1.in = bitcast %union.rtunion_def* %other.addr.1.in.in to %struct.rtx_def**, !dbg !5357
  %other.addr.1 = load %struct.rtx_def*, %struct.rtx_def** %other.addr.1.in, align 8, !dbg !5357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.addr.1, metadata !5345, metadata !DIExpression()), !dbg !5350
  br label %while.body, !dbg !5351, !llvm.loop !5358

done:                                             ; preds = %while.body
  %other.addr.0.lcssa = phi %struct.rtx_def* [ %other.addr.0, %while.body ]
  %bf.load.lcssa = phi i32 [ %bf.load, %while.body ], !dbg !5352
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.addr.0.lcssa, metadata !5345, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.addr.0.lcssa, metadata !5345, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.addr.0.lcssa, metadata !5345, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.label(metadata !5349), !dbg !5360
  %bf.clear7 = and i32 %bf.load.lcssa, 65535, !dbg !5361
  %cmp = icmp eq i32 %bf.clear7, 43, !dbg !5361
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5362

land.lhs.true:                                    ; preds = %done
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5363
  %bf.load8 = load i32, i32* %1, align 8, !dbg !5363
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5363
  %idxprom = zext i32 %bf.clear9 to i64, !dbg !5363
  %arrayidx10 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5363
  %2 = load i32, i32* %arrayidx10, align 4, !dbg !5363
  %cmp11 = icmp eq i32 %2, 9, !dbg !5363
  br i1 %cmp11, label %lor.lhs.false, label %land.lhs.true12, !dbg !5364

land.lhs.true12:                                  ; preds = %land.lhs.true
  %cmp15 = icmp eq i32 %bf.clear9, 37, !dbg !5365
  br i1 %cmp15, label %lor.lhs.false, label %land.lhs.true16, !dbg !5366

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %cmp19 = icmp eq i32 %bf.clear9, 39, !dbg !5367
  br i1 %cmp19, label %lor.lhs.false, label %if.then, !dbg !5368

lor.lhs.false:                                    ; preds = %land.lhs.true16, %land.lhs.true12, %land.lhs.true, %done
  %cmp22 = icmp eq i32 %bf.clear7, 37, !dbg !5369
  br i1 %cmp22, label %land.lhs.true23, label %return, !dbg !5370

land.lhs.true23:                                  ; preds = %lor.lhs.false
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %other.addr.0.lcssa) #8, !dbg !5371
  %cmp24 = icmp ult i32 %call, 53, !dbg !5372
  br i1 %cmp24, label %if.then, label %lor.lhs.false25, !dbg !5373

lor.lhs.false25:                                  ; preds = %land.lhs.true23
  %call26 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %other.addr.0.lcssa, %struct.rtx_def* %x) #7, !dbg !5374
  %tobool = icmp eq i32 %call26, 0, !dbg !5374
  br i1 %tobool, label %return, label %if.then, !dbg !5375

if.then:                                          ; preds = %land.lhs.true16, %lor.lhs.false25, %land.lhs.true23
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5376
  %bf.load27 = load i32, i32* %3, align 8, !dbg !5376
  %bf.lshr = lshr i32 %bf.load27, 16, !dbg !5376
  %bf.clear28 = and i32 %bf.lshr, 255, !dbg !5376
  %call29 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear28) #8, !dbg !5377
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !5346, metadata !DIExpression()), !dbg !5378
  %call30 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call29, %struct.rtx_def* %x) #7, !dbg !5379
  br label %return

return:                                           ; preds = %lor.lhs.false25, %lor.lhs.false, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call29, %if.then ], [ %x, %lor.lhs.false25 ], [ %x, %lor.lhs.false ], !dbg !5350
  ret %struct.rtx_def* %retval.0, !dbg !5380
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_first_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5381 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5383, metadata !DIExpression()), !dbg !5384
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5385
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5385
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5385
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !5385
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5385

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2912, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5385
  br label %cond.end, !dbg !5385

cond.end:                                         ; preds = %entry, %cond.true
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !5386
  ret void, !dbg !5387
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #5 !dbg !5388 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !5389
  ret %struct.rtx_def* %0, !dbg !5390
}

; Function Attrs: nounwind uwtable
define dso_local void @set_last_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5391 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5393, metadata !DIExpression()), !dbg !5394
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5395
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5395
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5395
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !5395
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5395

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 2929, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5395
  br label %cond.end, !dbg !5395

cond.end:                                         ; preds = %entry, %cond.true
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !5396
  ret void, !dbg !5397
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_last_insn_anywhere() local_unnamed_addr #5 !dbg !5398 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !5401
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5401
  br i1 %tobool, label %if.end, label %if.then, !dbg !5403

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5404

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !5405

for.cond:                                         ; preds = %for.inc, %if.end
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %if.end ], [ %next, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !5407
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !5400, metadata !DIExpression()), !dbg !5408
  %tobool1 = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !5409
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !5409

for.body:                                         ; preds = %for.cond
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 1, !dbg !5410
  %1 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !5410
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5413
  br i1 %cmp, label %for.inc, label %if.then2, !dbg !5414

if.then2:                                         ; preds = %for.body
  %.lcssa = phi %struct.rtx_def* [ %1, %for.body ], !dbg !5410
  br label %cleanup, !dbg !5415

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !5416
  br label %for.cond, !dbg !5417, !llvm.loop !5418

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5420

cleanup:                                          ; preds = %cleanup.loopexit, %if.then2, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %.lcssa, %if.then2 ], [ null, %cleanup.loopexit ], !dbg !5408
  ret %struct.rtx_def* %retval.0, !dbg !5420
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_first_nonnote_insn() local_unnamed_addr #5 !dbg !5421 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !5424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5423, metadata !DIExpression()), !dbg !5425
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5426
  br i1 %tobool, label %if.end23, label %if.then, !dbg !5428

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5429
  %bf.load = load i32, i32* %1, align 8, !dbg !5429
  %bf.clear = and i32 %bf.load, 65535, !dbg !5429
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !5429
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5432

if.then1:                                         ; preds = %if.then
  %call = tail call %struct.rtx_def* @next_insn(%struct.rtx_def* nonnull %0) #8, !dbg !5433
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5423, metadata !DIExpression()), !dbg !5425
  br label %for.cond, !dbg !5435

for.cond:                                         ; preds = %for.inc, %if.then1
  %insn.0 = phi %struct.rtx_def* [ %call, %if.then1 ], [ %call6, %for.inc ], !dbg !5436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5423, metadata !DIExpression()), !dbg !5425
  %tobool2 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5437
  br i1 %tobool2, label %if.end23.loopexit, label %land.rhs, !dbg !5439

land.rhs:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5440
  %bf.load3 = load i32, i32* %2, align 8, !dbg !5440
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5440
  %cmp5 = icmp eq i32 %bf.clear4, 13, !dbg !5440
  br i1 %cmp5, label %for.inc, label %if.end23.loopexit, !dbg !5441

for.inc:                                          ; preds = %land.rhs
  %call6 = tail call %struct.rtx_def* @next_insn(%struct.rtx_def* nonnull %insn.0) #8, !dbg !5442
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5423, metadata !DIExpression()), !dbg !5425
  br label %for.cond, !dbg !5443, !llvm.loop !5444

if.else:                                          ; preds = %if.then
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !5446
  br i1 %cmp9, label %land.lhs.true, label %if.end23, !dbg !5449

land.lhs.true:                                    ; preds = %if.else
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !5450
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5450
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5450
  %5 = load i32*, i32** %4, align 8, !dbg !5450
  %bf.load10 = load i32, i32* %5, align 8, !dbg !5450
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5450
  %cmp12 = icmp eq i32 %bf.clear11, 5, !dbg !5451
  br i1 %cmp12, label %if.then13, label %if.end23, !dbg !5452

if.then13:                                        ; preds = %land.lhs.true
  %arrayidx20 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !5453
  %rt_rtvec = bitcast i32* %arrayidx20 to %struct.rtvec_def**, !dbg !5453
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5453
  %arrayidx21 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 0, !dbg !5453
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8, !dbg !5453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5423, metadata !DIExpression()), !dbg !5425
  br label %if.end23, !dbg !5454

if.end23.loopexit:                                ; preds = %land.rhs, %for.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %land.rhs ], [ %insn.0, %for.cond ], !dbg !5436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5423, metadata !DIExpression()), !dbg !5425
  br label %if.end23, !dbg !5455

if.end23:                                         ; preds = %if.end23.loopexit, %entry, %if.then13, %land.lhs.true, %if.else
  %insn.3 = phi %struct.rtx_def* [ null, %entry ], [ %7, %if.then13 ], [ %0, %land.lhs.true ], [ %0, %if.else ], [ %insn.0.lcssa, %if.end23.loopexit ], !dbg !5425
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5423, metadata !DIExpression()), !dbg !5425
  ret %struct.rtx_def* %insn.3, !dbg !5455
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5456 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5458, metadata !DIExpression()), !dbg !5459
  %tobool = icmp eq %struct.rtx_def* %insn, null, !dbg !5460
  br i1 %tobool, label %if.end19, label %if.then, !dbg !5462

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5463
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5463
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5458, metadata !DIExpression()), !dbg !5459
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !5465
  br i1 %tobool1, label %if.end19, label %land.lhs.true, !dbg !5467

land.lhs.true:                                    ; preds = %if.then
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5468
  %bf.load = load i32, i32* %2, align 8, !dbg !5468
  %bf.clear = and i32 %bf.load, 65535, !dbg !5468
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5468
  br i1 %cmp, label %land.lhs.true2, label %if.end19, !dbg !5469

land.lhs.true2:                                   ; preds = %land.lhs.true
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5470
  %3 = getelementptr inbounds %union.u, %union.u* %u3, i64 1, i32 0, i32 0, i64 0, !dbg !5470
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5470
  %5 = load i32*, i32** %4, align 8, !dbg !5470
  %bf.load7 = load i32, i32* %5, align 8, !dbg !5470
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5470
  %cmp9 = icmp eq i32 %bf.clear8, 5, !dbg !5471
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !5472

if.then10:                                        ; preds = %land.lhs.true2
  %arrayidx17 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !5473
  %rt_rtvec = bitcast i32* %arrayidx17 to %struct.rtvec_def**, !dbg !5473
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5473
  %arrayidx18 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 0, !dbg !5473
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5458, metadata !DIExpression()), !dbg !5459
  br label %if.end19, !dbg !5474

if.end19:                                         ; preds = %if.then, %entry, %land.lhs.true, %land.lhs.true2, %if.then10
  %insn.addr.1 = phi %struct.rtx_def* [ null, %entry ], [ %7, %if.then10 ], [ %1, %land.lhs.true2 ], [ %1, %land.lhs.true ], [ null, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5458, metadata !DIExpression()), !dbg !5459
  ret %struct.rtx_def* %insn.addr.1, !dbg !5475
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_last_nonnote_insn() local_unnamed_addr #5 !dbg !5476 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !5479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5478, metadata !DIExpression()), !dbg !5480
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !5481
  br i1 %tobool, label %if.end31, label %if.then, !dbg !5483

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5484
  %bf.load = load i32, i32* %1, align 8, !dbg !5484
  %bf.clear = and i32 %bf.load, 65535, !dbg !5484
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !5484
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5487

if.then1:                                         ; preds = %if.then
  %call = tail call %struct.rtx_def* @previous_insn(%struct.rtx_def* nonnull %0) #8, !dbg !5488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5478, metadata !DIExpression()), !dbg !5480
  br label %for.cond, !dbg !5490

for.cond:                                         ; preds = %for.inc, %if.then1
  %insn.0 = phi %struct.rtx_def* [ %call, %if.then1 ], [ %call6, %for.inc ], !dbg !5491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5478, metadata !DIExpression()), !dbg !5480
  %tobool2 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5492
  br i1 %tobool2, label %if.end31.loopexit, label %land.rhs, !dbg !5494

land.rhs:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5495
  %bf.load3 = load i32, i32* %2, align 8, !dbg !5495
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5495
  %cmp5 = icmp eq i32 %bf.clear4, 13, !dbg !5495
  br i1 %cmp5, label %for.inc, label %if.end31.loopexit, !dbg !5496

for.inc:                                          ; preds = %land.rhs
  %call6 = tail call %struct.rtx_def* @previous_insn(%struct.rtx_def* nonnull %insn.0) #8, !dbg !5497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5478, metadata !DIExpression()), !dbg !5480
  br label %for.cond, !dbg !5498, !llvm.loop !5499

if.else:                                          ; preds = %if.then
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !5501
  br i1 %cmp9, label %land.lhs.true, label %if.end31, !dbg !5504

land.lhs.true:                                    ; preds = %if.else
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !5505
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5505
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5505
  %5 = load i32*, i32** %4, align 8, !dbg !5505
  %bf.load10 = load i32, i32* %5, align 8, !dbg !5505
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5505
  %cmp12 = icmp eq i32 %bf.clear11, 5, !dbg !5506
  br i1 %cmp12, label %if.then13, label %if.end31, !dbg !5507

if.then13:                                        ; preds = %land.lhs.true
  %arrayidx20 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !5508
  %rt_rtvec = bitcast i32* %arrayidx20 to %struct.rtvec_def**, !dbg !5508
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5508
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !5508
  %7 = load i32, i32* %num_elem, align 8, !dbg !5508
  %sub = add nsw i32 %7, -1, !dbg !5508
  %idxprom = sext i32 %sub to i64, !dbg !5508
  %arrayidx29 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %idxprom, !dbg !5508
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8, !dbg !5508
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !5478, metadata !DIExpression()), !dbg !5480
  br label %if.end31, !dbg !5509

if.end31.loopexit:                                ; preds = %land.rhs, %for.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %land.rhs ], [ %insn.0, %for.cond ], !dbg !5491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5478, metadata !DIExpression()), !dbg !5480
  br label %if.end31, !dbg !5510

if.end31:                                         ; preds = %if.end31.loopexit, %entry, %if.then13, %land.lhs.true, %if.else
  %insn.3 = phi %struct.rtx_def* [ null, %entry ], [ %8, %if.then13 ], [ %0, %land.lhs.true ], [ %0, %if.else ], [ %insn.0.lcssa, %if.end31.loopexit ], !dbg !5480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5478, metadata !DIExpression()), !dbg !5480
  ret %struct.rtx_def* %insn.3, !dbg !5510
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @previous_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5511 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5513, metadata !DIExpression()), !dbg !5514
  %tobool = icmp eq %struct.rtx_def* %insn, null, !dbg !5515
  br i1 %tobool, label %if.end27, label %if.then, !dbg !5517

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5518
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5518
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5513, metadata !DIExpression()), !dbg !5514
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !5520
  br i1 %tobool1, label %if.end27, label %land.lhs.true, !dbg !5522

land.lhs.true:                                    ; preds = %if.then
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5523
  %bf.load = load i32, i32* %2, align 8, !dbg !5523
  %bf.clear = and i32 %bf.load, 65535, !dbg !5523
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5523
  br i1 %cmp, label %land.lhs.true2, label %if.end27, !dbg !5524

land.lhs.true2:                                   ; preds = %land.lhs.true
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5525
  %3 = getelementptr inbounds %union.u, %union.u* %u3, i64 1, i32 0, i32 0, i64 0, !dbg !5525
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5525
  %5 = load i32*, i32** %4, align 8, !dbg !5525
  %bf.load7 = load i32, i32* %5, align 8, !dbg !5525
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5525
  %cmp9 = icmp eq i32 %bf.clear8, 5, !dbg !5526
  br i1 %cmp9, label %if.then10, label %if.end27, !dbg !5527

if.then10:                                        ; preds = %land.lhs.true2
  %arrayidx17 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !5528
  %rt_rtvec = bitcast i32* %arrayidx17 to %struct.rtvec_def**, !dbg !5528
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5528
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !5528
  %7 = load i32, i32* %num_elem, align 8, !dbg !5528
  %sub = add nsw i32 %7, -1, !dbg !5528
  %idxprom = sext i32 %sub to i64, !dbg !5528
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %idxprom, !dbg !5528
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx26, align 8, !dbg !5528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !5513, metadata !DIExpression()), !dbg !5514
  br label %if.end27, !dbg !5529

if.end27:                                         ; preds = %if.then, %entry, %land.lhs.true, %land.lhs.true2, %if.then10
  %insn.addr.1 = phi %struct.rtx_def* [ null, %entry ], [ %8, %if.then10 ], [ %1, %land.lhs.true2 ], [ %1, %land.lhs.true ], [ null, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5513, metadata !DIExpression()), !dbg !5514
  ret %struct.rtx_def* %insn.addr.1, !dbg !5530
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_max_uid() local_unnamed_addr #5 !dbg !5531 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !5532
  ret i32 %0, !dbg !5533
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_max_insn_count() local_unnamed_addr #5 !dbg !5534 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !5537
  call void @llvm.dbg.value(metadata i32 %0, metadata !5536, metadata !DIExpression()), !dbg !5538
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !5539
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5541
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 117, i32 1, !dbg !5541
  %3 = load i32, i32* %value, align 8, !dbg !5541
  %cmp = icmp sgt i32 %1, %3, !dbg !5542
  br i1 %cmp, label %if.then, label %if.else, !dbg !5543

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5544

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.pn = phi i32 [ %1, %if.then ], [ %3, %if.else ], !dbg !5545
  %n.0 = sub nsw i32 %0, %.pn, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !5536, metadata !DIExpression()), !dbg !5538
  ret i32 %n.0, !dbg !5546
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5547 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5549, metadata !DIExpression()), !dbg !5550
  br label %while.cond, !dbg !5551

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5549, metadata !DIExpression()), !dbg !5550
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5551
  br i1 %tobool, label %while.end, label %while.body, !dbg !5551

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5552
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5552
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5549, metadata !DIExpression()), !dbg !5550
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5554
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5556

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5557
  %bf.load = load i32, i32* %2, align 8, !dbg !5557
  %bf.clear = and i32 %bf.load, 65535, !dbg !5557
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !5557
  br i1 %cmp1, label %while.cond, label %while.end, !dbg !5558, !llvm.loop !5559

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5549, metadata !DIExpression()), !dbg !5550
  ret %struct.rtx_def* %insn.addr.1, !dbg !5561
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_nonnote_insn_bb(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5562 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5564, metadata !DIExpression()), !dbg !5565
  br label %while.cond, !dbg !5566

while.cond:                                       ; preds = %if.end10, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5564, metadata !DIExpression()), !dbg !5565
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5566
  br i1 %tobool, label %return, label %while.body, !dbg !5566

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5567
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5567
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5567
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5564, metadata !DIExpression()), !dbg !5565
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5569
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5571

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5572
  %bf.load = load i32, i32* %2, align 8, !dbg !5572
  %bf.clear = and i32 %bf.load, 65535, !dbg !5572
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !5572
  br i1 %cmp1, label %if.end, label %return, !dbg !5573

if.end:                                           ; preds = %lor.lhs.false
  br i1 true, label %land.lhs.true, label %if.end.if.end10_crit_edge, !dbg !5574

if.end.if.end10_crit_edge:                        ; preds = %if.end
  br label %if.end10, !dbg !5574

land.lhs.true:                                    ; preds = %if.end
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5574
  %3 = getelementptr inbounds %union.u, %union.u* %u5, i64 1, i32 0, i32 0, i64 0, !dbg !5574
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !5574
  %4 = load i32, i32* %rt_int, align 8, !dbg !5574
  %cmp8 = icmp eq i32 %4, 10, !dbg !5574
  br i1 %cmp8, label %return, label %if.end10, !dbg !5576

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %land.lhs.true
  br label %while.cond, !dbg !5566, !llvm.loop !5577

return:                                           ; preds = %while.cond, %lor.lhs.false, %while.body, %land.lhs.true
  %retval.0 = phi %struct.rtx_def* [ null, %land.lhs.true ], [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ], !dbg !5565
  ret %struct.rtx_def* %retval.0, !dbg !5579
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5580 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5582, metadata !DIExpression()), !dbg !5583
  br label %while.cond, !dbg !5584

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5582, metadata !DIExpression()), !dbg !5583
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5584
  br i1 %tobool, label %while.end, label %while.body, !dbg !5584

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5585
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5585
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5585
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5582, metadata !DIExpression()), !dbg !5583
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5587
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5589

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5590
  %bf.load = load i32, i32* %2, align 8, !dbg !5590
  %bf.clear = and i32 %bf.load, 65535, !dbg !5590
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !5590
  br i1 %cmp1, label %while.cond, label %while.end, !dbg !5591, !llvm.loop !5592

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5582, metadata !DIExpression()), !dbg !5583
  ret %struct.rtx_def* %insn.addr.1, !dbg !5594
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_nonnote_insn_bb(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5595 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5597, metadata !DIExpression()), !dbg !5598
  br label %while.cond, !dbg !5599

while.cond:                                       ; preds = %if.end10, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5597, metadata !DIExpression()), !dbg !5598
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5599
  br i1 %tobool, label %return, label %while.body, !dbg !5599

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5600
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5600
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5597, metadata !DIExpression()), !dbg !5598
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5602
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5604

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5605
  %bf.load = load i32, i32* %2, align 8, !dbg !5605
  %bf.clear = and i32 %bf.load, 65535, !dbg !5605
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !5605
  br i1 %cmp1, label %if.end, label %return, !dbg !5606

if.end:                                           ; preds = %lor.lhs.false
  br i1 true, label %land.lhs.true, label %if.end.if.end10_crit_edge, !dbg !5607

if.end.if.end10_crit_edge:                        ; preds = %if.end
  br label %if.end10, !dbg !5607

land.lhs.true:                                    ; preds = %if.end
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5607
  %3 = getelementptr inbounds %union.u, %union.u* %u5, i64 1, i32 0, i32 0, i64 0, !dbg !5607
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !5607
  %4 = load i32, i32* %rt_int, align 8, !dbg !5607
  %cmp8 = icmp eq i32 %4, 10, !dbg !5607
  br i1 %cmp8, label %return, label %if.end10, !dbg !5609

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %land.lhs.true
  br label %while.cond, !dbg !5599, !llvm.loop !5610

return:                                           ; preds = %while.cond, %lor.lhs.false, %while.body, %land.lhs.true
  %retval.0 = phi %struct.rtx_def* [ null, %land.lhs.true ], [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ], !dbg !5598
  ret %struct.rtx_def* %retval.0, !dbg !5612
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_nondebug_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5613 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5615, metadata !DIExpression()), !dbg !5616
  br label %while.cond, !dbg !5617

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5615, metadata !DIExpression()), !dbg !5616
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5617
  br i1 %tobool, label %while.end, label %while.body, !dbg !5617

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5618
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5618
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5618
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5615, metadata !DIExpression()), !dbg !5616
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5620
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5622

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5623
  %bf.load = load i32, i32* %2, align 8, !dbg !5623
  %bf.clear = and i32 %bf.load, 65535, !dbg !5623
  %cmp1 = icmp eq i32 %bf.clear, 7, !dbg !5623
  br i1 %cmp1, label %while.cond, label %while.end, !dbg !5624, !llvm.loop !5625

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5615, metadata !DIExpression()), !dbg !5616
  ret %struct.rtx_def* %insn.addr.1, !dbg !5627
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_nondebug_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5628 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5630, metadata !DIExpression()), !dbg !5631
  br label %while.cond, !dbg !5632

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5630, metadata !DIExpression()), !dbg !5631
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5632
  br i1 %tobool, label %while.end, label %while.body, !dbg !5632

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5633
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5633
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5630, metadata !DIExpression()), !dbg !5631
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5635
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5637

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5638
  %bf.load = load i32, i32* %2, align 8, !dbg !5638
  %bf.clear = and i32 %bf.load, 65535, !dbg !5638
  %cmp1 = icmp eq i32 %bf.clear, 7, !dbg !5638
  br i1 %cmp1, label %while.cond, label %while.end, !dbg !5639, !llvm.loop !5640

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5630, metadata !DIExpression()), !dbg !5631
  ret %struct.rtx_def* %insn.addr.1, !dbg !5642
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_real_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5643 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5645, metadata !DIExpression()), !dbg !5646
  br label %while.cond, !dbg !5647

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5645, metadata !DIExpression()), !dbg !5646
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5647
  br i1 %tobool, label %while.end, label %while.body, !dbg !5647

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5648
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5648
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5645, metadata !DIExpression()), !dbg !5646
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5650
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5652

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5653
  %bf.load = load i32, i32* %2, align 8, !dbg !5653
  %bf.clear = and i32 %bf.load, 65535, !dbg !5653
  %3 = add nsw i32 %bf.clear, -7, !dbg !5653
  %4 = icmp ult i32 %3, 4, !dbg !5653
  br i1 %4, label %while.end, label %while.cond, !dbg !5653, !llvm.loop !5654

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5645, metadata !DIExpression()), !dbg !5646
  ret %struct.rtx_def* %insn.addr.1, !dbg !5656
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5657 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5659, metadata !DIExpression()), !dbg !5660
  br label %while.cond, !dbg !5661

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5659, metadata !DIExpression()), !dbg !5660
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5661
  br i1 %tobool, label %while.end, label %while.body, !dbg !5661

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5662
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5662
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5659, metadata !DIExpression()), !dbg !5660
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5664
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5666

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5667
  %bf.load = load i32, i32* %2, align 8, !dbg !5667
  %bf.clear = and i32 %bf.load, 65535, !dbg !5667
  %3 = add nsw i32 %bf.clear, -7, !dbg !5667
  %4 = icmp ult i32 %3, 4, !dbg !5667
  br i1 %4, label %while.end, label %while.cond, !dbg !5667, !llvm.loop !5668

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5659, metadata !DIExpression()), !dbg !5660
  ret %struct.rtx_def* %insn.addr.1, !dbg !5670
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @last_call_insn() local_unnamed_addr #5 !dbg !5671 {
entry:
  %call = tail call %struct.rtx_def* @get_last_insn() #8, !dbg !5674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5673, metadata !DIExpression()), !dbg !5676
  br label %for.cond, !dbg !5677

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call, %entry ], [ %2, %for.inc ], !dbg !5678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5673, metadata !DIExpression()), !dbg !5676
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5679
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !5681

land.rhs:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5682
  %bf.load = load i32, i32* %0, align 8, !dbg !5682
  %bf.clear = and i32 %bf.load, 65535, !dbg !5682
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !5682
  br i1 %cmp, label %for.end, label %for.inc, !dbg !5683

for.inc:                                          ; preds = %land.rhs
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5684
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5684
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5673, metadata !DIExpression()), !dbg !5676
  br label %for.cond, !dbg !5685, !llvm.loop !5686

for.end:                                          ; preds = %land.rhs, %for.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %land.rhs ], [ %insn.0, %for.cond ], !dbg !5678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.lcssa, metadata !5673, metadata !DIExpression()), !dbg !5676
  ret %struct.rtx_def* %insn.0.lcssa, !dbg !5688
}

; Function Attrs: nounwind uwtable
define dso_local i32 @active_insn_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5689 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5693
  %bf.load = load i32, i32* %0, align 8, !dbg !5693
  %bf.clear = and i32 %bf.load, 65535, !dbg !5693
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !5693
  br i1 %cmp, label %lor.end20, label %lor.lhs.false, !dbg !5694

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 9, !dbg !5695
  br i1 %cmp3, label %lor.end20, label %lor.rhs, !dbg !5696

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp6 = icmp eq i32 %bf.clear, 8, !dbg !5697
  br i1 %cmp6, label %land.rhs, label %lor.end20, !dbg !5698

land.rhs:                                         ; preds = %lor.rhs
  %1 = load i32, i32* @reload_completed, align 4, !dbg !5699
  %tobool = icmp eq i32 %1, 0, !dbg !5699
  br i1 %tobool, label %lor.end20, label %lor.rhs7, !dbg !5700

lor.rhs7:                                         ; preds = %land.rhs
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5701
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5701
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !5701
  %4 = load i32*, i32** %3, align 8, !dbg !5701
  %bf.load8 = load i32, i32* %4, align 8, !dbg !5701
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5701
  %cmp10 = icmp eq i32 %bf.clear9, 24, !dbg !5702
  br i1 %cmp10, label %lor.end20, label %land.rhs11, !dbg !5703

land.rhs11:                                       ; preds = %lor.rhs7
  %cmp18 = icmp ne i32 %bf.clear9, 25, !dbg !5704
  %phitmp = zext i1 %cmp18 to i32
  br label %lor.end20

lor.end20:                                        ; preds = %lor.rhs7, %land.rhs, %lor.rhs, %land.rhs11, %lor.lhs.false, %entry
  %5 = phi i32 [ 1, %lor.lhs.false ], [ 1, %entry ], [ 0, %lor.rhs ], [ 1, %land.rhs ], [ 0, %lor.rhs7 ], [ %phitmp, %land.rhs11 ]
  ret i32 %5, !dbg !5705
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_active_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5706 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5708, metadata !DIExpression()), !dbg !5709
  br label %while.cond, !dbg !5710

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5708, metadata !DIExpression()), !dbg !5709
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5710
  br i1 %tobool, label %while.end, label %while.body, !dbg !5710

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5711
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5711
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5708, metadata !DIExpression()), !dbg !5709
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5713
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5715

lor.lhs.false:                                    ; preds = %while.body
  %call = tail call i32 @active_insn_p(%struct.rtx_def* nonnull %1) #8, !dbg !5716
  %tobool1 = icmp eq i32 %call, 0, !dbg !5716
  br i1 %tobool1, label %while.cond, label %while.end, !dbg !5717, !llvm.loop !5718

while.end:                                        ; preds = %lor.lhs.false, %while.cond, %while.body
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5708, metadata !DIExpression()), !dbg !5709
  ret %struct.rtx_def* %insn.addr.1, !dbg !5720
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_active_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5721 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5723, metadata !DIExpression()), !dbg !5724
  br label %while.cond, !dbg !5725

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5723, metadata !DIExpression()), !dbg !5724
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5725
  br i1 %tobool, label %while.end, label %while.body, !dbg !5725

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5726
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5726
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5726
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5723, metadata !DIExpression()), !dbg !5724
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5728
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5730

lor.lhs.false:                                    ; preds = %while.body
  %call = tail call i32 @active_insn_p(%struct.rtx_def* nonnull %1) #8, !dbg !5731
  %tobool1 = icmp eq i32 %call, 0, !dbg !5731
  br i1 %tobool1, label %while.cond, label %while.end, !dbg !5732, !llvm.loop !5733

while.end:                                        ; preds = %lor.lhs.false, %while.cond, %while.body
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5723, metadata !DIExpression()), !dbg !5724
  ret %struct.rtx_def* %insn.addr.1, !dbg !5735
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @next_label(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5736 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5738, metadata !DIExpression()), !dbg !5739
  br label %while.cond, !dbg !5740

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5738, metadata !DIExpression()), !dbg !5739
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5740
  br i1 %tobool, label %while.end, label %while.body, !dbg !5740

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5741
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5741
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5741
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5738, metadata !DIExpression()), !dbg !5739
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5743
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5745

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5746
  %bf.load = load i32, i32* %2, align 8, !dbg !5746
  %bf.clear = and i32 %bf.load, 65535, !dbg !5746
  %cmp1 = icmp eq i32 %bf.clear, 12, !dbg !5746
  br i1 %cmp1, label %while.end, label %while.cond, !dbg !5747, !llvm.loop !5748

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5738, metadata !DIExpression()), !dbg !5739
  ret %struct.rtx_def* %insn.addr.1, !dbg !5750
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prev_label(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5751 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5753, metadata !DIExpression()), !dbg !5754
  br label %while.cond, !dbg !5755

while.cond:                                       ; preds = %lor.lhs.false, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5753, metadata !DIExpression()), !dbg !5754
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null, !dbg !5755
  br i1 %tobool, label %while.end, label %while.body, !dbg !5755

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5756
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5756
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5756
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5753, metadata !DIExpression()), !dbg !5754
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5758
  br i1 %cmp, label %while.end, label %lor.lhs.false, !dbg !5760

lor.lhs.false:                                    ; preds = %while.body
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5761
  %bf.load = load i32, i32* %2, align 8, !dbg !5761
  %bf.clear = and i32 %bf.load, 65535, !dbg !5761
  %cmp1 = icmp eq i32 %bf.clear, 12, !dbg !5761
  br i1 %cmp1, label %while.end, label %while.cond, !dbg !5762, !llvm.loop !5763

while.end:                                        ; preds = %while.cond, %while.body, %lor.lhs.false
  %insn.addr.1 = phi %struct.rtx_def* [ null, %while.cond ], [ %1, %lor.lhs.false ], [ null, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5753, metadata !DIExpression()), !dbg !5754
  ret %struct.rtx_def* %insn.addr.1, !dbg !5765
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @skip_consecutive_labels(%struct.rtx_def* %label) local_unnamed_addr #5 !dbg !5766 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !5769, metadata !DIExpression()), !dbg !5770
  br label %for.cond, !dbg !5771

for.cond:                                         ; preds = %for.body, %entry
  %insn.0 = phi %struct.rtx_def* [ %label, %entry ], [ %3, %for.body ], !dbg !5773
  %label.addr.0 = phi %struct.rtx_def* [ %label, %entry ], [ %spec.select, %for.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5769, metadata !DIExpression()), !dbg !5770
  %cmp = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5774
  br i1 %cmp, label %for.end, label %land.rhs, !dbg !5776

land.rhs:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5777
  %bf.load = load i32, i32* %0, align 8, !dbg !5777
  %bf.clear = and i32 %bf.load, 65535, !dbg !5777
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !5777
  br i1 %cmp1, label %lor.end, label %lor.lhs.false, !dbg !5777

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !5777
  br i1 %cmp4, label %lor.end, label %lor.lhs.false5, !dbg !5777

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !5777
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !5777

lor.rhs:                                          ; preds = %lor.lhs.false5
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5777
  br label %lor.end, !dbg !5777

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false5, %lor.lhs.false, %land.rhs
  %1 = phi i1 [ true, %lor.lhs.false5 ], [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp11, %lor.rhs ]
  br i1 %1, label %for.end, label %for.body, !dbg !5778

for.body:                                         ; preds = %lor.end
  %cmp14 = icmp eq i32 %bf.clear, 12, !dbg !5779
  %spec.select = select i1 %cmp14, %struct.rtx_def* %insn.0, %struct.rtx_def* %label.addr.0, !dbg !5781
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !5768, metadata !DIExpression()), !dbg !5770
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5782
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5782
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5782
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5769, metadata !DIExpression()), !dbg !5770
  br label %for.cond, !dbg !5783, !llvm.loop !5784

for.end:                                          ; preds = %lor.end, %for.cond
  %label.addr.0.lcssa = phi %struct.rtx_def* [ %label.addr.0, %lor.end ], [ %label.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.addr.0.lcssa, metadata !5768, metadata !DIExpression()), !dbg !5770
  ret %struct.rtx_def* %label.addr.0.lcssa, !dbg !5786
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @try_split(%struct.rtx_def* %pat, %struct.rtx_def* %trial, i32 %last) local_unnamed_addr #5 !dbg !5787 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5791, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %trial, metadata !5792, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata i32 %last, metadata !5793, metadata !DIExpression()), !dbg !5811
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5812
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5812
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5794, metadata !DIExpression()), !dbg !5811
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5813
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5813
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5795, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata i32 0, metadata !5796, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5811
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 0, !dbg !5814
  %bf.load = load i32, i32* %4, align 8, !dbg !5814
  %bf.clear = and i32 %bf.load, 1073741824, !dbg !5814
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !5814
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5816

if.end:                                           ; preds = %entry
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %trial) #7, !dbg !5817
  %tobool5 = icmp eq i32 %call, 0, !dbg !5817
  br i1 %tobool5, label %if.end15, label %land.lhs.true, !dbg !5819

land.lhs.true:                                    ; preds = %if.end
  %call6 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %trial, i32 13, %struct.rtx_def* null) #7, !dbg !5820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5797, metadata !DIExpression()), !dbg !5811
  %tobool7 = icmp eq %struct.rtx_def* %call6, null, !dbg !5821
  br i1 %tobool7, label %if.end15, label %if.then8, !dbg !5822

if.then8:                                         ; preds = %land.lhs.true
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5823
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5823
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5823
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !5823
  %arrayidx14 = bitcast %union.u* %u13 to i64*, !dbg !5823
  %6 = load i64, i64* %arrayidx14, align 8, !dbg !5823
  %conv = trunc i64 %6 to i32, !dbg !5823
  store i32 %conv, i32* @split_branch_probability, align 4, !dbg !5824
  br label %if.end15, !dbg !5825

if.end15:                                         ; preds = %land.lhs.true, %if.end, %if.then8
  %7 = load i32, i32* @split_branch_probability, align 4, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %7, metadata !5800, metadata !DIExpression()), !dbg !5811
  %call16 = tail call %struct.rtx_def* @split_insns(%struct.rtx_def* %pat, %struct.rtx_def* %trial) #7, !dbg !5827
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !5798, metadata !DIExpression()), !dbg !5811
  store i32 -1, i32* @split_branch_probability, align 4, !dbg !5828
  %tobool17 = icmp eq %struct.rtx_def* %3, null, !dbg !5829
  br i1 %tobool17, label %if.end27, label %land.lhs.true18, !dbg !5831

land.lhs.true18:                                  ; preds = %if.end15
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !5832
  %bf.load19 = load i32, i32* %8, align 8, !dbg !5832
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !5832
  %cmp = icmp eq i32 %bf.clear20, 11, !dbg !5832
  br i1 %cmp, label %if.then22, label %if.end27, !dbg !5833

if.then22:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.value(metadata i32 1, metadata !5796, metadata !DIExpression()), !dbg !5811
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5834
  %rt_rtx26 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5834
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !5834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5795, metadata !DIExpression()), !dbg !5811
  br label %if.end27, !dbg !5836

if.end27:                                         ; preds = %if.end15, %if.then22, %land.lhs.true18
  %has_barrier.0 = phi i32 [ 1, %if.then22 ], [ 0, %land.lhs.true18 ], [ 0, %if.end15 ], !dbg !5811
  %after.0 = phi %struct.rtx_def* [ %10, %if.then22 ], [ %3, %land.lhs.true18 ], [ null, %if.end15 ], !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.0, metadata !5795, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata i32 %has_barrier.0, metadata !5796, metadata !DIExpression()), !dbg !5811
  %tobool28 = icmp eq %struct.rtx_def* %call16, null, !dbg !5837
  br i1 %tobool28, label %cleanup, label %while.cond.preheader, !dbg !5839

while.cond.preheader:                             ; preds = %if.end27
  br label %while.cond, !dbg !5840

while.cond:                                       ; preds = %while.cond.preheader, %if.end64
  %insn_last.0 = phi %struct.rtx_def* [ %15, %if.end64 ], [ %call16, %while.cond.preheader ], !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0, metadata !5801, metadata !DIExpression()), !dbg !5811
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_last.0, i64 0, i32 0, !dbg !5841
  %bf.load31 = load i32, i32* %11, align 8, !dbg !5841
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !5841
  %cmp33 = icmp eq i32 %bf.clear32, 8, !dbg !5841
  br i1 %cmp33, label %land.lhs.true49, label %lor.lhs.false, !dbg !5841

lor.lhs.false:                                    ; preds = %while.cond
  %cmp37 = icmp eq i32 %bf.clear32, 7, !dbg !5841
  br i1 %cmp37, label %land.lhs.true49, label %lor.lhs.false39, !dbg !5841

lor.lhs.false39:                                  ; preds = %lor.lhs.false
  %cmp42 = icmp eq i32 %bf.clear32, 9, !dbg !5841
  br i1 %cmp42, label %land.lhs.true49, label %lor.lhs.false44, !dbg !5841

lor.lhs.false44:                                  ; preds = %lor.lhs.false39
  %cmp47 = icmp eq i32 %bf.clear32, 10, !dbg !5841
  br i1 %cmp47, label %land.lhs.true49, label %if.end57, !dbg !5844

land.lhs.true49:                                  ; preds = %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false, %while.cond
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_last.0, i64 0, i32 1, !dbg !5845
  %12 = getelementptr inbounds %union.u, %union.u* %u50, i64 1, i32 0, i32 0, i64 0, !dbg !5845
  %rt_rtx53 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5845
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !5845
  %call54 = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %pat) #7, !dbg !5846
  %tobool55 = icmp eq i32 %call54, 0, !dbg !5846
  br i1 %tobool55, label %if.end57, label %cleanup.loopexit, !dbg !5847

if.end57:                                         ; preds = %land.lhs.true49, %lor.lhs.false44
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_last.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5848
  %rt_rtx61 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5848
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !5848
  %tobool62 = icmp eq %struct.rtx_def* %15, null, !dbg !5848
  br i1 %tobool62, label %while.end, label %if.end64, !dbg !5850

if.end64:                                         ; preds = %if.end57
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !5801, metadata !DIExpression()), !dbg !5811
  br label %while.cond, !dbg !5840, !llvm.loop !5851

while.end:                                        ; preds = %if.end57
  %insn_last.0.lcssa5 = phi %struct.rtx_def* [ %insn_last.0, %if.end57 ], !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5801, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5801, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5801, metadata !DIExpression()), !dbg !5811
  tail call void @unshare_all_rtl_in_chain(%struct.rtx_def* nonnull %call16) #8, !dbg !5853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5802, metadata !DIExpression()), !dbg !5811
  %cmp79 = icmp eq i32 %7, -1, !dbg !5854
  %conv90 = sext i32 %7 to i64, !dbg !5861
  br i1 %cmp79, label %while.end.split.us, label %while.end.while.end.split_crit_edge, !dbg !5863

while.end.while.end.split_crit_edge:              ; preds = %while.end
  br label %for.cond, !dbg !5863

while.end.split.us:                               ; preds = %while.end
  br label %for.cond.us, !dbg !5863

for.cond.us:                                      ; preds = %for.inc.us, %while.end.split.us
  %insn.0.us = phi %struct.rtx_def* [ %insn_last.0.lcssa5, %while.end.split.us ], [ %20, %for.inc.us ], !dbg !5864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.us, metadata !5802, metadata !DIExpression()), !dbg !5811
  %tobool69.us = icmp eq %struct.rtx_def* %insn.0.us, null, !dbg !5865
  br i1 %tobool69.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !5865

for.body.us:                                      ; preds = %for.cond.us
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 0, !dbg !5866
  %bf.load70.us = load i32, i32* %16, align 8, !dbg !5866
  %bf.clear71.us = and i32 %bf.load70.us, 65535, !dbg !5866
  %cmp72.us = icmp eq i32 %bf.clear71.us, 9, !dbg !5866
  br i1 %cmp72.us, label %if.then74.us, label %for.inc.us, !dbg !5867

if.then74.us:                                     ; preds = %for.body.us
  %u75.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, !dbg !5868
  %17 = getelementptr inbounds %union.u, %union.u* %u75.us, i64 1, i32 0, i32 0, i64 0, !dbg !5868
  %rt_rtx78.us = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !5868
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78.us, align 8, !dbg !5868
  tail call void @mark_jump_label(%struct.rtx_def* %18, %struct.rtx_def* nonnull %insn.0.us, i32 0) #7, !dbg !5869
  br label %for.inc.us, !dbg !5870

for.inc.us:                                       ; preds = %if.then74.us, %for.body.us
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5871
  %rt_rtx97.us = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5871
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97.us, align 8, !dbg !5871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %for.cond.us, !dbg !5872, !llvm.loop !5873

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !5875

for.cond:                                         ; preds = %for.inc, %while.end.while.end.split_crit_edge
  %insn.0 = phi %struct.rtx_def* [ %insn_last.0.lcssa5, %while.end.while.end.split_crit_edge ], [ %25, %for.inc ], !dbg !5864
  %njumps.0 = phi i32 [ 0, %while.end.while.end.split_crit_edge ], [ %njumps.1, %for.inc ], !dbg !5811
  call void @llvm.dbg.value(metadata i32 %njumps.0, metadata !5803, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5802, metadata !DIExpression()), !dbg !5811
  %tobool69 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5865
  br i1 %tobool69, label %for.end.us-lcssa, label %for.body, !dbg !5865

for.body:                                         ; preds = %for.cond
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5866
  %bf.load70 = load i32, i32* %21, align 8, !dbg !5866
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !5866
  %cmp72 = icmp eq i32 %bf.clear71, 9, !dbg !5866
  br i1 %cmp72, label %if.then74, label %for.inc, !dbg !5867

if.then74:                                        ; preds = %for.body
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5868
  %22 = getelementptr inbounds %union.u, %union.u* %u75, i64 1, i32 0, i32 0, i64 0, !dbg !5868
  %rt_rtx78 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !5868
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !5868
  tail call void @mark_jump_label(%struct.rtx_def* %23, %struct.rtx_def* nonnull %insn.0, i32 0) #7, !dbg !5869
  %inc = add nsw i32 %njumps.0, 1, !dbg !5876
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5803, metadata !DIExpression()), !dbg !5811
  %call82 = tail call i32 @any_condjump_p(%struct.rtx_def* nonnull %insn.0) #7, !dbg !5877
  %tobool83 = icmp eq i32 %call82, 0, !dbg !5877
  br i1 %tobool83, label %for.inc, label %land.lhs.true84, !dbg !5878

land.lhs.true84:                                  ; preds = %if.then74
  %call85 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 13, %struct.rtx_def* null) #7, !dbg !5879
  %tobool86 = icmp eq %struct.rtx_def* %call85, null, !dbg !5879
  br i1 %tobool86, label %if.then87, label %for.inc, !dbg !5880

if.then87:                                        ; preds = %land.lhs.true84
  %cmp88 = icmp eq i32 %njumps.0, 0, !dbg !5881
  br i1 %cmp88, label %cond.end, label %cond.true, !dbg !5881

cond.true:                                        ; preds = %if.then87
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3497, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5881
  br label %cond.end, !dbg !5881

cond.end:                                         ; preds = %if.then87, %cond.true
  %call91 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv90) #8, !dbg !5882
  tail call void @add_reg_note(%struct.rtx_def* nonnull %insn.0, i32 13, %struct.rtx_def* %call91) #7, !dbg !5883
  br label %for.inc, !dbg !5884

for.inc:                                          ; preds = %land.lhs.true84, %if.then74, %for.body, %cond.end
  %njumps.1 = phi i32 [ %njumps.0, %for.body ], [ %inc, %cond.end ], [ %inc, %land.lhs.true84 ], [ %inc, %if.then74 ], !dbg !5811
  call void @llvm.dbg.value(metadata i32 %njumps.1, metadata !5803, metadata !DIExpression()), !dbg !5811
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5871
  %rt_rtx97 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !5871
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !5871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %for.cond, !dbg !5872, !llvm.loop !5873

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !5875

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %bf.load98 = load i32, i32* %4, align 8, !dbg !5875
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !5875
  %cmp100 = icmp eq i32 %bf.clear99, 10, !dbg !5875
  br i1 %cmp100, label %for.cond103.preheader, label %if.end142, !dbg !5885

for.cond103.preheader:                            ; preds = %for.end
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 1, !dbg !5886
  %arrayidx125 = getelementptr inbounds %union.u, %union.u* %u123, i64 1, i32 0, i32 1, !dbg !5886
  %26 = bitcast %struct.object_block** %arrayidx125 to i64*, !dbg !5886
  br label %for.cond103, !dbg !5887

for.cond103:                                      ; preds = %for.cond103.preheader, %for.inc136
  %insn.1 = phi %struct.rtx_def* [ %36, %for.inc136 ], [ %insn_last.0.lcssa5, %for.cond103.preheader ], !dbg !5888
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5802, metadata !DIExpression()), !dbg !5811
  %tobool104 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5887
  br i1 %tobool104, label %if.end142.loopexit, label %for.body105, !dbg !5887

for.body105:                                      ; preds = %for.cond103
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5889
  %bf.load106 = load i32, i32* %27, align 8, !dbg !5889
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !5889
  %cmp108 = icmp eq i32 %bf.clear107, 10, !dbg !5889
  br i1 %cmp108, label %if.then110, label %for.inc136, !dbg !5890

if.then110:                                       ; preds = %for.body105
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !5891
  %arrayidx113 = getelementptr inbounds %union.u, %union.u* %u111, i64 1, i32 0, i32 1, !dbg !5891
  %rt_rtx114 = bitcast %struct.object_block** %arrayidx113 to %struct.rtx_def**, !dbg !5891
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx114, metadata !5804, metadata !DIExpression()), !dbg !5886
  br label %while.cond115, !dbg !5892

while.cond115:                                    ; preds = %while.body117, %if.then110
  %p.0 = phi %struct.rtx_def** [ %rt_rtx114, %if.then110 ], [ %rt_rtx121, %while.body117 ], !dbg !5886
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p.0, metadata !5804, metadata !DIExpression()), !dbg !5886
  %28 = load %struct.rtx_def*, %struct.rtx_def** %p.0, align 8, !dbg !5893
  %tobool116 = icmp eq %struct.rtx_def* %28, null, !dbg !5892
  br i1 %tobool116, label %while.end122, label %while.body117, !dbg !5892

while.body117:                                    ; preds = %while.cond115
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5894
  %rt_rtx121 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !5894
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx121, metadata !5804, metadata !DIExpression()), !dbg !5886
  br label %while.cond115, !dbg !5892, !llvm.loop !5895

while.end122:                                     ; preds = %while.cond115
  %p.0.lcssa = phi %struct.rtx_def** [ %p.0, %while.cond115 ], !dbg !5886
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p.0.lcssa, metadata !5804, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p.0.lcssa, metadata !5804, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata %struct.rtx_def** %p.0.lcssa, metadata !5804, metadata !DIExpression()), !dbg !5886
  %30 = load i64, i64* %26, align 8, !dbg !5896
  %31 = bitcast %struct.rtx_def** %p.0.lcssa to i64*, !dbg !5897
  store i64 %30, i64* %31, align 8, !dbg !5897
  %bf.load127 = load i32, i32* %4, align 8, !dbg !5898
  %bf.clear129 = and i32 %bf.load127, 16777216, !dbg !5898
  %bf.load130 = load i32, i32* %27, align 8, !dbg !5899
  %bf.clear131 = and i32 %bf.load130, -16777217, !dbg !5899
  %bf.set = or i32 %bf.clear131, %bf.clear129, !dbg !5899
  store i32 %bf.set, i32* %27, align 8, !dbg !5899
  %32 = load i32, i32* @flag_enable_icf_debug, align 4, !dbg !5900
  %tobool132 = icmp eq i32 %32, 0, !dbg !5900
  br i1 %tobool132, label %for.inc136, label %if.then133, !dbg !5902

if.then133:                                       ; preds = %while.end122
  %33 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !5903
  %copy_call_info = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %33, i64 0, i32 28, !dbg !5904
  %34 = load void (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.rtx_def*)** %copy_call_info, align 8, !dbg !5904
  tail call void %34(%struct.rtx_def* %trial, %struct.rtx_def* nonnull %insn.1) #7, !dbg !5905
  br label %for.inc136, !dbg !5905

for.inc136:                                       ; preds = %while.end122, %for.body105, %if.then133
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5906
  %rt_rtx140 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !5906
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !5906
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %for.cond103, !dbg !5907, !llvm.loop !5908

if.end142.loopexit:                               ; preds = %for.cond103
  br label %if.end142, !dbg !5910

if.end142:                                        ; preds = %if.end142.loopexit, %for.end
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 1, !dbg !5910
  %37 = getelementptr inbounds %union.u, %union.u* %u143, i64 1, i32 0, i32 0, i64 2, !dbg !5910
  br label %for.cond147, !dbg !5912

for.cond147:                                      ; preds = %for.inc201, %if.end142
  %note.0.in.in = phi %union.rtunion_def* [ %37, %if.end142 ], [ %47, %for.inc201 ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !5913
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !5913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !5797, metadata !DIExpression()), !dbg !5811
  %tobool148 = icmp eq %struct.rtx_def* %note.0, null, !dbg !5914
  br i1 %tobool148, label %for.end206, label %for.body149, !dbg !5914

for.body149:                                      ; preds = %for.cond147
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !5915
  %bf.load150 = load i32, i32* %38, align 8, !dbg !5915
  %bf.lshr151 = lshr i32 %bf.load150, 16, !dbg !5915
  %trunc = trunc i32 %bf.lshr151 to i8, !dbg !5918
  switch i8 %trunc, label %for.inc201 [
    i8 25, label %sw.bb
    i8 27, label %sw.bb153
    i8 30, label %sw.bb153
    i8 28, label %for.cond178.preheader
  ], !dbg !5918

for.cond178.preheader:                            ; preds = %for.body149
  %arrayidx192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5919
  %rt_rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**, !dbg !5919
  br label %for.cond178, !dbg !5925

sw.bb:                                            ; preds = %for.body149
  tail call void @copy_reg_eh_region_note_backward(%struct.rtx_def* nonnull %note.0, %struct.rtx_def* %insn_last.0.lcssa5, %struct.rtx_def* null) #7, !dbg !5926
  br label %for.inc201, !dbg !5927

sw.bb153:                                         ; preds = %for.body149, %for.body149
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5802, metadata !DIExpression()), !dbg !5811
  %arrayidx168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5928
  %rt_rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**, !dbg !5928
  br label %for.cond154, !dbg !5933

for.cond154:                                      ; preds = %for.inc171, %sw.bb153
  %insn.2 = phi %struct.rtx_def* [ %insn_last.0.lcssa5, %sw.bb153 ], [ %42, %for.inc171 ], !dbg !5934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5802, metadata !DIExpression()), !dbg !5811
  %cmp155 = icmp eq %struct.rtx_def* %insn.2, null, !dbg !5935
  br i1 %cmp155, label %for.inc201.loopexit, label %for.body157, !dbg !5936

for.body157:                                      ; preds = %for.cond154
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !5937
  %bf.load158 = load i32, i32* %39, align 8, !dbg !5937
  %bf.clear159 = and i32 %bf.load158, 65535, !dbg !5937
  %cmp160 = icmp eq i32 %bf.clear159, 10, !dbg !5937
  br i1 %cmp160, label %if.then162, label %for.inc171, !dbg !5938

if.then162:                                       ; preds = %for.body157
  %bf.load163 = load i32, i32* %38, align 8, !dbg !5939
  %bf.lshr164 = lshr i32 %bf.load163, 16, !dbg !5939
  %bf.clear165 = and i32 %bf.lshr164, 255, !dbg !5939
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx169, align 8, !dbg !5940
  tail call void @add_reg_note(%struct.rtx_def* nonnull %insn.2, i32 %bf.clear165, %struct.rtx_def* %40) #7, !dbg !5941
  br label %for.inc171, !dbg !5941

for.inc171:                                       ; preds = %for.body157, %if.then162
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5942
  %rt_rtx175 = bitcast %union.rtunion_def* %41 to %struct.rtx_def**, !dbg !5942
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx175, align 8, !dbg !5942
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %for.cond154, !dbg !5943, !llvm.loop !5944

for.cond178:                                      ; preds = %for.cond178.preheader, %for.inc195
  %insn.3 = phi %struct.rtx_def* [ %46, %for.inc195 ], [ %insn_last.0.lcssa5, %for.cond178.preheader ], !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !5802, metadata !DIExpression()), !dbg !5811
  %cmp179 = icmp eq %struct.rtx_def* %insn.3, null, !dbg !5947
  br i1 %cmp179, label %for.inc201.loopexit1, label %for.body181, !dbg !5925

for.body181:                                      ; preds = %for.cond178
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 0, !dbg !5948
  %bf.load182 = load i32, i32* %43, align 8, !dbg !5948
  %bf.clear183 = and i32 %bf.load182, 65535, !dbg !5948
  %cmp184 = icmp eq i32 %bf.clear183, 9, !dbg !5948
  br i1 %cmp184, label %if.then186, label %for.inc195, !dbg !5949

if.then186:                                       ; preds = %for.body181
  %bf.load187 = load i32, i32* %38, align 8, !dbg !5950
  %bf.lshr188 = lshr i32 %bf.load187, 16, !dbg !5950
  %bf.clear189 = and i32 %bf.lshr188, 255, !dbg !5950
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx193, align 8, !dbg !5951
  tail call void @add_reg_note(%struct.rtx_def* nonnull %insn.3, i32 %bf.clear189, %struct.rtx_def* %44) #7, !dbg !5952
  br label %for.inc195, !dbg !5952

for.inc195:                                       ; preds = %for.body181, %if.then186
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5953
  %rt_rtx199 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**, !dbg !5953
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !5953
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %for.cond178, !dbg !5954, !llvm.loop !5955

for.inc201.loopexit:                              ; preds = %for.cond154
  br label %for.inc201, !dbg !5957

for.inc201.loopexit1:                             ; preds = %for.cond178
  br label %for.inc201, !dbg !5957

for.inc201:                                       ; preds = %for.inc201.loopexit1, %for.inc201.loopexit, %sw.bb, %for.body149
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5957
  br label %for.cond147, !dbg !5958, !llvm.loop !5959

for.end206:                                       ; preds = %for.cond147
  %bf.load207 = load i32, i32* %4, align 8, !dbg !5961
  %bf.clear208 = and i32 %bf.load207, 65535, !dbg !5961
  %cmp209 = icmp eq i32 %bf.clear208, 8, !dbg !5961
  br i1 %cmp209, label %if.then226, label %lor.lhs.false211, !dbg !5961

lor.lhs.false211:                                 ; preds = %for.end206
  %cmp214 = icmp eq i32 %bf.clear208, 7, !dbg !5961
  br i1 %cmp214, label %if.then226, label %lor.lhs.false216, !dbg !5961

lor.lhs.false216:                                 ; preds = %lor.lhs.false211
  %cmp219 = icmp eq i32 %bf.clear208, 9, !dbg !5961
  br i1 %cmp219, label %if.then226, label %lor.lhs.false221, !dbg !5961

lor.lhs.false221:                                 ; preds = %lor.lhs.false216
  %cmp224 = icmp eq i32 %bf.clear208, 10, !dbg !5961
  br i1 %cmp224, label %if.then226, label %if.end246, !dbg !5963

if.then226:                                       ; preds = %lor.lhs.false221, %lor.lhs.false216, %lor.lhs.false211, %for.end206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_last.0.lcssa5, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %while.cond227, !dbg !5964

while.cond227:                                    ; preds = %if.end240, %if.then226
  %insn.4 = phi %struct.rtx_def* [ %insn_last.0.lcssa5, %if.then226 ], [ %52, %if.end240 ], !dbg !5966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.4, metadata !5802, metadata !DIExpression()), !dbg !5811
  %cmp228 = icmp eq %struct.rtx_def* %insn.4, null, !dbg !5967
  br i1 %cmp228, label %if.end246.loopexit, label %while.body230, !dbg !5964

while.body230:                                    ; preds = %while.cond227
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.4, i64 0, i32 0, !dbg !5968
  %bf.load231 = load i32, i32* %48, align 8, !dbg !5968
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !5968
  %cmp233 = icmp eq i32 %bf.clear232, 8, !dbg !5968
  br i1 %cmp233, label %if.then235, label %if.end240, !dbg !5971

if.then235:                                       ; preds = %while.body230
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.4, i64 0, i32 1, !dbg !5972
  %49 = getelementptr inbounds %union.u, %union.u* %u236, i64 1, i32 0, i32 0, i64 0, !dbg !5972
  %rt_rtx239 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !5972
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !5972
  tail call fastcc void @mark_label_nuses(%struct.rtx_def* %50) #8, !dbg !5973
  br label %if.end240, !dbg !5973

if.end240:                                        ; preds = %if.then235, %while.body230
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5974
  %rt_rtx244 = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !5974
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx244, align 8, !dbg !5974
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !5802, metadata !DIExpression()), !dbg !5811
  br label %while.cond227, !dbg !5964, !llvm.loop !5975

if.end246.loopexit:                               ; preds = %while.cond227
  br label %if.end246, !dbg !5977

if.end246:                                        ; preds = %if.end246.loopexit, %lor.lhs.false221
  %arrayidx249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trial, i64 0, i32 1, i32 0, i32 2, !dbg !5977
  %rt_int = bitcast i64* %arrayidx249 to i32*, !dbg !5977
  %53 = load i32, i32* %rt_int, align 8, !dbg !5977
  %call250 = tail call %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def* nonnull %call16, %struct.rtx_def* %trial, i32 %53) #8, !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call250, metadata !5799, metadata !DIExpression()), !dbg !5811
  %call251 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %trial) #7, !dbg !5979
  %tobool252 = icmp eq i32 %has_barrier.0, 0, !dbg !5980
  br i1 %tobool252, label %if.end255, label %if.then253, !dbg !5982

if.then253:                                       ; preds = %if.end246
  %call254 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %call250) #8, !dbg !5983
  br label %if.end255, !dbg !5983

if.end255:                                        ; preds = %if.end246, %if.then253
  br label %for.cond260, !dbg !5984

for.cond260:                                      ; preds = %for.inc295, %if.end255
  %.pn = phi %struct.rtx_def* [ %1, %if.end255 ], [ %tem.1, %for.inc295 ]
  %tem.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5986
  %tem.0.in = bitcast %union.rtunion_def* %tem.0.in.in to %struct.rtx_def**, !dbg !5986
  %tem.0 = load %struct.rtx_def*, %struct.rtx_def** %tem.0.in, align 8, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tem.0, metadata !5799, metadata !DIExpression()), !dbg !5811
  %cmp261 = icmp eq %struct.rtx_def* %tem.0, %after.0, !dbg !5987
  br i1 %cmp261, label %for.end300, label %for.body263, !dbg !5989

for.body263:                                      ; preds = %for.cond260
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tem.0, i64 0, i32 0, !dbg !5990
  %bf.load264 = load i32, i32* %54, align 8, !dbg !5990
  %bf.clear266 = and i32 %bf.load264, 134217728, !dbg !5990
  %tobool267 = icmp eq i32 %bf.clear266, 0, !dbg !5990
  br i1 %tobool267, label %land.lhs.true268, label %for.inc295, !dbg !5992

land.lhs.true268:                                 ; preds = %for.body263
  %bf.clear270 = and i32 %bf.load264, 65535, !dbg !5993
  %cmp271 = icmp eq i32 %bf.clear270, 8, !dbg !5993
  br i1 %cmp271, label %if.then288, label %lor.lhs.false273, !dbg !5993

lor.lhs.false273:                                 ; preds = %land.lhs.true268
  %cmp276 = icmp eq i32 %bf.clear270, 7, !dbg !5993
  br i1 %cmp276, label %if.then288, label %lor.lhs.false278, !dbg !5993

lor.lhs.false278:                                 ; preds = %lor.lhs.false273
  %cmp281 = icmp eq i32 %bf.clear270, 9, !dbg !5993
  br i1 %cmp281, label %if.then288, label %lor.lhs.false283, !dbg !5993

lor.lhs.false283:                                 ; preds = %lor.lhs.false278
  %cmp286 = icmp eq i32 %bf.clear270, 10, !dbg !5993
  br i1 %cmp286, label %if.then288, label %for.inc295, !dbg !5994

if.then288:                                       ; preds = %lor.lhs.false283, %lor.lhs.false278, %lor.lhs.false273, %land.lhs.true268
  %u289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tem.0, i64 0, i32 1, !dbg !5995
  %55 = getelementptr inbounds %union.u, %union.u* %u289, i64 1, i32 0, i32 0, i64 0, !dbg !5995
  %rt_rtx292 = bitcast %union.rtunion_def* %55 to %struct.rtx_def**, !dbg !5995
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx292, align 8, !dbg !5995
  %call293 = tail call %struct.rtx_def* @try_split(%struct.rtx_def* %56, %struct.rtx_def* %tem.0, i32 1) #8, !dbg !5996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call293, metadata !5799, metadata !DIExpression()), !dbg !5811
  br label %for.inc295, !dbg !5997

for.inc295:                                       ; preds = %for.body263, %lor.lhs.false283, %if.then288
  %tem.1 = phi %struct.rtx_def* [ %tem.0, %for.body263 ], [ %call293, %if.then288 ], [ %tem.0, %lor.lhs.false283 ], !dbg !5986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tem.1, metadata !5799, metadata !DIExpression()), !dbg !5811
  br label %for.cond260, !dbg !5998, !llvm.loop !5999

for.end300:                                       ; preds = %for.cond260
  %tobool301 = icmp eq i32 %last, 0, !dbg !6001
  br i1 %tobool301, label %cond.false312, label %cond.true302, !dbg !6001

cond.true302:                                     ; preds = %for.end300
  %tobool303 = icmp eq %struct.rtx_def* %after.0, null, !dbg !6002
  br i1 %tobool303, label %cond.false309, label %cond.true304, !dbg !6002

cond.true304:                                     ; preds = %cond.true302
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6003
  %rt_rtx308 = bitcast %union.rtunion_def* %57 to %struct.rtx_def**, !dbg !6003
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx308, align 8, !dbg !6003
  br label %cleanup, !dbg !6002

cond.false309:                                    ; preds = %cond.true302
  %59 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6004
  br label %cleanup, !dbg !6002

cond.false312:                                    ; preds = %for.end300
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6005
  %rt_rtx316 = bitcast %union.rtunion_def* %60 to %struct.rtx_def**, !dbg !6005
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx316, align 8, !dbg !6005
  br label %cleanup, !dbg !6001

cleanup.loopexit:                                 ; preds = %land.lhs.true49
  br label %cleanup, !dbg !6006

cleanup:                                          ; preds = %cleanup.loopexit, %if.end27, %entry, %cond.false312, %cond.false309, %cond.true304
  %retval.0 = phi %struct.rtx_def* [ %trial, %entry ], [ %trial, %if.end27 ], [ %61, %cond.false312 ], [ %58, %cond.true304 ], [ %59, %cond.false309 ], [ %trial, %cleanup.loopexit ], !dbg !5811
  ret %struct.rtx_def* %retval.0, !dbg !6006
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @split_insns(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @mark_jump_label(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @copy_reg_eh_region_note_backward(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_label_nuses(%struct.rtx_def* %x) unnamed_addr #5 !dbg !6007 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6009, metadata !DIExpression()), !dbg !6014
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6015
  %bf.load = load i32, i32* %0, align 8, !dbg !6015
  %bf.clear = and i32 %bf.load, 65535, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6010, metadata !DIExpression()), !dbg !6014
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !6016
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6018

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6019
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !6019
  %2 = load i32*, i32** %1, align 8, !dbg !6019
  %bf.load1 = load i32, i32* %2, align 8, !dbg !6019
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6019
  %cmp3 = icmp eq i32 %bf.clear2, 12, !dbg !6019
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6020

if.then:                                          ; preds = %land.lhs.true
  %arrayidx10 = getelementptr inbounds i32, i32* %2, i64 10, !dbg !6021
  %3 = load i32, i32* %arrayidx10, align 8, !dbg !6022
  %inc = add nsw i32 %3, 1, !dbg !6022
  store i32 %inc, i32* %arrayidx10, align 8, !dbg !6022
  br label %if.end, !dbg !6021

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !6023
  %arrayidx11 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6023
  %4 = load i8*, i8** %arrayidx11, align 8, !dbg !6023
  call void @llvm.dbg.value(metadata i8* %4, metadata !6013, metadata !DIExpression()), !dbg !6014
  %arrayidx13 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !6024
  %5 = load i8, i8* %arrayidx13, align 1, !dbg !6024
  call void @llvm.dbg.value(metadata i8 %5, metadata !6011, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6026
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !6026
  %6 = zext i8 %5 to i64, !dbg !6032
  br label %for.cond, !dbg !6032

for.cond:                                         ; preds = %for.inc51, %if.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc51 ], [ %6, %if.end ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !6033
  call void @llvm.dbg.value(metadata i32 undef, metadata !6011, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  %cmp14 = icmp sgt i64 %indvars.iv1, 0, !dbg !6034
  br i1 %cmp14, label %for.body, label %for.end53, !dbg !6035

for.body:                                         ; preds = %for.cond
  %arrayidx17 = getelementptr inbounds i8, i8* %4, i64 %indvars.iv.next2, !dbg !6036
  %7 = load i8, i8* %arrayidx17, align 1, !dbg !6036
  %cmp19 = icmp eq i8 %7, 101, !dbg !6037
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !6038

if.then21:                                        ; preds = %for.body
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next2, !dbg !6039
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !6039
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !6039
  tail call fastcc void @mark_label_nuses(%struct.rtx_def* %8) #8, !dbg !6040
  br label %for.inc51, !dbg !6040

if.else:                                          ; preds = %for.body
  %cmp30 = icmp eq i8 %7, 69, !dbg !6041
  br i1 %cmp30, label %if.then32, label %for.inc51, !dbg !6042

if.then32:                                        ; preds = %if.else
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next2, !dbg !6043
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !6043
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6043
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 0, !dbg !6043
  %10 = load i32, i32* %num_elem, align 8, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %10, metadata !6012, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  %11 = sext i32 %10 to i64, !dbg !6044
  br label %for.cond38, !dbg !6044

for.cond38:                                       ; preds = %for.body41, %if.then32
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body41 ], [ %11, %if.then32 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6026
  call void @llvm.dbg.value(metadata i32 undef, metadata !6012, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  %cmp39 = icmp sgt i64 %indvars.iv, 0, !dbg !6045
  br i1 %cmp39, label %for.body41, label %for.inc51.loopexit, !dbg !6047

for.body41:                                       ; preds = %for.cond38
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6048
  %arrayidx48 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6048
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx48, align 8, !dbg !6048
  tail call fastcc void @mark_label_nuses(%struct.rtx_def* %13) #8, !dbg !6049
  call void @llvm.dbg.value(metadata i32 undef, metadata !6012, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  br label %for.cond38, !dbg !6050, !llvm.loop !6051

for.inc51.loopexit:                               ; preds = %for.cond38
  br label %for.inc51, !dbg !6053

for.inc51:                                        ; preds = %for.inc51.loopexit, %if.then21, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !6011, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6014
  br label %for.cond, !dbg !6053, !llvm.loop !6054

for.end53:                                        ; preds = %for.cond
  ret void, !dbg !6056
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %loc) local_unnamed_addr #5 !dbg !6057 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6059, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6060, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6061, metadata !DIExpression()), !dbg !6063
  %call = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6062, metadata !DIExpression()), !dbg !6063
  %cmp = icmp ne %struct.rtx_def* %pattern, null, !dbg !6065
  %tobool = icmp ne i32 %loc, 0, !dbg !6067
  %or.cond = and i1 %cmp, %tobool, !dbg !6068
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !6068

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6069

while.cond:                                       ; preds = %if.end15, %if.end
  %after.pn = phi %struct.rtx_def* [ %after, %if.end ], [ %after.addr.0, %if.end15 ]
  %after.addr.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6063
  %after.addr.0.in = bitcast %union.rtunion_def* %after.addr.0.in.in to %struct.rtx_def**, !dbg !6063
  %after.addr.0 = load %struct.rtx_def*, %struct.rtx_def** %after.addr.0.in, align 8, !dbg !6063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.addr.0, metadata !6060, metadata !DIExpression()), !dbg !6063
  %call1 = tail call i32 @active_insn_p(%struct.rtx_def* %after.addr.0) #8, !dbg !6070
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6070
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !6073

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !6074
  %rt_int = bitcast i64* %arrayidx5 to i32*, !dbg !6074
  %0 = load i32, i32* %rt_int, align 8, !dbg !6074
  %tobool6 = icmp eq i32 %0, 0, !dbg !6074
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !6075

if.then7:                                         ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !6076
  br label %if.end12, !dbg !6077

if.end12:                                         ; preds = %land.lhs.true, %while.cond, %if.then7
  %cmp13 = icmp eq %struct.rtx_def* %after.addr.0, %call, !dbg !6078
  br i1 %cmp13, label %cleanup.loopexit, label %if.end15, !dbg !6080

if.end15:                                         ; preds = %if.end12
  br label %while.cond, !dbg !6069, !llvm.loop !6081

cleanup.loopexit:                                 ; preds = %if.end12
  br label %cleanup, !dbg !6083

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !6083
}

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6084 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6086, metadata !DIExpression()), !dbg !6088
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 11) #7, !dbg !6089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6087, metadata !DIExpression()), !dbg !6088
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6090
  %inc = add nsw i32 %0, 1, !dbg !6090
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6090
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6091
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6091
  store i32 %0, i32* %rt_int, align 8, !dbg !6092
  tail call void @add_insn_after(%struct.rtx_def* %call, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6093
  ret %struct.rtx_def* %call, !dbg !6094
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %pattern) local_unnamed_addr #5 !dbg !6095 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6097, metadata !DIExpression()), !dbg !6099
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 8) #7, !dbg !6100
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6098, metadata !DIExpression()), !dbg !6099
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6101
  %inc = add nsw i32 %0, 1, !dbg !6101
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6101
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6102
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6102
  store i32 %0, i32* %rt_int, align 8, !dbg !6103
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6104
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !6104
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6104
  store %struct.rtx_def* %pattern, %struct.rtx_def** %rt_rtx, align 8, !dbg !6105
  %2 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 1, !dbg !6106
  %rt_int7 = bitcast %union.rtunion_def* %2 to i32*, !dbg !6106
  store i32 -1, i32* %rt_int7, align 8, !dbg !6107
  %3 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 2, !dbg !6108
  %rt_rtx11 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6108
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx11, align 8, !dbg !6109
  %call12 = tail call i32 @curr_insn_locator() #7, !dbg !6110
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6111
  %rt_int16 = bitcast i64* %arrayidx15 to i32*, !dbg !6111
  store i32 %call12, i32* %rt_int16, align 8, !dbg !6112
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6113
  %rt_bb = bitcast %struct.object_block** %arrayidx19 to %struct.basic_block_def**, !dbg !6113
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6114
  ret %struct.rtx_def* %call, !dbg !6115
}

declare dso_local i32 @curr_insn_locator() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @make_debug_insn_raw(%struct.rtx_def* %pattern) local_unnamed_addr #5 !dbg !6116 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6118, metadata !DIExpression()), !dbg !6120
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 7) #7, !dbg !6121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !6122
  %inc = add nsw i32 %0, 1, !dbg !6122
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !6122
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6123
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6123
  store i32 %0, i32* %rt_int, align 8, !dbg !6124
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !6125
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6127
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 117, i32 1, !dbg !6127
  %3 = load i32, i32* %value, align 8, !dbg !6127
  %cmp = icmp sgt i32 %1, %3, !dbg !6128
  br i1 %cmp, label %if.then, label %if.end, !dbg !6129

if.then:                                          ; preds = %entry
  %4 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6130
  %inc2 = add nsw i32 %4, 1, !dbg !6130
  store i32 %inc2, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6130
  store i32 %4, i32* %rt_int, align 8, !dbg !6131
  br label %if.end, !dbg !6132

if.end:                                           ; preds = %if.then, %entry
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6133
  %5 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 0, !dbg !6133
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6133
  store %struct.rtx_def* %pattern, %struct.rtx_def** %rt_rtx, align 8, !dbg !6134
  %6 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 1, !dbg !6135
  %rt_int13 = bitcast %union.rtunion_def* %6 to i32*, !dbg !6135
  store i32 -1, i32* %rt_int13, align 8, !dbg !6136
  %7 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 2, !dbg !6137
  %rt_rtx17 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6137
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx17, align 8, !dbg !6138
  %call18 = tail call i32 @curr_insn_locator() #7, !dbg !6139
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6140
  %rt_int22 = bitcast i64* %arrayidx21 to i32*, !dbg !6140
  store i32 %call18, i32* %rt_int22, align 8, !dbg !6141
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6142
  %rt_bb = bitcast %struct.object_block** %arrayidx25 to %struct.basic_block_def**, !dbg !6142
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6143
  ret %struct.rtx_def* %call, !dbg !6144
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @make_jump_insn_raw(%struct.rtx_def* %pattern) local_unnamed_addr #5 !dbg !6145 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6147, metadata !DIExpression()), !dbg !6149
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 9) #7, !dbg !6150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6148, metadata !DIExpression()), !dbg !6149
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6151
  %inc = add nsw i32 %0, 1, !dbg !6151
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6151
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6152
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6152
  store i32 %0, i32* %rt_int, align 8, !dbg !6153
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6154
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !6154
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6154
  store %struct.rtx_def* %pattern, %struct.rtx_def** %rt_rtx, align 8, !dbg !6155
  %2 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 1, !dbg !6156
  %rt_int7 = bitcast %union.rtunion_def* %2 to i32*, !dbg !6156
  store i32 -1, i32* %rt_int7, align 8, !dbg !6157
  %3 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 2, !dbg !6158
  %rt_rtx11 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6158
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx11, align 8, !dbg !6159
  %arrayidx14 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 1, !dbg !6160
  %rt_rtx15 = bitcast %struct.object_block** %arrayidx14 to %struct.rtx_def**, !dbg !6160
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx15, align 8, !dbg !6161
  %call16 = tail call i32 @curr_insn_locator() #7, !dbg !6162
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6163
  %rt_int20 = bitcast i64* %arrayidx19 to i32*, !dbg !6163
  store i32 %call16, i32* %rt_int20, align 8, !dbg !6164
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6165
  %rt_bb = bitcast %struct.object_block** %arrayidx23 to %struct.basic_block_def**, !dbg !6165
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6166
  ret %struct.rtx_def* %call, !dbg !6167
}

; Function Attrs: nounwind uwtable
define dso_local void @add_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6168 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6170, metadata !DIExpression()), !dbg !6171
  %0 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !6172
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6173
  %2 = bitcast %union.rtunion_def* %1 to i64*, !dbg !6174
  store i64 %0, i64* %2, align 8, !dbg !6174
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6175
  %rt_rtx4 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6175
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6176
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6177
  %cmp = icmp eq %struct.rtx_def* %4, null, !dbg !6179
  br i1 %cmp, label %if.end, label %if.then, !dbg !6180

if.then:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6181
  %rt_rtx8 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6181
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6182
  br label %if.end, !dbg !6181

if.end:                                           ; preds = %entry, %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6183
  %cmp9 = icmp eq %struct.rtx_def* %6, null, !dbg !6185
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6186

if.then10:                                        ; preds = %if.end
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6187
  br label %if.end11, !dbg !6188

if.end11:                                         ; preds = %if.then10, %if.end
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6189
  ret void, !dbg !6190
}

; Function Attrs: nounwind uwtable
define dso_local void @add_insn_after(%struct.rtx_def* %insn, %struct.rtx_def* %after, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6191 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6195, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6196, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6197, metadata !DIExpression()), !dbg !6206
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6207
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6207
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6198, metadata !DIExpression()), !dbg !6206
  %2 = load i32, i32* @optimize, align 4, !dbg !6208
  %tobool = icmp eq i32 %2, 0, !dbg !6208
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !6208

lor.lhs.false:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 0, !dbg !6208
  %bf.load = load i32, i32* %3, align 8, !dbg !6208
  %bf.clear = and i32 %bf.load, 134217728, !dbg !6208
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !6208
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6208

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3723, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6208
  br label %cond.end, !dbg !6208

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6209
  %rt_rtx5 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !6209
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6210
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6211
  %rt_rtx9 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6211
  store %struct.rtx_def* %after, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6212
  %tobool10 = icmp eq %struct.rtx_def* %1, null, !dbg !6213
  br i1 %tobool10, label %if.else, label %if.then, !dbg !6214

if.then:                                          ; preds = %cond.end
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6215
  %rt_rtx14 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6215
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx14, align 8, !dbg !6217
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6218
  %bf.load15 = load i32, i32* %7, align 8, !dbg !6218
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !6218
  %cmp = icmp eq i32 %bf.clear16, 8, !dbg !6218
  br i1 %cmp, label %land.lhs.true, label %if.end52, !dbg !6220

land.lhs.true:                                    ; preds = %if.then
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !6221
  %8 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 0, i64 0, !dbg !6221
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !6221
  %10 = load i32*, i32** %9, align 8, !dbg !6221
  %bf.load21 = load i32, i32* %10, align 8, !dbg !6221
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6221
  %cmp23 = icmp eq i32 %bf.clear22, 5, !dbg !6222
  br i1 %cmp23, label %if.then24, label %if.end52, !dbg !6223

if.then24:                                        ; preds = %land.lhs.true
  %arrayidx31 = getelementptr inbounds i32, i32* %10, i64 2, !dbg !6224
  %rt_rtvec = bitcast i32* %arrayidx31 to %struct.rtvec_def**, !dbg !6224
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6224
  %arrayidx32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 0, !dbg !6224
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !6224
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6224
  %rt_rtx36 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6224
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx36, align 8, !dbg !6225
  br label %if.end52, !dbg !6224

if.else:                                          ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6226
  %cmp37 = icmp eq %struct.rtx_def* %14, %after, !dbg !6227
  br i1 %cmp37, label %if.then38, label %if.else39, !dbg !6228

if.then38:                                        ; preds = %if.else
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6229
  br label %if.end52, !dbg !6230

if.else39:                                        ; preds = %if.else
  br label %for.cond, !dbg !6231

for.cond:                                         ; preds = %for.inc, %if.else39
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %if.else39 ], [ %next45, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !6232
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !6199, metadata !DIExpression()), !dbg !6232
  %cond1 = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !6233
  br i1 %cond1, label %cond.true47.loopexit, label %for.body, !dbg !6233

for.body:                                         ; preds = %for.cond
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 1, !dbg !6235
  %15 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6235
  %cmp41 = icmp eq %struct.rtx_def* %15, %after, !dbg !6238
  br i1 %cmp41, label %if.then42, label %for.inc, !dbg !6239

if.then42:                                        ; preds = %for.body
  %last.lcssa = phi %struct.rtx_def** [ %last, %for.body ], !dbg !6235
  store %struct.rtx_def* %insn, %struct.rtx_def** %last.lcssa, align 8, !dbg !6240
  br label %if.end52, !dbg !6242

for.inc:                                          ; preds = %for.body
  %next45 = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !6243
  br label %for.cond, !dbg !6244, !llvm.loop !6245

cond.true47.loopexit:                             ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6242
  br label %if.end52, !dbg !6242

if.end52:                                         ; preds = %if.then42, %if.then38, %cond.true47.loopexit, %if.then, %land.lhs.true, %if.then24
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 0, !dbg !6247
  %bf.load53 = load i32, i32* %16, align 8, !dbg !6247
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !6247
  %cmp55 = icmp eq i32 %bf.clear54, 11, !dbg !6247
  br i1 %cmp55, label %if.end106, label %land.lhs.true56, !dbg !6249

land.lhs.true56:                                  ; preds = %if.end52
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6250
  %bf.load57 = load i32, i32* %17, align 8, !dbg !6250
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !6250
  %cmp59 = icmp eq i32 %bf.clear58, 11, !dbg !6250
  br i1 %cmp59, label %if.end106, label %land.lhs.true60, !dbg !6251

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 1, !dbg !6252
  %rt_bb = bitcast %struct.object_block** %arrayidx63 to %struct.basic_block_def**, !dbg !6252
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6252
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %18, metadata !6197, metadata !DIExpression()), !dbg !6206
  %tobool64 = icmp eq %struct.basic_block_def* %18, null, !dbg !6253
  br i1 %tobool64, label %if.end106, label %if.then65, !dbg !6254

if.then65:                                        ; preds = %land.lhs.true60
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6255
  %rt_bb69 = bitcast %struct.object_block** %arrayidx68 to %struct.basic_block_def**, !dbg !6255
  store %struct.basic_block_def* %18, %struct.basic_block_def** %rt_bb69, align 8, !dbg !6255
  %cmp72 = icmp eq i32 %bf.clear58, 8, !dbg !6257
  br i1 %cmp72, label %if.then85, label %lor.lhs.false73, !dbg !6257

lor.lhs.false73:                                  ; preds = %if.then65
  %cmp76 = icmp eq i32 %bf.clear58, 7, !dbg !6257
  br i1 %cmp76, label %if.then85, label %lor.lhs.false77, !dbg !6257

lor.lhs.false77:                                  ; preds = %lor.lhs.false73
  %cmp80 = icmp eq i32 %bf.clear58, 9, !dbg !6257
  br i1 %cmp80, label %if.then85, label %lor.lhs.false81, !dbg !6257

lor.lhs.false81:                                  ; preds = %lor.lhs.false77
  %cmp84 = icmp eq i32 %bf.clear58, 10, !dbg !6257
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !6259

if.then85:                                        ; preds = %lor.lhs.false81, %lor.lhs.false77, %lor.lhs.false73, %if.then65
  %call = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %insn) #7, !dbg !6260
  br label %if.end86, !dbg !6260

if.end86:                                         ; preds = %if.then85, %lor.lhs.false81
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 7, !dbg !6261
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6261
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6261
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !6261
  %20 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6261
  %cmp87 = icmp eq %struct.rtx_def* %20, %after, !dbg !6263
  br i1 %cmp87, label %land.lhs.true88, label %if.end106, !dbg !6264

land.lhs.true88:                                  ; preds = %if.end86
  %bf.load89 = load i32, i32* %17, align 8, !dbg !6265
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !6265
  %cmp91 = icmp eq i32 %bf.clear90, 11, !dbg !6265
  br i1 %cmp91, label %if.end106, label %land.lhs.true92, !dbg !6266

land.lhs.true92:                                  ; preds = %land.lhs.true88
  %cmp95 = icmp eq i32 %bf.clear90, 13, !dbg !6267
  br i1 %cmp95, label %land.lhs.true96, label %if.then101, !dbg !6267

land.lhs.true96:                                  ; preds = %land.lhs.true92
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6267
  %21 = getelementptr inbounds %union.u, %union.u* %u97, i64 1, i32 0, i32 0, i64 0, !dbg !6267
  %rt_int = bitcast %union.rtunion_def* %21 to i32*, !dbg !6267
  %22 = load i32, i32* %rt_int, align 8, !dbg !6267
  %cmp100 = icmp eq i32 %22, 10, !dbg !6267
  br i1 %cmp100, label %if.end106, label %if.then101, !dbg !6268

if.then101:                                       ; preds = %land.lhs.true96, %land.lhs.true92
  store %struct.rtx_def* %insn, %struct.rtx_def** %end_, align 8, !dbg !6269
  br label %if.end106, !dbg !6270

if.end106:                                        ; preds = %land.lhs.true60, %if.end86, %land.lhs.true88, %land.lhs.true96, %if.then101, %land.lhs.true56, %if.end52
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx, align 8, !dbg !6271
  %bf.load111 = load i32, i32* %16, align 8, !dbg !6272
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !6272
  %cmp113 = icmp eq i32 %bf.clear112, 8, !dbg !6272
  br i1 %cmp113, label %land.lhs.true114, label %if.end141, !dbg !6273

land.lhs.true114:                                 ; preds = %if.end106
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, !dbg !6274
  %23 = getelementptr inbounds %union.u, %union.u* %u115, i64 1, i32 0, i32 0, i64 0, !dbg !6274
  %24 = bitcast %union.rtunion_def* %23 to i32**, !dbg !6274
  %25 = load i32*, i32** %24, align 8, !dbg !6274
  %bf.load119 = load i32, i32* %25, align 8, !dbg !6274
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !6274
  %cmp121 = icmp eq i32 %bf.clear120, 5, !dbg !6275
  br i1 %cmp121, label %if.then122, label %if.end141, !dbg !6276

if.then122:                                       ; preds = %land.lhs.true114
  call void @llvm.dbg.value(metadata i32* %25, metadata !6203, metadata !DIExpression()), !dbg !6277
  %arrayidx129 = getelementptr inbounds i32, i32* %25, i64 2, !dbg !6278
  %rt_rtvec130 = bitcast i32* %arrayidx129 to %struct.rtvec_def**, !dbg !6278
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec130, align 8, !dbg !6278
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i64 0, i32 0, !dbg !6278
  %27 = load i32, i32* %num_elem, align 8, !dbg !6278
  %sub = add nsw i32 %27, -1, !dbg !6278
  %idxprom = sext i32 %sub to i64, !dbg !6278
  %arrayidx136 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i64 0, i32 1, i64 %idxprom, !dbg !6278
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx136, align 8, !dbg !6278
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6278
  %rt_rtx140 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !6278
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx140, align 8, !dbg !6279
  br label %if.end141, !dbg !6280

if.end141:                                        ; preds = %if.then122, %land.lhs.true114, %if.end106
  ret void, !dbg !6281
}

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_insn_before(%struct.rtx_def* %insn, %struct.rtx_def* %before, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6282 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6284, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6285, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6286, metadata !DIExpression()), !dbg !6296
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6297
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6297
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6297
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6287, metadata !DIExpression()), !dbg !6296
  %2 = load i32, i32* @optimize, align 4, !dbg !6298
  %tobool = icmp eq i32 %2, 0, !dbg !6298
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !6298

lor.lhs.false:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 0, !dbg !6298
  %bf.load = load i32, i32* %3, align 8, !dbg !6298
  %bf.clear = and i32 %bf.load, 134217728, !dbg !6298
  %tobool1 = icmp eq i32 %bf.clear, 0, !dbg !6298
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6298

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3785, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6298
  br label %cond.end, !dbg !6298

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6299
  %rt_rtx5 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !6299
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6300
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6301
  %rt_rtx9 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6301
  store %struct.rtx_def* %before, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6302
  %tobool10 = icmp eq %struct.rtx_def* %1, null, !dbg !6303
  br i1 %tobool10, label %if.else, label %if.then, !dbg !6304

if.then:                                          ; preds = %cond.end
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6305
  %rt_rtx14 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6305
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx14, align 8, !dbg !6306
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6307
  %bf.load15 = load i32, i32* %7, align 8, !dbg !6307
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !6307
  %cmp = icmp eq i32 %bf.clear16, 8, !dbg !6307
  br i1 %cmp, label %land.lhs.true, label %if.end55, !dbg !6308

land.lhs.true:                                    ; preds = %if.then
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !6309
  %8 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 0, i64 0, !dbg !6309
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !6309
  %10 = load i32*, i32** %9, align 8, !dbg !6309
  %bf.load21 = load i32, i32* %10, align 8, !dbg !6309
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6309
  %cmp23 = icmp eq i32 %bf.clear22, 5, !dbg !6310
  br i1 %cmp23, label %if.then24, label %if.end55, !dbg !6311

if.then24:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %10, metadata !6288, metadata !DIExpression()), !dbg !6312
  %arrayidx31 = getelementptr inbounds i32, i32* %10, i64 2, !dbg !6313
  %rt_rtvec = bitcast i32* %arrayidx31 to %struct.rtvec_def**, !dbg !6313
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6313
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 0, !dbg !6313
  %12 = load i32, i32* %num_elem, align 8, !dbg !6313
  %sub = add nsw i32 %12, -1, !dbg !6313
  %idxprom = sext i32 %sub to i64, !dbg !6313
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %idxprom, !dbg !6313
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx36, align 8, !dbg !6313
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6313
  %rt_rtx40 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !6313
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx40, align 8, !dbg !6314
  br label %if.end55, !dbg !6315

if.else:                                          ; preds = %cond.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6316
  %cmp41 = icmp eq %struct.rtx_def* %15, %before, !dbg !6317
  br i1 %cmp41, label %if.then42, label %if.else43, !dbg !6318

if.then42:                                        ; preds = %if.else
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6319
  br label %if.end55, !dbg !6320

if.else43:                                        ; preds = %if.else
  br label %for.cond, !dbg !6321

for.cond:                                         ; preds = %for.inc, %if.else43
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %if.else43 ], [ %next, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !6293, metadata !DIExpression()), !dbg !6322
  %cond1 = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !6323
  br i1 %cond1, label %cond.true50.loopexit, label %for.body, !dbg !6323

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 0, !dbg !6325
  %16 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6325
  %cmp45 = icmp eq %struct.rtx_def* %16, %before, !dbg !6328
  br i1 %cmp45, label %if.then46, label %for.inc, !dbg !6329

if.then46:                                        ; preds = %for.body
  %first.lcssa = phi %struct.rtx_def** [ %first, %for.body ], !dbg !6325
  store %struct.rtx_def* %insn, %struct.rtx_def** %first.lcssa, align 8, !dbg !6330
  br label %if.end55, !dbg !6332

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !6333
  br label %for.cond, !dbg !6334, !llvm.loop !6335

cond.true50.loopexit:                             ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6332
  br label %if.end55, !dbg !6332

if.end55:                                         ; preds = %if.then46, %if.then42, %cond.true50.loopexit, %if.then, %land.lhs.true, %if.then24
  %tobool56 = icmp eq %struct.basic_block_def* %bb, null, !dbg !6337
  br i1 %tobool56, label %land.lhs.true57, label %if.end69, !dbg !6339

land.lhs.true57:                                  ; preds = %if.end55
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 0, !dbg !6340
  %bf.load58 = load i32, i32* %17, align 8, !dbg !6340
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !6340
  %cmp60 = icmp eq i32 %bf.clear59, 11, !dbg !6340
  br i1 %cmp60, label %if.end69, label %land.lhs.true61, !dbg !6341

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6342
  %bf.load62 = load i32, i32* %18, align 8, !dbg !6342
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !6342
  %cmp64 = icmp eq i32 %bf.clear63, 11, !dbg !6342
  br i1 %cmp64, label %if.end69, label %if.then65, !dbg !6343

if.then65:                                        ; preds = %land.lhs.true61
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 1, !dbg !6344
  %rt_bb = bitcast %struct.object_block** %arrayidx68 to %struct.basic_block_def**, !dbg !6344
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6344
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %19, metadata !6286, metadata !DIExpression()), !dbg !6296
  br label %if.end69, !dbg !6345

if.end69:                                         ; preds = %if.end55, %if.then65, %land.lhs.true61, %land.lhs.true57
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %if.end55 ], [ null, %land.lhs.true57 ], [ null, %land.lhs.true61 ], [ %19, %if.then65 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !6286, metadata !DIExpression()), !dbg !6296
  %tobool70 = icmp eq %struct.basic_block_def* %bb.addr.0, null, !dbg !6346
  br i1 %tobool70, label %if.end111, label %if.then71, !dbg !6348

if.then71:                                        ; preds = %if.end69
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6349
  %rt_bb75 = bitcast %struct.object_block** %arrayidx74 to %struct.basic_block_def**, !dbg !6349
  store %struct.basic_block_def* %bb.addr.0, %struct.basic_block_def** %rt_bb75, align 8, !dbg !6349
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6351
  %bf.load76 = load i32, i32* %20, align 8, !dbg !6351
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !6351
  %cmp78 = icmp eq i32 %bf.clear77, 8, !dbg !6351
  br i1 %cmp78, label %if.then91, label %lor.lhs.false79, !dbg !6351

lor.lhs.false79:                                  ; preds = %if.then71
  %cmp82 = icmp eq i32 %bf.clear77, 7, !dbg !6351
  br i1 %cmp82, label %if.then91, label %lor.lhs.false83, !dbg !6351

lor.lhs.false83:                                  ; preds = %lor.lhs.false79
  %cmp86 = icmp eq i32 %bf.clear77, 9, !dbg !6351
  br i1 %cmp86, label %if.then91, label %lor.lhs.false87, !dbg !6351

lor.lhs.false87:                                  ; preds = %lor.lhs.false83
  %cmp90 = icmp eq i32 %bf.clear77, 10, !dbg !6351
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !6353

if.then91:                                        ; preds = %lor.lhs.false87, %lor.lhs.false83, %lor.lhs.false79, %if.then71
  %call = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %insn) #7, !dbg !6354
  br label %if.end92, !dbg !6354

if.end92:                                         ; preds = %if.then91, %lor.lhs.false87
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0, i64 0, i32 7, !dbg !6355
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6355
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6355
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i64 0, i32 0, !dbg !6355
  %22 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6355
  %cmp93 = icmp eq %struct.rtx_def* %22, %insn, !dbg !6355
  br i1 %cmp93, label %lor.lhs.false94, label %if.end111, !dbg !6355

lor.lhs.false94:                                  ; preds = %if.end92
  %bf.load95 = load i32, i32* %20, align 8, !dbg !6355
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !6355
  %cmp97 = icmp eq i32 %bf.clear96, 11, !dbg !6355
  br i1 %cmp97, label %if.end111, label %lor.lhs.false98, !dbg !6355

lor.lhs.false98:                                  ; preds = %lor.lhs.false94
  %cmp101 = icmp eq i32 %bf.clear96, 13, !dbg !6355
  br i1 %cmp101, label %land.lhs.true102, label %cond.true107, !dbg !6355

land.lhs.true102:                                 ; preds = %lor.lhs.false98
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6355
  %23 = getelementptr inbounds %union.u, %union.u* %u103, i64 1, i32 0, i32 0, i64 0, !dbg !6355
  %rt_int = bitcast %union.rtunion_def* %23 to i32*, !dbg !6355
  %24 = load i32, i32* %rt_int, align 8, !dbg !6355
  %cmp106 = icmp eq i32 %24, 10, !dbg !6355
  br i1 %cmp106, label %if.end111, label %cond.true107, !dbg !6355

cond.true107:                                     ; preds = %land.lhs.true102, %lor.lhs.false98
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3830, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6355
  br label %if.end111, !dbg !6355

if.end111:                                        ; preds = %if.end92, %if.end69, %cond.true107, %land.lhs.true102, %lor.lhs.false94
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx, align 8, !dbg !6356
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 0, !dbg !6357
  %bf.load116 = load i32, i32* %25, align 8, !dbg !6357
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !6357
  %cmp118 = icmp eq i32 %bf.clear117, 8, !dbg !6357
  br i1 %cmp118, label %land.lhs.true119, label %if.end142, !dbg !6359

land.lhs.true119:                                 ; preds = %if.end111
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, !dbg !6360
  %26 = getelementptr inbounds %union.u, %union.u* %u120, i64 1, i32 0, i32 0, i64 0, !dbg !6360
  %27 = bitcast %union.rtunion_def* %26 to i32**, !dbg !6360
  %28 = load i32*, i32** %27, align 8, !dbg !6360
  %bf.load124 = load i32, i32* %28, align 8, !dbg !6360
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !6360
  %cmp126 = icmp eq i32 %bf.clear125, 5, !dbg !6361
  br i1 %cmp126, label %if.then127, label %if.end142, !dbg !6362

if.then127:                                       ; preds = %land.lhs.true119
  %arrayidx134 = getelementptr inbounds i32, i32* %28, i64 2, !dbg !6363
  %rt_rtvec135 = bitcast i32* %arrayidx134 to %struct.rtvec_def**, !dbg !6363
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !6363
  %arrayidx137 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i64 0, i32 1, i64 0, !dbg !6363
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx137, align 8, !dbg !6363
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6363
  %rt_rtx141 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !6363
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx141, align 8, !dbg !6364
  br label %if.end142, !dbg !6363

if.end142:                                        ; preds = %if.then127, %land.lhs.true119, %if.end111
  ret void, !dbg !6365
}

; Function Attrs: nounwind uwtable
define dso_local void @set_insn_deleted(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6366 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6368, metadata !DIExpression()), !dbg !6369
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6370
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6370
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6370
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6371
  %rt_int = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !6371
  %1 = load i32, i32* %rt_int, align 8, !dbg !6371
  tail call void @df_insn_delete(%struct.basic_block_def* %0, i32 %1) #7, !dbg !6372
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6373
  %bf.load = load i32, i32* %2, align 8, !dbg !6373
  %bf.clear = and i32 %bf.load, -65536, !dbg !6373
  %bf.set = or i32 %bf.clear, 13, !dbg !6373
  store i32 %bf.set, i32* %2, align 8, !dbg !6373
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6374
  %3 = getelementptr inbounds %union.u, %union.u* %u4, i64 1, i32 0, i32 0, i64 0, !dbg !6374
  %rt_int7 = bitcast %union.rtunion_def* %3 to i32*, !dbg !6374
  store i32 0, i32* %rt_int7, align 8, !dbg !6375
  ret void, !dbg !6376
}

declare dso_local void @df_insn_delete(%struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @remove_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6377 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6379, metadata !DIExpression()), !dbg !6395
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6396
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6396
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6396
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6380, metadata !DIExpression()), !dbg !6395
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6397
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6397
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6381, metadata !DIExpression()), !dbg !6395
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6398
  %rt_int = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !6398
  %4 = load i32, i32* %rt_int, align 8, !dbg !6398
  tail call void @df_insn_delete(%struct.basic_block_def* null, i32 %4) #7, !dbg !6399
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !6400
  br i1 %tobool, label %if.else, label %if.then, !dbg !6401

if.then:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6402
  %rt_rtx11 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6402
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx11, align 8, !dbg !6403
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !6404
  %bf.load = load i32, i32* %6, align 8, !dbg !6404
  %bf.clear = and i32 %bf.load, 65535, !dbg !6404
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6404
  br i1 %cmp, label %land.lhs.true, label %if.end47, !dbg !6405

land.lhs.true:                                    ; preds = %if.then
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, !dbg !6406
  %7 = getelementptr inbounds %union.u, %union.u* %u12, i64 1, i32 0, i32 0, i64 0, !dbg !6406
  %8 = bitcast %union.rtunion_def* %7 to i32**, !dbg !6406
  %9 = load i32*, i32** %8, align 8, !dbg !6406
  %bf.load16 = load i32, i32* %9, align 8, !dbg !6406
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !6406
  %cmp18 = icmp eq i32 %bf.clear17, 5, !dbg !6407
  br i1 %cmp18, label %if.then19, label %if.end47, !dbg !6408

if.then19:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %9, metadata !6383, metadata !DIExpression()), !dbg !6409
  %arrayidx26 = getelementptr inbounds i32, i32* %9, i64 2, !dbg !6410
  %rt_rtvec = bitcast i32* %arrayidx26 to %struct.rtvec_def**, !dbg !6410
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6410
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 0, !dbg !6410
  %11 = load i32, i32* %num_elem, align 8, !dbg !6410
  %sub = add nsw i32 %11, -1, !dbg !6410
  %idxprom = sext i32 %sub to i64, !dbg !6410
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 %idxprom, !dbg !6410
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !6410
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6410
  %rt_rtx35 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6410
  store %struct.rtx_def* %1, %struct.rtx_def** %rt_rtx35, align 8, !dbg !6411
  br label %if.end47, !dbg !6412

if.else:                                          ; preds = %entry
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6413
  %cmp36 = icmp eq %struct.rtx_def* %14, %insn, !dbg !6414
  br i1 %cmp36, label %if.then37, label %if.else38, !dbg !6415

if.then37:                                        ; preds = %if.else
  store %struct.rtx_def* %1, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6416
  br label %if.end47, !dbg !6417

if.else38:                                        ; preds = %if.else
  br label %for.cond, !dbg !6418

for.cond:                                         ; preds = %for.inc, %if.else38
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %if.else38 ], [ %next44, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !6419
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !6388, metadata !DIExpression()), !dbg !6419
  %cond = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !6420
  br i1 %cond, label %cond.true.loopexit, label %for.body, !dbg !6420

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 0, !dbg !6422
  %15 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6422
  %cmp40 = icmp eq %struct.rtx_def* %15, %insn, !dbg !6425
  br i1 %cmp40, label %if.then41, label %for.inc, !dbg !6426

if.then41:                                        ; preds = %for.body
  %first.lcssa = phi %struct.rtx_def** [ %first, %for.body ], !dbg !6422
  store %struct.rtx_def* %1, %struct.rtx_def** %first.lcssa, align 8, !dbg !6427
  br label %if.end47, !dbg !6429

for.inc:                                          ; preds = %for.body
  %next44 = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !6430
  br label %for.cond, !dbg !6431, !llvm.loop !6432

cond.true.loopexit:                               ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3884, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6429
  br label %if.end47, !dbg !6429

if.end47:                                         ; preds = %if.then41, %if.then37, %cond.true.loopexit, %if.then, %land.lhs.true, %if.then19
  %tobool48 = icmp eq %struct.rtx_def* %1, null, !dbg !6434
  br i1 %tobool48, label %if.else81, label %if.then49, !dbg !6435

if.then49:                                        ; preds = %if.end47
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6436
  %rt_rtx53 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !6436
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6438
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6439
  %bf.load54 = load i32, i32* %17, align 8, !dbg !6439
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !6439
  %cmp56 = icmp eq i32 %bf.clear55, 8, !dbg !6439
  br i1 %cmp56, label %land.lhs.true57, label %if.end102, !dbg !6441

land.lhs.true57:                                  ; preds = %if.then49
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !6442
  %18 = getelementptr inbounds %union.u, %union.u* %u58, i64 1, i32 0, i32 0, i64 0, !dbg !6442
  %19 = bitcast %union.rtunion_def* %18 to i32**, !dbg !6442
  %20 = load i32*, i32** %19, align 8, !dbg !6442
  %bf.load62 = load i32, i32* %20, align 8, !dbg !6442
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !6442
  %cmp64 = icmp eq i32 %bf.clear63, 5, !dbg !6443
  br i1 %cmp64, label %if.then65, label %if.end102, !dbg !6444

if.then65:                                        ; preds = %land.lhs.true57
  %arrayidx72 = getelementptr inbounds i32, i32* %20, i64 2, !dbg !6445
  %rt_rtvec73 = bitcast i32* %arrayidx72 to %struct.rtvec_def**, !dbg !6445
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec73, align 8, !dbg !6445
  %arrayidx75 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i64 0, i32 1, i64 0, !dbg !6445
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx75, align 8, !dbg !6445
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6445
  %rt_rtx79 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !6445
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx79, align 8, !dbg !6446
  br label %if.end102, !dbg !6445

if.else81:                                        ; preds = %if.end47
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6447
  %cmp82 = icmp eq %struct.rtx_def* %24, %insn, !dbg !6448
  br i1 %cmp82, label %if.then83, label %if.else84, !dbg !6449

if.then83:                                        ; preds = %if.else81
  store %struct.rtx_def* %3, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6450
  br label %if.end102, !dbg !6451

if.else84:                                        ; preds = %if.else81
  br label %for.cond86, !dbg !6452

for.cond86:                                       ; preds = %for.inc93, %if.else84
  %stack85.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %if.else84 ], [ %next94, %for.inc93 ]
  %stack85.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack85.0.in, align 8, !dbg !6453
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack85.0, metadata !6391, metadata !DIExpression()), !dbg !6453
  %cond2 = icmp eq %struct.sequence_stack* %stack85.0, null, !dbg !6454
  br i1 %cond2, label %cond.true97.loopexit, label %for.body88, !dbg !6454

for.body88:                                       ; preds = %for.cond86
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack85.0, i64 0, i32 1, !dbg !6456
  %25 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6456
  %cmp89 = icmp eq %struct.rtx_def* %25, %insn, !dbg !6459
  br i1 %cmp89, label %if.then90, label %for.inc93, !dbg !6460

if.then90:                                        ; preds = %for.body88
  %last.lcssa = phi %struct.rtx_def** [ %last, %for.body88 ], !dbg !6456
  store %struct.rtx_def* %3, %struct.rtx_def** %last.lcssa, align 8, !dbg !6461
  br label %if.end102, !dbg !6463

for.inc93:                                        ; preds = %for.body88
  %next94 = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack85.0, i64 0, i32 2, !dbg !6464
  br label %for.cond86, !dbg !6465, !llvm.loop !6466

cond.true97.loopexit:                             ; preds = %for.cond86
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3906, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6463
  br label %if.end102, !dbg !6463

if.end102:                                        ; preds = %if.then90, %if.then83, %cond.true97.loopexit, %if.then49, %land.lhs.true57, %if.then65
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6468
  %bf.load103 = load i32, i32* %26, align 8, !dbg !6468
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !6468
  %cmp105 = icmp eq i32 %bf.clear104, 11, !dbg !6468
  br i1 %cmp105, label %if.end149, label %land.lhs.true106, !dbg !6470

land.lhs.true106:                                 ; preds = %if.end102
  %arrayidx109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6471
  %rt_bb = bitcast %struct.object_block** %arrayidx109 to %struct.basic_block_def**, !dbg !6471
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %27, metadata !6382, metadata !DIExpression()), !dbg !6395
  %tobool110 = icmp eq %struct.basic_block_def* %27, null, !dbg !6472
  br i1 %tobool110, label %if.end149, label %if.then111, !dbg !6473

if.then111:                                       ; preds = %land.lhs.true106
  %cmp114 = icmp eq i32 %bf.clear104, 8, !dbg !6474
  br i1 %cmp114, label %if.then126, label %lor.lhs.false, !dbg !6474

lor.lhs.false:                                    ; preds = %if.then111
  %cmp117 = icmp eq i32 %bf.clear104, 7, !dbg !6474
  br i1 %cmp117, label %if.then126, label %lor.lhs.false118, !dbg !6474

lor.lhs.false118:                                 ; preds = %lor.lhs.false
  %cmp121 = icmp eq i32 %bf.clear104, 9, !dbg !6474
  br i1 %cmp121, label %if.then126, label %lor.lhs.false122, !dbg !6474

lor.lhs.false122:                                 ; preds = %lor.lhs.false118
  %cmp125 = icmp eq i32 %bf.clear104, 10, !dbg !6474
  br i1 %cmp125, label %if.then126, label %if.end127, !dbg !6477

if.then126:                                       ; preds = %lor.lhs.false122, %lor.lhs.false118, %lor.lhs.false, %if.then111
  tail call void @df_set_bb_dirty(%struct.basic_block_def* nonnull %27) #7, !dbg !6478
  br label %if.end127, !dbg !6478

if.end127:                                        ; preds = %if.then126, %lor.lhs.false122
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 7, !dbg !6479
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6479
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6479
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 0, !dbg !6479
  %29 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6479
  %cmp128 = icmp eq %struct.rtx_def* %29, %insn, !dbg !6481
  br i1 %cmp128, label %if.then129, label %if.end140, !dbg !6482

if.then129:                                       ; preds = %if.end127
  %bf.load130 = load i32, i32* %26, align 8, !dbg !6483
  %bf.clear131 = and i32 %bf.load130, 65535, !dbg !6483
  %cmp132 = icmp eq i32 %bf.clear131, 13, !dbg !6483
  br i1 %cmp132, label %cond.true133, label %cond.end135, !dbg !6483

cond.true133:                                     ; preds = %if.then129
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3917, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6483
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6485
  br label %cond.end135, !dbg !6483

cond.end135:                                      ; preds = %if.then129, %cond.true133
  %30 = phi %struct.rtl_bb_info* [ %28, %if.then129 ], [ %.pre, %cond.true133 ], !dbg !6485
  %head_139 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !6485
  store %struct.rtx_def* %1, %struct.rtx_def** %head_139, align 8, !dbg !6486
  %.pre7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6487
  br label %if.end140, !dbg !6489

if.end140:                                        ; preds = %cond.end135, %if.end127
  %31 = phi %struct.rtl_bb_info* [ %.pre7, %cond.end135 ], [ %28, %if.end127 ], !dbg !6487
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 1, !dbg !6487
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6487
  %cmp143 = icmp eq %struct.rtx_def* %32, %insn, !dbg !6490
  br i1 %cmp143, label %if.then144, label %if.end149, !dbg !6491

if.then144:                                       ; preds = %if.end140
  store %struct.rtx_def* %3, %struct.rtx_def** %end_, align 8, !dbg !6492
  br label %if.end149, !dbg !6493

if.end149:                                        ; preds = %land.lhs.true106, %if.end140, %if.then144, %if.end102
  ret void, !dbg !6494
}

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_function_usage_to(%struct.rtx_def* %call_insn, %struct.rtx_def* %call_fusage) local_unnamed_addr #5 !dbg !6495 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call_insn, metadata !6497, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call_fusage, metadata !6498, metadata !DIExpression()), !dbg !6502
  %tobool = icmp eq %struct.rtx_def* %call_insn, null, !dbg !6503
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6503

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call_insn, i64 0, i32 0, !dbg !6503
  %bf.load = load i32, i32* %0, align 8, !dbg !6503
  %bf.clear = and i32 %bf.load, 65535, !dbg !6503
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !6503
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6503

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 3930, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6503
  br label %cond.end, !dbg !6503

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call_insn, i64 0, i32 1, !dbg !6504
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !6504
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !6504
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6504
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !6504
  br i1 %tobool1, label %if.else, label %if.then, !dbg !6505

if.then:                                          ; preds = %cond.end
  br label %for.cond, !dbg !6506

for.cond:                                         ; preds = %for.inc, %if.then
  %link.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %3, %for.inc ], !dbg !6508
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !6499, metadata !DIExpression()), !dbg !6509
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6510
  %rt_rtx9 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6510
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6510
  %cmp10 = icmp eq %struct.rtx_def* %3, null, !dbg !6512
  br i1 %cmp10, label %for.end, label %for.inc, !dbg !6513

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !6514, !llvm.loop !6515

for.end:                                          ; preds = %for.cond
  %rt_rtx9.lcssa = phi %struct.rtx_def** [ %rt_rtx9, %for.cond ], !dbg !6510
  store %struct.rtx_def* %call_fusage, %struct.rtx_def** %rt_rtx9.lcssa, align 8, !dbg !6517
  br label %if.end, !dbg !6518

if.else:                                          ; preds = %cond.end
  store %struct.rtx_def* %call_fusage, %struct.rtx_def** %rt_rtx, align 8, !dbg !6519
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !6520
}

; Function Attrs: nounwind uwtable
define dso_local void @delete_insns_since(%struct.rtx_def* %from) local_unnamed_addr #5 !dbg !6521 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !6523, metadata !DIExpression()), !dbg !6524
  %cmp = icmp eq %struct.rtx_def* %from, null, !dbg !6525
  br i1 %cmp, label %if.then, label %if.else, !dbg !6527

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6528
  br label %if.end, !dbg !6529

if.else:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6530
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6530
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx, align 8, !dbg !6531
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store %struct.rtx_def* %from, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6532
  ret void, !dbg !6533
}

; Function Attrs: nounwind uwtable
define dso_local void @reorder_insns_nobb(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6534 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !6538, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !6539, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6540, metadata !DIExpression()), !dbg !6541
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6542
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6542
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6542
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !6542
  br i1 %tobool, label %if.end, label %if.then, !dbg !6544

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6545
  %3 = bitcast %union.rtunion_def* %2 to i64*, !dbg !6545
  %4 = load i64, i64* %3, align 8, !dbg !6545
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6546
  %6 = bitcast %union.rtunion_def* %5 to i64*, !dbg !6547
  store i64 %4, i64* %6, align 8, !dbg !6547
  br label %if.end, !dbg !6546

if.end:                                           ; preds = %entry, %if.then
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6548
  %rt_rtx16 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6548
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !6548
  %tobool17 = icmp eq %struct.rtx_def* %8, null, !dbg !6548
  br i1 %tobool17, label %if.end31, label %if.then18, !dbg !6550

if.then18:                                        ; preds = %if.end
  %9 = bitcast %union.rtunion_def* %0 to i64*, !dbg !6551
  %10 = load i64, i64* %9, align 8, !dbg !6551
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6552
  %12 = bitcast %union.rtunion_def* %11 to i64*, !dbg !6553
  store i64 %10, i64* %12, align 8, !dbg !6553
  br label %if.end31, !dbg !6552

if.end31:                                         ; preds = %if.end, %if.then18
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6554
  %cmp = icmp eq %struct.rtx_def* %13, %to, !dbg !6556
  br i1 %cmp, label %if.then32, label %if.end37, !dbg !6557

if.then32:                                        ; preds = %if.end31
  %14 = bitcast %union.rtunion_def* %0 to i64*, !dbg !6558
  %15 = load i64, i64* %14, align 8, !dbg !6558
  store i64 %15, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !6559
  br label %if.end37, !dbg !6560

if.end37:                                         ; preds = %if.then32, %if.end31
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !6561
  %cmp38 = icmp eq %struct.rtx_def* %16, %from, !dbg !6563
  br i1 %cmp38, label %if.then39, label %if.end44, !dbg !6564

if.then39:                                        ; preds = %if.end37
  %17 = bitcast %union.rtunion_def* %7 to i64*, !dbg !6565
  %18 = load i64, i64* %17, align 8, !dbg !6565
  store i64 %18, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2) to i64*), align 8, !dbg !6566
  br label %if.end44, !dbg !6567

if.end44:                                         ; preds = %if.then39, %if.end37
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6568
  %rt_rtx48 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !6568
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !6568
  %tobool49 = icmp eq %struct.rtx_def* %20, null, !dbg !6568
  br i1 %tobool49, label %if.end44.if.end59_crit_edge, label %if.then50, !dbg !6570

if.end44.if.end59_crit_edge:                      ; preds = %if.end44
  %21 = ptrtoint %struct.rtx_def* %20 to i64, !dbg !6570
  br label %if.end59, !dbg !6570

if.then50:                                        ; preds = %if.end44
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6571
  %rt_rtx58 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6571
  store %struct.rtx_def* %to, %struct.rtx_def** %rt_rtx58, align 8, !dbg !6572
  %.phi.trans.insert = bitcast %union.rtunion_def* %19 to i64*, !dbg !6541
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6573
  br label %if.end59, !dbg !6571

if.end59:                                         ; preds = %if.end44.if.end59_crit_edge, %if.then50
  %23 = phi i64 [ %21, %if.end44.if.end59_crit_edge ], [ %.pre, %if.then50 ], !dbg !6573
  %24 = bitcast %union.rtunion_def* %7 to i64*, !dbg !6574
  store i64 %23, i64* %24, align 8, !dbg !6574
  store %struct.rtx_def* %after, %struct.rtx_def** %rt_rtx, align 8, !dbg !6575
  store %struct.rtx_def* %from, %struct.rtx_def** %rt_rtx48, align 8, !dbg !6576
  %25 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6577
  %cmp76 = icmp eq %struct.rtx_def* %25, %after, !dbg !6579
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !6580

if.then77:                                        ; preds = %if.end59
  store %struct.rtx_def* %to, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6581
  br label %if.end78, !dbg !6582

if.end78:                                         ; preds = %if.then77, %if.end59
  ret void, !dbg !6583
}

; Function Attrs: nounwind uwtable
define dso_local void @reorder_insns(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6584 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !6586, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !6587, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6588, metadata !DIExpression()), !dbg !6595
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6596
  %1 = bitcast %union.rtunion_def* %0 to i64*, !dbg !6596
  %2 = load i64, i64* %1, align 8, !dbg !6596
  tail call void @reorder_insns_nobb(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %after) #8, !dbg !6597
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 0, !dbg !6598
  %bf.load = load i32, i32* %3, align 8, !dbg !6598
  %bf.clear = and i32 %bf.load, 65535, !dbg !6598
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !6598
  br i1 %cmp, label %if.end43, label %land.lhs.true, !dbg !6599

land.lhs.true:                                    ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 1, !dbg !6600
  %rt_bb = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !6600
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6600
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !6590, metadata !DIExpression()), !dbg !6595
  %tobool = icmp eq %struct.basic_block_def* %4, null, !dbg !6601
  br i1 %tobool, label %if.end43, label %if.then, !dbg !6602

if.then:                                          ; preds = %land.lhs.true
  tail call void @df_set_bb_dirty(%struct.basic_block_def* nonnull %4) #7, !dbg !6603
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 0, !dbg !6604
  %bf.load4 = load i32, i32* %5, align 8, !dbg !6604
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !6604
  %cmp6 = icmp eq i32 %bf.clear5, 11, !dbg !6604
  br i1 %cmp6, label %if.end19, label %land.lhs.true7, !dbg !6606

land.lhs.true7:                                   ; preds = %if.then
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 1, !dbg !6607
  %rt_bb11 = bitcast %struct.object_block** %arrayidx10 to %struct.basic_block_def**, !dbg !6607
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb11, align 8, !dbg !6607
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !6591, metadata !DIExpression()), !dbg !6595
  %tobool12 = icmp eq %struct.basic_block_def* %6, null, !dbg !6608
  br i1 %tobool12, label %if.end19, label %if.then13, !dbg !6609

if.then13:                                        ; preds = %land.lhs.true7
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 7, !dbg !6610
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6610
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6610
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !6610
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6610
  %cmp14 = icmp eq %struct.rtx_def* %8, %to, !dbg !6613
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !6614

if.then15:                                        ; preds = %if.then13
  %9 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !6615
  store i64 %2, i64* %9, align 8, !dbg !6615
  br label %if.end, !dbg !6616

if.end:                                           ; preds = %if.then15, %if.then13
  tail call void @df_set_bb_dirty(%struct.basic_block_def* nonnull %6) #7, !dbg !6617
  br label %if.end19, !dbg !6618

if.end19:                                         ; preds = %land.lhs.true7, %if.end, %if.then
  %il20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 7, !dbg !6619
  %rtl21 = bitcast %union.basic_block_il_dependent* %il20 to %struct.rtl_bb_info**, !dbg !6619
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl21, align 8, !dbg !6619
  %end_22 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !6619
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_22, align 8, !dbg !6619
  %cmp23 = icmp eq %struct.rtx_def* %11, %after, !dbg !6621
  br i1 %cmp23, label %if.then24, label %if.end28, !dbg !6622

if.then24:                                        ; preds = %if.end19
  store %struct.rtx_def* %to, %struct.rtx_def** %end_22, align 8, !dbg !6623
  br label %if.end28, !dbg !6624

if.end28:                                         ; preds = %if.then24, %if.end19
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !6592, metadata !DIExpression()), !dbg !6625
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6626
  %rt_rtx32 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !6626
  br label %for.cond, !dbg !6629

for.cond:                                         ; preds = %for.inc, %if.end28
  %x.0 = phi %struct.rtx_def* [ %from, %if.end28 ], [ %16, %for.inc ], !dbg !6630
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !6592, metadata !DIExpression()), !dbg !6625
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !6631
  %cmp33 = icmp eq %struct.rtx_def* %x.0, %13, !dbg !6632
  br i1 %cmp33, label %if.end43.loopexit, label %for.body, !dbg !6633

for.body:                                         ; preds = %for.cond
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !6634
  %bf.load34 = load i32, i32* %14, align 8, !dbg !6634
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6634
  %cmp36 = icmp eq i32 %bf.clear35, 11, !dbg !6634
  br i1 %cmp36, label %for.inc, label %if.then37, !dbg !6636

if.then37:                                        ; preds = %for.body
  tail call void @df_insn_change_bb(%struct.rtx_def* %x.0, %struct.basic_block_def* nonnull %4) #7, !dbg !6637
  br label %for.inc, !dbg !6637

for.inc:                                          ; preds = %for.body, %if.then37
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6638
  %rt_rtx42 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !6638
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !6638
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !6592, metadata !DIExpression()), !dbg !6625
  br label %for.cond, !dbg !6639, !llvm.loop !6640

if.end43.loopexit:                                ; preds = %for.cond
  br label %if.end43, !dbg !6642

if.end43:                                         ; preds = %if.end43.loopexit, %land.lhs.true, %entry
  ret void, !dbg !6642
}

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %x, %struct.rtx_def* %before, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6643 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6647, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6648, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6649, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6650, metadata !DIExpression()), !dbg !6655
  %tobool = icmp eq %struct.rtx_def* %before, null, !dbg !6656
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6656

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4061, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6656
  br label %cond.end, !dbg !6656

cond.end:                                         ; preds = %entry, %cond.true
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !6657
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6659

if.end:                                           ; preds = %cond.end
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6660
  %bf.load = load i32, i32* %0, align 8, !dbg !6660
  %bf.clear = and i32 %bf.load, 65535, !dbg !6660
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6661
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6661
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !6661

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !6662

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ %before, %while.cond.preheader ], !dbg !6655
  %insn.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %x, %while.cond.preheader ], !dbg !6663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6651, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6650, metadata !DIExpression()), !dbg !6655
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6662
  br i1 %tobool1, label %cleanup.loopexit, label %while.body, !dbg !6662

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6664
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6664
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6652, metadata !DIExpression()), !dbg !6665
  tail call void @add_insn_before(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %before, %struct.basic_block_def* %bb) #8, !dbg !6666
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6651, metadata !DIExpression()), !dbg !6655
  br label %while.cond, !dbg !6662, !llvm.loop !6667

sw.default:                                       ; preds = %if.end
  %call = tail call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* nonnull %x) #8, !dbg !6669
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6650, metadata !DIExpression()), !dbg !6655
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* %bb) #8, !dbg !6670
  br label %cleanup, !dbg !6671

cleanup.loopexit:                                 ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6650, metadata !DIExpression()), !dbg !6655
  br label %cleanup, !dbg !6672

cleanup:                                          ; preds = %cleanup.loopexit, %sw.default, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %before, %cond.end ], [ %call, %sw.default ], [ %last.0.lcssa, %cleanup.loopexit ], !dbg !6655
  ret %struct.rtx_def* %retval.0, !dbg !6672
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_before_noloc(%struct.rtx_def* %x, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6673 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6675, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6676, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6678, metadata !DIExpression()), !dbg !6682
  %tobool = icmp eq %struct.rtx_def* %before, null, !dbg !6683
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6683

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6683
  br label %cond.end, !dbg !6683

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6684
  %bf.load = load i32, i32* %0, align 8, !dbg !6684
  %bf.clear = and i32 %bf.load, 65535, !dbg !6684
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6685
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6685
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !6685

while.cond.preheader:                             ; preds = %cond.end
  br label %while.cond, !dbg !6686

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %insn.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %x, %while.cond.preheader ], !dbg !6687
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ null, %while.cond.preheader ], !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6678, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6677, metadata !DIExpression()), !dbg !6682
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6686
  br i1 %tobool1, label %sw.epilog.loopexit, label %while.body, !dbg !6686

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6688
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6688
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6679, metadata !DIExpression()), !dbg !6689
  tail call void @add_insn_before(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6678, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6677, metadata !DIExpression()), !dbg !6682
  br label %while.cond, !dbg !6686, !llvm.loop !6691

sw.default:                                       ; preds = %cond.end
  %call = tail call %struct.rtx_def* @make_jump_insn_raw(%struct.rtx_def* %x) #8, !dbg !6693
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6678, metadata !DIExpression()), !dbg !6682
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6694
  br label %sw.epilog, !dbg !6695

sw.epilog.loopexit:                               ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6678, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6678, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6678, metadata !DIExpression()), !dbg !6682
  br label %sw.epilog, !dbg !6696

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default
  %last.1 = phi %struct.rtx_def* [ %call, %sw.default ], [ %last.0.lcssa, %sw.epilog.loopexit ], !dbg !6682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !6678, metadata !DIExpression()), !dbg !6682
  ret %struct.rtx_def* %last.1, !dbg !6696
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_before_noloc(%struct.rtx_def* %x, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6697 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6699, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6700, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6701, metadata !DIExpression()), !dbg !6706
  %tobool = icmp eq %struct.rtx_def* %before, null, !dbg !6707
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6707

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6707
  br label %cond.end, !dbg !6707

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6708
  %bf.load = load i32, i32* %0, align 8, !dbg !6708
  %bf.clear = and i32 %bf.load, 65535, !dbg !6708
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6709
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6709
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !6709

while.cond.preheader:                             ; preds = %cond.end
  br label %while.cond, !dbg !6710

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ null, %while.cond.preheader ], !dbg !6706
  %insn.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %x, %while.cond.preheader ], !dbg !6711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6702, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6701, metadata !DIExpression()), !dbg !6706
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6710
  br i1 %tobool1, label %sw.epilog.loopexit, label %while.body, !dbg !6710

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6712
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6712
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6703, metadata !DIExpression()), !dbg !6713
  tail call void @add_insn_before(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6714
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6701, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6702, metadata !DIExpression()), !dbg !6706
  br label %while.cond, !dbg !6710, !llvm.loop !6715

sw.default:                                       ; preds = %cond.end
  %call = tail call fastcc %struct.rtx_def* @make_call_insn_raw(%struct.rtx_def* %x) #8, !dbg !6717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6701, metadata !DIExpression()), !dbg !6706
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6718
  br label %sw.epilog, !dbg !6719

sw.epilog.loopexit:                               ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6701, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6701, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6701, metadata !DIExpression()), !dbg !6706
  br label %sw.epilog, !dbg !6720

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default
  %last.1 = phi %struct.rtx_def* [ %call, %sw.default ], [ %last.0.lcssa, %sw.epilog.loopexit ], !dbg !6706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !6701, metadata !DIExpression()), !dbg !6706
  ret %struct.rtx_def* %last.1, !dbg !6720
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @make_call_insn_raw(%struct.rtx_def* %pattern) unnamed_addr #5 !dbg !6721 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6723, metadata !DIExpression()), !dbg !6725
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 10) #7, !dbg !6726
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6724, metadata !DIExpression()), !dbg !6725
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6727
  %inc = add nsw i32 %0, 1, !dbg !6727
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6727
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6728
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6728
  store i32 %0, i32* %rt_int, align 8, !dbg !6729
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6730
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !6730
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6730
  store %struct.rtx_def* %pattern, %struct.rtx_def** %rt_rtx, align 8, !dbg !6731
  %2 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 1, !dbg !6732
  %rt_int7 = bitcast %union.rtunion_def* %2 to i32*, !dbg !6732
  store i32 -1, i32* %rt_int7, align 8, !dbg !6733
  %3 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 2, !dbg !6734
  %rt_rtx11 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6734
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx11, align 8, !dbg !6735
  %arrayidx14 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 1, !dbg !6736
  %rt_rtx15 = bitcast %struct.object_block** %arrayidx14 to %struct.rtx_def**, !dbg !6736
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx15, align 8, !dbg !6737
  %call16 = tail call i32 @curr_insn_locator() #7, !dbg !6738
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6739
  %rt_int20 = bitcast i64* %arrayidx19 to i32*, !dbg !6739
  store i32 %call16, i32* %rt_int20, align 8, !dbg !6740
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6741
  %rt_bb = bitcast %struct.object_block** %arrayidx23 to %struct.basic_block_def**, !dbg !6741
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6742
  ret %struct.rtx_def* %call, !dbg !6743
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_before_noloc(%struct.rtx_def* %x, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6744 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6746, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6747, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6748, metadata !DIExpression()), !dbg !6753
  %tobool = icmp eq %struct.rtx_def* %before, null, !dbg !6754
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6754

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6754
  br label %cond.end, !dbg !6754

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6755
  %bf.load = load i32, i32* %0, align 8, !dbg !6755
  %bf.clear = and i32 %bf.load, 65535, !dbg !6755
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6756
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6756
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !6756

while.cond.preheader:                             ; preds = %cond.end
  br label %while.cond, !dbg !6757

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ null, %while.cond.preheader ], !dbg !6753
  %insn.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %x, %while.cond.preheader ], !dbg !6758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6749, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6748, metadata !DIExpression()), !dbg !6753
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6757
  br i1 %tobool1, label %sw.epilog.loopexit, label %while.body, !dbg !6757

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6759
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6759
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6750, metadata !DIExpression()), !dbg !6760
  tail call void @add_insn_before(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6761
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6748, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6749, metadata !DIExpression()), !dbg !6753
  br label %while.cond, !dbg !6757, !llvm.loop !6762

sw.default:                                       ; preds = %cond.end
  %call = tail call %struct.rtx_def* @make_debug_insn_raw(%struct.rtx_def* %x) #8, !dbg !6764
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6748, metadata !DIExpression()), !dbg !6753
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6765
  br label %sw.epilog, !dbg !6766

sw.epilog.loopexit:                               ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6748, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6748, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6748, metadata !DIExpression()), !dbg !6753
  br label %sw.epilog, !dbg !6767

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default
  %last.1 = phi %struct.rtx_def* [ %call, %sw.default ], [ %last.0.lcssa, %sw.epilog.loopexit ], !dbg !6753
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !6748, metadata !DIExpression()), !dbg !6753
  ret %struct.rtx_def* %last.1, !dbg !6767
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_barrier_before(%struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6768 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6770, metadata !DIExpression()), !dbg !6772
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 11) #7, !dbg !6773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6771, metadata !DIExpression()), !dbg !6772
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6774
  %inc = add nsw i32 %0, 1, !dbg !6774
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6774
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6775
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6775
  store i32 %0, i32* %rt_int, align 8, !dbg !6776
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6777
  ret %struct.rtx_def* %call, !dbg !6778
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_label_before(%struct.rtx_def* %label, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6779 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !6781, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6782, metadata !DIExpression()), !dbg !6783
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6784
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6784
  %0 = load i32, i32* %rt_int, align 8, !dbg !6784
  %cmp = icmp eq i32 %0, 0, !dbg !6786
  br i1 %cmp, label %if.then, label %if.end, !dbg !6787

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6788
  %inc = add nsw i32 %1, 1, !dbg !6788
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6788
  store i32 %1, i32* %rt_int, align 8, !dbg !6790
  tail call void @add_insn_before(%struct.rtx_def* %label, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6791
  br label %if.end, !dbg !6792

if.end:                                           ; preds = %if.then, %entry
  ret %struct.rtx_def* %label, !dbg !6793
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_note_before(i32 %subtype, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !6794 {
entry:
  call void @llvm.dbg.value(metadata i32 %subtype, metadata !6798, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !6799, metadata !DIExpression()), !dbg !6801
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 13) #7, !dbg !6802
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6800, metadata !DIExpression()), !dbg !6801
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6803
  %inc = add nsw i32 %0, 1, !dbg !6803
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6803
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6804
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6804
  store i32 %0, i32* %rt_int, align 8, !dbg !6805
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6806
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !6806
  %rt_int4 = bitcast %union.rtunion_def* %1 to i32*, !dbg !6806
  store i32 %subtype, i32* %rt_int4, align 8, !dbg !6807
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6808
  %rt_bb = bitcast %struct.object_block** %arrayidx7 to %struct.basic_block_def**, !dbg !6808
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6809
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6810
  %2 = bitcast i64* %arrayidx10 to i8*, !dbg !6811
  %call11 = tail call i8* @memset(i8* nonnull %2, i32 0, i64 8) #7, !dbg !6812
  tail call void @add_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !6813
  ret %struct.rtx_def* %call, !dbg !6814
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %x, %struct.rtx_def* %after, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6815 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6817, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6818, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6819, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6820, metadata !DIExpression()), !dbg !6821
  %tobool = icmp eq %struct.rtx_def* %after, null, !dbg !6822
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6822

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6822
  br label %cond.end, !dbg !6822

cond.end:                                         ; preds = %entry, %cond.true
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !6823
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6825

if.end:                                           ; preds = %cond.end
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6826
  %bf.load = load i32, i32* %0, align 8, !dbg !6826
  %bf.clear = and i32 %bf.load, 65535, !dbg !6826
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6827
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6827
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !6827

sw.bb:                                            ; preds = %if.end
  %call = tail call fastcc %struct.rtx_def* @emit_insn_after_1(%struct.rtx_def* nonnull %x, %struct.rtx_def* %after, %struct.basic_block_def* %bb) #8, !dbg !6828
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6820, metadata !DIExpression()), !dbg !6821
  br label %cleanup, !dbg !6830

sw.default:                                       ; preds = %if.end
  %call1 = tail call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* nonnull %x) #8, !dbg !6831
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6820, metadata !DIExpression()), !dbg !6821
  tail call void @add_insn_after(%struct.rtx_def* %call1, %struct.rtx_def* %after, %struct.basic_block_def* %bb) #8, !dbg !6832
  br label %cleanup, !dbg !6833

cleanup:                                          ; preds = %sw.bb, %sw.default, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %after, %cond.end ], [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !6821
  ret %struct.rtx_def* %retval.0, !dbg !6834
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_insn_after_1(%struct.rtx_def* %first, %struct.rtx_def* %after, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6835 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !6837, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6838, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6839, metadata !DIExpression()), !dbg !6842
  %tobool = icmp eq %struct.basic_block_def* %bb, null, !dbg !6843
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6845

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 0, !dbg !6846
  %bf.load = load i32, i32* %0, align 8, !dbg !6846
  %bf.clear = and i32 %bf.load, 65535, !dbg !6846
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !6846
  br i1 %cmp, label %if.end, label %if.then, !dbg !6847

if.then:                                          ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 1, !dbg !6848
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6848
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6848
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !6839, metadata !DIExpression()), !dbg !6842
  br label %if.end, !dbg !6849

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %bb.addr.0 = phi %struct.basic_block_def* [ %bb, %entry ], [ null, %land.lhs.true ], [ %1, %if.then ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.addr.0, metadata !6839, metadata !DIExpression()), !dbg !6842
  %tobool1 = icmp eq %struct.basic_block_def* %bb.addr.0, null, !dbg !6850
  br i1 %tobool1, label %for.cond36.preheader, label %if.then2, !dbg !6852

for.cond36.preheader:                             ; preds = %if.end
  br label %for.cond36, !dbg !6853

if.then2:                                         ; preds = %if.end
  tail call void @df_set_bb_dirty(%struct.basic_block_def* nonnull %bb.addr.0) #7, !dbg !6855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !6840, metadata !DIExpression()), !dbg !6842
  br label %for.cond, !dbg !6857

for.cond:                                         ; preds = %for.inc, %if.then2
  %last.0 = phi %struct.rtx_def* [ %first, %if.then2 ], [ %5, %for.inc ], !dbg !6859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6840, metadata !DIExpression()), !dbg !6842
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6860
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6860
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6860
  %tobool6 = icmp eq %struct.rtx_def* %3, null, !dbg !6862
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 0, !dbg !6863
  %bf.load7 = load i32, i32* %4, align 8, !dbg !6863
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !6863
  %cmp9 = icmp eq i32 %bf.clear8, 11, !dbg !6863
  br i1 %tobool6, label %for.end, label %for.body, !dbg !6862

for.body:                                         ; preds = %for.cond
  br i1 %cmp9, label %for.inc, label %if.then10, !dbg !6864

if.then10:                                        ; preds = %for.body
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 1, !dbg !6865
  %rt_bb14 = bitcast %struct.object_block** %arrayidx13 to %struct.basic_block_def**, !dbg !6865
  store %struct.basic_block_def* %bb.addr.0, %struct.basic_block_def** %rt_bb14, align 8, !dbg !6865
  %call = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %last.0) #7, !dbg !6868
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6869
  br label %for.inc, !dbg !6870

for.inc:                                          ; preds = %for.body, %if.then10
  %5 = phi %struct.rtx_def* [ %3, %for.body ], [ %.pre, %if.then10 ], !dbg !6869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6840, metadata !DIExpression()), !dbg !6842
  br label %for.cond, !dbg !6871, !llvm.loop !6872

for.end:                                          ; preds = %for.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %for.cond ], !dbg !6859
  %rt_rtx.lcssa = phi %struct.rtx_def** [ %rt_rtx, %for.cond ], !dbg !6860
  %cmp9.lcssa = phi i1 [ %cmp9, %for.cond ], !dbg !6863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  br i1 %cmp9.lcssa, label %if.end29, label %if.then23, !dbg !6874

if.then23:                                        ; preds = %for.end
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0.lcssa, i64 0, i32 1, i32 0, i32 1, !dbg !6875
  %rt_bb27 = bitcast %struct.object_block** %arrayidx26 to %struct.basic_block_def**, !dbg !6875
  store %struct.basic_block_def* %bb.addr.0, %struct.basic_block_def** %rt_bb27, align 8, !dbg !6875
  %call28 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %last.0.lcssa) #7, !dbg !6878
  br label %if.end29, !dbg !6879

if.end29:                                         ; preds = %if.then23, %for.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.addr.0, i64 0, i32 7, !dbg !6880
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6880
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6880
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !6880
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6880
  %cmp30 = icmp eq %struct.rtx_def* %7, %after, !dbg !6882
  br i1 %cmp30, label %if.then31, label %if.end49, !dbg !6883

if.then31:                                        ; preds = %if.end29
  store %struct.rtx_def* %last.0.lcssa, %struct.rtx_def** %end_, align 8, !dbg !6884
  br label %if.end49, !dbg !6885

for.cond36:                                       ; preds = %for.cond36.preheader, %for.inc43
  %last.1 = phi %struct.rtx_def* [ %9, %for.inc43 ], [ %first, %for.cond36.preheader ], !dbg !6886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !6840, metadata !DIExpression()), !dbg !6842
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6887
  %rt_rtx40 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6887
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !6887
  %tobool41 = icmp eq %struct.rtx_def* %9, null, !dbg !6853
  br i1 %tobool41, label %if.end49.loopexit, label %for.inc43, !dbg !6853

for.inc43:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !6840, metadata !DIExpression()), !dbg !6842
  br label %for.cond36, !dbg !6889, !llvm.loop !6890

if.end49.loopexit:                                ; preds = %for.cond36
  %last.1.lcssa = phi %struct.rtx_def* [ %last.1, %for.cond36 ], !dbg !6886
  %rt_rtx40.lcssa = phi %struct.rtx_def** [ %rt_rtx40, %for.cond36 ], !dbg !6887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1.lcssa, metadata !6840, metadata !DIExpression()), !dbg !6842
  br label %if.end49, !dbg !6892

if.end49:                                         ; preds = %if.end49.loopexit, %if.end29, %if.then31
  %rt_rtx65.pre-phi = phi %struct.rtx_def** [ %rt_rtx40.lcssa, %if.end49.loopexit ], [ %rt_rtx.lcssa, %if.end29 ], [ %rt_rtx.lcssa, %if.then31 ], !dbg !6893
  %last.2 = phi %struct.rtx_def* [ %last.1.lcssa, %if.end49.loopexit ], [ %last.0.lcssa, %if.end29 ], [ %last.0.lcssa, %if.then31 ], !dbg !6894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !6840, metadata !DIExpression()), !dbg !6842
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6892
  %rt_rtx53 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6892
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6892
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !6841, metadata !DIExpression()), !dbg !6842
  store %struct.rtx_def* %first, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6895
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6896
  %rt_rtx61 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !6896
  store %struct.rtx_def* %after, %struct.rtx_def** %rt_rtx61, align 8, !dbg !6897
  store %struct.rtx_def* %11, %struct.rtx_def** %rt_rtx65.pre-phi, align 8, !dbg !6898
  %tobool66 = icmp eq %struct.rtx_def* %11, null, !dbg !6899
  br i1 %tobool66, label %if.end72, label %if.then67, !dbg !6901

if.then67:                                        ; preds = %if.end49
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6902
  %rt_rtx71 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6902
  store %struct.rtx_def* %last.2, %struct.rtx_def** %rt_rtx71, align 8, !dbg !6903
  br label %if.end72, !dbg !6902

if.end72:                                         ; preds = %if.end49, %if.then67
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6904
  %cmp73 = icmp eq %struct.rtx_def* %14, %after, !dbg !6906
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !6907

if.then74:                                        ; preds = %if.end72
  store %struct.rtx_def* %last.2, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !6908
  br label %if.end75, !dbg !6909

if.end75:                                         ; preds = %if.then74, %if.end72
  ret %struct.rtx_def* %last.2, !dbg !6910
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_after_noloc(%struct.rtx_def* %x, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6911 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6913, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6914, metadata !DIExpression()), !dbg !6916
  %tobool = icmp eq %struct.rtx_def* %after, null, !dbg !6917
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6917

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4372, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6917
  br label %cond.end, !dbg !6917

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6918
  %bf.load = load i32, i32* %0, align 8, !dbg !6918
  %bf.clear = and i32 %bf.load, 65535, !dbg !6918
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6919
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6919
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !6919

sw.bb:                                            ; preds = %cond.end
  %call = tail call fastcc %struct.rtx_def* @emit_insn_after_1(%struct.rtx_def* %x, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6920
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6915, metadata !DIExpression()), !dbg !6916
  br label %sw.epilog, !dbg !6922

sw.default:                                       ; preds = %cond.end
  %call1 = tail call %struct.rtx_def* @make_jump_insn_raw(%struct.rtx_def* %x) #8, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6915, metadata !DIExpression()), !dbg !6916
  tail call void @add_insn_after(%struct.rtx_def* %call1, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6924
  br label %sw.epilog, !dbg !6925

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %last.0 = phi %struct.rtx_def* [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !6926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6915, metadata !DIExpression()), !dbg !6916
  ret %struct.rtx_def* %last.0, !dbg !6927
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_after_noloc(%struct.rtx_def* %x, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6928 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6930, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6931, metadata !DIExpression()), !dbg !6933
  %tobool = icmp eq %struct.rtx_def* %after, null, !dbg !6934
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6934

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4409, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6934
  br label %cond.end, !dbg !6934

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6935
  %bf.load = load i32, i32* %0, align 8, !dbg !6935
  %bf.clear = and i32 %bf.load, 65535, !dbg !6935
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6936
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6936
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !6936

sw.bb:                                            ; preds = %cond.end
  %call = tail call fastcc %struct.rtx_def* @emit_insn_after_1(%struct.rtx_def* %x, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6937
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6932, metadata !DIExpression()), !dbg !6933
  br label %sw.epilog, !dbg !6939

sw.default:                                       ; preds = %cond.end
  %call1 = tail call fastcc %struct.rtx_def* @make_call_insn_raw(%struct.rtx_def* %x) #8, !dbg !6940
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6932, metadata !DIExpression()), !dbg !6933
  tail call void @add_insn_after(%struct.rtx_def* %call1, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6941
  br label %sw.epilog, !dbg !6942

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %last.0 = phi %struct.rtx_def* [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !6943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6932, metadata !DIExpression()), !dbg !6933
  ret %struct.rtx_def* %last.0, !dbg !6944
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_after_noloc(%struct.rtx_def* %x, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6945 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6947, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6948, metadata !DIExpression()), !dbg !6950
  %tobool = icmp eq %struct.rtx_def* %after, null, !dbg !6951
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6951

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 4446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6951
  br label %cond.end, !dbg !6951

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6952
  %bf.load = load i32, i32* %0, align 8, !dbg !6952
  %bf.clear = and i32 %bf.load, 65535, !dbg !6952
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !6953
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !6953
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !6953

sw.bb:                                            ; preds = %cond.end
  %call = tail call fastcc %struct.rtx_def* @emit_insn_after_1(%struct.rtx_def* %x, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6949, metadata !DIExpression()), !dbg !6950
  br label %sw.epilog, !dbg !6956

sw.default:                                       ; preds = %cond.end
  %call1 = tail call %struct.rtx_def* @make_debug_insn_raw(%struct.rtx_def* %x) #8, !dbg !6957
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6949, metadata !DIExpression()), !dbg !6950
  tail call void @add_insn_after(%struct.rtx_def* %call1, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6958
  br label %sw.epilog, !dbg !6959

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %last.0 = phi %struct.rtx_def* [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !6960
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6949, metadata !DIExpression()), !dbg !6950
  ret %struct.rtx_def* %last.0, !dbg !6961
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_label_after(%struct.rtx_def* %label, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6962 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6965, metadata !DIExpression()), !dbg !6966
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6967
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6967
  %0 = load i32, i32* %rt_int, align 8, !dbg !6967
  %cmp = icmp eq i32 %0, 0, !dbg !6969
  br i1 %cmp, label %if.then, label %if.end, !dbg !6970

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6971
  %inc = add nsw i32 %1, 1, !dbg !6971
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6971
  store i32 %1, i32* %rt_int, align 8, !dbg !6973
  tail call void @add_insn_after(%struct.rtx_def* %label, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6974
  br label %if.end, !dbg !6975

if.end:                                           ; preds = %if.then, %entry
  ret %struct.rtx_def* %label, !dbg !6976
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_note_after(i32 %subtype, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6977 {
entry:
  call void @llvm.dbg.value(metadata i32 %subtype, metadata !6979, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6980, metadata !DIExpression()), !dbg !6982
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 13) #7, !dbg !6983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6981, metadata !DIExpression()), !dbg !6982
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6984
  %inc = add nsw i32 %0, 1, !dbg !6984
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !6984
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6985
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6985
  store i32 %0, i32* %rt_int, align 8, !dbg !6986
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !6987
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !6987
  %rt_int4 = bitcast %union.rtunion_def* %1 to i32*, !dbg !6987
  store i32 %subtype, i32* %rt_int4, align 8, !dbg !6988
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !6989
  %rt_bb = bitcast %struct.object_block** %arrayidx7 to %struct.basic_block_def**, !dbg !6989
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !6990
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !6991
  %2 = bitcast i64* %arrayidx10 to i8*, !dbg !6992
  %call11 = tail call i8* @memset(i8* nonnull %2, i32 0, i64 8) #7, !dbg !6993
  tail call void @add_insn_after(%struct.rtx_def* %call, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !6994
  ret %struct.rtx_def* %call, !dbg !6995
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %pattern, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !6996 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !6998, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6999, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7000, metadata !DIExpression()), !dbg !7001
  br label %while.cond, !dbg !7002

while.cond:                                       ; preds = %while.body, %entry
  %prev.0 = phi %struct.rtx_def* [ %after, %entry ], [ %2, %while.body ], !dbg !7001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !7000, metadata !DIExpression()), !dbg !7001
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 0, !dbg !7003
  %bf.load = load i32, i32* %0, align 8, !dbg !7003
  %bf.clear = and i32 %bf.load, 65535, !dbg !7003
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7003
  br i1 %cmp, label %while.body, label %while.end, !dbg !7002

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7004
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7004
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7000, metadata !DIExpression()), !dbg !7001
  br label %while.cond, !dbg !7002, !llvm.loop !7005

while.end:                                        ; preds = %while.cond
  %prev.0.lcssa = phi %struct.rtx_def* [ %prev.0, %while.cond ], !dbg !7001
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7000, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7000, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7000, metadata !DIExpression()), !dbg !7001
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7006
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7006

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7006

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7006

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7006
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7006

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7006
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7008

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7009
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7009
  %3 = load i32, i32* %rt_int, align 8, !dbg !7009
  %call = tail call %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %3) #8, !dbg !7010
  br label %cleanup, !dbg !7011

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, %struct.basic_block_def* null) #8, !dbg !7012
  br label %cleanup, !dbg !7013

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7014
  ret %struct.rtx_def* %retval.0, !dbg !7015
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %loc) local_unnamed_addr #5 !dbg !7016 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7018, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7019, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7020, metadata !DIExpression()), !dbg !7022
  %call = tail call %struct.rtx_def* @emit_jump_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7023
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7021, metadata !DIExpression()), !dbg !7022
  %cmp = icmp ne %struct.rtx_def* %pattern, null, !dbg !7024
  %tobool = icmp ne i32 %loc, 0, !dbg !7026
  %or.cond = and i1 %cmp, %tobool, !dbg !7027
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7027

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7028

while.cond:                                       ; preds = %if.end15, %if.end
  %after.pn = phi %struct.rtx_def* [ %after, %if.end ], [ %after.addr.0, %if.end15 ]
  %after.addr.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7022
  %after.addr.0.in = bitcast %union.rtunion_def* %after.addr.0.in.in to %struct.rtx_def**, !dbg !7022
  %after.addr.0 = load %struct.rtx_def*, %struct.rtx_def** %after.addr.0.in, align 8, !dbg !7022
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.addr.0, metadata !7019, metadata !DIExpression()), !dbg !7022
  %call1 = tail call i32 @active_insn_p(%struct.rtx_def* %after.addr.0) #8, !dbg !7029
  %tobool2 = icmp eq i32 %call1, 0, !dbg !7029
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !7032

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !7033
  %rt_int = bitcast i64* %arrayidx5 to i32*, !dbg !7033
  %0 = load i32, i32* %rt_int, align 8, !dbg !7033
  %tobool6 = icmp eq i32 %0, 0, !dbg !7033
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !7034

if.then7:                                         ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7035
  br label %if.end12, !dbg !7036

if.end12:                                         ; preds = %land.lhs.true, %while.cond, %if.then7
  %cmp13 = icmp eq %struct.rtx_def* %after.addr.0, %call, !dbg !7037
  br i1 %cmp13, label %cleanup.loopexit, label %if.end15, !dbg !7039

if.end15:                                         ; preds = %if.end12
  br label %while.cond, !dbg !7028, !llvm.loop !7040

cleanup.loopexit:                                 ; preds = %if.end12
  br label %cleanup, !dbg !7042

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7042
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %pattern, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !7043 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7047, metadata !DIExpression()), !dbg !7048
  br label %while.cond, !dbg !7049

while.cond:                                       ; preds = %while.body, %entry
  %prev.0 = phi %struct.rtx_def* [ %after, %entry ], [ %2, %while.body ], !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !7047, metadata !DIExpression()), !dbg !7048
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 0, !dbg !7050
  %bf.load = load i32, i32* %0, align 8, !dbg !7050
  %bf.clear = and i32 %bf.load, 65535, !dbg !7050
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7050
  br i1 %cmp, label %while.body, label %while.end, !dbg !7049

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7051
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7051
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7051
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7047, metadata !DIExpression()), !dbg !7048
  br label %while.cond, !dbg !7049, !llvm.loop !7052

while.end:                                        ; preds = %while.cond
  %prev.0.lcssa = phi %struct.rtx_def* [ %prev.0, %while.cond ], !dbg !7048
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7050
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7047, metadata !DIExpression()), !dbg !7048
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7053
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7053

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7053

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7053

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7053
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7053

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7053
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7055

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7056
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7056
  %3 = load i32, i32* %rt_int, align 8, !dbg !7056
  %call = tail call %struct.rtx_def* @emit_jump_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %3) #8, !dbg !7057
  br label %cleanup, !dbg !7058

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_jump_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7059
  br label %cleanup, !dbg !7060

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7061
  ret %struct.rtx_def* %retval.0, !dbg !7062
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %loc) local_unnamed_addr #5 !dbg !7063 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7065, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7066, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7067, metadata !DIExpression()), !dbg !7069
  %call = tail call %struct.rtx_def* @emit_call_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7068, metadata !DIExpression()), !dbg !7069
  %cmp = icmp ne %struct.rtx_def* %pattern, null, !dbg !7071
  %tobool = icmp ne i32 %loc, 0, !dbg !7073
  %or.cond = and i1 %cmp, %tobool, !dbg !7074
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7074

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7075

while.cond:                                       ; preds = %if.end15, %if.end
  %after.pn = phi %struct.rtx_def* [ %after, %if.end ], [ %after.addr.0, %if.end15 ]
  %after.addr.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7069
  %after.addr.0.in = bitcast %union.rtunion_def* %after.addr.0.in.in to %struct.rtx_def**, !dbg !7069
  %after.addr.0 = load %struct.rtx_def*, %struct.rtx_def** %after.addr.0.in, align 8, !dbg !7069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.addr.0, metadata !7066, metadata !DIExpression()), !dbg !7069
  %call1 = tail call i32 @active_insn_p(%struct.rtx_def* %after.addr.0) #8, !dbg !7076
  %tobool2 = icmp eq i32 %call1, 0, !dbg !7076
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !7079

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !7080
  %rt_int = bitcast i64* %arrayidx5 to i32*, !dbg !7080
  %0 = load i32, i32* %rt_int, align 8, !dbg !7080
  %tobool6 = icmp eq i32 %0, 0, !dbg !7080
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !7081

if.then7:                                         ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7082
  br label %if.end12, !dbg !7083

if.end12:                                         ; preds = %land.lhs.true, %while.cond, %if.then7
  %cmp13 = icmp eq %struct.rtx_def* %after.addr.0, %call, !dbg !7084
  br i1 %cmp13, label %cleanup.loopexit, label %if.end15, !dbg !7086

if.end15:                                         ; preds = %if.end12
  br label %while.cond, !dbg !7075, !llvm.loop !7087

cleanup.loopexit:                                 ; preds = %if.end12
  br label %cleanup, !dbg !7089

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7089
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_after(%struct.rtx_def* %pattern, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !7090 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7092, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7093, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7094, metadata !DIExpression()), !dbg !7095
  br label %while.cond, !dbg !7096

while.cond:                                       ; preds = %while.body, %entry
  %prev.0 = phi %struct.rtx_def* [ %after, %entry ], [ %2, %while.body ], !dbg !7095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !7094, metadata !DIExpression()), !dbg !7095
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 0, !dbg !7097
  %bf.load = load i32, i32* %0, align 8, !dbg !7097
  %bf.clear = and i32 %bf.load, 65535, !dbg !7097
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7097
  br i1 %cmp, label %while.body, label %while.end, !dbg !7096

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7098
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7098
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7094, metadata !DIExpression()), !dbg !7095
  br label %while.cond, !dbg !7096, !llvm.loop !7099

while.end:                                        ; preds = %while.cond
  %prev.0.lcssa = phi %struct.rtx_def* [ %prev.0, %while.cond ], !dbg !7095
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa, metadata !7094, metadata !DIExpression()), !dbg !7095
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7100
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7100

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7100

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7100

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7100
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7100

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7100
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7102

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7103
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7103
  %3 = load i32, i32* %rt_int, align 8, !dbg !7103
  %call = tail call %struct.rtx_def* @emit_call_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %3) #8, !dbg !7104
  br label %cleanup, !dbg !7105

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_call_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7106
  br label %cleanup, !dbg !7107

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7108
  ret %struct.rtx_def* %retval.0, !dbg !7109
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %loc) local_unnamed_addr #5 !dbg !7110 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7112, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7113, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7114, metadata !DIExpression()), !dbg !7116
  %call = tail call %struct.rtx_def* @emit_debug_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7117
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7115, metadata !DIExpression()), !dbg !7116
  %cmp = icmp ne %struct.rtx_def* %pattern, null, !dbg !7118
  %tobool = icmp ne i32 %loc, 0, !dbg !7120
  %or.cond = and i1 %cmp, %tobool, !dbg !7121
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7121

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7122

while.cond:                                       ; preds = %if.end15, %if.end
  %after.pn = phi %struct.rtx_def* [ %after, %if.end ], [ %after.addr.0, %if.end15 ]
  %after.addr.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7116
  %after.addr.0.in = bitcast %union.rtunion_def* %after.addr.0.in.in to %struct.rtx_def**, !dbg !7116
  %after.addr.0 = load %struct.rtx_def*, %struct.rtx_def** %after.addr.0.in, align 8, !dbg !7116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after.addr.0, metadata !7113, metadata !DIExpression()), !dbg !7116
  %call1 = tail call i32 @active_insn_p(%struct.rtx_def* %after.addr.0) #8, !dbg !7123
  %tobool2 = icmp eq i32 %call1, 0, !dbg !7123
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !7126

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.addr.0, i64 0, i32 1, i32 0, i32 2, !dbg !7127
  %rt_int = bitcast i64* %arrayidx5 to i32*, !dbg !7127
  %0 = load i32, i32* %rt_int, align 8, !dbg !7127
  %tobool6 = icmp eq i32 %0, 0, !dbg !7127
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !7128

if.then7:                                         ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7129
  br label %if.end12, !dbg !7130

if.end12:                                         ; preds = %land.lhs.true, %while.cond, %if.then7
  %cmp13 = icmp eq %struct.rtx_def* %after.addr.0, %call, !dbg !7131
  br i1 %cmp13, label %cleanup.loopexit, label %if.end15, !dbg !7133

if.end15:                                         ; preds = %if.end12
  br label %while.cond, !dbg !7122, !llvm.loop !7134

cleanup.loopexit:                                 ; preds = %if.end12
  br label %cleanup, !dbg !7136

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7136
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_after(%struct.rtx_def* %pattern, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !7137 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7139, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !7140, metadata !DIExpression()), !dbg !7141
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 0, !dbg !7142
  %bf.load = load i32, i32* %0, align 8, !dbg !7142
  %bf.clear = and i32 %bf.load, 65535, !dbg !7142
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7142
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7142

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7142
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !7142

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7142
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !7142

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7142
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7144

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 2, !dbg !7145
  %rt_int = bitcast i64* %arrayidx to i32*, !dbg !7145
  %1 = load i32, i32* %rt_int, align 8, !dbg !7145
  %call = tail call %struct.rtx_def* @emit_debug_insn_after_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after, i32 %1) #8, !dbg !7146
  br label %return, !dbg !7147

if.else:                                          ; preds = %lor.lhs.false8
  %call12 = tail call %struct.rtx_def* @emit_debug_insn_after_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %after) #8, !dbg !7148
  br label %return, !dbg !7149

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call12, %if.else ], !dbg !7150
  ret %struct.rtx_def* %retval.0, !dbg !7151
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %loc) local_unnamed_addr #5 !dbg !7152 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7154, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7155, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7156, metadata !DIExpression()), !dbg !7159
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7160
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7160
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7157, metadata !DIExpression()), !dbg !7159
  %call = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !7161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7158, metadata !DIExpression()), !dbg !7159
  %cmp = icmp ne %struct.rtx_def* %pattern, null, !dbg !7162
  %tobool = icmp ne i32 %loc, 0, !dbg !7164
  %or.cond = and i1 %cmp, %tobool, !dbg !7165
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7165

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !7166
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7168

if.then2:                                         ; preds = %if.end
  %call3 = tail call %struct.rtx_def* @get_insns() #8, !dbg !7169
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7157, metadata !DIExpression()), !dbg !7159
  br label %if.end8, !dbg !7170

if.else:                                          ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7171
  %rt_rtx7 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7171
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !7171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7157, metadata !DIExpression()), !dbg !7159
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then2
  %first.0 = phi %struct.rtx_def* [ %3, %if.else ], [ %call3, %if.then2 ], !dbg !7172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !7157, metadata !DIExpression()), !dbg !7159
  br label %while.cond, !dbg !7173

while.cond:                                       ; preds = %if.end23, %if.end8
  %first.1 = phi %struct.rtx_def* [ %first.0, %if.end8 ], [ %6, %if.end23 ], !dbg !7159
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.1, metadata !7157, metadata !DIExpression()), !dbg !7159
  %call9 = tail call i32 @active_insn_p(%struct.rtx_def* %first.1) #8, !dbg !7174
  %tobool10 = icmp eq i32 %call9, 0, !dbg !7174
  br i1 %tobool10, label %if.end20, label %land.lhs.true, !dbg !7177

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.1, i64 0, i32 1, i32 0, i32 2, !dbg !7178
  %rt_int = bitcast i64* %arrayidx13 to i32*, !dbg !7178
  %4 = load i32, i32* %rt_int, align 8, !dbg !7178
  %tobool14 = icmp eq i32 %4, 0, !dbg !7178
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !7179

if.then15:                                        ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7180
  br label %if.end20, !dbg !7181

if.end20:                                         ; preds = %land.lhs.true, %while.cond, %if.then15
  %cmp21 = icmp eq %struct.rtx_def* %first.1, %call, !dbg !7182
  br i1 %cmp21, label %cleanup.loopexit, label %if.end23, !dbg !7184

if.end23:                                         ; preds = %if.end20
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7185
  %rt_rtx27 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !7185
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !7185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !7157, metadata !DIExpression()), !dbg !7159
  br label %while.cond, !dbg !7173, !llvm.loop !7186

cleanup.loopexit:                                 ; preds = %if.end20
  br label %cleanup, !dbg !7188

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7188
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %pattern, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !7189 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7191, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7192, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %while.cond, !dbg !7195

while.cond:                                       ; preds = %while.body, %entry
  %next.0 = phi %struct.rtx_def* [ %before, %entry ], [ %2, %while.body ], !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !7193, metadata !DIExpression()), !dbg !7194
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !7196
  %bf.load = load i32, i32* %0, align 8, !dbg !7196
  %bf.clear = and i32 %bf.load, 65535, !dbg !7196
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7196
  br i1 %cmp, label %while.body, label %while.end, !dbg !7195

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7197
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7197
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7197
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %while.cond, !dbg !7195, !llvm.loop !7198

while.end:                                        ; preds = %while.cond
  %next.0.lcssa = phi %struct.rtx_def* [ %next.0, %while.cond ], !dbg !7194
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7193, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7193, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7193, metadata !DIExpression()), !dbg !7194
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7199
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7199

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7199

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7199

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7199
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7199

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7199
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7201

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7202
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7202
  %3 = load i32, i32* %rt_int, align 8, !dbg !7202
  %call = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %3) #8, !dbg !7203
  br label %cleanup, !dbg !7204

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, %struct.basic_block_def* null) #8, !dbg !7205
  br label %cleanup, !dbg !7206

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7207
  ret %struct.rtx_def* %retval.0, !dbg !7208
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %loc) local_unnamed_addr #5 !dbg !7209 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7211, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7212, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7213, metadata !DIExpression()), !dbg !7216
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7217
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7217
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7214, metadata !DIExpression()), !dbg !7216
  %call = tail call %struct.rtx_def* @emit_jump_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7218
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7215, metadata !DIExpression()), !dbg !7216
  %cmp = icmp eq %struct.rtx_def* %pattern, null, !dbg !7219
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7221

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7222

while.cond:                                       ; preds = %if.end18, %if.end
  %.pn = phi %struct.rtx_def* [ %1, %if.end ], [ %first.0, %if.end18 ]
  %first.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7216
  %first.0.in = bitcast %union.rtunion_def* %first.0.in.in to %struct.rtx_def**, !dbg !7216
  %first.0 = load %struct.rtx_def*, %struct.rtx_def** %first.0.in, align 8, !dbg !7216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !7214, metadata !DIExpression()), !dbg !7216
  %call5 = tail call i32 @active_insn_p(%struct.rtx_def* %first.0) #8, !dbg !7223
  %tobool = icmp eq i32 %call5, 0, !dbg !7223
  br i1 %tobool, label %if.end15, label %land.lhs.true, !dbg !7226

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.0, i64 0, i32 1, i32 0, i32 2, !dbg !7227
  %rt_int = bitcast i64* %arrayidx8 to i32*, !dbg !7227
  %2 = load i32, i32* %rt_int, align 8, !dbg !7227
  %tobool9 = icmp eq i32 %2, 0, !dbg !7227
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !7228

if.then10:                                        ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7229
  br label %if.end15, !dbg !7230

if.end15:                                         ; preds = %land.lhs.true, %while.cond, %if.then10
  %cmp16 = icmp eq %struct.rtx_def* %first.0, %call, !dbg !7231
  br i1 %cmp16, label %cleanup.loopexit, label %if.end18, !dbg !7233

if.end18:                                         ; preds = %if.end15
  br label %while.cond, !dbg !7222, !llvm.loop !7234

cleanup.loopexit:                                 ; preds = %if.end15
  br label %cleanup, !dbg !7236

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7236
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %pattern, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !7237 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7239, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7240, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %while.cond, !dbg !7243

while.cond:                                       ; preds = %while.body, %entry
  %next.0 = phi %struct.rtx_def* [ %before, %entry ], [ %2, %while.body ], !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !7241, metadata !DIExpression()), !dbg !7242
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !7244
  %bf.load = load i32, i32* %0, align 8, !dbg !7244
  %bf.clear = and i32 %bf.load, 65535, !dbg !7244
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7244
  br i1 %cmp, label %while.body, label %while.end, !dbg !7243

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7245
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7245
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %while.cond, !dbg !7243, !llvm.loop !7246

while.end:                                        ; preds = %while.cond
  %next.0.lcssa = phi %struct.rtx_def* [ %next.0, %while.cond ], !dbg !7242
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7241, metadata !DIExpression()), !dbg !7242
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7247
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7247

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7247

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7247

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7247
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7247

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7247
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7249

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7250
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7250
  %3 = load i32, i32* %rt_int, align 8, !dbg !7250
  %call = tail call %struct.rtx_def* @emit_jump_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %3) #8, !dbg !7251
  br label %cleanup, !dbg !7252

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_jump_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7253
  br label %cleanup, !dbg !7254

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7255
  ret %struct.rtx_def* %retval.0, !dbg !7256
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %loc) local_unnamed_addr #5 !dbg !7257 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7259, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7260, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7261, metadata !DIExpression()), !dbg !7264
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7265
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7265
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7262, metadata !DIExpression()), !dbg !7264
  %call = tail call %struct.rtx_def* @emit_call_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7263, metadata !DIExpression()), !dbg !7264
  %cmp = icmp eq %struct.rtx_def* %pattern, null, !dbg !7267
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7269

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7270

while.cond:                                       ; preds = %if.end18, %if.end
  %.pn = phi %struct.rtx_def* [ %1, %if.end ], [ %first.0, %if.end18 ]
  %first.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7264
  %first.0.in = bitcast %union.rtunion_def* %first.0.in.in to %struct.rtx_def**, !dbg !7264
  %first.0 = load %struct.rtx_def*, %struct.rtx_def** %first.0.in, align 8, !dbg !7264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !7262, metadata !DIExpression()), !dbg !7264
  %call5 = tail call i32 @active_insn_p(%struct.rtx_def* %first.0) #8, !dbg !7271
  %tobool = icmp eq i32 %call5, 0, !dbg !7271
  br i1 %tobool, label %if.end15, label %land.lhs.true, !dbg !7274

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.0, i64 0, i32 1, i32 0, i32 2, !dbg !7275
  %rt_int = bitcast i64* %arrayidx8 to i32*, !dbg !7275
  %2 = load i32, i32* %rt_int, align 8, !dbg !7275
  %tobool9 = icmp eq i32 %2, 0, !dbg !7275
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !7276

if.then10:                                        ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7277
  br label %if.end15, !dbg !7278

if.end15:                                         ; preds = %land.lhs.true, %while.cond, %if.then10
  %cmp16 = icmp eq %struct.rtx_def* %first.0, %call, !dbg !7279
  br i1 %cmp16, label %cleanup.loopexit, label %if.end18, !dbg !7281

if.end18:                                         ; preds = %if.end15
  br label %while.cond, !dbg !7270, !llvm.loop !7282

cleanup.loopexit:                                 ; preds = %if.end15
  br label %cleanup, !dbg !7284

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7284
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn_before(%struct.rtx_def* %pattern, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !7285 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7287, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7289, metadata !DIExpression()), !dbg !7290
  br label %while.cond, !dbg !7291

while.cond:                                       ; preds = %while.body, %entry
  %next.0 = phi %struct.rtx_def* [ %before, %entry ], [ %2, %while.body ], !dbg !7290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !7292
  %bf.load = load i32, i32* %0, align 8, !dbg !7292
  %bf.clear = and i32 %bf.load, 65535, !dbg !7292
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7292
  br i1 %cmp, label %while.body, label %while.end, !dbg !7291

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7293
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7293
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7289, metadata !DIExpression()), !dbg !7290
  br label %while.cond, !dbg !7291, !llvm.loop !7294

while.end:                                        ; preds = %while.cond
  %next.0.lcssa = phi %struct.rtx_def* [ %next.0, %while.cond ], !dbg !7290
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !7292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7289, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7289, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0.lcssa, metadata !7289, metadata !DIExpression()), !dbg !7290
  %cmp3 = icmp eq i32 %bf.clear.lcssa, 8, !dbg !7295
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !7295

lor.lhs.false:                                    ; preds = %while.end
  br i1 false, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false7, !dbg !7295

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  br label %if.then, !dbg !7295

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !7295
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7295

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear.lcssa, 10, !dbg !7295
  br i1 %cmp14, label %if.then, label %if.else, !dbg !7297

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %lor.lhs.false11, %lor.lhs.false7, %while.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0.lcssa, i64 0, i32 1, i32 0, i32 2, !dbg !7298
  %rt_int = bitcast i64* %arrayidx17 to i32*, !dbg !7298
  %3 = load i32, i32* %rt_int, align 8, !dbg !7298
  %call = tail call %struct.rtx_def* @emit_call_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %3) #8, !dbg !7299
  br label %cleanup, !dbg !7300

if.else:                                          ; preds = %lor.lhs.false11
  %call18 = tail call %struct.rtx_def* @emit_call_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7301
  br label %cleanup, !dbg !7302

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call18, %if.else ], !dbg !7303
  ret %struct.rtx_def* %retval.0, !dbg !7304
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %loc) local_unnamed_addr #5 !dbg !7305 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7307, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7308, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7309, metadata !DIExpression()), !dbg !7312
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7313
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7313
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7310, metadata !DIExpression()), !dbg !7312
  %call = tail call %struct.rtx_def* @emit_debug_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7311, metadata !DIExpression()), !dbg !7312
  %cmp = icmp eq %struct.rtx_def* %pattern, null, !dbg !7315
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7317

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7318

while.cond:                                       ; preds = %if.end18, %if.end
  %.pn = phi %struct.rtx_def* [ %1, %if.end ], [ %first.0, %if.end18 ]
  %first.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7312
  %first.0.in = bitcast %union.rtunion_def* %first.0.in.in to %struct.rtx_def**, !dbg !7312
  %first.0 = load %struct.rtx_def*, %struct.rtx_def** %first.0.in, align 8, !dbg !7312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first.0, metadata !7310, metadata !DIExpression()), !dbg !7312
  %call5 = tail call i32 @active_insn_p(%struct.rtx_def* %first.0) #8, !dbg !7319
  %tobool = icmp eq i32 %call5, 0, !dbg !7319
  br i1 %tobool, label %if.end15, label %land.lhs.true, !dbg !7322

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %first.0, i64 0, i32 1, i32 0, i32 2, !dbg !7323
  %rt_int = bitcast i64* %arrayidx8 to i32*, !dbg !7323
  %2 = load i32, i32* %rt_int, align 8, !dbg !7323
  %tobool9 = icmp eq i32 %2, 0, !dbg !7323
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !7324

if.then10:                                        ; preds = %land.lhs.true
  store i32 %loc, i32* %rt_int, align 8, !dbg !7325
  br label %if.end15, !dbg !7326

if.end15:                                         ; preds = %land.lhs.true, %while.cond, %if.then10
  %cmp16 = icmp eq %struct.rtx_def* %first.0, %call, !dbg !7327
  br i1 %cmp16, label %cleanup.loopexit, label %if.end18, !dbg !7329

if.end18:                                         ; preds = %if.end15
  br label %while.cond, !dbg !7318, !llvm.loop !7330

cleanup.loopexit:                                 ; preds = %if.end15
  br label %cleanup, !dbg !7332

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret %struct.rtx_def* %call, !dbg !7332
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn_before(%struct.rtx_def* %pattern, %struct.rtx_def* %before) local_unnamed_addr #5 !dbg !7333 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern, metadata !7335, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before, metadata !7336, metadata !DIExpression()), !dbg !7337
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 0, !dbg !7338
  %bf.load = load i32, i32* %0, align 8, !dbg !7338
  %bf.clear = and i32 %bf.load, 65535, !dbg !7338
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7338
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7338

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7338
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !7338

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7338
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !7338

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7338
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7340

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before, i64 0, i32 1, i32 0, i32 2, !dbg !7341
  %rt_int = bitcast i64* %arrayidx to i32*, !dbg !7341
  %1 = load i32, i32* %rt_int, align 8, !dbg !7341
  %call = tail call %struct.rtx_def* @emit_debug_insn_before_setloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before, i32 %1) #8, !dbg !7342
  br label %return, !dbg !7343

if.else:                                          ; preds = %lor.lhs.false8
  %call12 = tail call %struct.rtx_def* @emit_debug_insn_before_noloc(%struct.rtx_def* %pattern, %struct.rtx_def* %before) #8, !dbg !7344
  br label %return, !dbg !7345

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call12, %if.else ], !dbg !7346
  ret %struct.rtx_def* %retval.0, !dbg !7347
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7348 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7350, metadata !DIExpression()), !dbg !7356
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7351, metadata !DIExpression()), !dbg !7356
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !7358
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7360

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7361
  %bf.load = load i32, i32* %1, align 8, !dbg !7361
  %bf.clear = and i32 %bf.load, 65535, !dbg !7361
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !7362
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !7362
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !7362

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !7363

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %insn.0 = phi %struct.rtx_def* [ %3, %while.body ], [ %x, %while.cond.preheader ], !dbg !7364
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ %0, %while.cond.preheader ], !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !7351, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7352, metadata !DIExpression()), !dbg !7356
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7363
  br i1 %tobool, label %cleanup.loopexit, label %while.body, !dbg !7363

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7365
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7365
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7365
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7353, metadata !DIExpression()), !dbg !7366
  tail call void @add_insn(%struct.rtx_def* nonnull %insn.0) #8, !dbg !7367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7351, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7352, metadata !DIExpression()), !dbg !7356
  br label %while.cond, !dbg !7363, !llvm.loop !7368

sw.default:                                       ; preds = %if.end
  %call = tail call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* nonnull %x) #8, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7351, metadata !DIExpression()), !dbg !7356
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7371
  br label %cleanup, !dbg !7372

cleanup.loopexit:                                 ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7351, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7351, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7351, metadata !DIExpression()), !dbg !7356
  br label %cleanup, !dbg !7373

cleanup:                                          ; preds = %cleanup.loopexit, %sw.default, %entry
  %retval.0 = phi %struct.rtx_def* [ %0, %entry ], [ %call, %sw.default ], [ %last.0.lcssa, %cleanup.loopexit ], !dbg !7356
  ret %struct.rtx_def* %retval.0, !dbg !7373
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_debug_insn(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7374 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7376, metadata !DIExpression()), !dbg !7382
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7377, metadata !DIExpression()), !dbg !7382
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !7384
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7386

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7387
  %bf.load = load i32, i32* %1, align 8, !dbg !7387
  %bf.clear = and i32 %bf.load, 65535, !dbg !7387
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !7388
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !7388
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !7388

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !7389

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %insn.0 = phi %struct.rtx_def* [ %3, %while.body ], [ %x, %while.cond.preheader ], !dbg !7390
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ %0, %while.cond.preheader ], !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7378, metadata !DIExpression()), !dbg !7382
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7389
  br i1 %tobool, label %cleanup.loopexit, label %while.body, !dbg !7389

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7391
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7391
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7379, metadata !DIExpression()), !dbg !7392
  tail call void @add_insn(%struct.rtx_def* nonnull %insn.0) #8, !dbg !7393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7378, metadata !DIExpression()), !dbg !7382
  br label %while.cond, !dbg !7389, !llvm.loop !7394

sw.default:                                       ; preds = %if.end
  %call = tail call %struct.rtx_def* @make_debug_insn_raw(%struct.rtx_def* nonnull %x) #8, !dbg !7396
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7377, metadata !DIExpression()), !dbg !7382
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7397
  br label %cleanup, !dbg !7398

cleanup.loopexit:                                 ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7377, metadata !DIExpression()), !dbg !7382
  br label %cleanup, !dbg !7399

cleanup:                                          ; preds = %cleanup.loopexit, %sw.default, %entry
  %retval.0 = phi %struct.rtx_def* [ %0, %entry ], [ %call, %sw.default ], [ %last.0.lcssa, %cleanup.loopexit ], !dbg !7382
  ret %struct.rtx_def* %retval.0, !dbg !7399
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7400 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7402, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7403, metadata !DIExpression()), !dbg !7408
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7409
  %bf.load = load i32, i32* %0, align 8, !dbg !7409
  %bf.clear = and i32 %bf.load, 65535, !dbg !7409
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !7410
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !7410
  br i1 %switch, label %while.cond.preheader, label %sw.default, !dbg !7410

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !7411

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %last.0 = phi %struct.rtx_def* [ %insn.0, %while.body ], [ null, %while.cond.preheader ], !dbg !7408
  %insn.0 = phi %struct.rtx_def* [ %2, %while.body ], [ %x, %while.cond.preheader ], !dbg !7412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7404, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !7403, metadata !DIExpression()), !dbg !7408
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7411
  br i1 %tobool, label %sw.epilog.loopexit, label %while.body, !dbg !7411

while.body:                                       ; preds = %while.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7413
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !7413
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7405, metadata !DIExpression()), !dbg !7414
  tail call void @add_insn(%struct.rtx_def* nonnull %insn.0) #8, !dbg !7415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7403, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7404, metadata !DIExpression()), !dbg !7408
  br label %while.cond, !dbg !7411, !llvm.loop !7416

sw.default:                                       ; preds = %entry
  %call = tail call %struct.rtx_def* @make_jump_insn_raw(%struct.rtx_def* %x) #8, !dbg !7418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7403, metadata !DIExpression()), !dbg !7408
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7419
  br label %sw.epilog, !dbg !7420

sw.epilog.loopexit:                               ; preds = %while.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond ], !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7403, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7403, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7403, metadata !DIExpression()), !dbg !7408
  br label %sw.epilog, !dbg !7421

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default
  %last.1 = phi %struct.rtx_def* [ %call, %sw.default ], [ %last.0.lcssa, %sw.epilog.loopexit ], !dbg !7408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !7403, metadata !DIExpression()), !dbg !7408
  ret %struct.rtx_def* %last.1, !dbg !7421
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7422 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7424, metadata !DIExpression()), !dbg !7426
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7427
  %bf.load = load i32, i32* %0, align 8, !dbg !7427
  %bf.clear = and i32 %bf.load, 65535, !dbg !7427
  %bf.clear.off = add nsw i32 %bf.clear, -7, !dbg !7428
  %switch = icmp ult i32 %bf.clear.off, 7, !dbg !7428
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !7428

sw.bb:                                            ; preds = %entry
  %call = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %x) #8, !dbg !7429
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7425, metadata !DIExpression()), !dbg !7426
  br label %sw.epilog, !dbg !7431

sw.default:                                       ; preds = %entry
  %call1 = tail call fastcc %struct.rtx_def* @make_call_insn_raw(%struct.rtx_def* %x) #8, !dbg !7432
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7425, metadata !DIExpression()), !dbg !7426
  tail call void @add_insn(%struct.rtx_def* %call1) #8, !dbg !7433
  br label %sw.epilog, !dbg !7434

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %insn.0 = phi %struct.rtx_def* [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !7435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7425, metadata !DIExpression()), !dbg !7426
  ret %struct.rtx_def* %insn.0, !dbg !7436
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_label(%struct.rtx_def* %label) local_unnamed_addr #5 !dbg !7437 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !7439, metadata !DIExpression()), !dbg !7440
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7441
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7441
  %0 = load i32, i32* %rt_int, align 8, !dbg !7441
  %cmp = icmp eq i32 %0, 0, !dbg !7443
  br i1 %cmp, label %if.then, label %if.end, !dbg !7444

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7445
  %inc = add nsw i32 %1, 1, !dbg !7445
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7445
  store i32 %1, i32* %rt_int, align 8, !dbg !7447
  tail call void @add_insn(%struct.rtx_def* %label) #8, !dbg !7448
  br label %if.end, !dbg !7449

if.end:                                           ; preds = %if.then, %entry
  ret %struct.rtx_def* %label, !dbg !7450
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_barrier() local_unnamed_addr #5 !dbg !7451 {
entry:
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 11) #7, !dbg !7454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7453, metadata !DIExpression()), !dbg !7455
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7456
  %inc = add nsw i32 %0, 1, !dbg !7456
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7456
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7457
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7457
  store i32 %0, i32* %rt_int, align 8, !dbg !7458
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7459
  ret %struct.rtx_def* %call, !dbg !7460
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_note_copy(%struct.rtx_def* %orig) local_unnamed_addr #5 !dbg !7461 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !7463, metadata !DIExpression()), !dbg !7465
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 13) #7, !dbg !7466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7464, metadata !DIExpression()), !dbg !7465
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7467
  %inc = add nsw i32 %0, 1, !dbg !7467
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7467
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7468
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7468
  store i32 %0, i32* %rt_int, align 8, !dbg !7469
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !7470
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 2, !dbg !7471
  %1 = load i64, i64* %arrayidx6, align 8, !dbg !7471
  store i64 %1, i64* %arrayidx3, align 8, !dbg !7471
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, !dbg !7472
  %2 = getelementptr inbounds %union.u, %union.u* %u7, i64 1, i32 0, i32 0, i64 0, !dbg !7472
  %rt_int10 = bitcast %union.rtunion_def* %2 to i32*, !dbg !7472
  %3 = load i32, i32* %rt_int10, align 8, !dbg !7472
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !7473
  %4 = getelementptr inbounds %union.u, %union.u* %u11, i64 1, i32 0, i32 0, i64 0, !dbg !7473
  %rt_int14 = bitcast %union.rtunion_def* %4 to i32*, !dbg !7473
  store i32 %3, i32* %rt_int14, align 8, !dbg !7474
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !7475
  %rt_bb = bitcast %struct.object_block** %arrayidx17 to %struct.basic_block_def**, !dbg !7475
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !7476
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7477
  ret %struct.rtx_def* %call, !dbg !7478
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_note(i32 %kind) local_unnamed_addr #5 !dbg !7479 {
entry:
  call void @llvm.dbg.value(metadata i32 %kind, metadata !7483, metadata !DIExpression()), !dbg !7485
  %call = tail call %struct.rtx_def* @rtx_alloc_stat(i32 13) #7, !dbg !7486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7484, metadata !DIExpression()), !dbg !7485
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7487
  %inc = add nsw i32 %0, 1, !dbg !7487
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7487
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7488
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7488
  store i32 %0, i32* %rt_int, align 8, !dbg !7489
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !7490
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !7490
  %rt_int4 = bitcast %union.rtunion_def* %1 to i32*, !dbg !7490
  store i32 %kind, i32* %rt_int4, align 8, !dbg !7491
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !7492
  %2 = bitcast i64* %arrayidx7 to i8*, !dbg !7493
  %call8 = tail call i8* @memset(i8* nonnull %2, i32 0, i64 8) #7, !dbg !7494
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !7495
  %rt_bb = bitcast %struct.object_block** %arrayidx11 to %struct.basic_block_def**, !dbg !7495
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !7496
  tail call void @add_insn(%struct.rtx_def* %call) #8, !dbg !7497
  ret %struct.rtx_def* %call, !dbg !7498
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7499 {
entry:
  br label %tailrecurse, !dbg !7502

tailrecurse:                                      ; preds = %if.then, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %3, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !7501, metadata !DIExpression()), !dbg !7505
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !7506
  %bf.load = load i32, i32* %0, align 8, !dbg !7506
  %bf.clear = and i32 %bf.load, 65535, !dbg !7506
  %cmp = icmp eq i32 %bf.clear, 41, !dbg !7507
  br i1 %cmp, label %if.then, label %if.end, !dbg !7508

if.then:                                          ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7509
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7509
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7509
  %call = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %1) #8, !dbg !7510
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7511
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7511
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !7511
  br label %tailrecurse, !dbg !7502

if.end:                                           ; preds = %tailrecurse
  %x.tr.lcssa = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7501, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7501, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7501, metadata !DIExpression()), !dbg !7505
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %x.tr.lcssa) #7, !dbg !7512
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #8, !dbg !7513
  ret %struct.rtx_def* %call7, !dbg !7514
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_clobber(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7515 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7517, metadata !DIExpression()), !dbg !7519
  tail call void @start_sequence() #8, !dbg !7520
  %call = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %x) #8, !dbg !7521
  %call1 = tail call %struct.rtx_def* @get_insns() #8, !dbg !7522
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7518, metadata !DIExpression()), !dbg !7519
  tail call void @end_sequence() #8, !dbg !7523
  ret %struct.rtx_def* %call1, !dbg !7524
}

; Function Attrs: nounwind uwtable
define dso_local void @start_sequence() local_unnamed_addr #5 !dbg !7525 {
entry:
  %0 = load %struct.sequence_stack*, %struct.sequence_stack** @free_sequence_stack, align 8, !dbg !7528
  %cmp = icmp eq %struct.sequence_stack* %0, null, !dbg !7530
  br i1 %cmp, label %if.else, label %if.then, !dbg !7531

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %0, metadata !7527, metadata !DIExpression()), !dbg !7532
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %0, i64 0, i32 2, !dbg !7533
  %1 = bitcast %struct.sequence_stack** %next to i64*, !dbg !7533
  %2 = load i64, i64* %1, align 8, !dbg !7533
  store i64 %2, i64* bitcast (%struct.sequence_stack** @free_sequence_stack to i64*), align 8, !dbg !7535
  br label %if.end, !dbg !7536

if.else:                                          ; preds = %entry
  %call = tail call i8* @ggc_alloc_stat(i64 24) #7, !dbg !7537
  %3 = bitcast i8* %call to %struct.sequence_stack*, !dbg !7537
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %3, metadata !7527, metadata !DIExpression()), !dbg !7532
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tem.0 = phi %struct.sequence_stack* [ %0, %if.then ], [ %3, %if.else ], !dbg !7538
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %tem.0, metadata !7527, metadata !DIExpression()), !dbg !7532
  %4 = load i64, i64* bitcast (%struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4) to i64*), align 8, !dbg !7539
  %next1 = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %tem.0, i64 0, i32 2, !dbg !7540
  %5 = bitcast %struct.sequence_stack** %next1 to i64*, !dbg !7541
  store i64 %4, i64* %5, align 8, !dbg !7541
  %6 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2) to i64*), align 8, !dbg !7542
  %7 = bitcast %struct.sequence_stack* %tem.0 to i64*, !dbg !7543
  store i64 %6, i64* %7, align 8, !dbg !7543
  %8 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !7544
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %tem.0, i64 0, i32 1, !dbg !7545
  %9 = bitcast %struct.rtx_def** %last to i64*, !dbg !7546
  store i64 %8, i64* %9, align 8, !dbg !7546
  store %struct.sequence_stack* %tem.0, %struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), align 8, !dbg !7547
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !7548
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7549
  ret void, !dbg !7550
}

; Function Attrs: nounwind uwtable
define dso_local void @end_sequence() local_unnamed_addr #5 !dbg !7551 {
entry:
  %0 = load %struct.sequence_stack*, %struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), align 8, !dbg !7554
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %0, metadata !7553, metadata !DIExpression()), !dbg !7555
  %1 = bitcast %struct.sequence_stack* %0 to i64*, !dbg !7556
  %2 = load i64, i64* %1, align 8, !dbg !7556
  store i64 %2, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2) to i64*), align 8, !dbg !7557
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %0, i64 0, i32 1, !dbg !7558
  %3 = bitcast %struct.rtx_def** %last to i64*, !dbg !7558
  %4 = load i64, i64* %3, align 8, !dbg !7558
  store i64 %4, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !7559
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %0, i64 0, i32 2, !dbg !7560
  %5 = bitcast %struct.sequence_stack** %next to i64*, !dbg !7560
  %6 = load i64, i64* %5, align 8, !dbg !7560
  store i64 %6, i64* bitcast (%struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4) to i64*), align 8, !dbg !7561
  %7 = bitcast %struct.sequence_stack* %0 to i8*, !dbg !7562
  %call = tail call i8* @memset(i8* %7, i32 0, i64 24) #7, !dbg !7563
  %8 = load i64, i64* bitcast (%struct.sequence_stack** @free_sequence_stack to i64*), align 8, !dbg !7564
  store i64 %8, i64* %5, align 8, !dbg !7565
  store %struct.sequence_stack* %0, %struct.sequence_stack** @free_sequence_stack, align 8, !dbg !7566
  ret void, !dbg !7567
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_use(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7568 {
entry:
  br label %tailrecurse, !dbg !7571

tailrecurse:                                      ; preds = %if.then, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %3, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !7570, metadata !DIExpression()), !dbg !7574
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !7575
  %bf.load = load i32, i32* %0, align 8, !dbg !7575
  %bf.clear = and i32 %bf.load, 65535, !dbg !7575
  %cmp = icmp eq i32 %bf.clear, 41, !dbg !7576
  br i1 %cmp, label %if.then, label %if.end, !dbg !7577

if.then:                                          ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7578
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7578
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7578
  %call = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %1) #8, !dbg !7579
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7580
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7580
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !7580
  br label %tailrecurse, !dbg !7571

if.end:                                           ; preds = %tailrecurse
  %x.tr.lcssa = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7570, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7570, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !7570, metadata !DIExpression()), !dbg !7574
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %x.tr.lcssa) #7, !dbg !7581
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #8, !dbg !7582
  ret %struct.rtx_def* %call7, !dbg !7583
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_use(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7584 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7586, metadata !DIExpression()), !dbg !7588
  tail call void @start_sequence() #8, !dbg !7589
  %call = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %x) #8, !dbg !7590
  %call1 = tail call %struct.rtx_def* @get_insns() #8, !dbg !7591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7587, metadata !DIExpression()), !dbg !7588
  tail call void @end_sequence() #8, !dbg !7592
  ret %struct.rtx_def* %call1, !dbg !7593
}

; Function Attrs: nounwind uwtable
define dso_local void @force_next_line_note() local_unnamed_addr #5 !dbg !7594 {
entry:
  store i32 -1, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 7), align 8, !dbg !7595
  ret void, !dbg !7596
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) local_unnamed_addr #5 !dbg !7597 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7601, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %kind, metadata !7602, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata %struct.rtx_def* %datum, metadata !7603, metadata !DIExpression()), !dbg !7605
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* null) #7, !dbg !7606
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7604, metadata !DIExpression()), !dbg !7605
  %kind.off = add i32 %kind, -3, !dbg !7607
  %switch = icmp ult i32 %kind.off, 2, !dbg !7607
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !7607

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7608
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7608
  %1 = bitcast %union.rtunion_def* %0 to i32**, !dbg !7608
  %2 = load i32*, i32** %1, align 8, !dbg !7608
  %bf.load = load i32, i32* %2, align 8, !dbg !7608
  %bf.clear = and i32 %bf.load, 65535, !dbg !7608
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !7611
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7612

land.lhs.true:                                    ; preds = %sw.bb
  %call1 = tail call i32 @multiple_sets(%struct.rtx_def* %insn) #7, !dbg !7613
  %tobool = icmp eq i32 %call1, 0, !dbg !7613
  br i1 %tobool, label %if.end, label %if.then, !dbg !7614

if.then:                                          ; preds = %land.lhs.true
  %tobool2 = icmp eq %struct.rtx_def* %call, null, !dbg !7615
  br i1 %tobool2, label %cleanup, label %cond.true, !dbg !7615

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5124, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7615
  br label %cleanup, !dbg !7615

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %datum, i64 0, i32 0, !dbg !7617
  %bf.load3 = load i32, i32* %3, align 8, !dbg !7617
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !7617
  %cmp5 = icmp eq i32 %bf.clear4, 17, !dbg !7619
  br i1 %cmp5, label %cleanup, label %if.end7, !dbg !7620

if.end7:                                          ; preds = %if.end
  %tobool8 = icmp eq %struct.rtx_def* %call, null, !dbg !7621
  br i1 %tobool8, label %sw.epilog, label %if.then9, !dbg !7623

if.then9:                                         ; preds = %if.end7
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7624
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !7624
  store %struct.rtx_def* %datum, %struct.rtx_def** %rt_rtx13, align 8, !dbg !7626
  tail call void @df_notes_rescan(%struct.rtx_def* %insn) #7, !dbg !7627
  br label %cleanup, !dbg !7628

sw.default:                                       ; preds = %entry
  %tobool15 = icmp eq %struct.rtx_def* %call, null, !dbg !7629
  br i1 %tobool15, label %sw.epilog, label %if.then16, !dbg !7631

if.then16:                                        ; preds = %sw.default
  %arrayidx19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7632
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !7632
  store %struct.rtx_def* %datum, %struct.rtx_def** %rt_rtx20, align 8, !dbg !7634
  br label %cleanup, !dbg !7635

sw.epilog:                                        ; preds = %if.end7, %sw.default
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) #7, !dbg !7636
  br i1 %switch, label %sw.bb22, label %sw.epilog24, !dbg !7637

sw.bb22:                                          ; preds = %sw.epilog
  tail call void @df_notes_rescan(%struct.rtx_def* %insn) #7, !dbg !7638
  br label %sw.epilog24, !dbg !7640

sw.epilog24:                                      ; preds = %sw.epilog, %sw.bb22
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7641
  %4 = getelementptr inbounds %union.u, %union.u* %u25, i64 1, i32 0, i32 0, i64 2, !dbg !7641
  %rt_rtx28 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7641
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7641
  br label %cleanup, !dbg !7642

cleanup:                                          ; preds = %if.then, %if.end, %cond.true, %sw.epilog24, %if.then16, %if.then9
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then16 ], [ %5, %sw.epilog24 ], [ %call, %if.then9 ], [ null, %if.then ], [ null, %cond.true ], [ null, %if.end ], !dbg !7605
  ret %struct.rtx_def* %retval.0, !dbg !7643
}

declare dso_local i32 @multiple_sets(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @df_notes_rescan(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !7644 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7646, metadata !DIExpression()), !dbg !7651
  %call = tail call fastcc i32 @classify_insn(%struct.rtx_def* %x) #8, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %call, metadata !7647, metadata !DIExpression()), !dbg !7651
  switch i32 %call, label %sw.default [
    i32 12, label %sw.bb
    i32 8, label %sw.bb2
    i32 9, label %sw.bb4
    i32 10, label %sw.bb8
    i32 7, label %sw.bb10
  ], !dbg !7653

sw.bb:                                            ; preds = %entry
  %call1 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %x) #8, !dbg !7654
  br label %cleanup12, !dbg !7655

sw.bb2:                                           ; preds = %entry
  %call3 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %x) #8, !dbg !7656
  br label %cleanup12, !dbg !7657

sw.bb4:                                           ; preds = %entry
  %call5 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %x) #8, !dbg !7658
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !7648, metadata !DIExpression()), !dbg !7659
  %call6 = tail call i32 @any_uncondjump_p(%struct.rtx_def* %call5) #7, !dbg !7660
  %tobool = icmp eq i32 %call6, 0, !dbg !7660
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7662

lor.lhs.false:                                    ; preds = %sw.bb4
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7663
  %bf.load = load i32, i32* %0, align 8, !dbg !7663
  %bf.clear = and i32 %bf.load, 65535, !dbg !7663
  %cmp = icmp eq i32 %bf.clear, 27, !dbg !7664
  br i1 %cmp, label %if.then, label %cleanup12, !dbg !7665

if.then:                                          ; preds = %sw.bb4, %lor.lhs.false
  %call7 = tail call %struct.rtx_def* @emit_barrier() #8, !dbg !7666
  br label %cleanup12, !dbg !7667

sw.bb8:                                           ; preds = %entry
  %call9 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %x) #8, !dbg !7668
  br label %cleanup12, !dbg !7669

sw.bb10:                                          ; preds = %entry
  %call11 = tail call %struct.rtx_def* @emit_debug_insn(%struct.rtx_def* %x) #8, !dbg !7670
  br label %cleanup12, !dbg !7671

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5228, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7672
  br label %cleanup12, !dbg !7673

cleanup12:                                        ; preds = %if.then, %lor.lhs.false, %sw.default, %sw.bb10, %sw.bb8, %sw.bb2, %sw.bb
  %retval.1 = phi %struct.rtx_def* [ null, %sw.default ], [ %call11, %sw.bb10 ], [ %call9, %sw.bb8 ], [ %call3, %sw.bb2 ], [ %call1, %sw.bb ], [ %call7, %if.then ], [ %call5, %lor.lhs.false ], !dbg !7651
  ret %struct.rtx_def* %retval.1, !dbg !7674
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @classify_insn(%struct.rtx_def* %x) unnamed_addr #5 !dbg !7675 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7679, metadata !DIExpression()), !dbg !7683
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7684
  %bf.load = load i32, i32* %0, align 8, !dbg !7684
  %bf.clear = and i32 %bf.load, 65535, !dbg !7684
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !7684
  br i1 %cmp, label %return, label %if.end, !dbg !7686

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 26, !dbg !7687
  br i1 %cmp3, label %return, label %if.end5, !dbg !7689

if.end5:                                          ; preds = %if.end
  %cmp8 = icmp eq i32 %bf.clear, 27, !dbg !7690
  br i1 %cmp8, label %return, label %if.end10, !dbg !7692

if.end10:                                         ; preds = %if.end5
  %cmp13 = icmp eq i32 %bf.clear, 23, !dbg !7693
  br i1 %cmp13, label %if.then14, label %if.end26, !dbg !7695

if.then14:                                        ; preds = %if.end10
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7696
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7696
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7696
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7699
  %cmp15 = icmp eq %struct.rtx_def* %1, %2, !dbg !7700
  br i1 %cmp15, label %return, label %if.else, !dbg !7701

if.else:                                          ; preds = %if.then14
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7702
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !7702
  %5 = load i32*, i32** %4, align 8, !dbg !7702
  %bf.load21 = load i32, i32* %5, align 8, !dbg !7702
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !7702
  %cmp23 = icmp eq i32 %bf.clear22, 26, !dbg !7704
  %. = select i1 %cmp23, i32 10, i32 8, !dbg !7705
  br label %return, !dbg !7705

if.end26:                                         ; preds = %if.end10
  %cmp29 = icmp eq i32 %bf.clear, 15, !dbg !7706
  br i1 %cmp29, label %if.then30, label %if.end98, !dbg !7707

if.then30:                                        ; preds = %if.end26
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7708
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtvec_def**, !dbg !7708
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7708
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !7708
  %7 = load i32, i32* %num_elem, align 8, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %7, metadata !7680, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7710
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7711
  %9 = sext i32 %7 to i64, !dbg !7715
  br label %for.cond, !dbg !7715

for.cond:                                         ; preds = %for.inc, %if.then30
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %9, %if.then30 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7716
  call void @llvm.dbg.value(metadata i32 undef, metadata !7680, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7710
  %cmp34 = icmp sgt i64 %indvars.iv, 0, !dbg !7717
  br i1 %cmp34, label %for.body, label %cleanup, !dbg !7718

for.body:                                         ; preds = %for.cond
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7719
  %10 = bitcast %struct.rtx_def** %arrayidx39 to i32**, !dbg !7719
  %11 = load i32*, i32** %10, align 8, !dbg !7719
  %bf.load40 = load i32, i32* %11, align 8, !dbg !7719
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !7719
  %cmp42 = icmp eq i32 %bf.clear41, 26, !dbg !7720
  br i1 %cmp42, label %cleanup, label %if.else44, !dbg !7721

if.else44:                                        ; preds = %for.body
  %cmp54 = icmp eq i32 %bf.clear41, 23, !dbg !7722
  br i1 %cmp54, label %land.lhs.true, label %if.else68, !dbg !7723

land.lhs.true:                                    ; preds = %if.else44
  %arrayidx64 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !7724
  %rt_rtx65 = bitcast i32* %arrayidx64 to %struct.rtx_def**, !dbg !7724
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !7724
  %cmp66 = icmp eq %struct.rtx_def* %12, %8, !dbg !7725
  br i1 %cmp66, label %cleanup, label %if.else68, !dbg !7726

if.else68:                                        ; preds = %land.lhs.true, %if.else44
  %arrayidx75 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7727
  %13 = bitcast %struct.rtx_def** %arrayidx75 to i32**, !dbg !7727
  %14 = load i32*, i32** %13, align 8, !dbg !7727
  %bf.load76 = load i32, i32* %14, align 8, !dbg !7727
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !7727
  %cmp78 = icmp eq i32 %bf.clear77, 23, !dbg !7729
  br i1 %cmp78, label %land.lhs.true79, label %for.inc, !dbg !7730

land.lhs.true79:                                  ; preds = %if.else68
  %arrayidx86 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7731
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx86, align 8, !dbg !7731
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7731
  %17 = bitcast %union.rtunion_def* %16 to i32**, !dbg !7731
  %18 = load i32*, i32** %17, align 8, !dbg !7731
  %bf.load91 = load i32, i32* %18, align 8, !dbg !7731
  %bf.clear92 = and i32 %bf.load91, 65535, !dbg !7731
  %cmp93 = icmp eq i32 %bf.clear92, 26, !dbg !7732
  br i1 %cmp93, label %cleanup, label %for.inc, !dbg !7733

for.inc:                                          ; preds = %if.else68, %land.lhs.true79
  call void @llvm.dbg.value(metadata i32 undef, metadata !7680, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7710
  br label %for.cond, !dbg !7734, !llvm.loop !7735

cleanup:                                          ; preds = %for.cond, %land.lhs.true79, %land.lhs.true, %for.body
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body ], [ false, %land.lhs.true ], [ false, %land.lhs.true79 ], [ true, %for.cond ]
  %retval.0 = phi i32 [ 10, %for.body ], [ 9, %land.lhs.true ], [ 10, %land.lhs.true79 ], [ undef, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %if.end98, label %return

if.end98:                                         ; preds = %cleanup, %if.end26
  br label %return, !dbg !7737

return:                                           ; preds = %cleanup, %if.else, %if.then14, %if.end5, %if.end, %entry, %if.end98
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ 8, %if.end98 ], [ 12, %entry ], [ 10, %if.end ], [ 9, %if.end5 ], [ 9, %if.then14 ], [ %., %if.else ], !dbg !7683
  ret i32 %retval.1, !dbg !7738
}

declare dso_local i32 @any_uncondjump_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @push_to_sequence(%struct.rtx_def* %first) local_unnamed_addr #5 !dbg !7739 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !7741, metadata !DIExpression()), !dbg !7743
  tail call void @start_sequence() #8, !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %for.cond, !dbg !7745

for.cond:                                         ; preds = %for.inc, %entry
  %last.0 = phi %struct.rtx_def* [ %first, %entry ], [ %1, %for.inc ], !dbg !7747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !7742, metadata !DIExpression()), !dbg !7743
  %tobool = icmp eq %struct.rtx_def* %last.0, null, !dbg !7748
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !7750

land.rhs:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7751
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7751
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7751
  %tobool1 = icmp eq %struct.rtx_def* %1, null, !dbg !7750
  br i1 %tobool1, label %for.end, label %for.inc, !dbg !7752

for.inc:                                          ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %for.cond, !dbg !7753, !llvm.loop !7754

for.end:                                          ; preds = %land.rhs, %for.cond
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %land.rhs ], [ %last.0, %for.cond ], !dbg !7747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !7742, metadata !DIExpression()), !dbg !7743
  store %struct.rtx_def* %first, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !7756
  store %struct.rtx_def* %last.0.lcssa, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7757
  ret void, !dbg !7758
}

; Function Attrs: nounwind uwtable
define dso_local void @push_to_sequence2(%struct.rtx_def* %first, %struct.rtx_def* %last) local_unnamed_addr #5 !dbg !7759 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call void @start_sequence() #8, !dbg !7764
  store %struct.rtx_def* %first, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !7765
  store %struct.rtx_def* %last, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: nounwind uwtable
define dso_local void @push_topmost_sequence() local_unnamed_addr #5 !dbg !7768 {
entry:
  call void @llvm.dbg.value(metadata %struct.sequence_stack* null, metadata !7771, metadata !DIExpression()), !dbg !7772
  tail call void @start_sequence() #8, !dbg !7773
  br label %for.cond, !dbg !7774

for.cond:                                         ; preds = %for.inc, %entry
  %top.0 = phi %struct.sequence_stack* [ null, %entry ], [ %stack.0, %for.inc ], !dbg !7772
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %entry ], [ %next, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !7776
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !7770, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0, metadata !7771, metadata !DIExpression()), !dbg !7772
  %tobool = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !7777
  br i1 %tobool, label %for.end, label %for.inc, !dbg !7777

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !7771, metadata !DIExpression()), !dbg !7772
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !7778
  br label %for.cond, !dbg !7780, !llvm.loop !7781

for.end:                                          ; preds = %for.cond
  %top.0.lcssa = phi %struct.sequence_stack* [ %top.0, %for.cond ], !dbg !7772
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7771, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7771, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7771, metadata !DIExpression()), !dbg !7772
  %0 = bitcast %struct.sequence_stack* %top.0.lcssa to i64*, !dbg !7783
  %1 = load i64, i64* %0, align 8, !dbg !7783
  store i64 %1, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2) to i64*), align 8, !dbg !7784
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %top.0.lcssa, i64 0, i32 1, !dbg !7785
  %2 = bitcast %struct.rtx_def** %last to i64*, !dbg !7785
  %3 = load i64, i64* %2, align 8, !dbg !7785
  store i64 %3, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !7786
  ret void, !dbg !7787
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_topmost_sequence() local_unnamed_addr #5 !dbg !7788 {
entry:
  call void @llvm.dbg.value(metadata %struct.sequence_stack* null, metadata !7791, metadata !DIExpression()), !dbg !7792
  br label %for.cond, !dbg !7793

for.cond:                                         ; preds = %for.inc, %entry
  %top.0 = phi %struct.sequence_stack* [ null, %entry ], [ %stack.0, %for.inc ], !dbg !7792
  %stack.0.in = phi %struct.sequence_stack** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), %entry ], [ %next, %for.inc ]
  %stack.0 = load %struct.sequence_stack*, %struct.sequence_stack** %stack.0.in, align 8, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !7790, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0, metadata !7791, metadata !DIExpression()), !dbg !7792
  %tobool = icmp eq %struct.sequence_stack* %stack.0, null, !dbg !7796
  br i1 %tobool, label %for.end, label %for.inc, !dbg !7796

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %stack.0, metadata !7791, metadata !DIExpression()), !dbg !7792
  %next = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %stack.0, i64 0, i32 2, !dbg !7797
  br label %for.cond, !dbg !7799, !llvm.loop !7800

for.end:                                          ; preds = %for.cond
  %top.0.lcssa = phi %struct.sequence_stack* [ %top.0, %for.cond ], !dbg !7792
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata %struct.sequence_stack* %top.0.lcssa, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2) to i64*), align 8, !dbg !7802
  %1 = bitcast %struct.sequence_stack* %top.0.lcssa to i64*, !dbg !7803
  store i64 %0, i64* %1, align 8, !dbg !7803
  %2 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3) to i64*), align 8, !dbg !7804
  %last = getelementptr inbounds %struct.sequence_stack, %struct.sequence_stack* %top.0.lcssa, i64 0, i32 1, !dbg !7805
  %3 = bitcast %struct.rtx_def** %last to i64*, !dbg !7806
  store i64 %2, i64* %3, align 8, !dbg !7806
  tail call void @end_sequence() #8, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: nounwind uwtable
define dso_local i32 @in_sequence_p() local_unnamed_addr #5 !dbg !7809 {
entry:
  %0 = load %struct.sequence_stack*, %struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), align 8, !dbg !7810
  %cmp = icmp ne %struct.sequence_stack* %0, null, !dbg !7811
  %conv = zext i1 %cmp to i32, !dbg !7811
  ret i32 %conv, !dbg !7812
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %orig) local_unnamed_addr #5 !dbg !7813 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !7815, metadata !DIExpression()), !dbg !7821
  %cmp = icmp eq %struct.rtx_def* %orig, null, !dbg !7822
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7824

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 0, !dbg !7825
  %bf.load = load i32, i32* %0, align 8, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !7819, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !7821
  %trunc = trunc i32 %bf.load to i16, !dbg !7826
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup
    i16 30, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 45, label %cleanup
    i16 12, label %cleanup
    i16 36, label %cleanup
    i16 46, label %cleanup
    i16 25, label %sw.bb1
    i16 38, label %for.cond.preheader
    i16 35, label %sw.bb20
  ], !dbg !7826

for.cond.preheader:                               ; preds = %if.end
  %1 = load i32, i32* @copy_insn_n_scratches, align 4, !dbg !7827
  %2 = sext i32 %1 to i64, !dbg !7831
  br label %for.cond, !dbg !7831

sw.bb1:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7832
  %3 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !7832
  %4 = load i32*, i32** %3, align 8, !dbg !7832
  %bf.load2 = load i32, i32* %4, align 8, !dbg !7832
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !7832
  %cmp4 = icmp eq i32 %bf.clear3, 37, !dbg !7832
  br i1 %cmp4, label %land.lhs.true, label %sw.epilog, !dbg !7834

land.lhs.true:                                    ; preds = %sw.bb1
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !7834
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #8, !dbg !7835
  %cmp9 = icmp ult i32 %call, 53, !dbg !7836
  br i1 %cmp9, label %cleanup, label %sw.epilog, !dbg !7837

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv7 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next8, %for.inc ], !dbg !7838
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !7817, metadata !DIExpression()), !dbg !7821
  %cmp13 = icmp slt i64 %indvars.iv7, %2, !dbg !7839
  br i1 %cmp13, label %for.body, label %sw.epilog.loopexit, !dbg !7831

for.body:                                         ; preds = %for.cond
  %arrayidx14 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @copy_insn_scratch_in, i64 0, i64 %indvars.iv7, !dbg !7840
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8, !dbg !7840
  %cmp15 = icmp eq %struct.rtx_def* %6, %orig, !dbg !7842
  br i1 %cmp15, label %if.then16, label %for.inc, !dbg !7843

if.then16:                                        ; preds = %for.body
  %indvars.iv7.lcssa9 = phi i64 [ %indvars.iv7, %for.body ], !dbg !7838
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa9, metadata !7817, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa9, metadata !7817, metadata !DIExpression()), !dbg !7821
  %arrayidx18 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @copy_insn_scratch_out, i64 0, i64 %indvars.iv7.lcssa9, !dbg !7844
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !7844
  br label %cleanup, !dbg !7845

for.inc:                                          ; preds = %for.body
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !7846
  call void @llvm.dbg.value(metadata i32 undef, metadata !7817, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7821
  br label %for.cond, !dbg !7847, !llvm.loop !7848

sw.bb20:                                          ; preds = %if.end
  %call21 = tail call zeroext i8 @shared_const_p(%struct.rtx_def* nonnull %orig) #7, !dbg !7850
  %tobool = icmp eq i8 %call21, 0, !dbg !7850
  br i1 %tobool, label %sw.epilog, label %cleanup, !dbg !7852

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !7853

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb20, %if.end, %sw.bb1, %land.lhs.true
  %call24 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* nonnull %orig) #7, !dbg !7853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !7816, metadata !DIExpression()), !dbg !7821
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 0, !dbg !7854
  %bf.load25 = load i32, i32* %8, align 8, !dbg !7855
  %bf.clear26 = and i32 %bf.load25, -536870913, !dbg !7855
  store i32 %bf.clear26, i32* %8, align 8, !dbg !7855
  %bf.load27 = load i32, i32* %0, align 8, !dbg !7856
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7856
  %cmp29 = icmp eq i32 %bf.clear28, 8, !dbg !7856
  br i1 %cmp29, label %if.then41, label %lor.lhs.false, !dbg !7856

lor.lhs.false:                                    ; preds = %sw.epilog
  %cmp32 = icmp eq i32 %bf.clear28, 7, !dbg !7856
  br i1 %cmp32, label %if.then41, label %lor.lhs.false33, !dbg !7856

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %cmp36 = icmp eq i32 %bf.clear28, 9, !dbg !7856
  br i1 %cmp36, label %if.then41, label %lor.lhs.false37, !dbg !7856

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %cmp40 = icmp eq i32 %bf.clear28, 10, !dbg !7856
  br i1 %cmp40, label %if.then41, label %if.end48, !dbg !7858

if.then41:                                        ; preds = %lor.lhs.false37, %lor.lhs.false33, %lor.lhs.false, %sw.epilog
  %bf.clear47 = and i32 %bf.load25, -1660944385, !dbg !7859
  store i32 %bf.clear47, i32* %8, align 8, !dbg !7859
  br label %if.end48, !dbg !7861

if.end48:                                         ; preds = %if.then41, %lor.lhs.false37
  %bf.load49 = phi i32 [ %bf.clear47, %if.then41 ], [ %bf.clear26, %lor.lhs.false37 ], !dbg !7862
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !7862
  %idxprom51 = zext i32 %bf.clear50 to i64, !dbg !7862
  %arrayidx52 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom51, !dbg !7862
  %9 = load i8*, i8** %arrayidx52, align 8, !dbg !7862
  call void @llvm.dbg.value(metadata i8* %9, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i32 0, metadata !7817, metadata !DIExpression()), !dbg !7821
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, !dbg !7863
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !7863
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 1, !dbg !7868
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !7868
  br label %for.cond53, !dbg !7872

for.cond53:                                       ; preds = %for.inc164, %if.end48
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc164 ], [ 0, %if.end48 ], !dbg !7873
  %bf.load54 = phi i32 [ %bf.load54.pre, %for.inc164 ], [ %bf.load49, %if.end48 ], !dbg !7873
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc164 ], [ %9, %if.end48 ], !dbg !7821
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !7817, metadata !DIExpression()), !dbg !7821
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !7873
  %idxprom56 = zext i32 %bf.clear55 to i64, !dbg !7873
  %arrayidx57 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom56, !dbg !7873
  %10 = load i8, i8* %arrayidx57, align 1, !dbg !7873
  %11 = zext i8 %10 to i64, !dbg !7874
  %cmp58 = icmp ult i64 %indvars.iv5, %11, !dbg !7874
  br i1 %cmp58, label %for.body60, label %for.end166, !dbg !7875

for.body60:                                       ; preds = %for.cond53
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !7876
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !7820, metadata !DIExpression()), !dbg !7821
  %12 = load i8, i8* %format_ptr.0, align 1, !dbg !7877
  %conv61 = sext i8 %12 to i32, !dbg !7877
  switch i32 %conv61, label %sw.default162 [
    i32 101, label %sw.bb62
    i32 69, label %sw.bb83
    i32 86, label %sw.bb83
    i32 116, label %for.inc164
    i32 119, label %for.inc164
    i32 105, label %for.inc164
    i32 115, label %for.inc164
    i32 83, label %for.inc164
    i32 117, label %for.inc164
    i32 48, label %for.inc164
  ], !dbg !7878

sw.bb62:                                          ; preds = %for.body60
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 %indvars.iv5, !dbg !7879
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !7879
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !7879
  %cmp68 = icmp eq %struct.rtx_def* %13, null, !dbg !7881
  br i1 %cmp68, label %for.inc164, label %if.then70, !dbg !7882

if.then70:                                        ; preds = %sw.bb62
  %call76 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* nonnull %13) #8, !dbg !7883
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 %indvars.iv5, !dbg !7884
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !7884
  store %struct.rtx_def* %call76, %struct.rtx_def** %rt_rtx81, align 8, !dbg !7885
  br label %for.inc164, !dbg !7884

sw.bb83:                                          ; preds = %for.body60, %for.body60
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 %indvars.iv5, !dbg !7886
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtvec_def**, !dbg !7886
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7886
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** @orig_asm_constraints_vector, align 8, !dbg !7887
  %cmp88 = icmp eq %struct.rtvec_def* %14, %15, !dbg !7888
  br i1 %cmp88, label %if.then90, label %if.else, !dbg !7889

if.then90:                                        ; preds = %sw.bb83
  %16 = load i64, i64* bitcast (%struct.rtvec_def** @copy_asm_constraints_vector to i64*), align 8, !dbg !7890
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 %indvars.iv5, !dbg !7891
  %17 = bitcast %union.rtunion_def* %arrayidx94 to i64*, !dbg !7892
  store i64 %16, i64* %17, align 8, !dbg !7892
  br label %for.inc164, !dbg !7891

if.else:                                          ; preds = %sw.bb83
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** @orig_asm_operands_vector, align 8, !dbg !7893
  %cmp101 = icmp eq %struct.rtvec_def* %14, %18, !dbg !7894
  br i1 %cmp101, label %if.then103, label %if.else109, !dbg !7895

if.then103:                                       ; preds = %if.else
  %19 = load i64, i64* bitcast (%struct.rtvec_def** @copy_asm_operands_vector to i64*), align 8, !dbg !7896
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 %indvars.iv5, !dbg !7897
  %20 = bitcast %union.rtunion_def* %arrayidx107 to i64*, !dbg !7898
  store i64 %19, i64* %20, align 8, !dbg !7898
  br label %for.inc164, !dbg !7897

if.else109:                                       ; preds = %if.else
  %cmp115 = icmp eq %struct.rtvec_def* %14, null, !dbg !7899
  br i1 %cmp115, label %for.inc164, label %if.then117, !dbg !7900

if.then117:                                       ; preds = %if.else109
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 0, !dbg !7901
  %21 = load i32, i32* %num_elem, align 8, !dbg !7901
  %call123 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %21) #7, !dbg !7902
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 %indvars.iv5, !dbg !7903
  %rt_rtvec128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtvec_def**, !dbg !7903
  store %struct.rtvec_def* %call123, %struct.rtvec_def** %rt_rtvec128, align 8, !dbg !7904
  call void @llvm.dbg.value(metadata i32 0, metadata !7818, metadata !DIExpression()), !dbg !7821
  br label %for.cond129, !dbg !7905

for.cond129:                                      ; preds = %for.body138, %if.then117
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body138 ], [ 0, %if.then117 ], !dbg !7907
  %22 = phi %struct.rtvec_def* [ %.pre, %for.body138 ], [ %call123, %if.then117 ], !dbg !7907
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7818, metadata !DIExpression()), !dbg !7821
  %num_elem135 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i64 0, i32 0, !dbg !7907
  %23 = load i32, i32* %num_elem135, align 8, !dbg !7907
  %24 = sext i32 %23 to i64, !dbg !7909
  %cmp136 = icmp slt i64 %indvars.iv, %24, !dbg !7909
  br i1 %cmp136, label %for.body138, label %for.inc164.loopexit, !dbg !7910

for.body138:                                      ; preds = %for.cond129
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7911
  %arrayidx145 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 1, i64 %indvars.iv, !dbg !7911
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx145, align 8, !dbg !7911
  %call146 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %26) #8, !dbg !7912
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec128, align 8, !dbg !7913
  %arrayidx154 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i64 0, i32 1, i64 %indvars.iv, !dbg !7913
  store %struct.rtx_def* %call146, %struct.rtx_def** %arrayidx154, align 8, !dbg !7914
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7915
  call void @llvm.dbg.value(metadata i32 undef, metadata !7818, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7821
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec128, align 8, !dbg !7907
  br label %for.cond129, !dbg !7916, !llvm.loop !7917

sw.default162:                                    ; preds = %for.body60
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7919
  br label %for.inc164, !dbg !7920

for.inc164.loopexit:                              ; preds = %for.cond129
  br label %for.inc164, !dbg !7921

for.inc164:                                       ; preds = %for.inc164.loopexit, %sw.bb62, %if.else109, %sw.default162, %if.then70, %if.then103, %if.then90, %for.body60, %for.body60, %for.body60, %for.body60, %for.body60, %for.body60, %for.body60
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !7921
  call void @llvm.dbg.value(metadata i32 undef, metadata !7817, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7821
  %bf.load54.pre = load i32, i32* %8, align 8, !dbg !7873
  br label %for.cond53, !dbg !7922, !llvm.loop !7923

for.end166:                                       ; preds = %for.cond53
  switch i16 %trunc, label %cleanup [
    i16 38, label %if.then169
    i16 17, label %if.then180
  ], !dbg !7925

if.then169:                                       ; preds = %for.end166
  %28 = load i32, i32* @copy_insn_n_scratches, align 4, !dbg !7926
  %inc170 = add nsw i32 %28, 1, !dbg !7926
  store i32 %inc170, i32* @copy_insn_n_scratches, align 4, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %28, metadata !7817, metadata !DIExpression()), !dbg !7821
  %cmp171 = icmp slt i32 %28, 30, !dbg !7929
  br i1 %cmp171, label %cond.end, label %cond.true, !dbg !7929

cond.true:                                        ; preds = %if.then169
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7929
  br label %cond.end, !dbg !7929

cond.end:                                         ; preds = %if.then169, %cond.true
  %idxprom173 = sext i32 %28 to i64, !dbg !7930
  %arrayidx174 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @copy_insn_scratch_in, i64 0, i64 %idxprom173, !dbg !7930
  store %struct.rtx_def* %orig, %struct.rtx_def** %arrayidx174, align 8, !dbg !7931
  %arrayidx176 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @copy_insn_scratch_out, i64 0, i64 %idxprom173, !dbg !7932
  store %struct.rtx_def* %call24, %struct.rtx_def** %arrayidx176, align 8, !dbg !7933
  br label %cleanup, !dbg !7934

if.then180:                                       ; preds = %for.end166
  %arrayidx183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 1, !dbg !7935
  %29 = bitcast %struct.object_block** %arrayidx183 to i64*, !dbg !7935
  %30 = load i64, i64* %29, align 8, !dbg !7935
  store i64 %30, i64* bitcast (%struct.rtvec_def** @orig_asm_operands_vector to i64*), align 8, !dbg !7938
  %arrayidx187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 1, i32 0, i32 1, !dbg !7939
  %31 = bitcast %struct.object_block** %arrayidx187 to i64*, !dbg !7939
  %32 = load i64, i64* %31, align 8, !dbg !7939
  store i64 %32, i64* bitcast (%struct.rtvec_def** @copy_asm_operands_vector to i64*), align 8, !dbg !7940
  %arrayidx191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 2, !dbg !7941
  %33 = load i64, i64* %arrayidx191, align 8, !dbg !7941
  store i64 %33, i64* bitcast (%struct.rtvec_def** @orig_asm_constraints_vector to i64*), align 8, !dbg !7942
  %arrayidx195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call24, i64 0, i32 1, i32 0, i32 2, !dbg !7943
  %34 = load i64, i64* %arrayidx195, align 8, !dbg !7943
  store i64 %34, i64* bitcast (%struct.rtvec_def** @copy_asm_constraints_vector to i64*), align 8, !dbg !7944
  br label %cleanup, !dbg !7945

cleanup:                                          ; preds = %sw.bb20, %cond.end, %for.end166, %if.then180, %land.lhs.true, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %entry, %if.then16
  %retval.0 = phi %struct.rtx_def* [ %7, %if.then16 ], [ null, %entry ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %land.lhs.true ], [ %orig, %sw.bb20 ], [ %call24, %if.then180 ], [ %call24, %for.end166 ], [ %call24, %cond.end ], !dbg !7821
  ret %struct.rtx_def* %retval.0, !dbg !7946
}

declare dso_local zeroext i8 @shared_const_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @copy_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7947 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7949, metadata !DIExpression()), !dbg !7950
  store i32 0, i32* @copy_insn_n_scratches, align 4, !dbg !7951
  store %struct.rtvec_def* null, %struct.rtvec_def** @orig_asm_operands_vector, align 8, !dbg !7952
  store %struct.rtvec_def* null, %struct.rtvec_def** @orig_asm_constraints_vector, align 8, !dbg !7953
  store %struct.rtvec_def* null, %struct.rtvec_def** @copy_asm_operands_vector, align 8, !dbg !7954
  store %struct.rtvec_def* null, %struct.rtvec_def** @copy_asm_constraints_vector, align 8, !dbg !7955
  %call = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %insn) #8, !dbg !7956
  ret %struct.rtx_def* %call, !dbg !7957
}

; Function Attrs: nounwind uwtable
define dso_local void @init_emit() local_unnamed_addr #5 !dbg !7958 {
entry:
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 2), align 8, !dbg !7959
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 3), align 8, !dbg !7960
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !7961
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 117, i32 1, !dbg !7961
  %1 = load i32, i32* %value, align 8, !dbg !7961
  %tobool = icmp eq i32 %1, 0, !dbg !7961
  br i1 %tobool, label %if.else, label %if.then, !dbg !7963

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !7964

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 1, %if.else ], [ %1, %if.then ], !dbg !7965
  store i32 %storemerge, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 5), align 8, !dbg !7965
  store i32 1, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 6), align 4, !dbg !7966
  store i32 58, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 0), align 8, !dbg !7967
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 7), align 8, !dbg !7968
  %2 = load i32, i32* @label_num, align 4, !dbg !7969
  store i32 %2, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 1), align 4, !dbg !7970
  store %struct.sequence_stack* null, %struct.sequence_stack** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 4), align 8, !dbg !7971
  store i32 158, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 8), align 4, !dbg !7972
  %call = tail call i8* @xcalloc(i64 158, i64 1) #7, !dbg !7973
  store i8* %call, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !7974
  %3 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 8), align 4, !dbg !7975
  %conv3 = sext i32 %3 to i64, !dbg !7975
  %mul = shl nsw i64 %conv3, 3, !dbg !7975
  %call4 = tail call i8* @ggc_alloc_stat(i64 %mul) #7, !dbg !7975
  store i8* %call4, i8** bitcast (%struct.rtx_def*** @regno_reg_rtx to i8**), align 8, !dbg !7976
  %call5 = tail call i8* @memcpy(i8* %call4, i8* bitcast ([53 x %struct.rtx_def*]* @static_regno_reg_rtx to i8*), i64 424) #7, !dbg !7977
  tail call fastcc void @init_virtual_regs() #8, !dbg !7978
  %4 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2) to i32**), align 16, !dbg !7979
  %bf.load = load i32, i32* %4, align 8, !dbg !7980
  %bf.set = or i32 %bf.load, 1073741824, !dbg !7980
  store i32 %bf.set, i32* %4, align 8, !dbg !7980
  %5 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3) to i32**), align 8, !dbg !7981
  %bf.load6 = load i32, i32* %5, align 8, !dbg !7982
  %bf.set8 = or i32 %bf.load6, 1073741824, !dbg !7982
  store i32 %bf.set8, i32* %5, align 8, !dbg !7982
  %6 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4) to i32**), align 16, !dbg !7983
  %bf.load9 = load i32, i32* %6, align 8, !dbg !7984
  %bf.set11 = or i32 %bf.load9, 1073741824, !dbg !7984
  store i32 %bf.set11, i32* %6, align 8, !dbg !7984
  %7 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5) to i32**), align 8, !dbg !7985
  %bf.load12 = load i32, i32* %7, align 8, !dbg !7986
  %bf.set14 = or i32 %bf.load12, 1073741824, !dbg !7986
  store i32 %bf.set14, i32* %7, align 8, !dbg !7986
  %8 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6) to i32**), align 16, !dbg !7987
  %bf.load15 = load i32, i32* %8, align 8, !dbg !7988
  %bf.set17 = or i32 %bf.load15, 1073741824, !dbg !7988
  store i32 %bf.set17, i32* %8, align 8, !dbg !7988
  %9 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7) to i32**), align 8, !dbg !7989
  %bf.load18 = load i32, i32* %9, align 8, !dbg !7990
  %bf.set20 = or i32 %bf.load18, 1073741824, !dbg !7990
  store i32 %bf.set20, i32* %9, align 8, !dbg !7990
  %10 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8) to i32**), align 16, !dbg !7991
  %bf.load21 = load i32, i32* %10, align 8, !dbg !7992
  %bf.set23 = or i32 %bf.load21, 1073741824, !dbg !7992
  store i32 %bf.set23, i32* %10, align 8, !dbg !7992
  %11 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9) to i32**), align 8, !dbg !7993
  %bf.load24 = load i32, i32* %11, align 8, !dbg !7994
  %bf.set26 = or i32 %bf.load24, 1073741824, !dbg !7994
  store i32 %bf.set26, i32* %11, align 8, !dbg !7994
  %12 = load i32*, i32** bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10) to i32**), align 16, !dbg !7995
  %bf.load27 = load i32, i32* %12, align 8, !dbg !7996
  %bf.set29 = or i32 %bf.load27, 1073741824, !dbg !7996
  store i32 %bf.set29, i32* %12, align 8, !dbg !7996
  %13 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !7997
  %arrayidx30 = getelementptr inbounds i8, i8* %13, i64 7, !dbg !7997
  store i8 32, i8* %arrayidx30, align 1, !dbg !7998
  %14 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !7999
  %arrayidx31 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !7999
  store i8 32, i8* %arrayidx31, align 1, !dbg !8000
  %15 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8001
  %arrayidx32 = getelementptr inbounds i8, i8* %15, i64 6, !dbg !8001
  store i8 32, i8* %arrayidx32, align 1, !dbg !8002
  %16 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8003
  %arrayidx33 = getelementptr inbounds i8, i8* %16, i64 16, !dbg !8003
  store i8 32, i8* %arrayidx33, align 1, !dbg !8004
  %17 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8005
  %arrayidx34 = getelementptr inbounds i8, i8* %17, i64 53, !dbg !8005
  store i8 32, i8* %arrayidx34, align 1, !dbg !8006
  %18 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8007
  %arrayidx35 = getelementptr inbounds i8, i8* %18, i64 54, !dbg !8007
  store i8 32, i8* %arrayidx35, align 1, !dbg !8008
  %19 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8009
  %arrayidx36 = getelementptr inbounds i8, i8* %19, i64 55, !dbg !8009
  store i8 32, i8* %arrayidx36, align 1, !dbg !8010
  %20 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8011
  %arrayidx37 = getelementptr inbounds i8, i8* %20, i64 56, !dbg !8011
  store i8 32, i8* %arrayidx37, align 1, !dbg !8012
  %21 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !8013
  %arrayidx38 = getelementptr inbounds i8, i8* %21, i64 57, !dbg !8013
  store i8 32, i8* %arrayidx38, align 1, !dbg !8014
  ret void, !dbg !8015
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_virtual_regs() unnamed_addr #5 !dbg !8016 {
entry:
  %0 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6) to i64*), align 16, !dbg !8017
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !8018
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 53, !dbg !8018
  %2 = bitcast %struct.rtx_def** %arrayidx to i64*, !dbg !8019
  store i64 %0, i64* %2, align 8, !dbg !8019
  %3 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7) to i64*), align 8, !dbg !8020
  %arrayidx1 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 54, !dbg !8021
  %4 = bitcast %struct.rtx_def** %arrayidx1 to i64*, !dbg !8022
  store i64 %3, i64* %4, align 8, !dbg !8022
  %5 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8) to i64*), align 16, !dbg !8023
  %arrayidx2 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 55, !dbg !8024
  %6 = bitcast %struct.rtx_def** %arrayidx2 to i64*, !dbg !8025
  store i64 %5, i64* %6, align 8, !dbg !8025
  %7 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9) to i64*), align 8, !dbg !8026
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 56, !dbg !8027
  %8 = bitcast %struct.rtx_def** %arrayidx3 to i64*, !dbg !8028
  store i64 %7, i64* %8, align 8, !dbg !8028
  %9 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10) to i64*), align 16, !dbg !8029
  %arrayidx4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 57, !dbg !8030
  %10 = bitcast %struct.rtx_def** %arrayidx4 to i64*, !dbg !8031
  store i64 %9, i64* %10, align 8, !dbg !8031
  ret void, !dbg !8032
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %mode, %struct.rtvec_def* %v) local_unnamed_addr #5 !dbg !8033 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8037, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %v, metadata !8038, metadata !DIExpression()), !dbg !8043
  %idxprom = zext i32 %mode to i64, !dbg !8044
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !8044
  %0 = load i8, i8* %arrayidx, align 1, !dbg !8044
  call void @llvm.dbg.value(metadata i8 %0, metadata !8039, metadata !DIExpression()), !dbg !8043
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom, !dbg !8045
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !8045
  %conv3 = zext i8 %1 to i64, !dbg !8045
  call void @llvm.dbg.value(metadata i8 %1, metadata !8040, metadata !DIExpression()), !dbg !8043
  %sub = add nsw i64 %conv3, -1, !dbg !8046
  %arrayidx5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %v, i64 0, i32 1, i64 %sub, !dbg !8046
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !8046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8 %1, metadata !8042, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !8043
  %3 = add nsw i64 %conv3, -2, !dbg !8047
  br label %for.cond, !dbg !8047

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %entry ], !dbg !8049
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8042, metadata !DIExpression()), !dbg !8043
  %cmp = icmp sgt i64 %indvars.iv, -1, !dbg !8050
  %4 = trunc i64 %indvars.iv to i32, !dbg !8052
  br i1 %cmp, label %for.body, label %for.end, !dbg !8052

for.body:                                         ; preds = %for.cond
  %arrayidx10 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %v, i64 0, i32 1, i64 %indvars.iv, !dbg !8053
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !8053
  %cmp11 = icmp eq %struct.rtx_def* %5, %2, !dbg !8055
  br i1 %cmp11, label %for.inc, label %for.end, !dbg !8056

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !8057
  call void @llvm.dbg.value(metadata i32 undef, metadata !8042, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8043
  br label %for.cond, !dbg !8058, !llvm.loop !8059

for.end:                                          ; preds = %for.body, %for.cond
  %.lcssa = phi i32 [ %4, %for.body ], [ %4, %for.cond ], !dbg !8052
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !8042, metadata !DIExpression()), !dbg !8043
  %cmp13 = icmp eq i32 %.lcssa, -1, !dbg !8061
  br i1 %cmp13, label %if.then15, label %if.end32, !dbg !8063

if.then15:                                        ; preds = %for.end
  %idxprom16 = zext i8 %0 to i64, !dbg !8064
  %arrayidx17 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom16, !dbg !8064
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8, !dbg !8064
  %cmp18 = icmp eq %struct.rtx_def* %2, %6, !dbg !8067
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !8068

if.then20:                                        ; preds = %if.then15
  %idxprom21 = sext i32 %mode to i64, !dbg !8069
  %arrayidx22 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom21, !dbg !8069
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8, !dbg !8069
  br label %cleanup, !dbg !8070

if.else:                                          ; preds = %if.then15
  %arrayidx24 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom16, !dbg !8071
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !8071
  %cmp25 = icmp eq %struct.rtx_def* %2, %8, !dbg !8073
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !8074

if.then27:                                        ; preds = %if.else
  %idxprom28 = sext i32 %mode to i64, !dbg !8075
  %arrayidx29 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom28, !dbg !8075
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8, !dbg !8075
  br label %cleanup, !dbg !8076

if.end32:                                         ; preds = %if.else, %for.end
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 33, i32 %mode, %struct.rtvec_def* %v) #7, !dbg !8077
  br label %cleanup, !dbg !8078

cleanup:                                          ; preds = %if.end32, %if.then27, %if.then20
  %retval.0 = phi %struct.rtx_def* [ %7, %if.then20 ], [ %9, %if.then27 ], [ %call, %if.end32 ], !dbg !8043
  ret %struct.rtx_def* %retval.0, !dbg !8079
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_emit_regs() local_unnamed_addr #5 !dbg !8080 {
entry:
  %0 = load %struct.htab*, %struct.htab** @reg_attrs_htab, align 8, !dbg !8083
  tail call void @htab_empty(%struct.htab* %0) #7, !dbg !8084
  tail call void @init_reg_modes_target() #7, !dbg !8085
  %call = tail call %struct.rtx_def* @gen_rtx_fmt__stat(i32 36, i32 0) #7, !dbg !8086
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !8087
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt__stat(i32 46, i32 0) #7, !dbg !8088
  store %struct.rtx_def* %call1, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 1), align 8, !dbg !8089
  %call2 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 7) #8, !dbg !8090
  store %struct.rtx_def* %call2, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8091
  %call3 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 20) #8, !dbg !8092
  store %struct.rtx_def* %call3, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !8093
  %call4 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 6) #8, !dbg !8094
  store %struct.rtx_def* %call4, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !8095
  %call5 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 16) #8, !dbg !8096
  store %struct.rtx_def* %call5, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !8097
  %call6 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 53) #8, !dbg !8098
  store %struct.rtx_def* %call6, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 16, !dbg !8099
  %call7 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 54) #8, !dbg !8100
  store %struct.rtx_def* %call7, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !8101
  %call8 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 55) #8, !dbg !8102
  store %struct.rtx_def* %call8, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 16, !dbg !8103
  %call9 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 56) #8, !dbg !8104
  store %struct.rtx_def* %call9, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !8105
  %call10 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 57) #8, !dbg !8106
  store %struct.rtx_def* %call10, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 10), align 16, !dbg !8107
  call void @llvm.dbg.value(metadata i32 0, metadata !8082, metadata !DIExpression()), !dbg !8108
  br label %for.cond, !dbg !8109

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !8111
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8082, metadata !DIExpression()), !dbg !8108
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !8112
  br i1 %exitcond, label %for.end, label %for.body, !dbg !8114

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv, !dbg !8115
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8115
  %2 = trunc i64 %indvars.iv to i32, !dbg !8116
  %call11 = tail call %struct.rtx_def* @gen_raw_REG(i32 %1, i32 %2) #8, !dbg !8116
  %arrayidx13 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_regno_reg_rtx, i64 0, i64 %indvars.iv, !dbg !8117
  store %struct.rtx_def* %call11, %struct.rtx_def** %arrayidx13, align 8, !dbg !8118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8119
  call void @llvm.dbg.value(metadata i32 undef, metadata !8082, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8108
  br label %for.cond, !dbg !8120, !llvm.loop !8121

for.end:                                          ; preds = %for.cond
  %3 = load i32, i32* @flag_pic, align 4, !dbg !8123
  %tobool = icmp eq i32 %3, 0, !dbg !8123
  br i1 %tobool, label %cond.end18, label %cond.false, !dbg !8123

cond.false:                                       ; preds = %for.end
  %4 = load i32, i32* @reload_completed, align 4, !dbg !8123
  %tobool14 = icmp eq i32 %4, 0, !dbg !8123
  br i1 %tobool14, label %cond.end18, label %cond.true15, !dbg !8123

cond.true15:                                      ; preds = %cond.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !8123
  %call16 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #8, !dbg !8123
  %phitmp = icmp ne i32 %call16, -1, !dbg !8123
  br label %cond.end18, !dbg !8123

cond.end18:                                       ; preds = %cond.false, %for.end, %cond.true15
  %cond19 = phi i1 [ false, %for.end ], [ %phitmp, %cond.true15 ], [ true, %cond.false ]
  br i1 %cond19, label %if.then, label %if.else, !dbg !8125

if.then:                                          ; preds = %cond.end18
  %6 = load i32, i32* @flag_pic, align 4, !dbg !8126
  %tobool21 = icmp eq i32 %6, 0, !dbg !8126
  br i1 %tobool21, label %cond.end30, label %cond.false23, !dbg !8126

cond.false23:                                     ; preds = %if.then
  %7 = load i32, i32* @reload_completed, align 4, !dbg !8126
  %tobool24 = icmp eq i32 %7, 0, !dbg !8126
  br i1 %tobool24, label %cond.end30, label %cond.true25, !dbg !8126

cond.true25:                                      ; preds = %cond.false23
  %8 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !8126
  %call26 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #8, !dbg !8126
  br label %cond.end30, !dbg !8126

cond.end30:                                       ; preds = %cond.false23, %if.then, %cond.true25
  %cond31 = phi i32 [ -1, %if.then ], [ %call26, %cond.true25 ], [ 3, %cond.false23 ], !dbg !8126
  %call32 = tail call %struct.rtx_def* @gen_raw_REG(i32 16, i32 %cond31) #8, !dbg !8127
  br label %if.end, !dbg !8128

if.else:                                          ; preds = %cond.end18
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end30
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %call32, %cond.end30 ], !dbg !8129
  store %struct.rtx_def* %storemerge, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !8129
  ret void, !dbg !8130
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

declare dso_local void @init_reg_modes_target() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt__stat(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_emit_once() local_unnamed_addr #5 !dbg !8131 {
entry:
  %call = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @const_int_htab_hash, i32 (i8*, i8*)* nonnull @const_int_htab_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !8149
  store %struct.htab* %call, %struct.htab** @const_int_htab, align 8, !dbg !8150
  %call1 = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @const_double_htab_hash, i32 (i8*, i8*)* nonnull @const_double_htab_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !8151
  store %struct.htab* %call1, %struct.htab** @const_double_htab, align 8, !dbg !8152
  %call2 = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @const_fixed_htab_hash, i32 (i8*, i8*)* nonnull @const_fixed_htab_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !8153
  store %struct.htab* %call2, %struct.htab** @const_fixed_htab, align 8, !dbg !8154
  %call3 = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @mem_attrs_htab_hash, i32 (i8*, i8*)* nonnull @mem_attrs_htab_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !8155
  store %struct.htab* %call3, %struct.htab** @mem_attrs_htab, align 8, !dbg !8156
  %call4 = tail call %struct.htab* @htab_create_alloc(i64 37, i32 (i8*)* nonnull @reg_attrs_htab_hash, i32 (i8*, i8*)* nonnull @reg_attrs_htab_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !8157
  store %struct.htab* %call4, %struct.htab** @reg_attrs_htab, align 8, !dbg !8158
  store i32 0, i32* @byte_mode, align 4, !dbg !8159
  store i32 0, i32* @word_mode, align 4, !dbg !8160
  call void @llvm.dbg.value(metadata i32 0, metadata !8135, metadata !DIExpression()), !dbg !8161
  br label %for.cond, !dbg !8162

for.cond:                                         ; preds = %for.inc, %entry
  %0 = phi i32 [ 0, %entry ], [ %4, %for.inc ]
  %1 = phi i32 [ 0, %entry ], [ %3, %for.inc ]
  %mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %entry ], [ %arrayidx29, %for.inc ]
  %mode.0.in = load i8, i8* %mode.0.in.in, align 1, !dbg !8164
  %mode.0 = zext i8 %mode.0.in to i32, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp = icmp eq i8 %mode.0.in, 0, !dbg !8165
  br i1 %cmp, label %for.end, label %for.body, !dbg !8167

for.body:                                         ; preds = %for.cond
  %idxprom = zext i8 %mode.0.in to i64, !dbg !8168
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8168
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8168
  %cmp10 = icmp eq i8 %2, 1, !dbg !8171
  %cmp12 = icmp eq i32 %1, 0, !dbg !8172
  %or.cond = and i1 %cmp10, %cmp12, !dbg !8173
  br i1 %or.cond, label %if.then, label %if.end, !dbg !8173

if.then:                                          ; preds = %for.body
  store i32 %mode.0, i32* @byte_mode, align 4, !dbg !8174
  br label %if.end, !dbg !8175

if.end:                                           ; preds = %if.then, %for.body
  %3 = phi i32 [ %mode.0, %if.then ], [ %1, %for.body ]
  %cmp21 = icmp eq i8 %2, 4, !dbg !8176
  %cmp24 = icmp eq i32 %0, 0, !dbg !8178
  %or.cond1 = and i1 %cmp21, %cmp24, !dbg !8179
  br i1 %or.cond1, label %if.then26, label %for.inc, !dbg !8179

if.then26:                                        ; preds = %if.end
  store i32 %mode.0, i32* @word_mode, align 4, !dbg !8180
  br label %for.inc, !dbg !8181

for.inc:                                          ; preds = %if.end, %if.then26
  %4 = phi i32 [ %0, %if.end ], [ %mode.0, %if.then26 ]
  %arrayidx29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !8182
  br label %for.cond, !dbg !8183, !llvm.loop !8184

for.end:                                          ; preds = %for.cond
  br label %for.cond32, !dbg !8186

for.cond32:                                       ; preds = %for.body35, %for.end
  %double_mode.0 = phi i32 [ 0, %for.end ], [ %double_mode.1, %for.body35 ], !dbg !8161
  %mode.1.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 8), %for.end ], [ %arrayidx52, %for.body35 ]
  %mode.1.in = load i8, i8* %mode.1.in.in, align 1, !dbg !8188
  call void @llvm.dbg.value(metadata i8 %mode.1.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %double_mode.0, metadata !8135, metadata !DIExpression()), !dbg !8161
  %cmp33 = icmp eq i8 %mode.1.in, 0, !dbg !8189
  br i1 %cmp33, label %for.end54, label %for.body35, !dbg !8191

for.body35:                                       ; preds = %for.cond32
  %mode.1 = zext i8 %mode.1.in to i32, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !8134, metadata !DIExpression()), !dbg !8161
  %idxprom36 = zext i8 %mode.1.in to i64, !dbg !8192
  %arrayidx37 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom36, !dbg !8192
  %5 = load i8, i8* %arrayidx37, align 1, !dbg !8192
  %cmp43 = icmp eq i8 %5, 8, !dbg !8195
  %cmp46 = icmp eq i32 %double_mode.0, 0, !dbg !8196
  %or.cond2 = and i1 %cmp43, %cmp46, !dbg !8197
  %double_mode.1 = select i1 %or.cond2, i32 %mode.1, i32 %double_mode.0, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %double_mode.1, metadata !8135, metadata !DIExpression()), !dbg !8161
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom36, !dbg !8198
  br label %for.cond32, !dbg !8199, !llvm.loop !8200

for.end54:                                        ; preds = %for.cond32
  %double_mode.0.lcssa = phi i32 [ %double_mode.0, %for.cond32 ], !dbg !8161
  call void @llvm.dbg.value(metadata i32 %double_mode.0.lcssa, metadata !8135, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %double_mode.0.lcssa, metadata !8135, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %double_mode.0.lcssa, metadata !8135, metadata !DIExpression()), !dbg !8161
  %6 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_class, i64 0, i64 16), align 16, !dbg !8202
  %conv55 = zext i8 %6 to i32, !dbg !8202
  %call56 = tail call i32 @mode_for_size(i32 32, i32 %conv55, i32 0) #7, !dbg !8203
  store i32 %call56, i32* @ptr_mode, align 4, !dbg !8204
  call void @llvm.dbg.value(metadata i32 -64, metadata !8133, metadata !DIExpression()), !dbg !8161
  br label %for.cond57, !dbg !8205

for.cond57:                                       ; preds = %for.body60, %for.end54
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.body60 ], [ -64, %for.end54 ], !dbg !8207
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !8133, metadata !DIExpression()), !dbg !8161
  %exitcond9 = icmp eq i64 %indvars.iv6, 65, !dbg !8208
  br i1 %exitcond9, label %for.end66, label %for.body60, !dbg !8210

for.body60:                                       ; preds = %for.cond57
  %call62 = tail call %struct.rtx_def* @gen_rtx_fmt_w_stat(i32 30, i32 0, i64 %indvars.iv6) #7, !dbg !8211
  %7 = add nsw i64 %indvars.iv6, 64, !dbg !8212
  %arrayidx64 = getelementptr inbounds [129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 %7, !dbg !8213
  store %struct.rtx_def* %call62, %struct.rtx_def** %arrayidx64, align 8, !dbg !8214
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1, !dbg !8215
  call void @llvm.dbg.value(metadata i32 undef, metadata !8133, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8161
  br label %for.cond57, !dbg !8216, !llvm.loop !8217

for.end66:                                        ; preds = %for.cond57
  %8 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !8219
  store i64 %8, i64* bitcast (%struct.rtx_def** @const_true_rtx to i64*), align 8, !dbg !8221
  tail call void @real_from_integer(%struct.real_value* nonnull @dconst0, i32 %double_mode.0.lcssa, i64 0, i64 0, i32 0) #7, !dbg !8222
  tail call void @real_from_integer(%struct.real_value* nonnull @dconst1, i32 %double_mode.0.lcssa, i64 1, i64 0, i32 0) #7, !dbg !8223
  tail call void @real_from_integer(%struct.real_value* nonnull @dconst2, i32 %double_mode.0.lcssa, i64 2, i64 0, i32 0) #7, !dbg !8224
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.real_value* @dconstm1 to i8*), i8* align 8 bitcast (%struct.real_value* @dconst1 to i8*), i64 32, i1 false), !dbg !8225
  %bf.load = load i32, i32* getelementptr inbounds (%struct.real_value, %struct.real_value* @dconstm1, i64 0, i32 0), align 8, !dbg !8226
  %bf.set = or i32 %bf.load, 8, !dbg !8226
  store i32 %bf.set, i32* getelementptr inbounds (%struct.real_value, %struct.real_value* @dconstm1, i64 0, i32 0), align 8, !dbg !8226
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.real_value* @dconsthalf to i8*), i8* align 8 bitcast (%struct.real_value* @dconst1 to i8*), i64 32, i1 false), !dbg !8227
  %bf.load67 = load i32, i32* getelementptr inbounds (%struct.real_value, %struct.real_value* @dconsthalf, i64 0, i32 0), align 8, !dbg !8228
  %9 = add i32 %bf.load67, -64, !dbg !8228
  store i32 %9, i32* getelementptr inbounds (%struct.real_value, %struct.real_value* @dconsthalf, i64 0, i32 0), align 8, !dbg !8228
  call void @llvm.dbg.value(metadata i32 0, metadata !8133, metadata !DIExpression()), !dbg !8161
  br label %for.cond72, !dbg !8229

for.cond72:                                       ; preds = %for.inc148, %for.end66
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc148 ], [ 0, %for.end66 ], !dbg !8230
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !8133, metadata !DIExpression()), !dbg !8161
  %exitcond5 = icmp eq i64 %indvars.iv3, 3, !dbg !8231
  br i1 %exitcond5, label %for.end150, label %for.body75, !dbg !8232

for.body75:                                       ; preds = %for.cond72
  %cmp76 = icmp eq i64 %indvars.iv3, 0, !dbg !8233
  br i1 %cmp76, label %cond.end, label %cond.false, !dbg !8234

cond.false:                                       ; preds = %for.body75
  %cmp78 = icmp eq i64 %indvars.iv3, 1, !dbg !8235
  %cond = select i1 %cmp78, %struct.real_value* @dconst1, %struct.real_value* @dconst2, !dbg !8236
  br label %cond.end, !dbg !8234

cond.end:                                         ; preds = %for.body75, %cond.false
  %cond80 = phi %struct.real_value* [ %cond, %cond.false ], [ @dconst0, %for.body75 ], !dbg !8234
  call void @llvm.dbg.value(metadata %struct.real_value* %cond80, metadata !8136, metadata !DIExpression()), !dbg !8237
  br label %for.cond82, !dbg !8238

for.cond82:                                       ; preds = %for.body85, %cond.end
  %mode.2.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 8), %cond.end ], [ %arrayidx93, %for.body85 ]
  %mode.2.in = load i8, i8* %mode.2.in.in, align 1, !dbg !8240
  call void @llvm.dbg.value(metadata i8 %mode.2.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp83 = icmp eq i8 %mode.2.in, 0, !dbg !8241
  br i1 %cmp83, label %for.end95, label %for.body85, !dbg !8243

for.body85:                                       ; preds = %for.cond82
  %mode.2 = zext i8 %mode.2.in to i32, !dbg !8240
  call void @llvm.dbg.value(metadata i32 %mode.2, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call86 = tail call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %cond80, i32 %mode.2) #8, !dbg !8244
  %idxprom89 = zext i8 %mode.2.in to i64, !dbg !8245
  %arrayidx90 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %indvars.iv3, i64 %idxprom89, !dbg !8245
  store %struct.rtx_def* %call86, %struct.rtx_def** %arrayidx90, align 8, !dbg !8246
  %arrayidx93 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom89, !dbg !8247
  br label %for.cond82, !dbg !8248, !llvm.loop !8249

for.end95:                                        ; preds = %for.cond82
  br label %for.cond97, !dbg !8251

for.cond97:                                       ; preds = %for.body100, %for.end95
  %mode.3.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 9), %for.end95 ], [ %arrayidx108, %for.body100 ]
  %mode.3.in = load i8, i8* %mode.3.in.in, align 1, !dbg !8253
  call void @llvm.dbg.value(metadata i8 %mode.3.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp98 = icmp eq i8 %mode.3.in, 0, !dbg !8254
  br i1 %cmp98, label %for.end110, label %for.body100, !dbg !8256

for.body100:                                      ; preds = %for.cond97
  %mode.3 = zext i8 %mode.3.in to i32, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %mode.3, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call101 = tail call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %cond80, i32 %mode.3) #8, !dbg !8257
  %idxprom104 = zext i8 %mode.3.in to i64, !dbg !8258
  %arrayidx105 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %indvars.iv3, i64 %idxprom104, !dbg !8258
  store %struct.rtx_def* %call101, %struct.rtx_def** %arrayidx105, align 8, !dbg !8259
  %arrayidx108 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom104, !dbg !8260
  br label %for.cond97, !dbg !8261, !llvm.loop !8262

for.end110:                                       ; preds = %for.cond97
  %call112 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %indvars.iv3) #8, !dbg !8264
  %arrayidx115 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %indvars.iv3, i64 0, !dbg !8265
  store %struct.rtx_def* %call112, %struct.rtx_def** %arrayidx115, align 8, !dbg !8266
  br label %for.cond117, !dbg !8267

for.cond117:                                      ; preds = %for.body120, %for.end110
  %mode.4.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %for.end110 ], [ %arrayidx129, %for.body120 ]
  %mode.4.in = load i8, i8* %mode.4.in.in, align 1, !dbg !8269
  call void @llvm.dbg.value(metadata i8 %mode.4.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp118 = icmp eq i8 %mode.4.in, 0, !dbg !8270
  br i1 %cmp118, label %for.end131, label %for.body120, !dbg !8272

for.body120:                                      ; preds = %for.cond117
  call void @llvm.dbg.value(metadata i8 %mode.4.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call122 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %indvars.iv3) #8, !dbg !8273
  %idxprom125 = zext i8 %mode.4.in to i64, !dbg !8274
  %arrayidx126 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %indvars.iv3, i64 %idxprom125, !dbg !8274
  store %struct.rtx_def* %call122, %struct.rtx_def** %arrayidx126, align 8, !dbg !8275
  %arrayidx129 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom125, !dbg !8276
  br label %for.cond117, !dbg !8277, !llvm.loop !8278

for.end131:                                       ; preds = %for.cond117
  br label %for.cond133, !dbg !8280

for.cond133:                                      ; preds = %for.body136, %for.end131
  %mode.5.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 3), %for.end131 ], [ %arrayidx145, %for.body136 ]
  %mode.5.in = load i8, i8* %mode.5.in.in, align 1, !dbg !8282
  call void @llvm.dbg.value(metadata i8 %mode.5.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp134 = icmp eq i8 %mode.5.in, 0, !dbg !8283
  br i1 %cmp134, label %for.inc148, label %for.body136, !dbg !8285

for.body136:                                      ; preds = %for.cond133
  call void @llvm.dbg.value(metadata i8 %mode.5.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call138 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %indvars.iv3) #8, !dbg !8286
  %idxprom141 = zext i8 %mode.5.in to i64, !dbg !8287
  %arrayidx142 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %indvars.iv3, i64 %idxprom141, !dbg !8287
  store %struct.rtx_def* %call138, %struct.rtx_def** %arrayidx142, align 8, !dbg !8288
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom141, !dbg !8289
  br label %for.cond133, !dbg !8290, !llvm.loop !8291

for.inc148:                                       ; preds = %for.cond133
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !8293
  call void @llvm.dbg.value(metadata i32 undef, metadata !8133, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8161
  br label %for.cond72, !dbg !8294, !llvm.loop !8295

for.end150:                                       ; preds = %for.cond72
  br label %for.cond152, !dbg !8297

for.cond152:                                      ; preds = %for.body155, %for.end150
  %mode.6.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 10), %for.end150 ], [ %arrayidx166, %for.body155 ]
  %mode.6.in = load i8, i8* %mode.6.in.in, align 1, !dbg !8298
  call void @llvm.dbg.value(metadata i8 %mode.6.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp153 = icmp eq i8 %mode.6.in, 0, !dbg !8299
  br i1 %cmp153, label %for.end168, label %for.body155, !dbg !8300

for.body155:                                      ; preds = %for.cond152
  %mode.6 = zext i8 %mode.6.in to i32, !dbg !8298
  call void @llvm.dbg.value(metadata i32 %mode.6, metadata !8134, metadata !DIExpression()), !dbg !8161
  %idxprom156 = zext i8 %mode.6.in to i64, !dbg !8301
  %arrayidx157 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom156, !dbg !8301
  %10 = load i8, i8* %arrayidx157, align 1, !dbg !8301
  %idxprom159 = zext i8 %10 to i64, !dbg !8302
  %arrayidx160 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom159, !dbg !8302
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx160, align 8, !dbg !8302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !8141, metadata !DIExpression()), !dbg !8303
  %call161 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %mode.6, %struct.rtx_def* %11, %struct.rtx_def* %11) #7, !dbg !8304
  %arrayidx163 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom156, !dbg !8305
  store %struct.rtx_def* %call161, %struct.rtx_def** %arrayidx163, align 8, !dbg !8306
  %arrayidx166 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom156, !dbg !8307
  br label %for.cond152, !dbg !8308, !llvm.loop !8309

for.end168:                                       ; preds = %for.cond152
  br label %for.cond170, !dbg !8311

for.cond170:                                      ; preds = %for.body173, %for.end168
  %mode.7.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 11), %for.end168 ], [ %arrayidx185, %for.body173 ]
  %mode.7.in = load i8, i8* %mode.7.in.in, align 1, !dbg !8312
  call void @llvm.dbg.value(metadata i8 %mode.7.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp171 = icmp eq i8 %mode.7.in, 0, !dbg !8313
  br i1 %cmp171, label %for.end187, label %for.body173, !dbg !8314

for.body173:                                      ; preds = %for.cond170
  %mode.7 = zext i8 %mode.7.in to i32, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %mode.7, metadata !8134, metadata !DIExpression()), !dbg !8161
  %idxprom175 = zext i8 %mode.7.in to i64, !dbg !8315
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom175, !dbg !8315
  %12 = load i8, i8* %arrayidx176, align 1, !dbg !8315
  %idxprom178 = zext i8 %12 to i64, !dbg !8316
  %arrayidx179 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom178, !dbg !8316
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx179, align 8, !dbg !8316
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !8145, metadata !DIExpression()), !dbg !8317
  %call180 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %mode.7, %struct.rtx_def* %13, %struct.rtx_def* %13) #7, !dbg !8318
  %arrayidx182 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom175, !dbg !8319
  store %struct.rtx_def* %call180, %struct.rtx_def** %arrayidx182, align 8, !dbg !8320
  %arrayidx185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom175, !dbg !8321
  br label %for.cond170, !dbg !8322, !llvm.loop !8323

for.end187:                                       ; preds = %for.cond170
  br label %for.cond189, !dbg !8325

for.cond189:                                      ; preds = %for.body192, %for.end187
  %mode.8.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 12), %for.end187 ], [ %arrayidx201, %for.body192 ]
  %mode.8.in = load i8, i8* %mode.8.in.in, align 1, !dbg !8327
  %mode.8 = zext i8 %mode.8.in to i32, !dbg !8327
  call void @llvm.dbg.value(metadata i32 %mode.8, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp190 = icmp eq i8 %mode.8.in, 0, !dbg !8328
  br i1 %cmp190, label %for.end203, label %for.body192, !dbg !8330

for.body192:                                      ; preds = %for.cond189
  %call193 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.8, i32 0) #8, !dbg !8331
  %idxprom194 = zext i8 %mode.8.in to i64, !dbg !8333
  %arrayidx195 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom194, !dbg !8333
  store %struct.rtx_def* %call193, %struct.rtx_def** %arrayidx195, align 8, !dbg !8334
  %call196 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.8, i32 1) #8, !dbg !8335
  %arrayidx198 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom194, !dbg !8336
  store %struct.rtx_def* %call196, %struct.rtx_def** %arrayidx198, align 8, !dbg !8337
  %arrayidx201 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom194, !dbg !8338
  br label %for.cond189, !dbg !8339, !llvm.loop !8340

for.end203:                                       ; preds = %for.cond189
  br label %for.cond205, !dbg !8342

for.cond205:                                      ; preds = %for.body208, %for.end203
  %mode.9.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 17), %for.end203 ], [ %arrayidx217, %for.body208 ]
  %mode.9.in = load i8, i8* %mode.9.in.in, align 1, !dbg !8344
  %mode.9 = zext i8 %mode.9.in to i32, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %mode.9, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp206 = icmp eq i8 %mode.9.in, 0, !dbg !8345
  br i1 %cmp206, label %for.end219, label %for.body208, !dbg !8347

for.body208:                                      ; preds = %for.cond205
  %call209 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.9, i32 0) #8, !dbg !8348
  %idxprom210 = zext i8 %mode.9.in to i64, !dbg !8350
  %arrayidx211 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom210, !dbg !8350
  store %struct.rtx_def* %call209, %struct.rtx_def** %arrayidx211, align 8, !dbg !8351
  %call212 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.9, i32 1) #8, !dbg !8352
  %arrayidx214 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom210, !dbg !8353
  store %struct.rtx_def* %call212, %struct.rtx_def** %arrayidx214, align 8, !dbg !8354
  %arrayidx217 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom210, !dbg !8355
  br label %for.cond205, !dbg !8356, !llvm.loop !8357

for.end219:                                       ; preds = %for.cond205
  br label %for.cond221, !dbg !8359

for.cond221:                                      ; preds = %for.body224, %for.end219
  %mode.10.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 4), %for.end219 ], [ %arrayidx244, %for.body224 ]
  %mode.10.in = load i8, i8* %mode.10.in.in, align 1, !dbg !8361
  %mode.10 = zext i8 %mode.10.in to i32, !dbg !8361
  call void @llvm.dbg.value(metadata i32 %mode.10, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp222 = icmp eq i8 %mode.10.in, 0, !dbg !8362
  br i1 %cmp222, label %for.end246, label %for.body224, !dbg !8364

for.body224:                                      ; preds = %for.cond221
  %sub225 = add nsw i32 %mode.10, -20, !dbg !8365
  %idxprom226 = zext i32 %sub225 to i64, !dbg !8365
  %high = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom226, i32 0, i32 1, !dbg !8367
  store i64 0, i64* %high, align 8, !dbg !8368
  %low = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom226, i32 0, i32 0, !dbg !8369
  store i64 0, i64* %low, align 8, !dbg !8370
  %mode235 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom226, i32 1, !dbg !8371
  store i32 %mode.10, i32* %mode235, align 8, !dbg !8372
  %arrayidx238 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom226, !dbg !8373
  %call239 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx238, i32 %mode.10) #8, !dbg !8373
  %idxprom240 = zext i8 %mode.10.in to i64, !dbg !8374
  %arrayidx241 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom240, !dbg !8374
  store %struct.rtx_def* %call239, %struct.rtx_def** %arrayidx241, align 8, !dbg !8375
  %arrayidx244 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom240, !dbg !8376
  br label %for.cond221, !dbg !8377, !llvm.loop !8378

for.end246:                                       ; preds = %for.cond221
  br label %for.cond248, !dbg !8380

for.cond248:                                      ; preds = %for.body251, %for.end246
  %mode.11.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 5), %for.end246 ], [ %arrayidx274, %for.body251 ]
  %mode.11.in = load i8, i8* %mode.11.in.in, align 1, !dbg !8382
  %mode.11 = zext i8 %mode.11.in to i32, !dbg !8382
  call void @llvm.dbg.value(metadata i32 %mode.11, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp249 = icmp eq i8 %mode.11.in, 0, !dbg !8383
  br i1 %cmp249, label %for.end276, label %for.body251, !dbg !8385

for.body251:                                      ; preds = %for.cond248
  %sub252 = add nsw i32 %mode.11, -20, !dbg !8386
  %idxprom253 = zext i32 %sub252 to i64, !dbg !8386
  %high256 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom253, i32 0, i32 1, !dbg !8388
  store i64 0, i64* %high256, align 8, !dbg !8389
  %low261 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom253, i32 0, i32 0, !dbg !8390
  store i64 0, i64* %low261, align 8, !dbg !8391
  %mode265 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom253, i32 1, !dbg !8392
  store i32 %mode.11, i32* %mode265, align 8, !dbg !8393
  %arrayidx268 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom253, !dbg !8394
  %call269 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx268, i32 %mode.11) #8, !dbg !8394
  %idxprom270 = zext i8 %mode.11.in to i64, !dbg !8395
  %arrayidx271 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom270, !dbg !8395
  store %struct.rtx_def* %call269, %struct.rtx_def** %arrayidx271, align 8, !dbg !8396
  %arrayidx274 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom270, !dbg !8397
  br label %for.cond248, !dbg !8398, !llvm.loop !8399

for.end276:                                       ; preds = %for.cond248
  br label %for.cond278, !dbg !8401

for.cond278:                                      ; preds = %lor.end350, %for.end276
  %mode.12.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 6), %for.end276 ], [ %arrayidx359, %lor.end350 ]
  %mode.12.in = load i8, i8* %mode.12.in.in, align 1, !dbg !8403
  %mode.12 = zext i8 %mode.12.in to i32, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %mode.12, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp279 = icmp eq i8 %mode.12.in, 0, !dbg !8404
  br i1 %cmp279, label %for.end361, label %for.body281, !dbg !8406

for.body281:                                      ; preds = %for.cond278
  %sub282 = add nsw i32 %mode.12, -20, !dbg !8407
  %idxprom283 = zext i32 %sub282 to i64, !dbg !8407
  %high286 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom283, i32 0, i32 1, !dbg !8409
  store i64 0, i64* %high286, align 8, !dbg !8410
  %low291 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom283, i32 0, i32 0, !dbg !8411
  store i64 0, i64* %low291, align 8, !dbg !8412
  %mode295 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom283, i32 1, !dbg !8413
  store i32 %mode.12, i32* %mode295, align 8, !dbg !8414
  %arrayidx298 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom283, !dbg !8415
  %call299 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx298, i32 %mode.12) #8, !dbg !8415
  %idxprom300 = zext i8 %mode.12.in to i64, !dbg !8416
  %arrayidx301 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom300, !dbg !8416
  store %struct.rtx_def* %call299, %struct.rtx_def** %arrayidx301, align 8, !dbg !8417
  %sub302 = add nsw i32 %mode.12, -30, !dbg !8418
  %idxprom303 = zext i32 %sub302 to i64, !dbg !8418
  %high306 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom303, i32 0, i32 1, !dbg !8419
  store i64 0, i64* %high306, align 8, !dbg !8420
  %low311 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom303, i32 0, i32 0, !dbg !8421
  store i64 0, i64* %low311, align 8, !dbg !8422
  %mode315 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom303, i32 1, !dbg !8423
  store i32 %mode.12, i32* %mode315, align 8, !dbg !8424
  %arrayidx317 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_fbit, i64 0, i64 %idxprom300, !dbg !8425
  %14 = load i8, i8* %arrayidx317, align 1, !dbg !8425
  %conv318 = zext i8 %14 to i64, !dbg !8425
  %arrayidx330 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom300, !dbg !8426
  %15 = load i8, i8* %arrayidx330, align 1, !dbg !8426
  %cmp332 = icmp eq i8 %15, 4, !dbg !8426
  br i1 %cmp332, label %lor.end350, label %lor.lhs.false, !dbg !8426

lor.lhs.false:                                    ; preds = %for.body281
  %cmp337 = icmp eq i8 %15, 13, !dbg !8426
  br i1 %cmp337, label %lor.end350, label %lor.rhs, !dbg !8426

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp342 = icmp eq i8 %15, 6, !dbg !8426
  br i1 %cmp342, label %lor.end350, label %lor.rhs344, !dbg !8426

lor.rhs344:                                       ; preds = %lor.rhs
  %cmp348 = icmp eq i8 %15, 15, !dbg !8426
  br label %lor.end350, !dbg !8426

lor.end350:                                       ; preds = %lor.rhs, %lor.rhs344, %lor.lhs.false, %for.body281
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body281 ], [ true, %lor.rhs ], [ %cmp348, %lor.rhs344 ]
  %lor.ext = zext i1 %16 to i32, !dbg !8426
  tail call void @lshift_double(i64 1, i64 0, i64 %conv318, i32 128, i64* nonnull %low311, i64* nonnull %high306, i32 %lor.ext) #7, !dbg !8427
  %arrayidx353 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom303, !dbg !8428
  %call354 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx353, i32 %mode.12) #8, !dbg !8428
  %arrayidx356 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom300, !dbg !8429
  store %struct.rtx_def* %call354, %struct.rtx_def** %arrayidx356, align 8, !dbg !8430
  %arrayidx359 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom300, !dbg !8431
  br label %for.cond278, !dbg !8432, !llvm.loop !8433

for.end361:                                       ; preds = %for.cond278
  br label %for.cond363, !dbg !8435

for.cond363:                                      ; preds = %lor.end439, %for.end361
  %mode.13.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 7), %for.end361 ], [ %arrayidx449, %lor.end439 ]
  %mode.13.in = load i8, i8* %mode.13.in.in, align 1, !dbg !8437
  %mode.13 = zext i8 %mode.13.in to i32, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %mode.13, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp364 = icmp eq i8 %mode.13.in, 0, !dbg !8438
  br i1 %cmp364, label %for.end451, label %for.body366, !dbg !8440

for.body366:                                      ; preds = %for.cond363
  %sub367 = add nsw i32 %mode.13, -20, !dbg !8441
  %idxprom368 = zext i32 %sub367 to i64, !dbg !8441
  %high371 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom368, i32 0, i32 1, !dbg !8443
  store i64 0, i64* %high371, align 8, !dbg !8444
  %low376 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom368, i32 0, i32 0, !dbg !8445
  store i64 0, i64* %low376, align 8, !dbg !8446
  %mode380 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom368, i32 1, !dbg !8447
  store i32 %mode.13, i32* %mode380, align 8, !dbg !8448
  %arrayidx383 = getelementptr inbounds [18 x %struct.fixed_value], [18 x %struct.fixed_value]* @fconst0, i64 0, i64 %idxprom368, !dbg !8449
  %call384 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx383, i32 %mode.13) #8, !dbg !8449
  %idxprom385 = zext i8 %mode.13.in to i64, !dbg !8450
  %arrayidx386 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom385, !dbg !8450
  store %struct.rtx_def* %call384, %struct.rtx_def** %arrayidx386, align 8, !dbg !8451
  %sub387 = add nsw i32 %mode.13, -30, !dbg !8452
  %idxprom388 = zext i32 %sub387 to i64, !dbg !8452
  %high391 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom388, i32 0, i32 1, !dbg !8453
  store i64 0, i64* %high391, align 8, !dbg !8454
  %low396 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom388, i32 0, i32 0, !dbg !8455
  store i64 0, i64* %low396, align 8, !dbg !8456
  %mode400 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom388, i32 1, !dbg !8457
  store i32 %mode.13, i32* %mode400, align 8, !dbg !8458
  %arrayidx402 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_fbit, i64 0, i64 %idxprom385, !dbg !8459
  %17 = load i8, i8* %arrayidx402, align 1, !dbg !8459
  %conv403 = zext i8 %17 to i64, !dbg !8459
  %arrayidx415 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom385, !dbg !8460
  %18 = load i8, i8* %arrayidx415, align 1, !dbg !8460
  %cmp417 = icmp eq i8 %18, 4, !dbg !8460
  br i1 %cmp417, label %lor.end439, label %lor.lhs.false419, !dbg !8460

lor.lhs.false419:                                 ; preds = %for.body366
  %cmp423 = icmp eq i8 %18, 13, !dbg !8460
  br i1 %cmp423, label %lor.end439, label %lor.rhs425, !dbg !8460

lor.rhs425:                                       ; preds = %lor.lhs.false419
  %cmp429 = icmp eq i8 %18, 6, !dbg !8460
  br i1 %cmp429, label %lor.end439, label %lor.rhs431, !dbg !8460

lor.rhs431:                                       ; preds = %lor.rhs425
  %cmp435 = icmp eq i8 %18, 15, !dbg !8460
  br label %lor.end439, !dbg !8460

lor.end439:                                       ; preds = %lor.rhs425, %lor.rhs431, %lor.lhs.false419, %for.body366
  %19 = phi i1 [ true, %lor.lhs.false419 ], [ true, %for.body366 ], [ true, %lor.rhs425 ], [ %cmp435, %lor.rhs431 ]
  %lor.ext440 = zext i1 %19 to i32, !dbg !8460
  tail call void @lshift_double(i64 1, i64 0, i64 %conv403, i32 128, i64* nonnull %low396, i64* nonnull %high391, i32 %lor.ext440) #7, !dbg !8461
  %arrayidx443 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom388, !dbg !8462
  %call444 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx443, i32 %mode.13) #8, !dbg !8462
  %arrayidx446 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom385, !dbg !8463
  store %struct.rtx_def* %call444, %struct.rtx_def** %arrayidx446, align 8, !dbg !8464
  %arrayidx449 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom385, !dbg !8465
  br label %for.cond363, !dbg !8466, !llvm.loop !8467

for.end451:                                       ; preds = %for.cond363
  br label %for.cond453, !dbg !8469

for.cond453:                                      ; preds = %for.body456, %for.end451
  %mode.14.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 13), %for.end451 ], [ %arrayidx462, %for.body456 ]
  %mode.14.in = load i8, i8* %mode.14.in.in, align 1, !dbg !8471
  call void @llvm.dbg.value(metadata i8 %mode.14.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp454 = icmp eq i8 %mode.14.in, 0, !dbg !8472
  br i1 %cmp454, label %for.end464, label %for.body456, !dbg !8474

for.body456:                                      ; preds = %for.cond453
  %mode.14 = zext i8 %mode.14.in to i32, !dbg !8471
  call void @llvm.dbg.value(metadata i32 %mode.14, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call457 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.14, i32 0) #8, !dbg !8475
  %idxprom458 = zext i8 %mode.14.in to i64, !dbg !8477
  %arrayidx459 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom458, !dbg !8477
  store %struct.rtx_def* %call457, %struct.rtx_def** %arrayidx459, align 8, !dbg !8478
  %arrayidx462 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom458, !dbg !8479
  br label %for.cond453, !dbg !8480, !llvm.loop !8481

for.end464:                                       ; preds = %for.cond453
  br label %for.cond466, !dbg !8483

for.cond466:                                      ; preds = %for.body469, %for.end464
  %mode.15.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 14), %for.end464 ], [ %arrayidx475, %for.body469 ]
  %mode.15.in = load i8, i8* %mode.15.in.in, align 1, !dbg !8485
  call void @llvm.dbg.value(metadata i8 %mode.15.in, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp467 = icmp eq i8 %mode.15.in, 0, !dbg !8486
  br i1 %cmp467, label %for.end477, label %for.body469, !dbg !8488

for.body469:                                      ; preds = %for.cond466
  %mode.15 = zext i8 %mode.15.in to i32, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %mode.15, metadata !8134, metadata !DIExpression()), !dbg !8161
  %call470 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.15, i32 0) #8, !dbg !8489
  %idxprom471 = zext i8 %mode.15.in to i64, !dbg !8491
  %arrayidx472 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom471, !dbg !8491
  store %struct.rtx_def* %call470, %struct.rtx_def** %arrayidx472, align 8, !dbg !8492
  %arrayidx475 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom471, !dbg !8493
  br label %for.cond466, !dbg !8494, !llvm.loop !8495

for.end477:                                       ; preds = %for.cond466
  br label %for.cond479, !dbg !8497

for.cond479:                                      ; preds = %for.body482, %for.end477
  %mode.16.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 15), %for.end477 ], [ %arrayidx491, %for.body482 ]
  %mode.16.in = load i8, i8* %mode.16.in.in, align 1, !dbg !8499
  %mode.16 = zext i8 %mode.16.in to i32, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %mode.16, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp480 = icmp eq i8 %mode.16.in, 0, !dbg !8500
  br i1 %cmp480, label %for.end493, label %for.body482, !dbg !8502

for.body482:                                      ; preds = %for.cond479
  %call483 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.16, i32 0) #8, !dbg !8503
  %idxprom484 = zext i8 %mode.16.in to i64, !dbg !8505
  %arrayidx485 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom484, !dbg !8505
  store %struct.rtx_def* %call483, %struct.rtx_def** %arrayidx485, align 8, !dbg !8506
  %call486 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.16, i32 1) #8, !dbg !8507
  %arrayidx488 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom484, !dbg !8508
  store %struct.rtx_def* %call486, %struct.rtx_def** %arrayidx488, align 8, !dbg !8509
  %arrayidx491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom484, !dbg !8510
  br label %for.cond479, !dbg !8511, !llvm.loop !8512

for.end493:                                       ; preds = %for.cond479
  br label %for.cond495, !dbg !8514

for.cond495:                                      ; preds = %for.body498, %for.end493
  %mode.17.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 16), %for.end493 ], [ %arrayidx507, %for.body498 ]
  %mode.17.in = load i8, i8* %mode.17.in.in, align 1, !dbg !8516
  %mode.17 = zext i8 %mode.17.in to i32, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %mode.17, metadata !8134, metadata !DIExpression()), !dbg !8161
  %cmp496 = icmp eq i8 %mode.17.in, 0, !dbg !8517
  br i1 %cmp496, label %for.cond510.preheader, label %for.body498, !dbg !8519

for.cond510.preheader:                            ; preds = %for.cond495
  %20 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !8520
  br label %for.cond510, !dbg !8524

for.body498:                                      ; preds = %for.cond495
  %call499 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.17, i32 0) #8, !dbg !8525
  %idxprom500 = zext i8 %mode.17.in to i64, !dbg !8527
  %arrayidx501 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom500, !dbg !8527
  store %struct.rtx_def* %call499, %struct.rtx_def** %arrayidx501, align 8, !dbg !8528
  %call502 = tail call fastcc %struct.rtx_def* @gen_const_vector(i32 %mode.17, i32 1) #8, !dbg !8529
  %arrayidx504 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom500, !dbg !8530
  store %struct.rtx_def* %call502, %struct.rtx_def** %arrayidx504, align 8, !dbg !8531
  %arrayidx507 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom500, !dbg !8532
  br label %for.cond495, !dbg !8533, !llvm.loop !8534

for.cond510:                                      ; preds = %for.cond510.preheader, %for.inc523
  %indvars.iv = phi i64 [ 2, %for.cond510.preheader ], [ %indvars.iv.next, %for.inc523 ], !dbg !8536
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8133, metadata !DIExpression()), !dbg !8161
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !8537
  br i1 %exitcond, label %for.end525, label %for.body513, !dbg !8524

for.body513:                                      ; preds = %for.cond510
  %arrayidx515 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %indvars.iv, !dbg !8538
  %21 = load i8, i8* %arrayidx515, align 1, !dbg !8538
  %cmp517 = icmp eq i8 %21, 1, !dbg !8539
  br i1 %cmp517, label %if.then519, label %for.inc523, !dbg !8540

if.then519:                                       ; preds = %for.body513
  %arrayidx521 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %indvars.iv, !dbg !8541
  %22 = bitcast %struct.rtx_def** %arrayidx521 to i64*, !dbg !8542
  store i64 %20, i64* %22, align 8, !dbg !8542
  br label %for.inc523, !dbg !8541

for.inc523:                                       ; preds = %for.body513, %if.then519
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8543
  call void @llvm.dbg.value(metadata i32 undef, metadata !8133, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8161
  br label %for.cond510, !dbg !8544, !llvm.loop !8545

for.end525:                                       ; preds = %for.cond510
  store i64 %20, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 13) to i64*), align 8, !dbg !8547
  %23 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65) to i64*), align 8, !dbg !8548
  store i64 %23, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 13) to i64*), align 8, !dbg !8550
  ret void, !dbg !8551
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @const_int_htab_hash(i8* %x) #5 !dbg !8552 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8554, metadata !DIExpression()), !dbg !8555
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8556
  %arrayidx = bitcast i8* %u to i64*, !dbg !8556
  %0 = load i64, i64* %arrayidx, align 8, !dbg !8556
  %conv = trunc i64 %0 to i32, !dbg !8557
  ret i32 %conv, !dbg !8558
}

; Function Attrs: nounwind uwtable
define internal i32 @const_int_htab_eq(i8* %x, i8* %y) #5 !dbg !8559 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8561, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i8* %y, metadata !8562, metadata !DIExpression()), !dbg !8563
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8564
  %arrayidx = bitcast i8* %u to i64*, !dbg !8564
  %0 = load i64, i64* %arrayidx, align 8, !dbg !8564
  %1 = bitcast i8* %y to i64*, !dbg !8565
  %2 = load i64, i64* %1, align 8, !dbg !8566
  %cmp = icmp eq i64 %0, %2, !dbg !8567
  %conv = zext i1 %cmp to i32, !dbg !8567
  ret i32 %conv, !dbg !8568
}

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @const_double_htab_hash(i8* %x) #5 !dbg !8569 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8571, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata i8* %x, metadata !8572, metadata !DIExpression()), !dbg !8575
  %0 = bitcast i8* %x to i32*, !dbg !8576
  %bf.load = load i32, i32* %0, align 8, !dbg !8576
  %bf.clear = and i32 %bf.load, 16711680, !dbg !8576
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !8578
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8579
  br i1 %cmp, label %if.then, label %if.else, !dbg !8580

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x, metadata !8572, metadata !DIExpression()), !dbg !8575
  %arrayidx = bitcast i8* %u to i64*, !dbg !8581
  %1 = load i64, i64* %arrayidx, align 8, !dbg !8581
  %arrayidx3 = getelementptr inbounds i8, i8* %x, i64 16, !dbg !8582
  %2 = bitcast i8* %arrayidx3 to i64*, !dbg !8582
  %3 = load i64, i64* %2, align 8, !dbg !8582
  %xor = xor i64 %1, %3, !dbg !8583
  %conv = trunc i64 %xor to i32, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8574, metadata !DIExpression()), !dbg !8575
  br label %if.end, !dbg !8584

if.else:                                          ; preds = %entry
  %rv = bitcast i8* %u to %struct.real_value*, !dbg !8585
  %call = tail call i32 @real_hash(%struct.real_value* nonnull %rv) #7, !dbg !8587
  call void @llvm.dbg.value(metadata i32 %call, metadata !8574, metadata !DIExpression()), !dbg !8575
  %bf.load5 = load i32, i32* %0, align 8, !dbg !8588
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !8588
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !8588
  %xor8 = xor i32 %call, %bf.clear7, !dbg !8589
  call void @llvm.dbg.value(metadata i32 %xor8, metadata !8574, metadata !DIExpression()), !dbg !8575
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %h.0 = phi i32 [ %conv, %if.then ], [ %xor8, %if.else ], !dbg !8579
  call void @llvm.dbg.value(metadata i32 %h.0, metadata !8574, metadata !DIExpression()), !dbg !8575
  ret i32 %h.0, !dbg !8590
}

; Function Attrs: nounwind uwtable
define internal i32 @const_double_htab_eq(i8* %x, i8* %y) #5 !dbg !8591 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8593, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i8* %y, metadata !8594, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i8* %x, metadata !8595, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i8* %y, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = bitcast i8* %x to i32*, !dbg !8598
  %bf.load = load i32, i32* %0, align 8, !dbg !8598
  %1 = bitcast i8* %y to i32*, !dbg !8600
  %bf.load1 = load i32, i32* %1, align 8, !dbg !8600
  %bf.lshr1 = xor i32 %bf.load, %bf.load1, !dbg !8601
  %2 = and i32 %bf.lshr1, 16711680, !dbg !8601
  %cmp = icmp eq i32 %2, 0, !dbg !8601
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8602

if.end:                                           ; preds = %entry
  %bf.clear6 = and i32 %bf.load, 16711680, !dbg !8603
  %cmp7 = icmp eq i32 %bf.clear6, 0, !dbg !8605
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8606
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !8607

if.then8:                                         ; preds = %if.end
  %arrayidx = bitcast i8* %u to i64*, !dbg !8608
  %3 = load i64, i64* %arrayidx, align 8, !dbg !8608
  %u9 = getelementptr inbounds i8, i8* %y, i64 8, !dbg !8609
  %arrayidx11 = bitcast i8* %u9 to i64*, !dbg !8609
  %4 = load i64, i64* %arrayidx11, align 8, !dbg !8609
  %cmp12 = icmp eq i64 %3, %4, !dbg !8610
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !8611

land.rhs:                                         ; preds = %if.then8
  %arrayidx15 = getelementptr inbounds i8, i8* %x, i64 16, !dbg !8612
  %5 = bitcast i8* %arrayidx15 to i64*, !dbg !8612
  %6 = load i64, i64* %5, align 8, !dbg !8612
  %arrayidx18 = getelementptr inbounds i8, i8* %y, i64 16, !dbg !8613
  %7 = bitcast i8* %arrayidx18 to i64*, !dbg !8613
  %8 = load i64, i64* %7, align 8, !dbg !8613
  %cmp19 = icmp eq i64 %6, %8, !dbg !8614
  %phitmp = zext i1 %cmp19 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then8
  %9 = phi i32 [ 0, %if.then8 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !8615

if.else:                                          ; preds = %if.end
  %rv = bitcast i8* %u to %struct.real_value*, !dbg !8616
  %u21 = getelementptr inbounds i8, i8* %y, i64 8, !dbg !8617
  %rv22 = bitcast i8* %u21 to %struct.real_value*, !dbg !8617
  %call = tail call zeroext i8 @real_identical(%struct.real_value* nonnull %rv, %struct.real_value* nonnull %rv22) #7, !dbg !8618
  %conv = zext i8 %call to i32, !dbg !8618
  br label %cleanup, !dbg !8619

cleanup:                                          ; preds = %entry, %if.else, %land.end
  %retval.0 = phi i32 [ %9, %land.end ], [ %conv, %if.else ], [ 0, %entry ], !dbg !8597
  ret i32 %retval.0, !dbg !8620
}

; Function Attrs: nounwind uwtable
define internal i32 @const_fixed_htab_hash(i8* %x) #5 !dbg !8621 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8623, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %x, metadata !8624, metadata !DIExpression()), !dbg !8626
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8627
  %fv = bitcast i8* %u to %struct.fixed_value*, !dbg !8627
  %call = tail call i32 @fixed_hash(%struct.fixed_value* nonnull %fv) #7, !dbg !8628
  call void @llvm.dbg.value(metadata i32 %call, metadata !8625, metadata !DIExpression()), !dbg !8626
  %0 = bitcast i8* %x to i32*, !dbg !8629
  %bf.load = load i32, i32* %0, align 8, !dbg !8629
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8629
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8629
  %xor = xor i32 %call, %bf.clear, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %xor, metadata !8625, metadata !DIExpression()), !dbg !8626
  ret i32 %xor, !dbg !8631
}

; Function Attrs: nounwind uwtable
define internal i32 @const_fixed_htab_eq(i8* %x, i8* %y) #5 !dbg !8632 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %y, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %x, metadata !8636, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %y, metadata !8637, metadata !DIExpression()), !dbg !8638
  %0 = bitcast i8* %x to i32*, !dbg !8639
  %bf.load = load i32, i32* %0, align 8, !dbg !8639
  %1 = bitcast i8* %y to i32*, !dbg !8641
  %bf.load1 = load i32, i32* %1, align 8, !dbg !8641
  %bf.lshr1 = xor i32 %bf.load, %bf.load1, !dbg !8642
  %2 = and i32 %bf.lshr1, 16711680, !dbg !8642
  %cmp = icmp eq i32 %2, 0, !dbg !8642
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8643

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %y, metadata !8637, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %x, metadata !8636, metadata !DIExpression()), !dbg !8638
  %u = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8644
  %fv = bitcast i8* %u to %struct.fixed_value*, !dbg !8644
  %u4 = getelementptr inbounds i8, i8* %y, i64 8, !dbg !8645
  %fv5 = bitcast i8* %u4 to %struct.fixed_value*, !dbg !8645
  %call = tail call zeroext i8 @fixed_identical(%struct.fixed_value* nonnull %fv, %struct.fixed_value* nonnull %fv5) #7, !dbg !8646
  %conv = zext i8 %call to i32, !dbg !8646
  br label %cleanup, !dbg !8647

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %entry ], !dbg !8638
  ret i32 %retval.0, !dbg !8648
}

; Function Attrs: nounwind uwtable
define internal i32 @mem_attrs_htab_hash(i8* %x) #5 !dbg !8649 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %x, metadata !8652, metadata !DIExpression()), !dbg !8654
  %alias = getelementptr inbounds i8, i8* %x, i64 24, !dbg !8655
  %0 = bitcast i8* %alias to i32*, !dbg !8655
  %1 = load i32, i32* %0, align 8, !dbg !8655
  %align = getelementptr inbounds i8, i8* %x, i64 28, !dbg !8656
  %2 = bitcast i8* %align to i32*, !dbg !8656
  %3 = load i32, i32* %2, align 4, !dbg !8656
  %mul = mul i32 %3, 1000, !dbg !8657
  %xor = xor i32 %1, %mul, !dbg !8658
  %4 = getelementptr inbounds i8, i8* %x, i64 32, !dbg !8659
  %5 = load i8, i8* %4, align 8, !dbg !8659
  %conv = zext i8 %5 to i32, !dbg !8660
  %mul1 = mul nuw nsw i32 %conv, 4000, !dbg !8661
  %xor2 = xor i32 %xor, %mul1, !dbg !8662
  %conv3 = zext i32 %xor2 to i64, !dbg !8663
  %offset = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8664
  %6 = bitcast i8* %offset to %struct.rtx_def**, !dbg !8664
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !8664
  %tobool = icmp eq %struct.rtx_def* %7, null, !dbg !8665
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8665

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x, metadata !8652, metadata !DIExpression()), !dbg !8654
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !8666
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !8666
  %8 = load i64, i64* %arrayidx, align 8, !dbg !8666
  %phitmp = mul i64 %8, 50000, !dbg !8665
  br label %cond.end, !dbg !8665

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  %xor6 = xor i64 %cond, %conv3, !dbg !8667
  %size = getelementptr inbounds i8, i8* %x, i64 16, !dbg !8668
  %9 = bitcast i8* %size to %struct.rtx_def**, !dbg !8668
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !8668
  %tobool7 = icmp eq %struct.rtx_def* %10, null, !dbg !8669
  br i1 %tobool7, label %cond.end14, label %cond.true8, !dbg !8669

cond.true8:                                       ; preds = %cond.end
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !8670
  %arrayidx12 = bitcast %union.u* %u10 to i64*, !dbg !8670
  %11 = load i64, i64* %arrayidx12, align 8, !dbg !8670
  %phitmp1 = mul i64 %11, 2500000, !dbg !8669
  br label %cond.end14, !dbg !8669

cond.end14:                                       ; preds = %cond.end, %cond.true8
  %cond15 = phi i64 [ %phitmp1, %cond.true8 ], [ 0, %cond.end ]
  %xor17 = xor i64 %xor6, %cond15, !dbg !8671
  %expr = bitcast i8* %x to %union.tree_node**, !dbg !8672
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8672
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %12, i32 0) #7, !dbg !8673
  %13 = trunc i64 %xor17 to i32, !dbg !8674
  %conv20 = xor i32 %call, %13, !dbg !8674
  ret i32 %conv20, !dbg !8675
}

; Function Attrs: nounwind uwtable
define internal i32 @mem_attrs_htab_eq(i8* %x, i8* %y) #5 !dbg !8676 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8678, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %y, metadata !8679, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %x, metadata !8680, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %y, metadata !8681, metadata !DIExpression()), !dbg !8682
  %alias = getelementptr inbounds i8, i8* %x, i64 24, !dbg !8683
  %0 = bitcast i8* %alias to i32*, !dbg !8683
  %1 = load i32, i32* %0, align 8, !dbg !8683
  %alias1 = getelementptr inbounds i8, i8* %y, i64 24, !dbg !8684
  %2 = bitcast i8* %alias1 to i32*, !dbg !8684
  %3 = load i32, i32* %2, align 8, !dbg !8684
  %cmp = icmp eq i32 %1, %3, !dbg !8685
  br i1 %cmp, label %land.lhs.true, label %land.end28, !dbg !8686

land.lhs.true:                                    ; preds = %entry
  %offset = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8687
  %4 = bitcast i8* %offset to %struct.rtx_def**, !dbg !8687
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !8687
  %offset2 = getelementptr inbounds i8, i8* %y, i64 8, !dbg !8688
  %6 = bitcast i8* %offset2 to %struct.rtx_def**, !dbg !8688
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !8688
  %cmp3 = icmp eq %struct.rtx_def* %5, %7, !dbg !8689
  br i1 %cmp3, label %land.lhs.true4, label %land.end28, !dbg !8690

land.lhs.true4:                                   ; preds = %land.lhs.true
  %size = getelementptr inbounds i8, i8* %x, i64 16, !dbg !8691
  %8 = bitcast i8* %size to %struct.rtx_def**, !dbg !8691
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !8691
  %size5 = getelementptr inbounds i8, i8* %y, i64 16, !dbg !8692
  %10 = bitcast i8* %size5 to %struct.rtx_def**, !dbg !8692
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8, !dbg !8692
  %cmp6 = icmp eq %struct.rtx_def* %9, %11, !dbg !8693
  br i1 %cmp6, label %land.lhs.true7, label %land.end28, !dbg !8694

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %align = getelementptr inbounds i8, i8* %x, i64 28, !dbg !8695
  %12 = bitcast i8* %align to i32*, !dbg !8695
  %13 = load i32, i32* %12, align 4, !dbg !8695
  %align8 = getelementptr inbounds i8, i8* %y, i64 28, !dbg !8696
  %14 = bitcast i8* %align8 to i32*, !dbg !8696
  %15 = load i32, i32* %14, align 4, !dbg !8696
  %cmp9 = icmp eq i32 %13, %15, !dbg !8697
  br i1 %cmp9, label %land.lhs.true10, label %land.end28, !dbg !8698

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %16 = getelementptr inbounds i8, i8* %x, i64 32, !dbg !8699
  %17 = load i8, i8* %16, align 8, !dbg !8699
  %18 = getelementptr inbounds i8, i8* %y, i64 32, !dbg !8700
  %19 = load i8, i8* %18, align 8, !dbg !8700
  %cmp13 = icmp eq i8 %17, %19, !dbg !8701
  br i1 %cmp13, label %land.rhs, label %land.end28, !dbg !8702

land.rhs:                                         ; preds = %land.lhs.true10
  %expr = bitcast i8* %x to %union.tree_node**, !dbg !8703
  %20 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8703
  %expr15 = bitcast i8* %y to %union.tree_node**, !dbg !8704
  %21 = load %union.tree_node*, %union.tree_node** %expr15, align 8, !dbg !8704
  %cmp16 = icmp eq %union.tree_node* %20, %21, !dbg !8705
  br i1 %cmp16, label %land.end28, label %lor.rhs, !dbg !8706

lor.rhs:                                          ; preds = %land.rhs
  %cmp19 = icmp eq %union.tree_node* %20, null, !dbg !8707
  br i1 %cmp19, label %land.end28, label %land.lhs.true21, !dbg !8708

land.lhs.true21:                                  ; preds = %lor.rhs
  %cmp23 = icmp eq %union.tree_node* %21, null, !dbg !8709
  br i1 %cmp23, label %land.end28, label %land.rhs25, !dbg !8710

land.rhs25:                                       ; preds = %land.lhs.true21
  %call = tail call i32 @operand_equal_p(%union.tree_node* nonnull %20, %union.tree_node* nonnull %21, i32 0) #7, !dbg !8711
  %tobool = icmp ne i32 %call, 0, !dbg !8710
  %phitmp = zext i1 %tobool to i32
  br label %land.end28

land.end28:                                       ; preds = %land.lhs.true21, %lor.rhs, %land.rhs, %land.rhs25, %land.lhs.true10, %land.lhs.true7, %land.lhs.true4, %land.lhs.true, %entry
  %22 = phi i32 [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true7 ], [ 0, %land.lhs.true4 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %land.rhs ], [ 0, %land.lhs.true21 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs25 ]
  ret i32 %22, !dbg !8712
}

; Function Attrs: nounwind uwtable
define internal i32 @reg_attrs_htab_hash(i8* %x) #5 !dbg !8713 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8715, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i8* %x, metadata !8716, metadata !DIExpression()), !dbg !8718
  %offset = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8719
  %0 = bitcast i8* %offset to i64*, !dbg !8719
  %1 = load i64, i64* %0, align 8, !dbg !8719
  %mul = mul nsw i64 %1, 1000, !dbg !8720
  %2 = bitcast i8* %x to i64*, !dbg !8721
  %3 = load i64, i64* %2, align 8, !dbg !8721
  %xor = xor i64 %mul, %3, !dbg !8722
  %conv = trunc i64 %xor to i32, !dbg !8723
  ret i32 %conv, !dbg !8724
}

; Function Attrs: nounwind uwtable
define internal i32 @reg_attrs_htab_eq(i8* %x, i8* %y) #5 !dbg !8725 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !8727, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i8* %y, metadata !8728, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i8* %x, metadata !8729, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i8* %y, metadata !8730, metadata !DIExpression()), !dbg !8731
  %decl = bitcast i8* %x to %union.tree_node**, !dbg !8732
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !8732
  %decl1 = bitcast i8* %y to %union.tree_node**, !dbg !8733
  %1 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !8733
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !8734
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8735

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %y, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i8* %x, metadata !8729, metadata !DIExpression()), !dbg !8731
  %offset = getelementptr inbounds i8, i8* %x, i64 8, !dbg !8736
  %2 = bitcast i8* %offset to i64*, !dbg !8736
  %3 = load i64, i64* %2, align 8, !dbg !8736
  %offset2 = getelementptr inbounds i8, i8* %y, i64 8, !dbg !8737
  %4 = bitcast i8* %offset2 to i64*, !dbg !8737
  %5 = load i64, i64* %4, align 8, !dbg !8737
  %cmp3 = icmp eq i64 %3, %5, !dbg !8738
  %phitmp = zext i1 %cmp3 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !8739
}

declare dso_local void @real_from_integer(%struct.real_value*, i32, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @gen_const_vector(i32 %mode, i32 %constant) unnamed_addr #5 !dbg !8740 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8742, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %constant, metadata !8743, metadata !DIExpression()), !dbg !8749
  %idxprom = zext i32 %mode to i64, !dbg !8750
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom, !dbg !8750
  %0 = load i8, i8* %arrayidx, align 1, !dbg !8750
  %conv = zext i8 %0 to i32, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8746, metadata !DIExpression()), !dbg !8749
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !8751
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !8751
  call void @llvm.dbg.value(metadata i8 %1, metadata !8748, metadata !DIExpression()), !dbg !8749
  %idxprom4 = zext i8 %1 to i64, !dbg !8752
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4, !dbg !8752
  %2 = load i8, i8* %arrayidx5, align 1, !dbg !8752
  %cmp = icmp eq i8 %2, 9, !dbg !8752
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8752

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5626, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !8752
  br label %cond.end, !dbg !8752

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.rtvec_def* @rtvec_alloc(i32 %conv) #7, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call, metadata !8745, metadata !DIExpression()), !dbg !8749
  %idxprom8 = sext i32 %constant to i64, !dbg !8754
  %arrayidx11 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 %idxprom8, i64 %idxprom4, !dbg !8754
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx11, align 8, !dbg !8754
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !8754
  br i1 %tobool, label %cond.true12, label %cond.end14, !dbg !8754

cond.true12:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 5632, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !8754
  br label %cond.end14, !dbg !8754

cond.end14:                                       ; preds = %cond.end, %cond.true12
  call void @llvm.dbg.value(metadata i32 0, metadata !8747, metadata !DIExpression()), !dbg !8749
  %4 = bitcast %struct.rtx_def** %arrayidx11 to i64*, !dbg !8755
  %wide.trip.count = zext i8 %0 to i64, !dbg !8758
  br label %for.cond, !dbg !8759

for.cond:                                         ; preds = %for.body, %cond.end14
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end14 ], !dbg !8760
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8747, metadata !DIExpression()), !dbg !8749
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !8758
  br i1 %exitcond, label %for.end, label %for.body, !dbg !8761

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %4, align 8, !dbg !8762
  %arrayidx23 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !8763
  %6 = bitcast %struct.rtx_def** %arrayidx23 to i64*, !dbg !8764
  store i64 %5, i64* %6, align 8, !dbg !8764
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8765
  call void @llvm.dbg.value(metadata i32 undef, metadata !8747, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8749
  br label %for.cond, !dbg !8766, !llvm.loop !8767

for.end:                                          ; preds = %for.cond
  %call24 = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 33, i32 %mode, %struct.rtvec_def* %call) #7, !dbg !8769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !8744, metadata !DIExpression()), !dbg !8749
  ret %struct.rtx_def* %call24, !dbg !8770
}

declare dso_local void @lshift_double(i64, i64, i64, i32, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_copy_of_insn_after(%struct.rtx_def* %insn, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !8771 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8773, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !8774, metadata !DIExpression()), !dbg !8777
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !8778
  %bf.load = load i32, i32* %0, align 8, !dbg !8778
  %trunc = trunc i32 %bf.load to i16, !dbg !8779
  switch i16 %trunc, label %sw.default [
    i16 8, label %sw.bb
    i16 9, label %sw.bb2
    i16 7, label %sw.bb9
    i16 10, label %sw.bb16
  ], !dbg !8779

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8780
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8780
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !8780
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8780
  %call = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %2) #8, !dbg !8782
  %call1 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call, %struct.rtx_def* %after) #8, !dbg !8783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !8775, metadata !DIExpression()), !dbg !8777
  br label %sw.epilog, !dbg !8784

sw.bb2:                                           ; preds = %entry
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8785
  %3 = getelementptr inbounds %union.u, %union.u* %u3, i64 1, i32 0, i32 0, i64 0, !dbg !8785
  %rt_rtx6 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8785
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !8785
  %call7 = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %4) #8, !dbg !8786
  %call8 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call7, %struct.rtx_def* %after) #8, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !8775, metadata !DIExpression()), !dbg !8777
  br label %sw.epilog, !dbg !8788

sw.bb9:                                           ; preds = %entry
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8789
  %5 = getelementptr inbounds %union.u, %union.u* %u10, i64 1, i32 0, i32 0, i64 0, !dbg !8789
  %rt_rtx13 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !8789
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !8789
  %call14 = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %6) #8, !dbg !8790
  %call15 = tail call %struct.rtx_def* @emit_debug_insn_after(%struct.rtx_def* %call14, %struct.rtx_def* %after) #8, !dbg !8791
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !8775, metadata !DIExpression()), !dbg !8777
  br label %sw.epilog, !dbg !8792

sw.bb16:                                          ; preds = %entry
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8793
  %7 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 0, i64 0, !dbg !8793
  %rt_rtx20 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !8793
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !8793
  %call21 = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %8) #8, !dbg !8794
  %call22 = tail call %struct.rtx_def* @emit_call_insn_after(%struct.rtx_def* %call21, %struct.rtx_def* %after) #8, !dbg !8795
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !8775, metadata !DIExpression()), !dbg !8777
  %arrayidx25 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 1, !dbg !8796
  %rt_rtx26 = bitcast %struct.object_block** %arrayidx25 to %struct.rtx_def**, !dbg !8796
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !8796
  %tobool = icmp eq %struct.rtx_def* %9, null, !dbg !8796
  br i1 %tobool, label %if.end, label %if.then, !dbg !8798

if.then:                                          ; preds = %sw.bb16
  %call31 = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* nonnull %9) #8, !dbg !8799
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call22, i64 0, i32 1, !dbg !8800
  %arrayidx34 = getelementptr inbounds %union.u, %union.u* %u32, i64 1, i32 0, i32 1, !dbg !8800
  %rt_rtx35 = bitcast %struct.object_block** %arrayidx34 to %struct.rtx_def**, !dbg !8800
  store %struct.rtx_def* %call31, %struct.rtx_def** %rt_rtx35, align 8, !dbg !8801
  br label %if.end, !dbg !8800

if.end:                                           ; preds = %sw.bb16, %if.then
  %bf.load36 = load i32, i32* %0, align 8, !dbg !8802
  %bf.clear37 = and i32 %bf.load36, 16777216, !dbg !8802
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call22, i64 0, i32 0, !dbg !8803
  %bf.load38 = load i32, i32* %10, align 8, !dbg !8804
  %bf.clear39 = and i32 %bf.load38, -16777217, !dbg !8804
  %bf.set = or i32 %bf.clear39, %bf.clear37, !dbg !8804
  store i32 %bf.set, i32* %10, align 8, !dbg !8804
  %bf.load40 = load i32, i32* %0, align 8, !dbg !8805
  %bf.clear42 = and i32 %bf.load40, 67108864, !dbg !8805
  %bf.clear46 = and i32 %bf.set, -67108865, !dbg !8806
  %bf.set47 = or i32 %bf.clear46, %bf.clear42, !dbg !8806
  store i32 %bf.set47, i32* %10, align 8, !dbg !8806
  %bf.load48 = load i32, i32* %0, align 8, !dbg !8807
  %bf.lshr49 = and i32 %bf.load48, -2147483648, !dbg !8808
  %bf.clear53 = and i32 %bf.set47, 2147483647, !dbg !8808
  %bf.set54 = or i32 %bf.clear53, %bf.lshr49, !dbg !8808
  store i32 %bf.set54, i32* %10, align 8, !dbg !8808
  %bf.load55 = load i32, i32* %0, align 8, !dbg !8809
  %bf.clear57 = and i32 %bf.load55, 33554432, !dbg !8809
  %bf.clear61 = and i32 %bf.set54, -33554433, !dbg !8810
  %bf.set62 = or i32 %bf.clear61, %bf.clear57, !dbg !8810
  store i32 %bf.set62, i32* %10, align 8, !dbg !8810
  br label %sw.epilog, !dbg !8811

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 6007, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !8812
  br label %sw.epilog, !dbg !8813

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb9, %sw.bb2, %sw.bb
  %new_rtx.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %call22, %if.end ], [ %call15, %sw.bb9 ], [ %call8, %sw.bb2 ], [ %call1, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !8775, metadata !DIExpression()), !dbg !8777
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 1, !dbg !8814
  %11 = getelementptr inbounds %union.u, %union.u* %u63, i64 1, i32 0, i32 0, i64 0, !dbg !8814
  %rt_rtx66 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !8814
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !8814
  tail call void @mark_jump_label(%struct.rtx_def* %12, %struct.rtx_def* %new_rtx.0, i32 0) #7, !dbg !8815
  %arrayidx69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 2, !dbg !8816
  %rt_int = bitcast i64* %arrayidx69 to i32*, !dbg !8816
  %13 = load i32, i32* %rt_int, align 8, !dbg !8816
  %arrayidx72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 1, i32 0, i32 2, !dbg !8817
  %rt_int73 = bitcast i64* %arrayidx72 to i32*, !dbg !8817
  store i32 %13, i32* %rt_int73, align 8, !dbg !8818
  %bf.load74 = load i32, i32* %0, align 8, !dbg !8819
  %bf.clear76 = and i32 %bf.load74, 1073741824, !dbg !8819
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_rtx.0, i64 0, i32 0, !dbg !8820
  %bf.load77 = load i32, i32* %14, align 8, !dbg !8821
  %bf.clear80 = and i32 %bf.load77, -1073741825, !dbg !8821
  %bf.set81 = or i32 %bf.clear80, %bf.clear76, !dbg !8821
  store i32 %bf.set81, i32* %14, align 8, !dbg !8821
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8822
  %15 = getelementptr inbounds %union.u, %union.u* %u82, i64 1, i32 0, i32 0, i64 2, !dbg !8822
  br label %for.cond, !dbg !8824

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %link.0.in.in = phi %union.rtunion_def* [ %15, %sw.epilog ], [ %18, %for.inc ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !8825
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %tobool86 = icmp eq %struct.rtx_def* %link.0, null, !dbg !8826
  br i1 %tobool86, label %for.end, label %for.body, !dbg !8826

for.body:                                         ; preds = %for.cond
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !8827
  %bf.load87 = load i32, i32* %16, align 8, !dbg !8827
  %bf.clear89 = and i32 %bf.load87, 16711680, !dbg !8827
  %cmp = icmp eq i32 %bf.clear89, 655360, !dbg !8830
  br i1 %cmp, label %for.inc, label %if.then90, !dbg !8831

if.then90:                                        ; preds = %for.body
  %bf.clear92 = and i32 %bf.load87, 65535, !dbg !8832
  %cmp93 = icmp eq i32 %bf.clear92, 3, !dbg !8835
  %bf.lshr96 = lshr i32 %bf.load87, 16, !dbg !8836
  %bf.clear97 = and i32 %bf.lshr96, 255, !dbg !8836
  %arrayidx100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8836
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !8836
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !8836
  br i1 %cmp93, label %if.then94, label %if.else, !dbg !8837

if.then94:                                        ; preds = %if.then90
  %call102 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %17) #8, !dbg !8838
  tail call void @add_reg_note(%struct.rtx_def* %new_rtx.0, i32 %bf.clear97, %struct.rtx_def* %call102) #7, !dbg !8839
  br label %for.inc, !dbg !8839

if.else:                                          ; preds = %if.then90
  tail call void @add_reg_note(%struct.rtx_def* %new_rtx.0, i32 %bf.clear97, %struct.rtx_def* %17) #7, !dbg !8840
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then94
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8841
  br label %for.cond, !dbg !8842, !llvm.loop !8843

for.end:                                          ; preds = %for.cond
  %19 = getelementptr inbounds %union.u, %union.u* %u82, i64 1, i32 0, i32 0, i64 1, !dbg !8845
  %rt_int119 = bitcast %union.rtunion_def* %19 to i32*, !dbg !8845
  %20 = load i32, i32* %rt_int119, align 8, !dbg !8845
  %21 = getelementptr inbounds %union.u, %union.u* %u63, i64 1, i32 0, i32 0, i64 1, !dbg !8846
  %rt_int123 = bitcast %union.rtunion_def* %21 to i32*, !dbg !8846
  store i32 %20, i32* %rt_int123, align 8, !dbg !8847
  ret %struct.rtx_def* %new_rtx.0, !dbg !8848
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_hard_reg_clobber(i32 %mode, i32 %regno) local_unnamed_addr #5 !dbg !8849 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %regno, metadata !8852, metadata !DIExpression()), !dbg !8853
  %idxprom = zext i32 %mode to i64, !dbg !8854
  %idxprom1 = zext i32 %regno to i64, !dbg !8854
  %arrayidx2 = getelementptr inbounds [87 x [53 x %struct.rtx_def*]], [87 x [53 x %struct.rtx_def*]]* @hard_reg_clobbers, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !8854
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8, !dbg !8854
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !8854
  br i1 %tobool, label %if.else, label %if.then, !dbg !8856

if.then:                                          ; preds = %entry
  br label %return, !dbg !8857

if.else:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %regno) #8, !dbg !8858
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %call) #7, !dbg !8858
  store %struct.rtx_def* %call7, %struct.rtx_def** %arrayidx2, align 8, !dbg !8859
  br label %return, !dbg !8860

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call7, %if.else ], !dbg !8861
  ret %struct.rtx_def* %retval.0, !dbg !8862
}

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

declare dso_local void @gt_ggc_mx_rtx_def(i8*) #2

declare dso_local void @gt_pch_nx_rtx_def(i8*) #2

declare dso_local i32 @ggc_marked_p(i8*) #2

declare dso_local void @gt_ggc_mx_reg_attrs(i8*) #2

declare dso_local void @gt_pch_nx_reg_attrs(i8*) #2

declare dso_local void @gt_ggc_mx_mem_attrs(i8*) #2

declare dso_local void @gt_pch_nx_mem_attrs(i8*) #2

declare dso_local void @gt_ggc_m_P7rtx_def4htab(i8*) #2

declare dso_local void @gt_pch_n_P7rtx_def4htab(i8*) #2

declare dso_local void @gt_ggc_m_P9reg_attrs4htab(i8*) #2

declare dso_local void @gt_pch_n_P9reg_attrs4htab(i8*) #2

declare dso_local void @gt_ggc_m_P9mem_attrs4htab(i8*) #2

declare dso_local void @gt_pch_n_P9mem_attrs4htab(i8*) #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @constant_address_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @real_hash(%struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_identical(%struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local i32 @fixed_hash(%struct.fixed_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @fixed_identical(%struct.fixed_value*, %struct.fixed_value*) local_unnamed_addr #2

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2176, !2177, !2178}
!llvm.ident = !{!2179}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "split_branch_probability", scope: !2, file: !3, line: 202, type: !778, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !775, globals: !1844, nameTableKind: None)
!3 = !DIFile(filename: "emit-rtl.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !399, !542, !549, !725, !759}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !378, line: 36, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398}
!380 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !400, line: 45, baseType: !7, size: 32, elements: !401)
!400 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!401 = !{!402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541}
!402 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!403 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!404 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!405 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!406 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!407 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!409 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!410 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!411 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!412 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!413 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!414 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!415 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!416 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!417 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!418 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!419 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!420 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!421 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!422 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!423 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!424 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!425 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!426 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!427 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!428 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!429 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!430 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!431 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!432 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!433 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!434 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!435 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!436 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!437 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!438 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!439 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!440 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!441 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!442 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!443 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!444 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!445 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!446 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!447 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!448 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!449 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!450 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!451 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!452 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!453 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!454 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!455 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!456 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!457 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!458 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!459 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!460 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!461 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!462 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!463 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!464 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!465 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!466 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!467 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!468 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!469 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!470 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!471 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!472 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!473 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!474 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!475 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!476 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!477 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!478 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!479 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!480 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!481 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!482 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!483 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!484 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!485 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!486 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!487 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!488 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!489 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!490 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!491 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!492 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!493 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!494 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!495 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!496 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!497 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!498 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!499 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!500 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!501 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!502 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!503 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!504 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!505 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!506 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!507 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!508 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!509 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!510 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!511 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!512 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!513 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!514 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!515 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!516 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!517 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!518 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!519 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!520 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!521 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!522 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!523 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!524 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!525 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!526 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!527 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!528 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!529 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!530 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!531 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!532 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!533 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!534 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!535 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!536 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!537 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!538 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!539 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!540 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!541 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!542 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !543, line: 104, baseType: !7, size: 32, elements: !544)
!543 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!544 = !{!545, !546, !547, !548}
!545 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!546 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!547 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!548 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !550, line: 74, baseType: !7, size: 32, elements: !551)
!550 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!551 = !{!552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724}
!552 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!724 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !400, line: 836, baseType: !7, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758}
!727 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!728 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!729 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!730 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!731 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!732 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!733 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!734 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!735 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!736 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!737 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!738 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!739 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!740 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!741 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!742 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!743 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!744 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!745 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!746 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!747 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!748 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!749 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!750 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!751 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!752 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!753 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!754 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!755 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!756 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!757 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!758 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!759 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !400, line: 956, baseType: !7, size: 32, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774}
!761 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!762 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!763 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!764 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!765 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!766 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!767 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!768 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!769 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!770 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!771 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!772 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!773 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!774 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!775 = !{!776, !777, !778, !779, !782, !783, !785, !787, !377, !1823, !7, !5, !399, !815, !780, !1824, !183, !903, !1025, !857, !874, !725, !1825, !1781, !1770, !1831, !1834, !1836, !1838, !1840, !1291, !1842}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!778 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !786, line: 47, baseType: !7)
!786 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !788, line: 50, baseType: !789)
!788 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !400, line: 240, size: 384, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !790, file: !400, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !790, file: !400, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !790, file: !400, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !790, file: !400, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !790, file: !400, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !790, file: !400, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !790, file: !400, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !790, file: !400, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !790, file: !400, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !790, file: !400, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !790, file: !400, line: 321, baseType: !803, size: 320, offset: 64)
!803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !400, line: 315, size: 320, elements: !804)
!804 = !{!805, !1790, !1792, !1821, !1822}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !803, file: !400, line: 316, baseType: !806, size: 64)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 64, elements: !822)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !400, line: 183, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !400, line: 166, size: 64, elements: !809)
!809 = !{!810, !811, !812, !813, !814, !824, !825, !837, !840, !902, !1768, !1769, !1780, !1787}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !808, file: !400, line: 168, baseType: !778, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !808, file: !400, line: 169, baseType: !7, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !808, file: !400, line: 170, baseType: !783, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !808, file: !400, line: 171, baseType: !787, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !808, file: !400, line: 172, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !788, line: 53, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !400, line: 359, size: 128, elements: !818)
!818 = !{!819, !820}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !817, file: !400, line: 360, baseType: !778, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !817, file: !400, line: 361, baseType: !821, size: 64, offset: 64)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !822)
!822 = !{!823}
!823 = !DISubrange(count: 1)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !808, file: !400, line: 173, baseType: !5, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !808, file: !400, line: 174, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !400, line: 133, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 115, size: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !827, file: !400, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !827, file: !400, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !827, file: !400, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !827, file: !400, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !827, file: !400, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !827, file: !400, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !827, file: !400, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !827, file: !400, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !808, file: !400, line: 175, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !400, line: 175, flags: DIFlagFwdDecl)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !808, file: !400, line: 176, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !843, line: 75, size: 256, elements: !844)
!843 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!844 = !{!845, !860, !861, !862}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !842, file: !843, line: 76, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !843, line: 68, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !843, line: 63, size: 320, elements: !849)
!849 = !{!850, !852, !853, !854}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !848, file: !843, line: 64, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !848, file: !843, line: 65, baseType: !851, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !848, file: !843, line: 66, baseType: !7, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !848, file: !843, line: 67, baseType: !855, size: 128, offset: 192)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !858)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !843, line: 29, baseType: !857)
!857 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!858 = !{!859}
!859 = !DISubrange(count: 2)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !842, file: !843, line: 77, baseType: !846, size: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !842, file: !843, line: 78, baseType: !7, size: 32, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !842, file: !843, line: 79, baseType: !863, size: 64, offset: 192)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !843, line: 49, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !843, line: 45, size: 832, elements: !866)
!866 = !{!867, !868, !869}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !865, file: !843, line: 46, baseType: !851, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !865, file: !843, line: 47, baseType: !841, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !865, file: !843, line: 48, baseType: !870, size: 704, offset: 128)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !871, line: 164, size: 704, elements: !872)
!871 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!872 = !{!873, !875, !885, !886, !887, !888, !889, !890, !894, !898, !899, !900, !901}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !870, file: !871, line: 166, baseType: !874, size: 64)
!874 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !870, file: !871, line: 167, baseType: !876, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !871, line: 157, size: 192, elements: !878)
!878 = !{!879, !880, !881}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !877, file: !871, line: 159, baseType: !780, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !877, file: !871, line: 160, baseType: !876, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !877, file: !871, line: 161, baseType: !882, size: 32, offset: 128)
!882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 32, elements: !883)
!883 = !{!884}
!884 = !DISubrange(count: 4)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !870, file: !871, line: 168, baseType: !780, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !870, file: !871, line: 169, baseType: !780, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !870, file: !871, line: 170, baseType: !780, size: 64, offset: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !870, file: !871, line: 171, baseType: !874, size: 64, offset: 320)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !870, file: !871, line: 172, baseType: !778, size: 32, offset: 384)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !870, file: !871, line: 176, baseType: !891, size: 64, offset: 448)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!876, !782, !874}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !870, file: !871, line: 177, baseType: !895, size: 64, offset: 512)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !782, !876}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !870, file: !871, line: 178, baseType: !782, size: 64, offset: 576)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !870, file: !871, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !870, file: !871, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !870, file: !871, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !808, file: !400, line: 177, baseType: !903, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !788, line: 56, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !906)
!906 = !{!907, !940, !946, !957, !976, !987, !992, !999, !1005, !1018, !1030, !1068, !1073, !1101, !1109, !1110, !1115, !1124, !1130, !1135, !1139, !1143, !1392, !1441, !1447, !1454, !1461, !1487, !1512, !1529, !1541, !1563, !1578, !1750}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !905, file: !151, line: 3372, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !908, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !908, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !908, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !908, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !908, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !908, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !908, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !908, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !908, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !908, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !908, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !908, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !908, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !908, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !908, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !908, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !908, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !908, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !908, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !908, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !908, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !908, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !908, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !908, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !908, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !908, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !908, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !908, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !908, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !908, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !905, file: !151, line: 3373, baseType: !941, size: 192)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !942)
!942 = !{!943, !944, !945}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !941, file: !151, line: 403, baseType: !908, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !941, file: !151, line: 404, baseType: !903, size: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !941, file: !151, line: 405, baseType: !903, size: 64, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !905, file: !151, line: 3374, baseType: !947, size: 320)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !947, file: !151, line: 1385, baseType: !941, size: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !947, file: !151, line: 1386, baseType: !951, size: 128, offset: 192)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !952, line: 58, baseType: !953)
!952 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !952, line: 54, size: 128, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !953, file: !952, line: 56, baseType: !857, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !953, file: !952, line: 57, baseType: !874, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !905, file: !151, line: 3375, baseType: !958, size: 256)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !959)
!959 = !{!960, !961}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !958, file: !151, line: 1398, baseType: !941, size: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !958, file: !151, line: 1399, baseType: !962, size: 64, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !964, line: 52, size: 256, elements: !965)
!964 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!965 = !{!966, !967, !968, !969, !970, !971, !972}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !963, file: !964, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !963, file: !964, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !963, file: !964, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !963, file: !964, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !963, file: !964, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !963, file: !964, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !963, file: !964, line: 62, baseType: !973, size: 192, offset: 64)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 192, elements: !974)
!974 = !{!975}
!975 = !DISubrange(count: 3)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !905, file: !151, line: 3376, baseType: !977, size: 256)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !978)
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !977, file: !151, line: 1409, baseType: !941, size: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !977, file: !151, line: 1410, baseType: !981, size: 64, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !983, line: 27, size: 192, elements: !984)
!983 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !982, file: !983, line: 29, baseType: !951, size: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !982, file: !983, line: 30, baseType: !5, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !905, file: !151, line: 3377, baseType: !988, size: 256)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !989)
!989 = !{!990, !991}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !988, file: !151, line: 1438, baseType: !941, size: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !988, file: !151, line: 1439, baseType: !903, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !905, file: !151, line: 3378, baseType: !993, size: 256)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !994)
!994 = !{!995, !996, !997}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !993, file: !151, line: 1419, baseType: !941, size: 192)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !993, file: !151, line: 1420, baseType: !778, size: 32, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !993, file: !151, line: 1421, baseType: !998, size: 8, offset: 224)
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 8, elements: !822)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !905, file: !151, line: 3379, baseType: !1000, size: 320)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1000, file: !151, line: 1429, baseType: !941, size: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1000, file: !151, line: 1430, baseType: !903, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1000, file: !151, line: 1431, baseType: !903, size: 64, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !905, file: !151, line: 3380, baseType: !1006, size: 320)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1006, file: !151, line: 1461, baseType: !941, size: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1006, file: !151, line: 1462, baseType: !1010, size: 128, offset: 192)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1011, line: 31, size: 128, elements: !1012)
!1011 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1012 = !{!1013, !1016, !1017}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1010, file: !1011, line: 32, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1010, file: !1011, line: 33, baseType: !7, size: 32, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1010, file: !1011, line: 34, baseType: !7, size: 32, offset: 96)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !905, file: !151, line: 3381, baseType: !1019, size: 384)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !1020)
!1020 = !{!1021, !1022, !1027, !1028, !1029}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1019, file: !151, line: 2508, baseType: !941, size: 192)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1019, file: !151, line: 2509, baseType: !1023, size: 32, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1024, line: 58, baseType: !1025)
!1024 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1026, line: 44, baseType: !7)
!1026 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1019, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1019, file: !151, line: 2511, baseType: !903, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1019, file: !151, line: 2512, baseType: !903, size: 64, offset: 320)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !905, file: !151, line: 3382, baseType: !1031, size: 896)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1031, file: !151, line: 2653, baseType: !1019, size: 384)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1031, file: !151, line: 2654, baseType: !903, size: 64, offset: 384)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1031, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1031, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1031, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1031, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1031, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1031, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1031, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1031, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1031, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1031, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1031, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1031, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1031, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1031, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1031, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1031, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1031, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1031, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1031, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1031, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1031, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1031, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1031, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1031, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1031, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1031, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1031, file: !151, line: 2705, baseType: !903, size: 64, offset: 576)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1031, file: !151, line: 2706, baseType: !903, size: 64, offset: 640)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1031, file: !151, line: 2707, baseType: !903, size: 64, offset: 704)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1031, file: !151, line: 2708, baseType: !903, size: 64, offset: 768)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1031, file: !151, line: 2711, baseType: !1066, size: 64, offset: 832)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !905, file: !151, line: 3383, baseType: !1069, size: 960)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1069, file: !151, line: 2757, baseType: !1031, size: 896)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1069, file: !151, line: 2758, baseType: !787, size: 64, offset: 896)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !905, file: !151, line: 3384, baseType: !1074, size: 1472)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1075)
!1075 = !{!1076, !1097, !1098, !1099, !1100}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1074, file: !151, line: 3115, baseType: !1077, size: 1216)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1078)
!1078 = !{!1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1077, file: !151, line: 2985, baseType: !1069, size: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1077, file: !151, line: 2986, baseType: !903, size: 64, offset: 960)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1077, file: !151, line: 2987, baseType: !903, size: 64, offset: 1024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1077, file: !151, line: 2988, baseType: !903, size: 64, offset: 1088)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1077, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1077, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1077, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1077, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1077, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1077, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1077, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1077, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1077, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1077, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1077, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1077, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1077, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1077, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1074, file: !151, line: 3117, baseType: !903, size: 64, offset: 1216)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1074, file: !151, line: 3119, baseType: !903, size: 64, offset: 1280)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1074, file: !151, line: 3121, baseType: !903, size: 64, offset: 1344)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1074, file: !151, line: 3123, baseType: !903, size: 64, offset: 1408)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !905, file: !151, line: 3385, baseType: !1102, size: 1088)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1103)
!1103 = !{!1104, !1105, !1106}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !151, line: 2875, baseType: !1069, size: 960)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1102, file: !151, line: 2876, baseType: !787, size: 64, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1102, file: !151, line: 2877, baseType: !1107, size: 64, offset: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !905, file: !151, line: 3386, baseType: !1077, size: 1216)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !905, file: !151, line: 3387, baseType: !1111, size: 1280)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1112)
!1112 = !{!1113, !1114}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !151, line: 3094, baseType: !1077, size: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1111, file: !151, line: 3095, baseType: !1107, size: 64, offset: 1216)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !905, file: !151, line: 3388, baseType: !1116, size: 1216)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1116, file: !151, line: 2825, baseType: !1031, size: 896)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1116, file: !151, line: 2827, baseType: !903, size: 64, offset: 896)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1116, file: !151, line: 2828, baseType: !903, size: 64, offset: 960)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1116, file: !151, line: 2829, baseType: !903, size: 64, offset: 1024)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1116, file: !151, line: 2830, baseType: !903, size: 64, offset: 1088)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1116, file: !151, line: 2831, baseType: !903, size: 64, offset: 1152)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !905, file: !151, line: 3389, baseType: !1125, size: 1024)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1125, file: !151, line: 2851, baseType: !1069, size: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1125, file: !151, line: 2852, baseType: !778, size: 32, offset: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1125, file: !151, line: 2853, baseType: !778, size: 32, offset: 992)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !905, file: !151, line: 3390, baseType: !1131, size: 1024)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1131, file: !151, line: 2858, baseType: !1069, size: 960)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1131, file: !151, line: 2859, baseType: !1107, size: 64, offset: 960)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !905, file: !151, line: 3391, baseType: !1136, size: 960)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1137)
!1137 = !{!1138}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1136, file: !151, line: 2863, baseType: !1069, size: 960)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !905, file: !151, line: 3392, baseType: !1140, size: 1472)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1141)
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1140, file: !151, line: 3305, baseType: !1074, size: 1472)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !905, file: !151, line: 3393, baseType: !1144, size: 1792)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1145)
!1145 = !{!1146, !1147, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1144, file: !151, line: 3249, baseType: !1074, size: 1472)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1144, file: !151, line: 3251, baseType: !1148, size: 64, offset: 1472)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1150, line: 463, size: 1152, elements: !1151)
!1150 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1151 = !{!1152, !1155, !1259, !1260, !1263, !1266, !1316, !1317, !1318, !1319, !1320, !1344, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1149, file: !1150, line: 464, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1150, line: 464, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1149, file: !1150, line: 467, baseType: !1156, size: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1158)
!1158 = !{!1159, !1234, !1235, !1248, !1249, !1250, !1251, !1252, !1253, !1255, !1257, !1258}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1157, file: !135, line: 377, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !788, line: 111, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1163)
!1163 = !{!1164, !1199, !1200, !1201, !1204, !1208, !1209, !1210, !1228, !1229, !1230, !1231, !1232, !1233}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1162, file: !135, line: 219, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1168)
!1168 = !{!1169}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1167, file: !135, line: 151, baseType: !1170, size: 128)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1172)
!1172 = !{!1173, !1174, !1175}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1171, file: !135, line: 150, baseType: !7, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1171, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1171, file: !135, line: 150, baseType: !1176, size: 64, offset: 64)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 64, elements: !822)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !788, line: 108, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1179, file: !135, line: 124, baseType: !1161, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1179, file: !135, line: 125, baseType: !1161, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1179, file: !135, line: 131, baseType: !1184, size: 64, offset: 128)
!1184 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1185)
!1185 = !{!1186, !1190}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1184, file: !135, line: 129, baseType: !1187, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !788, line: 66, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !788, line: 65, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1184, file: !135, line: 130, baseType: !787, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1179, file: !135, line: 134, baseType: !782, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1179, file: !135, line: 137, baseType: !903, size: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1179, file: !135, line: 138, baseType: !1023, size: 32, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1179, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1179, file: !135, line: 144, baseType: !778, size: 32, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1179, file: !135, line: 145, baseType: !778, size: 32, offset: 416)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1179, file: !135, line: 146, baseType: !1198, size: 64, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !874)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1162, file: !135, line: 220, baseType: !1165, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1162, file: !135, line: 223, baseType: !782, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1162, file: !135, line: 226, baseType: !1202, size: 64, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1162, file: !135, line: 229, baseType: !1205, size: 128, offset: 256)
!1205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1206, size: 128, elements: !858)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1162, file: !135, line: 232, baseType: !1161, size: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1162, file: !135, line: 233, baseType: !1161, size: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1162, file: !135, line: 238, baseType: !1211, size: 64, offset: 512)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1212)
!1212 = !{!1213, !1219}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1211, file: !135, line: 236, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1215, file: !135, line: 275, baseType: !1187, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1215, file: !135, line: 278, baseType: !1187, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1211, file: !135, line: 237, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1221, file: !135, line: 261, baseType: !787, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1221, file: !135, line: 262, baseType: !787, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1221, file: !135, line: 266, baseType: !787, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1221, file: !135, line: 267, baseType: !787, size: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1221, file: !135, line: 270, baseType: !778, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1162, file: !135, line: 241, baseType: !1198, size: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1162, file: !135, line: 244, baseType: !778, size: 32, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1162, file: !135, line: 247, baseType: !778, size: 32, offset: 672)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1162, file: !135, line: 250, baseType: !778, size: 32, offset: 704)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1162, file: !135, line: 253, baseType: !778, size: 32, offset: 736)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1162, file: !135, line: 256, baseType: !778, size: 32, offset: 768)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1157, file: !135, line: 378, baseType: !1160, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1157, file: !135, line: 381, baseType: !1236, size: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1238, file: !135, line: 282, baseType: !1241, size: 128)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1243)
!1243 = !{!1244, !1245, !1246}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1242, file: !135, line: 281, baseType: !7, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1242, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1242, file: !135, line: 281, baseType: !1247, size: 64, offset: 64)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1160, size: 64, elements: !822)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1157, file: !135, line: 384, baseType: !778, size: 32, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1157, file: !135, line: 387, baseType: !778, size: 32, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1157, file: !135, line: 390, baseType: !778, size: 32, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1157, file: !135, line: 394, baseType: !1236, size: 64, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1157, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1157, file: !135, line: 399, baseType: !1254, size: 64, offset: 416)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !858)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1157, file: !135, line: 402, baseType: !1256, size: 64, offset: 480)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !858)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1157, file: !135, line: 406, baseType: !778, size: 32, offset: 544)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1157, file: !135, line: 409, baseType: !778, size: 32, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1149, file: !1150, line: 470, baseType: !1188, size: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1149, file: !1150, line: 473, baseType: !1261, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1150, line: 166, flags: DIFlagFwdDecl)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1149, file: !1150, line: 476, baseType: !1264, size: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1150, line: 476, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1149, file: !1150, line: 479, baseType: !1267, size: 64, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !786, line: 144, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !786, line: 100, size: 896, elements: !1270)
!1270 = !{!1271, !1278, !1283, !1288, !1290, !1293, !1294, !1295, !1296, !1297, !1302, !1304, !1305, !1310, !1315}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1269, file: !786, line: 102, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !786, line: 52, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!785, !1276}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1269, file: !786, line: 105, baseType: !1279, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !786, line: 59, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!778, !1276, !1276}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1269, file: !786, line: 108, baseType: !1284, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !786, line: 63, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !782}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1269, file: !786, line: 111, baseType: !1289, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1269, file: !786, line: 114, baseType: !1291, size: 64, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1292, line: 46, baseType: !857)
!1292 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1269, file: !786, line: 117, baseType: !1291, size: 64, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1269, file: !786, line: 120, baseType: !1291, size: 64, offset: 384)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1269, file: !786, line: 124, baseType: !7, size: 32, offset: 448)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1269, file: !786, line: 128, baseType: !7, size: 32, offset: 480)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1269, file: !786, line: 131, baseType: !1298, size: 64, offset: 512)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !786, line: 75, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!782, !1291, !1291}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1269, file: !786, line: 132, baseType: !1303, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !786, line: 78, baseType: !1285)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1269, file: !786, line: 135, baseType: !782, size: 64, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1269, file: !786, line: 136, baseType: !1306, size: 64, offset: 704)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !786, line: 82, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!782, !782, !1291, !1291}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1269, file: !786, line: 137, baseType: !1311, size: 64, offset: 768)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !786, line: 83, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !782, !782}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1269, file: !786, line: 141, baseType: !7, size: 32, offset: 832)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1149, file: !1150, line: 484, baseType: !903, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1149, file: !1150, line: 488, baseType: !903, size: 64, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1149, file: !1150, line: 493, baseType: !903, size: 64, offset: 512)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1149, file: !1150, line: 496, baseType: !903, size: 64, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1149, file: !1150, line: 501, baseType: !1321, size: 64, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1323)
!1323 = !{!1324, !1327, !1328, !1329, !1330, !1332, !1333, !1338, !1339, !1340, !1341, !1342, !1343}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1322, file: !146, line: 2356, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1322, file: !146, line: 2357, baseType: !783, size: 64, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1322, file: !146, line: 2358, baseType: !778, size: 32, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1322, file: !146, line: 2359, baseType: !778, size: 32, offset: 160)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1322, file: !146, line: 2360, baseType: !1331, size: 128, offset: 192)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !883)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1322, file: !146, line: 2364, baseType: !778, size: 32, offset: 320)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1322, file: !146, line: 2367, baseType: !1334, size: 128, offset: 384)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1334, file: !146, line: 2351, baseType: !787, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1334, file: !146, line: 2352, baseType: !874, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1322, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1322, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1322, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1322, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1322, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1322, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1149, file: !1150, line: 504, baseType: !1345, size: 64, offset: 704)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1150, line: 504, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1149, file: !1150, line: 507, baseType: !1267, size: 64, offset: 768)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1149, file: !1150, line: 510, baseType: !778, size: 32, offset: 832)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1149, file: !1150, line: 513, baseType: !778, size: 32, offset: 864)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1149, file: !1150, line: 516, baseType: !1023, size: 32, offset: 896)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1149, file: !1150, line: 519, baseType: !1023, size: 32, offset: 928)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1149, file: !1150, line: 522, baseType: !7, size: 32, offset: 960)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1149, file: !1150, line: 523, baseType: !7, size: 32, offset: 992)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1149, file: !1150, line: 528, baseType: !783, size: 64, offset: 1024)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1149, file: !1150, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1149, file: !1150, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1149, file: !1150, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1149, file: !1150, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1149, file: !1150, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1149, file: !1150, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1149, file: !1150, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1149, file: !1150, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1149, file: !1150, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1149, file: !1150, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1149, file: !1150, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1149, file: !1150, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1149, file: !1150, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1149, file: !1150, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1149, file: !1150, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1149, file: !1150, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1144, file: !151, line: 3254, baseType: !903, size: 64, offset: 1536)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1144, file: !151, line: 3257, baseType: !903, size: 64, offset: 1600)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1144, file: !151, line: 3258, baseType: !903, size: 64, offset: 1664)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1144, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1144, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1144, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1144, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1144, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1144, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1144, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1144, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1144, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1144, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1144, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1144, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1144, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1144, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1144, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1144, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1144, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1144, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !905, file: !151, line: 3394, baseType: !1393, size: 1344)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1420, !1421, !1422, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1393, file: !151, line: 2280, baseType: !941, size: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1393, file: !151, line: 2281, baseType: !903, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1393, file: !151, line: 2282, baseType: !903, size: 64, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1393, file: !151, line: 2283, baseType: !903, size: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1393, file: !151, line: 2284, baseType: !903, size: 64, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1393, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1393, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1393, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1393, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1393, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1393, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1393, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1393, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1393, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1393, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1393, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1393, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1393, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1393, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1393, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1393, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1393, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1393, file: !151, line: 2306, baseType: !1418, size: 32, offset: 544)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1419, line: 31, baseType: !778)
!1419 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1393, file: !151, line: 2307, baseType: !903, size: 64, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1393, file: !151, line: 2308, baseType: !903, size: 64, offset: 640)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1393, file: !151, line: 2314, baseType: !1423, size: 64, offset: 704)
!1423 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1424)
!1424 = !{!1425, !1426, !1427}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1423, file: !151, line: 2310, baseType: !778, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1423, file: !151, line: 2311, baseType: !783, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1423, file: !151, line: 2312, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1393, file: !151, line: 2315, baseType: !903, size: 64, offset: 768)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1393, file: !151, line: 2316, baseType: !903, size: 64, offset: 832)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1393, file: !151, line: 2317, baseType: !903, size: 64, offset: 896)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1393, file: !151, line: 2318, baseType: !903, size: 64, offset: 960)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1393, file: !151, line: 2319, baseType: !903, size: 64, offset: 1024)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1393, file: !151, line: 2320, baseType: !903, size: 64, offset: 1088)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1393, file: !151, line: 2321, baseType: !903, size: 64, offset: 1152)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1393, file: !151, line: 2322, baseType: !903, size: 64, offset: 1216)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1393, file: !151, line: 2324, baseType: !1439, size: 64, offset: 1280)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !905, file: !151, line: 3395, baseType: !1442, size: 320)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1443)
!1443 = !{!1444, !1445, !1446}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1442, file: !151, line: 1470, baseType: !941, size: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1442, file: !151, line: 1471, baseType: !903, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1442, file: !151, line: 1472, baseType: !903, size: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !905, file: !151, line: 3396, baseType: !1448, size: 320)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1449)
!1449 = !{!1450, !1451, !1452}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1448, file: !151, line: 1483, baseType: !941, size: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1448, file: !151, line: 1484, baseType: !778, size: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1448, file: !151, line: 1485, baseType: !1453, size: 64, offset: 256)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !903, size: 64, elements: !822)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !905, file: !151, line: 3397, baseType: !1455, size: 384)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1455, file: !151, line: 1830, baseType: !941, size: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1455, file: !151, line: 1831, baseType: !1023, size: 32, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1455, file: !151, line: 1832, baseType: !903, size: 64, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1455, file: !151, line: 1835, baseType: !1453, size: 64, offset: 320)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !905, file: !151, line: 3398, baseType: !1462, size: 704)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1470, !1471, !1474}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1462, file: !151, line: 1899, baseType: !941, size: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1462, file: !151, line: 1902, baseType: !903, size: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1462, file: !151, line: 1905, baseType: !1467, size: 64, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !788, line: 58, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !788, line: 57, flags: DIFlagFwdDecl)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1462, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1462, file: !151, line: 1911, baseType: !1472, size: 64, offset: 384)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1462, file: !151, line: 1914, baseType: !1475, size: 256, offset: 448)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1476)
!1476 = !{!1477, !1479, !1480, !1485}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1475, file: !151, line: 1884, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1475, file: !151, line: 1885, baseType: !1478, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1475, file: !151, line: 1891, baseType: !1481, size: 64, offset: 128)
!1481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1475, file: !151, line: 1891, size: 64, elements: !1482)
!1482 = !{!1483, !1484}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1481, file: !151, line: 1891, baseType: !1467, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1481, file: !151, line: 1891, baseType: !903, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1475, file: !151, line: 1892, baseType: !1486, size: 64, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !905, file: !151, line: 3399, baseType: !1488, size: 704)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1507, !1508, !1509, !1510, !1511}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1488, file: !151, line: 2009, baseType: !941, size: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1488, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1488, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1488, file: !151, line: 2014, baseType: !1023, size: 32, offset: 224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1488, file: !151, line: 2016, baseType: !903, size: 64, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1488, file: !151, line: 2017, baseType: !1496, size: 64, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1499)
!1499 = !{!1500}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1498, file: !151, line: 183, baseType: !1501, size: 128)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1503)
!1503 = !{!1504, !1505, !1506}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1502, file: !151, line: 182, baseType: !7, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1502, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1502, file: !151, line: 182, baseType: !1453, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1488, file: !151, line: 2019, baseType: !903, size: 64, offset: 384)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1488, file: !151, line: 2020, baseType: !903, size: 64, offset: 448)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1488, file: !151, line: 2021, baseType: !903, size: 64, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1488, file: !151, line: 2022, baseType: !903, size: 64, offset: 576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1488, file: !151, line: 2023, baseType: !903, size: 64, offset: 640)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !905, file: !151, line: 3400, baseType: !1513, size: 832)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1513, file: !151, line: 2431, baseType: !941, size: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1513, file: !151, line: 2433, baseType: !903, size: 64, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1513, file: !151, line: 2434, baseType: !903, size: 64, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1513, file: !151, line: 2435, baseType: !903, size: 64, offset: 320)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1513, file: !151, line: 2436, baseType: !903, size: 64, offset: 384)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1513, file: !151, line: 2437, baseType: !1496, size: 64, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1513, file: !151, line: 2438, baseType: !903, size: 64, offset: 512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1513, file: !151, line: 2440, baseType: !903, size: 64, offset: 576)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1513, file: !151, line: 2441, baseType: !903, size: 64, offset: 640)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1513, file: !151, line: 2443, baseType: !1525, size: 128, offset: 704)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1527)
!1527 = !{!1528}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1526, file: !151, line: 182, baseType: !1501, size: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !905, file: !151, line: 3401, baseType: !1530, size: 320)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1531)
!1531 = !{!1532, !1533, !1540}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1530, file: !151, line: 3329, baseType: !941, size: 192)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1530, file: !151, line: 3330, baseType: !1534, size: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1536)
!1536 = !{!1537, !1538, !1539}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1535, file: !151, line: 3322, baseType: !1534, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1535, file: !151, line: 3323, baseType: !1534, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1535, file: !151, line: 3324, baseType: !903, size: 64, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1530, file: !151, line: 3331, baseType: !1534, size: 64, offset: 256)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !905, file: !151, line: 3402, baseType: !1542, size: 256)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1542, file: !151, line: 1541, baseType: !941, size: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1542, file: !151, line: 1542, baseType: !1546, size: 64, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1549)
!1549 = !{!1550}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1548, file: !151, line: 1538, baseType: !1551, size: 192)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1553)
!1553 = !{!1554, !1555, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1552, file: !151, line: 1537, baseType: !7, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1552, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1552, file: !151, line: 1537, baseType: !1557, size: 128, offset: 64)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1558, size: 128, elements: !822)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1560)
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1559, file: !151, line: 1533, baseType: !903, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1559, file: !151, line: 1534, baseType: !903, size: 64, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !905, file: !151, line: 3403, baseType: !1564, size: 512)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1575, !1576, !1577}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1564, file: !151, line: 1939, baseType: !941, size: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1564, file: !151, line: 1940, baseType: !1023, size: 32, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1564, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1564, file: !151, line: 1946, baseType: !1570, size: 32, offset: 256)
!1570 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1570, file: !151, line: 1943, baseType: !169, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1570, file: !151, line: 1944, baseType: !176, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1570, file: !151, line: 1945, baseType: !183, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1564, file: !151, line: 1950, baseType: !1187, size: 64, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1564, file: !151, line: 1951, baseType: !1187, size: 64, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1564, file: !151, line: 1953, baseType: !1453, size: 64, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !905, file: !151, line: 3404, baseType: !1579, size: 1664)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1579, file: !151, line: 3338, baseType: !941, size: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1579, file: !151, line: 3341, baseType: !1583, size: 1472, offset: 192)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1584, line: 410, size: 1472, elements: !1585)
!1584 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1583, file: !1584, line: 412, baseType: !778, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1583, file: !1584, line: 413, baseType: !778, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1583, file: !1584, line: 414, baseType: !778, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1583, file: !1584, line: 415, baseType: !778, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1583, file: !1584, line: 416, baseType: !778, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1583, file: !1584, line: 417, baseType: !778, size: 32, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1583, file: !1584, line: 418, baseType: !777, size: 8, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1583, file: !1584, line: 419, baseType: !777, size: 8, offset: 200)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1583, file: !1584, line: 420, baseType: !1595, size: 8, offset: 208)
!1595 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1583, file: !1584, line: 421, baseType: !1595, size: 8, offset: 216)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1583, file: !1584, line: 422, baseType: !1595, size: 8, offset: 224)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1583, file: !1584, line: 423, baseType: !1595, size: 8, offset: 232)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1583, file: !1584, line: 424, baseType: !1595, size: 8, offset: 240)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1583, file: !1584, line: 425, baseType: !1595, size: 8, offset: 248)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1583, file: !1584, line: 426, baseType: !1595, size: 8, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1583, file: !1584, line: 427, baseType: !1595, size: 8, offset: 264)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1583, file: !1584, line: 428, baseType: !1595, size: 8, offset: 272)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1583, file: !1584, line: 429, baseType: !1595, size: 8, offset: 280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1583, file: !1584, line: 430, baseType: !1595, size: 8, offset: 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1583, file: !1584, line: 431, baseType: !1595, size: 8, offset: 296)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1583, file: !1584, line: 432, baseType: !1595, size: 8, offset: 304)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1583, file: !1584, line: 433, baseType: !1595, size: 8, offset: 312)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1583, file: !1584, line: 434, baseType: !1595, size: 8, offset: 320)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1583, file: !1584, line: 435, baseType: !1595, size: 8, offset: 328)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1583, file: !1584, line: 436, baseType: !1595, size: 8, offset: 336)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1583, file: !1584, line: 437, baseType: !1595, size: 8, offset: 344)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1583, file: !1584, line: 438, baseType: !1595, size: 8, offset: 352)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1583, file: !1584, line: 439, baseType: !1595, size: 8, offset: 360)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1583, file: !1584, line: 440, baseType: !1595, size: 8, offset: 368)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1583, file: !1584, line: 441, baseType: !1595, size: 8, offset: 376)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1583, file: !1584, line: 442, baseType: !1595, size: 8, offset: 384)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1583, file: !1584, line: 443, baseType: !1595, size: 8, offset: 392)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1583, file: !1584, line: 444, baseType: !1595, size: 8, offset: 400)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1583, file: !1584, line: 445, baseType: !1595, size: 8, offset: 408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1583, file: !1584, line: 446, baseType: !1595, size: 8, offset: 416)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1583, file: !1584, line: 447, baseType: !1595, size: 8, offset: 424)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1583, file: !1584, line: 448, baseType: !1595, size: 8, offset: 432)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1583, file: !1584, line: 449, baseType: !1595, size: 8, offset: 440)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1583, file: !1584, line: 450, baseType: !1595, size: 8, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1583, file: !1584, line: 451, baseType: !1595, size: 8, offset: 456)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1583, file: !1584, line: 452, baseType: !1595, size: 8, offset: 464)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1583, file: !1584, line: 453, baseType: !1595, size: 8, offset: 472)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1583, file: !1584, line: 454, baseType: !1595, size: 8, offset: 480)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1583, file: !1584, line: 455, baseType: !1595, size: 8, offset: 488)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1583, file: !1584, line: 456, baseType: !1595, size: 8, offset: 496)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1583, file: !1584, line: 457, baseType: !1595, size: 8, offset: 504)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1583, file: !1584, line: 458, baseType: !1595, size: 8, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1583, file: !1584, line: 459, baseType: !1595, size: 8, offset: 520)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1583, file: !1584, line: 460, baseType: !1595, size: 8, offset: 528)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1583, file: !1584, line: 461, baseType: !1595, size: 8, offset: 536)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1583, file: !1584, line: 462, baseType: !1595, size: 8, offset: 544)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1583, file: !1584, line: 463, baseType: !1595, size: 8, offset: 552)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1583, file: !1584, line: 464, baseType: !1595, size: 8, offset: 560)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1583, file: !1584, line: 465, baseType: !1595, size: 8, offset: 568)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1583, file: !1584, line: 466, baseType: !1595, size: 8, offset: 576)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1583, file: !1584, line: 467, baseType: !1595, size: 8, offset: 584)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1583, file: !1584, line: 468, baseType: !1595, size: 8, offset: 592)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1583, file: !1584, line: 469, baseType: !1595, size: 8, offset: 600)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1583, file: !1584, line: 470, baseType: !1595, size: 8, offset: 608)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1583, file: !1584, line: 471, baseType: !1595, size: 8, offset: 616)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1583, file: !1584, line: 472, baseType: !1595, size: 8, offset: 624)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1583, file: !1584, line: 473, baseType: !1595, size: 8, offset: 632)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1583, file: !1584, line: 474, baseType: !1595, size: 8, offset: 640)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1583, file: !1584, line: 475, baseType: !1595, size: 8, offset: 648)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1583, file: !1584, line: 476, baseType: !1595, size: 8, offset: 656)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1583, file: !1584, line: 477, baseType: !1595, size: 8, offset: 664)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1583, file: !1584, line: 478, baseType: !1595, size: 8, offset: 672)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1583, file: !1584, line: 479, baseType: !1595, size: 8, offset: 680)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1583, file: !1584, line: 480, baseType: !1595, size: 8, offset: 688)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1583, file: !1584, line: 481, baseType: !1595, size: 8, offset: 696)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1583, file: !1584, line: 482, baseType: !1595, size: 8, offset: 704)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1583, file: !1584, line: 483, baseType: !1595, size: 8, offset: 712)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1583, file: !1584, line: 484, baseType: !1595, size: 8, offset: 720)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1583, file: !1584, line: 485, baseType: !1595, size: 8, offset: 728)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1583, file: !1584, line: 486, baseType: !1595, size: 8, offset: 736)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1583, file: !1584, line: 487, baseType: !1595, size: 8, offset: 744)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1583, file: !1584, line: 488, baseType: !1595, size: 8, offset: 752)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1583, file: !1584, line: 489, baseType: !1595, size: 8, offset: 760)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1583, file: !1584, line: 490, baseType: !1595, size: 8, offset: 768)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1583, file: !1584, line: 491, baseType: !1595, size: 8, offset: 776)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1583, file: !1584, line: 492, baseType: !1595, size: 8, offset: 784)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1583, file: !1584, line: 493, baseType: !1595, size: 8, offset: 792)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1583, file: !1584, line: 494, baseType: !1595, size: 8, offset: 800)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1583, file: !1584, line: 495, baseType: !1595, size: 8, offset: 808)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1583, file: !1584, line: 496, baseType: !1595, size: 8, offset: 816)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1583, file: !1584, line: 497, baseType: !1595, size: 8, offset: 824)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1583, file: !1584, line: 498, baseType: !1595, size: 8, offset: 832)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1583, file: !1584, line: 499, baseType: !1595, size: 8, offset: 840)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1583, file: !1584, line: 500, baseType: !1595, size: 8, offset: 848)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1583, file: !1584, line: 501, baseType: !1595, size: 8, offset: 856)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1583, file: !1584, line: 502, baseType: !1595, size: 8, offset: 864)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1583, file: !1584, line: 503, baseType: !1595, size: 8, offset: 872)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1583, file: !1584, line: 504, baseType: !1595, size: 8, offset: 880)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1583, file: !1584, line: 505, baseType: !1595, size: 8, offset: 888)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1583, file: !1584, line: 506, baseType: !1595, size: 8, offset: 896)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1583, file: !1584, line: 507, baseType: !1595, size: 8, offset: 904)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1583, file: !1584, line: 508, baseType: !1595, size: 8, offset: 912)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1583, file: !1584, line: 509, baseType: !1595, size: 8, offset: 920)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1583, file: !1584, line: 510, baseType: !1595, size: 8, offset: 928)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1583, file: !1584, line: 511, baseType: !1595, size: 8, offset: 936)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1583, file: !1584, line: 512, baseType: !1595, size: 8, offset: 944)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1583, file: !1584, line: 513, baseType: !1595, size: 8, offset: 952)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1583, file: !1584, line: 514, baseType: !1595, size: 8, offset: 960)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1583, file: !1584, line: 515, baseType: !1595, size: 8, offset: 968)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1583, file: !1584, line: 516, baseType: !1595, size: 8, offset: 976)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1583, file: !1584, line: 517, baseType: !1595, size: 8, offset: 984)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1583, file: !1584, line: 518, baseType: !1595, size: 8, offset: 992)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1583, file: !1584, line: 519, baseType: !1595, size: 8, offset: 1000)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1583, file: !1584, line: 520, baseType: !1595, size: 8, offset: 1008)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1583, file: !1584, line: 521, baseType: !1595, size: 8, offset: 1016)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1583, file: !1584, line: 522, baseType: !1595, size: 8, offset: 1024)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1583, file: !1584, line: 523, baseType: !1595, size: 8, offset: 1032)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1583, file: !1584, line: 524, baseType: !1595, size: 8, offset: 1040)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1583, file: !1584, line: 525, baseType: !1595, size: 8, offset: 1048)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1583, file: !1584, line: 526, baseType: !1595, size: 8, offset: 1056)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1583, file: !1584, line: 527, baseType: !1595, size: 8, offset: 1064)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1583, file: !1584, line: 528, baseType: !1595, size: 8, offset: 1072)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1583, file: !1584, line: 529, baseType: !1595, size: 8, offset: 1080)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1583, file: !1584, line: 530, baseType: !1595, size: 8, offset: 1088)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1583, file: !1584, line: 531, baseType: !1595, size: 8, offset: 1096)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1583, file: !1584, line: 532, baseType: !1595, size: 8, offset: 1104)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1583, file: !1584, line: 533, baseType: !1595, size: 8, offset: 1112)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1583, file: !1584, line: 534, baseType: !1595, size: 8, offset: 1120)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1583, file: !1584, line: 535, baseType: !1595, size: 8, offset: 1128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1583, file: !1584, line: 536, baseType: !1595, size: 8, offset: 1136)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1583, file: !1584, line: 537, baseType: !1595, size: 8, offset: 1144)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1583, file: !1584, line: 538, baseType: !1595, size: 8, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1583, file: !1584, line: 539, baseType: !1595, size: 8, offset: 1160)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1583, file: !1584, line: 540, baseType: !1595, size: 8, offset: 1168)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1583, file: !1584, line: 541, baseType: !1595, size: 8, offset: 1176)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1583, file: !1584, line: 542, baseType: !1595, size: 8, offset: 1184)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1583, file: !1584, line: 543, baseType: !1595, size: 8, offset: 1192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1583, file: !1584, line: 544, baseType: !1595, size: 8, offset: 1200)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1583, file: !1584, line: 545, baseType: !1595, size: 8, offset: 1208)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1583, file: !1584, line: 546, baseType: !1595, size: 8, offset: 1216)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1583, file: !1584, line: 547, baseType: !1595, size: 8, offset: 1224)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1583, file: !1584, line: 548, baseType: !1595, size: 8, offset: 1232)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1583, file: !1584, line: 549, baseType: !1595, size: 8, offset: 1240)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1583, file: !1584, line: 550, baseType: !1595, size: 8, offset: 1248)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1583, file: !1584, line: 551, baseType: !1595, size: 8, offset: 1256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1583, file: !1584, line: 552, baseType: !1595, size: 8, offset: 1264)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1583, file: !1584, line: 553, baseType: !1595, size: 8, offset: 1272)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1583, file: !1584, line: 554, baseType: !1595, size: 8, offset: 1280)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1583, file: !1584, line: 555, baseType: !1595, size: 8, offset: 1288)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1583, file: !1584, line: 556, baseType: !1595, size: 8, offset: 1296)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1583, file: !1584, line: 557, baseType: !1595, size: 8, offset: 1304)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1583, file: !1584, line: 558, baseType: !1595, size: 8, offset: 1312)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1583, file: !1584, line: 559, baseType: !1595, size: 8, offset: 1320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1583, file: !1584, line: 560, baseType: !1595, size: 8, offset: 1328)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1583, file: !1584, line: 561, baseType: !1595, size: 8, offset: 1336)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1583, file: !1584, line: 562, baseType: !1595, size: 8, offset: 1344)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1583, file: !1584, line: 563, baseType: !1595, size: 8, offset: 1352)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1583, file: !1584, line: 564, baseType: !1595, size: 8, offset: 1360)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1583, file: !1584, line: 565, baseType: !1595, size: 8, offset: 1368)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1583, file: !1584, line: 566, baseType: !1595, size: 8, offset: 1376)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1583, file: !1584, line: 567, baseType: !1595, size: 8, offset: 1384)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1583, file: !1584, line: 568, baseType: !1595, size: 8, offset: 1392)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1583, file: !1584, line: 569, baseType: !1595, size: 8, offset: 1400)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1583, file: !1584, line: 570, baseType: !1595, size: 8, offset: 1408)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1583, file: !1584, line: 571, baseType: !1595, size: 8, offset: 1416)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1583, file: !1584, line: 572, baseType: !1595, size: 8, offset: 1424)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1583, file: !1584, line: 573, baseType: !1595, size: 8, offset: 1432)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1583, file: !1584, line: 574, baseType: !1595, size: 8, offset: 1440)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !905, file: !151, line: 3405, baseType: !1751, size: 384)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1752)
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1751, file: !151, line: 3353, baseType: !941, size: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1751, file: !151, line: 3356, baseType: !1755, size: 192, offset: 192)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1584, line: 578, size: 192, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1755, file: !1584, line: 580, baseType: !778, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1755, file: !1584, line: 581, baseType: !778, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1755, file: !1584, line: 582, baseType: !778, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1755, file: !1584, line: 583, baseType: !778, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1755, file: !1584, line: 584, baseType: !777, size: 8, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1755, file: !1584, line: 585, baseType: !777, size: 8, offset: 136)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1755, file: !1584, line: 586, baseType: !777, size: 8, offset: 144)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1755, file: !1584, line: 587, baseType: !777, size: 8, offset: 152)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1755, file: !1584, line: 588, baseType: !777, size: 8, offset: 160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1755, file: !1584, line: 589, baseType: !777, size: 8, offset: 168)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1755, file: !1584, line: 590, baseType: !777, size: 8, offset: 176)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !808, file: !400, line: 178, baseType: !1161, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !808, file: !400, line: 179, baseType: !1770, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !400, line: 150, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !400, line: 142, size: 320, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1772, file: !400, line: 144, baseType: !903, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1772, file: !400, line: 145, baseType: !787, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1772, file: !400, line: 146, baseType: !787, size: 64, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1772, file: !400, line: 147, baseType: !1418, size: 32, offset: 192)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1772, file: !400, line: 148, baseType: !7, size: 32, offset: 224)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1772, file: !400, line: 149, baseType: !777, size: 8, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !808, file: !400, line: 180, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !400, line: 162, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !400, line: 159, size: 128, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1783, file: !400, line: 160, baseType: !903, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1783, file: !400, line: 161, baseType: !874, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !808, file: !400, line: 181, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !400, line: 181, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !803, file: !400, line: 317, baseType: !1791, size: 64)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 64, elements: !822)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !803, file: !400, line: 318, baseType: !1793, size: 320)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !400, line: 188, size: 320, elements: !1794)
!1794 = !{!1795, !1797, !1820}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1793, file: !400, line: 190, baseType: !1796, size: 192)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 192, elements: !974)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1793, file: !400, line: 193, baseType: !1798, size: 64, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !400, line: 206, size: 320, elements: !1800)
!1800 = !{!1801, !1805, !1806, !1807, !1819}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1799, file: !400, line: 208, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !788, line: 62, baseType: !1804)
!1804 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !788, line: 61, flags: DIFlagFwdDecl)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1799, file: !400, line: 211, baseType: !7, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1799, file: !400, line: 214, baseType: !874, size: 64, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1799, file: !400, line: 224, baseType: !1808, size: 64, offset: 192)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !400, line: 202, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !400, line: 202, size: 128, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1810, file: !400, line: 202, baseType: !1813, size: 128)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !400, line: 200, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !400, line: 200, size: 128, elements: !1815)
!1815 = !{!1816, !1817, !1818}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1814, file: !400, line: 200, baseType: !7, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1814, file: !400, line: 200, baseType: !7, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1814, file: !400, line: 200, baseType: !821, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1799, file: !400, line: 234, baseType: !1808, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1793, file: !400, line: 197, baseType: !874, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !803, file: !400, line: 319, baseType: !963, size: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !803, file: !400, line: 320, baseType: !982, size: 192)
!1823 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sequence_stack", file: !1150, line: 34, size: 192, elements: !1827)
!1827 = !{!1828, !1829, !1830}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1826, file: !1150, line: 36, baseType: !787, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1826, file: !1150, line: 37, baseType: !787, size: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1826, file: !1150, line: 38, baseType: !1825, size: 64, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !788, line: 51, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!1844 = !{!0, !1845, !1873, !1887, !1889, !1907, !1910, !1913, !1915, !1917, !1919, !1921, !2091, !2093, !2098, !2103, !2108, !2110, !2112, !2114, !2116, !2118, !2120, !2125, !2130, !2132, !2134, !2139, !2141, !2143, !2145, !2147, !2149, !2151, !2153, !2158, !2160, !2162, !2164, !2166, !2168, !2170, !2174}
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "pass_unshare_all_rtl", scope: !2, file: !3, line: 2378, type: !1847, isLocal: false, isDefinition: true)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !543, line: 162, size: 640, elements: !1848)
!1848 = !{!1849}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1847, file: !543, line: 164, baseType: !1850, size: 640)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !543, line: 114, size: 640, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1858, !1862, !1864, !1865, !1866, !1868, !1869, !1870, !1871, !1872}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1850, file: !543, line: 117, baseType: !542, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1850, file: !543, line: 121, baseType: !783, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1850, file: !543, line: 125, baseType: !1855, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!777}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1850, file: !543, line: 130, baseType: !1859, size: 64, offset: 192)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!7}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1850, file: !543, line: 133, baseType: !1863, size: 64, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1850, file: !543, line: 136, baseType: !1863, size: 64, offset: 320)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1850, file: !543, line: 139, baseType: !778, size: 32, offset: 384)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1850, file: !543, line: 143, baseType: !1867, size: 32, offset: 416)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !550, line: 80, baseType: !549)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1850, file: !543, line: 146, baseType: !7, size: 32, offset: 448)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1850, file: !543, line: 147, baseType: !7, size: 32, offset: 480)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1850, file: !543, line: 148, baseType: !7, size: 32, offset: 512)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1850, file: !543, line: 151, baseType: !7, size: 32, offset: 544)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1850, file: !543, line: 152, baseType: !7, size: 32, offset: 576)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_emit_rtl_h", scope: !2, file: !1875, line: 24, type: !1876, isLocal: false, isDefinition: true)
!1875 = !DIFile(filename: "./gt-emit-rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 960, elements: !974)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !1879, line: 69, size: 320, elements: !1880)
!1879 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1880 = !{!1881, !1882, !1883, !1884, !1886}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1878, file: !1879, line: 70, baseType: !782, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1878, file: !1879, line: 71, baseType: !1291, size: 64, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1878, file: !1879, line: 72, baseType: !1291, size: 64, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1878, file: !1879, line: 73, baseType: !1885, size: 64, offset: 192)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !1879, line: 65, baseType: !1285)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1878, file: !1879, line: 74, baseType: !1885, size: 64, offset: 256)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "gt_ggc_rd_gt_emit_rtl_h", scope: !2, file: !1875, line: 42, type: !1876, isLocal: false, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "gt_ggc_rc_gt_emit_rtl_h", scope: !2, file: !1875, line: 48, type: !1891, isLocal: false, isDefinition: true)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 2304, elements: !1905)
!1892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_cache_tab", file: !1879, line: 85, size: 384, elements: !1894)
!1894 = !{!1895, !1897, !1898, !1899, !1900, !1901}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1893, file: !1879, line: 86, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1893, file: !1879, line: 87, baseType: !1291, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1893, file: !1879, line: 88, baseType: !1291, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1893, file: !1879, line: 89, baseType: !1885, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1893, file: !1879, line: 90, baseType: !1885, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "marked_p", scope: !1893, file: !1879, line: 91, baseType: !1902, size: 64, offset: 320)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!778, !1276}
!1905 = !{!1906}
!1906 = !DISubrange(count: 6)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "gt_pch_rc_gt_emit_rtl_h", scope: !2, file: !1875, line: 92, type: !1909, isLocal: false, isDefinition: true)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 1920, elements: !1905)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_emit_rtl_h", scope: !2, file: !1875, line: 131, type: !1912, isLocal: false, isDefinition: true)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 640, elements: !858)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "byte_mode", scope: !2, file: !3, line: 66, type: !5, isLocal: false, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "word_mode", scope: !2, file: !3, line: 67, type: !5, isLocal: false, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "double_mode", scope: !2, file: !3, line: 68, type: !5, isLocal: false, isDefinition: true)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "ptr_mode", scope: !2, file: !3, line: 69, type: !5, isLocal: false, isDefinition: true)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "x_rtl", scope: !2, file: !3, line: 73, type: !1923, isLocal: false, isDefinition: true)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_data", file: !1150, line: 246, size: 3904, elements: !1924)
!1924 = !{!1925, !1934, !1947, !1954, !1982, !1990, !2030, !2031, !2032, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1923, file: !1150, line: 247, baseType: !1926, size: 320)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr_status", file: !1150, line: 101, size: 320, elements: !1927)
!1927 = !{!1928, !1929, !1930, !1931, !1932, !1933}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "x_pending_stack_adjust", scope: !1926, file: !1150, line: 104, baseType: !778, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "x_inhibit_defer_pop", scope: !1926, file: !1150, line: 121, baseType: !778, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "x_stack_pointer_delta", scope: !1926, file: !1150, line: 127, baseType: !778, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "x_saveregs_value", scope: !1926, file: !1150, line: 132, baseType: !787, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "x_apply_args_value", scope: !1926, file: !1150, line: 135, baseType: !787, size: 64, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "x_forced_labels", scope: !1926, file: !1150, line: 138, baseType: !787, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !1923, file: !1150, line: 248, baseType: !1935, size: 448, offset: 320)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emit_status", file: !1150, line: 41, size: 448, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "x_reg_rtx_no", scope: !1935, file: !1150, line: 44, baseType: !778, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "x_first_label_num", scope: !1935, file: !1150, line: 47, baseType: !778, size: 32, offset: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "x_first_insn", scope: !1935, file: !1150, line: 54, baseType: !787, size: 64, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_insn", scope: !1935, file: !1150, line: 55, baseType: !787, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sequence_stack", scope: !1935, file: !1150, line: 61, baseType: !1825, size: 64, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "x_cur_insn_uid", scope: !1935, file: !1150, line: 65, baseType: !778, size: 32, offset: 256)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "x_cur_debug_insn_uid", scope: !1935, file: !1150, line: 69, baseType: !778, size: 32, offset: 288)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_location", scope: !1935, file: !1150, line: 73, baseType: !1023, size: 32, offset: 320)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "regno_pointer_align_length", scope: !1935, file: !1150, line: 79, baseType: !778, size: 32, offset: 352)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "regno_pointer_align", scope: !1935, file: !1150, line: 84, baseType: !776, size: 64, offset: 384)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "varasm", scope: !1923, file: !1150, line: 249, baseType: !1948, size: 128, offset: 768)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varasm_status", file: !1150, line: 190, size: 128, elements: !1949)
!1949 = !{!1950, !1953}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1948, file: !1150, line: 192, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_constant_pool", file: !1150, line: 192, flags: DIFlagFwdDecl)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_constants", scope: !1948, file: !1150, line: 196, baseType: !7, size: 32, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1923, file: !1150, line: 250, baseType: !1955, size: 768, offset: 896)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "incoming_args", file: !1150, line: 200, size: 768, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1981}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pops_args", scope: !1955, file: !1150, line: 204, baseType: !778, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1955, file: !1150, line: 209, baseType: !778, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pretend_args_size", scope: !1955, file: !1150, line: 214, baseType: !778, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "arg_offset_rtx", scope: !1955, file: !1150, line: 218, baseType: !787, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1955, file: !1150, line: 222, baseType: !1962, size: 512, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUMULATIVE_ARGS", file: !146, line: 1598, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ix86_args", file: !146, line: 1579, size: 512, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1963, file: !146, line: 1580, baseType: !778, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !1963, file: !146, line: 1581, baseType: !778, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1963, file: !146, line: 1582, baseType: !778, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "fastcall", scope: !1963, file: !146, line: 1583, baseType: !778, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sse_words", scope: !1963, file: !146, line: 1584, baseType: !778, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sse_nregs", scope: !1963, file: !146, line: 1585, baseType: !778, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "warn_avx", scope: !1963, file: !146, line: 1586, baseType: !778, size: 32, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "warn_sse", scope: !1963, file: !146, line: 1587, baseType: !778, size: 32, offset: 224)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "warn_mmx", scope: !1963, file: !146, line: 1588, baseType: !778, size: 32, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "sse_regno", scope: !1963, file: !146, line: 1589, baseType: !778, size: 32, offset: 288)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_words", scope: !1963, file: !146, line: 1590, baseType: !778, size: 32, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_nregs", scope: !1963, file: !146, line: 1591, baseType: !778, size: 32, offset: 352)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_regno", scope: !1963, file: !146, line: 1592, baseType: !778, size: 32, offset: 384)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_vaarg", scope: !1963, file: !146, line: 1593, baseType: !778, size: 32, offset: 416)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "float_in_sse", scope: !1963, file: !146, line: 1594, baseType: !778, size: 32, offset: 448)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1963, file: !146, line: 1596, baseType: !145, size: 32, offset: 480)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "internal_arg_pointer", scope: !1955, file: !1150, line: 225, baseType: !787, size: 64, offset: 704)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "subsections", scope: !1923, file: !1150, line: 251, baseType: !1983, size: 320, offset: 1664)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function_subsections", file: !1150, line: 229, size: 320, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "hot_section_label", scope: !1983, file: !1150, line: 234, baseType: !783, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cold_section_label", scope: !1983, file: !1150, line: 235, baseType: !783, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "hot_section_end_label", scope: !1983, file: !1150, line: 236, baseType: !783, size: 64, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cold_section_end_label", scope: !1983, file: !1150, line: 237, baseType: !783, size: 64, offset: 192)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "unlikely_text_section_name", scope: !1983, file: !1150, line: 242, baseType: !783, size: 64, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1923, file: !1150, line: 252, baseType: !1991, size: 512, offset: 1984)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_eh", file: !1150, line: 146, size: 512, elements: !1992)
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !2013}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ehr_stackadj", scope: !1991, file: !1150, line: 147, baseType: !787, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ehr_handler", scope: !1991, file: !1150, line: 148, baseType: !787, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "ehr_label", scope: !1991, file: !1150, line: 149, baseType: !787, size: 64, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sjlj_fc", scope: !1991, file: !1150, line: 151, baseType: !787, size: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sjlj_exit_after", scope: !1991, file: !1150, line: 152, baseType: !787, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "action_record_data", scope: !1991, file: !1150, line: 154, baseType: !1999, size: 64, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2001, line: 29, baseType: !2002)
!2001 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2001, line: 29, size: 96, elements: !2003)
!2003 = !{!2004}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2002, file: !2001, line: 29, baseType: !2005, size: 96)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2001, line: 27, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2001, line: 27, size: 96, elements: !2007)
!2007 = !{!2008, !2009, !2010}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2006, file: !2001, line: 27, baseType: !7, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2006, file: !2001, line: 27, baseType: !7, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2006, file: !2001, line: 27, baseType: !2011, size: 8, offset: 64)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2012, size: 8, elements: !822)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2001, line: 26, baseType: !777)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_record", scope: !1991, file: !1150, line: 156, baseType: !2014, size: 128, offset: 384)
!2014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2015, size: 128, elements: !858)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_call_site_record_gc", file: !1150, line: 143, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_call_site_record_gc", file: !1150, line: 143, size: 128, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2017, file: !1150, line: 143, baseType: !2020, size: 128)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_call_site_record_base", file: !1150, line: 142, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_call_site_record_base", file: !1150, line: 142, size: 128, elements: !2022)
!2022 = !{!2023, !2024, !2025}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2021, file: !1150, line: 142, baseType: !7, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2021, file: !1150, line: 142, baseType: !7, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2021, file: !1150, line: 142, baseType: !2026, size: 64, offset: 64)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 64, elements: !822)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "call_site_record", file: !1150, line: 141, baseType: !2028)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "call_site_record_d", file: !1150, line: 141, flags: DIFlagFwdDecl)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "outgoing_args_size", scope: !1923, file: !1150, line: 258, baseType: !778, size: 32, offset: 2496)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "return_rtx", scope: !1923, file: !1150, line: 264, baseType: !787, size: 64, offset: 2560)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "hard_reg_initial_vals", scope: !1923, file: !1150, line: 268, baseType: !2033, size: 64, offset: 2624)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DICompositeType(tag: DW_TAG_structure_type, name: "initial_value_struct", file: !1150, line: 268, flags: DIFlagFwdDecl)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "stack_protect_guard", scope: !1923, file: !1150, line: 272, baseType: !903, size: 64, offset: 2688)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "x_nonlocal_goto_handler_labels", scope: !1923, file: !1150, line: 276, baseType: !787, size: 64, offset: 2752)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "x_return_label", scope: !1923, file: !1150, line: 281, baseType: !787, size: 64, offset: 2816)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "x_naked_return_label", scope: !1923, file: !1150, line: 286, baseType: !787, size: 64, offset: 2880)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "x_stack_slot_list", scope: !1923, file: !1150, line: 290, baseType: !787, size: 64, offset: 2944)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "x_stack_check_probe_note", scope: !1923, file: !1150, line: 293, baseType: !787, size: 64, offset: 3008)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "x_arg_pointer_save_area", scope: !1923, file: !1150, line: 299, baseType: !787, size: 64, offset: 3072)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "drap_reg", scope: !1923, file: !1150, line: 302, baseType: !787, size: 64, offset: 3136)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "x_frame_offset", scope: !1923, file: !1150, line: 307, baseType: !874, size: 64, offset: 3200)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "x_parm_birth_insn", scope: !1923, file: !1150, line: 310, baseType: !787, size: 64, offset: 3264)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "x_used_temp_slots", scope: !1923, file: !1150, line: 313, baseType: !2046, size: 64, offset: 3328)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_temp_slot_p_gc", file: !1150, line: 172, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_temp_slot_p_gc", file: !1150, line: 172, size: 128, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !1150, line: 172, baseType: !2051, size: 128)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_temp_slot_p_base", file: !1150, line: 171, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_temp_slot_p_base", file: !1150, line: 171, size: 128, elements: !2053)
!2053 = !{!2054, !2055, !2056}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2052, file: !1150, line: 171, baseType: !7, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2052, file: !1150, line: 171, baseType: !7, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2052, file: !1150, line: 171, baseType: !2057, size: 64, offset: 64)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 64, elements: !822)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "temp_slot_p", file: !1150, line: 168, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "temp_slot", file: !1150, line: 167, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "x_avail_temp_slots", scope: !1923, file: !1150, line: 316, baseType: !2059, size: 64, offset: 3392)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "x_temp_slot_level", scope: !1923, file: !1150, line: 319, baseType: !778, size: 32, offset: 3456)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "stack_alignment_needed", scope: !1923, file: !1150, line: 323, baseType: !7, size: 32, offset: 3488)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_stack_boundary", scope: !1923, file: !1150, line: 327, baseType: !7, size: 32, offset: 3520)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "parm_stack_boundary", scope: !1923, file: !1150, line: 330, baseType: !7, size: 32, offset: 3552)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "max_used_stack_slot_alignment", scope: !1923, file: !1150, line: 333, baseType: !7, size: 32, offset: 3584)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "stack_alignment_estimated", scope: !1923, file: !1150, line: 342, baseType: !7, size: 32, offset: 3616)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "epilogue_delay_list", scope: !1923, file: !1150, line: 348, baseType: !787, size: 64, offset: 3648)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prior_frames", scope: !1923, file: !1150, line: 352, baseType: !777, size: 8, offset: 3712)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "calls_eh_return", scope: !1923, file: !1150, line: 355, baseType: !777, size: 8, offset: 3720)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "saves_all_registers", scope: !1923, file: !1150, line: 359, baseType: !777, size: 8, offset: 3728)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_goto", scope: !1923, file: !1150, line: 363, baseType: !777, size: 8, offset: 3736)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "has_asm_statement", scope: !1923, file: !1150, line: 366, baseType: !777, size: 8, offset: 3744)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "all_throwers_are_sibcalls", scope: !1923, file: !1150, line: 373, baseType: !777, size: 8, offset: 3752)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "limit_stack", scope: !1923, file: !1150, line: 377, baseType: !777, size: 8, offset: 3760)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1923, file: !1150, line: 380, baseType: !777, size: 8, offset: 3768)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "uses_const_pool", scope: !1923, file: !1150, line: 383, baseType: !777, size: 8, offset: 3776)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pic_offset_table", scope: !1923, file: !1150, line: 386, baseType: !777, size: 8, offset: 3784)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "uses_eh_lsda", scope: !1923, file: !1150, line: 389, baseType: !777, size: 8, offset: 3792)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_emit", scope: !1923, file: !1150, line: 392, baseType: !777, size: 8, offset: 3800)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "arg_pointer_save_area_init", scope: !1923, file: !1150, line: 395, baseType: !777, size: 8, offset: 3808)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pointer_needed", scope: !1923, file: !1150, line: 399, baseType: !777, size: 8, offset: 3816)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_hot_insn_p", scope: !1923, file: !1150, line: 402, baseType: !777, size: 8, offset: 3824)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "stack_realign_needed", scope: !1923, file: !1150, line: 409, baseType: !777, size: 8, offset: 3832)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "stack_realign_tried", scope: !1923, file: !1150, line: 414, baseType: !777, size: 8, offset: 3840)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "need_drap", scope: !1923, file: !1150, line: 418, baseType: !777, size: 8, offset: 3848)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "stack_realign_processed", scope: !1923, file: !1150, line: 423, baseType: !777, size: 8, offset: 3856)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "stack_realign_finalized", scope: !1923, file: !1150, line: 427, baseType: !777, size: 8, offset: 3864)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "dbr_scheduled_p", scope: !1923, file: !1150, line: 430, baseType: !777, size: 8, offset: 3872)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow", scope: !1923, file: !1150, line: 435, baseType: !777, size: 8, offset: 3880)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "regno_reg_rtx", scope: !2, file: !3, line: 80, type: !1824, isLocal: false, isDefinition: true)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "global_rtl", scope: !2, file: !3, line: 92, type: !2095, isLocal: false, isDefinition: true)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 704, elements: !2096)
!2096 = !{!2097}
!2097 = !DISubrange(count: 11)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "static_regno_reg_rtx", scope: !2, file: !3, line: 98, type: !2100, isLocal: true, isDefinition: true)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 3392, elements: !2101)
!2101 = !{!2102}
!2102 = !DISubrange(count: 53)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "const_tiny_rtx", scope: !2, file: !3, line: 104, type: !2105, isLocal: false, isDefinition: true)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 16704, elements: !2106)
!2106 = !{!975, !2107}
!2107 = !DISubrange(count: 87)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "const_true_rtx", scope: !2, file: !3, line: 106, type: !787, isLocal: false, isDefinition: true)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "dconst0", scope: !2, file: !3, line: 108, type: !963, isLocal: false, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "dconst1", scope: !2, file: !3, line: 109, type: !963, isLocal: false, isDefinition: true)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(name: "dconst2", scope: !2, file: !3, line: 110, type: !963, isLocal: false, isDefinition: true)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "dconstm1", scope: !2, file: !3, line: 111, type: !963, isLocal: false, isDefinition: true)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "dconsthalf", scope: !2, file: !3, line: 112, type: !963, isLocal: false, isDefinition: true)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "fconst0", scope: !2, file: !3, line: 115, type: !2122, isLocal: false, isDefinition: true)
!2122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 3456, elements: !2123)
!2123 = !{!2124}
!2124 = !DISubrange(count: 18)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "fconst1", scope: !2, file: !3, line: 116, type: !2127, isLocal: false, isDefinition: true)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 1536, elements: !2128)
!2128 = !{!2129}
!2129 = !DISubrange(count: 8)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "pic_offset_table_rtx", scope: !2, file: !3, line: 136, type: !787, isLocal: false, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "return_address_pointer_rtx", scope: !2, file: !3, line: 140, type: !787, isLocal: false, isDefinition: true)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "const_int_rtx", scope: !2, file: !3, line: 147, type: !2136, isLocal: false, isDefinition: true)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 8256, elements: !2137)
!2137 = !{!2138}
!2138 = !DISubrange(count: 129)
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(name: "const_int_htab", scope: !2, file: !3, line: 153, type: !1267, isLocal: true, isDefinition: true)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "mem_attrs_htab", scope: !2, file: !3, line: 157, type: !1267, isLocal: true, isDefinition: true)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "reg_attrs_htab", scope: !2, file: !3, line: 161, type: !1267, isLocal: true, isDefinition: true)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "const_double_htab", scope: !2, file: !3, line: 165, type: !1267, isLocal: true, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "const_fixed_htab", scope: !2, file: !3, line: 169, type: !1267, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "spill_slot_decl", scope: !2, file: !3, line: 2211, type: !903, isLocal: true, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "free_sequence_stack", scope: !2, file: !3, line: 5236, type: !1825, isLocal: true, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "copy_insn_scratch_in", scope: !2, file: !3, line: 5380, type: !2155, isLocal: true, isDefinition: true)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 1920, elements: !2156)
!2156 = !{!2157}
!2157 = !DISubrange(count: 30)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "copy_insn_scratch_out", scope: !2, file: !3, line: 5381, type: !2155, isLocal: true, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "copy_insn_n_scratches", scope: !2, file: !3, line: 5382, type: !778, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "orig_asm_operands_vector", scope: !2, file: !3, line: 5387, type: !815, isLocal: true, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "copy_asm_operands_vector", scope: !2, file: !3, line: 5392, type: !815, isLocal: true, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "orig_asm_constraints_vector", scope: !2, file: !3, line: 5395, type: !815, isLocal: true, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "copy_asm_constraints_vector", scope: !2, file: !3, line: 5396, type: !815, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "hard_reg_clobbers", scope: !2, file: !3, line: 6037, type: !2172, isLocal: true, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 295104, elements: !2173)
!2173 = !{!2107, !2102}
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "label_num", scope: !2, file: !3, line: 85, type: !778, isLocal: true, isDefinition: true)
!2176 = !{i32 2, !"Dwarf Version", i32 4}
!2177 = !{i32 2, !"Debug Info Version", i32 3}
!2178 = !{i32 1, !"wchar_size", i32 4}
!2179 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2180 = distinct !DISubprogram(name: "vprintf", scope: !2181, file: !2181, line: 39, type: !2182, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2192)
!2181 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!778, !2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !783)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2186, file: !3, baseType: !7, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2186, file: !3, baseType: !7, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2186, file: !3, baseType: !782, size: 64, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2186, file: !3, baseType: !782, size: 64, offset: 128)
!2192 = !{!2193, !2194}
!2193 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2180, file: !2181, line: 39, type: !2184)
!2194 = !DILocalVariable(name: "__arg", arg: 2, scope: !2180, file: !2181, line: 39, type: !2185)
!2195 = !DILocation(line: 0, scope: !2180)
!2196 = !DILocation(line: 41, column: 20, scope: !2180)
!2197 = !DILocation(line: 41, column: 10, scope: !2180)
!2198 = !DILocation(line: 41, column: 3, scope: !2180)
!2199 = distinct !DISubprogram(name: "getchar", scope: !2181, file: !2181, line: 47, type: !2200, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!778}
!2202 = !{}
!2203 = !DILocation(line: 49, column: 16, scope: !2199)
!2204 = !DILocation(line: 49, column: 10, scope: !2199)
!2205 = !DILocation(line: 49, column: 3, scope: !2199)
!2206 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2181, file: !2181, line: 56, type: !2207, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2259)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!778, !2209}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2211, line: 7, baseType: !2212)
!2211 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2213, line: 49, size: 1728, elements: !2214)
!2213 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2214 = !{!2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2230, !2232, !2233, !2234, !2237, !2238, !2239, !2240, !2243, !2245, !2248, !2251, !2252, !2253, !2254, !2255}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2212, file: !2213, line: 51, baseType: !778, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2212, file: !2213, line: 54, baseType: !780, size: 64, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2212, file: !2213, line: 55, baseType: !780, size: 64, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2212, file: !2213, line: 56, baseType: !780, size: 64, offset: 192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2212, file: !2213, line: 57, baseType: !780, size: 64, offset: 256)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2212, file: !2213, line: 58, baseType: !780, size: 64, offset: 320)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2212, file: !2213, line: 59, baseType: !780, size: 64, offset: 384)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2212, file: !2213, line: 60, baseType: !780, size: 64, offset: 448)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2212, file: !2213, line: 61, baseType: !780, size: 64, offset: 512)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2212, file: !2213, line: 64, baseType: !780, size: 64, offset: 576)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2212, file: !2213, line: 65, baseType: !780, size: 64, offset: 640)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2212, file: !2213, line: 66, baseType: !780, size: 64, offset: 704)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2212, file: !2213, line: 68, baseType: !2228, size: 64, offset: 768)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2213, line: 36, flags: DIFlagFwdDecl)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2212, file: !2213, line: 70, baseType: !2231, size: 64, offset: 832)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2212, file: !2213, line: 72, baseType: !778, size: 32, offset: 896)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2212, file: !2213, line: 73, baseType: !778, size: 32, offset: 928)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2212, file: !2213, line: 74, baseType: !2235, size: 64, offset: 960)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2236, line: 152, baseType: !874)
!2236 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2212, file: !2213, line: 77, baseType: !1823, size: 16, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2212, file: !2213, line: 78, baseType: !1595, size: 8, offset: 1040)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2212, file: !2213, line: 79, baseType: !998, size: 8, offset: 1048)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2212, file: !2213, line: 81, baseType: !2241, size: 64, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2213, line: 43, baseType: null)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2212, file: !2213, line: 89, baseType: !2244, size: 64, offset: 1152)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2236, line: 153, baseType: !874)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2212, file: !2213, line: 91, baseType: !2246, size: 64, offset: 1216)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2213, line: 37, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2212, file: !2213, line: 92, baseType: !2249, size: 64, offset: 1280)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2213, line: 38, flags: DIFlagFwdDecl)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2212, file: !2213, line: 93, baseType: !2231, size: 64, offset: 1344)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2212, file: !2213, line: 94, baseType: !782, size: 64, offset: 1408)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2212, file: !2213, line: 95, baseType: !1291, size: 64, offset: 1472)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2212, file: !2213, line: 96, baseType: !778, size: 32, offset: 1536)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2212, file: !2213, line: 98, baseType: !2256, size: 160, offset: 1568)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 160, elements: !2257)
!2257 = !{!2258}
!2258 = !DISubrange(count: 20)
!2259 = !{!2260}
!2260 = !DILocalVariable(name: "__fp", arg: 1, scope: !2206, file: !2181, line: 56, type: !2209)
!2261 = !DILocation(line: 0, scope: !2206)
!2262 = !DILocation(line: 58, column: 10, scope: !2206)
!2263 = !DILocation(line: 58, column: 3, scope: !2206)
!2264 = distinct !DISubprogram(name: "getc_unlocked", scope: !2181, file: !2181, line: 66, type: !2207, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2265)
!2265 = !{!2266}
!2266 = !DILocalVariable(name: "__fp", arg: 1, scope: !2264, file: !2181, line: 66, type: !2209)
!2267 = !DILocation(line: 0, scope: !2264)
!2268 = !DILocation(line: 68, column: 10, scope: !2264)
!2269 = !DILocation(line: 68, column: 3, scope: !2264)
!2270 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2181, file: !2181, line: 73, type: !2200, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!2271 = !DILocation(line: 75, column: 10, scope: !2270)
!2272 = !DILocation(line: 75, column: 3, scope: !2270)
!2273 = distinct !DISubprogram(name: "putchar", scope: !2181, file: !2181, line: 82, type: !2274, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2276)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!778, !778}
!2276 = !{!2277}
!2277 = !DILocalVariable(name: "__c", arg: 1, scope: !2273, file: !2181, line: 82, type: !778)
!2278 = !DILocation(line: 0, scope: !2273)
!2279 = !DILocation(line: 84, column: 21, scope: !2273)
!2280 = !DILocation(line: 84, column: 10, scope: !2273)
!2281 = !DILocation(line: 84, column: 3, scope: !2273)
!2282 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2181, file: !2181, line: 91, type: !2283, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2285)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!778, !778, !2209}
!2285 = !{!2286, !2287}
!2286 = !DILocalVariable(name: "__c", arg: 1, scope: !2282, file: !2181, line: 91, type: !778)
!2287 = !DILocalVariable(name: "__stream", arg: 2, scope: !2282, file: !2181, line: 91, type: !2209)
!2288 = !DILocation(line: 0, scope: !2282)
!2289 = !DILocation(line: 93, column: 10, scope: !2282)
!2290 = !DILocation(line: 93, column: 3, scope: !2282)
!2291 = distinct !DISubprogram(name: "putc_unlocked", scope: !2181, file: !2181, line: 101, type: !2283, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2292)
!2292 = !{!2293, !2294}
!2293 = !DILocalVariable(name: "__c", arg: 1, scope: !2291, file: !2181, line: 101, type: !778)
!2294 = !DILocalVariable(name: "__stream", arg: 2, scope: !2291, file: !2181, line: 101, type: !2209)
!2295 = !DILocation(line: 0, scope: !2291)
!2296 = !DILocation(line: 103, column: 10, scope: !2291)
!2297 = !DILocation(line: 103, column: 3, scope: !2291)
!2298 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2181, file: !2181, line: 108, type: !2274, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2299)
!2299 = !{!2300}
!2300 = !DILocalVariable(name: "__c", arg: 1, scope: !2298, file: !2181, line: 108, type: !778)
!2301 = !DILocation(line: 0, scope: !2298)
!2302 = !DILocation(line: 110, column: 10, scope: !2298)
!2303 = !DILocation(line: 110, column: 3, scope: !2298)
!2304 = distinct !DISubprogram(name: "getline", scope: !2181, file: !2181, line: 118, type: !2305, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2309)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!2307, !779, !2308, !2209}
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2236, line: 193, baseType: !874)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!2309 = !{!2310, !2311, !2312}
!2310 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2304, file: !2181, line: 118, type: !779)
!2311 = !DILocalVariable(name: "__n", arg: 2, scope: !2304, file: !2181, line: 118, type: !2308)
!2312 = !DILocalVariable(name: "__stream", arg: 3, scope: !2304, file: !2181, line: 118, type: !2209)
!2313 = !DILocation(line: 0, scope: !2304)
!2314 = !DILocation(line: 120, column: 10, scope: !2304)
!2315 = !DILocation(line: 120, column: 3, scope: !2304)
!2316 = distinct !DISubprogram(name: "feof_unlocked", scope: !2181, file: !2181, line: 128, type: !2207, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2317)
!2317 = !{!2318}
!2318 = !DILocalVariable(name: "__stream", arg: 1, scope: !2316, file: !2181, line: 128, type: !2209)
!2319 = !DILocation(line: 0, scope: !2316)
!2320 = !DILocation(line: 130, column: 10, scope: !2316)
!2321 = !DILocation(line: 130, column: 3, scope: !2316)
!2322 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2181, file: !2181, line: 135, type: !2207, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2323)
!2323 = !{!2324}
!2324 = !DILocalVariable(name: "__stream", arg: 1, scope: !2322, file: !2181, line: 135, type: !2209)
!2325 = !DILocation(line: 0, scope: !2322)
!2326 = !DILocation(line: 137, column: 10, scope: !2322)
!2327 = !DILocation(line: 137, column: 3, scope: !2322)
!2328 = distinct !DISubprogram(name: "tolower", scope: !2329, file: !2329, line: 207, type: !2274, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2329 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2330 = !{!2331}
!2331 = !DILocalVariable(name: "__c", arg: 1, scope: !2328, file: !2329, line: 207, type: !778)
!2332 = !DILocation(line: 0, scope: !2328)
!2333 = !DILocation(line: 209, column: 22, scope: !2328)
!2334 = !DILocation(line: 209, column: 39, scope: !2328)
!2335 = !DILocation(line: 209, column: 38, scope: !2328)
!2336 = !DILocation(line: 209, column: 37, scope: !2328)
!2337 = !DILocation(line: 209, column: 10, scope: !2328)
!2338 = !DILocation(line: 209, column: 3, scope: !2328)
!2339 = distinct !DISubprogram(name: "toupper", scope: !2329, file: !2329, line: 213, type: !2274, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2340)
!2340 = !{!2341}
!2341 = !DILocalVariable(name: "__c", arg: 1, scope: !2339, file: !2329, line: 213, type: !778)
!2342 = !DILocation(line: 0, scope: !2339)
!2343 = !DILocation(line: 215, column: 22, scope: !2339)
!2344 = !DILocation(line: 215, column: 39, scope: !2339)
!2345 = !DILocation(line: 215, column: 38, scope: !2339)
!2346 = !DILocation(line: 215, column: 37, scope: !2339)
!2347 = !DILocation(line: 215, column: 10, scope: !2339)
!2348 = !DILocation(line: 215, column: 3, scope: !2339)
!2349 = distinct !DISubprogram(name: "atoi", scope: !2350, file: !2350, line: 361, type: !2351, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2353)
!2350 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2351 = !DISubroutineType(types: !2352)
!2352 = !{!778, !783}
!2353 = !{!2354}
!2354 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2349, file: !2350, line: 361, type: !783)
!2355 = !DILocation(line: 0, scope: !2349)
!2356 = !DILocation(line: 363, column: 16, scope: !2349)
!2357 = !DILocation(line: 363, column: 10, scope: !2349)
!2358 = !DILocation(line: 363, column: 3, scope: !2349)
!2359 = distinct !DISubprogram(name: "atol", scope: !2350, file: !2350, line: 366, type: !2360, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2362)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!874, !783}
!2362 = !{!2363}
!2363 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2359, file: !2350, line: 366, type: !783)
!2364 = !DILocation(line: 0, scope: !2359)
!2365 = !DILocation(line: 368, column: 10, scope: !2359)
!2366 = !DILocation(line: 368, column: 3, scope: !2359)
!2367 = distinct !DISubprogram(name: "atoll", scope: !2350, file: !2350, line: 373, type: !2368, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2371)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!2370, !783}
!2370 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2371 = !{!2372}
!2372 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2367, file: !2350, line: 373, type: !783)
!2373 = !DILocation(line: 0, scope: !2367)
!2374 = !DILocation(line: 375, column: 10, scope: !2367)
!2375 = !DILocation(line: 375, column: 3, scope: !2367)
!2376 = distinct !DISubprogram(name: "bsearch", scope: !2377, file: !2377, line: 20, type: !2378, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2377 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!782, !1276, !1276, !1291, !1291, !2380}
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2350, line: 808, baseType: !1280)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2382 = !DILocalVariable(name: "__key", arg: 1, scope: !2376, file: !2377, line: 20, type: !1276)
!2383 = !DILocalVariable(name: "__base", arg: 2, scope: !2376, file: !2377, line: 20, type: !1276)
!2384 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2376, file: !2377, line: 20, type: !1291)
!2385 = !DILocalVariable(name: "__size", arg: 4, scope: !2376, file: !2377, line: 20, type: !1291)
!2386 = !DILocalVariable(name: "__compar", arg: 5, scope: !2376, file: !2377, line: 21, type: !2380)
!2387 = !DILocalVariable(name: "__l", scope: !2376, file: !2377, line: 23, type: !1291)
!2388 = !DILocalVariable(name: "__u", scope: !2376, file: !2377, line: 23, type: !1291)
!2389 = !DILocalVariable(name: "__idx", scope: !2376, file: !2377, line: 23, type: !1291)
!2390 = !DILocalVariable(name: "__p", scope: !2376, file: !2377, line: 24, type: !1276)
!2391 = !DILocalVariable(name: "__comparison", scope: !2376, file: !2377, line: 25, type: !778)
!2392 = !DILocation(line: 0, scope: !2376)
!2393 = !DILocation(line: 29, column: 3, scope: !2376)
!2394 = !DILocation(line: 27, column: 7, scope: !2376)
!2395 = !DILocation(line: 29, column: 14, scope: !2376)
!2396 = !DILocation(line: 31, column: 20, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2376, file: !2377, line: 30, column: 5)
!2398 = !DILocation(line: 31, column: 27, scope: !2397)
!2399 = !DILocation(line: 32, column: 56, scope: !2397)
!2400 = !DILocation(line: 32, column: 47, scope: !2397)
!2401 = !DILocation(line: 33, column: 22, scope: !2397)
!2402 = !DILocation(line: 34, column: 24, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2397, file: !2377, line: 34, column: 11)
!2404 = !DILocation(line: 34, column: 11, scope: !2397)
!2405 = !DILocation(line: 36, column: 29, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2403, file: !2377, line: 36, column: 16)
!2407 = !DILocation(line: 36, column: 16, scope: !2403)
!2408 = !DILocation(line: 37, column: 14, scope: !2406)
!2409 = distinct !{!2409, !2393, !2410}
!2410 = !DILocation(line: 40, column: 5, scope: !2376)
!2411 = !DILocation(line: 43, column: 1, scope: !2376)
!2412 = distinct !DISubprogram(name: "atof", scope: !2413, file: !2413, line: 25, type: !2414, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2417)
!2413 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!2416, !783}
!2416 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2417 = !{!2418}
!2418 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2412, file: !2413, line: 25, type: !783)
!2419 = !DILocation(line: 0, scope: !2412)
!2420 = !DILocation(line: 27, column: 10, scope: !2412)
!2421 = !DILocation(line: 27, column: 3, scope: !2412)
!2422 = distinct !DISubprogram(name: "strtoimax", scope: !2423, file: !2423, line: 324, type: !2424, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2430)
!2423 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!2426, !2184, !2429, !778}
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2427, line: 101, baseType: !2428)
!2427 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2236, line: 72, baseType: !874)
!2429 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !779)
!2430 = !{!2431, !2432, !2433}
!2431 = !DILocalVariable(name: "nptr", arg: 1, scope: !2422, file: !2423, line: 324, type: !2184)
!2432 = !DILocalVariable(name: "endptr", arg: 2, scope: !2422, file: !2423, line: 324, type: !2429)
!2433 = !DILocalVariable(name: "base", arg: 3, scope: !2422, file: !2423, line: 324, type: !778)
!2434 = !DILocation(line: 0, scope: !2422)
!2435 = !DILocation(line: 327, column: 10, scope: !2422)
!2436 = !DILocation(line: 327, column: 3, scope: !2422)
!2437 = distinct !DISubprogram(name: "strtoumax", scope: !2423, file: !2423, line: 336, type: !2438, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2442)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!2440, !2184, !2429, !778}
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2427, line: 102, baseType: !2441)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2236, line: 73, baseType: !857)
!2442 = !{!2443, !2444, !2445}
!2443 = !DILocalVariable(name: "nptr", arg: 1, scope: !2437, file: !2423, line: 336, type: !2184)
!2444 = !DILocalVariable(name: "endptr", arg: 2, scope: !2437, file: !2423, line: 336, type: !2429)
!2445 = !DILocalVariable(name: "base", arg: 3, scope: !2437, file: !2423, line: 336, type: !778)
!2446 = !DILocation(line: 0, scope: !2437)
!2447 = !DILocation(line: 339, column: 10, scope: !2437)
!2448 = !DILocation(line: 339, column: 3, scope: !2437)
!2449 = distinct !DISubprogram(name: "wcstoimax", scope: !2423, file: !2423, line: 348, type: !2450, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!2426, !2452, !2456, !778}
!2452 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2423, line: 34, baseType: !778)
!2456 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2457)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2459 = !{!2460, !2461, !2462}
!2460 = !DILocalVariable(name: "nptr", arg: 1, scope: !2449, file: !2423, line: 348, type: !2452)
!2461 = !DILocalVariable(name: "endptr", arg: 2, scope: !2449, file: !2423, line: 348, type: !2456)
!2462 = !DILocalVariable(name: "base", arg: 3, scope: !2449, file: !2423, line: 348, type: !778)
!2463 = !DILocation(line: 0, scope: !2449)
!2464 = !DILocation(line: 351, column: 10, scope: !2449)
!2465 = !DILocation(line: 351, column: 3, scope: !2449)
!2466 = distinct !DISubprogram(name: "wcstoumax", scope: !2423, file: !2423, line: 362, type: !2467, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2469)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!2440, !2452, !2456, !778}
!2469 = !{!2470, !2471, !2472}
!2470 = !DILocalVariable(name: "nptr", arg: 1, scope: !2466, file: !2423, line: 362, type: !2452)
!2471 = !DILocalVariable(name: "endptr", arg: 2, scope: !2466, file: !2423, line: 362, type: !2456)
!2472 = !DILocalVariable(name: "base", arg: 3, scope: !2466, file: !2423, line: 362, type: !778)
!2473 = !DILocation(line: 0, scope: !2466)
!2474 = !DILocation(line: 365, column: 10, scope: !2466)
!2475 = !DILocation(line: 365, column: 3, scope: !2466)
!2476 = distinct !DISubprogram(name: "stat", scope: !2477, file: !2477, line: 453, type: !2478, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2515)
!2477 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!778, !783, !2480}
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2482, line: 46, size: 1152, elements: !2483)
!2482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2483 = !{!2484, !2486, !2488, !2490, !2492, !2494, !2496, !2497, !2498, !2499, !2501, !2503, !2511, !2512, !2513}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2481, file: !2482, line: 48, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2236, line: 145, baseType: !857)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2481, file: !2482, line: 53, baseType: !2487, size: 64, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2236, line: 148, baseType: !857)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2481, file: !2482, line: 61, baseType: !2489, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2236, line: 151, baseType: !857)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2481, file: !2482, line: 62, baseType: !2491, size: 32, offset: 192)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2236, line: 150, baseType: !7)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2481, file: !2482, line: 64, baseType: !2493, size: 32, offset: 224)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2236, line: 146, baseType: !7)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2481, file: !2482, line: 65, baseType: !2495, size: 32, offset: 256)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2236, line: 147, baseType: !7)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2481, file: !2482, line: 67, baseType: !778, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2481, file: !2482, line: 69, baseType: !2485, size: 64, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2481, file: !2482, line: 74, baseType: !2235, size: 64, offset: 384)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2481, file: !2482, line: 78, baseType: !2500, size: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2236, line: 174, baseType: !874)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2481, file: !2482, line: 80, baseType: !2502, size: 64, offset: 512)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2236, line: 179, baseType: !874)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2481, file: !2482, line: 91, baseType: !2504, size: 128, offset: 576)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2505, line: 10, size: 128, elements: !2506)
!2505 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2506 = !{!2507, !2509}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2504, file: !2505, line: 12, baseType: !2508, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2236, line: 160, baseType: !874)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2504, file: !2505, line: 16, baseType: !2510, size: 64, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2236, line: 196, baseType: !874)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2481, file: !2482, line: 92, baseType: !2504, size: 128, offset: 704)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2481, file: !2482, line: 93, baseType: !2504, size: 128, offset: 832)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2481, file: !2482, line: 106, baseType: !2514, size: 192, offset: 960)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2510, size: 192, elements: !974)
!2515 = !{!2516, !2517}
!2516 = !DILocalVariable(name: "__path", arg: 1, scope: !2476, file: !2477, line: 453, type: !783)
!2517 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2476, file: !2477, line: 453, type: !2480)
!2518 = !DILocation(line: 0, scope: !2476)
!2519 = !DILocation(line: 455, column: 10, scope: !2476)
!2520 = !DILocation(line: 455, column: 3, scope: !2476)
!2521 = distinct !DISubprogram(name: "lstat", scope: !2477, file: !2477, line: 460, type: !2478, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2522 = !{!2523, !2524}
!2523 = !DILocalVariable(name: "__path", arg: 1, scope: !2521, file: !2477, line: 460, type: !783)
!2524 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2521, file: !2477, line: 460, type: !2480)
!2525 = !DILocation(line: 0, scope: !2521)
!2526 = !DILocation(line: 462, column: 10, scope: !2521)
!2527 = !DILocation(line: 462, column: 3, scope: !2521)
!2528 = distinct !DISubprogram(name: "fstat", scope: !2477, file: !2477, line: 467, type: !2529, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2531)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!778, !778, !2480}
!2531 = !{!2532, !2533}
!2532 = !DILocalVariable(name: "__fd", arg: 1, scope: !2528, file: !2477, line: 467, type: !778)
!2533 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2528, file: !2477, line: 467, type: !2480)
!2534 = !DILocation(line: 0, scope: !2528)
!2535 = !DILocation(line: 469, column: 10, scope: !2528)
!2536 = !DILocation(line: 469, column: 3, scope: !2528)
!2537 = distinct !DISubprogram(name: "fstatat", scope: !2477, file: !2477, line: 474, type: !2538, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2540)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!778, !778, !783, !2480, !778}
!2540 = !{!2541, !2542, !2543, !2544}
!2541 = !DILocalVariable(name: "__fd", arg: 1, scope: !2537, file: !2477, line: 474, type: !778)
!2542 = !DILocalVariable(name: "__filename", arg: 2, scope: !2537, file: !2477, line: 474, type: !783)
!2543 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2537, file: !2477, line: 474, type: !2480)
!2544 = !DILocalVariable(name: "__flag", arg: 4, scope: !2537, file: !2477, line: 474, type: !778)
!2545 = !DILocation(line: 0, scope: !2537)
!2546 = !DILocation(line: 477, column: 10, scope: !2537)
!2547 = !DILocation(line: 477, column: 3, scope: !2537)
!2548 = distinct !DISubprogram(name: "mknod", scope: !2477, file: !2477, line: 483, type: !2549, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2551)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!778, !783, !2491, !2485}
!2551 = !{!2552, !2553, !2554}
!2552 = !DILocalVariable(name: "__path", arg: 1, scope: !2548, file: !2477, line: 483, type: !783)
!2553 = !DILocalVariable(name: "__mode", arg: 2, scope: !2548, file: !2477, line: 483, type: !2491)
!2554 = !DILocalVariable(name: "__dev", arg: 3, scope: !2548, file: !2477, line: 483, type: !2485)
!2555 = !DILocation(line: 0, scope: !2548)
!2556 = !DILocation(line: 485, column: 10, scope: !2548)
!2557 = !DILocation(line: 485, column: 3, scope: !2548)
!2558 = distinct !DISubprogram(name: "mknodat", scope: !2477, file: !2477, line: 491, type: !2559, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!778, !778, !783, !2491, !2485}
!2561 = !{!2562, !2563, !2564, !2565}
!2562 = !DILocalVariable(name: "__fd", arg: 1, scope: !2558, file: !2477, line: 491, type: !778)
!2563 = !DILocalVariable(name: "__path", arg: 2, scope: !2558, file: !2477, line: 491, type: !783)
!2564 = !DILocalVariable(name: "__mode", arg: 3, scope: !2558, file: !2477, line: 491, type: !2491)
!2565 = !DILocalVariable(name: "__dev", arg: 4, scope: !2558, file: !2477, line: 491, type: !2485)
!2566 = !DILocation(line: 0, scope: !2558)
!2567 = !DILocation(line: 494, column: 10, scope: !2558)
!2568 = !DILocation(line: 494, column: 3, scope: !2558)
!2569 = distinct !DISubprogram(name: "stat64", scope: !2477, file: !2477, line: 502, type: !2570, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2592)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!778, !783, !2572}
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2482, line: 119, size: 1152, elements: !2574)
!2574 = !{!2575, !2576, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2588, !2589, !2590, !2591}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2573, file: !2482, line: 121, baseType: !2485, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2573, file: !2482, line: 123, baseType: !2577, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2236, line: 149, baseType: !857)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2573, file: !2482, line: 124, baseType: !2489, size: 64, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2573, file: !2482, line: 125, baseType: !2491, size: 32, offset: 192)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2573, file: !2482, line: 132, baseType: !2493, size: 32, offset: 224)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2573, file: !2482, line: 133, baseType: !2495, size: 32, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2573, file: !2482, line: 135, baseType: !778, size: 32, offset: 288)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2573, file: !2482, line: 136, baseType: !2485, size: 64, offset: 320)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2573, file: !2482, line: 137, baseType: !2235, size: 64, offset: 384)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2573, file: !2482, line: 143, baseType: !2500, size: 64, offset: 448)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2573, file: !2482, line: 144, baseType: !2587, size: 64, offset: 512)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2236, line: 180, baseType: !874)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2573, file: !2482, line: 152, baseType: !2504, size: 128, offset: 576)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2573, file: !2482, line: 153, baseType: !2504, size: 128, offset: 704)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2573, file: !2482, line: 154, baseType: !2504, size: 128, offset: 832)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2573, file: !2482, line: 164, baseType: !2514, size: 192, offset: 960)
!2592 = !{!2593, !2594}
!2593 = !DILocalVariable(name: "__path", arg: 1, scope: !2569, file: !2477, line: 502, type: !783)
!2594 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2569, file: !2477, line: 502, type: !2572)
!2595 = !DILocation(line: 0, scope: !2569)
!2596 = !DILocation(line: 504, column: 10, scope: !2569)
!2597 = !DILocation(line: 504, column: 3, scope: !2569)
!2598 = distinct !DISubprogram(name: "lstat64", scope: !2477, file: !2477, line: 509, type: !2570, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2599)
!2599 = !{!2600, !2601}
!2600 = !DILocalVariable(name: "__path", arg: 1, scope: !2598, file: !2477, line: 509, type: !783)
!2601 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2598, file: !2477, line: 509, type: !2572)
!2602 = !DILocation(line: 0, scope: !2598)
!2603 = !DILocation(line: 511, column: 10, scope: !2598)
!2604 = !DILocation(line: 511, column: 3, scope: !2598)
!2605 = distinct !DISubprogram(name: "fstat64", scope: !2477, file: !2477, line: 516, type: !2606, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2608)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!778, !778, !2572}
!2608 = !{!2609, !2610}
!2609 = !DILocalVariable(name: "__fd", arg: 1, scope: !2605, file: !2477, line: 516, type: !778)
!2610 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2605, file: !2477, line: 516, type: !2572)
!2611 = !DILocation(line: 0, scope: !2605)
!2612 = !DILocation(line: 518, column: 10, scope: !2605)
!2613 = !DILocation(line: 518, column: 3, scope: !2605)
!2614 = distinct !DISubprogram(name: "fstatat64", scope: !2477, file: !2477, line: 523, type: !2615, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2617)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!778, !778, !783, !2572, !778}
!2617 = !{!2618, !2619, !2620, !2621}
!2618 = !DILocalVariable(name: "__fd", arg: 1, scope: !2614, file: !2477, line: 523, type: !778)
!2619 = !DILocalVariable(name: "__filename", arg: 2, scope: !2614, file: !2477, line: 523, type: !783)
!2620 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2614, file: !2477, line: 523, type: !2572)
!2621 = !DILocalVariable(name: "__flag", arg: 4, scope: !2614, file: !2477, line: 523, type: !778)
!2622 = !DILocation(line: 0, scope: !2614)
!2623 = !DILocation(line: 526, column: 10, scope: !2614)
!2624 = !DILocation(line: 526, column: 3, scope: !2614)
!2625 = distinct !DISubprogram(name: "gen_raw_REG", scope: !3, file: !3, line: 423, type: !2626, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!787, !5, !778}
!2628 = !{!2629, !2630, !2631}
!2629 = !DILocalVariable(name: "mode", arg: 1, scope: !2625, file: !3, line: 423, type: !5)
!2630 = !DILocalVariable(name: "regno", arg: 2, scope: !2625, file: !3, line: 423, type: !778)
!2631 = !DILocalVariable(name: "x", scope: !2625, file: !3, line: 425, type: !787)
!2632 = !DILocation(line: 0, scope: !2625)
!2633 = !DILocation(line: 425, column: 11, scope: !2625)
!2634 = !DILocation(line: 426, column: 3, scope: !2625)
!2635 = !DILocation(line: 426, column: 22, scope: !2625)
!2636 = !DILocation(line: 427, column: 3, scope: !2625)
!2637 = distinct !DISubprogram(name: "gen_rtx_CONST_INT", scope: !3, file: !3, line: 435, type: !2638, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2640)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!787, !5, !874}
!2640 = !{!2641, !2642, !2643}
!2641 = !DILocalVariable(name: "mode", arg: 1, scope: !2637, file: !3, line: 435, type: !5)
!2642 = !DILocalVariable(name: "arg", arg: 2, scope: !2637, file: !3, line: 435, type: !874)
!2643 = !DILocalVariable(name: "slot", scope: !2637, file: !3, line: 437, type: !1289)
!2644 = !DILocation(line: 0, scope: !2637)
!2645 = !DILocation(line: 439, column: 36, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2637, file: !3, line: 439, column: 7)
!2647 = !DILocation(line: 440, column: 12, scope: !2646)
!2648 = !DILocation(line: 440, column: 5, scope: !2646)
!2649 = !DILocation(line: 448, column: 36, scope: !2637)
!2650 = !DILocation(line: 448, column: 52, scope: !2637)
!2651 = !DILocation(line: 449, column: 8, scope: !2637)
!2652 = !DILocation(line: 448, column: 10, scope: !2637)
!2653 = !DILocation(line: 450, column: 7, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2637, file: !3, line: 450, column: 7)
!2655 = !DILocation(line: 450, column: 13, scope: !2654)
!2656 = !DILocation(line: 450, column: 7, scope: !2637)
!2657 = !DILocation(line: 451, column: 13, scope: !2654)
!2658 = !DILocation(line: 451, column: 11, scope: !2654)
!2659 = !DILocation(line: 451, column: 5, scope: !2654)
!2660 = !DILocation(line: 453, column: 3, scope: !2637)
!2661 = !DILocation(line: 454, column: 1, scope: !2637)
!2662 = distinct !DISubprogram(name: "gen_int_mode", scope: !3, file: !3, line: 457, type: !2663, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2665)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!787, !874, !5}
!2665 = !{!2666, !2667}
!2666 = !DILocalVariable(name: "c", arg: 1, scope: !2662, file: !3, line: 457, type: !874)
!2667 = !DILocalVariable(name: "mode", arg: 2, scope: !2662, file: !3, line: 457, type: !5)
!2668 = !DILocation(line: 0, scope: !2662)
!2669 = !DILocation(line: 459, column: 10, scope: !2662)
!2670 = !DILocation(line: 459, column: 3, scope: !2662)
!2671 = distinct !DISubprogram(name: "const_double_from_real_value", scope: !3, file: !3, line: 482, type: !2672, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!787, !963, !5}
!2674 = !{!2675, !2676, !2677}
!2675 = !DILocalVariable(name: "value", arg: 1, scope: !2671, file: !3, line: 482, type: !963)
!2676 = !DILocalVariable(name: "mode", arg: 2, scope: !2671, file: !3, line: 482, type: !5)
!2677 = !DILocalVariable(name: "real", scope: !2671, file: !3, line: 484, type: !787)
!2678 = !DILocation(line: 482, column: 47, scope: !2671)
!2679 = !DILocation(line: 0, scope: !2671)
!2680 = !DILocation(line: 484, column: 14, scope: !2671)
!2681 = !DILocation(line: 485, column: 3, scope: !2671)
!2682 = !DILocation(line: 487, column: 9, scope: !2671)
!2683 = !DILocation(line: 487, column: 16, scope: !2671)
!2684 = !DILocation(line: 489, column: 10, scope: !2671)
!2685 = !DILocation(line: 489, column: 3, scope: !2671)
!2686 = distinct !DISubprogram(name: "lookup_const_double", scope: !3, file: !3, line: 470, type: !2687, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2689)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!787, !787}
!2689 = !{!2690, !2691}
!2690 = !DILocalVariable(name: "real", arg: 1, scope: !2686, file: !3, line: 470, type: !787)
!2691 = !DILocalVariable(name: "slot", scope: !2686, file: !3, line: 472, type: !1289)
!2692 = !DILocation(line: 0, scope: !2686)
!2693 = !DILocation(line: 472, column: 33, scope: !2686)
!2694 = !DILocation(line: 472, column: 52, scope: !2686)
!2695 = !DILocation(line: 472, column: 17, scope: !2686)
!2696 = !DILocation(line: 473, column: 7, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 473, column: 7)
!2698 = !DILocation(line: 473, column: 13, scope: !2697)
!2699 = !DILocation(line: 473, column: 7, scope: !2686)
!2700 = !DILocation(line: 474, column: 11, scope: !2697)
!2701 = !DILocation(line: 474, column: 5, scope: !2697)
!2702 = !DILocation(line: 476, column: 16, scope: !2686)
!2703 = !DILocation(line: 476, column: 3, scope: !2686)
!2704 = distinct !DISubprogram(name: "const_fixed_from_fixed_value", scope: !3, file: !3, line: 510, type: !2705, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2707)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!787, !982, !5}
!2707 = !{!2708, !2709, !2710}
!2708 = !DILocalVariable(name: "value", arg: 1, scope: !2704, file: !3, line: 510, type: !982)
!2709 = !DILocalVariable(name: "mode", arg: 2, scope: !2704, file: !3, line: 510, type: !5)
!2710 = !DILocalVariable(name: "fixed", scope: !2704, file: !3, line: 512, type: !787)
!2711 = !DILocation(line: 510, column: 48, scope: !2704)
!2712 = !DILocation(line: 0, scope: !2704)
!2713 = !DILocation(line: 512, column: 15, scope: !2704)
!2714 = !DILocation(line: 513, column: 3, scope: !2704)
!2715 = !DILocation(line: 515, column: 10, scope: !2704)
!2716 = !DILocation(line: 515, column: 17, scope: !2704)
!2717 = !DILocation(line: 517, column: 10, scope: !2704)
!2718 = !DILocation(line: 517, column: 3, scope: !2704)
!2719 = distinct !DISubprogram(name: "lookup_const_fixed", scope: !3, file: !3, line: 497, type: !2687, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2720)
!2720 = !{!2721, !2722}
!2721 = !DILocalVariable(name: "fixed", arg: 1, scope: !2719, file: !3, line: 497, type: !787)
!2722 = !DILocalVariable(name: "slot", scope: !2719, file: !3, line: 499, type: !1289)
!2723 = !DILocation(line: 0, scope: !2719)
!2724 = !DILocation(line: 499, column: 33, scope: !2719)
!2725 = !DILocation(line: 499, column: 51, scope: !2719)
!2726 = !DILocation(line: 499, column: 17, scope: !2719)
!2727 = !DILocation(line: 500, column: 7, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 500, column: 7)
!2729 = !DILocation(line: 500, column: 13, scope: !2728)
!2730 = !DILocation(line: 500, column: 7, scope: !2719)
!2731 = !DILocation(line: 501, column: 11, scope: !2728)
!2732 = !DILocation(line: 501, column: 5, scope: !2728)
!2733 = !DILocation(line: 503, column: 16, scope: !2719)
!2734 = !DILocation(line: 503, column: 3, scope: !2719)
!2735 = distinct !DISubprogram(name: "immed_double_const", scope: !3, file: !3, line: 526, type: !2736, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2738)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!787, !874, !874, !5}
!2738 = !{!2739, !2740, !2741, !2742, !2743}
!2739 = !DILocalVariable(name: "i0", arg: 1, scope: !2735, file: !3, line: 526, type: !874)
!2740 = !DILocalVariable(name: "i1", arg: 2, scope: !2735, file: !3, line: 526, type: !874)
!2741 = !DILocalVariable(name: "mode", arg: 3, scope: !2735, file: !3, line: 526, type: !5)
!2742 = !DILocalVariable(name: "value", scope: !2735, file: !3, line: 528, type: !787)
!2743 = !DILocalVariable(name: "i", scope: !2735, file: !3, line: 529, type: !7)
!2744 = !DILocation(line: 0, scope: !2735)
!2745 = !DILocation(line: 541, column: 12, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 541, column: 7)
!2747 = !DILocation(line: 541, column: 7, scope: !2735)
!2748 = !DILocation(line: 543, column: 7, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 542, column: 5)
!2750 = !DILocation(line: 549, column: 11, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 549, column: 11)
!2752 = !DILocation(line: 549, column: 35, scope: !2751)
!2753 = !DILocation(line: 549, column: 11, scope: !2749)
!2754 = !DILocation(line: 550, column: 9, scope: !2751)
!2755 = !DILocation(line: 550, column: 2, scope: !2751)
!2756 = !DILocation(line: 552, column: 7, scope: !2749)
!2757 = !DILocation(line: 556, column: 11, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 556, column: 7)
!2759 = !DILocation(line: 556, column: 22, scope: !2758)
!2760 = !DILocation(line: 556, column: 16, scope: !2758)
!2761 = !DILocation(line: 556, column: 35, scope: !2758)
!2762 = !DILocation(line: 556, column: 47, scope: !2758)
!2763 = !DILocation(line: 556, column: 41, scope: !2758)
!2764 = !DILocation(line: 557, column: 12, scope: !2758)
!2765 = !DILocation(line: 557, column: 5, scope: !2758)
!2766 = !DILocation(line: 560, column: 11, scope: !2735)
!2767 = !DILocation(line: 561, column: 3, scope: !2735)
!2768 = !DILocation(line: 563, column: 3, scope: !2735)
!2769 = !DILocation(line: 563, column: 28, scope: !2735)
!2770 = !DILocation(line: 564, column: 3, scope: !2735)
!2771 = !DILocation(line: 564, column: 29, scope: !2735)
!2772 = !DILocation(line: 0, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 566, column: 3)
!2774 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 566, column: 3)
!2775 = !DILocation(line: 566, column: 8, scope: !2774)
!2776 = !DILocation(line: 0, scope: !2774)
!2777 = !DILocation(line: 566, column: 17, scope: !2773)
!2778 = !DILocation(line: 566, column: 3, scope: !2774)
!2779 = !DILocation(line: 567, column: 5, scope: !2773)
!2780 = !DILocation(line: 567, column: 22, scope: !2773)
!2781 = !DILocation(line: 566, column: 54, scope: !2773)
!2782 = !DILocation(line: 566, column: 3, scope: !2773)
!2783 = distinct !{!2783, !2778, !2784}
!2784 = !DILocation(line: 567, column: 24, scope: !2774)
!2785 = !DILocation(line: 569, column: 10, scope: !2735)
!2786 = !DILocation(line: 569, column: 3, scope: !2735)
!2787 = !DILocation(line: 570, column: 1, scope: !2735)
!2788 = distinct !DISubprogram(name: "gen_rtx_REG", scope: !3, file: !3, line: 573, type: !2789, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2791)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!787, !5, !7}
!2791 = !{!2792, !2793}
!2792 = !DILocalVariable(name: "mode", arg: 1, scope: !2788, file: !3, line: 573, type: !5)
!2793 = !DILocalVariable(name: "regno", arg: 2, scope: !2788, file: !3, line: 573, type: !7)
!2794 = !DILocation(line: 0, scope: !2788)
!2795 = !DILocation(line: 589, column: 12, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 589, column: 7)
!2797 = !DILocation(line: 589, column: 25, scope: !2796)
!2798 = !DILocation(line: 589, column: 21, scope: !2796)
!2799 = !DILocation(line: 592, column: 4, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 591, column: 11)
!2801 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 590, column: 5)
!2802 = !DILocation(line: 596, column: 9, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 595, column: 11)
!2804 = !DILocation(line: 592, column: 9, scope: !2800)
!2805 = !DILocation(line: 592, column: 26, scope: !2800)
!2806 = !DILocation(line: 592, column: 29, scope: !2800)
!2807 = !DILocation(line: 591, column: 11, scope: !2801)
!2808 = !DILocation(line: 593, column: 9, scope: !2800)
!2809 = !DILocation(line: 593, column: 2, scope: !2800)
!2810 = !DILocation(line: 596, column: 4, scope: !2803)
!2811 = !DILocation(line: 596, column: 26, scope: !2803)
!2812 = !DILocation(line: 596, column: 29, scope: !2803)
!2813 = !DILocation(line: 595, column: 11, scope: !2801)
!2814 = !DILocation(line: 597, column: 9, scope: !2803)
!2815 = !DILocation(line: 597, column: 2, scope: !2803)
!2816 = !DILocation(line: 600, column: 17, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 600, column: 11)
!2818 = !DILocation(line: 600, column: 11, scope: !2801)
!2819 = !DILocation(line: 601, column: 9, scope: !2817)
!2820 = !DILocation(line: 601, column: 2, scope: !2817)
!2821 = !DILocation(line: 607, column: 31, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 607, column: 11)
!2823 = !DILocation(line: 607, column: 17, scope: !2822)
!2824 = !DILocation(line: 608, column: 4, scope: !2822)
!2825 = !DILocation(line: 608, column: 18, scope: !2822)
!2826 = !DILocation(line: 608, column: 7, scope: !2822)
!2827 = !DILocation(line: 607, column: 11, scope: !2801)
!2828 = !DILocation(line: 609, column: 9, scope: !2822)
!2829 = !DILocation(line: 609, column: 2, scope: !2822)
!2830 = !DILocation(line: 610, column: 17, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 610, column: 11)
!2832 = !DILocation(line: 610, column: 11, scope: !2801)
!2833 = !DILocation(line: 611, column: 9, scope: !2831)
!2834 = !DILocation(line: 611, column: 2, scope: !2831)
!2835 = !DILocation(line: 634, column: 10, scope: !2788)
!2836 = !DILocation(line: 634, column: 3, scope: !2788)
!2837 = !DILocation(line: 635, column: 1, scope: !2788)
!2838 = distinct !DISubprogram(name: "rhs_regno", scope: !400, file: !400, line: 1051, type: !2839, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2841)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!7, !1831}
!2841 = !{!2842}
!2842 = !DILocalVariable(name: "x", arg: 1, scope: !2838, file: !400, line: 1051, type: !1831)
!2843 = !DILocation(line: 0, scope: !2838)
!2844 = !DILocation(line: 1053, column: 10, scope: !2838)
!2845 = !DILocation(line: 1053, column: 3, scope: !2838)
!2846 = distinct !DISubprogram(name: "gen_rtx_MEM", scope: !3, file: !3, line: 638, type: !2847, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2849)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!787, !5, !787}
!2849 = !{!2850, !2851, !2852}
!2850 = !DILocalVariable(name: "mode", arg: 1, scope: !2846, file: !3, line: 638, type: !5)
!2851 = !DILocalVariable(name: "addr", arg: 2, scope: !2846, file: !3, line: 638, type: !787)
!2852 = !DILocalVariable(name: "rt", scope: !2846, file: !3, line: 640, type: !787)
!2853 = !DILocation(line: 0, scope: !2846)
!2854 = !DILocation(line: 640, column: 12, scope: !2846)
!2855 = !DILocation(line: 644, column: 3, scope: !2846)
!2856 = !DILocation(line: 644, column: 18, scope: !2846)
!2857 = !DILocation(line: 646, column: 3, scope: !2846)
!2858 = distinct !DISubprogram(name: "gen_const_mem", scope: !3, file: !3, line: 652, type: !2847, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2859)
!2859 = !{!2860, !2861, !2862}
!2860 = !DILocalVariable(name: "mode", arg: 1, scope: !2858, file: !3, line: 652, type: !5)
!2861 = !DILocalVariable(name: "addr", arg: 2, scope: !2858, file: !3, line: 652, type: !787)
!2862 = !DILocalVariable(name: "mem", scope: !2858, file: !3, line: 654, type: !787)
!2863 = !DILocation(line: 0, scope: !2858)
!2864 = !DILocation(line: 654, column: 13, scope: !2858)
!2865 = !DILocation(line: 655, column: 3, scope: !2858)
!2866 = !DILocation(line: 655, column: 24, scope: !2858)
!2867 = !DILocation(line: 656, column: 22, scope: !2858)
!2868 = !DILocation(line: 657, column: 3, scope: !2858)
!2869 = distinct !DISubprogram(name: "gen_frame_mem", scope: !3, file: !3, line: 664, type: !2847, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2870)
!2870 = !{!2871, !2872, !2873}
!2871 = !DILocalVariable(name: "mode", arg: 1, scope: !2869, file: !3, line: 664, type: !5)
!2872 = !DILocalVariable(name: "addr", arg: 2, scope: !2869, file: !3, line: 664, type: !787)
!2873 = !DILocalVariable(name: "mem", scope: !2869, file: !3, line: 666, type: !787)
!2874 = !DILocation(line: 0, scope: !2869)
!2875 = !DILocation(line: 666, column: 13, scope: !2869)
!2876 = !DILocation(line: 667, column: 3, scope: !2869)
!2877 = !DILocation(line: 667, column: 22, scope: !2869)
!2878 = !DILocation(line: 668, column: 27, scope: !2869)
!2879 = !DILocation(line: 668, column: 3, scope: !2869)
!2880 = !DILocation(line: 669, column: 3, scope: !2869)
!2881 = distinct !DISubprogram(name: "set_mem_alias_set", scope: !3, file: !3, line: 1824, type: !2882, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2884)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !787, !1418}
!2884 = !{!2885, !2886}
!2885 = !DILocalVariable(name: "mem", arg: 1, scope: !2881, file: !3, line: 1824, type: !787)
!2886 = !DILocalVariable(name: "set", arg: 2, scope: !2881, file: !3, line: 1824, type: !1418)
!2887 = !DILocation(line: 0, scope: !2881)
!2888 = !DILocation(line: 1831, column: 41, scope: !2881)
!2889 = !DILocation(line: 1831, column: 57, scope: !2881)
!2890 = !DILocation(line: 1832, column: 8, scope: !2881)
!2891 = !DILocation(line: 1832, column: 24, scope: !2881)
!2892 = !DILocation(line: 1833, column: 8, scope: !2881)
!2893 = !DILocation(line: 1833, column: 30, scope: !2881)
!2894 = !DILocation(line: 1831, column: 21, scope: !2881)
!2895 = !DILocation(line: 1831, column: 19, scope: !2881)
!2896 = !DILocation(line: 1834, column: 1, scope: !2881)
!2897 = distinct !DISubprogram(name: "gen_tmp_stack_mem", scope: !3, file: !3, line: 676, type: !2847, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2898)
!2898 = !{!2899, !2900, !2901}
!2899 = !DILocalVariable(name: "mode", arg: 1, scope: !2897, file: !3, line: 676, type: !5)
!2900 = !DILocalVariable(name: "addr", arg: 2, scope: !2897, file: !3, line: 676, type: !787)
!2901 = !DILocalVariable(name: "mem", scope: !2897, file: !3, line: 678, type: !787)
!2902 = !DILocation(line: 0, scope: !2897)
!2903 = !DILocation(line: 678, column: 13, scope: !2897)
!2904 = !DILocation(line: 679, column: 3, scope: !2897)
!2905 = !DILocation(line: 679, column: 22, scope: !2897)
!2906 = !DILocation(line: 680, column: 8, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2897, file: !3, line: 680, column: 7)
!2908 = !DILocation(line: 680, column: 14, scope: !2907)
!2909 = !DILocation(line: 680, column: 7, scope: !2897)
!2910 = !DILocation(line: 681, column: 29, scope: !2907)
!2911 = !DILocation(line: 681, column: 5, scope: !2907)
!2912 = !DILocation(line: 682, column: 3, scope: !2897)
!2913 = distinct !DISubprogram(name: "validate_subreg", scope: !3, file: !3, line: 689, type: !2914, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2916)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!777, !5, !5, !1831, !7}
!2916 = !{!2917, !2918, !2919, !2920, !2921, !2922, !2923, !2926, !2929}
!2917 = !DILocalVariable(name: "omode", arg: 1, scope: !2913, file: !3, line: 689, type: !5)
!2918 = !DILocalVariable(name: "imode", arg: 2, scope: !2913, file: !3, line: 689, type: !5)
!2919 = !DILocalVariable(name: "reg", arg: 3, scope: !2913, file: !3, line: 690, type: !1831)
!2920 = !DILocalVariable(name: "offset", arg: 4, scope: !2913, file: !3, line: 690, type: !7)
!2921 = !DILocalVariable(name: "isize", scope: !2913, file: !3, line: 692, type: !7)
!2922 = !DILocalVariable(name: "osize", scope: !2913, file: !3, line: 693, type: !7)
!2923 = !DILocalVariable(name: "regno", scope: !2924, file: !3, line: 744, type: !7)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 743, column: 5)
!2925 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 742, column: 7)
!2926 = !DILocalVariable(name: "wmode", scope: !2927, file: !3, line: 765, type: !5)
!2927 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 764, column: 5)
!2928 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 763, column: 7)
!2929 = !DILocalVariable(name: "low_off", scope: !2927, file: !3, line: 766, type: !7)
!2930 = !DILocation(line: 0, scope: !2913)
!2931 = !DILocation(line: 692, column: 24, scope: !2913)
!2932 = !DILocation(line: 693, column: 24, scope: !2913)
!2933 = !DILocation(line: 696, column: 14, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 696, column: 7)
!2935 = !DILocation(line: 696, column: 22, scope: !2934)
!2936 = !DILocation(line: 700, column: 14, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 700, column: 7)
!2938 = !DILocation(line: 696, column: 7, scope: !2913)
!2939 = !DILocation(line: 707, column: 16, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 707, column: 7)
!2941 = !DILocation(line: 707, column: 13, scope: !2940)
!2942 = !DILocation(line: 707, column: 7, scope: !2913)
!2943 = !DILocation(line: 711, column: 18, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 711, column: 12)
!2945 = !DILocation(line: 711, column: 45, scope: !2944)
!2946 = !DILocation(line: 711, column: 36, scope: !2944)
!2947 = !DILocation(line: 715, column: 13, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 715, column: 12)
!2949 = !DILocation(line: 715, column: 36, scope: !2948)
!2950 = !DILocation(line: 715, column: 39, scope: !2948)
!2951 = !DILocation(line: 716, column: 5, scope: !2948)
!2952 = !DILocation(line: 716, column: 8, scope: !2948)
!2953 = !DILocation(line: 716, column: 31, scope: !2948)
!2954 = !DILocation(line: 715, column: 12, scope: !2944)
!2955 = !DILocation(line: 723, column: 12, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 723, column: 12)
!2957 = !DILocation(line: 723, column: 34, scope: !2956)
!2958 = !DILocation(line: 723, column: 37, scope: !2956)
!2959 = !DILocation(line: 723, column: 60, scope: !2956)
!2960 = !DILocation(line: 723, column: 12, scope: !2948)
!2961 = !DILocation(line: 728, column: 12, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 728, column: 12)
!2963 = !DILocation(line: 728, column: 33, scope: !2962)
!2964 = !DILocation(line: 728, column: 36, scope: !2962)
!2965 = !DILocation(line: 730, column: 17, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 730, column: 11)
!2967 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 729, column: 5)
!2968 = !DILocation(line: 728, column: 12, scope: !2956)
!2969 = !DILocation(line: 730, column: 11, scope: !2967)
!2970 = !DILocation(line: 735, column: 13, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 735, column: 7)
!2972 = !DILocation(line: 735, column: 7, scope: !2913)
!2973 = !DILocation(line: 736, column: 19, scope: !2971)
!2974 = !DILocation(line: 736, column: 12, scope: !2971)
!2975 = !DILocation(line: 736, column: 5, scope: !2971)
!2976 = !DILocation(line: 742, column: 7, scope: !2925)
!2977 = !DILocation(line: 742, column: 11, scope: !2925)
!2978 = !DILocation(line: 742, column: 14, scope: !2925)
!2979 = !DILocation(line: 742, column: 26, scope: !2925)
!2980 = !DILocation(line: 742, column: 29, scope: !2925)
!2981 = !DILocation(line: 742, column: 7, scope: !2913)
!2982 = !DILocation(line: 744, column: 28, scope: !2924)
!2983 = !DILocation(line: 0, scope: !2924)
!2984 = !DILocation(line: 747, column: 12, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 747, column: 11)
!2986 = !DILocation(line: 747, column: 35, scope: !2985)
!2987 = !DILocation(line: 747, column: 38, scope: !2985)
!2988 = !DILocation(line: 748, column: 4, scope: !2985)
!2989 = !DILocation(line: 748, column: 7, scope: !2985)
!2990 = !DILocation(line: 748, column: 30, scope: !2985)
!2991 = !DILocation(line: 747, column: 11, scope: !2924)
!2992 = !DILocation(line: 750, column: 16, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 750, column: 16)
!2994 = !DILocation(line: 750, column: 16, scope: !2985)
!2995 = !DILocation(line: 754, column: 14, scope: !2924)
!2996 = !DILocation(line: 754, column: 7, scope: !2924)
!2997 = !DILocation(line: 763, column: 13, scope: !2928)
!2998 = !DILocation(line: 763, column: 7, scope: !2913)
!2999 = !DILocation(line: 765, column: 39, scope: !2927)
!3000 = !DILocation(line: 765, column: 33, scope: !2927)
!3001 = !DILocation(line: 0, scope: !2927)
!3002 = !DILocation(line: 766, column: 30, scope: !2927)
!3003 = !DILocation(line: 767, column: 18, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 767, column: 11)
!3005 = !DILocation(line: 767, column: 35, scope: !3004)
!3006 = !DILocation(line: 770, column: 3, scope: !2913)
!3007 = !DILocation(line: 771, column: 1, scope: !2913)
!3008 = distinct !DISubprogram(name: "subreg_lowpart_offset", scope: !3, file: !3, line: 1283, type: !3009, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3011)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!7, !5, !5}
!3011 = !{!3012, !3013, !3014, !3015}
!3012 = !DILocalVariable(name: "outermode", arg: 1, scope: !3008, file: !3, line: 1283, type: !5)
!3013 = !DILocalVariable(name: "innermode", arg: 2, scope: !3008, file: !3, line: 1283, type: !5)
!3014 = !DILocalVariable(name: "offset", scope: !3008, file: !3, line: 1285, type: !7)
!3015 = !DILocalVariable(name: "difference", scope: !3008, file: !3, line: 1286, type: !778)
!3016 = !DILocation(line: 0, scope: !3008)
!3017 = !DILocation(line: 1296, column: 3, scope: !3008)
!3018 = distinct !DISubprogram(name: "gen_rtx_SUBREG", scope: !3, file: !3, line: 774, type: !3019, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3021)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!787, !5, !787, !778}
!3021 = !{!3022, !3023, !3024}
!3022 = !DILocalVariable(name: "mode", arg: 1, scope: !3018, file: !3, line: 774, type: !5)
!3023 = !DILocalVariable(name: "reg", arg: 2, scope: !3018, file: !3, line: 774, type: !787)
!3024 = !DILocalVariable(name: "offset", arg: 3, scope: !3018, file: !3, line: 774, type: !778)
!3025 = !DILocation(line: 0, scope: !3018)
!3026 = !DILocation(line: 776, column: 3, scope: !3018)
!3027 = !DILocation(line: 777, column: 10, scope: !3018)
!3028 = !DILocation(line: 777, column: 3, scope: !3018)
!3029 = distinct !DISubprogram(name: "gen_lowpart_SUBREG", scope: !3, file: !3, line: 784, type: !2847, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3030)
!3030 = !{!3031, !3032, !3033}
!3031 = !DILocalVariable(name: "mode", arg: 1, scope: !3029, file: !3, line: 784, type: !5)
!3032 = !DILocalVariable(name: "reg", arg: 2, scope: !3029, file: !3, line: 784, type: !787)
!3033 = !DILocalVariable(name: "inmode", scope: !3029, file: !3, line: 786, type: !5)
!3034 = !DILocation(line: 0, scope: !3029)
!3035 = !DILocation(line: 788, column: 12, scope: !3029)
!3036 = !DILocation(line: 789, column: 14, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 789, column: 7)
!3038 = !DILocation(line: 789, column: 7, scope: !3029)
!3039 = !DILocation(line: 792, column: 5, scope: !3029)
!3040 = !DILocation(line: 791, column: 10, scope: !3029)
!3041 = !DILocation(line: 791, column: 3, scope: !3029)
!3042 = distinct !DISubprogram(name: "gen_rtvec", scope: !3, file: !3, line: 799, type: !3043, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3045)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!815, !778, null}
!3045 = !{!3046, !3047, !3048, !3049}
!3046 = !DILocalVariable(name: "n", arg: 1, scope: !3042, file: !3, line: 799, type: !778)
!3047 = !DILocalVariable(name: "i", scope: !3042, file: !3, line: 801, type: !778)
!3048 = !DILocalVariable(name: "rt_val", scope: !3042, file: !3, line: 802, type: !815)
!3049 = !DILocalVariable(name: "p", scope: !3042, file: !3, line: 803, type: !3050)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3051, line: 52, baseType: !3052)
!3051 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3053, line: 32, baseType: !3054)
!3053 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 803, baseType: !3055)
!3055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 192, elements: !822)
!3056 = !DILocation(line: 0, scope: !3042)
!3057 = !DILocation(line: 803, column: 3, scope: !3042)
!3058 = !DILocation(line: 803, column: 11, scope: !3042)
!3059 = !DILocation(line: 805, column: 3, scope: !3042)
!3060 = !DILocation(line: 808, column: 9, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 808, column: 7)
!3062 = !DILocation(line: 808, column: 7, scope: !3042)
!3063 = !DILocation(line: 811, column: 12, scope: !3042)
!3064 = !DILocation(line: 0, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 813, column: 3)
!3066 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 813, column: 3)
!3067 = !DILocation(line: 813, column: 8, scope: !3066)
!3068 = !DILocation(line: 0, scope: !3066)
!3069 = !DILocation(line: 813, column: 17, scope: !3065)
!3070 = !DILocation(line: 813, column: 3, scope: !3066)
!3071 = !DILocation(line: 814, column: 23, scope: !3065)
!3072 = !DILocation(line: 814, column: 5, scope: !3065)
!3073 = !DILocation(line: 814, column: 21, scope: !3065)
!3074 = !DILocation(line: 813, column: 23, scope: !3065)
!3075 = !DILocation(line: 813, column: 3, scope: !3065)
!3076 = distinct !{!3076, !3070, !3077}
!3077 = !DILocation(line: 814, column: 23, scope: !3066)
!3078 = !DILocation(line: 816, column: 3, scope: !3042)
!3079 = !DILocation(line: 817, column: 3, scope: !3042)
!3080 = !DILocation(line: 818, column: 1, scope: !3042)
!3081 = distinct !DISubprogram(name: "gen_rtvec_v", scope: !3, file: !3, line: 821, type: !3082, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3084)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!815, !778, !1824}
!3084 = !{!3085, !3086, !3087, !3088}
!3085 = !DILocalVariable(name: "n", arg: 1, scope: !3081, file: !3, line: 821, type: !778)
!3086 = !DILocalVariable(name: "argp", arg: 2, scope: !3081, file: !3, line: 821, type: !1824)
!3087 = !DILocalVariable(name: "i", scope: !3081, file: !3, line: 823, type: !778)
!3088 = !DILocalVariable(name: "rt_val", scope: !3081, file: !3, line: 824, type: !815)
!3089 = !DILocation(line: 0, scope: !3081)
!3090 = !DILocation(line: 827, column: 9, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 827, column: 7)
!3092 = !DILocation(line: 827, column: 7, scope: !3081)
!3093 = !DILocation(line: 830, column: 12, scope: !3081)
!3094 = !DILocation(line: 832, column: 8, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 832, column: 3)
!3096 = !DILocation(line: 0, scope: !3095)
!3097 = !DILocation(line: 832, column: 17, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 832, column: 3)
!3099 = !DILocation(line: 832, column: 3, scope: !3095)
!3100 = !DILocation(line: 833, column: 28, scope: !3098)
!3101 = !DILocation(line: 833, column: 23, scope: !3098)
!3102 = !DILocation(line: 833, column: 5, scope: !3098)
!3103 = !DILocation(line: 833, column: 21, scope: !3098)
!3104 = !DILocation(line: 832, column: 23, scope: !3098)
!3105 = !DILocation(line: 832, column: 3, scope: !3098)
!3106 = distinct !{!3106, !3099, !3107}
!3107 = !DILocation(line: 833, column: 28, scope: !3095)
!3108 = !DILocation(line: 836, column: 1, scope: !3081)
!3109 = distinct !DISubprogram(name: "byte_lowpart_offset", scope: !3, file: !3, line: 845, type: !3110, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3112)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!778, !5, !5}
!3112 = !{!3113, !3114}
!3113 = !DILocalVariable(name: "outer_mode", arg: 1, scope: !3109, file: !3, line: 845, type: !5)
!3114 = !DILocalVariable(name: "inner_mode", arg: 2, scope: !3109, file: !3, line: 846, type: !5)
!3115 = !DILocation(line: 0, scope: !3109)
!3116 = !DILocation(line: 848, column: 7, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 848, column: 7)
!3118 = !DILocation(line: 848, column: 36, scope: !3117)
!3119 = !DILocation(line: 848, column: 34, scope: !3117)
!3120 = !DILocation(line: 848, column: 7, scope: !3109)
!3121 = !DILocation(line: 849, column: 12, scope: !3117)
!3122 = !DILocation(line: 849, column: 5, scope: !3117)
!3123 = !DILocation(line: 851, column: 13, scope: !3117)
!3124 = !DILocation(line: 851, column: 5, scope: !3117)
!3125 = !DILocation(line: 852, column: 1, scope: !3109)
!3126 = distinct !DISubprogram(name: "gen_reg_rtx", scope: !3, file: !3, line: 858, type: !3127, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3129)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!787, !5}
!3129 = !{!3130, !3131, !3132, !3133, !3136, !3139, !3140, !3141, !3144, !3145}
!3130 = !DILocalVariable(name: "mode", arg: 1, scope: !3126, file: !3, line: 858, type: !5)
!3131 = !DILocalVariable(name: "val", scope: !3126, file: !3, line: 860, type: !787)
!3132 = !DILocalVariable(name: "align", scope: !3126, file: !3, line: 861, type: !7)
!3133 = !DILocalVariable(name: "min_align", scope: !3134, file: !3, line: 872, type: !7)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 871, column: 5)
!3135 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 868, column: 7)
!3136 = !DILocalVariable(name: "realpart", scope: !3137, file: !3, line: 886, type: !787)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 880, column: 5)
!3138 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 877, column: 7)
!3139 = !DILocalVariable(name: "imagpart", scope: !3137, file: !3, line: 886, type: !787)
!3140 = !DILocalVariable(name: "partmode", scope: !3137, file: !3, line: 887, type: !5)
!3141 = !DILocalVariable(name: "old_size", scope: !3142, file: !3, line: 899, type: !778)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 898, column: 5)
!3143 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 897, column: 7)
!3144 = !DILocalVariable(name: "tmp", scope: !3142, file: !3, line: 900, type: !780)
!3145 = !DILocalVariable(name: "new1", scope: !3142, file: !3, line: 901, type: !1824)
!3146 = !DILocation(line: 0, scope: !3126)
!3147 = !DILocation(line: 861, column: 24, scope: !3126)
!3148 = !DILocation(line: 863, column: 3, scope: !3126)
!3149 = !DILocation(line: 869, column: 16, scope: !3135)
!3150 = !DILocation(line: 869, column: 42, scope: !3135)
!3151 = !DILocation(line: 870, column: 17, scope: !3135)
!3152 = !DILocation(line: 870, column: 11, scope: !3135)
!3153 = !DILocation(line: 870, column: 7, scope: !3135)
!3154 = !DILocation(line: 872, column: 32, scope: !3134)
!3155 = !DILocation(line: 0, scope: !3134)
!3156 = !DILocation(line: 873, column: 17, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 873, column: 11)
!3158 = !DILocation(line: 873, column: 43, scope: !3157)
!3159 = !DILocation(line: 873, column: 11, scope: !3134)
!3160 = !DILocation(line: 874, column: 34, scope: !3157)
!3161 = !DILocation(line: 874, column: 2, scope: !3157)
!3162 = !DILocation(line: 877, column: 7, scope: !3138)
!3163 = !DILocation(line: 878, column: 7, scope: !3138)
!3164 = !DILocation(line: 878, column: 11, scope: !3138)
!3165 = !DILocation(line: 878, column: 33, scope: !3138)
!3166 = !DILocation(line: 879, column: 4, scope: !3138)
!3167 = !DILocation(line: 879, column: 29, scope: !3138)
!3168 = !DILocation(line: 877, column: 7, scope: !3126)
!3169 = !DILocation(line: 887, column: 36, scope: !3137)
!3170 = !DILocation(line: 0, scope: !3137)
!3171 = !DILocation(line: 889, column: 18, scope: !3137)
!3172 = !DILocation(line: 890, column: 18, scope: !3137)
!3173 = !DILocation(line: 891, column: 14, scope: !3137)
!3174 = !DILocation(line: 917, column: 1, scope: !3126)
!3175 = !DILocation(line: 897, column: 7, scope: !3143)
!3176 = !DILocation(line: 897, column: 32, scope: !3143)
!3177 = !DILocation(line: 897, column: 18, scope: !3143)
!3178 = !DILocation(line: 897, column: 7, scope: !3126)
!3179 = !DILocation(line: 0, scope: !3142)
!3180 = !DILocation(line: 903, column: 13, scope: !3142)
!3181 = !DILocation(line: 904, column: 19, scope: !3142)
!3182 = !DILocation(line: 904, column: 7, scope: !3142)
!3183 = !DILocation(line: 905, column: 38, scope: !3142)
!3184 = !DILocation(line: 907, column: 14, scope: !3142)
!3185 = !DILocation(line: 908, column: 20, scope: !3142)
!3186 = !DILocation(line: 908, column: 15, scope: !3142)
!3187 = !DILocation(line: 908, column: 44, scope: !3142)
!3188 = !DILocation(line: 908, column: 7, scope: !3142)
!3189 = !DILocation(line: 909, column: 21, scope: !3142)
!3190 = !DILocation(line: 911, column: 45, scope: !3142)
!3191 = !DILocation(line: 914, column: 28, scope: !3126)
!3192 = !DILocation(line: 912, column: 5, scope: !3142)
!3193 = !DILocation(line: 914, column: 9, scope: !3126)
!3194 = !DILocation(line: 915, column: 3, scope: !3126)
!3195 = !DILocation(line: 915, column: 27, scope: !3126)
!3196 = !DILocation(line: 915, column: 31, scope: !3126)
!3197 = distinct !DISubprogram(name: "gen_rtx_REG_offset", scope: !3, file: !3, line: 933, type: !3198, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3200)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!787, !787, !5, !7, !778}
!3200 = !{!3201, !3202, !3203, !3204, !3205}
!3201 = !DILocalVariable(name: "reg", arg: 1, scope: !3197, file: !3, line: 933, type: !787)
!3202 = !DILocalVariable(name: "mode", arg: 2, scope: !3197, file: !3, line: 933, type: !5)
!3203 = !DILocalVariable(name: "regno", arg: 3, scope: !3197, file: !3, line: 933, type: !7)
!3204 = !DILocalVariable(name: "offset", arg: 4, scope: !3197, file: !3, line: 934, type: !778)
!3205 = !DILocalVariable(name: "new_rtx", scope: !3197, file: !3, line: 936, type: !787)
!3206 = !DILocation(line: 0, scope: !3197)
!3207 = !DILocation(line: 936, column: 17, scope: !3197)
!3208 = !DILocation(line: 938, column: 3, scope: !3197)
!3209 = !DILocation(line: 939, column: 3, scope: !3197)
!3210 = distinct !DISubprogram(name: "update_reg_offset", scope: !3, file: !3, line: 923, type: !3211, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3213)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !787, !787, !778}
!3213 = !{!3214, !3215, !3216}
!3214 = !DILocalVariable(name: "new_rtx", arg: 1, scope: !3210, file: !3, line: 923, type: !787)
!3215 = !DILocalVariable(name: "reg", arg: 2, scope: !3210, file: !3, line: 923, type: !787)
!3216 = !DILocalVariable(name: "offset", arg: 3, scope: !3210, file: !3, line: 923, type: !778)
!3217 = !DILocation(line: 0, scope: !3210)
!3218 = !DILocation(line: 925, column: 40, scope: !3210)
!3219 = !DILocation(line: 926, column: 8, scope: !3210)
!3220 = !DILocation(line: 925, column: 25, scope: !3210)
!3221 = !DILocation(line: 925, column: 3, scope: !3210)
!3222 = !DILocation(line: 925, column: 23, scope: !3210)
!3223 = !DILocation(line: 927, column: 1, scope: !3210)
!3224 = distinct !DISubprogram(name: "gen_reg_rtx_offset", scope: !3, file: !3, line: 946, type: !3225, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3227)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!787, !787, !5, !778}
!3227 = !{!3228, !3229, !3230, !3231}
!3228 = !DILocalVariable(name: "reg", arg: 1, scope: !3224, file: !3, line: 946, type: !787)
!3229 = !DILocalVariable(name: "mode", arg: 2, scope: !3224, file: !3, line: 946, type: !5)
!3230 = !DILocalVariable(name: "offset", arg: 3, scope: !3224, file: !3, line: 946, type: !778)
!3231 = !DILocalVariable(name: "new_rtx", scope: !3224, file: !3, line: 948, type: !787)
!3232 = !DILocation(line: 0, scope: !3224)
!3233 = !DILocation(line: 948, column: 17, scope: !3224)
!3234 = !DILocation(line: 950, column: 3, scope: !3224)
!3235 = !DILocation(line: 951, column: 3, scope: !3224)
!3236 = distinct !DISubprogram(name: "adjust_reg_mode", scope: !3, file: !3, line: 958, type: !3237, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3239)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{null, !787, !5}
!3239 = !{!3240, !3241}
!3240 = !DILocalVariable(name: "reg", arg: 1, scope: !3236, file: !3, line: 958, type: !787)
!3241 = !DILocalVariable(name: "mode", arg: 2, scope: !3236, file: !3, line: 958, type: !5)
!3242 = !DILocation(line: 0, scope: !3236)
!3243 = !DILocation(line: 960, column: 59, scope: !3236)
!3244 = !DILocation(line: 960, column: 32, scope: !3236)
!3245 = !DILocation(line: 960, column: 3, scope: !3236)
!3246 = !DILocation(line: 961, column: 3, scope: !3236)
!3247 = !DILocation(line: 962, column: 1, scope: !3236)
!3248 = distinct !DISubprogram(name: "set_reg_attrs_from_value", scope: !3, file: !3, line: 968, type: !3249, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3251)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null, !787, !787}
!3251 = !{!3252, !3253, !3254}
!3252 = !DILocalVariable(name: "reg", arg: 1, scope: !3248, file: !3, line: 968, type: !787)
!3253 = !DILocalVariable(name: "x", arg: 2, scope: !3248, file: !3, line: 968, type: !787)
!3254 = !DILocalVariable(name: "offset", scope: !3248, file: !3, line: 970, type: !778)
!3255 = !DILocation(line: 0, scope: !3248)
!3256 = !DILocation(line: 975, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 975, column: 7)
!3258 = !DILocation(line: 975, column: 7, scope: !3248)
!3259 = !DILocation(line: 978, column: 33, scope: !3248)
!3260 = !DILocation(line: 978, column: 49, scope: !3248)
!3261 = !DILocation(line: 978, column: 12, scope: !3248)
!3262 = !DILocation(line: 979, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 979, column: 7)
!3264 = !DILocation(line: 979, column: 7, scope: !3248)
!3265 = !DILocation(line: 981, column: 11, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 981, column: 11)
!3267 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 980, column: 5)
!3268 = !DILocation(line: 981, column: 26, scope: !3266)
!3269 = !DILocation(line: 981, column: 29, scope: !3266)
!3270 = !DILocation(line: 981, column: 11, scope: !3267)
!3271 = !DILocation(line: 983, column: 21, scope: !3266)
!3272 = !DILocation(line: 983, column: 35, scope: !3266)
!3273 = !DILocation(line: 983, column: 6, scope: !3266)
!3274 = !DILocation(line: 982, column: 2, scope: !3266)
!3275 = !DILocation(line: 983, column: 4, scope: !3266)
!3276 = !DILocation(line: 984, column: 11, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 984, column: 11)
!3278 = !DILocation(line: 984, column: 11, scope: !3267)
!3279 = !DILocation(line: 985, column: 2, scope: !3277)
!3280 = !DILocation(line: 987, column: 12, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 987, column: 12)
!3282 = !DILocation(line: 987, column: 12, scope: !3263)
!3283 = !DILocation(line: 989, column: 11, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 989, column: 11)
!3285 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 988, column: 5)
!3286 = !DILocation(line: 989, column: 11, scope: !3285)
!3287 = !DILocation(line: 990, column: 2, scope: !3284)
!3288 = !DILocation(line: 991, column: 11, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 991, column: 11)
!3290 = !DILocation(line: 991, column: 11, scope: !3285)
!3291 = !DILocation(line: 992, column: 25, scope: !3289)
!3292 = !DILocation(line: 992, column: 2, scope: !3289)
!3293 = !DILocation(line: 994, column: 1, scope: !3248)
!3294 = distinct !DISubprogram(name: "get_reg_attrs", scope: !3, file: !3, line: 381, type: !3295, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3297)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!1781, !903, !778}
!3297 = !{!3298, !3299, !3300, !3301}
!3298 = !DILocalVariable(name: "decl", arg: 1, scope: !3294, file: !3, line: 381, type: !903)
!3299 = !DILocalVariable(name: "offset", arg: 2, scope: !3294, file: !3, line: 381, type: !778)
!3300 = !DILocalVariable(name: "attrs", scope: !3294, file: !3, line: 383, type: !1782)
!3301 = !DILocalVariable(name: "slot", scope: !3294, file: !3, line: 384, type: !1289)
!3302 = !DILocation(line: 0, scope: !3294)
!3303 = !DILocation(line: 383, column: 3, scope: !3294)
!3304 = !DILocation(line: 387, column: 12, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 387, column: 7)
!3306 = !DILocation(line: 387, column: 27, scope: !3305)
!3307 = !DILocation(line: 387, column: 17, scope: !3305)
!3308 = !DILocation(line: 390, column: 9, scope: !3294)
!3309 = !DILocation(line: 390, column: 14, scope: !3294)
!3310 = !DILocation(line: 391, column: 18, scope: !3294)
!3311 = !DILocation(line: 391, column: 9, scope: !3294)
!3312 = !DILocation(line: 391, column: 16, scope: !3294)
!3313 = !DILocation(line: 393, column: 26, scope: !3294)
!3314 = !DILocation(line: 393, column: 10, scope: !3294)
!3315 = !DILocation(line: 394, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 394, column: 7)
!3317 = !DILocation(line: 394, column: 13, scope: !3316)
!3318 = !DILocation(line: 394, column: 7, scope: !3294)
!3319 = !DILocation(line: 396, column: 15, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 395, column: 5)
!3321 = !DILocation(line: 396, column: 13, scope: !3320)
!3322 = !DILocation(line: 397, column: 7, scope: !3320)
!3323 = !DILocation(line: 400, column: 24, scope: !3294)
!3324 = !DILocation(line: 398, column: 5, scope: !3320)
!3325 = !DILocation(line: 400, column: 3, scope: !3294)
!3326 = !DILocation(line: 401, column: 1, scope: !3294)
!3327 = distinct !DISubprogram(name: "mark_reg_pointer", scope: !3, file: !3, line: 1116, type: !3328, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !787, !778}
!3330 = !{!3331, !3332}
!3331 = !DILocalVariable(name: "reg", arg: 1, scope: !3327, file: !3, line: 1116, type: !787)
!3332 = !DILocalVariable(name: "align", arg: 2, scope: !3327, file: !3, line: 1116, type: !778)
!3333 = !DILocation(line: 0, scope: !3327)
!3334 = !DILocation(line: 1118, column: 9, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1118, column: 7)
!3336 = !DILocation(line: 1118, column: 7, scope: !3327)
!3337 = !DILocation(line: 1120, column: 25, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 1119, column: 5)
!3339 = !DILocation(line: 1122, column: 11, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1122, column: 11)
!3341 = !DILocation(line: 1122, column: 11, scope: !3338)
!3342 = !DILocation(line: 1123, column: 38, scope: !3340)
!3343 = !DILocation(line: 1123, column: 2, scope: !3340)
!3344 = !DILocation(line: 1123, column: 36, scope: !3340)
!3345 = !DILocation(line: 1125, column: 12, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 1125, column: 12)
!3347 = !DILocation(line: 1125, column: 18, scope: !3346)
!3348 = !DILocation(line: 1125, column: 29, scope: !3346)
!3349 = !DILocation(line: 1125, column: 27, scope: !3346)
!3350 = !DILocation(line: 1125, column: 12, scope: !3335)
!3351 = !DILocation(line: 1127, column: 41, scope: !3346)
!3352 = !DILocation(line: 1127, column: 5, scope: !3346)
!3353 = !DILocation(line: 1127, column: 39, scope: !3346)
!3354 = !DILocation(line: 1128, column: 1, scope: !3327)
!3355 = distinct !DISubprogram(name: "gen_reg_rtx_and_attrs", scope: !3, file: !3, line: 1000, type: !2687, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3356)
!3356 = !{!3357, !3358}
!3357 = !DILocalVariable(name: "x", arg: 1, scope: !3355, file: !3, line: 1000, type: !787)
!3358 = !DILocalVariable(name: "reg", scope: !3355, file: !3, line: 1002, type: !787)
!3359 = !DILocation(line: 0, scope: !3355)
!3360 = !DILocation(line: 1002, column: 26, scope: !3355)
!3361 = !DILocation(line: 1002, column: 13, scope: !3355)
!3362 = !DILocation(line: 1003, column: 3, scope: !3355)
!3363 = !DILocation(line: 1004, column: 3, scope: !3355)
!3364 = distinct !DISubprogram(name: "set_reg_attrs_for_parm", scope: !3, file: !3, line: 1011, type: !3249, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3365)
!3365 = !{!3366, !3367, !3368, !3372}
!3366 = !DILocalVariable(name: "parm_rtx", arg: 1, scope: !3364, file: !3, line: 1011, type: !787)
!3367 = !DILocalVariable(name: "mem", arg: 2, scope: !3364, file: !3, line: 1011, type: !787)
!3368 = !DILocalVariable(name: "i", scope: !3369, file: !3, line: 1019, type: !778)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1016, column: 5)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 1015, column: 12)
!3371 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 1013, column: 7)
!3372 = !DILocalVariable(name: "x", scope: !3373, file: !3, line: 1022, type: !787)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 1021, column: 2)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 1020, column: 7)
!3375 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 1020, column: 7)
!3376 = !DILocation(line: 0, scope: !3364)
!3377 = !DILocation(line: 1013, column: 7, scope: !3371)
!3378 = !DILocation(line: 1013, column: 7, scope: !3364)
!3379 = !DILocation(line: 1014, column: 5, scope: !3371)
!3380 = !DILocation(line: 1015, column: 32, scope: !3370)
!3381 = !DILocation(line: 1015, column: 12, scope: !3371)
!3382 = !DILocation(line: 1019, column: 15, scope: !3369)
!3383 = !DILocation(line: 0, scope: !3369)
!3384 = !DILocation(line: 0, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 1023, column: 8)
!3386 = !DILocation(line: 1020, column: 7, scope: !3369)
!3387 = !DILocation(line: 1020, column: 18, scope: !3374)
!3388 = !DILocation(line: 1020, column: 16, scope: !3374)
!3389 = !DILocation(line: 1020, column: 7, scope: !3375)
!3390 = !DILocation(line: 1022, column: 12, scope: !3373)
!3391 = !DILocation(line: 0, scope: !3373)
!3392 = !DILocation(line: 1023, column: 8, scope: !3385)
!3393 = !DILocation(line: 1023, column: 8, scope: !3373)
!3394 = !DILocation(line: 1025, column: 25, scope: !3385)
!3395 = !DILocation(line: 1026, column: 11, scope: !3385)
!3396 = !DILocation(line: 1025, column: 10, scope: !3385)
!3397 = !DILocation(line: 1024, column: 6, scope: !3385)
!3398 = !DILocation(line: 1025, column: 8, scope: !3385)
!3399 = !DILocation(line: 1020, column: 42, scope: !3374)
!3400 = !DILocation(line: 1020, column: 7, scope: !3374)
!3401 = distinct !{!3401, !3389, !3402}
!3402 = !DILocation(line: 1027, column: 2, scope: !3375)
!3403 = !DILocation(line: 1029, column: 1, scope: !3364)
!3404 = distinct !DISubprogram(name: "set_reg_attrs_for_decl_rtl", scope: !3, file: !3, line: 1035, type: !3405, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3407)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{null, !903, !787}
!3407 = !{!3408, !3409, !3410, !3413, !3414}
!3408 = !DILocalVariable(name: "t", arg: 1, scope: !3404, file: !3, line: 1035, type: !903)
!3409 = !DILocalVariable(name: "x", arg: 2, scope: !3404, file: !3, line: 1035, type: !787)
!3410 = !DILocalVariable(name: "i", scope: !3411, file: !3, line: 1056, type: !778)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1055, column: 5)
!3412 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1054, column: 7)
!3413 = !DILocalVariable(name: "start", scope: !3411, file: !3, line: 1056, type: !778)
!3414 = !DILocalVariable(name: "y", scope: !3415, file: !3, line: 1067, type: !787)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 1066, column: 2)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1065, column: 7)
!3417 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1065, column: 7)
!3418 = !DILocation(line: 0, scope: !3404)
!3419 = !DILocation(line: 1037, column: 7, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1037, column: 7)
!3421 = !DILocation(line: 1037, column: 20, scope: !3420)
!3422 = !DILocation(line: 1037, column: 7, scope: !3404)
!3423 = !DILocation(line: 1039, column: 7, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 1038, column: 5)
!3425 = !DILocation(line: 1040, column: 11, scope: !3424)
!3426 = !DILocation(line: 0, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1042, column: 7)
!3428 = !DILocation(line: 1042, column: 7, scope: !3427)
!3429 = !DILocation(line: 1041, column: 5, scope: !3424)
!3430 = !DILocation(line: 1042, column: 7, scope: !3404)
!3431 = !DILocation(line: 1044, column: 48, scope: !3427)
!3432 = !DILocation(line: 1045, column: 13, scope: !3427)
!3433 = !DILocation(line: 1044, column: 27, scope: !3427)
!3434 = !DILocation(line: 1044, column: 9, scope: !3427)
!3435 = !DILocation(line: 1043, column: 5, scope: !3427)
!3436 = !DILocation(line: 1044, column: 7, scope: !3427)
!3437 = !DILocation(line: 1046, column: 7, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1046, column: 7)
!3439 = !DILocation(line: 1046, column: 20, scope: !3438)
!3440 = !DILocation(line: 1046, column: 7, scope: !3404)
!3441 = !DILocation(line: 1048, column: 11, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 1048, column: 11)
!3443 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1047, column: 5)
!3444 = !DILocation(line: 1048, column: 11, scope: !3443)
!3445 = !DILocation(line: 1049, column: 35, scope: !3442)
!3446 = !DILocation(line: 1049, column: 9, scope: !3442)
!3447 = !DILocation(line: 1049, column: 33, scope: !3442)
!3448 = !DILocation(line: 1050, column: 11, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 1050, column: 11)
!3450 = !DILocation(line: 1050, column: 11, scope: !3443)
!3451 = !DILocation(line: 1052, column: 24, scope: !3449)
!3452 = !DILocation(line: 1052, column: 6, scope: !3449)
!3453 = !DILocation(line: 1051, column: 2, scope: !3449)
!3454 = !DILocation(line: 1052, column: 4, scope: !3449)
!3455 = !DILocation(line: 1054, column: 7, scope: !3412)
!3456 = !DILocation(line: 1054, column: 20, scope: !3412)
!3457 = !DILocation(line: 1054, column: 7, scope: !3404)
!3458 = !DILocation(line: 1060, column: 11, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1060, column: 11)
!3460 = !DILocation(line: 0, scope: !3411)
!3461 = !DILocation(line: 1065, column: 12, scope: !3417)
!3462 = !DILocation(line: 1065, column: 27, scope: !3416)
!3463 = !DILocation(line: 1065, column: 25, scope: !3416)
!3464 = !DILocation(line: 1065, column: 7, scope: !3417)
!3465 = !DILocation(line: 1067, column: 12, scope: !3415)
!3466 = !DILocation(line: 0, scope: !3415)
!3467 = !DILocation(line: 1068, column: 8, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 1068, column: 8)
!3469 = !DILocation(line: 1068, column: 8, scope: !3415)
!3470 = !DILocation(line: 1069, column: 50, scope: !3468)
!3471 = !DILocation(line: 1069, column: 32, scope: !3468)
!3472 = !DILocation(line: 1069, column: 6, scope: !3468)
!3473 = !DILocation(line: 1069, column: 30, scope: !3468)
!3474 = !DILocation(line: 1065, column: 44, scope: !3416)
!3475 = !DILocation(line: 1065, column: 7, scope: !3416)
!3476 = distinct !{!3476, !3464, !3477}
!3477 = !DILocation(line: 1070, column: 2, scope: !3417)
!3478 = !DILocation(line: 1072, column: 1, scope: !3404)
!3479 = distinct !DISubprogram(name: "subreg_lowpart_p", scope: !3, file: !3, line: 1325, type: !3480, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3482)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!778, !1831}
!3482 = !{!3483}
!3483 = !DILocalVariable(name: "x", arg: 1, scope: !3479, file: !3, line: 1325, type: !1831)
!3484 = !DILocation(line: 0, scope: !3479)
!3485 = !DILocation(line: 1327, column: 7, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1327, column: 7)
!3487 = !DILocation(line: 1327, column: 20, scope: !3486)
!3488 = !DILocation(line: 1327, column: 7, scope: !3479)
!3489 = !DILocation(line: 1329, column: 12, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 1329, column: 12)
!3491 = !DILocation(line: 1329, column: 38, scope: !3490)
!3492 = !DILocation(line: 1329, column: 12, scope: !3486)
!3493 = !DILocation(line: 1332, column: 34, scope: !3479)
!3494 = !DILocation(line: 1332, column: 48, scope: !3479)
!3495 = !DILocation(line: 1332, column: 11, scope: !3479)
!3496 = !DILocation(line: 1333, column: 7, scope: !3479)
!3497 = !DILocation(line: 1333, column: 4, scope: !3479)
!3498 = !DILocation(line: 1332, column: 3, scope: !3479)
!3499 = !DILocation(line: 1334, column: 1, scope: !3479)
!3500 = distinct !DISubprogram(name: "set_decl_rtl", scope: !3, file: !3, line: 1077, type: !3405, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3501)
!3501 = !{!3502, !3503}
!3502 = !DILocalVariable(name: "t", arg: 1, scope: !3500, file: !3, line: 1077, type: !903)
!3503 = !DILocalVariable(name: "x", arg: 2, scope: !3500, file: !3, line: 1077, type: !787)
!3504 = !DILocation(line: 0, scope: !3500)
!3505 = !DILocation(line: 1079, column: 38, scope: !3500)
!3506 = !DILocation(line: 1079, column: 42, scope: !3500)
!3507 = !DILocation(line: 1080, column: 7, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 1080, column: 7)
!3509 = !DILocation(line: 1080, column: 7, scope: !3500)
!3510 = !DILocation(line: 1081, column: 5, scope: !3508)
!3511 = !DILocation(line: 1082, column: 1, scope: !3500)
!3512 = distinct !DISubprogram(name: "set_decl_incoming_rtl", scope: !3, file: !3, line: 1088, type: !3513, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3515)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{null, !903, !787, !777}
!3515 = !{!3516, !3517, !3518}
!3516 = !DILocalVariable(name: "t", arg: 1, scope: !3512, file: !3, line: 1088, type: !903)
!3517 = !DILocalVariable(name: "x", arg: 2, scope: !3512, file: !3, line: 1088, type: !787)
!3518 = !DILocalVariable(name: "by_reference_p", arg: 3, scope: !3512, file: !3, line: 1088, type: !777)
!3519 = !DILocation(line: 0, scope: !3512)
!3520 = !DILocation(line: 1090, column: 3, scope: !3512)
!3521 = !DILocation(line: 1090, column: 25, scope: !3512)
!3522 = !DILocation(line: 1091, column: 7, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 1091, column: 7)
!3524 = !DILocation(line: 1091, column: 13, scope: !3523)
!3525 = !DILocation(line: 1091, column: 9, scope: !3523)
!3526 = !DILocation(line: 1092, column: 5, scope: !3523)
!3527 = !DILocation(line: 1093, column: 1, scope: !3512)
!3528 = distinct !DISubprogram(name: "mark_user_reg", scope: !3, file: !3, line: 1098, type: !3529, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !787}
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "reg", arg: 1, scope: !3528, file: !3, line: 1098, type: !787)
!3533 = !DILocation(line: 0, scope: !3528)
!3534 = !DILocation(line: 1100, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 1100, column: 7)
!3536 = !DILocation(line: 1100, column: 22, scope: !3535)
!3537 = !DILocation(line: 1100, column: 7, scope: !3528)
!3538 = !DILocation(line: 1102, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1101, column: 5)
!3540 = !DILocation(line: 1102, column: 37, scope: !3539)
!3541 = !DILocation(line: 1103, column: 7, scope: !3539)
!3542 = !DILocation(line: 1103, column: 37, scope: !3539)
!3543 = !DILocation(line: 1104, column: 5, scope: !3539)
!3544 = !DILocation(line: 1107, column: 7, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1106, column: 5)
!3546 = !DILocation(line: 1108, column: 27, scope: !3545)
!3547 = !DILocation(line: 1110, column: 1, scope: !3528)
!3548 = distinct !DISubprogram(name: "max_reg_num", scope: !3, file: !3, line: 1133, type: !2200, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!3549 = !DILocation(line: 1135, column: 10, scope: !3548)
!3550 = !DILocation(line: 1135, column: 3, scope: !3548)
!3551 = distinct !DISubprogram(name: "max_label_num", scope: !3, file: !3, line: 1141, type: !2200, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!3552 = !DILocation(line: 1143, column: 10, scope: !3551)
!3553 = !DILocation(line: 1143, column: 3, scope: !3551)
!3554 = distinct !DISubprogram(name: "get_first_label_num", scope: !3, file: !3, line: 1149, type: !2200, scopeLine: 1150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!3555 = !DILocation(line: 1151, column: 10, scope: !3554)
!3556 = !DILocation(line: 1151, column: 3, scope: !3554)
!3557 = distinct !DISubprogram(name: "maybe_set_first_label_num", scope: !3, file: !3, line: 1159, type: !3529, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3558)
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "x", arg: 1, scope: !3557, file: !3, line: 1159, type: !787)
!3560 = !DILocation(line: 0, scope: !3557)
!3561 = !DILocation(line: 1161, column: 7, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 1161, column: 7)
!3563 = !DILocation(line: 1161, column: 31, scope: !3562)
!3564 = !DILocation(line: 1161, column: 29, scope: !3562)
!3565 = !DILocation(line: 1161, column: 7, scope: !3557)
!3566 = !DILocation(line: 1162, column: 21, scope: !3562)
!3567 = !DILocation(line: 1162, column: 5, scope: !3562)
!3568 = !DILocation(line: 1163, column: 1, scope: !3557)
!3569 = distinct !DISubprogram(name: "gen_lowpart_common", scope: !3, file: !3, line: 1177, type: !2847, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3570)
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3576}
!3571 = !DILocalVariable(name: "mode", arg: 1, scope: !3569, file: !3, line: 1177, type: !5)
!3572 = !DILocalVariable(name: "x", arg: 2, scope: !3569, file: !3, line: 1177, type: !787)
!3573 = !DILocalVariable(name: "msize", scope: !3569, file: !3, line: 1179, type: !778)
!3574 = !DILocalVariable(name: "xsize", scope: !3569, file: !3, line: 1180, type: !778)
!3575 = !DILocalVariable(name: "offset", scope: !3569, file: !3, line: 1181, type: !778)
!3576 = !DILocalVariable(name: "innermode", scope: !3569, file: !3, line: 1182, type: !5)
!3577 = !DILocation(line: 0, scope: !3569)
!3578 = !DILocation(line: 0, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1206, column: 7)
!3580 = !DILocation(line: 1186, column: 15, scope: !3569)
!3581 = !DILocation(line: 1226, column: 9, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 1225, column: 16)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1223, column: 11)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 1214, column: 5)
!3585 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1211, column: 7)
!3586 = !DILocation(line: 1179, column: 15, scope: !3569)
!3587 = !DILocation(line: 1187, column: 7, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1187, column: 7)
!3589 = !DILocation(line: 1188, column: 32, scope: !3588)
!3590 = !DILocation(line: 1188, column: 7, scope: !3588)
!3591 = !DILocation(line: 1189, column: 17, scope: !3588)
!3592 = !DILocation(line: 1189, column: 5, scope: !3588)
!3593 = !DILocation(line: 1190, column: 22, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 1190, column: 12)
!3595 = !DILocation(line: 1190, column: 12, scope: !3588)
!3596 = !DILocation(line: 1191, column: 17, scope: !3594)
!3597 = !DILocation(line: 1191, column: 5, scope: !3594)
!3598 = !DILocation(line: 0, scope: !3588)
!3599 = !DILocation(line: 1193, column: 11, scope: !3569)
!3600 = !DILocation(line: 1195, column: 3, scope: !3569)
!3601 = !DILocation(line: 1197, column: 17, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1197, column: 7)
!3603 = !DILocation(line: 1197, column: 7, scope: !3569)
!3604 = !DILocation(line: 1201, column: 14, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1201, column: 7)
!3606 = !DILocation(line: 1201, column: 38, scope: !3605)
!3607 = !DILocation(line: 1202, column: 17, scope: !3605)
!3608 = !DILocation(line: 1202, column: 41, scope: !3605)
!3609 = !DILocation(line: 1202, column: 7, scope: !3605)
!3610 = !DILocation(line: 1201, column: 7, scope: !3569)
!3611 = !DILocation(line: 1206, column: 7, scope: !3579)
!3612 = !DILocation(line: 1206, column: 43, scope: !3579)
!3613 = !DILocation(line: 1206, column: 34, scope: !3579)
!3614 = !DILocation(line: 1206, column: 7, scope: !3569)
!3615 = !DILocation(line: 1209, column: 12, scope: !3569)
!3616 = !DILocation(line: 1211, column: 8, scope: !3585)
!3617 = !DILocation(line: 1211, column: 21, scope: !3585)
!3618 = !DILocation(line: 1211, column: 36, scope: !3585)
!3619 = !DILocation(line: 1211, column: 52, scope: !3585)
!3620 = !DILocation(line: 1212, column: 7, scope: !3585)
!3621 = !DILocation(line: 1212, column: 33, scope: !3585)
!3622 = !DILocation(line: 1213, column: 4, scope: !3585)
!3623 = !DILocation(line: 1213, column: 29, scope: !3585)
!3624 = !DILocation(line: 1211, column: 7, scope: !3569)
!3625 = !DILocation(line: 1223, column: 11, scope: !3583)
!3626 = !DILocation(line: 1223, column: 34, scope: !3583)
!3627 = !DILocation(line: 0, scope: !3583)
!3628 = !DILocation(line: 1223, column: 11, scope: !3584)
!3629 = !DILocation(line: 1225, column: 24, scope: !3582)
!3630 = !DILocation(line: 1225, column: 22, scope: !3582)
!3631 = !DILocation(line: 1225, column: 16, scope: !3583)
!3632 = !DILocation(line: 1227, column: 22, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 1227, column: 16)
!3634 = !DILocation(line: 1227, column: 16, scope: !3582)
!3635 = !DILocation(line: 1228, column: 9, scope: !3633)
!3636 = !DILocation(line: 1228, column: 2, scope: !3633)
!3637 = !DILocation(line: 1230, column: 25, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 1230, column: 12)
!3639 = !DILocation(line: 1230, column: 35, scope: !3638)
!3640 = !DILocation(line: 1230, column: 38, scope: !3638)
!3641 = !DILocation(line: 1231, column: 5, scope: !3638)
!3642 = !DILocation(line: 1231, column: 21, scope: !3638)
!3643 = !DILocation(line: 1231, column: 31, scope: !3638)
!3644 = !DILocation(line: 1231, column: 47, scope: !3638)
!3645 = !DILocation(line: 1232, column: 5, scope: !3638)
!3646 = !DILocation(line: 1232, column: 21, scope: !3638)
!3647 = !DILocation(line: 1232, column: 37, scope: !3638)
!3648 = !DILocation(line: 1232, column: 40, scope: !3638)
!3649 = !DILocation(line: 1230, column: 12, scope: !3585)
!3650 = !DILocation(line: 1233, column: 12, scope: !3638)
!3651 = !DILocation(line: 1233, column: 5, scope: !3638)
!3652 = !DILocation(line: 1237, column: 1, scope: !3569)
!3653 = distinct !DISubprogram(name: "gen_highpart", scope: !3, file: !3, line: 1240, type: !2847, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3654)
!3654 = !{!3655, !3656, !3657, !3658}
!3655 = !DILocalVariable(name: "mode", arg: 1, scope: !3653, file: !3, line: 1240, type: !5)
!3656 = !DILocalVariable(name: "x", arg: 2, scope: !3653, file: !3, line: 1240, type: !787)
!3657 = !DILocalVariable(name: "msize", scope: !3653, file: !3, line: 1242, type: !7)
!3658 = !DILocalVariable(name: "result", scope: !3653, file: !3, line: 1243, type: !787)
!3659 = !DILocation(line: 0, scope: !3653)
!3660 = !DILocation(line: 1242, column: 24, scope: !3653)
!3661 = !DILocation(line: 1247, column: 3, scope: !3653)
!3662 = !DILocation(line: 1250, column: 42, scope: !3653)
!3663 = !DILocation(line: 1251, column: 5, scope: !3653)
!3664 = !DILocation(line: 1250, column: 12, scope: !3653)
!3665 = !DILocation(line: 1252, column: 3, scope: !3653)
!3666 = !DILocation(line: 1257, column: 7, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1257, column: 7)
!3668 = !DILocation(line: 1257, column: 7, scope: !3653)
!3669 = !DILocation(line: 1259, column: 16, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 1258, column: 5)
!3671 = !DILocation(line: 1260, column: 7, scope: !3670)
!3672 = !DILocation(line: 1263, column: 3, scope: !3653)
!3673 = distinct !DISubprogram(name: "subreg_highpart_offset", scope: !3, file: !3, line: 1302, type: !3009, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3674)
!3674 = !{!3675, !3676, !3677, !3678}
!3675 = !DILocalVariable(name: "outermode", arg: 1, scope: !3673, file: !3, line: 1302, type: !5)
!3676 = !DILocalVariable(name: "innermode", arg: 2, scope: !3673, file: !3, line: 1302, type: !5)
!3677 = !DILocalVariable(name: "offset", scope: !3673, file: !3, line: 1304, type: !7)
!3678 = !DILocalVariable(name: "difference", scope: !3673, file: !3, line: 1305, type: !778)
!3679 = !DILocation(line: 0, scope: !3673)
!3680 = !DILocation(line: 1305, column: 21, scope: !3673)
!3681 = !DILocation(line: 1305, column: 49, scope: !3673)
!3682 = !DILocation(line: 1305, column: 47, scope: !3673)
!3683 = !DILocation(line: 1307, column: 3, scope: !3673)
!3684 = !DILocation(line: 1309, column: 18, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1309, column: 7)
!3686 = !DILocation(line: 1309, column: 7, scope: !3673)
!3687 = !DILocation(line: 1312, column: 24, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 1311, column: 11)
!3689 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1310, column: 5)
!3690 = !DILocation(line: 1312, column: 42, scope: !3688)
!3691 = !DILocation(line: 1314, column: 23, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 1313, column: 11)
!3693 = !DILocation(line: 1314, column: 9, scope: !3692)
!3694 = !DILocation(line: 1315, column: 5, scope: !3689)
!3695 = !DILocation(line: 1317, column: 3, scope: !3673)
!3696 = distinct !DISubprogram(name: "gen_highpart_mode", scope: !3, file: !3, line: 1269, type: !3697, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3699)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!787, !5, !5, !787}
!3699 = !{!3700, !3701, !3702}
!3700 = !DILocalVariable(name: "outermode", arg: 1, scope: !3696, file: !3, line: 1269, type: !5)
!3701 = !DILocalVariable(name: "innermode", arg: 2, scope: !3696, file: !3, line: 1269, type: !5)
!3702 = !DILocalVariable(name: "exp", arg: 3, scope: !3696, file: !3, line: 1269, type: !787)
!3703 = !DILocation(line: 0, scope: !3696)
!3704 = !DILocation(line: 1271, column: 7, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 1271, column: 7)
!3706 = !DILocation(line: 1271, column: 22, scope: !3705)
!3707 = !DILocation(line: 1271, column: 7, scope: !3696)
!3708 = !DILocation(line: 1273, column: 7, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 1272, column: 5)
!3710 = !DILocation(line: 1274, column: 14, scope: !3709)
!3711 = !DILocation(line: 1274, column: 7, scope: !3709)
!3712 = !DILocation(line: 1277, column: 10, scope: !3696)
!3713 = !DILocation(line: 1276, column: 10, scope: !3696)
!3714 = !DILocation(line: 1276, column: 3, scope: !3696)
!3715 = !DILocation(line: 1278, column: 1, scope: !3696)
!3716 = distinct !DISubprogram(name: "operand_subword", scope: !3, file: !3, line: 1362, type: !3717, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3719)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!787, !787, !7, !778, !5}
!3719 = !{!3720, !3721, !3722, !3723, !3724}
!3720 = !DILocalVariable(name: "op", arg: 1, scope: !3716, file: !3, line: 1362, type: !787)
!3721 = !DILocalVariable(name: "offset", arg: 2, scope: !3716, file: !3, line: 1362, type: !7)
!3722 = !DILocalVariable(name: "validate_address", arg: 3, scope: !3716, file: !3, line: 1362, type: !778)
!3723 = !DILocalVariable(name: "mode", arg: 4, scope: !3716, file: !3, line: 1362, type: !5)
!3724 = !DILocalVariable(name: "new_rtx", scope: !3725, file: !3, line: 1382, type: !787)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 1381, column: 5)
!3726 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1380, column: 7)
!3727 = !DILocation(line: 0, scope: !3716)
!3728 = !DILocation(line: 1364, column: 12, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1364, column: 7)
!3730 = !DILocation(line: 1364, column: 7, scope: !3716)
!3731 = !DILocation(line: 1365, column: 12, scope: !3729)
!3732 = !DILocation(line: 1365, column: 5, scope: !3729)
!3733 = !DILocation(line: 1367, column: 3, scope: !3716)
!3734 = !DILocation(line: 1371, column: 7, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1370, column: 7)
!3736 = !DILocation(line: 1371, column: 11, scope: !3735)
!3737 = !DILocation(line: 1371, column: 32, scope: !3735)
!3738 = !DILocation(line: 1370, column: 7, scope: !3716)
!3739 = !DILocation(line: 1375, column: 12, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1375, column: 7)
!3741 = !DILocation(line: 1376, column: 7, scope: !3740)
!3742 = !DILocation(line: 1376, column: 23, scope: !3740)
!3743 = !DILocation(line: 1376, column: 42, scope: !3740)
!3744 = !DILocation(line: 1376, column: 40, scope: !3740)
!3745 = !DILocation(line: 1375, column: 7, scope: !3716)
!3746 = !DILocation(line: 1377, column: 12, scope: !3740)
!3747 = !DILocation(line: 1377, column: 5, scope: !3740)
!3748 = !DILocation(line: 1380, column: 7, scope: !3726)
!3749 = !DILocation(line: 1380, column: 7, scope: !3716)
!3750 = !DILocation(line: 1399, column: 60, scope: !3716)
!3751 = !DILocation(line: 1382, column: 21, scope: !3725)
!3752 = !DILocation(line: 0, scope: !3725)
!3753 = !DILocation(line: 1384, column: 13, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1384, column: 11)
!3755 = !DILocation(line: 1384, column: 11, scope: !3725)
!3756 = !DILocation(line: 1387, column: 16, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1387, column: 16)
!3758 = !DILocation(line: 1387, column: 16, scope: !3754)
!3759 = !DILocation(line: 1389, column: 46, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 1389, column: 8)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 1388, column: 2)
!3762 = !DILocation(line: 1390, column: 11, scope: !3760)
!3763 = !DILocation(line: 1391, column: 11, scope: !3760)
!3764 = !DILocation(line: 1389, column: 10, scope: !3760)
!3765 = !DILocation(line: 1389, column: 8, scope: !3761)
!3766 = !DILocation(line: 1395, column: 41, scope: !3757)
!3767 = !DILocation(line: 1395, column: 9, scope: !3757)
!3768 = !DILocation(line: 1395, column: 2, scope: !3757)
!3769 = !DILocation(line: 1399, column: 31, scope: !3716)
!3770 = !DILocation(line: 1399, column: 10, scope: !3716)
!3771 = !DILocation(line: 1399, column: 3, scope: !3716)
!3772 = !DILocation(line: 1400, column: 1, scope: !3716)
!3773 = distinct !DISubprogram(name: "adjust_address_1", scope: !3, file: !3, line: 1966, type: !3774, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3776)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!787, !787, !5, !874, !778, !778}
!3776 = !{!3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3789, !3790, !3791}
!3777 = !DILocalVariable(name: "memref", arg: 1, scope: !3773, file: !3, line: 1966, type: !787)
!3778 = !DILocalVariable(name: "mode", arg: 2, scope: !3773, file: !3, line: 1966, type: !5)
!3779 = !DILocalVariable(name: "offset", arg: 3, scope: !3773, file: !3, line: 1966, type: !874)
!3780 = !DILocalVariable(name: "validate", arg: 4, scope: !3773, file: !3, line: 1967, type: !778)
!3781 = !DILocalVariable(name: "adjust", arg: 5, scope: !3773, file: !3, line: 1967, type: !778)
!3782 = !DILocalVariable(name: "addr", scope: !3773, file: !3, line: 1969, type: !787)
!3783 = !DILocalVariable(name: "new_rtx", scope: !3773, file: !3, line: 1970, type: !787)
!3784 = !DILocalVariable(name: "memoffset", scope: !3773, file: !3, line: 1971, type: !787)
!3785 = !DILocalVariable(name: "size", scope: !3773, file: !3, line: 1972, type: !787)
!3786 = !DILocalVariable(name: "memalign", scope: !3773, file: !3, line: 1973, type: !7)
!3787 = !DILocalVariable(name: "as", scope: !3773, file: !3, line: 1974, type: !3788)
!3788 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !788, line: 73, baseType: !777)
!3789 = !DILocalVariable(name: "address_mode", scope: !3773, file: !3, line: 1975, type: !5)
!3790 = !DILocalVariable(name: "pbits", scope: !3773, file: !3, line: 1976, type: !778)
!3791 = !DILocalVariable(name: "shift", scope: !3792, file: !3, line: 1993, type: !778)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1992, column: 5)
!3793 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1991, column: 7)
!3794 = !DILocation(line: 0, scope: !3773)
!3795 = !DILocation(line: 1969, column: 14, scope: !3773)
!3796 = !DILocation(line: 1971, column: 19, scope: !3773)
!3797 = !DILocation(line: 1973, column: 27, scope: !3773)
!3798 = !DILocation(line: 1974, column: 21, scope: !3773)
!3799 = !DILocation(line: 1975, column: 55, scope: !3773)
!3800 = !DILocation(line: 1975, column: 36, scope: !3773)
!3801 = !DILocation(line: 1979, column: 15, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1979, column: 7)
!3803 = !DILocation(line: 1979, column: 12, scope: !3802)
!3804 = !DILocation(line: 1979, column: 37, scope: !3802)
!3805 = !DILocation(line: 1979, column: 33, scope: !3802)
!3806 = !DILocation(line: 1980, column: 12, scope: !3802)
!3807 = !DILocation(line: 1980, column: 21, scope: !3802)
!3808 = !DILocation(line: 1980, column: 24, scope: !3802)
!3809 = !DILocation(line: 1979, column: 7, scope: !3773)
!3810 = !DILocation(line: 1986, column: 10, scope: !3773)
!3811 = !DILocation(line: 1990, column: 11, scope: !3773)
!3812 = !DILocation(line: 1991, column: 30, scope: !3793)
!3813 = !DILocation(line: 1991, column: 7, scope: !3773)
!3814 = !DILocation(line: 1993, column: 42, scope: !3792)
!3815 = !DILocation(line: 1994, column: 67, scope: !3792)
!3816 = !DILocation(line: 0, scope: !3792)
!3817 = !DILocation(line: 1995, column: 3, scope: !3792)
!3818 = !DILocation(line: 1996, column: 5, scope: !3792)
!3819 = !DILocation(line: 1998, column: 7, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1998, column: 7)
!3821 = !DILocation(line: 1998, column: 7, scope: !3773)
!3822 = !DILocation(line: 2002, column: 11, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 2002, column: 11)
!3824 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 1999, column: 5)
!3825 = !DILocation(line: 2002, column: 29, scope: !3823)
!3826 = !DILocation(line: 2002, column: 40, scope: !3823)
!3827 = !DILocation(line: 2002, column: 43, scope: !3823)
!3828 = !DILocation(line: 2002, column: 59, scope: !3823)
!3829 = !DILocation(line: 2003, column: 14, scope: !3823)
!3830 = !DILocation(line: 2003, column: 4, scope: !3823)
!3831 = !DILocation(line: 2005, column: 10, scope: !3823)
!3832 = !DILocation(line: 2005, column: 49, scope: !3823)
!3833 = !DILocation(line: 2005, column: 8, scope: !3823)
!3834 = !DILocation(line: 2002, column: 11, scope: !3824)
!3835 = !DILocation(line: 2006, column: 9, scope: !3823)
!3836 = !DILocation(line: 2006, column: 2, scope: !3823)
!3837 = !DILocation(line: 2009, column: 9, scope: !3823)
!3838 = !DILocation(line: 2012, column: 13, scope: !3773)
!3839 = !DILocation(line: 2016, column: 15, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2016, column: 7)
!3841 = !DILocation(line: 2016, column: 35, scope: !3840)
!3842 = !DILocation(line: 2016, column: 25, scope: !3840)
!3843 = !DILocation(line: 2017, column: 15, scope: !3840)
!3844 = !DILocation(line: 2017, column: 5, scope: !3840)
!3845 = !DILocation(line: 2021, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2021, column: 7)
!3847 = !DILocation(line: 2021, column: 7, scope: !3773)
!3848 = !DILocation(line: 2022, column: 17, scope: !3846)
!3849 = !DILocation(line: 2022, column: 5, scope: !3846)
!3850 = !DILocation(line: 2027, column: 14, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2027, column: 7)
!3852 = !DILocation(line: 2027, column: 7, scope: !3773)
!3853 = !DILocation(line: 2029, column: 9, scope: !3851)
!3854 = !DILocation(line: 2028, column: 5, scope: !3851)
!3855 = !DILocation(line: 2033, column: 7, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2033, column: 7)
!3857 = !DILocation(line: 2033, column: 26, scope: !3856)
!3858 = !DILocation(line: 2033, column: 7, scope: !3773)
!3859 = !DILocation(line: 2034, column: 12, scope: !3856)
!3860 = !DILocation(line: 2034, column: 5, scope: !3856)
!3861 = !DILocation(line: 2035, column: 12, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 2035, column: 12)
!3863 = !DILocation(line: 2035, column: 12, scope: !3856)
!3864 = !DILocation(line: 2036, column: 27, scope: !3862)
!3865 = !DILocation(line: 2036, column: 46, scope: !3862)
!3866 = !DILocation(line: 2036, column: 12, scope: !3862)
!3867 = !DILocation(line: 2036, column: 5, scope: !3862)
!3868 = !DILocation(line: 0, scope: !3856)
!3869 = !DILocation(line: 2038, column: 40, scope: !3773)
!3870 = !DILocation(line: 2038, column: 64, scope: !3773)
!3871 = !DILocation(line: 2040, column: 12, scope: !3773)
!3872 = !DILocation(line: 2038, column: 25, scope: !3773)
!3873 = !DILocation(line: 2038, column: 3, scope: !3773)
!3874 = !DILocation(line: 2038, column: 23, scope: !3773)
!3875 = !DILocation(line: 2044, column: 3, scope: !3773)
!3876 = !DILocation(line: 2045, column: 1, scope: !3773)
!3877 = distinct !DISubprogram(name: "replace_equiv_address", scope: !3, file: !3, line: 2110, type: !3878, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3880)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!787, !787, !787}
!3880 = !{!3881, !3882}
!3881 = !DILocalVariable(name: "memref", arg: 1, scope: !3877, file: !3, line: 2110, type: !787)
!3882 = !DILocalVariable(name: "addr", arg: 2, scope: !3877, file: !3, line: 2110, type: !787)
!3883 = !DILocation(line: 0, scope: !3877)
!3884 = !DILocation(line: 2114, column: 29, scope: !3877)
!3885 = !DILocation(line: 2114, column: 3, scope: !3877)
!3886 = !DILocation(line: 2115, column: 10, scope: !3877)
!3887 = !DILocation(line: 2115, column: 3, scope: !3877)
!3888 = distinct !DISubprogram(name: "operand_subword_force", scope: !3, file: !3, line: 1410, type: !3889, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3891)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!787, !787, !7, !5}
!3891 = !{!3892, !3893, !3894, !3895}
!3892 = !DILocalVariable(name: "op", arg: 1, scope: !3888, file: !3, line: 1410, type: !787)
!3893 = !DILocalVariable(name: "offset", arg: 2, scope: !3888, file: !3, line: 1410, type: !7)
!3894 = !DILocalVariable(name: "mode", arg: 3, scope: !3888, file: !3, line: 1410, type: !5)
!3895 = !DILocalVariable(name: "result", scope: !3888, file: !3, line: 1412, type: !787)
!3896 = !DILocation(line: 0, scope: !3888)
!3897 = !DILocation(line: 1412, column: 16, scope: !3888)
!3898 = !DILocation(line: 1414, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 1414, column: 7)
!3900 = !DILocation(line: 1414, column: 7, scope: !3888)
!3901 = !DILocation(line: 1417, column: 23, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 1417, column: 7)
!3903 = !DILocation(line: 1421, column: 11, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1421, column: 11)
!3905 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 1418, column: 5)
!3906 = !DILocation(line: 1421, column: 11, scope: !3905)
!3907 = !DILocation(line: 1422, column: 7, scope: !3904)
!3908 = !DILocation(line: 1422, column: 2, scope: !3904)
!3909 = !DILocation(line: 1424, column: 7, scope: !3904)
!3910 = !DILocation(line: 1427, column: 12, scope: !3888)
!3911 = !DILocation(line: 1428, column: 3, scope: !3888)
!3912 = !DILocation(line: 1431, column: 1, scope: !3888)
!3913 = distinct !DISubprogram(name: "mem_expr_equal_p", scope: !3, file: !3, line: 1437, type: !3914, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3919)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!778, !3916, !3916}
!3916 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !788, line: 59, baseType: !3917)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!3919 = !{!3920, !3921}
!3920 = !DILocalVariable(name: "expr1", arg: 1, scope: !3913, file: !3, line: 1437, type: !3916)
!3921 = !DILocalVariable(name: "expr2", arg: 2, scope: !3913, file: !3, line: 1437, type: !3916)
!3922 = !DILocation(line: 0, scope: !3913)
!3923 = !DILocation(line: 1439, column: 13, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 1439, column: 7)
!3925 = !DILocation(line: 1439, column: 7, scope: !3913)
!3926 = !DILocation(line: 1442, column: 9, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 1442, column: 7)
!3928 = !DILocation(line: 1442, column: 20, scope: !3927)
!3929 = !DILocation(line: 1442, column: 15, scope: !3927)
!3930 = !DILocation(line: 1445, column: 7, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 1445, column: 7)
!3932 = !DILocation(line: 1445, column: 28, scope: !3931)
!3933 = !DILocation(line: 1445, column: 25, scope: !3931)
!3934 = !DILocation(line: 1445, column: 7, scope: !3913)
!3935 = !DILocation(line: 1448, column: 10, scope: !3913)
!3936 = !DILocation(line: 1448, column: 3, scope: !3913)
!3937 = !DILocation(line: 1449, column: 1, scope: !3913)
!3938 = distinct !DISubprogram(name: "get_mem_align_offset", scope: !3, file: !3, line: 1456, type: !3939, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3941)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!778, !787, !7}
!3941 = !{!3942, !3943, !3944, !3945, !3946, !3952, !3953, !3954}
!3942 = !DILocalVariable(name: "mem", arg: 1, scope: !3938, file: !3, line: 1456, type: !787)
!3943 = !DILocalVariable(name: "align", arg: 2, scope: !3938, file: !3, line: 1456, type: !7)
!3944 = !DILocalVariable(name: "expr", scope: !3938, file: !3, line: 1458, type: !903)
!3945 = !DILocalVariable(name: "offset", scope: !3938, file: !3, line: 1459, type: !857)
!3946 = !DILocalVariable(name: "inner", scope: !3947, file: !3, line: 1498, type: !903)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 1497, column: 2)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 1495, column: 5)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1494, column: 12)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 1489, column: 12)
!3951 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1484, column: 7)
!3952 = !DILocalVariable(name: "field", scope: !3947, file: !3, line: 1499, type: !903)
!3953 = !DILocalVariable(name: "byte_offset", scope: !3947, file: !3, line: 1500, type: !903)
!3954 = !DILocalVariable(name: "bit_offset", scope: !3947, file: !3, line: 1501, type: !903)
!3955 = !DILocation(line: 0, scope: !3938)
!3956 = !DILocation(line: 1476, column: 3, scope: !3938)
!3957 = !DILocation(line: 1477, column: 10, scope: !3938)
!3958 = !DILocation(line: 1478, column: 12, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1478, column: 7)
!3960 = !DILocation(line: 1479, column: 7, scope: !3959)
!3961 = !DILocation(line: 1479, column: 10, scope: !3959)
!3962 = !DILocation(line: 1480, column: 7, scope: !3959)
!3963 = !DILocation(line: 1480, column: 11, scope: !3959)
!3964 = !DILocation(line: 1478, column: 7, scope: !3938)
!3965 = !DILocation(line: 1483, column: 12, scope: !3938)
!3966 = !DILocation(line: 1484, column: 7, scope: !3951)
!3967 = !DILocation(line: 1484, column: 7, scope: !3938)
!3968 = !DILocation(line: 1486, column: 11, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1486, column: 11)
!3970 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 1485, column: 5)
!3971 = !DILocation(line: 1486, column: 29, scope: !3969)
!3972 = !DILocation(line: 1486, column: 11, scope: !3970)
!3973 = !DILocation(line: 1489, column: 12, scope: !3950)
!3974 = !DILocation(line: 1489, column: 12, scope: !3951)
!3975 = !DILocation(line: 1491, column: 11, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1491, column: 11)
!3977 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1490, column: 5)
!3978 = !DILocation(line: 1491, column: 41, scope: !3976)
!3979 = !DILocation(line: 1491, column: 11, scope: !3977)
!3980 = !DILocation(line: 1494, column: 29, scope: !3949)
!3981 = !DILocation(line: 1494, column: 12, scope: !3950)
!3982 = !DILocation(line: 1496, column: 7, scope: !3948)
!3983 = !DILocation(line: 1477, column: 8, scope: !3938)
!3984 = !DILocation(line: 1498, column: 17, scope: !3947)
!3985 = !DILocation(line: 0, scope: !3947)
!3986 = !DILocation(line: 1499, column: 17, scope: !3947)
!3987 = !DILocation(line: 1500, column: 23, scope: !3947)
!3988 = !DILocation(line: 1501, column: 22, scope: !3947)
!3989 = !DILocation(line: 1503, column: 9, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 1503, column: 8)
!3991 = !DILocation(line: 1504, column: 8, scope: !3990)
!3992 = !DILocation(line: 1504, column: 12, scope: !3990)
!3993 = !DILocation(line: 1505, column: 8, scope: !3990)
!3994 = !DILocation(line: 1505, column: 12, scope: !3990)
!3995 = !DILocation(line: 1503, column: 8, scope: !3947)
!3996 = !DILocation(line: 1508, column: 14, scope: !3947)
!3997 = !DILocation(line: 1508, column: 11, scope: !3947)
!3998 = !DILocation(line: 1509, column: 14, scope: !3947)
!3999 = !DILocation(line: 1509, column: 43, scope: !3947)
!4000 = !DILocation(line: 1509, column: 11, scope: !3947)
!4001 = !DILocation(line: 1511, column: 14, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 1511, column: 8)
!4003 = !DILocation(line: 1511, column: 8, scope: !3947)
!4004 = !DILocation(line: 1513, column: 12, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 1513, column: 12)
!4006 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1512, column: 6)
!4007 = !DILocation(line: 1514, column: 5, scope: !4005)
!4008 = !DILocation(line: 0, scope: !4006)
!4009 = !DILocation(line: 1518, column: 13, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1518, column: 13)
!4011 = !DILocation(line: 1518, column: 13, scope: !4002)
!4012 = !DILocation(line: 1520, column: 12, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1520, column: 12)
!4014 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 1519, column: 6)
!4015 = !DILocation(line: 1520, column: 31, scope: !4013)
!4016 = !DILocation(line: 0, scope: !4014)
!4017 = !DILocation(line: 1524, column: 31, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 1524, column: 13)
!4019 = !DILocation(line: 1524, column: 13, scope: !4010)
!4020 = distinct !{!4020, !3982, !4021}
!4021 = !DILocation(line: 1527, column: 2, scope: !3948)
!4022 = !DILocation(line: 1532, column: 27, scope: !3938)
!4023 = !DILocation(line: 1483, column: 10, scope: !3938)
!4024 = !DILocation(line: 1532, column: 44, scope: !3938)
!4025 = !DILocation(line: 1532, column: 10, scope: !3938)
!4026 = !DILocation(line: 1532, column: 3, scope: !3938)
!4027 = !DILocation(line: 1533, column: 1, scope: !3938)
!4028 = distinct !DISubprogram(name: "set_mem_attributes_minus_bitpos", scope: !3, file: !3, line: 1541, type: !4029, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4031)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{null, !787, !903, !778, !874}
!4031 = !{!4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4046, !4047, !4050, !4056, !4057, !4059, !4060, !4061, !4066, !4067}
!4032 = !DILocalVariable(name: "ref", arg: 1, scope: !4028, file: !3, line: 1541, type: !787)
!4033 = !DILocalVariable(name: "t", arg: 2, scope: !4028, file: !3, line: 1541, type: !903)
!4034 = !DILocalVariable(name: "objectp", arg: 3, scope: !4028, file: !3, line: 1541, type: !778)
!4035 = !DILocalVariable(name: "bitpos", arg: 4, scope: !4028, file: !3, line: 1542, type: !874)
!4036 = !DILocalVariable(name: "alias", scope: !4028, file: !3, line: 1544, type: !1418)
!4037 = !DILocalVariable(name: "expr", scope: !4028, file: !3, line: 1545, type: !903)
!4038 = !DILocalVariable(name: "offset", scope: !4028, file: !3, line: 1546, type: !787)
!4039 = !DILocalVariable(name: "size", scope: !4028, file: !3, line: 1547, type: !787)
!4040 = !DILocalVariable(name: "align", scope: !4028, file: !3, line: 1548, type: !7)
!4041 = !DILocalVariable(name: "apply_bitpos", scope: !4028, file: !3, line: 1549, type: !874)
!4042 = !DILocalVariable(name: "type", scope: !4028, file: !3, line: 1550, type: !903)
!4043 = !DILocalVariable(name: "base", scope: !4044, file: !3, line: 1608, type: !903)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 1607, column: 5)
!4045 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1606, column: 7)
!4046 = !DILocalVariable(name: "align_computed", scope: !4044, file: !3, line: 1609, type: !777)
!4047 = !DILocalVariable(name: "base_type", scope: !4048, file: !3, line: 1645, type: !903)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1644, column: 2)
!4049 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1641, column: 11)
!4050 = !DILocalVariable(name: "off_tree", scope: !4051, file: !3, line: 1696, type: !903)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1695, column: 2)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1694, column: 16)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1683, column: 16)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1670, column: 16)
!4055 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1657, column: 11)
!4056 = !DILocalVariable(name: "t2", scope: !4051, file: !3, line: 1699, type: !903)
!4057 = !DILocalVariable(name: "index", scope: !4058, file: !3, line: 1703, type: !903)
!4058 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1702, column: 6)
!4059 = !DILocalVariable(name: "low_bound", scope: !4058, file: !3, line: 1704, type: !903)
!4060 = !DILocalVariable(name: "unit_size", scope: !4058, file: !3, line: 1705, type: !903)
!4061 = !DILocalVariable(name: "ioff", scope: !4062, file: !3, line: 1731, type: !874)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 1730, column: 3)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1729, column: 12)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1726, column: 6)
!4065 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1725, column: 8)
!4066 = !DILocalVariable(name: "aoff", scope: !4062, file: !3, line: 1732, type: !874)
!4067 = !DILocalVariable(name: "obj_align", scope: !4068, file: !3, line: 1774, type: !7)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1773, column: 2)
!4069 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1772, column: 11)
!4070 = !DILocation(line: 0, scope: !4028)
!4071 = !DILocation(line: 1544, column: 26, scope: !4028)
!4072 = !DILocation(line: 1545, column: 15, scope: !4028)
!4073 = !DILocation(line: 1546, column: 16, scope: !4028)
!4074 = !DILocation(line: 1547, column: 14, scope: !4028)
!4075 = !DILocation(line: 1548, column: 24, scope: !4028)
!4076 = !DILocation(line: 1555, column: 9, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1555, column: 7)
!4078 = !DILocation(line: 1555, column: 7, scope: !4028)
!4079 = !DILocation(line: 1558, column: 10, scope: !4028)
!4080 = !DILocation(line: 1558, column: 27, scope: !4028)
!4081 = !DILocation(line: 1559, column: 15, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1559, column: 7)
!4083 = !DILocation(line: 1559, column: 12, scope: !4082)
!4084 = !DILocation(line: 1559, column: 7, scope: !4028)
!4085 = !DILocation(line: 1566, column: 3, scope: !4028)
!4086 = !DILocation(line: 1570, column: 11, scope: !4028)
!4087 = !DILocation(line: 1572, column: 27, scope: !4028)
!4088 = !DILocation(line: 1572, column: 3, scope: !4028)
!4089 = !DILocation(line: 1572, column: 24, scope: !4028)
!4090 = !DILocation(line: 1574, column: 7, scope: !4028)
!4091 = !DILocation(line: 1574, column: 31, scope: !4028)
!4092 = !DILocation(line: 1574, column: 51, scope: !4028)
!4093 = !DILocation(line: 1574, column: 5, scope: !4028)
!4094 = !DILocation(line: 1575, column: 23, scope: !4028)
!4095 = !DILocation(line: 1575, column: 21, scope: !4028)
!4096 = !DILocation(line: 1579, column: 8, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1579, column: 7)
!4098 = !DILocation(line: 1579, column: 16, scope: !4097)
!4099 = !DILocation(line: 1579, column: 19, scope: !4097)
!4100 = !DILocation(line: 1580, column: 7, scope: !4097)
!4101 = !DILocation(line: 1580, column: 12, scope: !4097)
!4102 = !DILocation(line: 1581, column: 7, scope: !4097)
!4103 = !DILocation(line: 1581, column: 27, scope: !4097)
!4104 = !DILocation(line: 1579, column: 7, scope: !4028)
!4105 = !DILocation(line: 1582, column: 24, scope: !4097)
!4106 = !DILocation(line: 1582, column: 5, scope: !4097)
!4107 = !DILocation(line: 1586, column: 15, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1586, column: 7)
!4109 = !DILocation(line: 1586, column: 18, scope: !4108)
!4110 = !DILocation(line: 1586, column: 32, scope: !4108)
!4111 = !DILocation(line: 1587, column: 7, scope: !4108)
!4112 = !DILocation(line: 1587, column: 24, scope: !4108)
!4113 = !DILocation(line: 1588, column: 7, scope: !4108)
!4114 = !DILocation(line: 1588, column: 10, scope: !4108)
!4115 = !DILocation(line: 1586, column: 7, scope: !4028)
!4116 = !DILocation(line: 1589, column: 13, scope: !4108)
!4117 = !DILocation(line: 1591, column: 23, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 1591, column: 9)
!4119 = !DILocation(line: 1591, column: 9, scope: !4108)
!4120 = !DILocation(line: 1593, column: 21, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 1593, column: 6)
!4122 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 1592, column: 7)
!4123 = !DILocation(line: 1593, column: 6, scope: !4121)
!4124 = !DILocation(line: 1593, column: 6, scope: !4122)
!4125 = !DILocation(line: 1597, column: 26, scope: !4121)
!4126 = !DILocation(line: 1597, column: 12, scope: !4121)
!4127 = !DILocation(line: 0, scope: !4108)
!4128 = !DILocation(line: 1601, column: 7, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1601, column: 7)
!4130 = !DILocation(line: 1601, column: 29, scope: !4129)
!4131 = !DILocation(line: 1601, column: 32, scope: !4129)
!4132 = !DILocation(line: 1601, column: 7, scope: !4028)
!4133 = !DILocation(line: 1602, column: 12, scope: !4129)
!4134 = !DILocation(line: 1602, column: 5, scope: !4129)
!4135 = !DILocation(line: 1606, column: 9, scope: !4045)
!4136 = !DILocation(line: 1606, column: 7, scope: !4028)
!4137 = !DILocation(line: 0, scope: !4044)
!4138 = !DILocation(line: 1611, column: 11, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1611, column: 11)
!4140 = !DILocation(line: 1611, column: 11, scope: !4044)
!4141 = !DILocation(line: 1612, column: 23, scope: !4139)
!4142 = !DILocation(line: 1612, column: 2, scope: !4139)
!4143 = !DILocation(line: 1616, column: 7, scope: !4044)
!4144 = !DILocation(line: 1616, column: 14, scope: !4044)
!4145 = !DILocation(line: 1617, column: 7, scope: !4044)
!4146 = !DILocation(line: 1617, column: 24, scope: !4044)
!4147 = !DILocation(line: 1618, column: 24, scope: !4044)
!4148 = !DILocation(line: 1618, column: 7, scope: !4044)
!4149 = !DILocation(line: 1624, column: 7, scope: !4044)
!4150 = !DILocation(line: 1619, column: 6, scope: !4044)
!4151 = distinct !{!4151, !4143, !4150}
!4152 = !DILocation(line: 1624, column: 14, scope: !4044)
!4153 = !DILocation(line: 1624, column: 31, scope: !4044)
!4154 = !DILocation(line: 1625, column: 7, scope: !4044)
!4155 = !DILocation(line: 1625, column: 27, scope: !4044)
!4156 = !DILocation(line: 1626, column: 7, scope: !4044)
!4157 = !DILocation(line: 1626, column: 27, scope: !4044)
!4158 = !DILocation(line: 1627, column: 27, scope: !4044)
!4159 = !DILocation(line: 1627, column: 7, scope: !4044)
!4160 = !DILocation(line: 1628, column: 9, scope: !4044)
!4161 = distinct !{!4161, !4149, !4160}
!4162 = !DILocation(line: 1630, column: 11, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1630, column: 11)
!4164 = !DILocation(line: 1630, column: 11, scope: !4044)
!4165 = !DILocation(line: 1632, column: 8, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 1632, column: 8)
!4167 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 1631, column: 2)
!4168 = !DILocation(line: 1632, column: 8, scope: !4167)
!4169 = !DILocation(line: 1633, column: 28, scope: !4166)
!4170 = !DILocation(line: 1633, column: 25, scope: !4166)
!4171 = !DILocation(line: 1633, column: 6, scope: !4166)
!4172 = !DILocation(line: 1635, column: 25, scope: !4166)
!4173 = !DILocation(line: 1638, column: 21, scope: !4163)
!4174 = !DILocation(line: 1640, column: 14, scope: !4044)
!4175 = !DILocation(line: 1641, column: 11, scope: !4049)
!4176 = !DILocation(line: 1641, column: 16, scope: !4049)
!4177 = !DILocation(line: 1641, column: 19, scope: !4049)
!4178 = !DILocation(line: 1642, column: 4, scope: !4049)
!4179 = !DILocation(line: 1642, column: 7, scope: !4049)
!4180 = !DILocation(line: 1643, column: 4, scope: !4049)
!4181 = !DILocation(line: 1643, column: 8, scope: !4049)
!4182 = !DILocation(line: 1643, column: 27, scope: !4049)
!4183 = !DILocation(line: 1643, column: 30, scope: !4049)
!4184 = !DILocation(line: 1641, column: 11, scope: !4044)
!4185 = !DILocation(line: 1645, column: 21, scope: !4048)
!4186 = !DILocation(line: 0, scope: !4048)
!4187 = !DILocation(line: 1646, column: 4, scope: !4048)
!4188 = !DILocation(line: 1648, column: 25, scope: !4048)
!4189 = !DILocation(line: 1649, column: 2, scope: !4048)
!4190 = !DILocation(line: 1653, column: 11, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1653, column: 11)
!4192 = !DILocation(line: 1653, column: 11, scope: !4044)
!4193 = !DILocation(line: 1654, column: 29, scope: !4191)
!4194 = !DILocation(line: 1654, column: 2, scope: !4191)
!4195 = !DILocation(line: 1657, column: 11, scope: !4055)
!4196 = !DILocation(line: 1657, column: 11, scope: !4044)
!4197 = !DILocation(line: 1660, column: 13, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1658, column: 2)
!4199 = !DILocation(line: 1662, column: 12, scope: !4198)
!4200 = !DILocation(line: 1663, column: 5, scope: !4198)
!4201 = !DILocation(line: 1663, column: 8, scope: !4198)
!4202 = !DILocation(line: 1664, column: 7, scope: !4198)
!4203 = !DILocation(line: 1665, column: 12, scope: !4198)
!4204 = !DILocation(line: 1667, column: 2, scope: !4198)
!4205 = !DILocation(line: 1670, column: 16, scope: !4054)
!4206 = !DILocation(line: 1670, column: 16, scope: !4055)
!4207 = !DILocation(line: 1672, column: 12, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1671, column: 2)
!4209 = !DILocation(line: 1674, column: 12, scope: !4208)
!4210 = !DILocation(line: 1677, column: 2, scope: !4208)
!4211 = !DILocation(line: 1683, column: 30, scope: !4053)
!4212 = !DILocation(line: 1684, column: 9, scope: !4053)
!4213 = !DILocation(line: 1684, column: 14, scope: !4053)
!4214 = !DILocation(line: 1683, column: 16, scope: !4054)
!4215 = !DILocation(line: 1687, column: 13, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1685, column: 2)
!4217 = !DILocation(line: 1691, column: 2, scope: !4216)
!4218 = !DILocation(line: 1694, column: 30, scope: !4052)
!4219 = !DILocation(line: 1694, column: 16, scope: !4053)
!4220 = !DILocation(line: 1696, column: 20, scope: !4051)
!4221 = !DILocation(line: 0, scope: !4051)
!4222 = !DILocation(line: 1701, column: 4, scope: !4051)
!4223 = !DILocation(line: 1703, column: 21, scope: !4058)
!4224 = !DILocation(line: 0, scope: !4058)
!4225 = !DILocation(line: 1704, column: 25, scope: !4058)
!4226 = !DILocation(line: 1705, column: 25, scope: !4058)
!4227 = !DILocation(line: 1711, column: 14, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 1711, column: 12)
!4229 = !DILocation(line: 1711, column: 12, scope: !4058)
!4230 = !DILocation(line: 1712, column: 11, scope: !4228)
!4231 = !DILocation(line: 1712, column: 3, scope: !4228)
!4232 = !DILocation(line: 1715, column: 19, scope: !4058)
!4233 = !DILocation(line: 1721, column: 13, scope: !4058)
!4234 = !DILocation(line: 1723, column: 11, scope: !4051)
!4235 = !DILocation(line: 1723, column: 26, scope: !4051)
!4236 = !DILocation(line: 1722, column: 6, scope: !4058)
!4237 = distinct !{!4237, !4222, !4238}
!4238 = !DILocation(line: 1723, column: 38, scope: !4051)
!4239 = !DILocation(line: 1725, column: 8, scope: !4065)
!4240 = !DILocation(line: 1725, column: 8, scope: !4051)
!4241 = !DILocation(line: 1729, column: 12, scope: !4063)
!4242 = !DILocation(line: 1729, column: 12, scope: !4064)
!4243 = !DILocation(line: 1731, column: 26, scope: !4062)
!4244 = !DILocation(line: 0, scope: !4062)
!4245 = !DILocation(line: 1732, column: 34, scope: !4062)
!4246 = !DILocation(line: 1732, column: 32, scope: !4062)
!4247 = !DILocation(line: 1732, column: 41, scope: !4062)
!4248 = !DILocation(line: 1733, column: 13, scope: !4062)
!4249 = !DILocation(line: 1734, column: 9, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1734, column: 9)
!4251 = !DILocation(line: 1734, column: 49, scope: !4250)
!4252 = !DILocation(line: 1734, column: 47, scope: !4250)
!4253 = !DILocation(line: 1734, column: 14, scope: !4250)
!4254 = !DILocation(line: 1737, column: 14, scope: !4062)
!4255 = !DILocation(line: 1739, column: 3, scope: !4062)
!4256 = !DILocation(line: 1741, column: 28, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1741, column: 13)
!4258 = !DILocation(line: 1741, column: 13, scope: !4065)
!4259 = !DILocation(line: 1745, column: 12, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1745, column: 12)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1742, column: 6)
!4262 = !DILocation(line: 1745, column: 12, scope: !4261)
!4263 = !DILocation(line: 1747, column: 14, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 1746, column: 3)
!4265 = !DILocation(line: 1749, column: 3, scope: !4264)
!4266 = !DILocation(line: 1753, column: 13, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1753, column: 13)
!4268 = !DILocation(line: 1753, column: 35, scope: !4267)
!4269 = !DILocation(line: 1754, column: 6, scope: !4267)
!4270 = !DILocation(line: 1754, column: 10, scope: !4267)
!4271 = !DILocation(line: 1755, column: 6, scope: !4267)
!4272 = !DILocation(line: 1755, column: 9, scope: !4267)
!4273 = !DILocation(line: 1755, column: 42, scope: !4267)
!4274 = !DILocation(line: 1753, column: 13, scope: !4257)
!4275 = !DILocation(line: 1764, column: 16, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1764, column: 16)
!4277 = !DILocation(line: 1764, column: 38, scope: !4276)
!4278 = !DILocation(line: 1765, column: 9, scope: !4276)
!4279 = !DILocation(line: 1765, column: 13, scope: !4276)
!4280 = !DILocation(line: 1766, column: 9, scope: !4276)
!4281 = !DILocation(line: 1766, column: 12, scope: !4276)
!4282 = !DILocation(line: 1766, column: 44, scope: !4276)
!4283 = !DILocation(line: 1764, column: 16, scope: !4052)
!4284 = !DILocation(line: 0, scope: !4055)
!4285 = !DILocation(line: 1772, column: 27, scope: !4069)
!4286 = !DILocation(line: 1772, column: 31, scope: !4069)
!4287 = !DILocation(line: 1772, column: 11, scope: !4044)
!4288 = !DILocation(line: 1775, column: 40, scope: !4068)
!4289 = !DILocation(line: 1775, column: 8, scope: !4068)
!4290 = !DILocation(line: 0, scope: !4068)
!4291 = !DILocation(line: 1776, column: 12, scope: !4068)
!4292 = !DILocation(line: 1777, column: 2, scope: !4068)
!4293 = !DILocation(line: 1783, column: 7, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1783, column: 7)
!4295 = !DILocation(line: 1783, column: 7, scope: !4028)
!4296 = !DILocation(line: 1785, column: 54, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1784, column: 5)
!4298 = !DILocation(line: 1785, column: 39, scope: !4297)
!4299 = !DILocation(line: 1785, column: 16, scope: !4297)
!4300 = !DILocation(line: 1786, column: 11, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1786, column: 11)
!4302 = !DILocation(line: 1786, column: 11, scope: !4297)
!4303 = !DILocation(line: 1787, column: 9, scope: !4301)
!4304 = !DILocation(line: 1787, column: 2, scope: !4301)
!4305 = !DILocation(line: 1790, column: 7, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1790, column: 7)
!4307 = !DILocation(line: 1790, column: 21, scope: !4306)
!4308 = !DILocation(line: 1790, column: 7, scope: !4028)
!4309 = !DILocation(line: 1801, column: 8, scope: !4028)
!4310 = !DILocation(line: 1801, column: 32, scope: !4028)
!4311 = !DILocation(line: 1800, column: 7, scope: !4028)
!4312 = !DILocation(line: 1800, column: 5, scope: !4028)
!4313 = !DILocation(line: 1804, column: 7, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1804, column: 7)
!4315 = !DILocation(line: 1804, column: 29, scope: !4314)
!4316 = !DILocation(line: 1804, column: 32, scope: !4314)
!4317 = !DILocation(line: 1804, column: 7, scope: !4028)
!4318 = !DILocation(line: 1809, column: 12, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1809, column: 12)
!4320 = !DILocation(line: 1809, column: 26, scope: !4319)
!4321 = !DILocation(line: 1809, column: 43, scope: !4319)
!4322 = !DILocation(line: 1809, column: 60, scope: !4319)
!4323 = !DILocation(line: 1810, column: 5, scope: !4319)
!4324 = !DILocation(line: 1810, column: 22, scope: !4319)
!4325 = !DILocation(line: 1811, column: 5, scope: !4319)
!4326 = !DILocation(line: 1811, column: 22, scope: !4319)
!4327 = !DILocation(line: 1809, column: 12, scope: !4314)
!4328 = !DILocation(line: 1812, column: 27, scope: !4319)
!4329 = !DILocation(line: 1812, column: 5, scope: !4319)
!4330 = !DILocation(line: 1813, column: 1, scope: !4028)
!4331 = distinct !DISubprogram(name: "get_mem_attrs", scope: !3, file: !3, line: 321, type: !4332, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4334)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!1770, !1418, !903, !787, !787, !7, !3788, !5}
!4334 = !{!4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343}
!4335 = !DILocalVariable(name: "alias", arg: 1, scope: !4331, file: !3, line: 321, type: !1418)
!4336 = !DILocalVariable(name: "expr", arg: 2, scope: !4331, file: !3, line: 321, type: !903)
!4337 = !DILocalVariable(name: "offset", arg: 3, scope: !4331, file: !3, line: 321, type: !787)
!4338 = !DILocalVariable(name: "size", arg: 4, scope: !4331, file: !3, line: 321, type: !787)
!4339 = !DILocalVariable(name: "align", arg: 5, scope: !4331, file: !3, line: 322, type: !7)
!4340 = !DILocalVariable(name: "addrspace", arg: 6, scope: !4331, file: !3, line: 322, type: !3788)
!4341 = !DILocalVariable(name: "mode", arg: 7, scope: !4331, file: !3, line: 322, type: !5)
!4342 = !DILocalVariable(name: "attrs", scope: !4331, file: !3, line: 324, type: !1771)
!4343 = !DILocalVariable(name: "slot", scope: !4331, file: !3, line: 325, type: !1289)
!4344 = !DILocation(line: 0, scope: !4331)
!4345 = !DILocation(line: 324, column: 3, scope: !4331)
!4346 = !DILocation(line: 330, column: 13, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 330, column: 7)
!4348 = !DILocation(line: 330, column: 26, scope: !4347)
!4349 = !DILocation(line: 330, column: 18, scope: !4347)
!4350 = !DILocation(line: 330, column: 41, scope: !4347)
!4351 = !DILocation(line: 330, column: 59, scope: !4347)
!4352 = !DILocation(line: 331, column: 16, scope: !4347)
!4353 = !DILocation(line: 332, column: 4, scope: !4347)
!4354 = !DILocation(line: 332, column: 13, scope: !4347)
!4355 = !DILocation(line: 332, column: 24, scope: !4347)
!4356 = !DILocation(line: 332, column: 27, scope: !4347)
!4357 = !DILocation(line: 332, column: 51, scope: !4347)
!4358 = !DILocation(line: 332, column: 48, scope: !4347)
!4359 = !DILocation(line: 334, column: 49, scope: !4347)
!4360 = !DILocation(line: 333, column: 7, scope: !4347)
!4361 = !DILocation(line: 330, column: 7, scope: !4331)
!4362 = !DILocation(line: 337, column: 9, scope: !4331)
!4363 = !DILocation(line: 337, column: 15, scope: !4331)
!4364 = !DILocation(line: 338, column: 9, scope: !4331)
!4365 = !DILocation(line: 338, column: 14, scope: !4331)
!4366 = !DILocation(line: 339, column: 9, scope: !4331)
!4367 = !DILocation(line: 339, column: 16, scope: !4331)
!4368 = !DILocation(line: 340, column: 9, scope: !4331)
!4369 = !DILocation(line: 340, column: 14, scope: !4331)
!4370 = !DILocation(line: 341, column: 9, scope: !4331)
!4371 = !DILocation(line: 341, column: 15, scope: !4331)
!4372 = !DILocation(line: 342, column: 9, scope: !4331)
!4373 = !DILocation(line: 342, column: 19, scope: !4331)
!4374 = !DILocation(line: 344, column: 26, scope: !4331)
!4375 = !DILocation(line: 344, column: 10, scope: !4331)
!4376 = !DILocation(line: 345, column: 7, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 345, column: 7)
!4378 = !DILocation(line: 345, column: 13, scope: !4377)
!4379 = !DILocation(line: 345, column: 7, scope: !4331)
!4380 = !DILocation(line: 347, column: 15, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 346, column: 5)
!4382 = !DILocation(line: 347, column: 13, scope: !4381)
!4383 = !DILocation(line: 348, column: 7, scope: !4381)
!4384 = !DILocation(line: 351, column: 24, scope: !4331)
!4385 = !DILocation(line: 349, column: 5, scope: !4381)
!4386 = !DILocation(line: 351, column: 3, scope: !4331)
!4387 = !DILocation(line: 352, column: 1, scope: !4331)
!4388 = distinct !DISubprogram(name: "set_mem_attributes", scope: !3, file: !3, line: 1816, type: !4389, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4391)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{null, !787, !903, !778}
!4391 = !{!4392, !4393, !4394}
!4392 = !DILocalVariable(name: "ref", arg: 1, scope: !4388, file: !3, line: 1816, type: !787)
!4393 = !DILocalVariable(name: "t", arg: 2, scope: !4388, file: !3, line: 1816, type: !903)
!4394 = !DILocalVariable(name: "objectp", arg: 3, scope: !4388, file: !3, line: 1816, type: !778)
!4395 = !DILocation(line: 0, scope: !4388)
!4396 = !DILocation(line: 1818, column: 3, scope: !4388)
!4397 = !DILocation(line: 1819, column: 1, scope: !4388)
!4398 = distinct !DISubprogram(name: "set_mem_addr_space", scope: !3, file: !3, line: 1839, type: !4399, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4401)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{null, !787, !3788}
!4401 = !{!4402, !4403}
!4402 = !DILocalVariable(name: "mem", arg: 1, scope: !4398, file: !3, line: 1839, type: !787)
!4403 = !DILocalVariable(name: "addrspace", arg: 2, scope: !4398, file: !3, line: 1839, type: !3788)
!4404 = !DILocation(line: 0, scope: !4398)
!4405 = !DILocation(line: 1841, column: 36, scope: !4398)
!4406 = !DILocation(line: 1841, column: 57, scope: !4398)
!4407 = !DILocation(line: 1842, column: 8, scope: !4398)
!4408 = !DILocation(line: 1842, column: 26, scope: !4398)
!4409 = !DILocation(line: 1843, column: 8, scope: !4398)
!4410 = !DILocation(line: 1843, column: 36, scope: !4398)
!4411 = !DILocation(line: 1841, column: 21, scope: !4398)
!4412 = !DILocation(line: 1841, column: 19, scope: !4398)
!4413 = !DILocation(line: 1844, column: 1, scope: !4398)
!4414 = distinct !DISubprogram(name: "set_mem_align", scope: !3, file: !3, line: 1849, type: !4415, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{null, !787, !7}
!4417 = !{!4418, !4419}
!4418 = !DILocalVariable(name: "mem", arg: 1, scope: !4414, file: !3, line: 1849, type: !787)
!4419 = !DILocalVariable(name: "align", arg: 2, scope: !4414, file: !3, line: 1849, type: !7)
!4420 = !DILocation(line: 0, scope: !4414)
!4421 = !DILocation(line: 1851, column: 36, scope: !4414)
!4422 = !DILocation(line: 1851, column: 57, scope: !4414)
!4423 = !DILocation(line: 1852, column: 8, scope: !4414)
!4424 = !DILocation(line: 1852, column: 26, scope: !4414)
!4425 = !DILocation(line: 1853, column: 8, scope: !4414)
!4426 = !DILocation(line: 1853, column: 30, scope: !4414)
!4427 = !DILocation(line: 1851, column: 21, scope: !4414)
!4428 = !DILocation(line: 1851, column: 19, scope: !4414)
!4429 = !DILocation(line: 1854, column: 1, scope: !4414)
!4430 = distinct !DISubprogram(name: "set_mem_expr", scope: !3, file: !3, line: 1859, type: !4431, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !787, !903}
!4433 = !{!4434, !4435}
!4434 = !DILocalVariable(name: "mem", arg: 1, scope: !4430, file: !3, line: 1859, type: !787)
!4435 = !DILocalVariable(name: "expr", arg: 2, scope: !4430, file: !3, line: 1859, type: !903)
!4436 = !DILocation(line: 0, scope: !4430)
!4437 = !DILocation(line: 1862, column: 22, scope: !4430)
!4438 = !DILocation(line: 1862, column: 49, scope: !4430)
!4439 = !DILocation(line: 1863, column: 8, scope: !4430)
!4440 = !DILocation(line: 1863, column: 24, scope: !4430)
!4441 = !DILocation(line: 1864, column: 8, scope: !4430)
!4442 = !DILocation(line: 1864, column: 30, scope: !4430)
!4443 = !DILocation(line: 1862, column: 7, scope: !4430)
!4444 = !DILocation(line: 1862, column: 5, scope: !4430)
!4445 = !DILocation(line: 1865, column: 1, scope: !4430)
!4446 = distinct !DISubprogram(name: "set_mem_offset", scope: !3, file: !3, line: 1870, type: !3249, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4447 = !{!4448, !4449}
!4448 = !DILocalVariable(name: "mem", arg: 1, scope: !4446, file: !3, line: 1870, type: !787)
!4449 = !DILocalVariable(name: "offset", arg: 2, scope: !4446, file: !3, line: 1870, type: !787)
!4450 = !DILocation(line: 0, scope: !4446)
!4451 = !DILocation(line: 1872, column: 36, scope: !4446)
!4452 = !DILocation(line: 1872, column: 57, scope: !4446)
!4453 = !DILocation(line: 1873, column: 16, scope: !4446)
!4454 = !DILocation(line: 1873, column: 32, scope: !4446)
!4455 = !DILocation(line: 1874, column: 8, scope: !4446)
!4456 = !DILocation(line: 1874, column: 30, scope: !4446)
!4457 = !DILocation(line: 1872, column: 21, scope: !4446)
!4458 = !DILocation(line: 1872, column: 19, scope: !4446)
!4459 = !DILocation(line: 1875, column: 1, scope: !4446)
!4460 = distinct !DISubprogram(name: "set_mem_size", scope: !3, file: !3, line: 1880, type: !3249, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4461)
!4461 = !{!4462, !4463}
!4462 = !DILocalVariable(name: "mem", arg: 1, scope: !4460, file: !3, line: 1880, type: !787)
!4463 = !DILocalVariable(name: "size", arg: 2, scope: !4460, file: !3, line: 1880, type: !787)
!4464 = !DILocation(line: 0, scope: !4460)
!4465 = !DILocation(line: 1882, column: 36, scope: !4460)
!4466 = !DILocation(line: 1882, column: 57, scope: !4460)
!4467 = !DILocation(line: 1883, column: 8, scope: !4460)
!4468 = !DILocation(line: 1883, column: 32, scope: !4460)
!4469 = !DILocation(line: 1884, column: 8, scope: !4460)
!4470 = !DILocation(line: 1884, column: 30, scope: !4460)
!4471 = !DILocation(line: 1882, column: 21, scope: !4460)
!4472 = !DILocation(line: 1882, column: 19, scope: !4460)
!4473 = !DILocation(line: 1885, column: 1, scope: !4460)
!4474 = distinct !DISubprogram(name: "change_address", scope: !3, file: !3, line: 1929, type: !4475, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!787, !787, !5, !787}
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4484}
!4478 = !DILocalVariable(name: "memref", arg: 1, scope: !4474, file: !3, line: 1929, type: !787)
!4479 = !DILocalVariable(name: "mode", arg: 2, scope: !4474, file: !3, line: 1929, type: !5)
!4480 = !DILocalVariable(name: "addr", arg: 3, scope: !4474, file: !3, line: 1929, type: !787)
!4481 = !DILocalVariable(name: "new_rtx", scope: !4474, file: !3, line: 1931, type: !787)
!4482 = !DILocalVariable(name: "size", scope: !4474, file: !3, line: 1931, type: !787)
!4483 = !DILocalVariable(name: "mmode", scope: !4474, file: !3, line: 1932, type: !5)
!4484 = !DILocalVariable(name: "align", scope: !4474, file: !3, line: 1933, type: !7)
!4485 = !DILocation(line: 0, scope: !4474)
!4486 = !DILocation(line: 1931, column: 17, scope: !4474)
!4487 = !DILocation(line: 1932, column: 29, scope: !4474)
!4488 = !DILocation(line: 1935, column: 16, scope: !4474)
!4489 = !DILocation(line: 1935, column: 10, scope: !4474)
!4490 = !DILocation(line: 1935, column: 33, scope: !4474)
!4491 = !DILocation(line: 1936, column: 11, scope: !4474)
!4492 = !DILocation(line: 1936, column: 46, scope: !4474)
!4493 = !DILocation(line: 1939, column: 15, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1939, column: 7)
!4495 = !DILocation(line: 1939, column: 7, scope: !4474)
!4496 = !DILocation(line: 1941, column: 11, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 1941, column: 11)
!4498 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1940, column: 5)
!4499 = !DILocation(line: 1941, column: 30, scope: !4497)
!4500 = !DILocation(line: 1942, column: 4, scope: !4497)
!4501 = !DILocation(line: 1942, column: 8, scope: !4497)
!4502 = !DILocation(line: 1943, column: 8, scope: !4497)
!4503 = !DILocation(line: 1943, column: 11, scope: !4497)
!4504 = !DILocation(line: 1944, column: 8, scope: !4497)
!4505 = !DILocation(line: 1944, column: 11, scope: !4497)
!4506 = !DILocation(line: 1944, column: 29, scope: !4497)
!4507 = !DILocation(line: 1945, column: 8, scope: !4497)
!4508 = !DILocation(line: 1945, column: 11, scope: !4497)
!4509 = !DILocation(line: 1945, column: 30, scope: !4497)
!4510 = !DILocation(line: 1941, column: 11, scope: !4498)
!4511 = !DILocation(line: 1948, column: 37, scope: !4498)
!4512 = !DILocation(line: 1948, column: 17, scope: !4498)
!4513 = !DILocation(line: 1949, column: 7, scope: !4498)
!4514 = !DILocation(line: 1950, column: 5, scope: !4498)
!4515 = !DILocation(line: 1953, column: 22, scope: !4474)
!4516 = !DILocation(line: 1954, column: 8, scope: !4474)
!4517 = !DILocation(line: 1953, column: 7, scope: !4474)
!4518 = !DILocation(line: 1952, column: 3, scope: !4474)
!4519 = !DILocation(line: 1953, column: 5, scope: !4474)
!4520 = !DILocation(line: 1956, column: 3, scope: !4474)
!4521 = !DILocation(line: 1957, column: 1, scope: !4474)
!4522 = distinct !DISubprogram(name: "change_address_1", scope: !3, file: !3, line: 1894, type: !4523, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!787, !787, !5, !787, !778}
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531}
!4526 = !DILocalVariable(name: "memref", arg: 1, scope: !4522, file: !3, line: 1894, type: !787)
!4527 = !DILocalVariable(name: "mode", arg: 2, scope: !4522, file: !3, line: 1894, type: !5)
!4528 = !DILocalVariable(name: "addr", arg: 3, scope: !4522, file: !3, line: 1894, type: !787)
!4529 = !DILocalVariable(name: "validate", arg: 4, scope: !4522, file: !3, line: 1894, type: !778)
!4530 = !DILocalVariable(name: "as", scope: !4522, file: !3, line: 1896, type: !3788)
!4531 = !DILocalVariable(name: "new_rtx", scope: !4522, file: !3, line: 1897, type: !787)
!4532 = !DILocation(line: 0, scope: !4522)
!4533 = !DILocation(line: 1899, column: 3, scope: !4522)
!4534 = !DILocation(line: 1900, column: 8, scope: !4522)
!4535 = !DILocation(line: 1901, column: 12, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1901, column: 7)
!4537 = !DILocation(line: 1901, column: 7, scope: !4522)
!4538 = !DILocation(line: 1902, column: 12, scope: !4536)
!4539 = !DILocation(line: 1902, column: 5, scope: !4536)
!4540 = !DILocation(line: 1903, column: 12, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1903, column: 7)
!4542 = !DILocation(line: 1903, column: 7, scope: !4522)
!4543 = !DILocation(line: 1904, column: 12, scope: !4541)
!4544 = !DILocation(line: 1904, column: 5, scope: !4541)
!4545 = !DILocation(line: 1905, column: 15, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1905, column: 7)
!4547 = !DILocation(line: 1905, column: 12, scope: !4546)
!4548 = !DILocation(line: 1905, column: 33, scope: !4546)
!4549 = !DILocation(line: 1905, column: 44, scope: !4546)
!4550 = !DILocation(line: 1905, column: 41, scope: !4546)
!4551 = !DILocation(line: 1906, column: 7, scope: !4546)
!4552 = !DILocation(line: 1906, column: 12, scope: !4546)
!4553 = !DILocation(line: 1906, column: 21, scope: !4546)
!4554 = !DILocation(line: 1906, column: 24, scope: !4546)
!4555 = !DILocation(line: 1905, column: 7, scope: !4522)
!4556 = !DILocation(line: 1909, column: 7, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1909, column: 7)
!4558 = !DILocation(line: 1909, column: 7, scope: !4522)
!4559 = !DILocation(line: 1911, column: 11, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 1911, column: 11)
!4561 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 1910, column: 5)
!4562 = !DILocation(line: 1911, column: 33, scope: !4560)
!4563 = !DILocation(line: 1911, column: 30, scope: !4560)
!4564 = !DILocation(line: 1912, column: 2, scope: !4560)
!4565 = !DILocation(line: 1914, column: 9, scope: !4560)
!4566 = !DILocation(line: 1904, column: 10, scope: !4541)
!4567 = !DILocation(line: 1917, column: 26, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1917, column: 7)
!4569 = !DILocation(line: 1917, column: 7, scope: !4568)
!4570 = !DILocation(line: 1917, column: 44, scope: !4568)
!4571 = !DILocation(line: 1917, column: 55, scope: !4568)
!4572 = !DILocation(line: 1917, column: 52, scope: !4568)
!4573 = !DILocation(line: 1917, column: 7, scope: !4522)
!4574 = !DILocation(line: 1920, column: 13, scope: !4522)
!4575 = !DILocation(line: 1921, column: 3, scope: !4522)
!4576 = !DILocation(line: 1922, column: 3, scope: !4522)
!4577 = !DILocation(line: 1923, column: 1, scope: !4522)
!4578 = distinct !DISubprogram(name: "adjust_automodify_address_1", scope: !3, file: !3, line: 2053, type: !4579, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!787, !787, !5, !787, !874, !778}
!4581 = !{!4582, !4583, !4584, !4585, !4586}
!4582 = !DILocalVariable(name: "memref", arg: 1, scope: !4578, file: !3, line: 2053, type: !787)
!4583 = !DILocalVariable(name: "mode", arg: 2, scope: !4578, file: !3, line: 2053, type: !5)
!4584 = !DILocalVariable(name: "addr", arg: 3, scope: !4578, file: !3, line: 2053, type: !787)
!4585 = !DILocalVariable(name: "offset", arg: 4, scope: !4578, file: !3, line: 2054, type: !874)
!4586 = !DILocalVariable(name: "validate", arg: 5, scope: !4578, file: !3, line: 2054, type: !778)
!4587 = !DILocation(line: 0, scope: !4578)
!4588 = !DILocation(line: 2056, column: 12, scope: !4578)
!4589 = !DILocation(line: 2057, column: 10, scope: !4578)
!4590 = !DILocation(line: 2057, column: 3, scope: !4578)
!4591 = distinct !DISubprogram(name: "offset_address", scope: !3, file: !3, line: 2065, type: !4592, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4594)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!787, !787, !787, !857}
!4594 = !{!4595, !4596, !4597, !4598, !4599, !4600, !4601}
!4595 = !DILocalVariable(name: "memref", arg: 1, scope: !4591, file: !3, line: 2065, type: !787)
!4596 = !DILocalVariable(name: "offset", arg: 2, scope: !4591, file: !3, line: 2065, type: !787)
!4597 = !DILocalVariable(name: "pow2", arg: 3, scope: !4591, file: !3, line: 2065, type: !857)
!4598 = !DILocalVariable(name: "new_rtx", scope: !4591, file: !3, line: 2067, type: !787)
!4599 = !DILocalVariable(name: "addr", scope: !4591, file: !3, line: 2067, type: !787)
!4600 = !DILocalVariable(name: "as", scope: !4591, file: !3, line: 2068, type: !3788)
!4601 = !DILocalVariable(name: "address_mode", scope: !4591, file: !3, line: 2069, type: !5)
!4602 = !DILocation(line: 0, scope: !4591)
!4603 = !DILocation(line: 2067, column: 23, scope: !4591)
!4604 = !DILocation(line: 2068, column: 21, scope: !4591)
!4605 = !DILocation(line: 2069, column: 55, scope: !4591)
!4606 = !DILocation(line: 2069, column: 36, scope: !4591)
!4607 = !DILocation(line: 2071, column: 13, scope: !4591)
!4608 = !DILocation(line: 2080, column: 38, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 2080, column: 7)
!4610 = !DILocation(line: 2080, column: 9, scope: !4609)
!4611 = !DILocation(line: 2081, column: 7, scope: !4609)
!4612 = !DILocation(line: 2081, column: 10, scope: !4609)
!4613 = !DILocation(line: 2081, column: 26, scope: !4609)
!4614 = !DILocation(line: 2082, column: 7, scope: !4609)
!4615 = !DILocation(line: 2082, column: 10, scope: !4609)
!4616 = !DILocation(line: 2082, column: 28, scope: !4609)
!4617 = !DILocation(line: 2082, column: 25, scope: !4609)
!4618 = !DILocation(line: 2080, column: 7, scope: !4591)
!4619 = !DILocation(line: 2084, column: 25, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2083, column: 5)
!4621 = !DILocation(line: 2084, column: 14, scope: !4620)
!4622 = !DILocation(line: 2085, column: 17, scope: !4620)
!4623 = !DILocation(line: 2086, column: 5, scope: !4620)
!4624 = !DILocation(line: 2088, column: 29, scope: !4591)
!4625 = !DILocation(line: 2088, column: 3, scope: !4591)
!4626 = !DILocation(line: 2089, column: 13, scope: !4591)
!4627 = !DILocation(line: 2092, column: 15, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 2092, column: 7)
!4629 = !DILocation(line: 2092, column: 7, scope: !4591)
!4630 = !DILocation(line: 2098, column: 22, scope: !4591)
!4631 = !DILocation(line: 2098, column: 46, scope: !4591)
!4632 = !DILocation(line: 2099, column: 8, scope: !4591)
!4633 = !DILocation(line: 2100, column: 12, scope: !4591)
!4634 = !DILocation(line: 2098, column: 7, scope: !4591)
!4635 = !DILocation(line: 2097, column: 3, scope: !4591)
!4636 = !DILocation(line: 2098, column: 5, scope: !4591)
!4637 = !DILocation(line: 2101, column: 3, scope: !4591)
!4638 = !DILocation(line: 2102, column: 1, scope: !4591)
!4639 = distinct !DISubprogram(name: "replace_equiv_address_nv", scope: !3, file: !3, line: 2121, type: !3878, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4640)
!4640 = !{!4641, !4642}
!4641 = !DILocalVariable(name: "memref", arg: 1, scope: !4639, file: !3, line: 2121, type: !787)
!4642 = !DILocalVariable(name: "addr", arg: 2, scope: !4639, file: !3, line: 2121, type: !787)
!4643 = !DILocation(line: 0, scope: !4639)
!4644 = !DILocation(line: 2123, column: 10, scope: !4639)
!4645 = !DILocation(line: 2123, column: 3, scope: !4639)
!4646 = distinct !DISubprogram(name: "widen_memory_access", scope: !3, file: !3, line: 2132, type: !4647, scopeLine: 2133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!787, !787, !5, !874}
!4649 = !{!4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4661}
!4650 = !DILocalVariable(name: "memref", arg: 1, scope: !4646, file: !3, line: 2132, type: !787)
!4651 = !DILocalVariable(name: "mode", arg: 2, scope: !4646, file: !3, line: 2132, type: !5)
!4652 = !DILocalVariable(name: "offset", arg: 3, scope: !4646, file: !3, line: 2132, type: !874)
!4653 = !DILocalVariable(name: "new_rtx", scope: !4646, file: !3, line: 2134, type: !787)
!4654 = !DILocalVariable(name: "expr", scope: !4646, file: !3, line: 2135, type: !903)
!4655 = !DILocalVariable(name: "memoffset", scope: !4646, file: !3, line: 2136, type: !787)
!4656 = !DILocalVariable(name: "size", scope: !4646, file: !3, line: 2137, type: !7)
!4657 = !DILocalVariable(name: "field", scope: !4658, file: !3, line: 2152, type: !903)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 2151, column: 2)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 2150, column: 11)
!4660 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2149, column: 5)
!4661 = !DILocalVariable(name: "offset", scope: !4658, file: !3, line: 2153, type: !903)
!4662 = !DILocation(line: 0, scope: !4646)
!4663 = !DILocation(line: 2134, column: 17, scope: !4646)
!4664 = !DILocation(line: 2135, column: 15, scope: !4646)
!4665 = !DILocation(line: 2136, column: 19, scope: !4646)
!4666 = !DILocation(line: 2140, column: 15, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2140, column: 7)
!4668 = !DILocation(line: 2140, column: 7, scope: !4646)
!4669 = !DILocation(line: 2137, column: 23, scope: !4646)
!4670 = !DILocation(line: 2145, column: 9, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2145, column: 7)
!4672 = !DILocation(line: 2145, column: 7, scope: !4646)
!4673 = !DILocation(line: 0, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2163, column: 8)
!4675 = !DILocation(line: 2148, column: 3, scope: !4646)
!4676 = !DILocation(line: 2135, column: 8, scope: !4646)
!4677 = !DILocation(line: 2136, column: 7, scope: !4646)
!4678 = !DILocation(line: 2150, column: 11, scope: !4659)
!4679 = !DILocation(line: 2150, column: 28, scope: !4659)
!4680 = !DILocation(line: 2150, column: 11, scope: !4660)
!4681 = !DILocation(line: 2152, column: 17, scope: !4658)
!4682 = !DILocation(line: 0, scope: !4658)
!4683 = !DILocation(line: 2153, column: 18, scope: !4658)
!4684 = !DILocation(line: 2155, column: 10, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2155, column: 8)
!4686 = !DILocation(line: 2155, column: 8, scope: !4658)
!4687 = !DILocation(line: 2163, column: 8, scope: !4674)
!4688 = !DILocation(line: 2163, column: 43, scope: !4674)
!4689 = !DILocation(line: 2164, column: 8, scope: !4674)
!4690 = !DILocation(line: 2164, column: 11, scope: !4674)
!4691 = !DILocation(line: 2164, column: 59, scope: !4674)
!4692 = !DILocation(line: 2165, column: 8, scope: !4674)
!4693 = !DILocation(line: 2165, column: 11, scope: !4674)
!4694 = !DILocation(line: 2165, column: 30, scope: !4674)
!4695 = !DILocation(line: 2163, column: 8, scope: !4658)
!4696 = !DILocation(line: 2168, column: 10, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2168, column: 8)
!4698 = !DILocation(line: 2168, column: 8, scope: !4658)
!4699 = !DILocation(line: 2174, column: 11, scope: !4658)
!4700 = !DILocation(line: 2176, column: 9, scope: !4658)
!4701 = !DILocation(line: 2180, column: 2, scope: !4659)
!4702 = distinct !{!4702, !4675, !4703}
!4703 = !DILocation(line: 2195, column: 5, scope: !4646)
!4704 = !DILocation(line: 2182, column: 16, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 2182, column: 16)
!4706 = !DILocation(line: 2183, column: 9, scope: !4705)
!4707 = !DILocation(line: 2183, column: 12, scope: !4705)
!4708 = !DILocation(line: 2184, column: 9, scope: !4705)
!4709 = !DILocation(line: 2184, column: 12, scope: !4705)
!4710 = !DILocation(line: 2184, column: 46, scope: !4705)
!4711 = !DILocation(line: 2185, column: 9, scope: !4705)
!4712 = !DILocation(line: 2185, column: 12, scope: !4705)
!4713 = !DILocation(line: 2185, column: 59, scope: !4705)
!4714 = !DILocation(line: 2186, column: 9, scope: !4705)
!4715 = !DILocation(line: 2186, column: 15, scope: !4705)
!4716 = !DILocation(line: 2186, column: 25, scope: !4705)
!4717 = !DILocation(line: 2186, column: 28, scope: !4705)
!4718 = !DILocation(line: 2186, column: 47, scope: !4705)
!4719 = !DILocation(line: 2182, column: 16, scope: !4659)
!4720 = !DILocation(line: 2193, column: 4, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 2189, column: 2)
!4722 = !DILocation(line: 2197, column: 9, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2197, column: 7)
!4724 = !DILocation(line: 2197, column: 7, scope: !4646)
!4725 = !DILocation(line: 2203, column: 60, scope: !4646)
!4726 = !DILocation(line: 2204, column: 12, scope: !4646)
!4727 = !DILocation(line: 2205, column: 12, scope: !4646)
!4728 = !DILocation(line: 2203, column: 25, scope: !4646)
!4729 = !DILocation(line: 2203, column: 23, scope: !4646)
!4730 = !DILocation(line: 2207, column: 3, scope: !4646)
!4731 = !DILocation(line: 2208, column: 1, scope: !4646)
!4732 = distinct !DISubprogram(name: "get_spill_slot_decl", scope: !3, file: !3, line: 2214, type: !4733, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4735)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{!903, !777}
!4735 = !{!4736, !4737, !4738}
!4736 = !DILocalVariable(name: "force_build_p", arg: 1, scope: !4732, file: !3, line: 2214, type: !777)
!4737 = !DILocalVariable(name: "d", scope: !4732, file: !3, line: 2216, type: !903)
!4738 = !DILocalVariable(name: "rd", scope: !4732, file: !3, line: 2217, type: !787)
!4739 = !DILocation(line: 0, scope: !4732)
!4740 = !DILocation(line: 2216, column: 12, scope: !4732)
!4741 = !DILocation(line: 2219, column: 7, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 2219, column: 7)
!4743 = !DILocation(line: 2219, column: 13, scope: !4742)
!4744 = !DILocation(line: 2219, column: 9, scope: !4742)
!4745 = !DILocation(line: 2222, column: 7, scope: !4732)
!4746 = !DILocation(line: 2224, column: 3, scope: !4732)
!4747 = !DILocation(line: 2224, column: 23, scope: !4732)
!4748 = !DILocation(line: 2225, column: 22, scope: !4732)
!4749 = !DILocation(line: 2226, column: 3, scope: !4732)
!4750 = !DILocation(line: 2226, column: 17, scope: !4732)
!4751 = !DILocation(line: 2227, column: 24, scope: !4732)
!4752 = !DILocation(line: 2228, column: 19, scope: !4732)
!4753 = !DILocation(line: 2230, column: 30, scope: !4732)
!4754 = !DILocation(line: 2230, column: 8, scope: !4732)
!4755 = !DILocation(line: 2231, column: 3, scope: !4732)
!4756 = !DILocation(line: 2231, column: 21, scope: !4732)
!4757 = !DILocation(line: 2232, column: 35, scope: !4732)
!4758 = !DILocation(line: 2232, column: 56, scope: !4732)
!4759 = !DILocation(line: 2232, column: 20, scope: !4732)
!4760 = !DILocation(line: 2232, column: 3, scope: !4732)
!4761 = !DILocation(line: 2232, column: 18, scope: !4732)
!4762 = !DILocation(line: 2234, column: 3, scope: !4732)
!4763 = !DILocation(line: 2236, column: 3, scope: !4732)
!4764 = !DILocation(line: 2237, column: 1, scope: !4732)
!4765 = distinct !DISubprogram(name: "set_mem_attrs_for_spill", scope: !3, file: !3, line: 2246, type: !3529, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4766)
!4766 = !{!4767, !4768, !4769, !4770, !4771}
!4767 = !DILocalVariable(name: "mem", arg: 1, scope: !4765, file: !3, line: 2246, type: !787)
!4768 = !DILocalVariable(name: "alias", scope: !4765, file: !3, line: 2248, type: !1418)
!4769 = !DILocalVariable(name: "addr", scope: !4765, file: !3, line: 2249, type: !787)
!4770 = !DILocalVariable(name: "offset", scope: !4765, file: !3, line: 2249, type: !787)
!4771 = !DILocalVariable(name: "expr", scope: !4765, file: !3, line: 2250, type: !903)
!4772 = !DILocation(line: 0, scope: !4765)
!4773 = !DILocation(line: 2252, column: 10, scope: !4765)
!4774 = !DILocation(line: 2253, column: 11, scope: !4765)
!4775 = !DILocation(line: 2258, column: 10, scope: !4765)
!4776 = !DILocation(line: 2259, column: 12, scope: !4765)
!4777 = !DILocation(line: 2260, column: 7, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2260, column: 7)
!4779 = !DILocation(line: 2260, column: 23, scope: !4778)
!4780 = !DILocation(line: 2261, column: 7, scope: !4778)
!4781 = !DILocation(line: 2261, column: 10, scope: !4778)
!4782 = !DILocation(line: 2260, column: 7, scope: !4765)
!4783 = !DILocation(line: 2262, column: 5, scope: !4778)
!4784 = !DILocation(line: 2265, column: 8, scope: !4765)
!4785 = !DILocation(line: 2265, column: 24, scope: !4765)
!4786 = !DILocation(line: 2266, column: 28, scope: !4765)
!4787 = !DILocation(line: 2264, column: 21, scope: !4765)
!4788 = !DILocation(line: 2264, column: 19, scope: !4765)
!4789 = !DILocation(line: 2267, column: 22, scope: !4765)
!4790 = !DILocation(line: 2268, column: 1, scope: !4765)
!4791 = distinct !DISubprogram(name: "gen_label_rtx", scope: !3, file: !3, line: 2273, type: !4792, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!787}
!4794 = !DILocation(line: 2275, column: 10, scope: !4791)
!4795 = !DILocation(line: 2275, column: 3, scope: !4791)
!4796 = distinct !DISubprogram(name: "set_new_first_and_last_insn", scope: !3, file: !3, line: 2286, type: !3249, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4797)
!4797 = !{!4798, !4799, !4800, !4801}
!4798 = !DILocalVariable(name: "first", arg: 1, scope: !4796, file: !3, line: 2286, type: !787)
!4799 = !DILocalVariable(name: "last", arg: 2, scope: !4796, file: !3, line: 2286, type: !787)
!4800 = !DILocalVariable(name: "insn", scope: !4796, file: !3, line: 2288, type: !787)
!4801 = !DILocalVariable(name: "debug_count", scope: !4802, file: !3, line: 2296, type: !778)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 2295, column: 5)
!4803 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2294, column: 7)
!4804 = !DILocation(line: 0, scope: !4796)
!4805 = !DILocation(line: 2290, column: 14, scope: !4796)
!4806 = !DILocation(line: 2291, column: 13, scope: !4796)
!4807 = !DILocation(line: 2292, column: 16, scope: !4796)
!4808 = !DILocation(line: 2294, column: 7, scope: !4803)
!4809 = !DILocation(line: 2294, column: 32, scope: !4803)
!4810 = !DILocation(line: 2294, column: 29, scope: !4803)
!4811 = !DILocation(line: 2317, column: 5, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 2317, column: 5)
!4813 = !DILocation(line: 0, scope: !4802)
!4814 = !DILocation(line: 2298, column: 44, scope: !4802)
!4815 = !DILocation(line: 2298, column: 20, scope: !4802)
!4816 = !DILocation(line: 2299, column: 26, scope: !4802)
!4817 = !DILocation(line: 2301, column: 12, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2301, column: 7)
!4819 = !DILocation(line: 0, scope: !4818)
!4820 = !DILocation(line: 2296, column: 11, scope: !4802)
!4821 = !DILocation(line: 2301, column: 7, scope: !4818)
!4822 = !DILocation(line: 2302, column: 6, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2302, column: 6)
!4824 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 2301, column: 7)
!4825 = !DILocation(line: 2302, column: 22, scope: !4823)
!4826 = !DILocation(line: 2302, column: 6, scope: !4824)
!4827 = !DILocation(line: 2303, column: 25, scope: !4823)
!4828 = !DILocation(line: 2303, column: 23, scope: !4823)
!4829 = !DILocation(line: 2303, column: 4, scope: !4823)
!4830 = !DILocation(line: 2306, column: 21, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 2305, column: 4)
!4832 = !DILocation(line: 2306, column: 19, scope: !4831)
!4833 = !DILocation(line: 2307, column: 10, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 2307, column: 10)
!4835 = !DILocation(line: 2307, column: 10, scope: !4831)
!4836 = !DILocation(line: 2301, column: 39, scope: !4824)
!4837 = !DILocation(line: 2301, column: 7, scope: !4824)
!4838 = distinct !{!4838, !4821, !4839}
!4839 = !DILocation(line: 2309, column: 4, scope: !4818)
!4840 = !DILocation(line: 2311, column: 11, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 2311, column: 11)
!4842 = !DILocation(line: 2311, column: 11, scope: !4802)
!4843 = !DILocation(line: 2312, column: 45, scope: !4841)
!4844 = !DILocation(line: 2312, column: 21, scope: !4841)
!4845 = !DILocation(line: 2312, column: 2, scope: !4841)
!4846 = !DILocation(line: 2314, column: 20, scope: !4841)
!4847 = !DILocation(line: 0, scope: !4812)
!4848 = !DILocation(line: 2318, column: 22, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2317, column: 5)
!4850 = !DILocation(line: 2318, column: 20, scope: !4849)
!4851 = !DILocation(line: 2317, column: 37, scope: !4849)
!4852 = !DILocation(line: 2317, column: 5, scope: !4849)
!4853 = distinct !{!4853, !4811, !4854}
!4854 = !DILocation(line: 2318, column: 22, scope: !4812)
!4855 = !DILocation(line: 2320, column: 15, scope: !4796)
!4856 = !DILocation(line: 2321, column: 1, scope: !4796)
!4857 = distinct !DISubprogram(name: "unshare_all_rtl_again", scope: !3, file: !3, line: 2347, type: !3529, scopeLine: 2348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4858)
!4858 = !{!4859, !4860, !4861}
!4859 = !DILocalVariable(name: "insn", arg: 1, scope: !4857, file: !3, line: 2347, type: !787)
!4860 = !DILocalVariable(name: "p", scope: !4857, file: !3, line: 2349, type: !787)
!4861 = !DILocalVariable(name: "decl", scope: !4857, file: !3, line: 2350, type: !903)
!4862 = !DILocation(line: 0, scope: !4857)
!4863 = !DILocation(line: 2352, column: 8, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 2352, column: 3)
!4865 = !DILocation(line: 0, scope: !4864)
!4866 = !DILocation(line: 2352, column: 3, scope: !4864)
!4867 = !DILocation(line: 2353, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2353, column: 9)
!4869 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 2352, column: 3)
!4870 = !DILocation(line: 2353, column: 9, scope: !4869)
!4871 = !DILocation(line: 2355, column: 20, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 2354, column: 7)
!4873 = !DILocation(line: 2355, column: 2, scope: !4872)
!4874 = !DILocation(line: 2356, column: 20, scope: !4872)
!4875 = !DILocation(line: 2356, column: 2, scope: !4872)
!4876 = !DILocation(line: 2357, column: 7, scope: !4872)
!4877 = !DILocation(line: 2352, column: 25, scope: !4869)
!4878 = !DILocation(line: 2352, column: 3, scope: !4869)
!4879 = distinct !{!4879, !4866, !4880}
!4880 = !DILocation(line: 2357, column: 7, scope: !4864)
!4881 = !DILocation(line: 2360, column: 19, scope: !4857)
!4882 = !DILocation(line: 2360, column: 3, scope: !4857)
!4883 = !DILocation(line: 2363, column: 15, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 2363, column: 3)
!4885 = !DILocation(line: 2363, column: 8, scope: !4884)
!4886 = !DILocation(line: 0, scope: !4884)
!4887 = !DILocation(line: 2363, column: 3, scope: !4884)
!4888 = !DILocation(line: 2364, column: 21, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 2363, column: 3)
!4890 = !DILocation(line: 2364, column: 5, scope: !4889)
!4891 = !DILocation(line: 2363, column: 57, scope: !4889)
!4892 = !DILocation(line: 2363, column: 3, scope: !4889)
!4893 = distinct !{!4893, !4887, !4894}
!4894 = !DILocation(line: 2364, column: 36, scope: !4884)
!4895 = !DILocation(line: 2366, column: 21, scope: !4857)
!4896 = !DILocation(line: 2366, column: 3, scope: !4857)
!4897 = !DILocation(line: 2368, column: 3, scope: !4857)
!4898 = !DILocation(line: 2369, column: 1, scope: !4857)
!4899 = distinct !DISubprogram(name: "reset_used_flags", scope: !3, file: !3, line: 2722, type: !3529, scopeLine: 2723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4900)
!4900 = !{!4901, !4902, !4903, !4904, !4905, !4906, !4907}
!4901 = !DILocalVariable(name: "x", arg: 1, scope: !4899, file: !3, line: 2722, type: !787)
!4902 = !DILocalVariable(name: "i", scope: !4899, file: !3, line: 2724, type: !778)
!4903 = !DILocalVariable(name: "j", scope: !4899, file: !3, line: 2724, type: !778)
!4904 = !DILocalVariable(name: "code", scope: !4899, file: !3, line: 2725, type: !399)
!4905 = !DILocalVariable(name: "format_ptr", scope: !4899, file: !3, line: 2726, type: !783)
!4906 = !DILocalVariable(name: "length", scope: !4899, file: !3, line: 2727, type: !778)
!4907 = !DILabel(scope: !4899, name: "repeat", file: !3, line: 2730)
!4908 = !DILocation(line: 0, scope: !4899)
!4909 = !DILocation(line: 2727, column: 3, scope: !4899)
!4910 = !DILocation(line: 0, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2776, column: 2)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2774, column: 5)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2773, column: 3)
!4914 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2773, column: 3)
!4915 = !DILocation(line: 2731, column: 7, scope: !4899)
!4916 = !DILocation(line: 2730, column: 1, scope: !4899)
!4917 = !DILocation(line: 2731, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2731, column: 7)
!4919 = !DILocation(line: 2734, column: 10, scope: !4899)
!4920 = !DILocation(line: 2739, column: 3, scope: !4899)
!4921 = !DILocation(line: 2768, column: 22, scope: !4899)
!4922 = !DILocation(line: 2770, column: 16, scope: !4899)
!4923 = !DILocation(line: 2771, column: 12, scope: !4899)
!4924 = !DILocation(line: 0, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 2787, column: 4)
!4926 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2787, column: 4)
!4927 = !DILocation(line: 0, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2778, column: 15)
!4929 = !DILocation(line: 2773, column: 8, scope: !4914)
!4930 = !DILocation(line: 2773, column: 17, scope: !4913)
!4931 = !DILocation(line: 2773, column: 3, scope: !4914)
!4932 = !DILocation(line: 2775, column: 26, scope: !4912)
!4933 = !DILocation(line: 2775, column: 15, scope: !4912)
!4934 = !DILocation(line: 2775, column: 7, scope: !4912)
!4935 = !DILocation(line: 2787, column: 4, scope: !4926)
!4936 = !DILocation(line: 2778, column: 17, scope: !4928)
!4937 = !DILocation(line: 2778, column: 15, scope: !4911)
!4938 = !DILocation(line: 2783, column: 4, scope: !4911)
!4939 = !DILocation(line: 2784, column: 4, scope: !4911)
!4940 = !DILocation(line: 0, scope: !4926)
!4941 = !DILocation(line: 2787, column: 20, scope: !4925)
!4942 = !DILocation(line: 2787, column: 18, scope: !4925)
!4943 = !DILocation(line: 2788, column: 24, scope: !4925)
!4944 = !DILocation(line: 2788, column: 6, scope: !4925)
!4945 = !DILocation(line: 2787, column: 37, scope: !4925)
!4946 = !DILocation(line: 2787, column: 4, scope: !4925)
!4947 = distinct !{!4947, !4935, !4948}
!4948 = !DILocation(line: 2788, column: 41, scope: !4926)
!4949 = !DILocation(line: 2773, column: 28, scope: !4913)
!4950 = !DILocation(line: 2773, column: 3, scope: !4913)
!4951 = distinct !{!4951, !4931, !4952}
!4952 = !DILocation(line: 2791, column: 5, scope: !4914)
!4953 = !DILocation(line: 2792, column: 1, scope: !4899)
!4954 = distinct !DISubprogram(name: "set_used_decls", scope: !3, file: !3, line: 2568, type: !4955, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4957)
!4955 = !DISubroutineType(types: !4956)
!4956 = !{null, !903}
!4957 = !{!4958, !4959}
!4958 = !DILocalVariable(name: "blk", arg: 1, scope: !4954, file: !3, line: 2568, type: !903)
!4959 = !DILocalVariable(name: "t", scope: !4954, file: !3, line: 2570, type: !903)
!4960 = !DILocation(line: 0, scope: !4954)
!4961 = !DILocation(line: 2573, column: 12, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2573, column: 3)
!4963 = !DILocation(line: 2573, column: 8, scope: !4962)
!4964 = !DILocation(line: 0, scope: !4962)
!4965 = !DILocation(line: 2573, column: 3, scope: !4962)
!4966 = !DILocation(line: 2574, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 2574, column: 9)
!4968 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2573, column: 3)
!4969 = !DILocation(line: 2574, column: 9, scope: !4968)
!4970 = !DILocation(line: 2575, column: 23, scope: !4967)
!4971 = !DILocation(line: 2575, column: 7, scope: !4967)
!4972 = !DILocation(line: 2573, column: 37, scope: !4968)
!4973 = !DILocation(line: 2573, column: 3, scope: !4968)
!4974 = distinct !{!4974, !4965, !4975}
!4975 = !DILocation(line: 2575, column: 35, scope: !4962)
!4976 = !DILocation(line: 2578, column: 12, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2578, column: 3)
!4978 = !DILocation(line: 2578, column: 8, scope: !4977)
!4979 = !DILocation(line: 0, scope: !4977)
!4980 = !DILocation(line: 2578, column: 3, scope: !4977)
!4981 = !DILocation(line: 2579, column: 5, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2578, column: 3)
!4983 = !DILocation(line: 2578, column: 42, scope: !4982)
!4984 = !DILocation(line: 2578, column: 3, scope: !4982)
!4985 = distinct !{!4985, !4980, !4986}
!4986 = !DILocation(line: 2579, column: 22, scope: !4977)
!4987 = !DILocation(line: 2580, column: 1, scope: !4954)
!4988 = distinct !DISubprogram(name: "set_used_flags", scope: !3, file: !3, line: 2798, type: !3529, scopeLine: 2799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4989)
!4989 = !{!4990, !4991, !4992, !4993, !4994}
!4990 = !DILocalVariable(name: "x", arg: 1, scope: !4988, file: !3, line: 2798, type: !787)
!4991 = !DILocalVariable(name: "i", scope: !4988, file: !3, line: 2800, type: !778)
!4992 = !DILocalVariable(name: "j", scope: !4988, file: !3, line: 2800, type: !778)
!4993 = !DILocalVariable(name: "code", scope: !4988, file: !3, line: 2801, type: !399)
!4994 = !DILocalVariable(name: "format_ptr", scope: !4988, file: !3, line: 2802, type: !783)
!4995 = !DILocation(line: 0, scope: !4988)
!4996 = !DILocation(line: 2804, column: 9, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2804, column: 7)
!4998 = !DILocation(line: 2804, column: 7, scope: !4988)
!4999 = !DILocation(line: 2807, column: 10, scope: !4988)
!5000 = !DILocation(line: 2812, column: 3, scope: !4988)
!5001 = !DILocation(line: 2841, column: 22, scope: !4988)
!5002 = !DILocation(line: 2843, column: 16, scope: !4988)
!5003 = !DILocation(line: 0, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 2844, column: 3)
!5005 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2844, column: 3)
!5006 = !DILocation(line: 0, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 2853, column: 4)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 2853, column: 4)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 2847, column: 2)
!5010 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 2845, column: 5)
!5011 = !DILocation(line: 2844, column: 17, scope: !5004)
!5012 = !DILocation(line: 2844, column: 8, scope: !5005)
!5013 = !DILocation(line: 2844, column: 3, scope: !5005)
!5014 = !DILocation(line: 2846, column: 26, scope: !5010)
!5015 = !DILocation(line: 2846, column: 15, scope: !5010)
!5016 = !DILocation(line: 2846, column: 7, scope: !5010)
!5017 = !DILocation(line: 2853, column: 4, scope: !5008)
!5018 = !DILocation(line: 2849, column: 20, scope: !5009)
!5019 = !DILocation(line: 2849, column: 4, scope: !5009)
!5020 = !DILocation(line: 2850, column: 4, scope: !5009)
!5021 = !DILocation(line: 0, scope: !5008)
!5022 = !DILocation(line: 2853, column: 20, scope: !5007)
!5023 = !DILocation(line: 2853, column: 18, scope: !5007)
!5024 = !DILocation(line: 2854, column: 22, scope: !5007)
!5025 = !DILocation(line: 2854, column: 6, scope: !5007)
!5026 = !DILocation(line: 2853, column: 37, scope: !5007)
!5027 = !DILocation(line: 2853, column: 4, scope: !5007)
!5028 = distinct !{!5028, !5017, !5029}
!5029 = !DILocation(line: 2854, column: 39, scope: !5008)
!5030 = !DILocation(line: 2844, column: 43, scope: !5004)
!5031 = !DILocation(line: 2844, column: 3, scope: !5004)
!5032 = distinct !{!5032, !5013, !5033}
!5033 = !DILocation(line: 2857, column: 5, scope: !5005)
!5034 = !DILocation(line: 2858, column: 1, scope: !4988)
!5035 = distinct !DISubprogram(name: "unshare_all_rtl_1", scope: !3, file: !3, line: 2327, type: !3529, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5036)
!5036 = !{!5037}
!5037 = !DILocalVariable(name: "insn", arg: 1, scope: !5035, file: !3, line: 2327, type: !787)
!5038 = !DILocation(line: 0, scope: !5035)
!5039 = !DILocation(line: 2330, column: 3, scope: !5035)
!5040 = !DILocation(line: 2339, column: 41, scope: !5035)
!5041 = !DILocation(line: 2339, column: 21, scope: !5035)
!5042 = !DILocation(line: 2339, column: 19, scope: !5035)
!5043 = !DILocation(line: 2340, column: 1, scope: !5035)
!5044 = distinct !DISubprogram(name: "unshare_all_rtl", scope: !3, file: !3, line: 2372, type: !1860, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!5045 = !DILocation(line: 2374, column: 22, scope: !5044)
!5046 = !DILocation(line: 2374, column: 3, scope: !5044)
!5047 = !DILocation(line: 2375, column: 3, scope: !5044)
!5048 = distinct !DISubprogram(name: "get_insns", scope: !3, file: !3, line: 2902, type: !4792, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!5049 = !DILocation(line: 2904, column: 10, scope: !5048)
!5050 = !DILocation(line: 2904, column: 3, scope: !5048)
!5051 = distinct !DISubprogram(name: "verify_rtl_sharing", scope: !3, file: !3, line: 2511, type: !5052, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{null}
!5054 = !{!5055, !5056, !5063, !5064}
!5055 = !DILocalVariable(name: "p", scope: !5051, file: !3, line: 2513, type: !787)
!5056 = !DILocalVariable(name: "i", scope: !5057, file: !3, line: 2522, type: !778)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2521, column: 4)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2520, column: 6)
!5059 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 2517, column: 7)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 2516, column: 9)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 2515, column: 3)
!5062 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2515, column: 3)
!5063 = !DILocalVariable(name: "q", scope: !5057, file: !3, line: 2523, type: !787)
!5064 = !DILocalVariable(name: "sequence", scope: !5057, file: !3, line: 2523, type: !787)
!5065 = !DILocation(line: 2515, column: 12, scope: !5062)
!5066 = !DILocation(line: 0, scope: !5051)
!5067 = !DILocation(line: 2515, column: 8, scope: !5062)
!5068 = !DILocation(line: 0, scope: !5062)
!5069 = !DILocation(line: 2515, column: 3, scope: !5062)
!5070 = !DILocation(line: 2516, column: 9, scope: !5060)
!5071 = !DILocation(line: 2516, column: 9, scope: !5061)
!5072 = !DILocation(line: 2518, column: 20, scope: !5059)
!5073 = !DILocation(line: 2518, column: 2, scope: !5059)
!5074 = !DILocation(line: 2519, column: 20, scope: !5059)
!5075 = !DILocation(line: 2519, column: 2, scope: !5059)
!5076 = !DILocation(line: 2520, column: 6, scope: !5058)
!5077 = !DILocation(line: 2520, column: 29, scope: !5058)
!5078 = !DILocation(line: 2520, column: 6, scope: !5059)
!5079 = !DILocation(line: 0, scope: !5057)
!5080 = !DILocation(line: 0, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2525, column: 6)
!5082 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 2525, column: 6)
!5083 = !DILocation(line: 2525, column: 11, scope: !5082)
!5084 = !DILocation(line: 0, scope: !5082)
!5085 = !DILocation(line: 2525, column: 22, scope: !5081)
!5086 = !DILocation(line: 2525, column: 20, scope: !5081)
!5087 = !DILocation(line: 2525, column: 6, scope: !5082)
!5088 = !DILocation(line: 2527, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 2526, column: 8)
!5090 = !DILocation(line: 2528, column: 3, scope: !5089)
!5091 = !DILocation(line: 2529, column: 21, scope: !5089)
!5092 = !DILocation(line: 2529, column: 3, scope: !5089)
!5093 = !DILocation(line: 2530, column: 21, scope: !5089)
!5094 = !DILocation(line: 2530, column: 3, scope: !5089)
!5095 = !DILocation(line: 2525, column: 46, scope: !5081)
!5096 = !DILocation(line: 2525, column: 6, scope: !5081)
!5097 = distinct !{!5097, !5087, !5098}
!5098 = !DILocation(line: 2531, column: 8, scope: !5082)
!5099 = !DILocation(line: 2515, column: 33, scope: !5061)
!5100 = !DILocation(line: 2515, column: 3, scope: !5061)
!5101 = distinct !{!5101, !5069, !5102}
!5102 = !DILocation(line: 2533, column: 7, scope: !5062)
!5103 = !DILocation(line: 2535, column: 12, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2535, column: 3)
!5105 = !DILocation(line: 2535, column: 8, scope: !5104)
!5106 = !DILocation(line: 0, scope: !5104)
!5107 = !DILocation(line: 2535, column: 3, scope: !5104)
!5108 = !DILocation(line: 2536, column: 9, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 2536, column: 9)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 2535, column: 3)
!5111 = !DILocation(line: 2536, column: 9, scope: !5110)
!5112 = !DILocation(line: 2538, column: 22, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 2537, column: 7)
!5114 = !DILocation(line: 2538, column: 2, scope: !5113)
!5115 = !DILocation(line: 2539, column: 22, scope: !5113)
!5116 = !DILocation(line: 2539, column: 2, scope: !5113)
!5117 = !DILocation(line: 2540, column: 7, scope: !5113)
!5118 = !DILocation(line: 2535, column: 33, scope: !5110)
!5119 = !DILocation(line: 2535, column: 3, scope: !5110)
!5120 = distinct !{!5120, !5107, !5121}
!5121 = !DILocation(line: 2540, column: 7, scope: !5104)
!5122 = !DILocation(line: 2541, column: 1, scope: !5051)
!5123 = distinct !DISubprogram(name: "verify_rtx_sharing", scope: !3, file: !3, line: 2402, type: !3249, scopeLine: 2403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5124)
!5124 = !{!5125, !5126, !5127, !5128, !5129, !5130, !5131, !5138}
!5125 = !DILocalVariable(name: "orig", arg: 1, scope: !5123, file: !3, line: 2402, type: !787)
!5126 = !DILocalVariable(name: "insn", arg: 2, scope: !5123, file: !3, line: 2402, type: !787)
!5127 = !DILocalVariable(name: "x", scope: !5123, file: !3, line: 2404, type: !787)
!5128 = !DILocalVariable(name: "i", scope: !5123, file: !3, line: 2405, type: !778)
!5129 = !DILocalVariable(name: "code", scope: !5123, file: !3, line: 2406, type: !399)
!5130 = !DILocalVariable(name: "format_ptr", scope: !5123, file: !3, line: 2407, type: !783)
!5131 = !DILocalVariable(name: "j", scope: !5132, file: !3, line: 2486, type: !778)
!5132 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2485, column: 6)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2484, column: 8)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2478, column: 2)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 2476, column: 5)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 2475, column: 3)
!5137 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 2475, column: 3)
!5138 = !DILocalVariable(name: "len", scope: !5132, file: !3, line: 2487, type: !778)
!5139 = !DILocation(line: 0, scope: !5123)
!5140 = !DILocation(line: 2409, column: 9, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 2409, column: 7)
!5142 = !DILocation(line: 2409, column: 7, scope: !5123)
!5143 = !DILocation(line: 2412, column: 10, scope: !5123)
!5144 = !DILocation(line: 2416, column: 3, scope: !5123)
!5145 = !DILocation(line: 2434, column: 11, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 2434, column: 11)
!5147 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 2417, column: 5)
!5148 = !DILocation(line: 2434, column: 31, scope: !5146)
!5149 = !DILocation(line: 2434, column: 34, scope: !5146)
!5150 = !DILocation(line: 2434, column: 54, scope: !5146)
!5151 = !DILocation(line: 2434, column: 11, scope: !5147)
!5152 = !DILocation(line: 2439, column: 11, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 2439, column: 11)
!5154 = !DILocation(line: 2439, column: 11, scope: !5147)
!5155 = !DILocation(line: 2445, column: 11, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 2445, column: 11)
!5157 = !DILocation(line: 2446, column: 7, scope: !5156)
!5158 = !DILocation(line: 2446, column: 27, scope: !5156)
!5159 = !DILocation(line: 2446, column: 4, scope: !5156)
!5160 = !DILocation(line: 2467, column: 3, scope: !5123)
!5161 = !DILocation(line: 2469, column: 22, scope: !5123)
!5162 = !DILocation(line: 2473, column: 16, scope: !5123)
!5163 = !DILocation(line: 0, scope: !5136)
!5164 = !DILocation(line: 0, scope: !5133)
!5165 = !DILocation(line: 2475, column: 17, scope: !5136)
!5166 = !DILocation(line: 2475, column: 8, scope: !5137)
!5167 = !DILocation(line: 0, scope: !5137)
!5168 = !DILocation(line: 2475, column: 3, scope: !5137)
!5169 = !DILocation(line: 2477, column: 26, scope: !5135)
!5170 = !DILocation(line: 2477, column: 15, scope: !5135)
!5171 = !DILocation(line: 2477, column: 7, scope: !5135)
!5172 = !DILocation(line: 2480, column: 24, scope: !5134)
!5173 = !DILocation(line: 2480, column: 4, scope: !5134)
!5174 = !DILocation(line: 2481, column: 4, scope: !5134)
!5175 = !DILocation(line: 2484, column: 8, scope: !5133)
!5176 = !DILocation(line: 2484, column: 20, scope: !5133)
!5177 = !DILocation(line: 2484, column: 8, scope: !5134)
!5178 = !DILocation(line: 2487, column: 18, scope: !5132)
!5179 = !DILocation(line: 0, scope: !5132)
!5180 = !DILocation(line: 2489, column: 13, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 2489, column: 8)
!5182 = !DILocation(line: 0, scope: !5181)
!5183 = !DILocation(line: 2489, column: 22, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 2489, column: 8)
!5185 = !DILocation(line: 2489, column: 8, scope: !5181)
!5186 = !DILocation(line: 2493, column: 9, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 2493, column: 9)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 2490, column: 3)
!5189 = !DILocation(line: 2493, column: 11, scope: !5187)
!5190 = !DILocation(line: 2498, column: 27, scope: !5187)
!5191 = !DILocation(line: 0, scope: !5187)
!5192 = !DILocation(line: 2493, column: 14, scope: !5187)
!5193 = !DILocation(line: 2493, column: 43, scope: !5187)
!5194 = !DILocation(line: 2494, column: 9, scope: !5187)
!5195 = !DILocation(line: 2494, column: 13, scope: !5187)
!5196 = !DILocation(line: 2495, column: 6, scope: !5187)
!5197 = !DILocation(line: 2493, column: 9, scope: !5188)
!5198 = !DILocation(line: 2496, column: 27, scope: !5187)
!5199 = !DILocation(line: 2496, column: 7, scope: !5187)
!5200 = !DILocation(line: 2498, column: 7, scope: !5187)
!5201 = !DILocation(line: 2489, column: 30, scope: !5184)
!5202 = !DILocation(line: 2489, column: 8, scope: !5184)
!5203 = distinct !{!5203, !5185, !5204}
!5204 = !DILocation(line: 2499, column: 3, scope: !5181)
!5205 = !DILocation(line: 2475, column: 43, scope: !5136)
!5206 = !DILocation(line: 2475, column: 3, scope: !5136)
!5207 = distinct !{!5207, !5168, !5208}
!5208 = !DILocation(line: 2503, column: 5, scope: !5137)
!5209 = !DILocation(line: 2505, column: 1, scope: !5123)
!5210 = distinct !DISubprogram(name: "unshare_all_rtl_in_chain", scope: !3, file: !3, line: 2547, type: !3529, scopeLine: 2548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5211)
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "insn", arg: 1, scope: !5210, file: !3, line: 2547, type: !787)
!5213 = !DILocation(line: 0, scope: !5210)
!5214 = !DILocation(line: 2549, column: 3, scope: !5210)
!5215 = !DILocation(line: 2549, column: 3, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2549, column: 3)
!5217 = !DILocation(line: 2550, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2550, column: 9)
!5219 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 2549, column: 3)
!5220 = !DILocation(line: 2550, column: 9, scope: !5219)
!5221 = !DILocation(line: 2552, column: 39, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 2551, column: 7)
!5223 = !DILocation(line: 2552, column: 19, scope: !5222)
!5224 = !DILocation(line: 2552, column: 17, scope: !5222)
!5225 = !DILocation(line: 2553, column: 41, scope: !5222)
!5226 = !DILocation(line: 2553, column: 21, scope: !5222)
!5227 = !DILocation(line: 2553, column: 19, scope: !5222)
!5228 = !DILocation(line: 2554, column: 7, scope: !5222)
!5229 = !DILocation(line: 2549, column: 23, scope: !5219)
!5230 = !DILocation(line: 2549, column: 3, scope: !5219)
!5231 = distinct !{!5231, !5215, !5232}
!5232 = !DILocation(line: 2554, column: 7, scope: !5216)
!5233 = !DILocation(line: 2555, column: 1, scope: !5210)
!5234 = distinct !DISubprogram(name: "copy_rtx_if_shared", scope: !3, file: !3, line: 2587, type: !2687, scopeLine: 2588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5235)
!5235 = !{!5236}
!5236 = !DILocalVariable(name: "orig", arg: 1, scope: !5234, file: !3, line: 2587, type: !787)
!5237 = !DILocation(line: 0, scope: !5234)
!5238 = !DILocation(line: 2589, column: 3, scope: !5234)
!5239 = !DILocation(line: 2590, column: 10, scope: !5234)
!5240 = !DILocation(line: 2590, column: 3, scope: !5234)
!5241 = distinct !DISubprogram(name: "copy_rtx_if_shared_1", scope: !3, file: !3, line: 2597, type: !5242, scopeLine: 2598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5244)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{null, !1824}
!5244 = !{!5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5260, !5261}
!5245 = !DILocalVariable(name: "orig1", arg: 1, scope: !5241, file: !3, line: 2597, type: !1824)
!5246 = !DILocalVariable(name: "x", scope: !5241, file: !3, line: 2599, type: !787)
!5247 = !DILocalVariable(name: "i", scope: !5241, file: !3, line: 2600, type: !778)
!5248 = !DILocalVariable(name: "code", scope: !5241, file: !3, line: 2601, type: !399)
!5249 = !DILocalVariable(name: "last_ptr", scope: !5241, file: !3, line: 2602, type: !1824)
!5250 = !DILocalVariable(name: "format_ptr", scope: !5241, file: !3, line: 2603, type: !783)
!5251 = !DILocalVariable(name: "copied", scope: !5241, file: !3, line: 2604, type: !778)
!5252 = !DILocalVariable(name: "length", scope: !5241, file: !3, line: 2605, type: !778)
!5253 = !DILocalVariable(name: "j", scope: !5254, file: !3, line: 2690, type: !778)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 2689, column: 6)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2688, column: 8)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 2680, column: 2)
!5257 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2678, column: 5)
!5258 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 2677, column: 3)
!5259 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2677, column: 3)
!5260 = !DILocalVariable(name: "len", scope: !5254, file: !3, line: 2691, type: !778)
!5261 = !DILabel(scope: !5241, name: "repeat", file: !3, line: 2608)
!5262 = !DILocation(line: 0, scope: !5241)
!5263 = !DILocation(line: 2605, column: 3, scope: !5241)
!5264 = !DILocation(line: 2608, column: 1, scope: !5241)
!5265 = !DILocation(line: 2609, column: 7, scope: !5241)
!5266 = !DILocation(line: 2611, column: 9, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2611, column: 7)
!5268 = !DILocation(line: 2611, column: 7, scope: !5241)
!5269 = !DILocation(line: 2614, column: 10, scope: !5241)
!5270 = !DILocation(line: 2618, column: 3, scope: !5241)
!5271 = !DILocation(line: 2636, column: 11, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2636, column: 11)
!5273 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2619, column: 5)
!5274 = !DILocation(line: 2636, column: 31, scope: !5272)
!5275 = !DILocation(line: 2636, column: 34, scope: !5272)
!5276 = !DILocation(line: 2636, column: 54, scope: !5272)
!5277 = !DILocation(line: 2636, column: 11, scope: !5273)
!5278 = !DILocation(line: 2641, column: 11, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2641, column: 11)
!5280 = !DILocation(line: 2641, column: 11, scope: !5273)
!5281 = !DILocation(line: 2661, column: 7, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2661, column: 7)
!5283 = !DILocation(line: 2661, column: 7, scope: !5241)
!5284 = !DILocation(line: 2663, column: 11, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 2662, column: 5)
!5286 = !DILocation(line: 2666, column: 22, scope: !5241)
!5287 = !DILocation(line: 2665, column: 5, scope: !5285)
!5288 = !DILocation(line: 2666, column: 3, scope: !5241)
!5289 = !DILocation(line: 2673, column: 16, scope: !5241)
!5290 = !DILocation(line: 2674, column: 12, scope: !5241)
!5291 = !DILocation(line: 0, scope: !5255)
!5292 = !DILocation(line: 0, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 2695, column: 12)
!5294 = !DILocation(line: 2677, column: 8, scope: !5259)
!5295 = !DILocation(line: 2675, column: 12, scope: !5241)
!5296 = !DILocation(line: 2677, column: 17, scope: !5258)
!5297 = !DILocation(line: 2677, column: 3, scope: !5259)
!5298 = !DILocation(line: 2679, column: 26, scope: !5257)
!5299 = !DILocation(line: 2679, column: 15, scope: !5257)
!5300 = !DILocation(line: 2679, column: 7, scope: !5257)
!5301 = !DILocation(line: 2688, column: 8, scope: !5255)
!5302 = !DILocation(line: 2688, column: 20, scope: !5255)
!5303 = !DILocation(line: 2688, column: 8, scope: !5256)
!5304 = !DILocation(line: 2691, column: 18, scope: !5254)
!5305 = !DILocation(line: 0, scope: !5254)
!5306 = !DILocation(line: 2695, column: 26, scope: !5293)
!5307 = !DILocation(line: 2695, column: 19, scope: !5293)
!5308 = !DILocation(line: 2696, column: 35, scope: !5293)
!5309 = !DILocation(line: 2696, column: 17, scope: !5293)
!5310 = !DILocation(line: 2696, column: 15, scope: !5293)
!5311 = !DILocation(line: 2696, column: 3, scope: !5293)
!5312 = !DILocation(line: 2699, column: 13, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 2699, column: 8)
!5314 = !DILocation(line: 2699, column: 22, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2699, column: 8)
!5316 = !DILocation(line: 2699, column: 8, scope: !5313)
!5317 = !DILocation(line: 2701, column: 9, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 2701, column: 9)
!5319 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2700, column: 17)
!5320 = !DILocation(line: 2701, column: 9, scope: !5319)
!5321 = !DILocation(line: 2702, column: 7, scope: !5318)
!5322 = !DILocation(line: 2703, column: 31, scope: !5319)
!5323 = !DILocation(line: 2699, column: 30, scope: !5315)
!5324 = !DILocation(line: 2699, column: 8, scope: !5315)
!5325 = distinct !{!5325, !5316, !5326}
!5326 = !DILocation(line: 2704, column: 17, scope: !5313)
!5327 = !DILocation(line: 2682, column: 15, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2682, column: 15)
!5329 = !DILocation(line: 2682, column: 15, scope: !5256)
!5330 = !DILocation(line: 2683, column: 13, scope: !5328)
!5331 = !DILocation(line: 2684, column: 16, scope: !5256)
!5332 = !DILocation(line: 2685, column: 4, scope: !5256)
!5333 = !DILocation(line: 2677, column: 28, scope: !5258)
!5334 = !DILocation(line: 2677, column: 3, scope: !5258)
!5335 = distinct !{!5335, !5297, !5336}
!5336 = !DILocation(line: 2708, column: 5, scope: !5259)
!5337 = !DILocation(line: 2709, column: 10, scope: !5241)
!5338 = !DILocation(line: 2710, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2710, column: 7)
!5340 = !DILocation(line: 2710, column: 7, scope: !5241)
!5341 = !DILocation(line: 2716, column: 1, scope: !5241)
!5342 = distinct !DISubprogram(name: "make_safe_from", scope: !3, file: !3, line: 2865, type: !3878, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5343)
!5343 = !{!5344, !5345, !5346, !5349}
!5344 = !DILocalVariable(name: "x", arg: 1, scope: !5342, file: !3, line: 2865, type: !787)
!5345 = !DILocalVariable(name: "other", arg: 2, scope: !5342, file: !3, line: 2865, type: !787)
!5346 = !DILocalVariable(name: "temp", scope: !5347, file: !3, line: 2890, type: !787)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 2889, column: 5)
!5348 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 2882, column: 7)
!5349 = !DILabel(scope: !5342, name: "done", file: !3, line: 2881)
!5350 = !DILocation(line: 0, scope: !5342)
!5351 = !DILocation(line: 2867, column: 3, scope: !5342)
!5352 = !DILocation(line: 2868, column: 13, scope: !5342)
!5353 = !DILocation(line: 2868, column: 5, scope: !5342)
!5354 = !DILocation(line: 2872, column: 2, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 2869, column: 7)
!5356 = !DILocation(line: 2877, column: 2, scope: !5355)
!5357 = !DILocation(line: 0, scope: !5355)
!5358 = distinct !{!5358, !5351, !5359}
!5359 = !DILocation(line: 2880, column: 7, scope: !5342)
!5360 = !DILocation(line: 2881, column: 2, scope: !5342)
!5361 = !DILocation(line: 2882, column: 8, scope: !5348)
!5362 = !DILocation(line: 2883, column: 8, scope: !5348)
!5363 = !DILocation(line: 2883, column: 13, scope: !5348)
!5364 = !DILocation(line: 2884, column: 8, scope: !5348)
!5365 = !DILocation(line: 2884, column: 12, scope: !5348)
!5366 = !DILocation(line: 2885, column: 8, scope: !5348)
!5367 = !DILocation(line: 2885, column: 24, scope: !5348)
!5368 = !DILocation(line: 2886, column: 7, scope: !5348)
!5369 = !DILocation(line: 2886, column: 11, scope: !5348)
!5370 = !DILocation(line: 2887, column: 4, scope: !5348)
!5371 = !DILocation(line: 2887, column: 8, scope: !5348)
!5372 = !DILocation(line: 2887, column: 22, scope: !5348)
!5373 = !DILocation(line: 2888, column: 8, scope: !5348)
!5374 = !DILocation(line: 2888, column: 11, scope: !5348)
!5375 = !DILocation(line: 2882, column: 7, scope: !5342)
!5376 = !DILocation(line: 2890, column: 31, scope: !5347)
!5377 = !DILocation(line: 2890, column: 18, scope: !5347)
!5378 = !DILocation(line: 0, scope: !5347)
!5379 = !DILocation(line: 2891, column: 7, scope: !5347)
!5380 = !DILocation(line: 2895, column: 1, scope: !5342)
!5381 = distinct !DISubprogram(name: "set_first_insn", scope: !3, file: !3, line: 2910, type: !3529, scopeLine: 2911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5382)
!5382 = !{!5383}
!5383 = !DILocalVariable(name: "insn", arg: 1, scope: !5381, file: !3, line: 2910, type: !787)
!5384 = !DILocation(line: 0, scope: !5381)
!5385 = !DILocation(line: 2912, column: 3, scope: !5381)
!5386 = !DILocation(line: 2913, column: 14, scope: !5381)
!5387 = !DILocation(line: 2914, column: 1, scope: !5381)
!5388 = distinct !DISubprogram(name: "get_last_insn", scope: !3, file: !3, line: 2919, type: !4792, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!5389 = !DILocation(line: 2921, column: 10, scope: !5388)
!5390 = !DILocation(line: 2921, column: 3, scope: !5388)
!5391 = distinct !DISubprogram(name: "set_last_insn", scope: !3, file: !3, line: 2927, type: !3529, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5392)
!5392 = !{!5393}
!5393 = !DILocalVariable(name: "insn", arg: 1, scope: !5391, file: !3, line: 2927, type: !787)
!5394 = !DILocation(line: 0, scope: !5391)
!5395 = !DILocation(line: 2929, column: 3, scope: !5391)
!5396 = !DILocation(line: 2930, column: 13, scope: !5391)
!5397 = !DILocation(line: 2931, column: 1, scope: !5391)
!5398 = distinct !DISubprogram(name: "get_last_insn_anywhere", scope: !3, file: !3, line: 2936, type: !4792, scopeLine: 2937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5399)
!5399 = !{!5400}
!5400 = !DILocalVariable(name: "stack", scope: !5398, file: !3, line: 2938, type: !1825)
!5401 = !DILocation(line: 2939, column: 7, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2939, column: 7)
!5403 = !DILocation(line: 2939, column: 7, scope: !5398)
!5404 = !DILocation(line: 2940, column: 5, scope: !5402)
!5405 = !DILocation(line: 2941, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2941, column: 3)
!5407 = !DILocation(line: 0, scope: !5406)
!5408 = !DILocation(line: 0, scope: !5398)
!5409 = !DILocation(line: 2941, column: 3, scope: !5406)
!5410 = !DILocation(line: 2942, column: 16, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 2942, column: 9)
!5412 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 2941, column: 3)
!5413 = !DILocation(line: 2942, column: 21, scope: !5411)
!5414 = !DILocation(line: 2942, column: 9, scope: !5412)
!5415 = !DILocation(line: 2943, column: 7, scope: !5411)
!5416 = !DILocation(line: 2941, column: 49, scope: !5412)
!5417 = !DILocation(line: 2941, column: 3, scope: !5412)
!5418 = distinct !{!5418, !5409, !5419}
!5419 = !DILocation(line: 2943, column: 21, scope: !5406)
!5420 = !DILocation(line: 2945, column: 1, scope: !5398)
!5421 = distinct !DISubprogram(name: "get_first_nonnote_insn", scope: !3, file: !3, line: 2951, type: !4792, scopeLine: 2952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5422)
!5422 = !{!5423}
!5423 = !DILocalVariable(name: "insn", scope: !5421, file: !3, line: 2953, type: !787)
!5424 = !DILocation(line: 2953, column: 14, scope: !5421)
!5425 = !DILocation(line: 0, scope: !5421)
!5426 = !DILocation(line: 2955, column: 7, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 2955, column: 7)
!5428 = !DILocation(line: 2955, column: 7, scope: !5421)
!5429 = !DILocation(line: 2957, column: 11, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2957, column: 11)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 2956, column: 5)
!5432 = !DILocation(line: 2957, column: 11, scope: !5431)
!5433 = !DILocation(line: 2958, column: 14, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 2958, column: 2)
!5435 = !DILocation(line: 2958, column: 7, scope: !5434)
!5436 = !DILocation(line: 0, scope: !5434)
!5437 = !DILocation(line: 2959, column: 7, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 2958, column: 2)
!5439 = !DILocation(line: 2959, column: 12, scope: !5438)
!5440 = !DILocation(line: 2959, column: 15, scope: !5438)
!5441 = !DILocation(line: 2958, column: 2, scope: !5434)
!5442 = !DILocation(line: 2960, column: 14, scope: !5438)
!5443 = !DILocation(line: 2958, column: 2, scope: !5438)
!5444 = distinct !{!5444, !5441, !5445}
!5445 = !DILocation(line: 2961, column: 4, scope: !5434)
!5446 = !DILocation(line: 2964, column: 8, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 2964, column: 8)
!5448 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 2963, column: 2)
!5449 = !DILocation(line: 2965, column: 8, scope: !5447)
!5450 = !DILocation(line: 2965, column: 11, scope: !5447)
!5451 = !DILocation(line: 2965, column: 37, scope: !5447)
!5452 = !DILocation(line: 2964, column: 8, scope: !5448)
!5453 = !DILocation(line: 2966, column: 13, scope: !5447)
!5454 = !DILocation(line: 2966, column: 6, scope: !5447)
!5455 = !DILocation(line: 2970, column: 3, scope: !5421)
!5456 = distinct !DISubprogram(name: "next_insn", scope: !3, file: !3, line: 3033, type: !2687, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5457)
!5457 = !{!5458}
!5458 = !DILocalVariable(name: "insn", arg: 1, scope: !5456, file: !3, line: 3033, type: !787)
!5459 = !DILocation(line: 0, scope: !5456)
!5460 = !DILocation(line: 3035, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3035, column: 7)
!5462 = !DILocation(line: 3035, column: 7, scope: !5456)
!5463 = !DILocation(line: 3037, column: 14, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 3036, column: 5)
!5465 = !DILocation(line: 3038, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 3038, column: 11)
!5467 = !DILocation(line: 3038, column: 16, scope: !5466)
!5468 = !DILocation(line: 3038, column: 19, scope: !5466)
!5469 = !DILocation(line: 3039, column: 4, scope: !5466)
!5470 = !DILocation(line: 3039, column: 7, scope: !5466)
!5471 = !DILocation(line: 3039, column: 33, scope: !5466)
!5472 = !DILocation(line: 3038, column: 11, scope: !5464)
!5473 = !DILocation(line: 3040, column: 9, scope: !5466)
!5474 = !DILocation(line: 3040, column: 2, scope: !5466)
!5475 = !DILocation(line: 3043, column: 3, scope: !5456)
!5476 = distinct !DISubprogram(name: "get_last_nonnote_insn", scope: !3, file: !3, line: 2977, type: !4792, scopeLine: 2978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5477)
!5477 = !{!5478}
!5478 = !DILocalVariable(name: "insn", scope: !5476, file: !3, line: 2979, type: !787)
!5479 = !DILocation(line: 2979, column: 14, scope: !5476)
!5480 = !DILocation(line: 0, scope: !5476)
!5481 = !DILocation(line: 2981, column: 7, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 2981, column: 7)
!5483 = !DILocation(line: 2981, column: 7, scope: !5476)
!5484 = !DILocation(line: 2983, column: 11, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 2983, column: 11)
!5486 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 2982, column: 5)
!5487 = !DILocation(line: 2983, column: 11, scope: !5486)
!5488 = !DILocation(line: 2984, column: 14, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2984, column: 2)
!5490 = !DILocation(line: 2984, column: 7, scope: !5489)
!5491 = !DILocation(line: 0, scope: !5489)
!5492 = !DILocation(line: 2985, column: 7, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 2984, column: 2)
!5494 = !DILocation(line: 2985, column: 12, scope: !5493)
!5495 = !DILocation(line: 2985, column: 15, scope: !5493)
!5496 = !DILocation(line: 2984, column: 2, scope: !5489)
!5497 = !DILocation(line: 2986, column: 14, scope: !5493)
!5498 = !DILocation(line: 2984, column: 2, scope: !5493)
!5499 = distinct !{!5499, !5496, !5500}
!5500 = !DILocation(line: 2987, column: 4, scope: !5489)
!5501 = !DILocation(line: 2990, column: 8, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 2990, column: 8)
!5503 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2989, column: 2)
!5504 = !DILocation(line: 2991, column: 8, scope: !5502)
!5505 = !DILocation(line: 2991, column: 11, scope: !5502)
!5506 = !DILocation(line: 2991, column: 37, scope: !5502)
!5507 = !DILocation(line: 2990, column: 8, scope: !5503)
!5508 = !DILocation(line: 2992, column: 13, scope: !5502)
!5509 = !DILocation(line: 2992, column: 6, scope: !5502)
!5510 = !DILocation(line: 2997, column: 3, scope: !5476)
!5511 = distinct !DISubprogram(name: "previous_insn", scope: !3, file: !3, line: 3050, type: !2687, scopeLine: 3051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5512)
!5512 = !{!5513}
!5513 = !DILocalVariable(name: "insn", arg: 1, scope: !5511, file: !3, line: 3050, type: !787)
!5514 = !DILocation(line: 0, scope: !5511)
!5515 = !DILocation(line: 3052, column: 7, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3052, column: 7)
!5517 = !DILocation(line: 3052, column: 7, scope: !5511)
!5518 = !DILocation(line: 3054, column: 14, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 3053, column: 5)
!5520 = !DILocation(line: 3055, column: 11, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 3055, column: 11)
!5522 = !DILocation(line: 3055, column: 16, scope: !5521)
!5523 = !DILocation(line: 3055, column: 19, scope: !5521)
!5524 = !DILocation(line: 3056, column: 4, scope: !5521)
!5525 = !DILocation(line: 3056, column: 7, scope: !5521)
!5526 = !DILocation(line: 3056, column: 33, scope: !5521)
!5527 = !DILocation(line: 3055, column: 11, scope: !5519)
!5528 = !DILocation(line: 3057, column: 9, scope: !5521)
!5529 = !DILocation(line: 3057, column: 2, scope: !5521)
!5530 = !DILocation(line: 3060, column: 3, scope: !5511)
!5531 = distinct !DISubprogram(name: "get_max_uid", scope: !3, file: !3, line: 3003, type: !2200, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!5532 = !DILocation(line: 3005, column: 10, scope: !5531)
!5533 = !DILocation(line: 3005, column: 3, scope: !5531)
!5534 = distinct !DISubprogram(name: "get_max_insn_count", scope: !3, file: !3, line: 3012, type: !2200, scopeLine: 3013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5535)
!5535 = !{!5536}
!5536 = !DILocalVariable(name: "n", scope: !5534, file: !3, line: 3014, type: !778)
!5537 = !DILocation(line: 3014, column: 11, scope: !5534)
!5538 = !DILocation(line: 0, scope: !5534)
!5539 = !DILocation(line: 3020, column: 7, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 3020, column: 7)
!5541 = !DILocation(line: 3020, column: 28, scope: !5540)
!5542 = !DILocation(line: 3020, column: 26, scope: !5540)
!5543 = !DILocation(line: 3020, column: 7, scope: !5534)
!5544 = !DILocation(line: 3021, column: 5, scope: !5540)
!5545 = !DILocation(line: 0, scope: !5540)
!5546 = !DILocation(line: 3025, column: 3, scope: !5534)
!5547 = distinct !DISubprogram(name: "next_nonnote_insn", scope: !3, file: !3, line: 3067, type: !2687, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5548)
!5548 = !{!5549}
!5549 = !DILocalVariable(name: "insn", arg: 1, scope: !5547, file: !3, line: 3067, type: !787)
!5550 = !DILocation(line: 0, scope: !5547)
!5551 = !DILocation(line: 3069, column: 3, scope: !5547)
!5552 = !DILocation(line: 3071, column: 14, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 3070, column: 5)
!5554 = !DILocation(line: 3072, column: 16, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 3072, column: 11)
!5556 = !DILocation(line: 3072, column: 21, scope: !5555)
!5557 = !DILocation(line: 3072, column: 25, scope: !5555)
!5558 = !DILocation(line: 3072, column: 11, scope: !5553)
!5559 = distinct !{!5559, !5551, !5560}
!5560 = !DILocation(line: 3074, column: 5, scope: !5547)
!5561 = !DILocation(line: 3076, column: 3, scope: !5547)
!5562 = distinct !DISubprogram(name: "next_nonnote_insn_bb", scope: !3, file: !3, line: 3084, type: !2687, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5563)
!5563 = !{!5564}
!5564 = !DILocalVariable(name: "insn", arg: 1, scope: !5562, file: !3, line: 3084, type: !787)
!5565 = !DILocation(line: 0, scope: !5562)
!5566 = !DILocation(line: 3086, column: 3, scope: !5562)
!5567 = !DILocation(line: 3088, column: 14, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 3087, column: 5)
!5569 = !DILocation(line: 3089, column: 16, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 3089, column: 11)
!5571 = !DILocation(line: 3089, column: 21, scope: !5570)
!5572 = !DILocation(line: 3089, column: 25, scope: !5570)
!5573 = !DILocation(line: 3089, column: 11, scope: !5568)
!5574 = !DILocation(line: 3091, column: 11, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 3091, column: 11)
!5576 = !DILocation(line: 3091, column: 11, scope: !5568)
!5577 = distinct !{!5577, !5566, !5578}
!5578 = !DILocation(line: 3093, column: 5, scope: !5562)
!5579 = !DILocation(line: 3096, column: 1, scope: !5562)
!5580 = distinct !DISubprogram(name: "prev_nonnote_insn", scope: !3, file: !3, line: 3102, type: !2687, scopeLine: 3103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5581)
!5581 = !{!5582}
!5582 = !DILocalVariable(name: "insn", arg: 1, scope: !5580, file: !3, line: 3102, type: !787)
!5583 = !DILocation(line: 0, scope: !5580)
!5584 = !DILocation(line: 3104, column: 3, scope: !5580)
!5585 = !DILocation(line: 3106, column: 14, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 3105, column: 5)
!5587 = !DILocation(line: 3107, column: 16, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 3107, column: 11)
!5589 = !DILocation(line: 3107, column: 21, scope: !5588)
!5590 = !DILocation(line: 3107, column: 25, scope: !5588)
!5591 = !DILocation(line: 3107, column: 11, scope: !5586)
!5592 = distinct !{!5592, !5584, !5593}
!5593 = !DILocation(line: 3109, column: 5, scope: !5580)
!5594 = !DILocation(line: 3111, column: 3, scope: !5580)
!5595 = distinct !DISubprogram(name: "prev_nonnote_insn_bb", scope: !3, file: !3, line: 3119, type: !2687, scopeLine: 3120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5596)
!5596 = !{!5597}
!5597 = !DILocalVariable(name: "insn", arg: 1, scope: !5595, file: !3, line: 3119, type: !787)
!5598 = !DILocation(line: 0, scope: !5595)
!5599 = !DILocation(line: 3121, column: 3, scope: !5595)
!5600 = !DILocation(line: 3123, column: 14, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 3122, column: 5)
!5602 = !DILocation(line: 3124, column: 16, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3124, column: 11)
!5604 = !DILocation(line: 3124, column: 21, scope: !5603)
!5605 = !DILocation(line: 3124, column: 25, scope: !5603)
!5606 = !DILocation(line: 3124, column: 11, scope: !5601)
!5607 = !DILocation(line: 3126, column: 11, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3126, column: 11)
!5609 = !DILocation(line: 3126, column: 11, scope: !5601)
!5610 = distinct !{!5610, !5599, !5611}
!5611 = !DILocation(line: 3128, column: 5, scope: !5595)
!5612 = !DILocation(line: 3131, column: 1, scope: !5595)
!5613 = distinct !DISubprogram(name: "next_nondebug_insn", scope: !3, file: !3, line: 3137, type: !2687, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5614)
!5614 = !{!5615}
!5615 = !DILocalVariable(name: "insn", arg: 1, scope: !5613, file: !3, line: 3137, type: !787)
!5616 = !DILocation(line: 0, scope: !5613)
!5617 = !DILocation(line: 3139, column: 3, scope: !5613)
!5618 = !DILocation(line: 3141, column: 14, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 3140, column: 5)
!5620 = !DILocation(line: 3142, column: 16, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 3142, column: 11)
!5622 = !DILocation(line: 3142, column: 21, scope: !5621)
!5623 = !DILocation(line: 3142, column: 25, scope: !5621)
!5624 = !DILocation(line: 3142, column: 11, scope: !5619)
!5625 = distinct !{!5625, !5617, !5626}
!5626 = !DILocation(line: 3144, column: 5, scope: !5613)
!5627 = !DILocation(line: 3146, column: 3, scope: !5613)
!5628 = distinct !DISubprogram(name: "prev_nondebug_insn", scope: !3, file: !3, line: 3153, type: !2687, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5629)
!5629 = !{!5630}
!5630 = !DILocalVariable(name: "insn", arg: 1, scope: !5628, file: !3, line: 3153, type: !787)
!5631 = !DILocation(line: 0, scope: !5628)
!5632 = !DILocation(line: 3155, column: 3, scope: !5628)
!5633 = !DILocation(line: 3157, column: 14, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 3156, column: 5)
!5635 = !DILocation(line: 3158, column: 16, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 3158, column: 11)
!5637 = !DILocation(line: 3158, column: 21, scope: !5636)
!5638 = !DILocation(line: 3158, column: 25, scope: !5636)
!5639 = !DILocation(line: 3158, column: 11, scope: !5634)
!5640 = distinct !{!5640, !5632, !5641}
!5641 = !DILocation(line: 3160, column: 5, scope: !5628)
!5642 = !DILocation(line: 3162, column: 3, scope: !5628)
!5643 = distinct !DISubprogram(name: "next_real_insn", scope: !3, file: !3, line: 3170, type: !2687, scopeLine: 3171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5644)
!5644 = !{!5645}
!5645 = !DILocalVariable(name: "insn", arg: 1, scope: !5643, file: !3, line: 3170, type: !787)
!5646 = !DILocation(line: 0, scope: !5643)
!5647 = !DILocation(line: 3172, column: 3, scope: !5643)
!5648 = !DILocation(line: 3174, column: 14, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 3173, column: 5)
!5650 = !DILocation(line: 3175, column: 16, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 3175, column: 11)
!5652 = !DILocation(line: 3175, column: 21, scope: !5651)
!5653 = !DILocation(line: 3175, column: 24, scope: !5651)
!5654 = distinct !{!5654, !5647, !5655}
!5655 = !DILocation(line: 3177, column: 5, scope: !5643)
!5656 = !DILocation(line: 3179, column: 3, scope: !5643)
!5657 = distinct !DISubprogram(name: "prev_real_insn", scope: !3, file: !3, line: 3187, type: !2687, scopeLine: 3188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5658)
!5658 = !{!5659}
!5659 = !DILocalVariable(name: "insn", arg: 1, scope: !5657, file: !3, line: 3187, type: !787)
!5660 = !DILocation(line: 0, scope: !5657)
!5661 = !DILocation(line: 3189, column: 3, scope: !5657)
!5662 = !DILocation(line: 3191, column: 14, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3190, column: 5)
!5664 = !DILocation(line: 3192, column: 16, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 3192, column: 11)
!5666 = !DILocation(line: 3192, column: 21, scope: !5665)
!5667 = !DILocation(line: 3192, column: 24, scope: !5665)
!5668 = distinct !{!5668, !5661, !5669}
!5669 = !DILocation(line: 3194, column: 5, scope: !5657)
!5670 = !DILocation(line: 3196, column: 3, scope: !5657)
!5671 = distinct !DISubprogram(name: "last_call_insn", scope: !3, file: !3, line: 3203, type: !4792, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5672)
!5672 = !{!5673}
!5673 = !DILocalVariable(name: "insn", scope: !5671, file: !3, line: 3205, type: !787)
!5674 = !DILocation(line: 3207, column: 15, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 3207, column: 3)
!5676 = !DILocation(line: 0, scope: !5671)
!5677 = !DILocation(line: 3207, column: 8, scope: !5675)
!5678 = !DILocation(line: 0, scope: !5675)
!5679 = !DILocation(line: 3208, column: 8, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 3207, column: 3)
!5681 = !DILocation(line: 3208, column: 13, scope: !5680)
!5682 = !DILocation(line: 3208, column: 17, scope: !5680)
!5683 = !DILocation(line: 3207, column: 3, scope: !5675)
!5684 = !DILocation(line: 3209, column: 15, scope: !5680)
!5685 = !DILocation(line: 3207, column: 3, scope: !5680)
!5686 = distinct !{!5686, !5683, !5687}
!5687 = !DILocation(line: 3210, column: 5, scope: !5675)
!5688 = !DILocation(line: 3212, column: 3, scope: !5671)
!5689 = distinct !DISubprogram(name: "active_insn_p", scope: !3, file: !3, line: 3220, type: !3480, scopeLine: 3221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5690)
!5690 = !{!5691}
!5691 = !DILocalVariable(name: "insn", arg: 1, scope: !5689, file: !3, line: 3220, type: !1831)
!5692 = !DILocation(line: 0, scope: !5689)
!5693 = !DILocation(line: 3222, column: 11, scope: !5689)
!5694 = !DILocation(line: 3222, column: 25, scope: !5689)
!5695 = !DILocation(line: 3222, column: 28, scope: !5689)
!5696 = !DILocation(line: 3223, column: 4, scope: !5689)
!5697 = !DILocation(line: 3223, column: 8, scope: !5689)
!5698 = !DILocation(line: 3224, column: 8, scope: !5689)
!5699 = !DILocation(line: 3224, column: 14, scope: !5689)
!5700 = !DILocation(line: 3225, column: 5, scope: !5689)
!5701 = !DILocation(line: 3225, column: 9, scope: !5689)
!5702 = !DILocation(line: 3225, column: 35, scope: !5689)
!5703 = !DILocation(line: 3226, column: 9, scope: !5689)
!5704 = !DILocation(line: 3226, column: 38, scope: !5689)
!5705 = !DILocation(line: 3222, column: 3, scope: !5689)
!5706 = distinct !DISubprogram(name: "next_active_insn", scope: !3, file: !3, line: 3230, type: !2687, scopeLine: 3231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5707)
!5707 = !{!5708}
!5708 = !DILocalVariable(name: "insn", arg: 1, scope: !5706, file: !3, line: 3230, type: !787)
!5709 = !DILocation(line: 0, scope: !5706)
!5710 = !DILocation(line: 3232, column: 3, scope: !5706)
!5711 = !DILocation(line: 3234, column: 14, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3233, column: 5)
!5713 = !DILocation(line: 3235, column: 16, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 3235, column: 11)
!5715 = !DILocation(line: 3235, column: 21, scope: !5714)
!5716 = !DILocation(line: 3235, column: 24, scope: !5714)
!5717 = !DILocation(line: 3235, column: 11, scope: !5712)
!5718 = distinct !{!5718, !5710, !5719}
!5719 = !DILocation(line: 3237, column: 5, scope: !5706)
!5720 = !DILocation(line: 3239, column: 3, scope: !5706)
!5721 = distinct !DISubprogram(name: "prev_active_insn", scope: !3, file: !3, line: 3247, type: !2687, scopeLine: 3248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5722)
!5722 = !{!5723}
!5723 = !DILocalVariable(name: "insn", arg: 1, scope: !5721, file: !3, line: 3247, type: !787)
!5724 = !DILocation(line: 0, scope: !5721)
!5725 = !DILocation(line: 3249, column: 3, scope: !5721)
!5726 = !DILocation(line: 3251, column: 14, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 3250, column: 5)
!5728 = !DILocation(line: 3252, column: 16, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 3252, column: 11)
!5730 = !DILocation(line: 3252, column: 21, scope: !5729)
!5731 = !DILocation(line: 3252, column: 24, scope: !5729)
!5732 = !DILocation(line: 3252, column: 11, scope: !5727)
!5733 = distinct !{!5733, !5725, !5734}
!5734 = !DILocation(line: 3254, column: 5, scope: !5721)
!5735 = !DILocation(line: 3256, column: 3, scope: !5721)
!5736 = distinct !DISubprogram(name: "next_label", scope: !3, file: !3, line: 3262, type: !2687, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5737)
!5737 = !{!5738}
!5738 = !DILocalVariable(name: "insn", arg: 1, scope: !5736, file: !3, line: 3262, type: !787)
!5739 = !DILocation(line: 0, scope: !5736)
!5740 = !DILocation(line: 3264, column: 3, scope: !5736)
!5741 = !DILocation(line: 3266, column: 14, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 3265, column: 5)
!5743 = !DILocation(line: 3267, column: 16, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 3267, column: 11)
!5745 = !DILocation(line: 3267, column: 21, scope: !5744)
!5746 = !DILocation(line: 3267, column: 24, scope: !5744)
!5747 = !DILocation(line: 3267, column: 11, scope: !5742)
!5748 = distinct !{!5748, !5740, !5749}
!5749 = !DILocation(line: 3269, column: 5, scope: !5736)
!5750 = !DILocation(line: 3271, column: 3, scope: !5736)
!5751 = distinct !DISubprogram(name: "prev_label", scope: !3, file: !3, line: 3277, type: !2687, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5752)
!5752 = !{!5753}
!5753 = !DILocalVariable(name: "insn", arg: 1, scope: !5751, file: !3, line: 3277, type: !787)
!5754 = !DILocation(line: 0, scope: !5751)
!5755 = !DILocation(line: 3279, column: 3, scope: !5751)
!5756 = !DILocation(line: 3281, column: 14, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 3280, column: 5)
!5758 = !DILocation(line: 3282, column: 16, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3282, column: 11)
!5760 = !DILocation(line: 3282, column: 21, scope: !5759)
!5761 = !DILocation(line: 3282, column: 24, scope: !5759)
!5762 = !DILocation(line: 3282, column: 11, scope: !5757)
!5763 = distinct !{!5763, !5755, !5764}
!5764 = !DILocation(line: 3284, column: 5, scope: !5751)
!5765 = !DILocation(line: 3286, column: 3, scope: !5751)
!5766 = distinct !DISubprogram(name: "skip_consecutive_labels", scope: !3, file: !3, line: 3293, type: !2687, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5767)
!5767 = !{!5768, !5769}
!5768 = !DILocalVariable(name: "label", arg: 1, scope: !5766, file: !3, line: 3293, type: !787)
!5769 = !DILocalVariable(name: "insn", scope: !5766, file: !3, line: 3295, type: !787)
!5770 = !DILocation(line: 0, scope: !5766)
!5771 = !DILocation(line: 3297, column: 8, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 3297, column: 3)
!5773 = !DILocation(line: 0, scope: !5772)
!5774 = !DILocation(line: 3297, column: 27, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 3297, column: 3)
!5776 = !DILocation(line: 3297, column: 32, scope: !5775)
!5777 = !DILocation(line: 3297, column: 36, scope: !5775)
!5778 = !DILocation(line: 3297, column: 3, scope: !5772)
!5779 = !DILocation(line: 3298, column: 9, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 3298, column: 9)
!5781 = !DILocation(line: 3298, column: 9, scope: !5775)
!5782 = !DILocation(line: 3297, column: 58, scope: !5775)
!5783 = !DILocation(line: 3297, column: 3, scope: !5775)
!5784 = distinct !{!5784, !5778, !5785}
!5785 = !DILocation(line: 3299, column: 15, scope: !5772)
!5786 = !DILocation(line: 3301, column: 3, scope: !5766)
!5787 = distinct !DISubprogram(name: "try_split", scope: !3, file: !3, line: 3431, type: !5788, scopeLine: 3432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5790)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!787, !787, !787, !778}
!5790 = !{!5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804}
!5791 = !DILocalVariable(name: "pat", arg: 1, scope: !5787, file: !3, line: 3431, type: !787)
!5792 = !DILocalVariable(name: "trial", arg: 2, scope: !5787, file: !3, line: 3431, type: !787)
!5793 = !DILocalVariable(name: "last", arg: 3, scope: !5787, file: !3, line: 3431, type: !778)
!5794 = !DILocalVariable(name: "before", scope: !5787, file: !3, line: 3433, type: !787)
!5795 = !DILocalVariable(name: "after", scope: !5787, file: !3, line: 3434, type: !787)
!5796 = !DILocalVariable(name: "has_barrier", scope: !5787, file: !3, line: 3435, type: !778)
!5797 = !DILocalVariable(name: "note", scope: !5787, file: !3, line: 3436, type: !787)
!5798 = !DILocalVariable(name: "seq", scope: !5787, file: !3, line: 3436, type: !787)
!5799 = !DILocalVariable(name: "tem", scope: !5787, file: !3, line: 3436, type: !787)
!5800 = !DILocalVariable(name: "probability", scope: !5787, file: !3, line: 3437, type: !778)
!5801 = !DILocalVariable(name: "insn_last", scope: !5787, file: !3, line: 3438, type: !787)
!5802 = !DILocalVariable(name: "insn", scope: !5787, file: !3, line: 3438, type: !787)
!5803 = !DILocalVariable(name: "njumps", scope: !5787, file: !3, line: 3439, type: !778)
!5804 = !DILocalVariable(name: "p", scope: !5805, file: !3, line: 3510, type: !1824)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3509, column: 4)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 3508, column: 6)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 3507, column: 7)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 3507, column: 7)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 3506, column: 5)
!5810 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3505, column: 7)
!5811 = !DILocation(line: 0, scope: !5787)
!5812 = !DILocation(line: 3433, column: 16, scope: !5787)
!5813 = !DILocation(line: 3434, column: 15, scope: !5787)
!5814 = !DILocation(line: 3442, column: 7, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3442, column: 7)
!5816 = !DILocation(line: 3442, column: 7, scope: !5787)
!5817 = !DILocation(line: 3445, column: 7, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3445, column: 7)
!5819 = !DILocation(line: 3446, column: 7, scope: !5818)
!5820 = !DILocation(line: 3446, column: 18, scope: !5818)
!5821 = !DILocation(line: 3446, column: 16, scope: !5818)
!5822 = !DILocation(line: 3445, column: 7, scope: !5787)
!5823 = !DILocation(line: 3447, column: 32, scope: !5818)
!5824 = !DILocation(line: 3447, column: 30, scope: !5818)
!5825 = !DILocation(line: 3447, column: 5, scope: !5818)
!5826 = !DILocation(line: 3448, column: 17, scope: !5787)
!5827 = !DILocation(line: 3450, column: 9, scope: !5787)
!5828 = !DILocation(line: 3452, column: 28, scope: !5787)
!5829 = !DILocation(line: 3456, column: 7, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3456, column: 7)
!5831 = !DILocation(line: 3456, column: 13, scope: !5830)
!5832 = !DILocation(line: 3456, column: 16, scope: !5830)
!5833 = !DILocation(line: 3456, column: 7, scope: !5787)
!5834 = !DILocation(line: 3459, column: 15, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 3457, column: 5)
!5836 = !DILocation(line: 3460, column: 5, scope: !5835)
!5837 = !DILocation(line: 3462, column: 8, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3462, column: 7)
!5839 = !DILocation(line: 3462, column: 7, scope: !5787)
!5840 = !DILocation(line: 3468, column: 3, scope: !5787)
!5841 = !DILocation(line: 3470, column: 11, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 3470, column: 11)
!5843 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3469, column: 5)
!5844 = !DILocation(line: 3471, column: 4, scope: !5842)
!5845 = !DILocation(line: 3471, column: 20, scope: !5842)
!5846 = !DILocation(line: 3471, column: 7, scope: !5842)
!5847 = !DILocation(line: 3470, column: 11, scope: !5843)
!5848 = !DILocation(line: 3473, column: 12, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 3473, column: 11)
!5850 = !DILocation(line: 3473, column: 11, scope: !5843)
!5851 = distinct !{!5851, !5840, !5852}
!5852 = !DILocation(line: 3476, column: 5, scope: !5787)
!5853 = !DILocation(line: 3480, column: 3, scope: !5787)
!5854 = !DILocation(line: 0, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 3489, column: 8)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 3486, column: 2)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 3485, column: 11)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 3484, column: 5)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 3483, column: 3)
!5860 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3483, column: 3)
!5861 = !DILocation(line: 0, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 3492, column: 6)
!5863 = !DILocation(line: 3483, column: 8, scope: !5860)
!5864 = !DILocation(line: 0, scope: !5860)
!5865 = !DILocation(line: 3483, column: 3, scope: !5860)
!5866 = !DILocation(line: 3485, column: 11, scope: !5857)
!5867 = !DILocation(line: 3485, column: 11, scope: !5858)
!5868 = !DILocation(line: 3487, column: 21, scope: !5856)
!5869 = !DILocation(line: 3487, column: 4, scope: !5856)
!5870 = !DILocation(line: 3490, column: 8, scope: !5855)
!5871 = !DILocation(line: 3483, column: 40, scope: !5859)
!5872 = !DILocation(line: 3483, column: 3, scope: !5859)
!5873 = distinct !{!5873, !5865, !5874}
!5874 = !DILocation(line: 3501, column: 5, scope: !5860)
!5875 = !DILocation(line: 3505, column: 7, scope: !5810)
!5876 = !DILocation(line: 3488, column: 10, scope: !5856)
!5877 = !DILocation(line: 3490, column: 11, scope: !5855)
!5878 = !DILocation(line: 3491, column: 8, scope: !5855)
!5879 = !DILocation(line: 3491, column: 12, scope: !5855)
!5880 = !DILocation(line: 3489, column: 8, scope: !5856)
!5881 = !DILocation(line: 3497, column: 8, scope: !5862)
!5882 = !DILocation(line: 3498, column: 41, scope: !5862)
!5883 = !DILocation(line: 3498, column: 8, scope: !5862)
!5884 = !DILocation(line: 3499, column: 6, scope: !5862)
!5885 = !DILocation(line: 3505, column: 7, scope: !5787)
!5886 = !DILocation(line: 0, scope: !5805)
!5887 = !DILocation(line: 3507, column: 7, scope: !5808)
!5888 = !DILocation(line: 0, scope: !5808)
!5889 = !DILocation(line: 3508, column: 6, scope: !5806)
!5890 = !DILocation(line: 3508, column: 6, scope: !5807)
!5891 = !DILocation(line: 3510, column: 16, scope: !5805)
!5892 = !DILocation(line: 3511, column: 6, scope: !5805)
!5893 = !DILocation(line: 3511, column: 13, scope: !5805)
!5894 = !DILocation(line: 3512, column: 13, scope: !5805)
!5895 = distinct !{!5895, !5892, !5894}
!5896 = !DILocation(line: 3513, column: 11, scope: !5805)
!5897 = !DILocation(line: 3513, column: 9, scope: !5805)
!5898 = !DILocation(line: 3514, column: 30, scope: !5805)
!5899 = !DILocation(line: 3514, column: 28, scope: !5805)
!5900 = !DILocation(line: 3517, column: 10, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3517, column: 10)
!5902 = !DILocation(line: 3517, column: 10, scope: !5805)
!5903 = !DILocation(line: 3518, column: 10, scope: !5901)
!5904 = !DILocation(line: 3518, column: 23, scope: !5901)
!5905 = !DILocation(line: 3518, column: 8, scope: !5901)
!5906 = !DILocation(line: 3507, column: 44, scope: !5807)
!5907 = !DILocation(line: 3507, column: 7, scope: !5807)
!5908 = distinct !{!5908, !5887, !5909}
!5909 = !DILocation(line: 3519, column: 4, scope: !5808)
!5910 = !DILocation(line: 3523, column: 15, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3523, column: 3)
!5912 = !DILocation(line: 3523, column: 8, scope: !5911)
!5913 = !DILocation(line: 0, scope: !5911)
!5914 = !DILocation(line: 3523, column: 3, scope: !5911)
!5915 = !DILocation(line: 3525, column: 15, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 3524, column: 5)
!5917 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 3523, column: 3)
!5918 = !DILocation(line: 3525, column: 7, scope: !5916)
!5919 = !DILocation(line: 0, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 3543, column: 12)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 3542, column: 6)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 3541, column: 4)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3541, column: 4)
!5924 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3526, column: 2)
!5925 = !DILocation(line: 3541, column: 4, scope: !5923)
!5926 = !DILocation(line: 3528, column: 4, scope: !5924)
!5927 = !DILocation(line: 3529, column: 4, scope: !5924)
!5928 = !DILocation(line: 0, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3535, column: 12)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 3534, column: 6)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 3533, column: 4)
!5932 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3533, column: 4)
!5933 = !DILocation(line: 3533, column: 9, scope: !5932)
!5934 = !DILocation(line: 0, scope: !5932)
!5935 = !DILocation(line: 3533, column: 32, scope: !5931)
!5936 = !DILocation(line: 3533, column: 4, scope: !5932)
!5937 = !DILocation(line: 3535, column: 12, scope: !5929)
!5938 = !DILocation(line: 3535, column: 12, scope: !5930)
!5939 = !DILocation(line: 3536, column: 23, scope: !5929)
!5940 = !DILocation(line: 3536, column: 45, scope: !5929)
!5941 = !DILocation(line: 3536, column: 3, scope: !5929)
!5942 = !DILocation(line: 3533, column: 52, scope: !5931)
!5943 = !DILocation(line: 3533, column: 4, scope: !5931)
!5944 = distinct !{!5944, !5936, !5945}
!5945 = !DILocation(line: 3537, column: 6, scope: !5932)
!5946 = !DILocation(line: 0, scope: !5923)
!5947 = !DILocation(line: 3541, column: 32, scope: !5922)
!5948 = !DILocation(line: 3543, column: 12, scope: !5920)
!5949 = !DILocation(line: 3543, column: 12, scope: !5921)
!5950 = !DILocation(line: 3544, column: 23, scope: !5920)
!5951 = !DILocation(line: 3544, column: 45, scope: !5920)
!5952 = !DILocation(line: 3544, column: 3, scope: !5920)
!5953 = !DILocation(line: 3541, column: 52, scope: !5922)
!5954 = !DILocation(line: 3541, column: 4, scope: !5922)
!5955 = distinct !{!5955, !5925, !5956}
!5956 = !DILocation(line: 3545, column: 6, scope: !5923)
!5957 = !DILocation(line: 3523, column: 47, scope: !5917)
!5958 = !DILocation(line: 3523, column: 3, scope: !5917)
!5959 = distinct !{!5959, !5914, !5960}
!5960 = !DILocation(line: 3563, column: 5, scope: !5911)
!5961 = !DILocation(line: 3567, column: 7, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3567, column: 7)
!5963 = !DILocation(line: 3567, column: 7, scope: !5787)
!5964 = !DILocation(line: 3570, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 3568, column: 5)
!5966 = !DILocation(line: 0, scope: !5965)
!5967 = !DILocation(line: 3570, column: 19, scope: !5965)
!5968 = !DILocation(line: 3573, column: 8, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 3573, column: 8)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 3571, column: 2)
!5971 = !DILocation(line: 3573, column: 8, scope: !5970)
!5972 = !DILocation(line: 3574, column: 24, scope: !5969)
!5973 = !DILocation(line: 3574, column: 6, scope: !5969)
!5974 = !DILocation(line: 3576, column: 11, scope: !5970)
!5975 = distinct !{!5975, !5964, !5976}
!5976 = !DILocation(line: 3577, column: 2, scope: !5965)
!5977 = !DILocation(line: 3580, column: 45, scope: !5787)
!5978 = !DILocation(line: 3580, column: 9, scope: !5787)
!5979 = !DILocation(line: 3582, column: 3, scope: !5787)
!5980 = !DILocation(line: 3583, column: 7, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3583, column: 7)
!5982 = !DILocation(line: 3583, column: 7, scope: !5787)
!5983 = !DILocation(line: 3584, column: 5, scope: !5981)
!5984 = !DILocation(line: 3591, column: 8, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3591, column: 3)
!5986 = !DILocation(line: 0, scope: !5985)
!5987 = !DILocation(line: 3591, column: 38, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3591, column: 3)
!5989 = !DILocation(line: 3591, column: 3, scope: !5985)
!5990 = !DILocation(line: 3592, column: 11, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 3592, column: 9)
!5992 = !DILocation(line: 3592, column: 32, scope: !5991)
!5993 = !DILocation(line: 3592, column: 35, scope: !5991)
!5994 = !DILocation(line: 3592, column: 9, scope: !5988)
!5995 = !DILocation(line: 3593, column: 24, scope: !5991)
!5996 = !DILocation(line: 3593, column: 13, scope: !5991)
!5997 = !DILocation(line: 3593, column: 7, scope: !5991)
!5998 = !DILocation(line: 3591, column: 3, scope: !5988)
!5999 = distinct !{!5999, !5989, !6000}
!6000 = !DILocation(line: 3593, column: 45, scope: !5985)
!6001 = !DILocation(line: 3597, column: 10, scope: !5787)
!6002 = !DILocation(line: 3598, column: 8, scope: !5787)
!6003 = !DILocation(line: 3598, column: 16, scope: !5787)
!6004 = !DILocation(line: 3598, column: 36, scope: !5787)
!6005 = !DILocation(line: 3599, column: 7, scope: !5787)
!6006 = !DILocation(line: 3600, column: 1, scope: !5787)
!6007 = distinct !DISubprogram(name: "mark_label_nuses", scope: !3, file: !3, line: 3399, type: !3529, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6008)
!6008 = !{!6009, !6010, !6011, !6012, !6013}
!6009 = !DILocalVariable(name: "x", arg: 1, scope: !6007, file: !3, line: 3399, type: !787)
!6010 = !DILocalVariable(name: "code", scope: !6007, file: !3, line: 3401, type: !399)
!6011 = !DILocalVariable(name: "i", scope: !6007, file: !3, line: 3402, type: !778)
!6012 = !DILocalVariable(name: "j", scope: !6007, file: !3, line: 3402, type: !778)
!6013 = !DILocalVariable(name: "fmt", scope: !6007, file: !3, line: 3403, type: !783)
!6014 = !DILocation(line: 0, scope: !6007)
!6015 = !DILocation(line: 3405, column: 10, scope: !6007)
!6016 = !DILocation(line: 3406, column: 12, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 3406, column: 7)
!6018 = !DILocation(line: 3406, column: 25, scope: !6017)
!6019 = !DILocation(line: 3406, column: 28, scope: !6017)
!6020 = !DILocation(line: 3406, column: 7, scope: !6007)
!6021 = !DILocation(line: 3407, column: 5, scope: !6017)
!6022 = !DILocation(line: 3407, column: 30, scope: !6017)
!6023 = !DILocation(line: 3409, column: 9, scope: !6007)
!6024 = !DILocation(line: 3410, column: 12, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 3410, column: 3)
!6026 = !DILocation(line: 0, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 3415, column: 2)
!6028 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 3414, column: 16)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 3412, column: 11)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 3411, column: 5)
!6031 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 3410, column: 3)
!6032 = !DILocation(line: 3410, column: 8, scope: !6025)
!6033 = !DILocation(line: 0, scope: !6025)
!6034 = !DILocation(line: 3410, column: 41, scope: !6031)
!6035 = !DILocation(line: 3410, column: 3, scope: !6025)
!6036 = !DILocation(line: 3412, column: 11, scope: !6029)
!6037 = !DILocation(line: 3412, column: 18, scope: !6029)
!6038 = !DILocation(line: 3412, column: 11, scope: !6030)
!6039 = !DILocation(line: 3413, column: 20, scope: !6029)
!6040 = !DILocation(line: 3413, column: 2, scope: !6029)
!6041 = !DILocation(line: 3414, column: 23, scope: !6028)
!6042 = !DILocation(line: 3414, column: 16, scope: !6029)
!6043 = !DILocation(line: 3415, column: 11, scope: !6027)
!6044 = !DILocation(line: 3415, column: 7, scope: !6027)
!6045 = !DILocation(line: 3415, column: 33, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 3415, column: 2)
!6047 = !DILocation(line: 3415, column: 2, scope: !6027)
!6048 = !DILocation(line: 3416, column: 22, scope: !6046)
!6049 = !DILocation(line: 3416, column: 4, scope: !6046)
!6050 = !DILocation(line: 3415, column: 2, scope: !6046)
!6051 = distinct !{!6051, !6047, !6052}
!6052 = !DILocation(line: 3416, column: 39, scope: !6027)
!6053 = !DILocation(line: 3410, column: 3, scope: !6031)
!6054 = distinct !{!6054, !6035, !6055}
!6055 = !DILocation(line: 3417, column: 5, scope: !6025)
!6056 = !DILocation(line: 3418, column: 1, scope: !6007)
!6057 = distinct !DISubprogram(name: "emit_insn_after_setloc", scope: !3, file: !3, line: 4522, type: !5788, scopeLine: 4523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6058)
!6058 = !{!6059, !6060, !6061, !6062}
!6059 = !DILocalVariable(name: "pattern", arg: 1, scope: !6057, file: !3, line: 4522, type: !787)
!6060 = !DILocalVariable(name: "after", arg: 2, scope: !6057, file: !3, line: 4522, type: !787)
!6061 = !DILocalVariable(name: "loc", arg: 3, scope: !6057, file: !3, line: 4522, type: !778)
!6062 = !DILocalVariable(name: "last", scope: !6057, file: !3, line: 4524, type: !787)
!6063 = !DILocation(line: 0, scope: !6057)
!6064 = !DILocation(line: 4524, column: 14, scope: !6057)
!6065 = !DILocation(line: 4526, column: 15, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 4526, column: 7)
!6067 = !DILocation(line: 4526, column: 31, scope: !6066)
!6068 = !DILocation(line: 4526, column: 27, scope: !6066)
!6069 = !DILocation(line: 4530, column: 3, scope: !6057)
!6070 = !DILocation(line: 4532, column: 11, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 4532, column: 11)
!6072 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 4531, column: 5)
!6073 = !DILocation(line: 4532, column: 33, scope: !6071)
!6074 = !DILocation(line: 4532, column: 37, scope: !6071)
!6075 = !DILocation(line: 4532, column: 11, scope: !6072)
!6076 = !DILocation(line: 4533, column: 23, scope: !6071)
!6077 = !DILocation(line: 4533, column: 2, scope: !6071)
!6078 = !DILocation(line: 4534, column: 17, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 4534, column: 11)
!6080 = !DILocation(line: 4534, column: 11, scope: !6072)
!6081 = distinct !{!6081, !6069, !6082}
!6082 = !DILocation(line: 4537, column: 5, scope: !6057)
!6083 = !DILocation(line: 4539, column: 1, scope: !6057)
!6084 = distinct !DISubprogram(name: "emit_barrier_after", scope: !3, file: !3, line: 4479, type: !2687, scopeLine: 4480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6085)
!6085 = !{!6086, !6087}
!6086 = !DILocalVariable(name: "after", arg: 1, scope: !6084, file: !3, line: 4479, type: !787)
!6087 = !DILocalVariable(name: "insn", scope: !6084, file: !3, line: 4481, type: !787)
!6088 = !DILocation(line: 0, scope: !6084)
!6089 = !DILocation(line: 4481, column: 14, scope: !6084)
!6090 = !DILocation(line: 4483, column: 33, scope: !6084)
!6091 = !DILocation(line: 4483, column: 3, scope: !6084)
!6092 = !DILocation(line: 4483, column: 19, scope: !6084)
!6093 = !DILocation(line: 4485, column: 3, scope: !6084)
!6094 = !DILocation(line: 4486, column: 3, scope: !6084)
!6095 = distinct !DISubprogram(name: "make_insn_raw", scope: !3, file: !3, line: 3606, type: !2687, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6096)
!6096 = !{!6097, !6098}
!6097 = !DILocalVariable(name: "pattern", arg: 1, scope: !6095, file: !3, line: 3606, type: !787)
!6098 = !DILocalVariable(name: "insn", scope: !6095, file: !3, line: 3608, type: !787)
!6099 = !DILocation(line: 0, scope: !6095)
!6100 = !DILocation(line: 3610, column: 10, scope: !6095)
!6101 = !DILocation(line: 3612, column: 33, scope: !6095)
!6102 = !DILocation(line: 3612, column: 3, scope: !6095)
!6103 = !DILocation(line: 3612, column: 19, scope: !6095)
!6104 = !DILocation(line: 3613, column: 3, scope: !6095)
!6105 = !DILocation(line: 3613, column: 18, scope: !6095)
!6106 = !DILocation(line: 3614, column: 3, scope: !6095)
!6107 = !DILocation(line: 3614, column: 20, scope: !6095)
!6108 = !DILocation(line: 3615, column: 3, scope: !6095)
!6109 = !DILocation(line: 3615, column: 20, scope: !6095)
!6110 = !DILocation(line: 3616, column: 25, scope: !6095)
!6111 = !DILocation(line: 3616, column: 3, scope: !6095)
!6112 = !DILocation(line: 3616, column: 23, scope: !6095)
!6113 = !DILocation(line: 3617, column: 3, scope: !6095)
!6114 = !DILocation(line: 3617, column: 25, scope: !6095)
!6115 = !DILocation(line: 3631, column: 3, scope: !6095)
!6116 = distinct !DISubprogram(name: "make_debug_insn_raw", scope: !3, file: !3, line: 3637, type: !2687, scopeLine: 3638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6117)
!6117 = !{!6118, !6119}
!6118 = !DILocalVariable(name: "pattern", arg: 1, scope: !6116, file: !3, line: 3637, type: !787)
!6119 = !DILocalVariable(name: "insn", scope: !6116, file: !3, line: 3639, type: !787)
!6120 = !DILocation(line: 0, scope: !6116)
!6121 = !DILocation(line: 3641, column: 10, scope: !6116)
!6122 = !DILocation(line: 3642, column: 39, scope: !6116)
!6123 = !DILocation(line: 3642, column: 3, scope: !6116)
!6124 = !DILocation(line: 3642, column: 19, scope: !6116)
!6125 = !DILocation(line: 3643, column: 7, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3643, column: 7)
!6127 = !DILocation(line: 3643, column: 28, scope: !6126)
!6128 = !DILocation(line: 3643, column: 26, scope: !6126)
!6129 = !DILocation(line: 3643, column: 7, scope: !6116)
!6130 = !DILocation(line: 3644, column: 35, scope: !6126)
!6131 = !DILocation(line: 3644, column: 21, scope: !6126)
!6132 = !DILocation(line: 3644, column: 5, scope: !6126)
!6133 = !DILocation(line: 3646, column: 3, scope: !6116)
!6134 = !DILocation(line: 3646, column: 18, scope: !6116)
!6135 = !DILocation(line: 3647, column: 3, scope: !6116)
!6136 = !DILocation(line: 3647, column: 20, scope: !6116)
!6137 = !DILocation(line: 3648, column: 3, scope: !6116)
!6138 = !DILocation(line: 3648, column: 20, scope: !6116)
!6139 = !DILocation(line: 3649, column: 25, scope: !6116)
!6140 = !DILocation(line: 3649, column: 3, scope: !6116)
!6141 = !DILocation(line: 3649, column: 23, scope: !6116)
!6142 = !DILocation(line: 3650, column: 3, scope: !6116)
!6143 = !DILocation(line: 3650, column: 25, scope: !6116)
!6144 = !DILocation(line: 3652, column: 3, scope: !6116)
!6145 = distinct !DISubprogram(name: "make_jump_insn_raw", scope: !3, file: !3, line: 3658, type: !2687, scopeLine: 3659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6146 = !{!6147, !6148}
!6147 = !DILocalVariable(name: "pattern", arg: 1, scope: !6145, file: !3, line: 3658, type: !787)
!6148 = !DILocalVariable(name: "insn", scope: !6145, file: !3, line: 3660, type: !787)
!6149 = !DILocation(line: 0, scope: !6145)
!6150 = !DILocation(line: 3662, column: 10, scope: !6145)
!6151 = !DILocation(line: 3663, column: 33, scope: !6145)
!6152 = !DILocation(line: 3663, column: 3, scope: !6145)
!6153 = !DILocation(line: 3663, column: 19, scope: !6145)
!6154 = !DILocation(line: 3665, column: 3, scope: !6145)
!6155 = !DILocation(line: 3665, column: 18, scope: !6145)
!6156 = !DILocation(line: 3666, column: 3, scope: !6145)
!6157 = !DILocation(line: 3666, column: 20, scope: !6145)
!6158 = !DILocation(line: 3667, column: 3, scope: !6145)
!6159 = !DILocation(line: 3667, column: 20, scope: !6145)
!6160 = !DILocation(line: 3668, column: 3, scope: !6145)
!6161 = !DILocation(line: 3668, column: 21, scope: !6145)
!6162 = !DILocation(line: 3669, column: 25, scope: !6145)
!6163 = !DILocation(line: 3669, column: 3, scope: !6145)
!6164 = !DILocation(line: 3669, column: 23, scope: !6145)
!6165 = !DILocation(line: 3670, column: 3, scope: !6145)
!6166 = !DILocation(line: 3670, column: 25, scope: !6145)
!6167 = !DILocation(line: 3672, column: 3, scope: !6145)
!6168 = distinct !DISubprogram(name: "add_insn", scope: !3, file: !3, line: 3699, type: !3529, scopeLine: 3700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6169)
!6169 = !{!6170}
!6170 = !DILocalVariable(name: "insn", arg: 1, scope: !6168, file: !3, line: 3699, type: !787)
!6171 = !DILocation(line: 0, scope: !6168)
!6172 = !DILocation(line: 3701, column: 22, scope: !6168)
!6173 = !DILocation(line: 3701, column: 3, scope: !6168)
!6174 = !DILocation(line: 3701, column: 20, scope: !6168)
!6175 = !DILocation(line: 3702, column: 3, scope: !6168)
!6176 = !DILocation(line: 3702, column: 20, scope: !6168)
!6177 = !DILocation(line: 3704, column: 15, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 3704, column: 7)
!6179 = !DILocation(line: 3704, column: 12, scope: !6178)
!6180 = !DILocation(line: 3704, column: 7, scope: !6168)
!6181 = !DILocation(line: 3705, column: 5, scope: !6178)
!6182 = !DILocation(line: 3705, column: 27, scope: !6178)
!6183 = !DILocation(line: 3707, column: 15, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 3707, column: 7)
!6185 = !DILocation(line: 3707, column: 12, scope: !6184)
!6186 = !DILocation(line: 3707, column: 7, scope: !6168)
!6187 = !DILocation(line: 3708, column: 16, scope: !6184)
!6188 = !DILocation(line: 3708, column: 5, scope: !6184)
!6189 = !DILocation(line: 3710, column: 13, scope: !6168)
!6190 = !DILocation(line: 3711, column: 1, scope: !6168)
!6191 = distinct !DISubprogram(name: "add_insn_after", scope: !3, file: !3, line: 3719, type: !6192, scopeLine: 3720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6194)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{null, !787, !787, !1160}
!6194 = !{!6195, !6196, !6197, !6198, !6199, !6203}
!6195 = !DILocalVariable(name: "insn", arg: 1, scope: !6191, file: !3, line: 3719, type: !787)
!6196 = !DILocalVariable(name: "after", arg: 2, scope: !6191, file: !3, line: 3719, type: !787)
!6197 = !DILocalVariable(name: "bb", arg: 3, scope: !6191, file: !3, line: 3719, type: !1160)
!6198 = !DILocalVariable(name: "next", scope: !6191, file: !3, line: 3721, type: !787)
!6199 = !DILocalVariable(name: "stack", scope: !6200, file: !3, line: 3738, type: !1825)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 3737, column: 5)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 3734, column: 12)
!6202 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 3728, column: 7)
!6203 = !DILocalVariable(name: "sequence", scope: !6204, file: !3, line: 3769, type: !787)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 3768, column: 5)
!6205 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 3767, column: 7)
!6206 = !DILocation(line: 0, scope: !6191)
!6207 = !DILocation(line: 3721, column: 14, scope: !6191)
!6208 = !DILocation(line: 3723, column: 3, scope: !6191)
!6209 = !DILocation(line: 3725, column: 3, scope: !6191)
!6210 = !DILocation(line: 3725, column: 20, scope: !6191)
!6211 = !DILocation(line: 3726, column: 3, scope: !6191)
!6212 = !DILocation(line: 3726, column: 20, scope: !6191)
!6213 = !DILocation(line: 3728, column: 7, scope: !6202)
!6214 = !DILocation(line: 3728, column: 7, scope: !6191)
!6215 = !DILocation(line: 3730, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 3729, column: 5)
!6217 = !DILocation(line: 3730, column: 24, scope: !6216)
!6218 = !DILocation(line: 3731, column: 11, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 3731, column: 11)
!6220 = !DILocation(line: 3731, column: 33, scope: !6219)
!6221 = !DILocation(line: 3731, column: 36, scope: !6219)
!6222 = !DILocation(line: 3731, column: 62, scope: !6219)
!6223 = !DILocation(line: 3731, column: 11, scope: !6216)
!6224 = !DILocation(line: 3732, column: 2, scope: !6219)
!6225 = !DILocation(line: 3732, column: 45, scope: !6219)
!6226 = !DILocation(line: 3734, column: 12, scope: !6201)
!6227 = !DILocation(line: 3734, column: 22, scope: !6201)
!6228 = !DILocation(line: 3734, column: 12, scope: !6202)
!6229 = !DILocation(line: 3735, column: 15, scope: !6201)
!6230 = !DILocation(line: 3735, column: 5, scope: !6201)
!6231 = !DILocation(line: 3740, column: 7, scope: !6200)
!6232 = !DILocation(line: 0, scope: !6200)
!6233 = !DILocation(line: 3740, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 3740, column: 7)
!6235 = !DILocation(line: 3741, column: 22, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3741, column: 6)
!6237 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3740, column: 7)
!6238 = !DILocation(line: 3741, column: 12, scope: !6236)
!6239 = !DILocation(line: 3741, column: 6, scope: !6237)
!6240 = !DILocation(line: 3743, column: 18, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 3742, column: 4)
!6242 = !DILocation(line: 3747, column: 7, scope: !6200)
!6243 = !DILocation(line: 3740, column: 36, scope: !6237)
!6244 = !DILocation(line: 3740, column: 7, scope: !6237)
!6245 = distinct !{!6245, !6233, !6246}
!6246 = !DILocation(line: 3745, column: 4, scope: !6234)
!6247 = !DILocation(line: 3750, column: 8, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 3750, column: 7)
!6249 = !DILocation(line: 3751, column: 7, scope: !6248)
!6250 = !DILocation(line: 3751, column: 11, scope: !6248)
!6251 = !DILocation(line: 3752, column: 7, scope: !6248)
!6252 = !DILocation(line: 3752, column: 16, scope: !6248)
!6253 = !DILocation(line: 3752, column: 14, scope: !6248)
!6254 = !DILocation(line: 3750, column: 7, scope: !6191)
!6255 = !DILocation(line: 3754, column: 7, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 3753, column: 5)
!6257 = !DILocation(line: 3755, column: 11, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3755, column: 11)
!6259 = !DILocation(line: 3755, column: 11, scope: !6256)
!6260 = !DILocation(line: 3756, column: 2, scope: !6258)
!6261 = !DILocation(line: 3759, column: 11, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3759, column: 11)
!6263 = !DILocation(line: 3759, column: 23, scope: !6262)
!6264 = !DILocation(line: 3761, column: 4, scope: !6262)
!6265 = !DILocation(line: 3761, column: 8, scope: !6262)
!6266 = !DILocation(line: 3762, column: 4, scope: !6262)
!6267 = !DILocation(line: 3762, column: 8, scope: !6262)
!6268 = !DILocation(line: 3759, column: 11, scope: !6256)
!6269 = !DILocation(line: 3763, column: 14, scope: !6262)
!6270 = !DILocation(line: 3763, column: 2, scope: !6262)
!6271 = !DILocation(line: 3766, column: 21, scope: !6191)
!6272 = !DILocation(line: 3767, column: 7, scope: !6205)
!6273 = !DILocation(line: 3767, column: 30, scope: !6205)
!6274 = !DILocation(line: 3767, column: 33, scope: !6205)
!6275 = !DILocation(line: 3767, column: 60, scope: !6205)
!6276 = !DILocation(line: 3767, column: 7, scope: !6191)
!6277 = !DILocation(line: 0, scope: !6204)
!6278 = !DILocation(line: 3770, column: 7, scope: !6204)
!6279 = !DILocation(line: 3770, column: 68, scope: !6204)
!6280 = !DILocation(line: 3771, column: 5, scope: !6204)
!6281 = !DILocation(line: 3772, column: 1, scope: !6191)
!6282 = distinct !DISubprogram(name: "add_insn_before", scope: !3, file: !3, line: 3781, type: !6192, scopeLine: 3782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6283)
!6283 = !{!6284, !6285, !6286, !6287, !6288, !6293}
!6284 = !DILocalVariable(name: "insn", arg: 1, scope: !6282, file: !3, line: 3781, type: !787)
!6285 = !DILocalVariable(name: "before", arg: 2, scope: !6282, file: !3, line: 3781, type: !787)
!6286 = !DILocalVariable(name: "bb", arg: 3, scope: !6282, file: !3, line: 3781, type: !1160)
!6287 = !DILocalVariable(name: "prev", scope: !6282, file: !3, line: 3783, type: !787)
!6288 = !DILocalVariable(name: "sequence", scope: !6289, file: !3, line: 3795, type: !787)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 3794, column: 2)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 3793, column: 11)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 3791, column: 5)
!6292 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 3790, column: 7)
!6293 = !DILocalVariable(name: "stack", scope: !6294, file: !3, line: 3803, type: !1825)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 3802, column: 5)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 3799, column: 12)
!6296 = !DILocation(line: 0, scope: !6282)
!6297 = !DILocation(line: 3783, column: 14, scope: !6282)
!6298 = !DILocation(line: 3785, column: 3, scope: !6282)
!6299 = !DILocation(line: 3787, column: 3, scope: !6282)
!6300 = !DILocation(line: 3787, column: 20, scope: !6282)
!6301 = !DILocation(line: 3788, column: 3, scope: !6282)
!6302 = !DILocation(line: 3788, column: 20, scope: !6282)
!6303 = !DILocation(line: 3790, column: 7, scope: !6292)
!6304 = !DILocation(line: 3790, column: 7, scope: !6282)
!6305 = !DILocation(line: 3792, column: 7, scope: !6291)
!6306 = !DILocation(line: 3792, column: 24, scope: !6291)
!6307 = !DILocation(line: 3793, column: 11, scope: !6290)
!6308 = !DILocation(line: 3793, column: 33, scope: !6290)
!6309 = !DILocation(line: 3793, column: 36, scope: !6290)
!6310 = !DILocation(line: 3793, column: 62, scope: !6290)
!6311 = !DILocation(line: 3793, column: 11, scope: !6291)
!6312 = !DILocation(line: 0, scope: !6289)
!6313 = !DILocation(line: 3796, column: 4, scope: !6289)
!6314 = !DILocation(line: 3796, column: 65, scope: !6289)
!6315 = !DILocation(line: 3797, column: 2, scope: !6289)
!6316 = !DILocation(line: 3799, column: 12, scope: !6295)
!6317 = !DILocation(line: 3799, column: 23, scope: !6295)
!6318 = !DILocation(line: 3799, column: 12, scope: !6292)
!6319 = !DILocation(line: 3800, column: 16, scope: !6295)
!6320 = !DILocation(line: 3800, column: 5, scope: !6295)
!6321 = !DILocation(line: 3805, column: 7, scope: !6294)
!6322 = !DILocation(line: 0, scope: !6294)
!6323 = !DILocation(line: 3805, column: 7, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 3805, column: 7)
!6325 = !DILocation(line: 3806, column: 23, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 3806, column: 6)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 3805, column: 7)
!6328 = !DILocation(line: 3806, column: 13, scope: !6326)
!6329 = !DILocation(line: 3806, column: 6, scope: !6327)
!6330 = !DILocation(line: 3808, column: 19, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 3807, column: 4)
!6332 = !DILocation(line: 3812, column: 7, scope: !6294)
!6333 = !DILocation(line: 3805, column: 36, scope: !6327)
!6334 = !DILocation(line: 3805, column: 7, scope: !6327)
!6335 = distinct !{!6335, !6323, !6336}
!6336 = !DILocation(line: 3810, column: 4, scope: !6324)
!6337 = !DILocation(line: 3815, column: 8, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 3815, column: 7)
!6339 = !DILocation(line: 3816, column: 7, scope: !6338)
!6340 = !DILocation(line: 3816, column: 11, scope: !6338)
!6341 = !DILocation(line: 3817, column: 7, scope: !6338)
!6342 = !DILocation(line: 3817, column: 11, scope: !6338)
!6343 = !DILocation(line: 3815, column: 7, scope: !6282)
!6344 = !DILocation(line: 3818, column: 10, scope: !6338)
!6345 = !DILocation(line: 3818, column: 5, scope: !6338)
!6346 = !DILocation(line: 3820, column: 7, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 3820, column: 7)
!6348 = !DILocation(line: 3820, column: 7, scope: !6282)
!6349 = !DILocation(line: 3822, column: 7, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 3821, column: 5)
!6351 = !DILocation(line: 3823, column: 11, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 3823, column: 11)
!6353 = !DILocation(line: 3823, column: 11, scope: !6350)
!6354 = !DILocation(line: 3824, column: 2, scope: !6352)
!6355 = !DILocation(line: 3827, column: 7, scope: !6350)
!6356 = !DILocation(line: 3833, column: 22, scope: !6282)
!6357 = !DILocation(line: 3834, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 3834, column: 7)
!6359 = !DILocation(line: 3834, column: 31, scope: !6358)
!6360 = !DILocation(line: 3834, column: 34, scope: !6358)
!6361 = !DILocation(line: 3834, column: 62, scope: !6358)
!6362 = !DILocation(line: 3834, column: 7, scope: !6282)
!6363 = !DILocation(line: 3835, column: 5, scope: !6358)
!6364 = !DILocation(line: 3835, column: 50, scope: !6358)
!6365 = !DILocation(line: 3836, column: 1, scope: !6282)
!6366 = distinct !DISubprogram(name: "set_insn_deleted", scope: !3, file: !3, line: 3842, type: !3529, scopeLine: 3843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6367)
!6367 = !{!6368}
!6368 = !DILocalVariable(name: "insn", arg: 1, scope: !6366, file: !3, line: 3842, type: !787)
!6369 = !DILocation(line: 0, scope: !6366)
!6370 = !DILocation(line: 3844, column: 19, scope: !6366)
!6371 = !DILocation(line: 3844, column: 42, scope: !6366)
!6372 = !DILocation(line: 3844, column: 3, scope: !6366)
!6373 = !DILocation(line: 3845, column: 3, scope: !6366)
!6374 = !DILocation(line: 3846, column: 3, scope: !6366)
!6375 = !DILocation(line: 3846, column: 20, scope: !6366)
!6376 = !DILocation(line: 3847, column: 1, scope: !6366)
!6377 = distinct !DISubprogram(name: "remove_insn", scope: !3, file: !3, line: 3853, type: !3529, scopeLine: 3854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6378)
!6378 = !{!6379, !6380, !6381, !6382, !6383, !6388, !6391}
!6379 = !DILocalVariable(name: "insn", arg: 1, scope: !6377, file: !3, line: 3853, type: !787)
!6380 = !DILocalVariable(name: "next", scope: !6377, file: !3, line: 3855, type: !787)
!6381 = !DILocalVariable(name: "prev", scope: !6377, file: !3, line: 3856, type: !787)
!6382 = !DILocalVariable(name: "bb", scope: !6377, file: !3, line: 3857, type: !1160)
!6383 = !DILocalVariable(name: "sequence", scope: !6384, file: !3, line: 3867, type: !787)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 3866, column: 2)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3865, column: 11)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 3863, column: 5)
!6387 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 3862, column: 7)
!6388 = !DILocalVariable(name: "stack", scope: !6389, file: !3, line: 3875, type: !1825)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 3874, column: 5)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 3871, column: 12)
!6391 = !DILocalVariable(name: "stack", scope: !6392, file: !3, line: 3897, type: !1825)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 3896, column: 5)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 3893, column: 12)
!6394 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 3887, column: 7)
!6395 = !DILocation(line: 0, scope: !6377)
!6396 = !DILocation(line: 3855, column: 14, scope: !6377)
!6397 = !DILocation(line: 3856, column: 14, scope: !6377)
!6398 = !DILocation(line: 3860, column: 25, scope: !6377)
!6399 = !DILocation(line: 3860, column: 3, scope: !6377)
!6400 = !DILocation(line: 3862, column: 7, scope: !6387)
!6401 = !DILocation(line: 3862, column: 7, scope: !6377)
!6402 = !DILocation(line: 3864, column: 7, scope: !6386)
!6403 = !DILocation(line: 3864, column: 24, scope: !6386)
!6404 = !DILocation(line: 3865, column: 11, scope: !6385)
!6405 = !DILocation(line: 3865, column: 33, scope: !6385)
!6406 = !DILocation(line: 3865, column: 36, scope: !6385)
!6407 = !DILocation(line: 3865, column: 62, scope: !6385)
!6408 = !DILocation(line: 3865, column: 11, scope: !6386)
!6409 = !DILocation(line: 0, scope: !6384)
!6410 = !DILocation(line: 3868, column: 4, scope: !6384)
!6411 = !DILocation(line: 3868, column: 65, scope: !6384)
!6412 = !DILocation(line: 3869, column: 2, scope: !6384)
!6413 = !DILocation(line: 3871, column: 12, scope: !6390)
!6414 = !DILocation(line: 3871, column: 23, scope: !6390)
!6415 = !DILocation(line: 3871, column: 12, scope: !6387)
!6416 = !DILocation(line: 3872, column: 16, scope: !6390)
!6417 = !DILocation(line: 3872, column: 5, scope: !6390)
!6418 = !DILocation(line: 3877, column: 7, scope: !6389)
!6419 = !DILocation(line: 0, scope: !6389)
!6420 = !DILocation(line: 3877, column: 7, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3877, column: 7)
!6422 = !DILocation(line: 3878, column: 21, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 3878, column: 6)
!6424 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 3877, column: 7)
!6425 = !DILocation(line: 3878, column: 11, scope: !6423)
!6426 = !DILocation(line: 3878, column: 6, scope: !6424)
!6427 = !DILocation(line: 3880, column: 19, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 3879, column: 4)
!6429 = !DILocation(line: 3884, column: 7, scope: !6389)
!6430 = !DILocation(line: 3877, column: 36, scope: !6424)
!6431 = !DILocation(line: 3877, column: 7, scope: !6424)
!6432 = distinct !{!6432, !6420, !6433}
!6433 = !DILocation(line: 3882, column: 4, scope: !6421)
!6434 = !DILocation(line: 3887, column: 7, scope: !6394)
!6435 = !DILocation(line: 3887, column: 7, scope: !6377)
!6436 = !DILocation(line: 3889, column: 7, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 3888, column: 5)
!6438 = !DILocation(line: 3889, column: 24, scope: !6437)
!6439 = !DILocation(line: 3890, column: 11, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 3890, column: 11)
!6441 = !DILocation(line: 3890, column: 33, scope: !6440)
!6442 = !DILocation(line: 3890, column: 36, scope: !6440)
!6443 = !DILocation(line: 3890, column: 62, scope: !6440)
!6444 = !DILocation(line: 3890, column: 11, scope: !6437)
!6445 = !DILocation(line: 3891, column: 2, scope: !6440)
!6446 = !DILocation(line: 3891, column: 45, scope: !6440)
!6447 = !DILocation(line: 3893, column: 12, scope: !6393)
!6448 = !DILocation(line: 3893, column: 22, scope: !6393)
!6449 = !DILocation(line: 3893, column: 12, scope: !6394)
!6450 = !DILocation(line: 3894, column: 15, scope: !6393)
!6451 = !DILocation(line: 3894, column: 5, scope: !6393)
!6452 = !DILocation(line: 3899, column: 7, scope: !6392)
!6453 = !DILocation(line: 0, scope: !6392)
!6454 = !DILocation(line: 3899, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 3899, column: 7)
!6456 = !DILocation(line: 3900, column: 21, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 3900, column: 6)
!6458 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 3899, column: 7)
!6459 = !DILocation(line: 3900, column: 11, scope: !6457)
!6460 = !DILocation(line: 3900, column: 6, scope: !6458)
!6461 = !DILocation(line: 3902, column: 18, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 3901, column: 4)
!6463 = !DILocation(line: 3906, column: 7, scope: !6392)
!6464 = !DILocation(line: 3899, column: 36, scope: !6458)
!6465 = !DILocation(line: 3899, column: 7, scope: !6458)
!6466 = distinct !{!6466, !6454, !6467}
!6467 = !DILocation(line: 3904, column: 4, scope: !6455)
!6468 = !DILocation(line: 3908, column: 8, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 3908, column: 7)
!6470 = !DILocation(line: 3909, column: 7, scope: !6469)
!6471 = !DILocation(line: 3909, column: 16, scope: !6469)
!6472 = !DILocation(line: 3909, column: 14, scope: !6469)
!6473 = !DILocation(line: 3908, column: 7, scope: !6377)
!6474 = !DILocation(line: 3911, column: 11, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3911, column: 11)
!6476 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 3910, column: 5)
!6477 = !DILocation(line: 3911, column: 11, scope: !6476)
!6478 = !DILocation(line: 3912, column: 2, scope: !6475)
!6479 = !DILocation(line: 3913, column: 11, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3913, column: 11)
!6481 = !DILocation(line: 3913, column: 24, scope: !6480)
!6482 = !DILocation(line: 3913, column: 11, scope: !6476)
!6483 = !DILocation(line: 3917, column: 4, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 3914, column: 2)
!6485 = !DILocation(line: 3918, column: 4, scope: !6484)
!6486 = !DILocation(line: 3918, column: 17, scope: !6484)
!6487 = !DILocation(line: 3920, column: 11, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 3920, column: 11)
!6489 = !DILocation(line: 3919, column: 2, scope: !6484)
!6490 = !DILocation(line: 3920, column: 23, scope: !6488)
!6491 = !DILocation(line: 3920, column: 11, scope: !6476)
!6492 = !DILocation(line: 3921, column: 14, scope: !6488)
!6493 = !DILocation(line: 3921, column: 2, scope: !6488)
!6494 = !DILocation(line: 3923, column: 1, scope: !6377)
!6495 = distinct !DISubprogram(name: "add_function_usage_to", scope: !3, file: !3, line: 3928, type: !3249, scopeLine: 3929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6496)
!6496 = !{!6497, !6498, !6499}
!6497 = !DILocalVariable(name: "call_insn", arg: 1, scope: !6495, file: !3, line: 3928, type: !787)
!6498 = !DILocalVariable(name: "call_fusage", arg: 2, scope: !6495, file: !3, line: 3928, type: !787)
!6499 = !DILocalVariable(name: "link", scope: !6500, file: !3, line: 3936, type: !787)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3935, column: 5)
!6501 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 3934, column: 7)
!6502 = !DILocation(line: 0, scope: !6495)
!6503 = !DILocation(line: 3930, column: 3, scope: !6495)
!6504 = !DILocation(line: 3934, column: 7, scope: !6501)
!6505 = !DILocation(line: 3934, column: 7, scope: !6495)
!6506 = !DILocation(line: 3938, column: 12, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 3938, column: 7)
!6508 = !DILocation(line: 0, scope: !6507)
!6509 = !DILocation(line: 0, scope: !6500)
!6510 = !DILocation(line: 3938, column: 57, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 3938, column: 7)
!6512 = !DILocation(line: 3938, column: 72, scope: !6511)
!6513 = !DILocation(line: 3938, column: 7, scope: !6507)
!6514 = !DILocation(line: 3938, column: 7, scope: !6511)
!6515 = distinct !{!6515, !6513, !6516}
!6516 = !DILocation(line: 3940, column: 2, scope: !6507)
!6517 = !DILocation(line: 3942, column: 22, scope: !6500)
!6518 = !DILocation(line: 3943, column: 5, scope: !6500)
!6519 = !DILocation(line: 3945, column: 42, scope: !6501)
!6520 = !DILocation(line: 3946, column: 1, scope: !6495)
!6521 = distinct !DISubprogram(name: "delete_insns_since", scope: !3, file: !3, line: 3952, type: !3529, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6522)
!6522 = !{!6523}
!6523 = !DILocalVariable(name: "from", arg: 1, scope: !6521, file: !3, line: 3952, type: !787)
!6524 = !DILocation(line: 0, scope: !6521)
!6525 = !DILocation(line: 3954, column: 12, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 3954, column: 7)
!6527 = !DILocation(line: 3954, column: 7, scope: !6521)
!6528 = !DILocation(line: 3955, column: 16, scope: !6526)
!6529 = !DILocation(line: 3955, column: 5, scope: !6526)
!6530 = !DILocation(line: 3957, column: 5, scope: !6526)
!6531 = !DILocation(line: 3957, column: 22, scope: !6526)
!6532 = !DILocation(line: 3958, column: 13, scope: !6521)
!6533 = !DILocation(line: 3959, column: 1, scope: !6521)
!6534 = distinct !DISubprogram(name: "reorder_insns_nobb", scope: !3, file: !3, line: 3972, type: !6535, scopeLine: 3973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6537)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{null, !787, !787, !787}
!6537 = !{!6538, !6539, !6540}
!6538 = !DILocalVariable(name: "from", arg: 1, scope: !6534, file: !3, line: 3972, type: !787)
!6539 = !DILocalVariable(name: "to", arg: 2, scope: !6534, file: !3, line: 3972, type: !787)
!6540 = !DILocalVariable(name: "after", arg: 3, scope: !6534, file: !3, line: 3972, type: !787)
!6541 = !DILocation(line: 0, scope: !6534)
!6542 = !DILocation(line: 3975, column: 7, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3975, column: 7)
!6544 = !DILocation(line: 3975, column: 7, scope: !6534)
!6545 = !DILocation(line: 3976, column: 36, scope: !6543)
!6546 = !DILocation(line: 3976, column: 5, scope: !6543)
!6547 = !DILocation(line: 3976, column: 34, scope: !6543)
!6548 = !DILocation(line: 3977, column: 7, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3977, column: 7)
!6550 = !DILocation(line: 3977, column: 7, scope: !6534)
!6551 = !DILocation(line: 3978, column: 34, scope: !6549)
!6552 = !DILocation(line: 3978, column: 5, scope: !6549)
!6553 = !DILocation(line: 3978, column: 32, scope: !6549)
!6554 = !DILocation(line: 3979, column: 7, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3979, column: 7)
!6556 = !DILocation(line: 3979, column: 17, scope: !6555)
!6557 = !DILocation(line: 3979, column: 7, scope: !6534)
!6558 = !DILocation(line: 3980, column: 17, scope: !6555)
!6559 = !DILocation(line: 3980, column: 15, scope: !6555)
!6560 = !DILocation(line: 3980, column: 5, scope: !6555)
!6561 = !DILocation(line: 3981, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3981, column: 7)
!6563 = !DILocation(line: 3981, column: 18, scope: !6562)
!6564 = !DILocation(line: 3981, column: 7, scope: !6534)
!6565 = !DILocation(line: 3982, column: 18, scope: !6562)
!6566 = !DILocation(line: 3982, column: 16, scope: !6562)
!6567 = !DILocation(line: 3982, column: 5, scope: !6562)
!6568 = !DILocation(line: 3985, column: 7, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3985, column: 7)
!6570 = !DILocation(line: 3985, column: 7, scope: !6534)
!6571 = !DILocation(line: 3986, column: 5, scope: !6569)
!6572 = !DILocation(line: 3986, column: 35, scope: !6569)
!6573 = !DILocation(line: 3988, column: 20, scope: !6534)
!6574 = !DILocation(line: 3988, column: 18, scope: !6534)
!6575 = !DILocation(line: 3989, column: 20, scope: !6534)
!6576 = !DILocation(line: 3990, column: 21, scope: !6534)
!6577 = !DILocation(line: 3991, column: 16, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3991, column: 7)
!6579 = !DILocation(line: 3991, column: 13, scope: !6578)
!6580 = !DILocation(line: 3991, column: 7, scope: !6534)
!6581 = !DILocation(line: 3992, column: 15, scope: !6578)
!6582 = !DILocation(line: 3992, column: 5, scope: !6578)
!6583 = !DILocation(line: 3993, column: 1, scope: !6534)
!6584 = distinct !DISubprogram(name: "reorder_insns", scope: !3, file: !3, line: 3997, type: !6535, scopeLine: 3998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6585)
!6585 = !{!6586, !6587, !6588, !6589, !6590, !6591, !6592}
!6586 = !DILocalVariable(name: "from", arg: 1, scope: !6584, file: !3, line: 3997, type: !787)
!6587 = !DILocalVariable(name: "to", arg: 2, scope: !6584, file: !3, line: 3997, type: !787)
!6588 = !DILocalVariable(name: "after", arg: 3, scope: !6584, file: !3, line: 3997, type: !787)
!6589 = !DILocalVariable(name: "prev", scope: !6584, file: !3, line: 3999, type: !787)
!6590 = !DILocalVariable(name: "bb", scope: !6584, file: !3, line: 4000, type: !1160)
!6591 = !DILocalVariable(name: "bb2", scope: !6584, file: !3, line: 4000, type: !1160)
!6592 = !DILocalVariable(name: "x", scope: !6593, file: !3, line: 4007, type: !787)
!6593 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 4006, column: 5)
!6594 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4004, column: 7)
!6595 = !DILocation(line: 0, scope: !6584)
!6596 = !DILocation(line: 3999, column: 14, scope: !6584)
!6597 = !DILocation(line: 4002, column: 3, scope: !6584)
!6598 = !DILocation(line: 4004, column: 8, scope: !6594)
!6599 = !DILocation(line: 4005, column: 7, scope: !6594)
!6600 = !DILocation(line: 4005, column: 16, scope: !6594)
!6601 = !DILocation(line: 4005, column: 14, scope: !6594)
!6602 = !DILocation(line: 4004, column: 7, scope: !6584)
!6603 = !DILocation(line: 4008, column: 7, scope: !6593)
!6604 = !DILocation(line: 4010, column: 12, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 4010, column: 11)
!6606 = !DILocation(line: 4011, column: 4, scope: !6605)
!6607 = !DILocation(line: 4011, column: 14, scope: !6605)
!6608 = !DILocation(line: 4011, column: 12, scope: !6605)
!6609 = !DILocation(line: 4010, column: 11, scope: !6593)
!6610 = !DILocation(line: 4013, column: 8, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 4013, column: 8)
!6612 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 4012, column: 2)
!6613 = !DILocation(line: 4013, column: 21, scope: !6611)
!6614 = !DILocation(line: 4013, column: 8, scope: !6612)
!6615 = !DILocation(line: 4014, column: 19, scope: !6611)
!6616 = !DILocation(line: 4014, column: 6, scope: !6611)
!6617 = !DILocation(line: 4015, column: 4, scope: !6612)
!6618 = !DILocation(line: 4016, column: 2, scope: !6612)
!6619 = !DILocation(line: 4018, column: 11, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 4018, column: 11)
!6621 = !DILocation(line: 4018, column: 23, scope: !6620)
!6622 = !DILocation(line: 4018, column: 11, scope: !6593)
!6623 = !DILocation(line: 4019, column: 14, scope: !6620)
!6624 = !DILocation(line: 4019, column: 2, scope: !6620)
!6625 = !DILocation(line: 0, scope: !6593)
!6626 = !DILocation(line: 0, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 4021, column: 7)
!6628 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 4021, column: 7)
!6629 = !DILocation(line: 4021, column: 12, scope: !6628)
!6630 = !DILocation(line: 0, scope: !6628)
!6631 = !DILocation(line: 4021, column: 27, scope: !6627)
!6632 = !DILocation(line: 4021, column: 24, scope: !6627)
!6633 = !DILocation(line: 4021, column: 7, scope: !6628)
!6634 = !DILocation(line: 4022, column: 7, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 4022, column: 6)
!6636 = !DILocation(line: 4022, column: 6, scope: !6627)
!6637 = !DILocation(line: 4023, column: 4, scope: !6635)
!6638 = !DILocation(line: 4021, column: 47, scope: !6627)
!6639 = !DILocation(line: 4021, column: 7, scope: !6627)
!6640 = distinct !{!6640, !6633, !6641}
!6641 = !DILocation(line: 4023, column: 28, scope: !6628)
!6642 = !DILocation(line: 4025, column: 1, scope: !6584)
!6643 = distinct !DISubprogram(name: "emit_insn_before_noloc", scope: !3, file: !3, line: 4056, type: !6644, scopeLine: 4057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6646)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!787, !787, !787, !1160}
!6646 = !{!6647, !6648, !6649, !6650, !6651, !6652}
!6647 = !DILocalVariable(name: "x", arg: 1, scope: !6643, file: !3, line: 4056, type: !787)
!6648 = !DILocalVariable(name: "before", arg: 2, scope: !6643, file: !3, line: 4056, type: !787)
!6649 = !DILocalVariable(name: "bb", arg: 3, scope: !6643, file: !3, line: 4056, type: !1160)
!6650 = !DILocalVariable(name: "last", scope: !6643, file: !3, line: 4058, type: !787)
!6651 = !DILocalVariable(name: "insn", scope: !6643, file: !3, line: 4059, type: !787)
!6652 = !DILocalVariable(name: "next", scope: !6653, file: !3, line: 4078, type: !787)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 4077, column: 2)
!6654 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 4067, column: 5)
!6655 = !DILocation(line: 0, scope: !6643)
!6656 = !DILocation(line: 4061, column: 3, scope: !6643)
!6657 = !DILocation(line: 4063, column: 9, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 4063, column: 7)
!6659 = !DILocation(line: 4063, column: 7, scope: !6643)
!6660 = !DILocation(line: 4066, column: 11, scope: !6643)
!6661 = !DILocation(line: 4066, column: 3, scope: !6643)
!6662 = !DILocation(line: 4076, column: 7, scope: !6654)
!6663 = !DILocation(line: 0, scope: !6654)
!6664 = !DILocation(line: 4078, column: 15, scope: !6653)
!6665 = !DILocation(line: 0, scope: !6653)
!6666 = !DILocation(line: 4079, column: 4, scope: !6653)
!6667 = distinct !{!6667, !6662, !6668}
!6668 = !DILocation(line: 4082, column: 2, scope: !6654)
!6669 = !DILocation(line: 4092, column: 14, scope: !6654)
!6670 = !DILocation(line: 4093, column: 7, scope: !6654)
!6671 = !DILocation(line: 4094, column: 7, scope: !6654)
!6672 = !DILocation(line: 4098, column: 1, scope: !6643)
!6673 = distinct !DISubprogram(name: "emit_jump_insn_before_noloc", scope: !3, file: !3, line: 4104, type: !3878, scopeLine: 4105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6674)
!6674 = !{!6675, !6676, !6677, !6678, !6679}
!6675 = !DILocalVariable(name: "x", arg: 1, scope: !6673, file: !3, line: 4104, type: !787)
!6676 = !DILocalVariable(name: "before", arg: 2, scope: !6673, file: !3, line: 4104, type: !787)
!6677 = !DILocalVariable(name: "insn", scope: !6673, file: !3, line: 4106, type: !787)
!6678 = !DILocalVariable(name: "last", scope: !6673, file: !3, line: 4106, type: !787)
!6679 = !DILocalVariable(name: "next", scope: !6680, file: !3, line: 4122, type: !787)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 4121, column: 2)
!6681 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 4111, column: 5)
!6682 = !DILocation(line: 0, scope: !6673)
!6683 = !DILocation(line: 4108, column: 3, scope: !6673)
!6684 = !DILocation(line: 4110, column: 11, scope: !6673)
!6685 = !DILocation(line: 4110, column: 3, scope: !6673)
!6686 = !DILocation(line: 4120, column: 7, scope: !6681)
!6687 = !DILocation(line: 0, scope: !6681)
!6688 = !DILocation(line: 4122, column: 15, scope: !6680)
!6689 = !DILocation(line: 0, scope: !6680)
!6690 = !DILocation(line: 4123, column: 4, scope: !6680)
!6691 = distinct !{!6691, !6686, !6692}
!6692 = !DILocation(line: 4126, column: 2, scope: !6681)
!6693 = !DILocation(line: 4136, column: 14, scope: !6681)
!6694 = !DILocation(line: 4137, column: 7, scope: !6681)
!6695 = !DILocation(line: 4138, column: 7, scope: !6681)
!6696 = !DILocation(line: 4141, column: 3, scope: !6673)
!6697 = distinct !DISubprogram(name: "emit_call_insn_before_noloc", scope: !3, file: !3, line: 4148, type: !3878, scopeLine: 4149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6698)
!6698 = !{!6699, !6700, !6701, !6702, !6703}
!6699 = !DILocalVariable(name: "x", arg: 1, scope: !6697, file: !3, line: 4148, type: !787)
!6700 = !DILocalVariable(name: "before", arg: 2, scope: !6697, file: !3, line: 4148, type: !787)
!6701 = !DILocalVariable(name: "last", scope: !6697, file: !3, line: 4150, type: !787)
!6702 = !DILocalVariable(name: "insn", scope: !6697, file: !3, line: 4150, type: !787)
!6703 = !DILocalVariable(name: "next", scope: !6704, file: !3, line: 4166, type: !787)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 4165, column: 2)
!6705 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 4155, column: 5)
!6706 = !DILocation(line: 0, scope: !6697)
!6707 = !DILocation(line: 4152, column: 3, scope: !6697)
!6708 = !DILocation(line: 4154, column: 11, scope: !6697)
!6709 = !DILocation(line: 4154, column: 3, scope: !6697)
!6710 = !DILocation(line: 4164, column: 7, scope: !6705)
!6711 = !DILocation(line: 0, scope: !6705)
!6712 = !DILocation(line: 4166, column: 15, scope: !6704)
!6713 = !DILocation(line: 0, scope: !6704)
!6714 = !DILocation(line: 4167, column: 4, scope: !6704)
!6715 = distinct !{!6715, !6710, !6716}
!6716 = !DILocation(line: 4170, column: 2, scope: !6705)
!6717 = !DILocation(line: 4180, column: 14, scope: !6705)
!6718 = !DILocation(line: 4181, column: 7, scope: !6705)
!6719 = !DILocation(line: 4182, column: 7, scope: !6705)
!6720 = !DILocation(line: 4185, column: 3, scope: !6697)
!6721 = distinct !DISubprogram(name: "make_call_insn_raw", scope: !3, file: !3, line: 3678, type: !2687, scopeLine: 3679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6722)
!6722 = !{!6723, !6724}
!6723 = !DILocalVariable(name: "pattern", arg: 1, scope: !6721, file: !3, line: 3678, type: !787)
!6724 = !DILocalVariable(name: "insn", scope: !6721, file: !3, line: 3680, type: !787)
!6725 = !DILocation(line: 0, scope: !6721)
!6726 = !DILocation(line: 3682, column: 10, scope: !6721)
!6727 = !DILocation(line: 3683, column: 33, scope: !6721)
!6728 = !DILocation(line: 3683, column: 3, scope: !6721)
!6729 = !DILocation(line: 3683, column: 19, scope: !6721)
!6730 = !DILocation(line: 3685, column: 3, scope: !6721)
!6731 = !DILocation(line: 3685, column: 18, scope: !6721)
!6732 = !DILocation(line: 3686, column: 3, scope: !6721)
!6733 = !DILocation(line: 3686, column: 20, scope: !6721)
!6734 = !DILocation(line: 3687, column: 3, scope: !6721)
!6735 = !DILocation(line: 3687, column: 20, scope: !6721)
!6736 = !DILocation(line: 3688, column: 3, scope: !6721)
!6737 = !DILocation(line: 3688, column: 35, scope: !6721)
!6738 = !DILocation(line: 3689, column: 25, scope: !6721)
!6739 = !DILocation(line: 3689, column: 3, scope: !6721)
!6740 = !DILocation(line: 3689, column: 23, scope: !6721)
!6741 = !DILocation(line: 3690, column: 3, scope: !6721)
!6742 = !DILocation(line: 3690, column: 25, scope: !6721)
!6743 = !DILocation(line: 3692, column: 3, scope: !6721)
!6744 = distinct !DISubprogram(name: "emit_debug_insn_before_noloc", scope: !3, file: !3, line: 4192, type: !3878, scopeLine: 4193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6745)
!6745 = !{!6746, !6747, !6748, !6749, !6750}
!6746 = !DILocalVariable(name: "x", arg: 1, scope: !6744, file: !3, line: 4192, type: !787)
!6747 = !DILocalVariable(name: "before", arg: 2, scope: !6744, file: !3, line: 4192, type: !787)
!6748 = !DILocalVariable(name: "last", scope: !6744, file: !3, line: 4194, type: !787)
!6749 = !DILocalVariable(name: "insn", scope: !6744, file: !3, line: 4194, type: !787)
!6750 = !DILocalVariable(name: "next", scope: !6751, file: !3, line: 4210, type: !787)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 4209, column: 2)
!6752 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 4199, column: 5)
!6753 = !DILocation(line: 0, scope: !6744)
!6754 = !DILocation(line: 4196, column: 3, scope: !6744)
!6755 = !DILocation(line: 4198, column: 11, scope: !6744)
!6756 = !DILocation(line: 4198, column: 3, scope: !6744)
!6757 = !DILocation(line: 4208, column: 7, scope: !6752)
!6758 = !DILocation(line: 0, scope: !6752)
!6759 = !DILocation(line: 4210, column: 15, scope: !6751)
!6760 = !DILocation(line: 0, scope: !6751)
!6761 = !DILocation(line: 4211, column: 4, scope: !6751)
!6762 = distinct !{!6762, !6757, !6763}
!6763 = !DILocation(line: 4214, column: 2, scope: !6752)
!6764 = !DILocation(line: 4224, column: 14, scope: !6752)
!6765 = !DILocation(line: 4225, column: 7, scope: !6752)
!6766 = !DILocation(line: 4226, column: 7, scope: !6752)
!6767 = !DILocation(line: 4229, column: 3, scope: !6744)
!6768 = distinct !DISubprogram(name: "emit_barrier_before", scope: !3, file: !3, line: 4236, type: !2687, scopeLine: 4237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6769)
!6769 = !{!6770, !6771}
!6770 = !DILocalVariable(name: "before", arg: 1, scope: !6768, file: !3, line: 4236, type: !787)
!6771 = !DILocalVariable(name: "insn", scope: !6768, file: !3, line: 4238, type: !787)
!6772 = !DILocation(line: 0, scope: !6768)
!6773 = !DILocation(line: 4238, column: 14, scope: !6768)
!6774 = !DILocation(line: 4240, column: 33, scope: !6768)
!6775 = !DILocation(line: 4240, column: 3, scope: !6768)
!6776 = !DILocation(line: 4240, column: 19, scope: !6768)
!6777 = !DILocation(line: 4242, column: 3, scope: !6768)
!6778 = !DILocation(line: 4243, column: 3, scope: !6768)
!6779 = distinct !DISubprogram(name: "emit_label_before", scope: !3, file: !3, line: 4249, type: !3878, scopeLine: 4250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6780)
!6780 = !{!6781, !6782}
!6781 = !DILocalVariable(name: "label", arg: 1, scope: !6779, file: !3, line: 4249, type: !787)
!6782 = !DILocalVariable(name: "before", arg: 2, scope: !6779, file: !3, line: 4249, type: !787)
!6783 = !DILocation(line: 0, scope: !6779)
!6784 = !DILocation(line: 4253, column: 7, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 4253, column: 7)
!6786 = !DILocation(line: 4253, column: 24, scope: !6785)
!6787 = !DILocation(line: 4253, column: 7, scope: !6779)
!6788 = !DILocation(line: 4255, column: 38, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 4254, column: 5)
!6790 = !DILocation(line: 4255, column: 24, scope: !6789)
!6791 = !DILocation(line: 4256, column: 7, scope: !6789)
!6792 = !DILocation(line: 4257, column: 5, scope: !6789)
!6793 = !DILocation(line: 4259, column: 3, scope: !6779)
!6794 = distinct !DISubprogram(name: "emit_note_before", scope: !3, file: !3, line: 4265, type: !6795, scopeLine: 4266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6797)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{!787, !759, !787}
!6797 = !{!6798, !6799, !6800}
!6798 = !DILocalVariable(name: "subtype", arg: 1, scope: !6794, file: !3, line: 4265, type: !759)
!6799 = !DILocalVariable(name: "before", arg: 2, scope: !6794, file: !3, line: 4265, type: !787)
!6800 = !DILocalVariable(name: "note", scope: !6794, file: !3, line: 4267, type: !787)
!6801 = !DILocation(line: 0, scope: !6794)
!6802 = !DILocation(line: 4267, column: 14, scope: !6794)
!6803 = !DILocation(line: 4268, column: 33, scope: !6794)
!6804 = !DILocation(line: 4268, column: 3, scope: !6794)
!6805 = !DILocation(line: 4268, column: 19, scope: !6794)
!6806 = !DILocation(line: 4269, column: 3, scope: !6794)
!6807 = !DILocation(line: 4269, column: 20, scope: !6794)
!6808 = !DILocation(line: 4270, column: 3, scope: !6794)
!6809 = !DILocation(line: 4270, column: 25, scope: !6794)
!6810 = !DILocation(line: 4271, column: 12, scope: !6794)
!6811 = !DILocation(line: 4271, column: 11, scope: !6794)
!6812 = !DILocation(line: 4271, column: 3, scope: !6794)
!6813 = !DILocation(line: 4273, column: 3, scope: !6794)
!6814 = !DILocation(line: 4274, column: 3, scope: !6794)
!6815 = distinct !DISubprogram(name: "emit_insn_after_noloc", scope: !3, file: !3, line: 4327, type: !6644, scopeLine: 4328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6816)
!6816 = !{!6817, !6818, !6819, !6820}
!6817 = !DILocalVariable(name: "x", arg: 1, scope: !6815, file: !3, line: 4327, type: !787)
!6818 = !DILocalVariable(name: "after", arg: 2, scope: !6815, file: !3, line: 4327, type: !787)
!6819 = !DILocalVariable(name: "bb", arg: 3, scope: !6815, file: !3, line: 4327, type: !1160)
!6820 = !DILocalVariable(name: "last", scope: !6815, file: !3, line: 4329, type: !787)
!6821 = !DILocation(line: 0, scope: !6815)
!6822 = !DILocation(line: 4331, column: 3, scope: !6815)
!6823 = !DILocation(line: 4333, column: 9, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 4333, column: 7)
!6825 = !DILocation(line: 4333, column: 7, scope: !6815)
!6826 = !DILocation(line: 4336, column: 11, scope: !6815)
!6827 = !DILocation(line: 4336, column: 3, scope: !6815)
!6828 = !DILocation(line: 4345, column: 14, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 4337, column: 5)
!6830 = !DILocation(line: 4346, column: 7, scope: !6829)
!6831 = !DILocation(line: 4355, column: 14, scope: !6829)
!6832 = !DILocation(line: 4356, column: 7, scope: !6829)
!6833 = !DILocation(line: 4357, column: 7, scope: !6829)
!6834 = !DILocation(line: 4361, column: 1, scope: !6815)
!6835 = distinct !DISubprogram(name: "emit_insn_after_1", scope: !3, file: !3, line: 4281, type: !6644, scopeLine: 4282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6836)
!6836 = !{!6837, !6838, !6839, !6840, !6841}
!6837 = !DILocalVariable(name: "first", arg: 1, scope: !6835, file: !3, line: 4281, type: !787)
!6838 = !DILocalVariable(name: "after", arg: 2, scope: !6835, file: !3, line: 4281, type: !787)
!6839 = !DILocalVariable(name: "bb", arg: 3, scope: !6835, file: !3, line: 4281, type: !1160)
!6840 = !DILocalVariable(name: "last", scope: !6835, file: !3, line: 4283, type: !787)
!6841 = !DILocalVariable(name: "after_after", scope: !6835, file: !3, line: 4284, type: !787)
!6842 = !DILocation(line: 0, scope: !6835)
!6843 = !DILocation(line: 4285, column: 8, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4285, column: 7)
!6845 = !DILocation(line: 4285, column: 11, scope: !6844)
!6846 = !DILocation(line: 4285, column: 15, scope: !6844)
!6847 = !DILocation(line: 4285, column: 7, scope: !6835)
!6848 = !DILocation(line: 4286, column: 10, scope: !6844)
!6849 = !DILocation(line: 4286, column: 5, scope: !6844)
!6850 = !DILocation(line: 4288, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4288, column: 7)
!6852 = !DILocation(line: 4288, column: 7, scope: !6835)
!6853 = !DILocation(line: 4306, column: 5, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 4306, column: 5)
!6855 = !DILocation(line: 4290, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 4289, column: 5)
!6857 = !DILocation(line: 4291, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 4291, column: 7)
!6859 = !DILocation(line: 0, scope: !6858)
!6860 = !DILocation(line: 4291, column: 26, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 4291, column: 7)
!6862 = !DILocation(line: 4291, column: 7, scope: !6858)
!6863 = !DILocation(line: 0, scope: !6856)
!6864 = !DILocation(line: 4292, column: 6, scope: !6861)
!6865 = !DILocation(line: 4294, column: 6, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 4293, column: 4)
!6867 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 4292, column: 6)
!6868 = !DILocation(line: 4295, column: 6, scope: !6866)
!6869 = !DILocation(line: 4291, column: 51, scope: !6861)
!6870 = !DILocation(line: 4296, column: 4, scope: !6866)
!6871 = !DILocation(line: 4291, column: 7, scope: !6861)
!6872 = distinct !{!6872, !6862, !6873}
!6873 = !DILocation(line: 4296, column: 4, scope: !6858)
!6874 = !DILocation(line: 4297, column: 11, scope: !6856)
!6875 = !DILocation(line: 4299, column: 4, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 4298, column: 2)
!6877 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 4297, column: 11)
!6878 = !DILocation(line: 4300, column: 4, scope: !6876)
!6879 = !DILocation(line: 4301, column: 2, scope: !6876)
!6880 = !DILocation(line: 4302, column: 11, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 4302, column: 11)
!6882 = !DILocation(line: 4302, column: 23, scope: !6881)
!6883 = !DILocation(line: 4302, column: 11, scope: !6856)
!6884 = !DILocation(line: 4303, column: 14, scope: !6881)
!6885 = !DILocation(line: 4303, column: 2, scope: !6881)
!6886 = !DILocation(line: 0, scope: !6854)
!6887 = !DILocation(line: 4306, column: 24, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 4306, column: 5)
!6889 = !DILocation(line: 4306, column: 5, scope: !6888)
!6890 = distinct !{!6890, !6853, !6891}
!6891 = !DILocation(line: 4307, column: 7, scope: !6854)
!6892 = !DILocation(line: 4309, column: 17, scope: !6835)
!6893 = !DILocation(line: 4313, column: 3, scope: !6835)
!6894 = !DILocation(line: 0, scope: !6851)
!6895 = !DILocation(line: 4311, column: 21, scope: !6835)
!6896 = !DILocation(line: 4312, column: 3, scope: !6835)
!6897 = !DILocation(line: 4312, column: 21, scope: !6835)
!6898 = !DILocation(line: 4313, column: 20, scope: !6835)
!6899 = !DILocation(line: 4314, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4314, column: 7)
!6901 = !DILocation(line: 4314, column: 7, scope: !6835)
!6902 = !DILocation(line: 4315, column: 5, scope: !6900)
!6903 = !DILocation(line: 4315, column: 29, scope: !6900)
!6904 = !DILocation(line: 4317, column: 16, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4317, column: 7)
!6906 = !DILocation(line: 4317, column: 13, scope: !6905)
!6907 = !DILocation(line: 4317, column: 7, scope: !6835)
!6908 = !DILocation(line: 4318, column: 15, scope: !6905)
!6909 = !DILocation(line: 4318, column: 5, scope: !6905)
!6910 = !DILocation(line: 4320, column: 3, scope: !6835)
!6911 = distinct !DISubprogram(name: "emit_jump_insn_after_noloc", scope: !3, file: !3, line: 4368, type: !3878, scopeLine: 4369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6912)
!6912 = !{!6913, !6914, !6915}
!6913 = !DILocalVariable(name: "x", arg: 1, scope: !6911, file: !3, line: 4368, type: !787)
!6914 = !DILocalVariable(name: "after", arg: 2, scope: !6911, file: !3, line: 4368, type: !787)
!6915 = !DILocalVariable(name: "last", scope: !6911, file: !3, line: 4370, type: !787)
!6916 = !DILocation(line: 0, scope: !6911)
!6917 = !DILocation(line: 4372, column: 3, scope: !6911)
!6918 = !DILocation(line: 4374, column: 11, scope: !6911)
!6919 = !DILocation(line: 4374, column: 3, scope: !6911)
!6920 = !DILocation(line: 4383, column: 14, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 4375, column: 5)
!6922 = !DILocation(line: 4384, column: 7, scope: !6921)
!6923 = !DILocation(line: 4393, column: 14, scope: !6921)
!6924 = !DILocation(line: 4394, column: 7, scope: !6921)
!6925 = !DILocation(line: 4395, column: 7, scope: !6921)
!6926 = !DILocation(line: 0, scope: !6921)
!6927 = !DILocation(line: 4398, column: 3, scope: !6911)
!6928 = distinct !DISubprogram(name: "emit_call_insn_after_noloc", scope: !3, file: !3, line: 4405, type: !3878, scopeLine: 4406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DILocalVariable(name: "x", arg: 1, scope: !6928, file: !3, line: 4405, type: !787)
!6931 = !DILocalVariable(name: "after", arg: 2, scope: !6928, file: !3, line: 4405, type: !787)
!6932 = !DILocalVariable(name: "last", scope: !6928, file: !3, line: 4407, type: !787)
!6933 = !DILocation(line: 0, scope: !6928)
!6934 = !DILocation(line: 4409, column: 3, scope: !6928)
!6935 = !DILocation(line: 4411, column: 11, scope: !6928)
!6936 = !DILocation(line: 4411, column: 3, scope: !6928)
!6937 = !DILocation(line: 4420, column: 14, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 4412, column: 5)
!6939 = !DILocation(line: 4421, column: 7, scope: !6938)
!6940 = !DILocation(line: 4430, column: 14, scope: !6938)
!6941 = !DILocation(line: 4431, column: 7, scope: !6938)
!6942 = !DILocation(line: 4432, column: 7, scope: !6938)
!6943 = !DILocation(line: 0, scope: !6938)
!6944 = !DILocation(line: 4435, column: 3, scope: !6928)
!6945 = distinct !DISubprogram(name: "emit_debug_insn_after_noloc", scope: !3, file: !3, line: 4442, type: !3878, scopeLine: 4443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6946)
!6946 = !{!6947, !6948, !6949}
!6947 = !DILocalVariable(name: "x", arg: 1, scope: !6945, file: !3, line: 4442, type: !787)
!6948 = !DILocalVariable(name: "after", arg: 2, scope: !6945, file: !3, line: 4442, type: !787)
!6949 = !DILocalVariable(name: "last", scope: !6945, file: !3, line: 4444, type: !787)
!6950 = !DILocation(line: 0, scope: !6945)
!6951 = !DILocation(line: 4446, column: 3, scope: !6945)
!6952 = !DILocation(line: 4448, column: 11, scope: !6945)
!6953 = !DILocation(line: 4448, column: 3, scope: !6945)
!6954 = !DILocation(line: 4457, column: 14, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 4449, column: 5)
!6956 = !DILocation(line: 4458, column: 7, scope: !6955)
!6957 = !DILocation(line: 4467, column: 14, scope: !6955)
!6958 = !DILocation(line: 4468, column: 7, scope: !6955)
!6959 = !DILocation(line: 4469, column: 7, scope: !6955)
!6960 = !DILocation(line: 0, scope: !6955)
!6961 = !DILocation(line: 4472, column: 3, scope: !6945)
!6962 = distinct !DISubprogram(name: "emit_label_after", scope: !3, file: !3, line: 4492, type: !3878, scopeLine: 4493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6963)
!6963 = !{!6964, !6965}
!6964 = !DILocalVariable(name: "label", arg: 1, scope: !6962, file: !3, line: 4492, type: !787)
!6965 = !DILocalVariable(name: "after", arg: 2, scope: !6962, file: !3, line: 4492, type: !787)
!6966 = !DILocation(line: 0, scope: !6962)
!6967 = !DILocation(line: 4497, column: 7, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 4497, column: 7)
!6969 = !DILocation(line: 4497, column: 24, scope: !6968)
!6970 = !DILocation(line: 4497, column: 7, scope: !6962)
!6971 = !DILocation(line: 4499, column: 38, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 4498, column: 5)
!6973 = !DILocation(line: 4499, column: 24, scope: !6972)
!6974 = !DILocation(line: 4500, column: 7, scope: !6972)
!6975 = !DILocation(line: 4501, column: 5, scope: !6972)
!6976 = !DILocation(line: 4503, column: 3, scope: !6962)
!6977 = distinct !DISubprogram(name: "emit_note_after", scope: !3, file: !3, line: 4509, type: !6795, scopeLine: 4510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6978)
!6978 = !{!6979, !6980, !6981}
!6979 = !DILocalVariable(name: "subtype", arg: 1, scope: !6977, file: !3, line: 4509, type: !759)
!6980 = !DILocalVariable(name: "after", arg: 2, scope: !6977, file: !3, line: 4509, type: !787)
!6981 = !DILocalVariable(name: "note", scope: !6977, file: !3, line: 4511, type: !787)
!6982 = !DILocation(line: 0, scope: !6977)
!6983 = !DILocation(line: 4511, column: 14, scope: !6977)
!6984 = !DILocation(line: 4512, column: 33, scope: !6977)
!6985 = !DILocation(line: 4512, column: 3, scope: !6977)
!6986 = !DILocation(line: 4512, column: 19, scope: !6977)
!6987 = !DILocation(line: 4513, column: 3, scope: !6977)
!6988 = !DILocation(line: 4513, column: 20, scope: !6977)
!6989 = !DILocation(line: 4514, column: 3, scope: !6977)
!6990 = !DILocation(line: 4514, column: 25, scope: !6977)
!6991 = !DILocation(line: 4515, column: 12, scope: !6977)
!6992 = !DILocation(line: 4515, column: 11, scope: !6977)
!6993 = !DILocation(line: 4515, column: 3, scope: !6977)
!6994 = !DILocation(line: 4516, column: 3, scope: !6977)
!6995 = !DILocation(line: 4517, column: 3, scope: !6977)
!6996 = distinct !DISubprogram(name: "emit_insn_after", scope: !3, file: !3, line: 4543, type: !3878, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6997)
!6997 = !{!6998, !6999, !7000}
!6998 = !DILocalVariable(name: "pattern", arg: 1, scope: !6996, file: !3, line: 4543, type: !787)
!6999 = !DILocalVariable(name: "after", arg: 2, scope: !6996, file: !3, line: 4543, type: !787)
!7000 = !DILocalVariable(name: "prev", scope: !6996, file: !3, line: 4545, type: !787)
!7001 = !DILocation(line: 0, scope: !6996)
!7002 = !DILocation(line: 4547, column: 3, scope: !6996)
!7003 = !DILocation(line: 4547, column: 10, scope: !6996)
!7004 = !DILocation(line: 4548, column: 12, scope: !6996)
!7005 = distinct !{!7005, !7002, !7004}
!7006 = !DILocation(line: 4550, column: 7, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4550, column: 7)
!7008 = !DILocation(line: 4550, column: 7, scope: !6996)
!7009 = !DILocation(line: 4551, column: 52, scope: !7007)
!7010 = !DILocation(line: 4551, column: 12, scope: !7007)
!7011 = !DILocation(line: 4551, column: 5, scope: !7007)
!7012 = !DILocation(line: 4553, column: 12, scope: !7007)
!7013 = !DILocation(line: 4553, column: 5, scope: !7007)
!7014 = !DILocation(line: 0, scope: !7007)
!7015 = !DILocation(line: 4554, column: 1, scope: !6996)
!7016 = distinct !DISubprogram(name: "emit_jump_insn_after_setloc", scope: !3, file: !3, line: 4558, type: !5788, scopeLine: 4559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7017)
!7017 = !{!7018, !7019, !7020, !7021}
!7018 = !DILocalVariable(name: "pattern", arg: 1, scope: !7016, file: !3, line: 4558, type: !787)
!7019 = !DILocalVariable(name: "after", arg: 2, scope: !7016, file: !3, line: 4558, type: !787)
!7020 = !DILocalVariable(name: "loc", arg: 3, scope: !7016, file: !3, line: 4558, type: !778)
!7021 = !DILocalVariable(name: "last", scope: !7016, file: !3, line: 4560, type: !787)
!7022 = !DILocation(line: 0, scope: !7016)
!7023 = !DILocation(line: 4560, column: 14, scope: !7016)
!7024 = !DILocation(line: 4562, column: 15, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 4562, column: 7)
!7026 = !DILocation(line: 4562, column: 31, scope: !7025)
!7027 = !DILocation(line: 4562, column: 27, scope: !7025)
!7028 = !DILocation(line: 4566, column: 3, scope: !7016)
!7029 = !DILocation(line: 4568, column: 11, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4568, column: 11)
!7031 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 4567, column: 5)
!7032 = !DILocation(line: 4568, column: 33, scope: !7030)
!7033 = !DILocation(line: 4568, column: 37, scope: !7030)
!7034 = !DILocation(line: 4568, column: 11, scope: !7031)
!7035 = !DILocation(line: 4569, column: 23, scope: !7030)
!7036 = !DILocation(line: 4569, column: 2, scope: !7030)
!7037 = !DILocation(line: 4570, column: 17, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4570, column: 11)
!7039 = !DILocation(line: 4570, column: 11, scope: !7031)
!7040 = distinct !{!7040, !7028, !7041}
!7041 = !DILocation(line: 4573, column: 5, scope: !7016)
!7042 = !DILocation(line: 4575, column: 1, scope: !7016)
!7043 = distinct !DISubprogram(name: "emit_jump_insn_after", scope: !3, file: !3, line: 4579, type: !3878, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7044)
!7044 = !{!7045, !7046, !7047}
!7045 = !DILocalVariable(name: "pattern", arg: 1, scope: !7043, file: !3, line: 4579, type: !787)
!7046 = !DILocalVariable(name: "after", arg: 2, scope: !7043, file: !3, line: 4579, type: !787)
!7047 = !DILocalVariable(name: "prev", scope: !7043, file: !3, line: 4581, type: !787)
!7048 = !DILocation(line: 0, scope: !7043)
!7049 = !DILocation(line: 4583, column: 3, scope: !7043)
!7050 = !DILocation(line: 4583, column: 10, scope: !7043)
!7051 = !DILocation(line: 4584, column: 12, scope: !7043)
!7052 = distinct !{!7052, !7049, !7051}
!7053 = !DILocation(line: 4586, column: 7, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4586, column: 7)
!7055 = !DILocation(line: 4586, column: 7, scope: !7043)
!7056 = !DILocation(line: 4587, column: 57, scope: !7054)
!7057 = !DILocation(line: 4587, column: 12, scope: !7054)
!7058 = !DILocation(line: 4587, column: 5, scope: !7054)
!7059 = !DILocation(line: 4589, column: 12, scope: !7054)
!7060 = !DILocation(line: 4589, column: 5, scope: !7054)
!7061 = !DILocation(line: 0, scope: !7054)
!7062 = !DILocation(line: 4590, column: 1, scope: !7043)
!7063 = distinct !DISubprogram(name: "emit_call_insn_after_setloc", scope: !3, file: !3, line: 4594, type: !5788, scopeLine: 4595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7064)
!7064 = !{!7065, !7066, !7067, !7068}
!7065 = !DILocalVariable(name: "pattern", arg: 1, scope: !7063, file: !3, line: 4594, type: !787)
!7066 = !DILocalVariable(name: "after", arg: 2, scope: !7063, file: !3, line: 4594, type: !787)
!7067 = !DILocalVariable(name: "loc", arg: 3, scope: !7063, file: !3, line: 4594, type: !778)
!7068 = !DILocalVariable(name: "last", scope: !7063, file: !3, line: 4596, type: !787)
!7069 = !DILocation(line: 0, scope: !7063)
!7070 = !DILocation(line: 4596, column: 14, scope: !7063)
!7071 = !DILocation(line: 4598, column: 15, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 4598, column: 7)
!7073 = !DILocation(line: 4598, column: 31, scope: !7072)
!7074 = !DILocation(line: 4598, column: 27, scope: !7072)
!7075 = !DILocation(line: 4602, column: 3, scope: !7063)
!7076 = !DILocation(line: 4604, column: 11, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 4604, column: 11)
!7078 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 4603, column: 5)
!7079 = !DILocation(line: 4604, column: 33, scope: !7077)
!7080 = !DILocation(line: 4604, column: 37, scope: !7077)
!7081 = !DILocation(line: 4604, column: 11, scope: !7078)
!7082 = !DILocation(line: 4605, column: 23, scope: !7077)
!7083 = !DILocation(line: 4605, column: 2, scope: !7077)
!7084 = !DILocation(line: 4606, column: 17, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 4606, column: 11)
!7086 = !DILocation(line: 4606, column: 11, scope: !7078)
!7087 = distinct !{!7087, !7075, !7088}
!7088 = !DILocation(line: 4609, column: 5, scope: !7063)
!7089 = !DILocation(line: 4611, column: 1, scope: !7063)
!7090 = distinct !DISubprogram(name: "emit_call_insn_after", scope: !3, file: !3, line: 4615, type: !3878, scopeLine: 4616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7091)
!7091 = !{!7092, !7093, !7094}
!7092 = !DILocalVariable(name: "pattern", arg: 1, scope: !7090, file: !3, line: 4615, type: !787)
!7093 = !DILocalVariable(name: "after", arg: 2, scope: !7090, file: !3, line: 4615, type: !787)
!7094 = !DILocalVariable(name: "prev", scope: !7090, file: !3, line: 4617, type: !787)
!7095 = !DILocation(line: 0, scope: !7090)
!7096 = !DILocation(line: 4619, column: 3, scope: !7090)
!7097 = !DILocation(line: 4619, column: 10, scope: !7090)
!7098 = !DILocation(line: 4620, column: 12, scope: !7090)
!7099 = distinct !{!7099, !7096, !7098}
!7100 = !DILocation(line: 4622, column: 7, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 4622, column: 7)
!7102 = !DILocation(line: 4622, column: 7, scope: !7090)
!7103 = !DILocation(line: 4623, column: 57, scope: !7101)
!7104 = !DILocation(line: 4623, column: 12, scope: !7101)
!7105 = !DILocation(line: 4623, column: 5, scope: !7101)
!7106 = !DILocation(line: 4625, column: 12, scope: !7101)
!7107 = !DILocation(line: 4625, column: 5, scope: !7101)
!7108 = !DILocation(line: 0, scope: !7101)
!7109 = !DILocation(line: 4626, column: 1, scope: !7090)
!7110 = distinct !DISubprogram(name: "emit_debug_insn_after_setloc", scope: !3, file: !3, line: 4630, type: !5788, scopeLine: 4631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7111)
!7111 = !{!7112, !7113, !7114, !7115}
!7112 = !DILocalVariable(name: "pattern", arg: 1, scope: !7110, file: !3, line: 4630, type: !787)
!7113 = !DILocalVariable(name: "after", arg: 2, scope: !7110, file: !3, line: 4630, type: !787)
!7114 = !DILocalVariable(name: "loc", arg: 3, scope: !7110, file: !3, line: 4630, type: !778)
!7115 = !DILocalVariable(name: "last", scope: !7110, file: !3, line: 4632, type: !787)
!7116 = !DILocation(line: 0, scope: !7110)
!7117 = !DILocation(line: 4632, column: 14, scope: !7110)
!7118 = !DILocation(line: 4634, column: 15, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 4634, column: 7)
!7120 = !DILocation(line: 4634, column: 31, scope: !7119)
!7121 = !DILocation(line: 4634, column: 27, scope: !7119)
!7122 = !DILocation(line: 4638, column: 3, scope: !7110)
!7123 = !DILocation(line: 4640, column: 11, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4640, column: 11)
!7125 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 4639, column: 5)
!7126 = !DILocation(line: 4640, column: 33, scope: !7124)
!7127 = !DILocation(line: 4640, column: 37, scope: !7124)
!7128 = !DILocation(line: 4640, column: 11, scope: !7125)
!7129 = !DILocation(line: 4641, column: 23, scope: !7124)
!7130 = !DILocation(line: 4641, column: 2, scope: !7124)
!7131 = !DILocation(line: 4642, column: 17, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4642, column: 11)
!7133 = !DILocation(line: 4642, column: 11, scope: !7125)
!7134 = distinct !{!7134, !7122, !7135}
!7135 = !DILocation(line: 4645, column: 5, scope: !7110)
!7136 = !DILocation(line: 4647, column: 1, scope: !7110)
!7137 = distinct !DISubprogram(name: "emit_debug_insn_after", scope: !3, file: !3, line: 4651, type: !3878, scopeLine: 4652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7138)
!7138 = !{!7139, !7140}
!7139 = !DILocalVariable(name: "pattern", arg: 1, scope: !7137, file: !3, line: 4651, type: !787)
!7140 = !DILocalVariable(name: "after", arg: 2, scope: !7137, file: !3, line: 4651, type: !787)
!7141 = !DILocation(line: 0, scope: !7137)
!7142 = !DILocation(line: 4653, column: 7, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 4653, column: 7)
!7144 = !DILocation(line: 4653, column: 7, scope: !7137)
!7145 = !DILocation(line: 4654, column: 58, scope: !7143)
!7146 = !DILocation(line: 4654, column: 12, scope: !7143)
!7147 = !DILocation(line: 4654, column: 5, scope: !7143)
!7148 = !DILocation(line: 4656, column: 12, scope: !7143)
!7149 = !DILocation(line: 4656, column: 5, scope: !7143)
!7150 = !DILocation(line: 0, scope: !7143)
!7151 = !DILocation(line: 4657, column: 1, scope: !7137)
!7152 = distinct !DISubprogram(name: "emit_insn_before_setloc", scope: !3, file: !3, line: 4661, type: !5788, scopeLine: 4662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7153)
!7153 = !{!7154, !7155, !7156, !7157, !7158}
!7154 = !DILocalVariable(name: "pattern", arg: 1, scope: !7152, file: !3, line: 4661, type: !787)
!7155 = !DILocalVariable(name: "before", arg: 2, scope: !7152, file: !3, line: 4661, type: !787)
!7156 = !DILocalVariable(name: "loc", arg: 3, scope: !7152, file: !3, line: 4661, type: !778)
!7157 = !DILocalVariable(name: "first", scope: !7152, file: !3, line: 4663, type: !787)
!7158 = !DILocalVariable(name: "last", scope: !7152, file: !3, line: 4664, type: !787)
!7159 = !DILocation(line: 0, scope: !7152)
!7160 = !DILocation(line: 4663, column: 15, scope: !7152)
!7161 = !DILocation(line: 4664, column: 14, scope: !7152)
!7162 = !DILocation(line: 4666, column: 15, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 4666, column: 7)
!7164 = !DILocation(line: 4666, column: 31, scope: !7163)
!7165 = !DILocation(line: 4666, column: 27, scope: !7163)
!7166 = !DILocation(line: 4669, column: 8, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 4669, column: 7)
!7168 = !DILocation(line: 4669, column: 7, scope: !7152)
!7169 = !DILocation(line: 4670, column: 13, scope: !7167)
!7170 = !DILocation(line: 4670, column: 5, scope: !7167)
!7171 = !DILocation(line: 4672, column: 13, scope: !7167)
!7172 = !DILocation(line: 0, scope: !7167)
!7173 = !DILocation(line: 4673, column: 3, scope: !7152)
!7174 = !DILocation(line: 4675, column: 11, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 4675, column: 11)
!7176 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 4674, column: 5)
!7177 = !DILocation(line: 4675, column: 33, scope: !7175)
!7178 = !DILocation(line: 4675, column: 37, scope: !7175)
!7179 = !DILocation(line: 4675, column: 11, scope: !7176)
!7180 = !DILocation(line: 4676, column: 23, scope: !7175)
!7181 = !DILocation(line: 4676, column: 2, scope: !7175)
!7182 = !DILocation(line: 4677, column: 17, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 4677, column: 11)
!7184 = !DILocation(line: 4677, column: 11, scope: !7176)
!7185 = !DILocation(line: 4679, column: 15, scope: !7176)
!7186 = distinct !{!7186, !7173, !7187}
!7187 = !DILocation(line: 4680, column: 5, scope: !7152)
!7188 = !DILocation(line: 4682, column: 1, scope: !7152)
!7189 = distinct !DISubprogram(name: "emit_insn_before", scope: !3, file: !3, line: 4686, type: !3878, scopeLine: 4687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7190)
!7190 = !{!7191, !7192, !7193}
!7191 = !DILocalVariable(name: "pattern", arg: 1, scope: !7189, file: !3, line: 4686, type: !787)
!7192 = !DILocalVariable(name: "before", arg: 2, scope: !7189, file: !3, line: 4686, type: !787)
!7193 = !DILocalVariable(name: "next", scope: !7189, file: !3, line: 4688, type: !787)
!7194 = !DILocation(line: 0, scope: !7189)
!7195 = !DILocation(line: 4690, column: 3, scope: !7189)
!7196 = !DILocation(line: 4690, column: 10, scope: !7189)
!7197 = !DILocation(line: 4691, column: 12, scope: !7189)
!7198 = distinct !{!7198, !7195, !7197}
!7199 = !DILocation(line: 4693, column: 7, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 4693, column: 7)
!7201 = !DILocation(line: 4693, column: 7, scope: !7189)
!7202 = !DILocation(line: 4694, column: 54, scope: !7200)
!7203 = !DILocation(line: 4694, column: 12, scope: !7200)
!7204 = !DILocation(line: 4694, column: 5, scope: !7200)
!7205 = !DILocation(line: 4696, column: 12, scope: !7200)
!7206 = !DILocation(line: 4696, column: 5, scope: !7200)
!7207 = !DILocation(line: 0, scope: !7200)
!7208 = !DILocation(line: 4697, column: 1, scope: !7189)
!7209 = distinct !DISubprogram(name: "emit_jump_insn_before_setloc", scope: !3, file: !3, line: 4701, type: !5788, scopeLine: 4702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7210)
!7210 = !{!7211, !7212, !7213, !7214, !7215}
!7211 = !DILocalVariable(name: "pattern", arg: 1, scope: !7209, file: !3, line: 4701, type: !787)
!7212 = !DILocalVariable(name: "before", arg: 2, scope: !7209, file: !3, line: 4701, type: !787)
!7213 = !DILocalVariable(name: "loc", arg: 3, scope: !7209, file: !3, line: 4701, type: !778)
!7214 = !DILocalVariable(name: "first", scope: !7209, file: !3, line: 4703, type: !787)
!7215 = !DILocalVariable(name: "last", scope: !7209, file: !3, line: 4704, type: !787)
!7216 = !DILocation(line: 0, scope: !7209)
!7217 = !DILocation(line: 4703, column: 15, scope: !7209)
!7218 = !DILocation(line: 4704, column: 14, scope: !7209)
!7219 = !DILocation(line: 4706, column: 15, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 4706, column: 7)
!7221 = !DILocation(line: 4706, column: 7, scope: !7209)
!7222 = !DILocation(line: 4710, column: 3, scope: !7209)
!7223 = !DILocation(line: 4712, column: 11, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 4712, column: 11)
!7225 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 4711, column: 5)
!7226 = !DILocation(line: 4712, column: 33, scope: !7224)
!7227 = !DILocation(line: 4712, column: 37, scope: !7224)
!7228 = !DILocation(line: 4712, column: 11, scope: !7225)
!7229 = !DILocation(line: 4713, column: 23, scope: !7224)
!7230 = !DILocation(line: 4713, column: 2, scope: !7224)
!7231 = !DILocation(line: 4714, column: 17, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 4714, column: 11)
!7233 = !DILocation(line: 4714, column: 11, scope: !7225)
!7234 = distinct !{!7234, !7222, !7235}
!7235 = !DILocation(line: 4717, column: 5, scope: !7209)
!7236 = !DILocation(line: 4719, column: 1, scope: !7209)
!7237 = distinct !DISubprogram(name: "emit_jump_insn_before", scope: !3, file: !3, line: 4723, type: !3878, scopeLine: 4724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7238)
!7238 = !{!7239, !7240, !7241}
!7239 = !DILocalVariable(name: "pattern", arg: 1, scope: !7237, file: !3, line: 4723, type: !787)
!7240 = !DILocalVariable(name: "before", arg: 2, scope: !7237, file: !3, line: 4723, type: !787)
!7241 = !DILocalVariable(name: "next", scope: !7237, file: !3, line: 4725, type: !787)
!7242 = !DILocation(line: 0, scope: !7237)
!7243 = !DILocation(line: 4727, column: 3, scope: !7237)
!7244 = !DILocation(line: 4727, column: 10, scope: !7237)
!7245 = !DILocation(line: 4728, column: 12, scope: !7237)
!7246 = distinct !{!7246, !7243, !7245}
!7247 = !DILocation(line: 4730, column: 7, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 4730, column: 7)
!7249 = !DILocation(line: 4730, column: 7, scope: !7237)
!7250 = !DILocation(line: 4731, column: 59, scope: !7248)
!7251 = !DILocation(line: 4731, column: 12, scope: !7248)
!7252 = !DILocation(line: 4731, column: 5, scope: !7248)
!7253 = !DILocation(line: 4733, column: 12, scope: !7248)
!7254 = !DILocation(line: 4733, column: 5, scope: !7248)
!7255 = !DILocation(line: 0, scope: !7248)
!7256 = !DILocation(line: 4734, column: 1, scope: !7237)
!7257 = distinct !DISubprogram(name: "emit_call_insn_before_setloc", scope: !3, file: !3, line: 4738, type: !5788, scopeLine: 4739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7258)
!7258 = !{!7259, !7260, !7261, !7262, !7263}
!7259 = !DILocalVariable(name: "pattern", arg: 1, scope: !7257, file: !3, line: 4738, type: !787)
!7260 = !DILocalVariable(name: "before", arg: 2, scope: !7257, file: !3, line: 4738, type: !787)
!7261 = !DILocalVariable(name: "loc", arg: 3, scope: !7257, file: !3, line: 4738, type: !778)
!7262 = !DILocalVariable(name: "first", scope: !7257, file: !3, line: 4740, type: !787)
!7263 = !DILocalVariable(name: "last", scope: !7257, file: !3, line: 4741, type: !787)
!7264 = !DILocation(line: 0, scope: !7257)
!7265 = !DILocation(line: 4740, column: 15, scope: !7257)
!7266 = !DILocation(line: 4741, column: 14, scope: !7257)
!7267 = !DILocation(line: 4743, column: 15, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4743, column: 7)
!7269 = !DILocation(line: 4743, column: 7, scope: !7257)
!7270 = !DILocation(line: 4747, column: 3, scope: !7257)
!7271 = !DILocation(line: 4749, column: 11, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 4749, column: 11)
!7273 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4748, column: 5)
!7274 = !DILocation(line: 4749, column: 33, scope: !7272)
!7275 = !DILocation(line: 4749, column: 37, scope: !7272)
!7276 = !DILocation(line: 4749, column: 11, scope: !7273)
!7277 = !DILocation(line: 4750, column: 23, scope: !7272)
!7278 = !DILocation(line: 4750, column: 2, scope: !7272)
!7279 = !DILocation(line: 4751, column: 17, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 4751, column: 11)
!7281 = !DILocation(line: 4751, column: 11, scope: !7273)
!7282 = distinct !{!7282, !7270, !7283}
!7283 = !DILocation(line: 4754, column: 5, scope: !7257)
!7284 = !DILocation(line: 4756, column: 1, scope: !7257)
!7285 = distinct !DISubprogram(name: "emit_call_insn_before", scope: !3, file: !3, line: 4761, type: !3878, scopeLine: 4762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7286)
!7286 = !{!7287, !7288, !7289}
!7287 = !DILocalVariable(name: "pattern", arg: 1, scope: !7285, file: !3, line: 4761, type: !787)
!7288 = !DILocalVariable(name: "before", arg: 2, scope: !7285, file: !3, line: 4761, type: !787)
!7289 = !DILocalVariable(name: "next", scope: !7285, file: !3, line: 4763, type: !787)
!7290 = !DILocation(line: 0, scope: !7285)
!7291 = !DILocation(line: 4765, column: 3, scope: !7285)
!7292 = !DILocation(line: 4765, column: 10, scope: !7285)
!7293 = !DILocation(line: 4766, column: 12, scope: !7285)
!7294 = distinct !{!7294, !7291, !7293}
!7295 = !DILocation(line: 4768, column: 7, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 4768, column: 7)
!7297 = !DILocation(line: 4768, column: 7, scope: !7285)
!7298 = !DILocation(line: 4769, column: 59, scope: !7296)
!7299 = !DILocation(line: 4769, column: 12, scope: !7296)
!7300 = !DILocation(line: 4769, column: 5, scope: !7296)
!7301 = !DILocation(line: 4771, column: 12, scope: !7296)
!7302 = !DILocation(line: 4771, column: 5, scope: !7296)
!7303 = !DILocation(line: 0, scope: !7296)
!7304 = !DILocation(line: 4772, column: 1, scope: !7285)
!7305 = distinct !DISubprogram(name: "emit_debug_insn_before_setloc", scope: !3, file: !3, line: 4776, type: !5788, scopeLine: 4777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7306)
!7306 = !{!7307, !7308, !7309, !7310, !7311}
!7307 = !DILocalVariable(name: "pattern", arg: 1, scope: !7305, file: !3, line: 4776, type: !787)
!7308 = !DILocalVariable(name: "before", arg: 2, scope: !7305, file: !3, line: 4776, type: !787)
!7309 = !DILocalVariable(name: "loc", arg: 3, scope: !7305, file: !3, line: 4776, type: !778)
!7310 = !DILocalVariable(name: "first", scope: !7305, file: !3, line: 4778, type: !787)
!7311 = !DILocalVariable(name: "last", scope: !7305, file: !3, line: 4779, type: !787)
!7312 = !DILocation(line: 0, scope: !7305)
!7313 = !DILocation(line: 4778, column: 15, scope: !7305)
!7314 = !DILocation(line: 4779, column: 14, scope: !7305)
!7315 = !DILocation(line: 4781, column: 15, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 4781, column: 7)
!7317 = !DILocation(line: 4781, column: 7, scope: !7305)
!7318 = !DILocation(line: 4785, column: 3, scope: !7305)
!7319 = !DILocation(line: 4787, column: 11, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 4787, column: 11)
!7321 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 4786, column: 5)
!7322 = !DILocation(line: 4787, column: 33, scope: !7320)
!7323 = !DILocation(line: 4787, column: 37, scope: !7320)
!7324 = !DILocation(line: 4787, column: 11, scope: !7321)
!7325 = !DILocation(line: 4788, column: 23, scope: !7320)
!7326 = !DILocation(line: 4788, column: 2, scope: !7320)
!7327 = !DILocation(line: 4789, column: 17, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 4789, column: 11)
!7329 = !DILocation(line: 4789, column: 11, scope: !7321)
!7330 = distinct !{!7330, !7318, !7331}
!7331 = !DILocation(line: 4792, column: 5, scope: !7305)
!7332 = !DILocation(line: 4794, column: 1, scope: !7305)
!7333 = distinct !DISubprogram(name: "emit_debug_insn_before", scope: !3, file: !3, line: 4799, type: !3878, scopeLine: 4800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7334)
!7334 = !{!7335, !7336}
!7335 = !DILocalVariable(name: "pattern", arg: 1, scope: !7333, file: !3, line: 4799, type: !787)
!7336 = !DILocalVariable(name: "before", arg: 2, scope: !7333, file: !3, line: 4799, type: !787)
!7337 = !DILocation(line: 0, scope: !7333)
!7338 = !DILocation(line: 4801, column: 7, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 4801, column: 7)
!7340 = !DILocation(line: 4801, column: 7, scope: !7333)
!7341 = !DILocation(line: 4802, column: 60, scope: !7339)
!7342 = !DILocation(line: 4802, column: 12, scope: !7339)
!7343 = !DILocation(line: 4802, column: 5, scope: !7339)
!7344 = !DILocation(line: 4804, column: 12, scope: !7339)
!7345 = !DILocation(line: 4804, column: 5, scope: !7339)
!7346 = !DILocation(line: 0, scope: !7339)
!7347 = !DILocation(line: 4805, column: 1, scope: !7333)
!7348 = distinct !DISubprogram(name: "emit_insn", scope: !3, file: !3, line: 4813, type: !2687, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7349)
!7349 = !{!7350, !7351, !7352, !7353}
!7350 = !DILocalVariable(name: "x", arg: 1, scope: !7348, file: !3, line: 4813, type: !787)
!7351 = !DILocalVariable(name: "last", scope: !7348, file: !3, line: 4815, type: !787)
!7352 = !DILocalVariable(name: "insn", scope: !7348, file: !3, line: 4816, type: !787)
!7353 = !DILocalVariable(name: "next", scope: !7354, file: !3, line: 4833, type: !787)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4832, column: 2)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 4822, column: 5)
!7356 = !DILocation(line: 0, scope: !7348)
!7357 = !DILocation(line: 4815, column: 14, scope: !7348)
!7358 = !DILocation(line: 4818, column: 9, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 4818, column: 7)
!7360 = !DILocation(line: 4818, column: 7, scope: !7348)
!7361 = !DILocation(line: 4821, column: 11, scope: !7348)
!7362 = !DILocation(line: 4821, column: 3, scope: !7348)
!7363 = !DILocation(line: 4831, column: 7, scope: !7355)
!7364 = !DILocation(line: 0, scope: !7355)
!7365 = !DILocation(line: 4833, column: 15, scope: !7354)
!7366 = !DILocation(line: 0, scope: !7354)
!7367 = !DILocation(line: 4834, column: 4, scope: !7354)
!7368 = distinct !{!7368, !7363, !7369}
!7369 = !DILocation(line: 4837, column: 2, scope: !7355)
!7370 = !DILocation(line: 4847, column: 14, scope: !7355)
!7371 = !DILocation(line: 4848, column: 7, scope: !7355)
!7372 = !DILocation(line: 4849, column: 7, scope: !7355)
!7373 = !DILocation(line: 4853, column: 1, scope: !7348)
!7374 = distinct !DISubprogram(name: "emit_debug_insn", scope: !3, file: !3, line: 4859, type: !2687, scopeLine: 4860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7375)
!7375 = !{!7376, !7377, !7378, !7379}
!7376 = !DILocalVariable(name: "x", arg: 1, scope: !7374, file: !3, line: 4859, type: !787)
!7377 = !DILocalVariable(name: "last", scope: !7374, file: !3, line: 4861, type: !787)
!7378 = !DILocalVariable(name: "insn", scope: !7374, file: !3, line: 4862, type: !787)
!7379 = !DILocalVariable(name: "next", scope: !7380, file: !3, line: 4879, type: !787)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 4878, column: 2)
!7381 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 4868, column: 5)
!7382 = !DILocation(line: 0, scope: !7374)
!7383 = !DILocation(line: 4861, column: 14, scope: !7374)
!7384 = !DILocation(line: 4864, column: 9, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 4864, column: 7)
!7386 = !DILocation(line: 4864, column: 7, scope: !7374)
!7387 = !DILocation(line: 4867, column: 11, scope: !7374)
!7388 = !DILocation(line: 4867, column: 3, scope: !7374)
!7389 = !DILocation(line: 4877, column: 7, scope: !7381)
!7390 = !DILocation(line: 0, scope: !7381)
!7391 = !DILocation(line: 4879, column: 15, scope: !7380)
!7392 = !DILocation(line: 0, scope: !7380)
!7393 = !DILocation(line: 4880, column: 4, scope: !7380)
!7394 = distinct !{!7394, !7389, !7395}
!7395 = !DILocation(line: 4883, column: 2, scope: !7381)
!7396 = !DILocation(line: 4893, column: 14, scope: !7381)
!7397 = !DILocation(line: 4894, column: 7, scope: !7381)
!7398 = !DILocation(line: 4895, column: 7, scope: !7381)
!7399 = !DILocation(line: 4899, column: 1, scope: !7374)
!7400 = distinct !DISubprogram(name: "emit_jump_insn", scope: !3, file: !3, line: 4905, type: !2687, scopeLine: 4906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7401)
!7401 = !{!7402, !7403, !7404, !7405}
!7402 = !DILocalVariable(name: "x", arg: 1, scope: !7400, file: !3, line: 4905, type: !787)
!7403 = !DILocalVariable(name: "last", scope: !7400, file: !3, line: 4907, type: !787)
!7404 = !DILocalVariable(name: "insn", scope: !7400, file: !3, line: 4907, type: !787)
!7405 = !DILocalVariable(name: "next", scope: !7406, file: !3, line: 4921, type: !787)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 4920, column: 2)
!7407 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 4910, column: 5)
!7408 = !DILocation(line: 0, scope: !7400)
!7409 = !DILocation(line: 4909, column: 11, scope: !7400)
!7410 = !DILocation(line: 4909, column: 3, scope: !7400)
!7411 = !DILocation(line: 4919, column: 7, scope: !7407)
!7412 = !DILocation(line: 0, scope: !7407)
!7413 = !DILocation(line: 4921, column: 15, scope: !7406)
!7414 = !DILocation(line: 0, scope: !7406)
!7415 = !DILocation(line: 4922, column: 4, scope: !7406)
!7416 = distinct !{!7416, !7411, !7417}
!7417 = !DILocation(line: 4925, column: 2, scope: !7407)
!7418 = !DILocation(line: 4935, column: 14, scope: !7407)
!7419 = !DILocation(line: 4936, column: 7, scope: !7407)
!7420 = !DILocation(line: 4937, column: 7, scope: !7407)
!7421 = !DILocation(line: 4940, column: 3, scope: !7400)
!7422 = distinct !DISubprogram(name: "emit_call_insn", scope: !3, file: !3, line: 4947, type: !2687, scopeLine: 4948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7423)
!7423 = !{!7424, !7425}
!7424 = !DILocalVariable(name: "x", arg: 1, scope: !7422, file: !3, line: 4947, type: !787)
!7425 = !DILocalVariable(name: "insn", scope: !7422, file: !3, line: 4949, type: !787)
!7426 = !DILocation(line: 0, scope: !7422)
!7427 = !DILocation(line: 4951, column: 11, scope: !7422)
!7428 = !DILocation(line: 4951, column: 3, scope: !7422)
!7429 = !DILocation(line: 4960, column: 14, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 4952, column: 5)
!7431 = !DILocation(line: 4961, column: 7, scope: !7430)
!7432 = !DILocation(line: 4970, column: 14, scope: !7430)
!7433 = !DILocation(line: 4971, column: 7, scope: !7430)
!7434 = !DILocation(line: 4972, column: 7, scope: !7430)
!7435 = !DILocation(line: 0, scope: !7430)
!7436 = !DILocation(line: 4975, column: 3, scope: !7422)
!7437 = distinct !DISubprogram(name: "emit_label", scope: !3, file: !3, line: 4981, type: !2687, scopeLine: 4982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7438)
!7438 = !{!7439}
!7439 = !DILocalVariable(name: "label", arg: 1, scope: !7437, file: !3, line: 4981, type: !787)
!7440 = !DILocation(line: 0, scope: !7437)
!7441 = !DILocation(line: 4986, column: 7, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 4986, column: 7)
!7443 = !DILocation(line: 4986, column: 24, scope: !7442)
!7444 = !DILocation(line: 4986, column: 7, scope: !7437)
!7445 = !DILocation(line: 4988, column: 38, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 4987, column: 5)
!7447 = !DILocation(line: 4988, column: 24, scope: !7446)
!7448 = !DILocation(line: 4989, column: 7, scope: !7446)
!7449 = !DILocation(line: 4990, column: 5, scope: !7446)
!7450 = !DILocation(line: 4991, column: 3, scope: !7437)
!7451 = distinct !DISubprogram(name: "emit_barrier", scope: !3, file: !3, line: 4998, type: !4792, scopeLine: 4999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7452)
!7452 = !{!7453}
!7453 = !DILocalVariable(name: "barrier", scope: !7451, file: !3, line: 5000, type: !787)
!7454 = !DILocation(line: 5000, column: 17, scope: !7451)
!7455 = !DILocation(line: 0, scope: !7451)
!7456 = !DILocation(line: 5001, column: 36, scope: !7451)
!7457 = !DILocation(line: 5001, column: 3, scope: !7451)
!7458 = !DILocation(line: 5001, column: 22, scope: !7451)
!7459 = !DILocation(line: 5002, column: 3, scope: !7451)
!7460 = !DILocation(line: 5003, column: 3, scope: !7451)
!7461 = distinct !DISubprogram(name: "emit_note_copy", scope: !3, file: !3, line: 5009, type: !2687, scopeLine: 5010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7462)
!7462 = !{!7463, !7464}
!7463 = !DILocalVariable(name: "orig", arg: 1, scope: !7461, file: !3, line: 5009, type: !787)
!7464 = !DILocalVariable(name: "note", scope: !7461, file: !3, line: 5011, type: !787)
!7465 = !DILocation(line: 0, scope: !7461)
!7466 = !DILocation(line: 5013, column: 10, scope: !7461)
!7467 = !DILocation(line: 5015, column: 33, scope: !7461)
!7468 = !DILocation(line: 5015, column: 3, scope: !7461)
!7469 = !DILocation(line: 5015, column: 19, scope: !7461)
!7470 = !DILocation(line: 5016, column: 3, scope: !7461)
!7471 = !DILocation(line: 5016, column: 22, scope: !7461)
!7472 = !DILocation(line: 5017, column: 22, scope: !7461)
!7473 = !DILocation(line: 5017, column: 3, scope: !7461)
!7474 = !DILocation(line: 5017, column: 20, scope: !7461)
!7475 = !DILocation(line: 5018, column: 3, scope: !7461)
!7476 = !DILocation(line: 5018, column: 25, scope: !7461)
!7477 = !DILocation(line: 5019, column: 3, scope: !7461)
!7478 = !DILocation(line: 5021, column: 3, scope: !7461)
!7479 = distinct !DISubprogram(name: "emit_note", scope: !3, file: !3, line: 5028, type: !7480, scopeLine: 5029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7482)
!7480 = !DISubroutineType(types: !7481)
!7481 = !{!787, !759}
!7482 = !{!7483, !7484}
!7483 = !DILocalVariable(name: "kind", arg: 1, scope: !7479, file: !3, line: 5028, type: !759)
!7484 = !DILocalVariable(name: "note", scope: !7479, file: !3, line: 5030, type: !787)
!7485 = !DILocation(line: 0, scope: !7479)
!7486 = !DILocation(line: 5032, column: 10, scope: !7479)
!7487 = !DILocation(line: 5033, column: 33, scope: !7479)
!7488 = !DILocation(line: 5033, column: 3, scope: !7479)
!7489 = !DILocation(line: 5033, column: 19, scope: !7479)
!7490 = !DILocation(line: 5034, column: 3, scope: !7479)
!7491 = !DILocation(line: 5034, column: 20, scope: !7479)
!7492 = !DILocation(line: 5035, column: 12, scope: !7479)
!7493 = !DILocation(line: 5035, column: 11, scope: !7479)
!7494 = !DILocation(line: 5035, column: 3, scope: !7479)
!7495 = !DILocation(line: 5036, column: 3, scope: !7479)
!7496 = !DILocation(line: 5036, column: 25, scope: !7479)
!7497 = !DILocation(line: 5037, column: 3, scope: !7479)
!7498 = !DILocation(line: 5038, column: 3, scope: !7479)
!7499 = distinct !DISubprogram(name: "emit_clobber", scope: !3, file: !3, line: 5044, type: !2687, scopeLine: 5045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7500)
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "x", arg: 1, scope: !7499, file: !3, line: 5044, type: !787)
!7502 = !DILocation(line: 5050, column: 14, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 5048, column: 5)
!7504 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 5047, column: 7)
!7505 = !DILocation(line: 0, scope: !7499)
!7506 = !DILocation(line: 5047, column: 7, scope: !7504)
!7507 = !DILocation(line: 5047, column: 20, scope: !7504)
!7508 = !DILocation(line: 5047, column: 7, scope: !7499)
!7509 = !DILocation(line: 5049, column: 21, scope: !7503)
!7510 = !DILocation(line: 5049, column: 7, scope: !7503)
!7511 = !DILocation(line: 5050, column: 28, scope: !7503)
!7512 = !DILocation(line: 5052, column: 21, scope: !7499)
!7513 = !DILocation(line: 5052, column: 10, scope: !7499)
!7514 = !DILocation(line: 5053, column: 1, scope: !7499)
!7515 = distinct !DISubprogram(name: "gen_clobber", scope: !3, file: !3, line: 5058, type: !2687, scopeLine: 5059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7516)
!7516 = !{!7517, !7518}
!7517 = !DILocalVariable(name: "x", arg: 1, scope: !7515, file: !3, line: 5058, type: !787)
!7518 = !DILocalVariable(name: "seq", scope: !7515, file: !3, line: 5060, type: !787)
!7519 = !DILocation(line: 0, scope: !7515)
!7520 = !DILocation(line: 5062, column: 3, scope: !7515)
!7521 = !DILocation(line: 5063, column: 3, scope: !7515)
!7522 = !DILocation(line: 5064, column: 9, scope: !7515)
!7523 = !DILocation(line: 5065, column: 3, scope: !7515)
!7524 = !DILocation(line: 5066, column: 3, scope: !7515)
!7525 = distinct !DISubprogram(name: "start_sequence", scope: !3, file: !3, line: 5246, type: !5052, scopeLine: 5247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7526)
!7526 = !{!7527}
!7527 = !DILocalVariable(name: "tem", scope: !7525, file: !3, line: 5248, type: !1825)
!7528 = !DILocation(line: 5250, column: 7, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 5250, column: 7)
!7530 = !DILocation(line: 5250, column: 27, scope: !7529)
!7531 = !DILocation(line: 5250, column: 7, scope: !7525)
!7532 = !DILocation(line: 0, scope: !7525)
!7533 = !DILocation(line: 5253, column: 34, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 5251, column: 5)
!7535 = !DILocation(line: 5253, column: 27, scope: !7534)
!7536 = !DILocation(line: 5254, column: 5, scope: !7534)
!7537 = !DILocation(line: 5256, column: 11, scope: !7529)
!7538 = !DILocation(line: 0, scope: !7529)
!7539 = !DILocation(line: 5258, column: 15, scope: !7525)
!7540 = !DILocation(line: 5258, column: 8, scope: !7525)
!7541 = !DILocation(line: 5258, column: 13, scope: !7525)
!7542 = !DILocation(line: 5259, column: 16, scope: !7525)
!7543 = !DILocation(line: 5259, column: 14, scope: !7525)
!7544 = !DILocation(line: 5260, column: 15, scope: !7525)
!7545 = !DILocation(line: 5260, column: 8, scope: !7525)
!7546 = !DILocation(line: 5260, column: 13, scope: !7525)
!7547 = !DILocation(line: 5262, column: 13, scope: !7525)
!7548 = !DILocation(line: 5264, column: 14, scope: !7525)
!7549 = !DILocation(line: 5265, column: 13, scope: !7525)
!7550 = !DILocation(line: 5266, column: 1, scope: !7525)
!7551 = distinct !DISubprogram(name: "end_sequence", scope: !3, file: !3, line: 5345, type: !5052, scopeLine: 5346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7552)
!7552 = !{!7553}
!7553 = !DILocalVariable(name: "tem", scope: !7551, file: !3, line: 5347, type: !1825)
!7554 = !DILocation(line: 5347, column: 32, scope: !7551)
!7555 = !DILocation(line: 0, scope: !7551)
!7556 = !DILocation(line: 5349, column: 21, scope: !7551)
!7557 = !DILocation(line: 5349, column: 14, scope: !7551)
!7558 = !DILocation(line: 5350, column: 20, scope: !7551)
!7559 = !DILocation(line: 5350, column: 13, scope: !7551)
!7560 = !DILocation(line: 5351, column: 20, scope: !7551)
!7561 = !DILocation(line: 5351, column: 13, scope: !7551)
!7562 = !DILocation(line: 5353, column: 11, scope: !7551)
!7563 = !DILocation(line: 5353, column: 3, scope: !7551)
!7564 = !DILocation(line: 5354, column: 15, scope: !7551)
!7565 = !DILocation(line: 5354, column: 13, scope: !7551)
!7566 = !DILocation(line: 5355, column: 23, scope: !7551)
!7567 = !DILocation(line: 5356, column: 1, scope: !7551)
!7568 = distinct !DISubprogram(name: "emit_use", scope: !3, file: !3, line: 5072, type: !2687, scopeLine: 5073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7569)
!7569 = !{!7570}
!7570 = !DILocalVariable(name: "x", arg: 1, scope: !7568, file: !3, line: 5072, type: !787)
!7571 = !DILocation(line: 5078, column: 14, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 5076, column: 5)
!7573 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 5075, column: 7)
!7574 = !DILocation(line: 0, scope: !7568)
!7575 = !DILocation(line: 5075, column: 7, scope: !7573)
!7576 = !DILocation(line: 5075, column: 20, scope: !7573)
!7577 = !DILocation(line: 5075, column: 7, scope: !7568)
!7578 = !DILocation(line: 5077, column: 17, scope: !7572)
!7579 = !DILocation(line: 5077, column: 7, scope: !7572)
!7580 = !DILocation(line: 5078, column: 24, scope: !7572)
!7581 = !DILocation(line: 5080, column: 21, scope: !7568)
!7582 = !DILocation(line: 5080, column: 10, scope: !7568)
!7583 = !DILocation(line: 5081, column: 1, scope: !7568)
!7584 = distinct !DISubprogram(name: "gen_use", scope: !3, file: !3, line: 5086, type: !2687, scopeLine: 5087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7585)
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "x", arg: 1, scope: !7584, file: !3, line: 5086, type: !787)
!7587 = !DILocalVariable(name: "seq", scope: !7584, file: !3, line: 5088, type: !787)
!7588 = !DILocation(line: 0, scope: !7584)
!7589 = !DILocation(line: 5090, column: 3, scope: !7584)
!7590 = !DILocation(line: 5091, column: 3, scope: !7584)
!7591 = !DILocation(line: 5092, column: 9, scope: !7584)
!7592 = !DILocation(line: 5093, column: 3, scope: !7584)
!7593 = !DILocation(line: 5094, column: 3, scope: !7584)
!7594 = distinct !DISubprogram(name: "force_next_line_note", scope: !3, file: !3, line: 5101, type: !5052, scopeLine: 5102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!7595 = !DILocation(line: 5103, column: 17, scope: !7594)
!7596 = !DILocation(line: 5104, column: 1, scope: !7594)
!7597 = distinct !DISubprogram(name: "set_unique_reg_note", scope: !3, file: !3, line: 5110, type: !7598, scopeLine: 5111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7600)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!787, !787, !725, !787}
!7600 = !{!7601, !7602, !7603, !7604}
!7601 = !DILocalVariable(name: "insn", arg: 1, scope: !7597, file: !3, line: 5110, type: !787)
!7602 = !DILocalVariable(name: "kind", arg: 2, scope: !7597, file: !3, line: 5110, type: !725)
!7603 = !DILocalVariable(name: "datum", arg: 3, scope: !7597, file: !3, line: 5110, type: !787)
!7604 = !DILocalVariable(name: "note", scope: !7597, file: !3, line: 5112, type: !787)
!7605 = !DILocation(line: 0, scope: !7597)
!7606 = !DILocation(line: 5112, column: 14, scope: !7597)
!7607 = !DILocation(line: 5114, column: 3, scope: !7597)
!7608 = !DILocation(line: 5122, column: 11, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 5122, column: 11)
!7610 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 5115, column: 5)
!7611 = !DILocation(line: 5122, column: 37, scope: !7609)
!7612 = !DILocation(line: 5122, column: 49, scope: !7609)
!7613 = !DILocation(line: 5122, column: 52, scope: !7609)
!7614 = !DILocation(line: 5122, column: 11, scope: !7610)
!7615 = !DILocation(line: 5124, column: 4, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 5123, column: 2)
!7617 = !DILocation(line: 5130, column: 11, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 5130, column: 11)
!7619 = !DILocation(line: 5130, column: 28, scope: !7618)
!7620 = !DILocation(line: 5130, column: 11, scope: !7610)
!7621 = !DILocation(line: 5133, column: 11, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 5133, column: 11)
!7623 = !DILocation(line: 5133, column: 11, scope: !7610)
!7624 = !DILocation(line: 5135, column: 4, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 5134, column: 2)
!7626 = !DILocation(line: 5135, column: 19, scope: !7625)
!7627 = !DILocation(line: 5136, column: 4, scope: !7625)
!7628 = !DILocation(line: 5137, column: 4, scope: !7625)
!7629 = !DILocation(line: 5142, column: 11, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 5142, column: 11)
!7631 = !DILocation(line: 5142, column: 11, scope: !7610)
!7632 = !DILocation(line: 5144, column: 4, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 5143, column: 2)
!7634 = !DILocation(line: 5144, column: 19, scope: !7633)
!7635 = !DILocation(line: 5145, column: 4, scope: !7633)
!7636 = !DILocation(line: 5150, column: 3, scope: !7597)
!7637 = !DILocation(line: 5152, column: 3, scope: !7597)
!7638 = !DILocation(line: 5156, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 5153, column: 5)
!7640 = !DILocation(line: 5157, column: 7, scope: !7639)
!7641 = !DILocation(line: 5162, column: 10, scope: !7597)
!7642 = !DILocation(line: 5162, column: 3, scope: !7597)
!7643 = !DILocation(line: 5163, column: 1, scope: !7597)
!7644 = distinct !DISubprogram(name: "emit", scope: !3, file: !3, line: 5206, type: !2687, scopeLine: 5207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7645)
!7645 = !{!7646, !7647, !7648}
!7646 = !DILocalVariable(name: "x", arg: 1, scope: !7644, file: !3, line: 5206, type: !787)
!7647 = !DILocalVariable(name: "code", scope: !7644, file: !3, line: 5208, type: !399)
!7648 = !DILocalVariable(name: "insn", scope: !7649, file: !3, line: 5218, type: !787)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 5217, column: 7)
!7650 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 5211, column: 5)
!7651 = !DILocation(line: 0, scope: !7644)
!7652 = !DILocation(line: 5208, column: 24, scope: !7644)
!7653 = !DILocation(line: 5210, column: 3, scope: !7644)
!7654 = !DILocation(line: 5213, column: 14, scope: !7650)
!7655 = !DILocation(line: 5213, column: 7, scope: !7650)
!7656 = !DILocation(line: 5215, column: 14, scope: !7650)
!7657 = !DILocation(line: 5215, column: 7, scope: !7650)
!7658 = !DILocation(line: 5218, column: 13, scope: !7649)
!7659 = !DILocation(line: 0, scope: !7649)
!7660 = !DILocation(line: 5219, column: 6, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 5219, column: 6)
!7662 = !DILocation(line: 5219, column: 30, scope: !7661)
!7663 = !DILocation(line: 5219, column: 33, scope: !7661)
!7664 = !DILocation(line: 5219, column: 46, scope: !7661)
!7665 = !DILocation(line: 5219, column: 6, scope: !7649)
!7666 = !DILocation(line: 5220, column: 11, scope: !7661)
!7667 = !DILocation(line: 5220, column: 4, scope: !7661)
!7668 = !DILocation(line: 5224, column: 14, scope: !7650)
!7669 = !DILocation(line: 5224, column: 7, scope: !7650)
!7670 = !DILocation(line: 5226, column: 14, scope: !7650)
!7671 = !DILocation(line: 5226, column: 7, scope: !7650)
!7672 = !DILocation(line: 5228, column: 7, scope: !7650)
!7673 = !DILocation(line: 5231, column: 5, scope: !7644)
!7674 = !DILocation(line: 5233, column: 1, scope: !7644)
!7675 = distinct !DISubprogram(name: "classify_insn", scope: !3, file: !3, line: 5169, type: !7676, scopeLine: 5170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7678)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!399, !787}
!7678 = !{!7679, !7680}
!7679 = !DILocalVariable(name: "x", arg: 1, scope: !7675, file: !3, line: 5169, type: !787)
!7680 = !DILocalVariable(name: "j", scope: !7681, file: !3, line: 5188, type: !778)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 5187, column: 5)
!7682 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5186, column: 7)
!7683 = !DILocation(line: 0, scope: !7675)
!7684 = !DILocation(line: 5171, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5171, column: 7)
!7686 = !DILocation(line: 5171, column: 7, scope: !7675)
!7687 = !DILocation(line: 5173, column: 20, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5173, column: 7)
!7689 = !DILocation(line: 5173, column: 7, scope: !7675)
!7690 = !DILocation(line: 5175, column: 20, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5175, column: 7)
!7692 = !DILocation(line: 5175, column: 7, scope: !7675)
!7693 = !DILocation(line: 5177, column: 20, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 5177, column: 7)
!7695 = !DILocation(line: 5177, column: 7, scope: !7675)
!7696 = !DILocation(line: 5179, column: 11, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 5179, column: 11)
!7698 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 5178, column: 5)
!7699 = !DILocation(line: 5179, column: 27, scope: !7697)
!7700 = !DILocation(line: 5179, column: 24, scope: !7697)
!7701 = !DILocation(line: 5179, column: 11, scope: !7698)
!7702 = !DILocation(line: 5181, column: 16, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 5181, column: 16)
!7704 = !DILocation(line: 5181, column: 39, scope: !7703)
!7705 = !DILocation(line: 0, scope: !7703)
!7706 = !DILocation(line: 5186, column: 20, scope: !7682)
!7707 = !DILocation(line: 5186, column: 7, scope: !7675)
!7708 = !DILocation(line: 5189, column: 16, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 5189, column: 7)
!7710 = !DILocation(line: 0, scope: !7681)
!7711 = !DILocation(line: 0, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 5192, column: 11)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 5190, column: 6)
!7714 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 5189, column: 7)
!7715 = !DILocation(line: 5189, column: 12, scope: !7709)
!7716 = !DILocation(line: 0, scope: !7709)
!7717 = !DILocation(line: 5189, column: 38, scope: !7714)
!7718 = !DILocation(line: 5189, column: 7, scope: !7709)
!7719 = !DILocation(line: 5190, column: 6, scope: !7713)
!7720 = !DILocation(line: 5190, column: 35, scope: !7713)
!7721 = !DILocation(line: 5190, column: 6, scope: !7714)
!7722 = !DILocation(line: 5192, column: 40, scope: !7712)
!7723 = !DILocation(line: 5193, column: 4, scope: !7712)
!7724 = !DILocation(line: 5193, column: 7, scope: !7712)
!7725 = !DILocation(line: 5193, column: 36, scope: !7712)
!7726 = !DILocation(line: 5192, column: 11, scope: !7713)
!7727 = !DILocation(line: 5195, column: 11, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 5195, column: 11)
!7729 = !DILocation(line: 5195, column: 40, scope: !7728)
!7730 = !DILocation(line: 5196, column: 4, scope: !7728)
!7731 = !DILocation(line: 5196, column: 7, scope: !7728)
!7732 = !DILocation(line: 5196, column: 46, scope: !7728)
!7733 = !DILocation(line: 5195, column: 11, scope: !7712)
!7734 = !DILocation(line: 5189, column: 7, scope: !7714)
!7735 = distinct !{!7735, !7718, !7736}
!7736 = !DILocation(line: 5197, column: 11, scope: !7709)
!7737 = !DILocation(line: 5199, column: 3, scope: !7675)
!7738 = !DILocation(line: 5200, column: 1, scope: !7675)
!7739 = distinct !DISubprogram(name: "push_to_sequence", scope: !3, file: !3, line: 5273, type: !3529, scopeLine: 5274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7740)
!7740 = !{!7741, !7742}
!7741 = !DILocalVariable(name: "first", arg: 1, scope: !7739, file: !3, line: 5273, type: !787)
!7742 = !DILocalVariable(name: "last", scope: !7739, file: !3, line: 5275, type: !787)
!7743 = !DILocation(line: 0, scope: !7739)
!7744 = !DILocation(line: 5277, column: 3, scope: !7739)
!7745 = !DILocation(line: 5279, column: 8, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 5279, column: 3)
!7747 = !DILocation(line: 0, scope: !7746)
!7748 = !DILocation(line: 5279, column: 22, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 5279, column: 3)
!7750 = !DILocation(line: 5279, column: 27, scope: !7749)
!7751 = !DILocation(line: 5279, column: 30, scope: !7749)
!7752 = !DILocation(line: 5279, column: 3, scope: !7746)
!7753 = !DILocation(line: 5279, column: 3, scope: !7749)
!7754 = distinct !{!7754, !7752, !7755}
!7755 = !DILocation(line: 5279, column: 72, scope: !7746)
!7756 = !DILocation(line: 5281, column: 14, scope: !7739)
!7757 = !DILocation(line: 5282, column: 13, scope: !7739)
!7758 = !DILocation(line: 5283, column: 1, scope: !7739)
!7759 = distinct !DISubprogram(name: "push_to_sequence2", scope: !3, file: !3, line: 5289, type: !3249, scopeLine: 5290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7760)
!7760 = !{!7761, !7762}
!7761 = !DILocalVariable(name: "first", arg: 1, scope: !7759, file: !3, line: 5289, type: !787)
!7762 = !DILocalVariable(name: "last", arg: 2, scope: !7759, file: !3, line: 5289, type: !787)
!7763 = !DILocation(line: 0, scope: !7759)
!7764 = !DILocation(line: 5291, column: 3, scope: !7759)
!7765 = !DILocation(line: 5293, column: 14, scope: !7759)
!7766 = !DILocation(line: 5294, column: 13, scope: !7759)
!7767 = !DILocation(line: 5295, column: 1, scope: !7759)
!7768 = distinct !DISubprogram(name: "push_topmost_sequence", scope: !3, file: !3, line: 5301, type: !5052, scopeLine: 5302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7769)
!7769 = !{!7770, !7771}
!7770 = !DILocalVariable(name: "stack", scope: !7768, file: !3, line: 5303, type: !1825)
!7771 = !DILocalVariable(name: "top", scope: !7768, file: !3, line: 5303, type: !1825)
!7772 = !DILocation(line: 0, scope: !7768)
!7773 = !DILocation(line: 5305, column: 3, scope: !7768)
!7774 = !DILocation(line: 5307, column: 8, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 5307, column: 3)
!7776 = !DILocation(line: 0, scope: !7775)
!7777 = !DILocation(line: 5307, column: 3, scope: !7775)
!7778 = !DILocation(line: 5307, column: 49, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 5307, column: 3)
!7780 = !DILocation(line: 5307, column: 3, scope: !7779)
!7781 = distinct !{!7781, !7777, !7782}
!7782 = !DILocation(line: 5308, column: 11, scope: !7775)
!7783 = !DILocation(line: 5310, column: 21, scope: !7768)
!7784 = !DILocation(line: 5310, column: 14, scope: !7768)
!7785 = !DILocation(line: 5311, column: 20, scope: !7768)
!7786 = !DILocation(line: 5311, column: 13, scope: !7768)
!7787 = !DILocation(line: 5312, column: 1, scope: !7768)
!7788 = distinct !DISubprogram(name: "pop_topmost_sequence", scope: !3, file: !3, line: 5318, type: !5052, scopeLine: 5319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7789)
!7789 = !{!7790, !7791}
!7790 = !DILocalVariable(name: "stack", scope: !7788, file: !3, line: 5320, type: !1825)
!7791 = !DILocalVariable(name: "top", scope: !7788, file: !3, line: 5320, type: !1825)
!7792 = !DILocation(line: 0, scope: !7788)
!7793 = !DILocation(line: 5322, column: 8, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 5322, column: 3)
!7795 = !DILocation(line: 0, scope: !7794)
!7796 = !DILocation(line: 5322, column: 3, scope: !7794)
!7797 = !DILocation(line: 5322, column: 49, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 5322, column: 3)
!7799 = !DILocation(line: 5322, column: 3, scope: !7798)
!7800 = distinct !{!7800, !7796, !7801}
!7801 = !DILocation(line: 5323, column: 11, scope: !7794)
!7802 = !DILocation(line: 5325, column: 16, scope: !7788)
!7803 = !DILocation(line: 5325, column: 14, scope: !7788)
!7804 = !DILocation(line: 5326, column: 15, scope: !7788)
!7805 = !DILocation(line: 5326, column: 8, scope: !7788)
!7806 = !DILocation(line: 5326, column: 13, scope: !7788)
!7807 = !DILocation(line: 5328, column: 3, scope: !7788)
!7808 = !DILocation(line: 5329, column: 1, scope: !7788)
!7809 = distinct !DISubprogram(name: "in_sequence_p", scope: !3, file: !3, line: 5361, type: !2200, scopeLine: 5362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!7810 = !DILocation(line: 5363, column: 10, scope: !7809)
!7811 = !DILocation(line: 5363, column: 20, scope: !7809)
!7812 = !DILocation(line: 5363, column: 3, scope: !7809)
!7813 = distinct !DISubprogram(name: "copy_insn_1", scope: !3, file: !3, line: 5407, type: !2687, scopeLine: 5408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7814)
!7814 = !{!7815, !7816, !7817, !7818, !7819, !7820}
!7815 = !DILocalVariable(name: "orig", arg: 1, scope: !7813, file: !3, line: 5407, type: !787)
!7816 = !DILocalVariable(name: "copy", scope: !7813, file: !3, line: 5409, type: !787)
!7817 = !DILocalVariable(name: "i", scope: !7813, file: !3, line: 5410, type: !778)
!7818 = !DILocalVariable(name: "j", scope: !7813, file: !3, line: 5410, type: !778)
!7819 = !DILocalVariable(name: "code", scope: !7813, file: !3, line: 5411, type: !399)
!7820 = !DILocalVariable(name: "format_ptr", scope: !7813, file: !3, line: 5412, type: !783)
!7821 = !DILocation(line: 0, scope: !7813)
!7822 = !DILocation(line: 5414, column: 12, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 5414, column: 7)
!7824 = !DILocation(line: 5414, column: 7, scope: !7813)
!7825 = !DILocation(line: 5417, column: 10, scope: !7813)
!7826 = !DILocation(line: 5419, column: 3, scope: !7813)
!7827 = !DILocation(line: 0, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 5437, column: 7)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 5437, column: 7)
!7830 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 5420, column: 5)
!7831 = !DILocation(line: 5437, column: 7, scope: !7829)
!7832 = !DILocation(line: 5432, column: 11, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 5432, column: 11)
!7834 = !DILocation(line: 5432, column: 34, scope: !7833)
!7835 = !DILocation(line: 5432, column: 37, scope: !7833)
!7836 = !DILocation(line: 5432, column: 60, scope: !7833)
!7837 = !DILocation(line: 5432, column: 11, scope: !7830)
!7838 = !DILocation(line: 0, scope: !7829)
!7839 = !DILocation(line: 5437, column: 21, scope: !7828)
!7840 = !DILocation(line: 5438, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 5438, column: 6)
!7842 = !DILocation(line: 5438, column: 30, scope: !7841)
!7843 = !DILocation(line: 5438, column: 6, scope: !7828)
!7844 = !DILocation(line: 5439, column: 11, scope: !7841)
!7845 = !DILocation(line: 5439, column: 4, scope: !7841)
!7846 = !DILocation(line: 5437, column: 47, scope: !7828)
!7847 = !DILocation(line: 5437, column: 7, scope: !7828)
!7848 = distinct !{!7848, !7831, !7849}
!7849 = !DILocation(line: 5439, column: 34, scope: !7829)
!7850 = !DILocation(line: 5443, column: 11, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 5443, column: 11)
!7852 = !DILocation(line: 5443, column: 11, scope: !7830)
!7853 = !DILocation(line: 5460, column: 10, scope: !7813)
!7854 = !DILocation(line: 5464, column: 3, scope: !7813)
!7855 = !DILocation(line: 5464, column: 25, scope: !7813)
!7856 = !DILocation(line: 5467, column: 7, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 5467, column: 7)
!7858 = !DILocation(line: 5467, column: 7, scope: !7813)
!7859 = !DILocation(line: 5471, column: 38, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 5468, column: 5)
!7861 = !DILocation(line: 5472, column: 5, scope: !7860)
!7862 = !DILocation(line: 5474, column: 16, scope: !7813)
!7863 = !DILocation(line: 0, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 5486, column: 6)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 5478, column: 7)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 5476, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 5476, column: 3)
!7868 = !DILocation(line: 0, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 5491, column: 4)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 5490, column: 11)
!7871 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 5488, column: 11)
!7872 = !DILocation(line: 5476, column: 8, scope: !7867)
!7873 = !DILocation(line: 5476, column: 19, scope: !7866)
!7874 = !DILocation(line: 5476, column: 17, scope: !7866)
!7875 = !DILocation(line: 5476, column: 3, scope: !7867)
!7876 = !DILocation(line: 5477, column: 24, scope: !7866)
!7877 = !DILocation(line: 5477, column: 13, scope: !7866)
!7878 = !DILocation(line: 5477, column: 5, scope: !7866)
!7879 = !DILocation(line: 5480, column: 6, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 5480, column: 6)
!7881 = !DILocation(line: 5480, column: 21, scope: !7880)
!7882 = !DILocation(line: 5480, column: 6, scope: !7865)
!7883 = !DILocation(line: 5481, column: 21, scope: !7880)
!7884 = !DILocation(line: 5481, column: 4, scope: !7880)
!7885 = !DILocation(line: 5481, column: 19, scope: !7880)
!7886 = !DILocation(line: 5486, column: 6, scope: !7864)
!7887 = !DILocation(line: 5486, column: 24, scope: !7864)
!7888 = !DILocation(line: 5486, column: 21, scope: !7864)
!7889 = !DILocation(line: 5486, column: 6, scope: !7865)
!7890 = !DILocation(line: 5487, column: 21, scope: !7864)
!7891 = !DILocation(line: 5487, column: 4, scope: !7864)
!7892 = !DILocation(line: 5487, column: 19, scope: !7864)
!7893 = !DILocation(line: 5488, column: 29, scope: !7871)
!7894 = !DILocation(line: 5488, column: 26, scope: !7871)
!7895 = !DILocation(line: 5488, column: 11, scope: !7864)
!7896 = !DILocation(line: 5489, column: 21, scope: !7871)
!7897 = !DILocation(line: 5489, column: 4, scope: !7871)
!7898 = !DILocation(line: 5489, column: 19, scope: !7871)
!7899 = !DILocation(line: 5490, column: 26, scope: !7870)
!7900 = !DILocation(line: 5490, column: 11, scope: !7871)
!7901 = !DILocation(line: 5492, column: 36, scope: !7869)
!7902 = !DILocation(line: 5492, column: 23, scope: !7869)
!7903 = !DILocation(line: 5492, column: 6, scope: !7869)
!7904 = !DILocation(line: 5492, column: 21, scope: !7869)
!7905 = !DILocation(line: 5493, column: 11, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 5493, column: 6)
!7907 = !DILocation(line: 5493, column: 22, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 5493, column: 6)
!7909 = !DILocation(line: 5493, column: 20, scope: !7908)
!7910 = !DILocation(line: 5493, column: 6, scope: !7906)
!7911 = !DILocation(line: 5494, column: 44, scope: !7908)
!7912 = !DILocation(line: 5494, column: 31, scope: !7908)
!7913 = !DILocation(line: 5494, column: 8, scope: !7908)
!7914 = !DILocation(line: 5494, column: 29, scope: !7908)
!7915 = !DILocation(line: 5493, column: 42, scope: !7908)
!7916 = !DILocation(line: 5493, column: 6, scope: !7908)
!7917 = distinct !{!7917, !7910, !7918}
!7918 = !DILocation(line: 5494, column: 64, scope: !7906)
!7919 = !DILocation(line: 5509, column: 2, scope: !7865)
!7920 = !DILocation(line: 5510, column: 7, scope: !7865)
!7921 = !DILocation(line: 5476, column: 54, scope: !7866)
!7922 = !DILocation(line: 5476, column: 3, scope: !7866)
!7923 = distinct !{!7923, !7875, !7924}
!7924 = !DILocation(line: 5510, column: 7, scope: !7867)
!7925 = !DILocation(line: 5512, column: 7, scope: !7813)
!7926 = !DILocation(line: 5514, column: 32, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 5513, column: 5)
!7928 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 5512, column: 7)
!7929 = !DILocation(line: 5515, column: 7, scope: !7927)
!7930 = !DILocation(line: 5516, column: 7, scope: !7927)
!7931 = !DILocation(line: 5516, column: 31, scope: !7927)
!7932 = !DILocation(line: 5517, column: 7, scope: !7927)
!7933 = !DILocation(line: 5517, column: 32, scope: !7927)
!7934 = !DILocation(line: 5518, column: 5, scope: !7927)
!7935 = !DILocation(line: 5521, column: 34, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 5520, column: 5)
!7937 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 5519, column: 12)
!7938 = !DILocation(line: 5521, column: 32, scope: !7936)
!7939 = !DILocation(line: 5522, column: 34, scope: !7936)
!7940 = !DILocation(line: 5522, column: 32, scope: !7936)
!7941 = !DILocation(line: 5523, column: 37, scope: !7936)
!7942 = !DILocation(line: 5523, column: 35, scope: !7936)
!7943 = !DILocation(line: 5524, column: 37, scope: !7936)
!7944 = !DILocation(line: 5524, column: 35, scope: !7936)
!7945 = !DILocation(line: 5525, column: 5, scope: !7936)
!7946 = !DILocation(line: 5528, column: 1, scope: !7813)
!7947 = distinct !DISubprogram(name: "copy_insn", scope: !3, file: !3, line: 5536, type: !2687, scopeLine: 5537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7948)
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "insn", arg: 1, scope: !7947, file: !3, line: 5536, type: !787)
!7950 = !DILocation(line: 0, scope: !7947)
!7951 = !DILocation(line: 5538, column: 25, scope: !7947)
!7952 = !DILocation(line: 5539, column: 28, scope: !7947)
!7953 = !DILocation(line: 5540, column: 31, scope: !7947)
!7954 = !DILocation(line: 5541, column: 28, scope: !7947)
!7955 = !DILocation(line: 5542, column: 31, scope: !7947)
!7956 = !DILocation(line: 5543, column: 10, scope: !7947)
!7957 = !DILocation(line: 5543, column: 3, scope: !7947)
!7958 = distinct !DISubprogram(name: "init_emit", scope: !3, file: !3, line: 5550, type: !5052, scopeLine: 5551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!7959 = !DILocation(line: 5552, column: 14, scope: !7958)
!7960 = !DILocation(line: 5553, column: 13, scope: !7958)
!7961 = !DILocation(line: 5554, column: 7, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 5554, column: 7)
!7963 = !DILocation(line: 5554, column: 7, scope: !7958)
!7964 = !DILocation(line: 5555, column: 5, scope: !7962)
!7965 = !DILocation(line: 0, scope: !7962)
!7966 = !DILocation(line: 5558, column: 22, scope: !7958)
!7967 = !DILocation(line: 5559, column: 14, scope: !7958)
!7968 = !DILocation(line: 5560, column: 17, scope: !7958)
!7969 = !DILocation(line: 5561, column: 21, scope: !7958)
!7970 = !DILocation(line: 5561, column: 19, scope: !7958)
!7971 = !DILocation(line: 5562, column: 13, scope: !7958)
!7972 = !DILocation(line: 5566, column: 41, scope: !7958)
!7973 = !DILocation(line: 5569, column: 7, scope: !7958)
!7974 = !DILocation(line: 5569, column: 5, scope: !7958)
!7975 = !DILocation(line: 5572, column: 7, scope: !7958)
!7976 = !DILocation(line: 5572, column: 5, scope: !7958)
!7977 = !DILocation(line: 5575, column: 3, scope: !7958)
!7978 = !DILocation(line: 5580, column: 3, scope: !7958)
!7979 = !DILocation(line: 5584, column: 3, scope: !7958)
!7980 = !DILocation(line: 5584, column: 35, scope: !7958)
!7981 = !DILocation(line: 5585, column: 3, scope: !7958)
!7982 = !DILocation(line: 5585, column: 35, scope: !7958)
!7983 = !DILocation(line: 5586, column: 3, scope: !7958)
!7984 = !DILocation(line: 5586, column: 40, scope: !7958)
!7985 = !DILocation(line: 5587, column: 3, scope: !7958)
!7986 = !DILocation(line: 5587, column: 33, scope: !7958)
!7987 = !DILocation(line: 5589, column: 3, scope: !7958)
!7988 = !DILocation(line: 5589, column: 43, scope: !7958)
!7989 = !DILocation(line: 5590, column: 3, scope: !7958)
!7990 = !DILocation(line: 5590, column: 40, scope: !7958)
!7991 = !DILocation(line: 5591, column: 3, scope: !7958)
!7992 = !DILocation(line: 5591, column: 43, scope: !7958)
!7993 = !DILocation(line: 5592, column: 3, scope: !7958)
!7994 = !DILocation(line: 5592, column: 43, scope: !7958)
!7995 = !DILocation(line: 5593, column: 3, scope: !7958)
!7996 = !DILocation(line: 5593, column: 33, scope: !7958)
!7997 = !DILocation(line: 5596, column: 3, scope: !7958)
!7998 = !DILocation(line: 5596, column: 46, scope: !7958)
!7999 = !DILocation(line: 5597, column: 3, scope: !7958)
!8000 = !DILocation(line: 5597, column: 46, scope: !7958)
!8001 = !DILocation(line: 5598, column: 3, scope: !7958)
!8002 = !DILocation(line: 5598, column: 51, scope: !7958)
!8003 = !DILocation(line: 5599, column: 3, scope: !7958)
!8004 = !DILocation(line: 5599, column: 44, scope: !7958)
!8005 = !DILocation(line: 5601, column: 3, scope: !7958)
!8006 = !DILocation(line: 5601, column: 54, scope: !7958)
!8007 = !DILocation(line: 5602, column: 3, scope: !7958)
!8008 = !DILocation(line: 5602, column: 51, scope: !7958)
!8009 = !DILocation(line: 5603, column: 3, scope: !7958)
!8010 = !DILocation(line: 5603, column: 54, scope: !7958)
!8011 = !DILocation(line: 5604, column: 3, scope: !7958)
!8012 = !DILocation(line: 5604, column: 54, scope: !7958)
!8013 = !DILocation(line: 5605, column: 3, scope: !7958)
!8014 = !DILocation(line: 5605, column: 44, scope: !7958)
!8015 = !DILocation(line: 5611, column: 1, scope: !7958)
!8016 = distinct !DISubprogram(name: "init_virtual_regs", scope: !3, file: !3, line: 5369, type: !5052, scopeLine: 5370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!8017 = !DILocation(line: 5371, column: 49, scope: !8016)
!8018 = !DILocation(line: 5371, column: 3, scope: !8016)
!8019 = !DILocation(line: 5371, column: 47, scope: !8016)
!8020 = !DILocation(line: 5372, column: 46, scope: !8016)
!8021 = !DILocation(line: 5372, column: 3, scope: !8016)
!8022 = !DILocation(line: 5372, column: 44, scope: !8016)
!8023 = !DILocation(line: 5373, column: 49, scope: !8016)
!8024 = !DILocation(line: 5373, column: 3, scope: !8016)
!8025 = !DILocation(line: 5373, column: 47, scope: !8016)
!8026 = !DILocation(line: 5374, column: 49, scope: !8016)
!8027 = !DILocation(line: 5374, column: 3, scope: !8016)
!8028 = !DILocation(line: 5374, column: 47, scope: !8016)
!8029 = !DILocation(line: 5375, column: 39, scope: !8016)
!8030 = !DILocation(line: 5375, column: 3, scope: !8016)
!8031 = !DILocation(line: 5375, column: 37, scope: !8016)
!8032 = !DILocation(line: 5376, column: 1, scope: !8016)
!8033 = distinct !DISubprogram(name: "gen_rtx_CONST_VECTOR", scope: !3, file: !3, line: 5644, type: !8034, scopeLine: 5645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8036)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!787, !5, !815}
!8036 = !{!8037, !8038, !8039, !8040, !8041, !8042}
!8037 = !DILocalVariable(name: "mode", arg: 1, scope: !8033, file: !3, line: 5644, type: !5)
!8038 = !DILocalVariable(name: "v", arg: 2, scope: !8033, file: !3, line: 5644, type: !815)
!8039 = !DILocalVariable(name: "inner", scope: !8033, file: !3, line: 5646, type: !5)
!8040 = !DILocalVariable(name: "nunits", scope: !8033, file: !3, line: 5647, type: !778)
!8041 = !DILocalVariable(name: "x", scope: !8033, file: !3, line: 5648, type: !787)
!8042 = !DILocalVariable(name: "i", scope: !8033, file: !3, line: 5649, type: !778)
!8043 = !DILocation(line: 0, scope: !8033)
!8044 = !DILocation(line: 5646, column: 29, scope: !8033)
!8045 = !DILocation(line: 5647, column: 16, scope: !8033)
!8046 = !DILocation(line: 5652, column: 7, scope: !8033)
!8047 = !DILocation(line: 5653, column: 8, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 5653, column: 3)
!8049 = !DILocation(line: 0, scope: !8048)
!8050 = !DILocation(line: 5653, column: 26, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 5653, column: 3)
!8052 = !DILocation(line: 5653, column: 3, scope: !8048)
!8053 = !DILocation(line: 5654, column: 9, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 5654, column: 9)
!8055 = !DILocation(line: 5654, column: 26, scope: !8054)
!8056 = !DILocation(line: 5654, column: 9, scope: !8051)
!8057 = !DILocation(line: 5653, column: 33, scope: !8051)
!8058 = !DILocation(line: 5653, column: 3, scope: !8051)
!8059 = distinct !{!8059, !8052, !8060}
!8060 = !DILocation(line: 5655, column: 7, scope: !8048)
!8061 = !DILocation(line: 5659, column: 9, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 5659, column: 7)
!8063 = !DILocation(line: 5659, column: 7, scope: !8033)
!8064 = !DILocation(line: 5661, column: 16, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 5661, column: 11)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 5660, column: 5)
!8067 = !DILocation(line: 5661, column: 13, scope: !8065)
!8068 = !DILocation(line: 5661, column: 11, scope: !8066)
!8069 = !DILocation(line: 5662, column: 9, scope: !8065)
!8070 = !DILocation(line: 5662, column: 2, scope: !8065)
!8071 = !DILocation(line: 5663, column: 21, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 5663, column: 16)
!8073 = !DILocation(line: 5663, column: 18, scope: !8072)
!8074 = !DILocation(line: 5663, column: 16, scope: !8065)
!8075 = !DILocation(line: 5664, column: 9, scope: !8072)
!8076 = !DILocation(line: 5664, column: 2, scope: !8072)
!8077 = !DILocation(line: 5667, column: 10, scope: !8033)
!8078 = !DILocation(line: 5667, column: 3, scope: !8033)
!8079 = !DILocation(line: 5668, column: 1, scope: !8033)
!8080 = distinct !DISubprogram(name: "init_emit_regs", scope: !3, file: !3, line: 5673, type: !5052, scopeLine: 5674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8081)
!8081 = !{!8082}
!8082 = !DILocalVariable(name: "i", scope: !8080, file: !3, line: 5675, type: !778)
!8083 = !DILocation(line: 5678, column: 15, scope: !8080)
!8084 = !DILocation(line: 5678, column: 3, scope: !8080)
!8085 = !DILocation(line: 5681, column: 3, scope: !8080)
!8086 = !DILocation(line: 5684, column: 12, scope: !8080)
!8087 = !DILocation(line: 5684, column: 10, scope: !8080)
!8088 = !DILocation(line: 5685, column: 13, scope: !8080)
!8089 = !DILocation(line: 5685, column: 11, scope: !8080)
!8090 = !DILocation(line: 5686, column: 23, scope: !8080)
!8091 = !DILocation(line: 5686, column: 21, scope: !8080)
!8092 = !DILocation(line: 5687, column: 23, scope: !8080)
!8093 = !DILocation(line: 5687, column: 21, scope: !8080)
!8094 = !DILocation(line: 5688, column: 28, scope: !8080)
!8095 = !DILocation(line: 5688, column: 26, scope: !8080)
!8096 = !DILocation(line: 5689, column: 21, scope: !8080)
!8097 = !DILocation(line: 5689, column: 19, scope: !8080)
!8098 = !DILocation(line: 5691, column: 5, scope: !8080)
!8099 = !DILocation(line: 5690, column: 29, scope: !8080)
!8100 = !DILocation(line: 5693, column: 5, scope: !8080)
!8101 = !DILocation(line: 5692, column: 26, scope: !8080)
!8102 = !DILocation(line: 5695, column: 5, scope: !8080)
!8103 = !DILocation(line: 5694, column: 29, scope: !8080)
!8104 = !DILocation(line: 5697, column: 5, scope: !8080)
!8105 = !DILocation(line: 5696, column: 29, scope: !8080)
!8106 = !DILocation(line: 5698, column: 21, scope: !8080)
!8107 = !DILocation(line: 5698, column: 19, scope: !8080)
!8108 = !DILocation(line: 0, scope: !8080)
!8109 = !DILocation(line: 5702, column: 8, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 5702, column: 3)
!8111 = !DILocation(line: 0, scope: !8110)
!8112 = !DILocation(line: 5702, column: 17, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 5702, column: 3)
!8114 = !DILocation(line: 5702, column: 3, scope: !8110)
!8115 = !DILocation(line: 5703, column: 44, scope: !8113)
!8116 = !DILocation(line: 5703, column: 31, scope: !8113)
!8117 = !DILocation(line: 5703, column: 5, scope: !8113)
!8118 = !DILocation(line: 5703, column: 29, scope: !8113)
!8119 = !DILocation(line: 5702, column: 43, scope: !8113)
!8120 = !DILocation(line: 5702, column: 3, scope: !8113)
!8121 = distinct !{!8121, !8114, !8122}
!8122 = !DILocation(line: 5703, column: 62, scope: !8110)
!8123 = !DILocation(line: 5710, column: 18, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 5710, column: 7)
!8125 = !DILocation(line: 5710, column: 7, scope: !8080)
!8126 = !DILocation(line: 5711, column: 48, scope: !8124)
!8127 = !DILocation(line: 5711, column: 28, scope: !8124)
!8128 = !DILocation(line: 5711, column: 5, scope: !8124)
!8129 = !DILocation(line: 0, scope: !8124)
!8130 = !DILocation(line: 5714, column: 1, scope: !8080)
!8131 = distinct !DISubprogram(name: "init_emit_once", scope: !3, file: !3, line: 5719, type: !5052, scopeLine: 5720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8132)
!8132 = !{!8133, !8134, !8135, !8136, !8141, !8145}
!8133 = !DILocalVariable(name: "i", scope: !8131, file: !3, line: 5721, type: !778)
!8134 = !DILocalVariable(name: "mode", scope: !8131, file: !3, line: 5722, type: !5)
!8135 = !DILocalVariable(name: "double_mode", scope: !8131, file: !3, line: 5723, type: !5)
!8136 = !DILocalVariable(name: "r", scope: !8137, file: !3, line: 5805, type: !8140)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 5804, column: 5)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 5803, column: 3)
!8139 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5803, column: 3)
!8140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!8141 = !DILocalVariable(name: "inner", scope: !8142, file: !3, line: 5837, type: !787)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 5836, column: 5)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 5833, column: 3)
!8144 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5833, column: 3)
!8145 = !DILocalVariable(name: "inner", scope: !8146, file: !3, line: 5845, type: !787)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 5844, column: 5)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 5841, column: 3)
!8148 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5841, column: 3)
!8149 = !DILocation(line: 5727, column: 20, scope: !8131)
!8150 = !DILocation(line: 5727, column: 18, scope: !8131)
!8151 = !DILocation(line: 5730, column: 23, scope: !8131)
!8152 = !DILocation(line: 5730, column: 21, scope: !8131)
!8153 = !DILocation(line: 5733, column: 22, scope: !8131)
!8154 = !DILocation(line: 5733, column: 20, scope: !8131)
!8155 = !DILocation(line: 5736, column: 20, scope: !8131)
!8156 = !DILocation(line: 5736, column: 18, scope: !8131)
!8157 = !DILocation(line: 5738, column: 20, scope: !8131)
!8158 = !DILocation(line: 5738, column: 18, scope: !8131)
!8159 = !DILocation(line: 5743, column: 13, scope: !8131)
!8160 = !DILocation(line: 5744, column: 13, scope: !8131)
!8161 = !DILocation(line: 0, scope: !8131)
!8162 = !DILocation(line: 5747, column: 8, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5747, column: 3)
!8164 = !DILocation(line: 0, scope: !8163)
!8165 = !DILocation(line: 5748, column: 13, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 5747, column: 3)
!8167 = !DILocation(line: 5747, column: 3, scope: !8163)
!8168 = !DILocation(line: 5751, column: 11, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 5751, column: 11)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 5750, column: 5)
!8171 = !DILocation(line: 5751, column: 35, scope: !8169)
!8172 = !DILocation(line: 5752, column: 17, scope: !8169)
!8173 = !DILocation(line: 5752, column: 4, scope: !8169)
!8174 = !DILocation(line: 5753, column: 12, scope: !8169)
!8175 = !DILocation(line: 5753, column: 2, scope: !8169)
!8176 = !DILocation(line: 5755, column: 35, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 5755, column: 11)
!8178 = !DILocation(line: 5756, column: 17, scope: !8177)
!8179 = !DILocation(line: 5756, column: 4, scope: !8177)
!8180 = !DILocation(line: 5757, column: 12, scope: !8177)
!8181 = !DILocation(line: 5757, column: 2, scope: !8177)
!8182 = !DILocation(line: 5749, column: 15, scope: !8166)
!8183 = !DILocation(line: 5747, column: 3, scope: !8166)
!8184 = distinct !{!8184, !8167, !8185}
!8185 = !DILocation(line: 5758, column: 5, scope: !8163)
!8186 = !DILocation(line: 5760, column: 8, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5760, column: 3)
!8188 = !DILocation(line: 0, scope: !8187)
!8189 = !DILocation(line: 5761, column: 13, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 5760, column: 3)
!8191 = !DILocation(line: 5760, column: 3, scope: !8187)
!8192 = !DILocation(line: 5764, column: 11, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 5764, column: 11)
!8194 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 5763, column: 5)
!8195 = !DILocation(line: 5764, column: 35, scope: !8193)
!8196 = !DILocation(line: 5765, column: 19, scope: !8193)
!8197 = !DILocation(line: 5765, column: 4, scope: !8193)
!8198 = !DILocation(line: 5762, column: 15, scope: !8190)
!8199 = !DILocation(line: 5760, column: 3, scope: !8190)
!8200 = distinct !{!8200, !8191, !8201}
!8201 = !DILocation(line: 5767, column: 5, scope: !8187)
!8202 = !DILocation(line: 5769, column: 43, scope: !8131)
!8203 = !DILocation(line: 5769, column: 14, scope: !8131)
!8204 = !DILocation(line: 5769, column: 12, scope: !8131)
!8205 = !DILocation(line: 5783, column: 8, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5783, column: 3)
!8207 = !DILocation(line: 0, scope: !8206)
!8208 = !DILocation(line: 5783, column: 37, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 5783, column: 3)
!8210 = !DILocation(line: 5783, column: 3, scope: !8206)
!8211 = !DILocation(line: 5785, column: 7, scope: !8209)
!8212 = !DILocation(line: 5784, column: 21, scope: !8209)
!8213 = !DILocation(line: 5784, column: 5, scope: !8209)
!8214 = !DILocation(line: 5784, column: 44, scope: !8209)
!8215 = !DILocation(line: 5783, column: 62, scope: !8209)
!8216 = !DILocation(line: 5783, column: 3, scope: !8209)
!8217 = distinct !{!8217, !8210, !8218}
!8218 = !DILocation(line: 5785, column: 7, scope: !8206)
!8219 = !DILocation(line: 5789, column: 22, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5787, column: 7)
!8221 = !DILocation(line: 5789, column: 20, scope: !8220)
!8222 = !DILocation(line: 5793, column: 3, scope: !8131)
!8223 = !DILocation(line: 5794, column: 3, scope: !8131)
!8224 = !DILocation(line: 5795, column: 3, scope: !8131)
!8225 = !DILocation(line: 5797, column: 14, scope: !8131)
!8226 = !DILocation(line: 5798, column: 17, scope: !8131)
!8227 = !DILocation(line: 5800, column: 16, scope: !8131)
!8228 = !DILocation(line: 5801, column: 3, scope: !8131)
!8229 = !DILocation(line: 5803, column: 8, scope: !8139)
!8230 = !DILocation(line: 0, scope: !8139)
!8231 = !DILocation(line: 5803, column: 17, scope: !8138)
!8232 = !DILocation(line: 5803, column: 3, scope: !8139)
!8233 = !DILocation(line: 5806, column: 5, scope: !8137)
!8234 = !DILocation(line: 5806, column: 3, scope: !8137)
!8235 = !DILocation(line: 5806, column: 25, scope: !8137)
!8236 = !DILocation(line: 5806, column: 23, scope: !8137)
!8237 = !DILocation(line: 0, scope: !8137)
!8238 = !DILocation(line: 5808, column: 12, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 5808, column: 7)
!8240 = !DILocation(line: 0, scope: !8239)
!8241 = !DILocation(line: 5809, column: 10, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 5808, column: 7)
!8243 = !DILocation(line: 5808, column: 7, scope: !8239)
!8244 = !DILocation(line: 5812, column: 4, scope: !8242)
!8245 = !DILocation(line: 5811, column: 2, scope: !8242)
!8246 = !DILocation(line: 5811, column: 32, scope: !8242)
!8247 = !DILocation(line: 5810, column: 12, scope: !8242)
!8248 = !DILocation(line: 5808, column: 7, scope: !8242)
!8249 = distinct !{!8249, !8243, !8250}
!8250 = !DILocation(line: 5812, column: 4, scope: !8239)
!8251 = !DILocation(line: 5814, column: 12, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 5814, column: 7)
!8253 = !DILocation(line: 0, scope: !8252)
!8254 = !DILocation(line: 5815, column: 10, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 5814, column: 7)
!8256 = !DILocation(line: 5814, column: 7, scope: !8252)
!8257 = !DILocation(line: 5818, column: 4, scope: !8255)
!8258 = !DILocation(line: 5817, column: 2, scope: !8255)
!8259 = !DILocation(line: 5817, column: 32, scope: !8255)
!8260 = !DILocation(line: 5816, column: 12, scope: !8255)
!8261 = !DILocation(line: 5814, column: 7, scope: !8255)
!8262 = distinct !{!8262, !8256, !8263}
!8263 = !DILocation(line: 5818, column: 4, scope: !8252)
!8264 = !DILocation(line: 5820, column: 43, scope: !8137)
!8265 = !DILocation(line: 5820, column: 7, scope: !8137)
!8266 = !DILocation(line: 5820, column: 41, scope: !8137)
!8267 = !DILocation(line: 5822, column: 12, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 5822, column: 7)
!8269 = !DILocation(line: 0, scope: !8268)
!8270 = !DILocation(line: 5823, column: 10, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 5822, column: 7)
!8272 = !DILocation(line: 5822, column: 7, scope: !8268)
!8273 = !DILocation(line: 5825, column: 34, scope: !8271)
!8274 = !DILocation(line: 5825, column: 2, scope: !8271)
!8275 = !DILocation(line: 5825, column: 32, scope: !8271)
!8276 = !DILocation(line: 5824, column: 12, scope: !8271)
!8277 = !DILocation(line: 5822, column: 7, scope: !8271)
!8278 = distinct !{!8278, !8272, !8279}
!8279 = !DILocation(line: 5825, column: 34, scope: !8268)
!8280 = !DILocation(line: 5827, column: 12, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 5827, column: 7)
!8282 = !DILocation(line: 0, scope: !8281)
!8283 = !DILocation(line: 5828, column: 10, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 5827, column: 7)
!8285 = !DILocation(line: 5827, column: 7, scope: !8281)
!8286 = !DILocation(line: 5830, column: 34, scope: !8284)
!8287 = !DILocation(line: 5830, column: 2, scope: !8284)
!8288 = !DILocation(line: 5830, column: 32, scope: !8284)
!8289 = !DILocation(line: 5829, column: 12, scope: !8284)
!8290 = !DILocation(line: 5827, column: 7, scope: !8284)
!8291 = distinct !{!8291, !8285, !8292}
!8292 = !DILocation(line: 5830, column: 34, scope: !8281)
!8293 = !DILocation(line: 5803, column: 55, scope: !8138)
!8294 = !DILocation(line: 5803, column: 3, scope: !8138)
!8295 = distinct !{!8295, !8232, !8296}
!8296 = !DILocation(line: 5831, column: 5, scope: !8139)
!8297 = !DILocation(line: 5833, column: 8, scope: !8144)
!8298 = !DILocation(line: 0, scope: !8144)
!8299 = !DILocation(line: 5834, column: 13, scope: !8143)
!8300 = !DILocation(line: 5833, column: 3, scope: !8144)
!8301 = !DILocation(line: 5837, column: 42, scope: !8142)
!8302 = !DILocation(line: 5837, column: 19, scope: !8142)
!8303 = !DILocation(line: 0, scope: !8142)
!8304 = !DILocation(line: 5838, column: 39, scope: !8142)
!8305 = !DILocation(line: 5838, column: 7, scope: !8142)
!8306 = !DILocation(line: 5838, column: 37, scope: !8142)
!8307 = !DILocation(line: 5835, column: 15, scope: !8143)
!8308 = !DILocation(line: 5833, column: 3, scope: !8143)
!8309 = distinct !{!8309, !8300, !8310}
!8310 = !DILocation(line: 5839, column: 5, scope: !8144)
!8311 = !DILocation(line: 5841, column: 8, scope: !8148)
!8312 = !DILocation(line: 0, scope: !8148)
!8313 = !DILocation(line: 5842, column: 13, scope: !8147)
!8314 = !DILocation(line: 5841, column: 3, scope: !8148)
!8315 = !DILocation(line: 5845, column: 42, scope: !8146)
!8316 = !DILocation(line: 5845, column: 19, scope: !8146)
!8317 = !DILocation(line: 0, scope: !8146)
!8318 = !DILocation(line: 5846, column: 39, scope: !8146)
!8319 = !DILocation(line: 5846, column: 7, scope: !8146)
!8320 = !DILocation(line: 5846, column: 37, scope: !8146)
!8321 = !DILocation(line: 5843, column: 15, scope: !8147)
!8322 = !DILocation(line: 5841, column: 3, scope: !8147)
!8323 = distinct !{!8323, !8314, !8324}
!8324 = !DILocation(line: 5847, column: 5, scope: !8148)
!8325 = !DILocation(line: 5849, column: 8, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5849, column: 3)
!8327 = !DILocation(line: 0, scope: !8326)
!8328 = !DILocation(line: 5850, column: 13, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 5849, column: 3)
!8330 = !DILocation(line: 5849, column: 3, scope: !8326)
!8331 = !DILocation(line: 5853, column: 39, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 5852, column: 5)
!8333 = !DILocation(line: 5853, column: 7, scope: !8332)
!8334 = !DILocation(line: 5853, column: 37, scope: !8332)
!8335 = !DILocation(line: 5854, column: 39, scope: !8332)
!8336 = !DILocation(line: 5854, column: 7, scope: !8332)
!8337 = !DILocation(line: 5854, column: 37, scope: !8332)
!8338 = !DILocation(line: 5851, column: 15, scope: !8329)
!8339 = !DILocation(line: 5849, column: 3, scope: !8329)
!8340 = distinct !{!8340, !8330, !8341}
!8341 = !DILocation(line: 5855, column: 5, scope: !8326)
!8342 = !DILocation(line: 5857, column: 8, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5857, column: 3)
!8344 = !DILocation(line: 0, scope: !8343)
!8345 = !DILocation(line: 5858, column: 13, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 5857, column: 3)
!8347 = !DILocation(line: 5857, column: 3, scope: !8343)
!8348 = !DILocation(line: 5861, column: 39, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 5860, column: 5)
!8350 = !DILocation(line: 5861, column: 7, scope: !8349)
!8351 = !DILocation(line: 5861, column: 37, scope: !8349)
!8352 = !DILocation(line: 5862, column: 39, scope: !8349)
!8353 = !DILocation(line: 5862, column: 7, scope: !8349)
!8354 = !DILocation(line: 5862, column: 37, scope: !8349)
!8355 = !DILocation(line: 5859, column: 15, scope: !8346)
!8356 = !DILocation(line: 5857, column: 3, scope: !8346)
!8357 = distinct !{!8357, !8347, !8358}
!8358 = !DILocation(line: 5863, column: 5, scope: !8343)
!8359 = !DILocation(line: 5865, column: 8, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5865, column: 3)
!8361 = !DILocation(line: 0, scope: !8360)
!8362 = !DILocation(line: 5866, column: 13, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 5865, column: 3)
!8364 = !DILocation(line: 5865, column: 3, scope: !8360)
!8365 = !DILocation(line: 5869, column: 7, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 5868, column: 5)
!8367 = !DILocation(line: 5869, column: 26, scope: !8366)
!8368 = !DILocation(line: 5869, column: 31, scope: !8366)
!8369 = !DILocation(line: 5870, column: 26, scope: !8366)
!8370 = !DILocation(line: 5870, column: 30, scope: !8366)
!8371 = !DILocation(line: 5871, column: 21, scope: !8366)
!8372 = !DILocation(line: 5871, column: 26, scope: !8366)
!8373 = !DILocation(line: 5872, column: 39, scope: !8366)
!8374 = !DILocation(line: 5872, column: 7, scope: !8366)
!8375 = !DILocation(line: 5872, column: 37, scope: !8366)
!8376 = !DILocation(line: 5867, column: 15, scope: !8363)
!8377 = !DILocation(line: 5865, column: 3, scope: !8363)
!8378 = distinct !{!8378, !8364, !8379}
!8379 = !DILocation(line: 5874, column: 5, scope: !8360)
!8380 = !DILocation(line: 5876, column: 8, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5876, column: 3)
!8382 = !DILocation(line: 0, scope: !8381)
!8383 = !DILocation(line: 5877, column: 13, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 5876, column: 3)
!8385 = !DILocation(line: 5876, column: 3, scope: !8381)
!8386 = !DILocation(line: 5880, column: 7, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 5879, column: 5)
!8388 = !DILocation(line: 5880, column: 26, scope: !8387)
!8389 = !DILocation(line: 5880, column: 31, scope: !8387)
!8390 = !DILocation(line: 5881, column: 26, scope: !8387)
!8391 = !DILocation(line: 5881, column: 30, scope: !8387)
!8392 = !DILocation(line: 5882, column: 21, scope: !8387)
!8393 = !DILocation(line: 5882, column: 26, scope: !8387)
!8394 = !DILocation(line: 5883, column: 39, scope: !8387)
!8395 = !DILocation(line: 5883, column: 7, scope: !8387)
!8396 = !DILocation(line: 5883, column: 37, scope: !8387)
!8397 = !DILocation(line: 5878, column: 15, scope: !8384)
!8398 = !DILocation(line: 5876, column: 3, scope: !8384)
!8399 = distinct !{!8399, !8385, !8400}
!8400 = !DILocation(line: 5885, column: 5, scope: !8381)
!8401 = !DILocation(line: 5887, column: 8, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5887, column: 3)
!8403 = !DILocation(line: 0, scope: !8402)
!8404 = !DILocation(line: 5888, column: 13, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 5887, column: 3)
!8406 = !DILocation(line: 5887, column: 3, scope: !8402)
!8407 = !DILocation(line: 5891, column: 7, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 5890, column: 5)
!8409 = !DILocation(line: 5891, column: 26, scope: !8408)
!8410 = !DILocation(line: 5891, column: 31, scope: !8408)
!8411 = !DILocation(line: 5892, column: 26, scope: !8408)
!8412 = !DILocation(line: 5892, column: 30, scope: !8408)
!8413 = !DILocation(line: 5893, column: 21, scope: !8408)
!8414 = !DILocation(line: 5893, column: 26, scope: !8408)
!8415 = !DILocation(line: 5894, column: 39, scope: !8408)
!8416 = !DILocation(line: 5894, column: 7, scope: !8408)
!8417 = !DILocation(line: 5894, column: 37, scope: !8408)
!8418 = !DILocation(line: 5898, column: 7, scope: !8408)
!8419 = !DILocation(line: 5898, column: 26, scope: !8408)
!8420 = !DILocation(line: 5898, column: 31, scope: !8408)
!8421 = !DILocation(line: 5899, column: 26, scope: !8408)
!8422 = !DILocation(line: 5899, column: 30, scope: !8408)
!8423 = !DILocation(line: 5900, column: 21, scope: !8408)
!8424 = !DILocation(line: 5900, column: 26, scope: !8408)
!8425 = !DILocation(line: 5901, column: 28, scope: !8408)
!8426 = !DILocation(line: 5905, column: 22, scope: !8408)
!8427 = !DILocation(line: 5901, column: 7, scope: !8408)
!8428 = !DILocation(line: 5906, column: 39, scope: !8408)
!8429 = !DILocation(line: 5906, column: 7, scope: !8408)
!8430 = !DILocation(line: 5906, column: 37, scope: !8408)
!8431 = !DILocation(line: 5889, column: 15, scope: !8405)
!8432 = !DILocation(line: 5887, column: 3, scope: !8405)
!8433 = distinct !{!8433, !8406, !8434}
!8434 = !DILocation(line: 5908, column: 5, scope: !8402)
!8435 = !DILocation(line: 5910, column: 8, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5910, column: 3)
!8437 = !DILocation(line: 0, scope: !8436)
!8438 = !DILocation(line: 5911, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 5910, column: 3)
!8440 = !DILocation(line: 5910, column: 3, scope: !8436)
!8441 = !DILocation(line: 5914, column: 7, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 5913, column: 5)
!8443 = !DILocation(line: 5914, column: 26, scope: !8442)
!8444 = !DILocation(line: 5914, column: 31, scope: !8442)
!8445 = !DILocation(line: 5915, column: 26, scope: !8442)
!8446 = !DILocation(line: 5915, column: 30, scope: !8442)
!8447 = !DILocation(line: 5916, column: 21, scope: !8442)
!8448 = !DILocation(line: 5916, column: 26, scope: !8442)
!8449 = !DILocation(line: 5917, column: 39, scope: !8442)
!8450 = !DILocation(line: 5917, column: 7, scope: !8442)
!8451 = !DILocation(line: 5917, column: 37, scope: !8442)
!8452 = !DILocation(line: 5921, column: 7, scope: !8442)
!8453 = !DILocation(line: 5921, column: 26, scope: !8442)
!8454 = !DILocation(line: 5921, column: 31, scope: !8442)
!8455 = !DILocation(line: 5922, column: 26, scope: !8442)
!8456 = !DILocation(line: 5922, column: 30, scope: !8442)
!8457 = !DILocation(line: 5923, column: 21, scope: !8442)
!8458 = !DILocation(line: 5923, column: 26, scope: !8442)
!8459 = !DILocation(line: 5924, column: 28, scope: !8442)
!8460 = !DILocation(line: 5928, column: 22, scope: !8442)
!8461 = !DILocation(line: 5924, column: 7, scope: !8442)
!8462 = !DILocation(line: 5929, column: 39, scope: !8442)
!8463 = !DILocation(line: 5929, column: 7, scope: !8442)
!8464 = !DILocation(line: 5929, column: 37, scope: !8442)
!8465 = !DILocation(line: 5912, column: 15, scope: !8439)
!8466 = !DILocation(line: 5910, column: 3, scope: !8439)
!8467 = distinct !{!8467, !8440, !8468}
!8468 = !DILocation(line: 5931, column: 5, scope: !8436)
!8469 = !DILocation(line: 5933, column: 8, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5933, column: 3)
!8471 = !DILocation(line: 0, scope: !8470)
!8472 = !DILocation(line: 5934, column: 13, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 5933, column: 3)
!8474 = !DILocation(line: 5933, column: 3, scope: !8470)
!8475 = !DILocation(line: 5937, column: 39, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 5936, column: 5)
!8477 = !DILocation(line: 5937, column: 7, scope: !8476)
!8478 = !DILocation(line: 5937, column: 37, scope: !8476)
!8479 = !DILocation(line: 5935, column: 15, scope: !8473)
!8480 = !DILocation(line: 5933, column: 3, scope: !8473)
!8481 = distinct !{!8481, !8474, !8482}
!8482 = !DILocation(line: 5938, column: 5, scope: !8470)
!8483 = !DILocation(line: 5940, column: 8, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5940, column: 3)
!8485 = !DILocation(line: 0, scope: !8484)
!8486 = !DILocation(line: 5941, column: 13, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 5940, column: 3)
!8488 = !DILocation(line: 5940, column: 3, scope: !8484)
!8489 = !DILocation(line: 5944, column: 39, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 5943, column: 5)
!8491 = !DILocation(line: 5944, column: 7, scope: !8490)
!8492 = !DILocation(line: 5944, column: 37, scope: !8490)
!8493 = !DILocation(line: 5942, column: 15, scope: !8487)
!8494 = !DILocation(line: 5940, column: 3, scope: !8487)
!8495 = distinct !{!8495, !8488, !8496}
!8496 = !DILocation(line: 5945, column: 5, scope: !8484)
!8497 = !DILocation(line: 5947, column: 8, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5947, column: 3)
!8499 = !DILocation(line: 0, scope: !8498)
!8500 = !DILocation(line: 5948, column: 13, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 5947, column: 3)
!8502 = !DILocation(line: 5947, column: 3, scope: !8498)
!8503 = !DILocation(line: 5951, column: 39, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 5950, column: 5)
!8505 = !DILocation(line: 5951, column: 7, scope: !8504)
!8506 = !DILocation(line: 5951, column: 37, scope: !8504)
!8507 = !DILocation(line: 5952, column: 39, scope: !8504)
!8508 = !DILocation(line: 5952, column: 7, scope: !8504)
!8509 = !DILocation(line: 5952, column: 37, scope: !8504)
!8510 = !DILocation(line: 5949, column: 15, scope: !8501)
!8511 = !DILocation(line: 5947, column: 3, scope: !8501)
!8512 = distinct !{!8512, !8502, !8513}
!8513 = !DILocation(line: 5953, column: 5, scope: !8498)
!8514 = !DILocation(line: 5955, column: 8, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5955, column: 3)
!8516 = !DILocation(line: 0, scope: !8515)
!8517 = !DILocation(line: 5956, column: 13, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 5955, column: 3)
!8519 = !DILocation(line: 5955, column: 3, scope: !8515)
!8520 = !DILocation(line: 0, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 5964, column: 9)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 5963, column: 3)
!8523 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5963, column: 3)
!8524 = !DILocation(line: 5963, column: 3, scope: !8523)
!8525 = !DILocation(line: 5959, column: 39, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 5958, column: 5)
!8527 = !DILocation(line: 5959, column: 7, scope: !8526)
!8528 = !DILocation(line: 5959, column: 37, scope: !8526)
!8529 = !DILocation(line: 5960, column: 39, scope: !8526)
!8530 = !DILocation(line: 5960, column: 7, scope: !8526)
!8531 = !DILocation(line: 5960, column: 37, scope: !8526)
!8532 = !DILocation(line: 5957, column: 15, scope: !8518)
!8533 = !DILocation(line: 5955, column: 3, scope: !8518)
!8534 = distinct !{!8534, !8519, !8535}
!8535 = !DILocation(line: 5961, column: 5, scope: !8515)
!8536 = !DILocation(line: 0, scope: !8523)
!8537 = !DILocation(line: 5963, column: 28, scope: !8522)
!8538 = !DILocation(line: 5964, column: 9, scope: !8521)
!8539 = !DILocation(line: 5964, column: 48, scope: !8521)
!8540 = !DILocation(line: 5964, column: 9, scope: !8522)
!8541 = !DILocation(line: 5965, column: 7, scope: !8521)
!8542 = !DILocation(line: 5965, column: 28, scope: !8521)
!8543 = !DILocation(line: 5963, column: 54, scope: !8522)
!8544 = !DILocation(line: 5963, column: 3, scope: !8522)
!8545 = distinct !{!8545, !8524, !8546}
!8546 = !DILocation(line: 5965, column: 30, scope: !8523)
!8547 = !DILocation(line: 5967, column: 35, scope: !8131)
!8548 = !DILocation(line: 5969, column: 39, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 5968, column: 7)
!8550 = !DILocation(line: 5969, column: 37, scope: !8549)
!8551 = !DILocation(line: 5970, column: 1, scope: !8131)
!8552 = distinct !DISubprogram(name: "const_int_htab_hash", scope: !3, file: !3, line: 207, type: !1274, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "x", arg: 1, scope: !8552, file: !3, line: 207, type: !1276)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 209, column: 22, scope: !8552)
!8557 = !DILocation(line: 209, column: 10, scope: !8552)
!8558 = !DILocation(line: 209, column: 3, scope: !8552)
!8559 = distinct !DISubprogram(name: "const_int_htab_eq", scope: !3, file: !3, line: 217, type: !1281, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8560)
!8560 = !{!8561, !8562}
!8561 = !DILocalVariable(name: "x", arg: 1, scope: !8559, file: !3, line: 217, type: !1276)
!8562 = !DILocalVariable(name: "y", arg: 2, scope: !8559, file: !3, line: 217, type: !1276)
!8563 = !DILocation(line: 0, scope: !8559)
!8564 = !DILocation(line: 219, column: 11, scope: !8559)
!8565 = !DILocation(line: 219, column: 39, scope: !8559)
!8566 = !DILocation(line: 219, column: 37, scope: !8559)
!8567 = !DILocation(line: 219, column: 34, scope: !8559)
!8568 = !DILocation(line: 219, column: 3, scope: !8559)
!8569 = distinct !DISubprogram(name: "const_double_htab_hash", scope: !3, file: !3, line: 224, type: !1274, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8570)
!8570 = !{!8571, !8572, !8574}
!8571 = !DILocalVariable(name: "x", arg: 1, scope: !8569, file: !3, line: 224, type: !1276)
!8572 = !DILocalVariable(name: "value", scope: !8569, file: !3, line: 226, type: !8573)
!8573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!8574 = !DILocalVariable(name: "h", scope: !8569, file: !3, line: 227, type: !785)
!8575 = !DILocation(line: 0, scope: !8569)
!8576 = !DILocation(line: 229, column: 7, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 229, column: 7)
!8578 = !DILocation(line: 229, column: 24, scope: !8577)
!8579 = !DILocation(line: 0, scope: !8577)
!8580 = !DILocation(line: 229, column: 7, scope: !8569)
!8581 = !DILocation(line: 230, column: 9, scope: !8577)
!8582 = !DILocation(line: 230, column: 36, scope: !8577)
!8583 = !DILocation(line: 230, column: 34, scope: !8577)
!8584 = !DILocation(line: 230, column: 5, scope: !8577)
!8585 = !DILocation(line: 233, column: 22, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 232, column: 5)
!8587 = !DILocation(line: 233, column: 11, scope: !8586)
!8588 = !DILocation(line: 235, column: 12, scope: !8586)
!8589 = !DILocation(line: 235, column: 9, scope: !8586)
!8590 = !DILocation(line: 237, column: 3, scope: !8569)
!8591 = distinct !DISubprogram(name: "const_double_htab_eq", scope: !3, file: !3, line: 243, type: !1281, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8592)
!8592 = !{!8593, !8594, !8595, !8596}
!8593 = !DILocalVariable(name: "x", arg: 1, scope: !8591, file: !3, line: 243, type: !1276)
!8594 = !DILocalVariable(name: "y", arg: 2, scope: !8591, file: !3, line: 243, type: !1276)
!8595 = !DILocalVariable(name: "a", scope: !8591, file: !3, line: 245, type: !8573)
!8596 = !DILocalVariable(name: "b", scope: !8591, file: !3, line: 245, type: !8573)
!8597 = !DILocation(line: 0, scope: !8591)
!8598 = !DILocation(line: 247, column: 7, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 247, column: 7)
!8600 = !DILocation(line: 247, column: 23, scope: !8599)
!8601 = !DILocation(line: 247, column: 20, scope: !8599)
!8602 = !DILocation(line: 247, column: 7, scope: !8591)
!8603 = !DILocation(line: 249, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 249, column: 7)
!8605 = !DILocation(line: 249, column: 20, scope: !8604)
!8606 = !DILocation(line: 0, scope: !8604)
!8607 = !DILocation(line: 249, column: 7, scope: !8591)
!8608 = !DILocation(line: 250, column: 13, scope: !8604)
!8609 = !DILocation(line: 250, column: 37, scope: !8604)
!8610 = !DILocation(line: 250, column: 34, scope: !8604)
!8611 = !DILocation(line: 251, column: 6, scope: !8604)
!8612 = !DILocation(line: 251, column: 9, scope: !8604)
!8613 = !DILocation(line: 251, column: 34, scope: !8604)
!8614 = !DILocation(line: 251, column: 31, scope: !8604)
!8615 = !DILocation(line: 250, column: 5, scope: !8604)
!8616 = !DILocation(line: 253, column: 28, scope: !8604)
!8617 = !DILocation(line: 254, column: 7, scope: !8604)
!8618 = !DILocation(line: 253, column: 12, scope: !8604)
!8619 = !DILocation(line: 253, column: 5, scope: !8604)
!8620 = !DILocation(line: 255, column: 1, scope: !8591)
!8621 = distinct !DISubprogram(name: "const_fixed_htab_hash", scope: !3, file: !3, line: 260, type: !1274, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8622)
!8622 = !{!8623, !8624, !8625}
!8623 = !DILocalVariable(name: "x", arg: 1, scope: !8621, file: !3, line: 260, type: !1276)
!8624 = !DILocalVariable(name: "value", scope: !8621, file: !3, line: 262, type: !8573)
!8625 = !DILocalVariable(name: "h", scope: !8621, file: !3, line: 263, type: !785)
!8626 = !DILocation(line: 0, scope: !8621)
!8627 = !DILocation(line: 265, column: 19, scope: !8621)
!8628 = !DILocation(line: 265, column: 7, scope: !8621)
!8629 = !DILocation(line: 267, column: 8, scope: !8621)
!8630 = !DILocation(line: 267, column: 5, scope: !8621)
!8631 = !DILocation(line: 268, column: 3, scope: !8621)
!8632 = distinct !DISubprogram(name: "const_fixed_htab_eq", scope: !3, file: !3, line: 275, type: !1281, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8633)
!8633 = !{!8634, !8635, !8636, !8637}
!8634 = !DILocalVariable(name: "x", arg: 1, scope: !8632, file: !3, line: 275, type: !1276)
!8635 = !DILocalVariable(name: "y", arg: 2, scope: !8632, file: !3, line: 275, type: !1276)
!8636 = !DILocalVariable(name: "a", scope: !8632, file: !3, line: 277, type: !8573)
!8637 = !DILocalVariable(name: "b", scope: !8632, file: !3, line: 277, type: !8573)
!8638 = !DILocation(line: 0, scope: !8632)
!8639 = !DILocation(line: 279, column: 7, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 279, column: 7)
!8641 = !DILocation(line: 279, column: 23, scope: !8640)
!8642 = !DILocation(line: 279, column: 20, scope: !8640)
!8643 = !DILocation(line: 279, column: 7, scope: !8632)
!8644 = !DILocation(line: 281, column: 27, scope: !8632)
!8645 = !DILocation(line: 281, column: 50, scope: !8632)
!8646 = !DILocation(line: 281, column: 10, scope: !8632)
!8647 = !DILocation(line: 281, column: 3, scope: !8632)
!8648 = !DILocation(line: 282, column: 1, scope: !8632)
!8649 = distinct !DISubprogram(name: "mem_attrs_htab_hash", scope: !3, file: !3, line: 287, type: !1274, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8650)
!8650 = !{!8651, !8652}
!8651 = !DILocalVariable(name: "x", arg: 1, scope: !8649, file: !3, line: 287, type: !1276)
!8652 = !DILocalVariable(name: "p", scope: !8649, file: !3, line: 289, type: !8653)
!8653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!8654 = !DILocation(line: 0, scope: !8649)
!8655 = !DILocation(line: 291, column: 14, scope: !8649)
!8656 = !DILocation(line: 291, column: 26, scope: !8649)
!8657 = !DILocation(line: 291, column: 32, scope: !8649)
!8658 = !DILocation(line: 291, column: 20, scope: !8649)
!8659 = !DILocation(line: 292, column: 10, scope: !8649)
!8660 = !DILocation(line: 292, column: 7, scope: !8649)
!8661 = !DILocation(line: 292, column: 20, scope: !8649)
!8662 = !DILocation(line: 292, column: 4, scope: !8649)
!8663 = !DILocation(line: 291, column: 11, scope: !8649)
!8664 = !DILocation(line: 293, column: 11, scope: !8649)
!8665 = !DILocation(line: 293, column: 8, scope: !8649)
!8666 = !DILocation(line: 293, column: 20, scope: !8649)
!8667 = !DILocation(line: 293, column: 4, scope: !8649)
!8668 = !DILocation(line: 294, column: 11, scope: !8649)
!8669 = !DILocation(line: 294, column: 8, scope: !8649)
!8670 = !DILocation(line: 294, column: 18, scope: !8649)
!8671 = !DILocation(line: 294, column: 4, scope: !8649)
!8672 = !DILocation(line: 295, column: 39, scope: !8649)
!8673 = !DILocation(line: 295, column: 15, scope: !8649)
!8674 = !DILocation(line: 291, column: 10, scope: !8649)
!8675 = !DILocation(line: 291, column: 3, scope: !8649)
!8676 = distinct !DISubprogram(name: "mem_attrs_htab_eq", scope: !3, file: !3, line: 303, type: !1281, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8677)
!8677 = !{!8678, !8679, !8680, !8681}
!8678 = !DILocalVariable(name: "x", arg: 1, scope: !8676, file: !3, line: 303, type: !1276)
!8679 = !DILocalVariable(name: "y", arg: 2, scope: !8676, file: !3, line: 303, type: !1276)
!8680 = !DILocalVariable(name: "p", scope: !8676, file: !3, line: 305, type: !8653)
!8681 = !DILocalVariable(name: "q", scope: !8676, file: !3, line: 306, type: !8653)
!8682 = !DILocation(line: 0, scope: !8676)
!8683 = !DILocation(line: 308, column: 14, scope: !8676)
!8684 = !DILocation(line: 308, column: 26, scope: !8676)
!8685 = !DILocation(line: 308, column: 20, scope: !8676)
!8686 = !DILocation(line: 308, column: 32, scope: !8676)
!8687 = !DILocation(line: 308, column: 38, scope: !8676)
!8688 = !DILocation(line: 308, column: 51, scope: !8676)
!8689 = !DILocation(line: 308, column: 45, scope: !8676)
!8690 = !DILocation(line: 309, column: 4, scope: !8676)
!8691 = !DILocation(line: 309, column: 10, scope: !8676)
!8692 = !DILocation(line: 309, column: 21, scope: !8676)
!8693 = !DILocation(line: 309, column: 15, scope: !8676)
!8694 = !DILocation(line: 309, column: 26, scope: !8676)
!8695 = !DILocation(line: 309, column: 32, scope: !8676)
!8696 = !DILocation(line: 309, column: 44, scope: !8676)
!8697 = !DILocation(line: 309, column: 38, scope: !8676)
!8698 = !DILocation(line: 310, column: 4, scope: !8676)
!8699 = !DILocation(line: 310, column: 10, scope: !8676)
!8700 = !DILocation(line: 310, column: 26, scope: !8676)
!8701 = !DILocation(line: 310, column: 20, scope: !8676)
!8702 = !DILocation(line: 311, column: 4, scope: !8676)
!8703 = !DILocation(line: 311, column: 11, scope: !8676)
!8704 = !DILocation(line: 311, column: 22, scope: !8676)
!8705 = !DILocation(line: 311, column: 16, scope: !8676)
!8706 = !DILocation(line: 312, column: 8, scope: !8676)
!8707 = !DILocation(line: 312, column: 20, scope: !8676)
!8708 = !DILocation(line: 312, column: 33, scope: !8676)
!8709 = !DILocation(line: 312, column: 44, scope: !8676)
!8710 = !DILocation(line: 313, column: 5, scope: !8676)
!8711 = !DILocation(line: 313, column: 8, scope: !8676)
!8712 = !DILocation(line: 308, column: 3, scope: !8676)
!8713 = distinct !DISubprogram(name: "reg_attrs_htab_hash", scope: !3, file: !3, line: 357, type: !1274, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8714)
!8714 = !{!8715, !8716}
!8715 = !DILocalVariable(name: "x", arg: 1, scope: !8713, file: !3, line: 357, type: !1276)
!8716 = !DILocalVariable(name: "p", scope: !8713, file: !3, line: 359, type: !8717)
!8717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!8718 = !DILocation(line: 0, scope: !8713)
!8719 = !DILocation(line: 361, column: 15, scope: !8713)
!8720 = !DILocation(line: 361, column: 22, scope: !8713)
!8721 = !DILocation(line: 361, column: 42, scope: !8713)
!8722 = !DILocation(line: 361, column: 30, scope: !8713)
!8723 = !DILocation(line: 361, column: 10, scope: !8713)
!8724 = !DILocation(line: 361, column: 3, scope: !8713)
!8725 = distinct !DISubprogram(name: "reg_attrs_htab_eq", scope: !3, file: !3, line: 369, type: !1281, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8726)
!8726 = !{!8727, !8728, !8729, !8730}
!8727 = !DILocalVariable(name: "x", arg: 1, scope: !8725, file: !3, line: 369, type: !1276)
!8728 = !DILocalVariable(name: "y", arg: 2, scope: !8725, file: !3, line: 369, type: !1276)
!8729 = !DILocalVariable(name: "p", scope: !8725, file: !3, line: 371, type: !8717)
!8730 = !DILocalVariable(name: "q", scope: !8725, file: !3, line: 372, type: !8717)
!8731 = !DILocation(line: 0, scope: !8725)
!8732 = !DILocation(line: 374, column: 14, scope: !8725)
!8733 = !DILocation(line: 374, column: 25, scope: !8725)
!8734 = !DILocation(line: 374, column: 19, scope: !8725)
!8735 = !DILocation(line: 374, column: 30, scope: !8725)
!8736 = !DILocation(line: 374, column: 36, scope: !8725)
!8737 = !DILocation(line: 374, column: 49, scope: !8725)
!8738 = !DILocation(line: 374, column: 43, scope: !8725)
!8739 = !DILocation(line: 374, column: 3, scope: !8725)
!8740 = distinct !DISubprogram(name: "gen_const_vector", scope: !3, file: !3, line: 5616, type: !2626, scopeLine: 5617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8741)
!8741 = !{!8742, !8743, !8744, !8745, !8746, !8747, !8748}
!8742 = !DILocalVariable(name: "mode", arg: 1, scope: !8740, file: !3, line: 5616, type: !5)
!8743 = !DILocalVariable(name: "constant", arg: 2, scope: !8740, file: !3, line: 5616, type: !778)
!8744 = !DILocalVariable(name: "tem", scope: !8740, file: !3, line: 5618, type: !787)
!8745 = !DILocalVariable(name: "v", scope: !8740, file: !3, line: 5619, type: !815)
!8746 = !DILocalVariable(name: "units", scope: !8740, file: !3, line: 5620, type: !778)
!8747 = !DILocalVariable(name: "i", scope: !8740, file: !3, line: 5620, type: !778)
!8748 = !DILocalVariable(name: "inner", scope: !8740, file: !3, line: 5621, type: !5)
!8749 = !DILocation(line: 0, scope: !8740)
!8750 = !DILocation(line: 5623, column: 11, scope: !8740)
!8751 = !DILocation(line: 5624, column: 11, scope: !8740)
!8752 = !DILocation(line: 5626, column: 3, scope: !8740)
!8753 = !DILocation(line: 5628, column: 7, scope: !8740)
!8754 = !DILocation(line: 5632, column: 3, scope: !8740)
!8755 = !DILocation(line: 0, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 5634, column: 3)
!8757 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 5634, column: 3)
!8758 = !DILocation(line: 5634, column: 17, scope: !8756)
!8759 = !DILocation(line: 5634, column: 8, scope: !8757)
!8760 = !DILocation(line: 0, scope: !8757)
!8761 = !DILocation(line: 5634, column: 3, scope: !8757)
!8762 = !DILocation(line: 5635, column: 24, scope: !8756)
!8763 = !DILocation(line: 5635, column: 5, scope: !8756)
!8764 = !DILocation(line: 5635, column: 22, scope: !8756)
!8765 = !DILocation(line: 5634, column: 26, scope: !8756)
!8766 = !DILocation(line: 5634, column: 3, scope: !8756)
!8767 = distinct !{!8767, !8761, !8768}
!8768 = !DILocation(line: 5635, column: 60, scope: !8757)
!8769 = !DILocation(line: 5637, column: 9, scope: !8740)
!8770 = !DILocation(line: 5638, column: 3, scope: !8740)
!8771 = distinct !DISubprogram(name: "emit_copy_of_insn_after", scope: !3, file: !3, line: 5976, type: !3878, scopeLine: 5977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8772)
!8772 = !{!8773, !8774, !8775, !8776}
!8773 = !DILocalVariable(name: "insn", arg: 1, scope: !8771, file: !3, line: 5976, type: !787)
!8774 = !DILocalVariable(name: "after", arg: 2, scope: !8771, file: !3, line: 5976, type: !787)
!8775 = !DILocalVariable(name: "new_rtx", scope: !8771, file: !3, line: 5978, type: !787)
!8776 = !DILocalVariable(name: "link", scope: !8771, file: !3, line: 5978, type: !787)
!8777 = !DILocation(line: 0, scope: !8771)
!8778 = !DILocation(line: 5980, column: 11, scope: !8771)
!8779 = !DILocation(line: 5980, column: 3, scope: !8771)
!8780 = !DILocation(line: 5983, column: 45, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 5981, column: 5)
!8782 = !DILocation(line: 5983, column: 34, scope: !8781)
!8783 = !DILocation(line: 5983, column: 17, scope: !8781)
!8784 = !DILocation(line: 5984, column: 7, scope: !8781)
!8785 = !DILocation(line: 5987, column: 50, scope: !8781)
!8786 = !DILocation(line: 5987, column: 39, scope: !8781)
!8787 = !DILocation(line: 5987, column: 17, scope: !8781)
!8788 = !DILocation(line: 5988, column: 7, scope: !8781)
!8789 = !DILocation(line: 5991, column: 51, scope: !8781)
!8790 = !DILocation(line: 5991, column: 40, scope: !8781)
!8791 = !DILocation(line: 5991, column: 17, scope: !8781)
!8792 = !DILocation(line: 5992, column: 7, scope: !8781)
!8793 = !DILocation(line: 5995, column: 50, scope: !8781)
!8794 = !DILocation(line: 5995, column: 39, scope: !8781)
!8795 = !DILocation(line: 5995, column: 17, scope: !8781)
!8796 = !DILocation(line: 5996, column: 11, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 5996, column: 11)
!8798 = !DILocation(line: 5996, column: 11, scope: !8781)
!8799 = !DILocation(line: 5998, column: 6, scope: !8797)
!8800 = !DILocation(line: 5997, column: 2, scope: !8797)
!8801 = !DILocation(line: 5998, column: 4, scope: !8797)
!8802 = !DILocation(line: 5999, column: 34, scope: !8781)
!8803 = !DILocation(line: 5999, column: 7, scope: !8781)
!8804 = !DILocation(line: 5999, column: 32, scope: !8781)
!8805 = !DILocation(line: 6000, column: 36, scope: !8781)
!8806 = !DILocation(line: 6000, column: 34, scope: !8781)
!8807 = !DILocation(line: 6001, column: 35, scope: !8781)
!8808 = !DILocation(line: 6001, column: 33, scope: !8781)
!8809 = !DILocation(line: 6003, column: 4, scope: !8781)
!8810 = !DILocation(line: 6003, column: 2, scope: !8781)
!8811 = !DILocation(line: 6004, column: 7, scope: !8781)
!8812 = !DILocation(line: 6007, column: 7, scope: !8781)
!8813 = !DILocation(line: 6008, column: 5, scope: !8781)
!8814 = !DILocation(line: 6011, column: 20, scope: !8771)
!8815 = !DILocation(line: 6011, column: 3, scope: !8771)
!8816 = !DILocation(line: 6013, column: 28, scope: !8771)
!8817 = !DILocation(line: 6013, column: 3, scope: !8771)
!8818 = !DILocation(line: 6013, column: 26, scope: !8771)
!8819 = !DILocation(line: 6018, column: 35, scope: !8771)
!8820 = !DILocation(line: 6018, column: 3, scope: !8771)
!8821 = !DILocation(line: 6018, column: 33, scope: !8771)
!8822 = !DILocation(line: 6023, column: 15, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 6023, column: 3)
!8824 = !DILocation(line: 6023, column: 8, scope: !8823)
!8825 = !DILocation(line: 0, scope: !8823)
!8826 = !DILocation(line: 6023, column: 3, scope: !8823)
!8827 = !DILocation(line: 6024, column: 9, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 6024, column: 9)
!8829 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 6023, column: 3)
!8830 = !DILocation(line: 6024, column: 30, scope: !8828)
!8831 = !DILocation(line: 6024, column: 9, scope: !8829)
!8832 = !DILocation(line: 6026, column: 6, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 6026, column: 6)
!8834 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 6025, column: 7)
!8835 = !DILocation(line: 6026, column: 22, scope: !8833)
!8836 = !DILocation(line: 0, scope: !8833)
!8837 = !DILocation(line: 6026, column: 6, scope: !8834)
!8838 = !DILocation(line: 6028, column: 4, scope: !8833)
!8839 = !DILocation(line: 6027, column: 4, scope: !8833)
!8840 = !DILocation(line: 6030, column: 4, scope: !8833)
!8841 = !DILocation(line: 6023, column: 46, scope: !8829)
!8842 = !DILocation(line: 6023, column: 3, scope: !8829)
!8843 = distinct !{!8843, !8826, !8844}
!8844 = !DILocation(line: 6031, column: 7, scope: !8823)
!8845 = !DILocation(line: 6033, column: 25, scope: !8771)
!8846 = !DILocation(line: 6033, column: 3, scope: !8771)
!8847 = !DILocation(line: 6033, column: 23, scope: !8771)
!8848 = !DILocation(line: 6034, column: 3, scope: !8771)
!8849 = distinct !DISubprogram(name: "gen_hard_reg_clobber", scope: !3, file: !3, line: 6039, type: !2789, scopeLine: 6040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8850)
!8850 = !{!8851, !8852}
!8851 = !DILocalVariable(name: "mode", arg: 1, scope: !8849, file: !3, line: 6039, type: !5)
!8852 = !DILocalVariable(name: "regno", arg: 2, scope: !8849, file: !3, line: 6039, type: !7)
!8853 = !DILocation(line: 0, scope: !8849)
!8854 = !DILocation(line: 6041, column: 7, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 6041, column: 7)
!8856 = !DILocation(line: 6041, column: 7, scope: !8849)
!8857 = !DILocation(line: 6042, column: 5, scope: !8855)
!8858 = !DILocation(line: 6045, column: 6, scope: !8855)
!8859 = !DILocation(line: 6044, column: 44, scope: !8855)
!8860 = !DILocation(line: 6044, column: 5, scope: !8855)
!8861 = !DILocation(line: 0, scope: !8855)
!8862 = !DILocation(line: 6046, column: 1, scope: !8849)
