; ModuleID = 'reg-stack.bc'
source_filename = "reg-stack.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_char_heap = type { %struct.VEC_char_base }
%struct.VEC_char_base = type { i32, i32, [1 x i8] }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.real_value = type { i32, [3 x i64] }
%struct.block_info_def = type { %struct.stack_def, %struct.stack_def, i64, i32, i32 }
%struct.stack_def = type { i32, i64, [8 x i8] }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@regstack_completed = dso_local local_unnamed_addr global i32 0, align 4, !dbg !0
@stack_regs_mentioned_data = internal global %struct.VEC_char_heap* null, align 8, !dbg !1920
@.str = private unnamed_addr constant [12 x i8] c"*stack_regs\00", align 1
@pass_stack_regs = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_handle_stack_regs, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 164, i32 0, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !1890
@.str.1 = private unnamed_addr constant [6 x i8] c"stack\00", align 1
@pass_stack_regs_run = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_stack_regs, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 164, i32 0, i32 0, i32 0, i32 0, i32 132099 } }, align 8, !dbg !1918
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@FP_mode_reg = internal unnamed_addr global [8 x [87 x %struct.rtx_def*]] zeroinitializer, align 16, !dbg !1922
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@ix86_flags_rtx = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !1927
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@ix86_cmodel = external dso_local local_unnamed_addr global i32, align 4
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@not_a_num = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !1929
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@any_malformed_asm = internal unnamed_addr global i1 false, align 1, !dbg !1937
@.str.5 = private unnamed_addr constant [30 x i8] c"\0ABasic block %d\0AInput stack: \00", align 1
@current_block = internal unnamed_addr global %struct.basic_block_def* null, align 8, !dbg !1933
@starting_stack_p = internal unnamed_addr global i1 false, align 1, !dbg !1938
@.str.6 = private unnamed_addr constant [12 x i8] c"reg-stack.c\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"  insn %d input stack: \00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Expected live registers [\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c" ]\0AOutput stack: \00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Emitting insn initializing reg %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"uninitialized\0A\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"empty\0A\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"[ \00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@flag_unsafe_math_optimizations = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@which_alternative = external dso_local local_unnamed_addr global i32, align 4
@recog_data = external dso_local local_unnamed_addr global %struct.recog_data, align 8
@recog_op_alt = external dso_local local_unnamed_addr global [30 x [30 x %struct.operand_alternative]], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@reg_class_size = external dso_local local_unnamed_addr global [27 x i32], align 16
@.str.17 = private unnamed_addr constant [52 x i8] c"output constraint %d must specify a single register\00", align 1
@.str.18 = private unnamed_addr constant [68 x i8] c"output constraint %d cannot be specified together with \22%s\22 clobber\00", align 1
@reg_names = external dso_local local_unnamed_addr global [53 x i8*], align 16
@.str.19 = private unnamed_addr constant [44 x i8] c"output regs must be grouped at top of stack\00", align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"implicitly popped regs must be grouped at top of stack\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"output operand %d must use %<&%> constraint\00", align 1
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@.str.22 = private unnamed_addr constant [14 x i8] c"Edge %d->%d: \00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"no changes needed\0A\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"correcting stack to \00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1943 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1956, metadata !DIExpression()), !dbg !1958
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1957, metadata !DIExpression()), !dbg !1958
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1959
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1960
  ret i32 %call, !dbg !1961
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1962 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1966
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1967
  ret i32 %call, !dbg !1968
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1969 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2024, metadata !DIExpression()), !dbg !2025
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2026
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2026
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2026
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2026
  %cmp = icmp uge i8* %0, %1, !dbg !2026
  %conv1 = zext i1 %cmp to i64, !dbg !2026
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2026
  %tobool = icmp eq i64 %expval, 0, !dbg !2026
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2026

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2026
  br label %cond.end, !dbg !2026

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2026
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2026
  %2 = load i8, i8* %0, align 1, !dbg !2026
  %conv3 = zext i8 %2 to i32, !dbg !2026
  br label %cond.end, !dbg !2026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2026
  ret i32 %cond, !dbg !2027
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2028 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2030, metadata !DIExpression()), !dbg !2031
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2032
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2032
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2032
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2032
  %cmp = icmp uge i8* %0, %1, !dbg !2032
  %conv1 = zext i1 %cmp to i64, !dbg !2032
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2032
  %tobool = icmp eq i64 %expval, 0, !dbg !2032
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2032

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2032
  br label %cond.end, !dbg !2032

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2032
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2032
  %2 = load i8, i8* %0, align 1, !dbg !2032
  %conv3 = zext i8 %2 to i32, !dbg !2032
  br label %cond.end, !dbg !2032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2032
  ret i32 %cond, !dbg !2033
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2034 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2035
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2035
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2035
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2035
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2035
  %cmp = icmp uge i8* %1, %2, !dbg !2035
  %conv1 = zext i1 %cmp to i64, !dbg !2035
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2035
  %tobool = icmp eq i64 %expval, 0, !dbg !2035
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2035

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2035
  br label %cond.end, !dbg !2035

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2035
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2035
  %3 = load i8, i8* %1, align 1, !dbg !2035
  %conv3 = zext i8 %3 to i32, !dbg !2035
  br label %cond.end, !dbg !2035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2035
  ret i32 %cond, !dbg !2036
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2037 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2041, metadata !DIExpression()), !dbg !2042
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2043
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2044
  ret i32 %call, !dbg !2045
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2046 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2050, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2051, metadata !DIExpression()), !dbg !2052
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2053
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2053
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2053
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2053
  %cmp = icmp uge i8* %0, %1, !dbg !2053
  %conv1 = zext i1 %cmp to i64, !dbg !2053
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2053
  %tobool = icmp eq i64 %expval, 0, !dbg !2053
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2053

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2053
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2053
  br label %cond.end, !dbg !2053

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2053
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2053
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2053
  store i8 %conv2, i8* %0, align 1, !dbg !2053
  %conv6 = and i32 %__c, 255, !dbg !2053
  br label %cond.end, !dbg !2053

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2053
  ret i32 %cond, !dbg !2054
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2055 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2057, metadata !DIExpression()), !dbg !2059
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2058, metadata !DIExpression()), !dbg !2059
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2060
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2060
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2060
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2060
  %cmp = icmp uge i8* %0, %1, !dbg !2060
  %conv1 = zext i1 %cmp to i64, !dbg !2060
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2060
  %tobool = icmp eq i64 %expval, 0, !dbg !2060
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2060

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2060
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2060
  br label %cond.end, !dbg !2060

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2060
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2060
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2060
  store i8 %conv2, i8* %0, align 1, !dbg !2060
  %conv6 = and i32 %__c, 255, !dbg !2060
  br label %cond.end, !dbg !2060

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2060
  ret i32 %cond, !dbg !2061
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2062 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2064, metadata !DIExpression()), !dbg !2065
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2066
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2066
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2066
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2066
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2066
  %cmp = icmp uge i8* %1, %2, !dbg !2066
  %conv1 = zext i1 %cmp to i64, !dbg !2066
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2066
  %tobool = icmp eq i64 %expval, 0, !dbg !2066
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2066

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2066
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2066
  br label %cond.end, !dbg !2066

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2066
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2066
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2066
  store i8 %conv4, i8* %1, align 1, !dbg !2066
  %conv6 = and i32 %__c, 255, !dbg !2066
  br label %cond.end, !dbg !2066

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2066
  ret i32 %cond, !dbg !2067
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2068 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2074, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2075, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2076, metadata !DIExpression()), !dbg !2077
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2078
  ret i64 %call, !dbg !2079
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2080 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2082, metadata !DIExpression()), !dbg !2083
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2084
  %0 = load i32, i32* %_flags, align 8, !dbg !2084
  %and = lshr i32 %0, 4, !dbg !2084
  %and.lobit = and i32 %and, 1, !dbg !2084
  ret i32 %and.lobit, !dbg !2085
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2086 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2088, metadata !DIExpression()), !dbg !2089
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2090
  %0 = load i32, i32* %_flags, align 8, !dbg !2090
  %and = lshr i32 %0, 5, !dbg !2090
  %and.lobit = and i32 %and, 1, !dbg !2090
  ret i32 %and.lobit, !dbg !2091
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2092 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2095, metadata !DIExpression()), !dbg !2096
  %__c.off = add i32 %__c, 128, !dbg !2097
  %0 = icmp ult i32 %__c.off, 384, !dbg !2097
  br i1 %0, label %cond.true, label %cond.end, !dbg !2097

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2098
  %1 = load i32*, i32** %call, align 8, !dbg !2099
  %idxprom = sext i32 %__c to i64, !dbg !2100
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2100
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2100
  br label %cond.end, !dbg !2101

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2101
  ret i32 %cond, !dbg !2102
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2103 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2105, metadata !DIExpression()), !dbg !2106
  %__c.off = add i32 %__c, 128, !dbg !2107
  %0 = icmp ult i32 %__c.off, 384, !dbg !2107
  br i1 %0, label %cond.true, label %cond.end, !dbg !2107

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2108
  %1 = load i32*, i32** %call, align 8, !dbg !2109
  %idxprom = sext i32 %__c to i64, !dbg !2110
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2110
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2110
  br label %cond.end, !dbg !2111

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2111
  ret i32 %cond, !dbg !2112
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2113 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2118, metadata !DIExpression()), !dbg !2119
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2120
  %conv = trunc i64 %call to i32, !dbg !2121
  ret i32 %conv, !dbg !2122
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2123 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2127, metadata !DIExpression()), !dbg !2128
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2129
  ret i64 %call, !dbg !2130
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2131 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2136, metadata !DIExpression()), !dbg !2137
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2138
  ret i64 %call, !dbg !2139
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2140 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2146, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2147, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2148, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2149, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2150, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 0, metadata !2151, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2152, metadata !DIExpression()), !dbg !2156
  br label %while.cond, !dbg !2157

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2158
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2152, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2151, metadata !DIExpression()), !dbg !2156
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2159
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2157

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2160
  %div = lshr i64 %add, 1, !dbg !2162
  call void @llvm.dbg.value(metadata i64 %div, metadata !2153, metadata !DIExpression()), !dbg !2156
  %mul = mul i64 %div, %__size, !dbg !2163
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2164
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2154, metadata !DIExpression()), !dbg !2156
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2165
  call void @llvm.dbg.value(metadata i32 %call, metadata !2155, metadata !DIExpression()), !dbg !2156
  %cmp1 = icmp slt i32 %call, 0, !dbg !2166
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2168

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2169
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2171

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2172
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2151, metadata !DIExpression()), !dbg !2156
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2156
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2152, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2151, metadata !DIExpression()), !dbg !2156
  br label %while.cond, !dbg !2157, !llvm.loop !2173

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2156
  ret i8* %retval.0, !dbg !2175
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2176 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2182, metadata !DIExpression()), !dbg !2183
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2184
  ret double %call, !dbg !2185
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2186 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2195, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2196, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i32 %base, metadata !2197, metadata !DIExpression()), !dbg !2198
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2199
  ret i64 %call, !dbg !2200
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2201 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2207, metadata !DIExpression()), !dbg !2210
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2208, metadata !DIExpression()), !dbg !2210
  call void @llvm.dbg.value(metadata i32 %base, metadata !2209, metadata !DIExpression()), !dbg !2210
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2211
  ret i64 %call, !dbg !2212
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2213 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2224, metadata !DIExpression()), !dbg !2227
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2225, metadata !DIExpression()), !dbg !2227
  call void @llvm.dbg.value(metadata i32 %base, metadata !2226, metadata !DIExpression()), !dbg !2227
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2228
  ret i64 %call, !dbg !2229
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2230 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2234, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2235, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32 %base, metadata !2236, metadata !DIExpression()), !dbg !2237
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2238
  ret i64 %call, !dbg !2239
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2240 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2280, metadata !DIExpression()), !dbg !2282
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2281, metadata !DIExpression()), !dbg !2282
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2283
  ret i32 %call, !dbg !2284
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2285 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2287, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2288, metadata !DIExpression()), !dbg !2289
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2290
  ret i32 %call, !dbg !2291
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2292 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2296, metadata !DIExpression()), !dbg !2298
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2297, metadata !DIExpression()), !dbg !2298
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2299
  ret i32 %call, !dbg !2300
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2301 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2305, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2306, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2307, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2308, metadata !DIExpression()), !dbg !2309
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2310
  ret i32 %call, !dbg !2311
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2312 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2316, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2317, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2318, metadata !DIExpression()), !dbg !2319
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2318, metadata !DIExpression(DW_OP_deref)), !dbg !2319
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2320
  ret i32 %call, !dbg !2321
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2322 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2326, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2327, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2328, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2329, metadata !DIExpression()), !dbg !2330
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2329, metadata !DIExpression(DW_OP_deref)), !dbg !2330
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2331
  ret i32 %call, !dbg !2332
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2333 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2357, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2358, metadata !DIExpression()), !dbg !2359
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2360
  ret i32 %call, !dbg !2361
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2362 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2364, metadata !DIExpression()), !dbg !2366
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2365, metadata !DIExpression()), !dbg !2366
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2367
  ret i32 %call, !dbg !2368
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2373, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2374, metadata !DIExpression()), !dbg !2375
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2376
  ret i32 %call, !dbg !2377
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2378 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2382, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2383, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2384, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2385, metadata !DIExpression()), !dbg !2386
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2387
  ret i32 %call, !dbg !2388
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @stack_regs_mentioned(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2389 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2396, metadata !DIExpression()), !dbg !2400
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !2401
  %bf.load = load i32, i32* %0, align 8, !dbg !2401
  %bf.clear = and i32 %bf.load, 65535, !dbg !2401
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !2401
  br i1 %cmp, label %lor.lhs.false12, label %lor.lhs.false, !dbg !2401

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !2401
  br i1 %cmp3, label %lor.lhs.false12, label %lor.lhs.false4, !dbg !2401

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !2401
  br i1 %cmp7, label %lor.lhs.false12, label %lor.lhs.false8, !dbg !2401

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !2401
  br i1 %cmp11, label %lor.lhs.false12, label %cleanup, !dbg !2403

lor.lhs.false12:                                  ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2404
  %tobool = icmp eq %struct.VEC_char_heap* %1, null, !dbg !2404
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2405

if.end:                                           ; preds = %lor.lhs.false12
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2406
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2406
  %2 = load i32, i32* %rt_int, align 8, !dbg !2406
  call void @llvm.dbg.value(metadata i32 %2, metadata !2397, metadata !DIExpression()), !dbg !2400
  %base = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %1, i64 0, i32 0, !dbg !2407
  %call = tail call fastcc i32 @VEC_char_base_length(%struct.VEC_char_base* nonnull %base) #7, !dbg !2407
  call void @llvm.dbg.value(metadata i32 %call, metadata !2398, metadata !DIExpression()), !dbg !2400
  %cmp14 = icmp ult i32 %2, %call, !dbg !2408
  br i1 %cmp14, label %if.end17, label %if.then15, !dbg !2410

if.then15:                                        ; preds = %if.end
  %div = udiv i32 %2, 20, !dbg !2411
  %add = add i32 %2, %div, !dbg !2413
  %add16 = add i32 %add, 1, !dbg !2414
  call void @llvm.dbg.value(metadata i32 %add16, metadata !2398, metadata !DIExpression()), !dbg !2400
  tail call fastcc void @VEC_char_heap_safe_grow_cleared(%struct.VEC_char_heap** nonnull @stack_regs_mentioned_data, i32 %add16) #7, !dbg !2415
  br label %if.end17, !dbg !2416

if.end17:                                         ; preds = %if.end, %if.then15
  %3 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2417
  %base20 = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %3, i64 0, i32 0, !dbg !2417
  %call24 = tail call fastcc signext i8 @VEC_char_base_index(%struct.VEC_char_base* %base20, i32 %2) #7, !dbg !2417
  %conv = sext i8 %call24 to i32, !dbg !2417
  call void @llvm.dbg.value(metadata i32 %conv, metadata !2399, metadata !DIExpression()), !dbg !2400
  %cmp25 = icmp eq i8 %call24, 0, !dbg !2418
  br i1 %cmp25, label %if.then27, label %if.end42, !dbg !2420

if.then27:                                        ; preds = %if.end17
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2421
  %4 = getelementptr inbounds %union.u, %union.u* %u28, i64 1, i32 0, i32 0, i64 0, !dbg !2421
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !2421
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2421
  %call31 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %5) #7, !dbg !2423
  %tobool32 = icmp eq i32 %call31, 0, !dbg !2423
  %cond33 = select i1 %tobool32, i32 2, i32 1, !dbg !2423
  call void @llvm.dbg.value(metadata i32 %cond33, metadata !2399, metadata !DIExpression()), !dbg !2400
  %6 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2424
  %base36 = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %6, i64 0, i32 0, !dbg !2424
  %conv40 = trunc i32 %cond33 to i8, !dbg !2424
  %call41 = tail call fastcc signext i8 @VEC_char_base_replace(%struct.VEC_char_base* %base36, i32 %2, i8 signext %conv40) #7, !dbg !2424
  br label %if.end42, !dbg !2425

if.end42:                                         ; preds = %if.then27, %if.end17
  %test.0 = phi i32 [ %cond33, %if.then27 ], [ %conv, %if.end17 ], !dbg !2400
  call void @llvm.dbg.value(metadata i32 %test.0, metadata !2399, metadata !DIExpression()), !dbg !2400
  %cmp43 = icmp eq i32 %test.0, 1, !dbg !2426
  %conv44 = zext i1 %cmp43 to i32, !dbg !2426
  br label %cleanup, !dbg !2427

cleanup:                                          ; preds = %lor.lhs.false12, %lor.lhs.false8, %if.end42
  %retval.0 = phi i32 [ %conv44, %if.end42 ], [ 0, %lor.lhs.false12 ], [ 0, %lor.lhs.false8 ], !dbg !2400
  ret i32 %retval.0, !dbg !2428
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_char_base_length(%struct.VEC_char_base* %vec_) unnamed_addr #0 !dbg !2429 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_base* %vec_, metadata !2435, metadata !DIExpression()), !dbg !2436
  %tobool = icmp eq %struct.VEC_char_base* %vec_, null, !dbg !2437
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2437

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 0, !dbg !2437
  %0 = load i32, i32* %num, align 4, !dbg !2437
  br label %cond.end, !dbg !2437

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2437
  ret i32 %cond, !dbg !2437
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_char_heap_safe_grow_cleared(%struct.VEC_char_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !2438 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_heap** @stack_regs_mentioned_data, metadata !2443, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2444, metadata !DIExpression()), !dbg !2446
  %0 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2447
  %tobool = icmp eq %struct.VEC_char_heap* %0, null, !dbg !2447
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2447

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %0, i64 0, i32 0, !dbg !2447
  br label %cond.end, !dbg !2447

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_char_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2447
  %call = tail call fastcc i32 @VEC_char_base_length(%struct.VEC_char_base* %cond) #7, !dbg !2447
  call void @llvm.dbg.value(metadata i32 %call, metadata !2445, metadata !DIExpression()), !dbg !2446
  tail call fastcc void @VEC_char_heap_safe_grow(%struct.VEC_char_heap** nonnull @stack_regs_mentioned_data, i32 %size_) #7, !dbg !2447
  %1 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2447
  %tobool1 = icmp eq %struct.VEC_char_heap* %1, null, !dbg !2447
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !2447

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %1, i64 0, i32 0, !dbg !2447
  br label %cond.end5, !dbg !2447

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_char_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !2447
  %call7 = tail call fastcc i8* @VEC_char_base_address(%struct.VEC_char_base* %cond6) #7, !dbg !2447
  %idxprom = sext i32 %call to i64, !dbg !2447
  %arrayidx = getelementptr inbounds i8, i8* %call7, i64 %idxprom, !dbg !2447
  %sub = sub nsw i32 %size_, %call, !dbg !2447
  %conv = sext i32 %sub to i64, !dbg !2447
  %call8 = tail call i8* @memset(i8* %arrayidx, i32 0, i64 %conv) #6, !dbg !2447
  ret void, !dbg !2447
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc signext i8 @VEC_char_base_index(%struct.VEC_char_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2448 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_base* %vec_, metadata !2452, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2453, metadata !DIExpression()), !dbg !2454
  br label %land.end, !dbg !2455

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2455
  %arrayidx = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2455
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2455
  ret i8 %0, !dbg !2455
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %pat) unnamed_addr #5 !dbg !2456 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !2458, metadata !DIExpression()), !dbg !2467
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !2468
  %bf.load = load i32, i32* %0, align 8, !dbg !2468
  %bf.clear = and i32 %bf.load, 65535, !dbg !2468
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !2468
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2468

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %pat) #7, !dbg !2468
  %1 = and i32 %call, -8, !dbg !2468
  %cmp1 = icmp eq i32 %1, 8, !dbg !2468
  br i1 %cmp1, label %cleanup54, label %land.lhs.true.if.end_crit_edge, !dbg !2470

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %bf.load3.pre = load i32, i32* %0, align 8, !dbg !2471
  %.pre = and i32 %bf.load3.pre, 65535, !dbg !2471
  br label %if.end, !dbg !2470

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %bf.clear4.pre-phi = phi i32 [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %bf.clear, %entry ], !dbg !2471
  %idxprom = zext i32 %bf.clear4.pre-phi to i64, !dbg !2471
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2471
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !2471
  call void @llvm.dbg.value(metadata i8* %2, metadata !2459, metadata !DIExpression()), !dbg !2467
  %arrayidx8 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2472
  %3 = load i8, i8* %arrayidx8, align 1, !dbg !2472
  call void @llvm.dbg.value(metadata i8 %3, metadata !2460, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2467
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, !dbg !2473
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !2473
  %4 = zext i8 %3 to i64, !dbg !2475
  br label %for.cond, !dbg !2475

for.cond:                                         ; preds = %for.inc51, %if.end
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc51 ], [ %4, %if.end ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !2476
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2467
  %cmp11 = icmp sgt i64 %indvars.iv2, 0, !dbg !2477
  br i1 %cmp11, label %for.body, label %cleanup54.loopexit, !dbg !2478

for.body:                                         ; preds = %for.cond
  %arrayidx14 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next3, !dbg !2479
  %5 = load i8, i8* %arrayidx14, align 1, !dbg !2479
  %cmp16 = icmp eq i8 %5, 69, !dbg !2480
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !2481

if.then18:                                        ; preds = %for.body
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 %indvars.iv.next3, !dbg !2482
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtvec_def**, !dbg !2482
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2482
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !2482
  %7 = load i32, i32* %num_elem, align 8, !dbg !2482
  call void @llvm.dbg.value(metadata i32 %7, metadata !2461, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2484
  %8 = sext i32 %7 to i64, !dbg !2485
  br label %for.cond22, !dbg !2485

for.cond22:                                       ; preds = %for.inc, %if.then18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %8, %if.then18 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2486
  call void @llvm.dbg.value(metadata i32 undef, metadata !2461, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2484
  %cmp23 = icmp sgt i64 %indvars.iv, 0, !dbg !2487
  br i1 %cmp23, label %for.body25, label %cleanup, !dbg !2489

for.body25:                                       ; preds = %for.cond22
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2490
  %arrayidx32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !2490
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !2490
  %call33 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %10) #7, !dbg !2492
  %tobool = icmp eq i32 %call33, 0, !dbg !2492
  br i1 %tobool, label %for.inc, label %cleanup, !dbg !2493

for.inc:                                          ; preds = %for.body25
  call void @llvm.dbg.value(metadata i32 undef, metadata !2461, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2484
  br label %for.cond22, !dbg !2494, !llvm.loop !2495

cleanup:                                          ; preds = %for.body25, %for.cond22
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body25 ], [ true, %for.cond22 ]
  br i1 %cleanup.dest.slot.0, label %for.inc51, label %cleanup54.loopexit

if.else:                                          ; preds = %for.body
  %cmp39 = icmp eq i8 %5, 101, !dbg !2497
  br i1 %cmp39, label %land.lhs.true41, label %for.inc51, !dbg !2498

land.lhs.true41:                                  ; preds = %if.else
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 %indvars.iv.next3, !dbg !2473
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !2473
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2473
  %call46 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %11) #7, !dbg !2499
  %tobool47 = icmp eq i32 %call46, 0, !dbg !2499
  br i1 %tobool47, label %for.inc51, label %cleanup54.loopexit, !dbg !2500

for.inc51:                                        ; preds = %land.lhs.true41, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2467
  br label %for.cond, !dbg !2501, !llvm.loop !2502

cleanup54.loopexit:                               ; preds = %cleanup, %for.cond, %land.lhs.true41
  %retval.3.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true41 ], [ 1, %cleanup ]
  br label %cleanup54, !dbg !2504

cleanup54:                                        ; preds = %cleanup54.loopexit, %land.lhs.true
  %retval.3 = phi i32 [ 1, %land.lhs.true ], [ %retval.3.ph, %cleanup54.loopexit ], !dbg !2467
  ret i32 %retval.3, !dbg !2504
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc signext i8 @VEC_char_base_replace(%struct.VEC_char_base* %vec_, i32 %ix_, i8 signext %obj_) unnamed_addr #0 !dbg !2505 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_base* %vec_, metadata !2510, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2511, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata i8 %obj_, metadata !2512, metadata !DIExpression()), !dbg !2514
  %idxprom = zext i32 %ix_ to i64, !dbg !2515
  %arrayidx = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2515
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2515
  call void @llvm.dbg.value(metadata i8 %0, metadata !2513, metadata !DIExpression()), !dbg !2514
  store i8 %obj_, i8* %arrayidx, align 1, !dbg !2515
  ret i8 %0, !dbg !2515
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_stack_regs() #5 !dbg !2516 {
entry:
  ret i8 1, !dbg !2517
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_stack_regs() #5 !dbg !2518 {
entry:
  %call = tail call fastcc zeroext i8 @reg_to_stack() #7, !dbg !2519
  store i32 1, i32* @regstack_completed, align 4, !dbg !2520
  ret i32 0, !dbg !2521
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_char_heap_safe_grow(%struct.VEC_char_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !2522 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_heap** @stack_regs_mentioned_data, metadata !2524, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2525, metadata !DIExpression()), !dbg !2526
  %cmp = icmp sgt i32 %size_, -1, !dbg !2527
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2527

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2527
  %tobool = icmp eq %struct.VEC_char_heap* %0, null, !dbg !2527
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2527

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %0, i64 0, i32 0, !dbg !2527
  br label %cond.end, !dbg !2527

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_char_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !2527
  %call = tail call fastcc i32 @VEC_char_base_length(%struct.VEC_char_base* %cond) #7, !dbg !2527
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2527
  %tobool2 = icmp eq %struct.VEC_char_heap* %1, null, !dbg !2527
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !2527

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %1, i64 0, i32 0, i32 0, !dbg !2527
  %2 = load i32, i32* %num, align 4, !dbg !2527
  br label %cond.end11, !dbg !2527

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !2527
  %sub = sub nsw i32 %size_, %cond12, !dbg !2527
  %call13 = tail call fastcc i32 @VEC_char_heap_reserve_exact(%struct.VEC_char_heap** nonnull @stack_regs_mentioned_data, i32 %sub) #7, !dbg !2527
  %3 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2527
  %num20 = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %3, i64 0, i32 0, i32 0, !dbg !2527
  store i32 %size_, i32* %num20, align 4, !dbg !2527
  ret void, !dbg !2527
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_char_base_address(%struct.VEC_char_base* %vec_) unnamed_addr #0 !dbg !2528 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_base* %vec_, metadata !2532, metadata !DIExpression()), !dbg !2533
  %tobool = icmp eq %struct.VEC_char_base* %vec_, null, !dbg !2534
  %arraydecay = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 2, i64 0, !dbg !2534
  %cond = select i1 %tobool, i8* null, i8* %arraydecay, !dbg !2534
  ret i8* %cond, !dbg !2534
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_char_heap_reserve_exact(%struct.VEC_char_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_heap** @stack_regs_mentioned_data, metadata !2539, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !2540, metadata !DIExpression()), !dbg !2542
  %0 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2543
  %tobool = icmp eq %struct.VEC_char_heap* %0, null, !dbg !2543
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2543

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %0, i64 0, i32 0, !dbg !2543
  br label %cond.end, !dbg !2543

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_char_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2543
  %call = tail call fastcc i32 @VEC_char_base_space(%struct.VEC_char_base* %cond, i32 %alloc_) #7, !dbg !2543
  %tobool1 = icmp eq i32 %call, 0, !dbg !2543
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !2543
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !2541, metadata !DIExpression()), !dbg !2542
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2543

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_char_heap** @stack_regs_mentioned_data to i8**), align 8, !dbg !2544
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 1) #6, !dbg !2544
  store i8* %call3, i8** bitcast (%struct.VEC_char_heap** @stack_regs_mentioned_data to i8**), align 8, !dbg !2544
  br label %if.end, !dbg !2544

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !2543
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_char_base_space(%struct.VEC_char_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !2546 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_base* %vec_, metadata !2550, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !2551, metadata !DIExpression()), !dbg !2552
  %tobool = icmp eq %struct.VEC_char_base* %vec_, null, !dbg !2553
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2553

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 1, !dbg !2553
  %0 = load i32, i32* %alloc, align 4, !dbg !2553
  %num = getelementptr inbounds %struct.VEC_char_base, %struct.VEC_char_base* %vec_, i64 0, i32 0, !dbg !2553
  %1 = load i32, i32* %num, align 4, !dbg !2553
  %sub = sub i32 %0, %1, !dbg !2553
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !2553
  br label %cond.end, !dbg !2553

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !2553
  br label %cond.end, !dbg !2553

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !2553
  ret i32 %cond, !dbg !2553
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2558, metadata !DIExpression()), !dbg !2559
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2560
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2560
  %0 = load i32, i32* %rt_uint, align 8, !dbg !2560
  ret i32 %0, !dbg !2561
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @reg_to_stack() unnamed_addr #5 !dbg !2562 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %r = alloca %struct.real_value, align 8
  %0 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2587
  %cmp = icmp eq %struct.VEC_char_heap* %0, null, !dbg !2589
  br i1 %cmp, label %if.end, label %if.then, !dbg !2590

if.then:                                          ; preds = %entry
  tail call fastcc void @VEC_char_heap_free(%struct.VEC_char_heap** nonnull @stack_regs_mentioned_data) #7, !dbg !2591
  br label %if.end, !dbg !2591

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 8, metadata !2565, metadata !DIExpression()), !dbg !2592
  br label %for.cond, !dbg !2593

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 8, %if.end ], [ %inc, %for.inc ], !dbg !2595
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2565, metadata !DIExpression()), !dbg !2592
  %exitcond7 = icmp eq i32 %i.0, 16, !dbg !2596
  br i1 %exitcond7, label %for.end, label %for.body, !dbg !2598

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @df_regs_ever_live_p(i32 %i.0) #6, !dbg !2599
  %tobool = icmp eq i8 %call, 0, !dbg !2599
  br i1 %tobool, label %for.inc, label %for.end, !dbg !2601

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2602
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2565, metadata !DIExpression()), !dbg !2592
  br label %for.cond, !dbg !2603, !llvm.loop !2604

for.end:                                          ; preds = %for.cond, %for.body
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ], [ %i.0, %for.body ], !dbg !2595
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !2565, metadata !DIExpression()), !dbg !2592
  %cmp4 = icmp ugt i32 %i.0.lcssa, 15, !dbg !2606
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !2608

if.end6:                                          ; preds = %for.end
  tail call void @df_note_add_problem() #6, !dbg !2609
  tail call void @df_analyze() #6, !dbg !2610
  %call7 = tail call zeroext i8 @mark_dfs_back_edges() #6, !dbg !2611
  tail call void @alloc_aux_for_blocks(i32 64) #6, !dbg !2612
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2613
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2613
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2613
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2613
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2613
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2614
  %5 = bitcast %struct.edge_def** %e to i8*, !dbg !2614
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2615
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2615
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2615
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2617
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2617
  br label %for.cond8, !dbg !2613

for.cond8:                                        ; preds = %for.end48, %if.end6
  %11 = phi %struct.control_flow_graph* [ %2, %if.end6 ], [ %.pre2, %for.end48 ], !dbg !2619
  %.pn = phi %struct.basic_block_def* [ %3, %if.end6 ], [ %bb.0, %for.end48 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2620
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2620
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2564, metadata !DIExpression()), !dbg !2592
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !2619
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2619
  %cmp11 = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !2619
  br i1 %cmp11, label %for.cond52.preheader, label %for.body12, !dbg !2613

for.cond52.preheader:                             ; preds = %for.cond8
  br label %for.cond52, !dbg !2621

for.body12:                                       ; preds = %for.cond8
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !2622
  %13 = bitcast i8** %aux to %struct.block_info_def**, !dbg !2622
  %14 = load %struct.block_info_def*, %struct.block_info_def** %13, align 8, !dbg !2622
  call void @llvm.dbg.value(metadata %struct.block_info_def* %14, metadata !2567, metadata !DIExpression()), !dbg !2614
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !2623
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !2624
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !2625
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !2625
  %call13 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !2625
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 0, !dbg !2625
  store i32 %15, i32* %7, align 8, !dbg !2625
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 1, !dbg !2625
  store %struct.VEC_edge_gc** %16, %struct.VEC_edge_gc*** %8, align 8, !dbg !2625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !2625
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !2625
  %predecessors = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %14, i64 0, i32 4, !dbg !2626
  br label %for.cond14, !dbg !2625

for.cond14:                                       ; preds = %for.inc26, %for.body12
  %17 = load i32, i32* %9, align 8, !dbg !2628
  %18 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !2628
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2578, metadata !DIExpression(DW_OP_deref)), !dbg !2614
  %call15 = call fastcc zeroext i8 @ei_cond(i32 %17, %struct.VEC_edge_gc** %18, %struct.edge_def** nonnull %e) #7, !dbg !2628
  %tobool16 = icmp eq i8 %call15, 0, !dbg !2625
  br i1 %tobool16, label %for.end27, label %for.body17, !dbg !2625

for.body17:                                       ; preds = %for.cond14
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2629
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !2578, metadata !DIExpression()), !dbg !2614
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 7, !dbg !2630
  %20 = load i32, i32* %flags, align 8, !dbg !2630
  %and = and i32 %20, 32, !dbg !2631
  %tobool18 = icmp eq i32 %and, 0, !dbg !2631
  br i1 %tobool18, label %land.lhs.true, label %for.inc26, !dbg !2632

land.lhs.true:                                    ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !2578, metadata !DIExpression()), !dbg !2614
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 0, !dbg !2633
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2633
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2634
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 1, !dbg !2634
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !2634
  %x_entry_block_ptr21 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 0, !dbg !2634
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr21, align 8, !dbg !2634
  %cmp22 = icmp eq %struct.basic_block_def* %21, %24, !dbg !2635
  br i1 %cmp22, label %for.inc26, label %if.then23, !dbg !2636

if.then23:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* %predecessors, align 4, !dbg !2637
  %inc24 = add nsw i32 %25, 1, !dbg !2637
  store i32 %inc24, i32* %predecessors, align 4, !dbg !2637
  br label %for.inc26, !dbg !2638

for.inc26:                                        ; preds = %land.lhs.true, %for.body17, %if.then23
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2571, metadata !DIExpression(DW_OP_deref)), !dbg !2614
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2628
  br label %for.cond14, !dbg !2628, !llvm.loop !2639

for.end27:                                        ; preds = %for.cond14
  %top = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %14, i64 0, i32 0, i32 0, !dbg !2641
  store i32 -2, i32* %top, align 8, !dbg !2642
  call void @llvm.dbg.value(metadata i32 8, metadata !2579, metadata !DIExpression()), !dbg !2614
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !2643
  %out_reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %14, i64 0, i32 2, !dbg !2643
  %reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %14, i64 0, i32 0, i32 1, !dbg !2648
  br label %for.cond28, !dbg !2650

for.cond28:                                       ; preds = %for.inc46, %for.end27
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc46 ], [ 8, %for.end27 ], !dbg !2651
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !2579, metadata !DIExpression()), !dbg !2614
  %exitcond6 = icmp eq i64 %indvars.iv4, 16, !dbg !2652
  br i1 %exitcond6, label %for.end48, label %for.body30, !dbg !2653

for.body30:                                       ; preds = %for.cond28
  %26 = load i32, i32* %index, align 8, !dbg !2654
  %call31 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %26) #7, !dbg !2654
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call31, i64 0, i32 3, !dbg !2654
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !2654
  %28 = trunc i64 %indvars.iv4 to i32, !dbg !2654
  %call32 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %27, i32 %28) #6, !dbg !2654
  %tobool33 = icmp eq i32 %call32, 0, !dbg !2654
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2655

if.then34:                                        ; preds = %for.body30
  %shl = shl i64 1, %indvars.iv4, !dbg !2656
  %29 = load i64, i64* %out_reg_set, align 8, !dbg !2656
  %or = or i64 %29, %shl, !dbg !2656
  store i64 %or, i64* %out_reg_set, align 8, !dbg !2656
  br label %if.end35, !dbg !2656

if.end35:                                         ; preds = %for.body30, %if.then34
  %30 = load i32, i32* %index, align 8, !dbg !2657
  %call37 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %30) #7, !dbg !2657
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call37, i64 0, i32 2, !dbg !2657
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !2657
  %32 = trunc i64 %indvars.iv4 to i32, !dbg !2657
  %call38 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %31, i32 %32) #6, !dbg !2657
  %tobool39 = icmp eq i32 %call38, 0, !dbg !2657
  br i1 %tobool39, label %for.inc46, label %if.then40, !dbg !2658

if.then40:                                        ; preds = %if.end35
  %shl42 = shl i64 1, %indvars.iv4, !dbg !2659
  %33 = load i64, i64* %reg_set, align 8, !dbg !2659
  %or44 = or i64 %33, %shl42, !dbg !2659
  store i64 %or44, i64* %reg_set, align 8, !dbg !2659
  br label %for.inc46, !dbg !2659

for.inc46:                                        ; preds = %if.end35, %if.then40
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !2660
  call void @llvm.dbg.value(metadata i32 undef, metadata !2579, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2614
  br label %for.cond28, !dbg !2661, !llvm.loop !2662

for.end48:                                        ; preds = %for.cond28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !2664
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !2664
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2619
  %cfg10.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2665
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10.phi.trans.insert, align 8, !dbg !2619
  br label %for.cond8, !dbg !2619, !llvm.loop !2666

for.cond52:                                       ; preds = %for.cond52.preheader, %for.inc83
  %indvars.iv = phi i64 [ 8, %for.cond52.preheader ], [ %indvars.iv.next, %for.inc83 ], !dbg !2668
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2565, metadata !DIExpression()), !dbg !2592
  %exitcond = icmp eq i64 %indvars.iv, 16, !dbg !2669
  br i1 %exitcond, label %for.end85, label %for.body54, !dbg !2621

for.body54:                                       ; preds = %for.cond52
  %34 = add nsw i64 %indvars.iv, -8, !dbg !2670
  br label %for.cond55, !dbg !2673

for.cond55:                                       ; preds = %for.body58, %for.body54
  %mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 8), %for.body54 ], [ %arrayidx64, %for.body58 ]
  %mode.0.in = load i8, i8* %mode.0.in.in, align 1, !dbg !2674
  call void @llvm.dbg.value(metadata i8 %mode.0.in, metadata !2580, metadata !DIExpression()), !dbg !2675
  %cmp56 = icmp eq i8 %mode.0.in, 0, !dbg !2676
  br i1 %cmp56, label %for.end66, label %for.body58, !dbg !2677

for.body58:                                       ; preds = %for.cond55
  %mode.0 = zext i8 %mode.0.in to i32, !dbg !2674
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !2580, metadata !DIExpression()), !dbg !2675
  %35 = trunc i64 %indvars.iv to i32, !dbg !2678
  %call59 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.0, i32 %35) #6, !dbg !2678
  %idxprom60 = zext i8 %mode.0.in to i64, !dbg !2679
  %arrayidx61 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %34, i64 %idxprom60, !dbg !2679
  store %struct.rtx_def* %call59, %struct.rtx_def** %arrayidx61, align 8, !dbg !2680
  %arrayidx64 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom60, !dbg !2681
  br label %for.cond55, !dbg !2682, !llvm.loop !2683

for.end66:                                        ; preds = %for.cond55
  br label %for.cond68, !dbg !2685

for.cond68:                                       ; preds = %for.body71, %for.end66
  %mode.1.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 11), %for.end66 ], [ %arrayidx80, %for.body71 ]
  %mode.1.in = load i8, i8* %mode.1.in.in, align 1, !dbg !2687
  call void @llvm.dbg.value(metadata i8 %mode.1.in, metadata !2580, metadata !DIExpression()), !dbg !2675
  %cmp69 = icmp eq i8 %mode.1.in, 0, !dbg !2688
  br i1 %cmp69, label %for.inc83, label %for.body71, !dbg !2690

for.body71:                                       ; preds = %for.cond68
  %mode.1 = zext i8 %mode.1.in to i32, !dbg !2687
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !2580, metadata !DIExpression()), !dbg !2675
  %36 = trunc i64 %indvars.iv to i32, !dbg !2691
  %call72 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.1, i32 %36) #6, !dbg !2691
  %idxprom76 = zext i8 %mode.1.in to i64, !dbg !2692
  %arrayidx77 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %34, i64 %idxprom76, !dbg !2692
  store %struct.rtx_def* %call72, %struct.rtx_def** %arrayidx77, align 8, !dbg !2693
  %arrayidx80 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom76, !dbg !2694
  br label %for.cond68, !dbg !2695, !llvm.loop !2696

for.inc83:                                        ; preds = %for.cond68
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2698
  call void @llvm.dbg.value(metadata i32 undef, metadata !2565, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2592
  br label %for.cond52, !dbg !2699, !llvm.loop !2700

for.end85:                                        ; preds = %for.cond52
  %call86 = call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 17) #6, !dbg !2702
  store %struct.rtx_def* %call86, %struct.rtx_def** @ix86_flags_rtx, align 8, !dbg !2703
  %37 = load i32, i32* @flag_pic, align 4, !dbg !2704
  %tobool87 = icmp ne i32 %37, 0, !dbg !2704
  %38 = load i32, i32* @ix86_cmodel, align 4, !dbg !2705
  %cmp88 = icmp eq i32 %38, 4, !dbg !2706
  %or.cond = or i1 %tobool87, %cmp88, !dbg !2707
  %cmp91 = icmp eq i32 %38, 7, !dbg !2708
  %or.cond1 = or i1 %or.cond, %cmp91, !dbg !2707
  br i1 %or.cond1, label %if.then93, label %if.else, !dbg !2707

if.then93:                                        ; preds = %for.end85
  %39 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 38) to i64*), align 16, !dbg !2709
  store i64 %39, i64* bitcast (%struct.rtx_def** @not_a_num to i64*), align 8, !dbg !2710
  br label %if.end97, !dbg !2711

if.else:                                          ; preds = %for.end85
  %40 = bitcast %struct.real_value* %r to i8*, !dbg !2712
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8, !dbg !2712
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !2584, metadata !DIExpression(DW_OP_deref)), !dbg !2713
  %call94 = call zeroext i8 @real_nan(%struct.real_value* nonnull %r, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 38) #6, !dbg !2714
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !2584, metadata !DIExpression(DW_OP_deref)), !dbg !2713
  %call95 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* nonnull byval(%struct.real_value) align 8 %r, i32 38) #6, !dbg !2715
  store %struct.rtx_def* %call95, %struct.rtx_def** @not_a_num, align 8, !dbg !2716
  %call96 = call %struct.rtx_def* @force_const_mem(i32 38, %struct.rtx_def* %call95) #6, !dbg !2717
  store %struct.rtx_def* %call96, %struct.rtx_def** @not_a_num, align 8, !dbg !2718
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #8, !dbg !2719
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then93
  %call98 = call i32 @get_max_uid() #6, !dbg !2720
  call void @llvm.dbg.value(metadata i32 %call98, metadata !2566, metadata !DIExpression()), !dbg !2592
  %add = add nsw i32 %call98, 1, !dbg !2721
  %call99 = call fastcc %struct.VEC_char_heap* @VEC_char_heap_alloc(i32 %add) #7, !dbg !2721
  store %struct.VEC_char_heap* %call99, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2722
  %base = getelementptr inbounds %struct.VEC_char_heap, %struct.VEC_char_heap* %call99, i64 0, i32 0, !dbg !2723
  %call101 = call fastcc i8* @VEC_char_base_address(%struct.VEC_char_base* %base) #7, !dbg !2723
  %conv103 = sext i32 %add to i64, !dbg !2724
  %call104 = call i8* @memset(i8* %call101, i32 0, i64 %conv103) #6, !dbg !2725
  call fastcc void @convert_regs() #7, !dbg !2726
  call void @free_aux_for_blocks() #6, !dbg !2727
  br label %cleanup, !dbg !2728

cleanup:                                          ; preds = %for.end, %if.end97
  %retval.0 = phi i8 [ 1, %if.end97 ], [ 0, %for.end ], !dbg !2592
  ret i8 %retval.0, !dbg !2729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_char_heap_free(%struct.VEC_char_heap** %vec_) unnamed_addr #0 !dbg !2730 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_char_heap** @stack_regs_mentioned_data, metadata !2734, metadata !DIExpression()), !dbg !2735
  %0 = load %struct.VEC_char_heap*, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2736
  %tobool = icmp eq %struct.VEC_char_heap* %0, null, !dbg !2736
  br i1 %tobool, label %if.end, label %if.then, !dbg !2738

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_char_heap* %0 to i8*, !dbg !2738
  tail call void @free(i8* nonnull %1) #6, !dbg !2736
  br label %if.end, !dbg !2736

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_char_heap* null, %struct.VEC_char_heap** @stack_regs_mentioned_data, align 8, !dbg !2738
  ret void, !dbg !2738
}

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) local_unnamed_addr #2

declare dso_local void @df_note_add_problem() local_unnamed_addr #2

declare dso_local void @df_analyze() local_unnamed_addr #2

declare dso_local zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #2

declare dso_local void @alloc_aux_for_blocks(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2739 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2743, metadata !DIExpression()), !dbg !2745
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2746
  store i32 0, i32* %index, align 8, !dbg !2747
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2748
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2749
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2750
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2750
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2750
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2751 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2757, metadata !DIExpression()), !dbg !2758
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2759
  %tobool = icmp eq i8 %call, 0, !dbg !2759
  br i1 %tobool, label %if.then, label %if.else, !dbg !2761

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2762
  br label %return, !dbg !2764

if.else:                                          ; preds = %entry
  br label %return, !dbg !2765

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !2767
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !2767
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !2767
  ret i8 %retval.0, !dbg !2768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !2769 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !2774, metadata !DIExpression()), !dbg !2775
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !2776
  %0 = load i32, i32* %index, align 8, !dbg !2776
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !2776
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2776
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !2776
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2776
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2776

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !2776
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2776
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !2776
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2776
  br label %cond.end, !dbg !2776

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2776
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !2776
  %cmp = icmp ult i32 %0, %call2, !dbg !2776
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !2776

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2776
  br label %cond.end5, !dbg !2776

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !2777
  %inc = add i32 %5, 1, !dbg !2777
  store i32 %inc, i32* %index, align 8, !dbg !2777
  ret void, !dbg !2778
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !2779 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !2783, metadata !DIExpression()), !dbg !2784
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2785
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2785
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2785
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !2787
  %2 = load i32, i32* %block_info_size, align 8, !dbg !2787
  %cmp = icmp ugt i32 %2, %index, !dbg !2788
  br i1 %cmp, label %if.then, label %return, !dbg !2789

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !2790
  %3 = load i8**, i8*** %block_info, align 8, !dbg !2790
  %idxprom = zext i32 %index to i64, !dbg !2791
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !2791
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !2791
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !2791
  br label %return, !dbg !2792

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !2793
  ret %struct.df_lr_bb_info* %retval.0, !dbg !2794
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @real_nan(%struct.real_value*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @get_max_uid() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_char_heap* @VEC_char_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !2795 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !2799, metadata !DIExpression()), !dbg !2800
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 1) #6, !dbg !2801
  %0 = bitcast i8* %call to %struct.VEC_char_heap*, !dbg !2801
  ret %struct.VEC_char_heap* %0, !dbg !2801
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_regs() unnamed_addr #5 !dbg !2802 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !2814
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2814
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2815
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2815
  %call = tail call fastcc i32 @convert_regs_entry() #7, !dbg !2816
  call void @llvm.dbg.value(metadata i32 %call, metadata !2806, metadata !DIExpression()), !dbg !2817
  tail call fastcc void @convert_regs_exit() #7, !dbg !2818
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2819
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !2819
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2819
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2819
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2819
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 2, !dbg !2819
  %5 = bitcast i8** %aux to %struct.block_info_def**, !dbg !2819
  %6 = load %struct.block_info_def*, %struct.block_info_def** %5, align 8, !dbg !2819
  %done = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %6, i64 0, i32 3, !dbg !2820
  store i32 1, i32* %done, align 8, !dbg !2821
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2822
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !2822
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2822
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !2822
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2822
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 1, !dbg !2822
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2822
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2822
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !2822
  store i32 %11, i32* %10, align 8, !dbg !2822
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2822
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !2822
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !2822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !2822
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !2822
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2824
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2824
  br label %for.cond, !dbg !2822

for.cond:                                         ; preds = %for.body, %entry
  %16 = load i32, i32* %14, align 8, !dbg !2826
  %17 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !2826
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2808, metadata !DIExpression(DW_OP_deref)), !dbg !2817
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %16, %struct.VEC_edge_gc** %17, %struct.edge_def** nonnull %e) #7, !dbg !2826
  %tobool = icmp eq i8 %call4, 0, !dbg !2822
  br i1 %tobool, label %for.end, label %for.body, !dbg !2822

for.body:                                         ; preds = %for.cond
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2827
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !2808, metadata !DIExpression()), !dbg !2817
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i64 0, i32 1, !dbg !2828
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2828
  call fastcc void @convert_regs_2(%struct.basic_block_def* %19) #7, !dbg !2829
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2809, metadata !DIExpression(DW_OP_deref)), !dbg !2817
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2826
  br label %for.cond, !dbg !2826, !llvm.loop !2830

for.end:                                          ; preds = %for.cond
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2832
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !2832
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !2832
  %x_entry_block_ptr7 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 0, !dbg !2832
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr7, align 8, !dbg !2832
  br label %for.cond8, !dbg !2832

for.cond8:                                        ; preds = %for.inc16, %for.end
  %.pre2 = phi %struct.function* [ %20, %for.end ], [ %.pre, %for.inc16 ]
  %23 = phi %struct.control_flow_graph* [ %21, %for.end ], [ %.pre1, %for.inc16 ], !dbg !2833
  %.pn = phi %struct.basic_block_def* [ %22, %for.end ], [ %b.0, %for.inc16 ]
  %b.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2834
  %b.0 = load %struct.basic_block_def*, %struct.basic_block_def** %b.0.in, align 8, !dbg !2834
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0, metadata !2807, metadata !DIExpression()), !dbg !2817
  %x_exit_block_ptr11 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 1, !dbg !2833
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr11, align 8, !dbg !2833
  %cmp = icmp eq %struct.basic_block_def* %b.0, %24, !dbg !2833
  br i1 %cmp, label %for.end18, label %for.body12, !dbg !2832

for.body12:                                       ; preds = %for.cond8
  %aux13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 2, !dbg !2835
  %25 = bitcast i8** %aux13 to %struct.block_info_def**, !dbg !2835
  %26 = load %struct.block_info_def*, %struct.block_info_def** %25, align 8, !dbg !2835
  call void @llvm.dbg.value(metadata %struct.block_info_def* %26, metadata !2810, metadata !DIExpression()), !dbg !2836
  %done14 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %26, i64 0, i32 3, !dbg !2837
  %27 = load i32, i32* %done14, align 8, !dbg !2837
  %tobool15 = icmp eq i32 %27, 0, !dbg !2839
  br i1 %tobool15, label %if.then, label %for.inc16, !dbg !2840

if.then:                                          ; preds = %for.body12
  call fastcc void @convert_regs_2(%struct.basic_block_def* %b.0) #7, !dbg !2841
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2833
  br label %for.inc16, !dbg !2841

for.inc16:                                        ; preds = %for.body12, %if.then
  %.pre = phi %struct.function* [ %.pre2, %for.body12 ], [ %.pre.pre, %if.then ], !dbg !2833
  %cfg10.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2842
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10.phi.trans.insert, align 8, !dbg !2833
  br label %for.cond8, !dbg !2833, !llvm.loop !2843

for.end18:                                        ; preds = %for.cond8
  %call19 = call fastcc zeroext i8 @compensate_edges() #7, !dbg !2845
  %conv = zext i8 %call19 to i32, !dbg !2845
  %or = or i32 %call, %conv, !dbg !2846
  call void @llvm.dbg.value(metadata i32 %or, metadata !2806, metadata !DIExpression()), !dbg !2817
  call void @clear_aux_for_blocks() #6, !dbg !2847
  call void @fixup_abnormal_edges() #6, !dbg !2848
  %tobool20 = icmp eq i32 %or, 0, !dbg !2849
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !2851

if.then21:                                        ; preds = %for.end18
  call void @commit_edge_insertions() #6, !dbg !2852
  br label %if.end22, !dbg !2852

if.end22:                                         ; preds = %for.end18, %if.then21
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2853
  %tobool23 = icmp eq %struct._IO_FILE* %28, null, !dbg !2853
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !2855

if.then24:                                        ; preds = %if.end22
  %call25 = call i32 @fputc(i32 10, %struct._IO_FILE* nonnull %28) #6, !dbg !2856
  br label %if.end26, !dbg !2856

if.end26:                                         ; preds = %if.end22, %if.then24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2857
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2857
  ret void, !dbg !2857
}

declare dso_local void @free_aux_for_blocks() local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !2858 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !2863
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2863
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2863

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !2863
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2863
  br label %cond.end, !dbg !2863

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2863
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !2863
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !2864
  %conv3 = zext i1 %cmp to i8, !dbg !2865
  ret i8 %conv3, !dbg !2866
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !2867 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !2872
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2872
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2872

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !2872
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2872
  br label %cond.end, !dbg !2872

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2872
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !2872
  ret %struct.edge_def* %call2, !dbg !2873
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !2874 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !2880, metadata !DIExpression()), !dbg !2881
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !2882
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2882

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !2882
  %0 = load i32, i32* %num, align 8, !dbg !2882
  br label %cond.end, !dbg !2882

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2882
  ret i32 %cond, !dbg !2882
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !2883 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !2888
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2888

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2888
  br label %cond.end, !dbg !2888

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !2889
  ret %struct.VEC_edge_gc* %0, !dbg !2890
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2891 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !2895, metadata !DIExpression()), !dbg !2897
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2896, metadata !DIExpression()), !dbg !2897
  br label %land.end, !dbg !2898

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2898
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2898
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !2898
  ret %struct.edge_def* %0, !dbg !2898
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @convert_regs_entry() unnamed_addr #5 !dbg !2899 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !2901, metadata !DIExpression()), !dbg !2916
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !2917
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2917
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2918
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2918
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2919
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2919
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2919
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !2919
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2919
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !2919
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2919
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 1, !dbg !2919
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2919
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2919
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !2919
  store i32 %7, i32* %6, align 8, !dbg !2919
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2919
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !2919
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !2919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !2919
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2919
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2920
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2920
  br label %for.cond, !dbg !2919

for.cond:                                         ; preds = %for.end, %entry
  %inserted.0 = phi i32 [ 0, %entry ], [ %inserted.1.lcssa, %for.end ], !dbg !2921
  call void @llvm.dbg.value(metadata i32 %inserted.0, metadata !2901, metadata !DIExpression()), !dbg !2916
  %12 = load i32, i32* %10, align 8, !dbg !2922
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !2922
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2902, metadata !DIExpression(DW_OP_deref)), !dbg !2916
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !2922
  %tobool = icmp eq i8 %call1, 0, !dbg !2919
  br i1 %tobool, label %for.end11, label %for.body, !dbg !2919

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2923
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !2902, metadata !DIExpression()), !dbg !2916
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 1, !dbg !2924
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2924
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !2904, metadata !DIExpression()), !dbg !2925
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 2, !dbg !2926
  %16 = bitcast i8** %aux to %struct.block_info_def**, !dbg !2926
  %17 = load %struct.block_info_def*, %struct.block_info_def** %16, align 8, !dbg !2926
  call void @llvm.dbg.value(metadata %struct.block_info_def* %17, metadata !2908, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 -1, metadata !2910, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 15, metadata !2909, metadata !DIExpression()), !dbg !2925
  %reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %17, i64 0, i32 0, i32 1, !dbg !2927
  br label %for.cond2, !dbg !2928

for.cond2:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 15, %for.body ], !dbg !2929
  %reg.0 = phi i32 [ %dec, %for.inc ], [ 15, %for.body ], !dbg !2929
  %top.0 = phi i32 [ %top.1, %for.inc ], [ -1, %for.body ], !dbg !2925
  %inserted.1 = phi i32 [ %inserted.2, %for.inc ], [ %inserted.0, %for.body ], !dbg !2916
  call void @llvm.dbg.value(metadata i32 %inserted.1, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %top.0, metadata !2910, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2909, metadata !DIExpression()), !dbg !2925
  %cmp = icmp ugt i64 %indvars.iv, 7, !dbg !2930
  br i1 %cmp, label %for.body3, label %for.end, !dbg !2931

for.body3:                                        ; preds = %for.cond2
  %18 = load i64, i64* %reg_set, align 8, !dbg !2932
  %shl = shl i64 1, %indvars.iv, !dbg !2932
  %and = and i64 %18, %shl, !dbg !2932
  %tobool4 = icmp eq i64 %and, 0, !dbg !2932
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !2933

if.then:                                          ; preds = %for.body3
  %conv = trunc i32 %reg.0 to i8, !dbg !2934
  %inc = add nsw i32 %top.0, 1, !dbg !2935
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2910, metadata !DIExpression()), !dbg !2925
  %idxprom = sext i32 %inc to i64, !dbg !2936
  %arrayidx = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %17, i64 0, i32 0, i32 2, i64 %idxprom, !dbg !2936
  store i8 %conv, i8* %arrayidx, align 1, !dbg !2937
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 38), align 16, !dbg !2938
  %20 = load %struct.rtx_def*, %struct.rtx_def** @not_a_num, align 8, !dbg !2938
  %call7 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %19, %struct.rtx_def* %20) #6, !dbg !2938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !2911, metadata !DIExpression()), !dbg !2939
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2940
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !2902, metadata !DIExpression()), !dbg !2916
  call void @insert_insn_on_edge(%struct.rtx_def* %call7, %struct.edge_def* %21) #6, !dbg !2941
  call void @llvm.dbg.value(metadata i32 1, metadata !2901, metadata !DIExpression()), !dbg !2916
  br label %for.inc, !dbg !2942

for.inc:                                          ; preds = %for.body3, %if.then
  %top.1 = phi i32 [ %inc, %if.then ], [ %top.0, %for.body3 ], !dbg !2925
  %inserted.2 = phi i32 [ 1, %if.then ], [ %inserted.1, %for.body3 ], !dbg !2916
  call void @llvm.dbg.value(metadata i32 %inserted.2, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %top.1, metadata !2910, metadata !DIExpression()), !dbg !2925
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2943
  %dec = add nsw i32 %reg.0, -1, !dbg !2943
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2909, metadata !DIExpression()), !dbg !2925
  br label %for.cond2, !dbg !2944, !llvm.loop !2945

for.end:                                          ; preds = %for.cond2
  %top.0.lcssa = phi i32 [ %top.0, %for.cond2 ], !dbg !2925
  %inserted.1.lcssa = phi i32 [ %inserted.1, %for.cond2 ], !dbg !2916
  call void @llvm.dbg.value(metadata i32 %top.0.lcssa, metadata !2910, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 %inserted.1.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %top.0.lcssa, metadata !2910, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 %inserted.1.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %top.0.lcssa, metadata !2910, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 %inserted.1.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  %top9 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %17, i64 0, i32 0, i32 0, !dbg !2947
  store i32 %top.0.lcssa, i32* %top9, align 8, !dbg !2948
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2903, metadata !DIExpression(DW_OP_deref)), !dbg !2916
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2922
  br label %for.cond, !dbg !2922, !llvm.loop !2949

for.end11:                                        ; preds = %for.cond
  %inserted.0.lcssa = phi i32 [ %inserted.0, %for.cond ], !dbg !2921
  call void @llvm.dbg.value(metadata i32 %inserted.0.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %inserted.0.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %inserted.0.lcssa, metadata !2901, metadata !DIExpression()), !dbg !2916
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2951
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2951
  ret i32 %inserted.0.lcssa, !dbg !2952
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_regs_exit() unnamed_addr #5 !dbg !2953 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2962
  %call = tail call fastcc %struct.rtx_def* @stack_result(%union.tree_node* %0) #7, !dbg !2963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2958, metadata !DIExpression()), !dbg !2964
  call void @llvm.dbg.value(metadata i32 -1, metadata !2956, metadata !DIExpression()), !dbg !2964
  call void @llvm.dbg.value(metadata i32 -1, metadata !2955, metadata !DIExpression()), !dbg !2964
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !2965
  br i1 %tobool, label %if.end, label %if.then, !dbg !2967

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %call) #7, !dbg !2968
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2955, metadata !DIExpression()), !dbg !2964
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2970
  %bf.load = load i32, i32* %1, align 8, !dbg !2970
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2970
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2970
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %call) #7, !dbg !2970
  %call3 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear, i32 %call2) #7, !dbg !2970
  %sub = add i32 %call3, -1, !dbg !2971
  call void @llvm.dbg.value(metadata i32 %sub, metadata !2956, metadata !DIExpression()), !dbg !2964
  br label %if.end, !dbg !2972

if.end:                                           ; preds = %entry, %if.then
  %value_reg_high.0 = phi i32 [ %sub, %if.then ], [ -1, %entry ], !dbg !2964
  %value_reg_low.0 = phi i32 [ %call1, %if.then ], [ -1, %entry ], !dbg !2964
  call void @llvm.dbg.value(metadata i32 %value_reg_low.0, metadata !2955, metadata !DIExpression()), !dbg !2964
  call void @llvm.dbg.value(metadata i32 %value_reg_high.0, metadata !2956, metadata !DIExpression()), !dbg !2964
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2973
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !2973
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2973
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2973
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2973
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 2, !dbg !2973
  %5 = bitcast i8** %aux to %struct.block_info_def**, !dbg !2973
  %6 = load %struct.block_info_def*, %struct.block_info_def** %5, align 8, !dbg !2973
  call void @llvm.dbg.value(metadata %struct.block_info_def* %6, metadata !2957, metadata !DIExpression()), !dbg !2964
  %cmp = icmp eq i32 %value_reg_low.0, -1, !dbg !2974
  br i1 %cmp, label %if.then4, label %if.else, !dbg !2975

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.block_info_def* %6, metadata !2957, metadata !DIExpression()), !dbg !2964
  %top = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %6, i64 0, i32 0, i32 0, !dbg !2976
  store i32 -1, i32* %top, align 8, !dbg !2977
  br label %if.end10, !dbg !2978

if.else:                                          ; preds = %if.end
  %sub5 = sub nsw i32 %value_reg_high.0, %value_reg_low.0, !dbg !2979
  %top6 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %6, i64 0, i32 0, i32 0, !dbg !2980
  store i32 %sub5, i32* %top6, align 8, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %value_reg_low.0, metadata !2959, metadata !DIExpression()), !dbg !2982
  %reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %6, i64 0, i32 0, i32 1, !dbg !2983
  br label %for.cond, !dbg !2987

for.cond:                                         ; preds = %for.body, %if.else
  %reg.0 = phi i32 [ %value_reg_low.0, %if.else ], [ %inc, %for.body ], !dbg !2988
  call void @llvm.dbg.value(metadata i32 %reg.0, metadata !2959, metadata !DIExpression()), !dbg !2982
  %cmp7 = icmp slt i32 %value_reg_high.0, %reg.0, !dbg !2989
  br i1 %cmp7, label %if.end10.loopexit, label %for.body, !dbg !2990

for.body:                                         ; preds = %for.cond
  %conv = trunc i32 %reg.0 to i8, !dbg !2991
  %sub9 = sub nsw i32 %value_reg_high.0, %reg.0, !dbg !2992
  %idxprom = sext i32 %sub9 to i64, !dbg !2993
  %arrayidx = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %6, i64 0, i32 0, i32 2, i64 %idxprom, !dbg !2993
  store i8 %conv, i8* %arrayidx, align 1, !dbg !2994
  %sh_prom = zext i32 %reg.0 to i64, !dbg !2995
  %shl = shl i64 1, %sh_prom, !dbg !2995
  %7 = load i64, i64* %reg_set, align 8, !dbg !2995
  %or = or i64 %7, %shl, !dbg !2995
  store i64 %or, i64* %reg_set, align 8, !dbg !2995
  %inc = add nsw i32 %reg.0, 1, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2959, metadata !DIExpression()), !dbg !2982
  br label %for.cond, !dbg !2997, !llvm.loop !2998

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !3000

if.end10:                                         ; preds = %if.end10.loopexit, %if.then4
  ret void, !dbg !3000
}

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_regs_2(%struct.basic_block_def* %block) unnamed_addr #5 !dbg !3001 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !3005, metadata !DIExpression()), !dbg !3011
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3012
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3012
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3012
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !3012
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3012
  %conv = sext i32 %2 to i64, !dbg !3012
  %mul = shl nsw i64 %conv, 3, !dbg !3012
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3012
  %3 = bitcast i8* %call to %struct.basic_block_def**, !dbg !3012
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %3, metadata !3006, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %3, metadata !3007, metadata !DIExpression()), !dbg !3011
  %incdec.ptr = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3013
  %4 = bitcast i8* %incdec.ptr to %struct.basic_block_def**, !dbg !3013
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %4, metadata !3007, metadata !DIExpression()), !dbg !3011
  store %struct.basic_block_def* %block, %struct.basic_block_def** %3, align 8, !dbg !3014
  %5 = bitcast %struct.edge_def** %e to i8*, !dbg !3015
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3015
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3016
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3016
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3016
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3018
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3018
  br label %do.body, !dbg !3020

do.body:                                          ; preds = %for.end, %entry
  %sp.0 = phi %struct.basic_block_def** [ %4, %entry ], [ %sp.1.lcssa, %for.end ], !dbg !3011
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.0, metadata !3007, metadata !DIExpression()), !dbg !3011
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3021
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !3022
  %incdec.ptr1 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %sp.0, i64 -1, !dbg !3023
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %incdec.ptr1, metadata !3007, metadata !DIExpression()), !dbg !3011
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %incdec.ptr1, align 8, !dbg !3024
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !3005, metadata !DIExpression()), !dbg !3011
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !3025
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 1, !dbg !3025
  %call2 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3025
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call2, 0, !dbg !3025
  store i32 %13, i32* %8, align 8, !dbg !3025
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call2, 1, !dbg !3025
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %9, align 8, !dbg !3025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !3025
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !3025
  br label %for.cond, !dbg !3025

for.cond:                                         ; preds = %for.inc, %do.body
  %sp.1 = phi %struct.basic_block_def** [ %incdec.ptr1, %do.body ], [ %sp.3, %for.inc ], !dbg !3023
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.1, metadata !3007, metadata !DIExpression()), !dbg !3011
  %15 = load i32, i32* %10, align 8, !dbg !3026
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !3026
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3008, metadata !DIExpression(DW_OP_deref)), !dbg !3015
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !3026
  %tobool = icmp eq i8 %call3, 0, !dbg !3025
  br i1 %tobool, label %for.end, label %for.body, !dbg !3025

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3027
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3008, metadata !DIExpression()), !dbg !3015
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 7, !dbg !3029
  %18 = load i32, i32* %flags, align 8, !dbg !3029
  %and = and i32 %18, 32, !dbg !3030
  %tobool4 = icmp eq i32 %and, 0, !dbg !3030
  br i1 %tobool4, label %if.then, label %for.inc, !dbg !3031

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3008, metadata !DIExpression()), !dbg !3015
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 1, !dbg !3032
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3032
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 2, !dbg !3032
  %20 = bitcast i8** %aux to %struct.block_info_def**, !dbg !3032
  %21 = load %struct.block_info_def*, %struct.block_info_def** %20, align 8, !dbg !3032
  %predecessors = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %21, i64 0, i32 4, !dbg !3034
  %22 = load i32, i32* %predecessors, align 4, !dbg !3035
  %dec = add nsw i32 %22, -1, !dbg !3035
  store i32 %dec, i32* %predecessors, align 4, !dbg !3035
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3008, metadata !DIExpression()), !dbg !3015
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3036
  %aux6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 2, !dbg !3036
  %24 = bitcast i8** %aux6 to %struct.block_info_def**, !dbg !3036
  %25 = load %struct.block_info_def*, %struct.block_info_def** %24, align 8, !dbg !3036
  %predecessors7 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %25, i64 0, i32 4, !dbg !3038
  %26 = load i32, i32* %predecessors7, align 4, !dbg !3038
  %tobool8 = icmp eq i32 %26, 0, !dbg !3036
  br i1 %tobool8, label %if.then9, label %for.inc, !dbg !3039

if.then9:                                         ; preds = %if.then
  %27 = ptrtoint %struct.basic_block_def* %23 to i64, !dbg !3039
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3008, metadata !DIExpression()), !dbg !3015
  %incdec.ptr11 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %sp.1, i64 1, !dbg !3040
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %incdec.ptr11, metadata !3007, metadata !DIExpression()), !dbg !3011
  %28 = bitcast %struct.basic_block_def** %sp.1 to i64*, !dbg !3041
  store i64 %27, i64* %28, align 8, !dbg !3041
  br label %for.inc, !dbg !3042

for.inc:                                          ; preds = %if.then, %for.body, %if.then9
  %sp.3 = phi %struct.basic_block_def** [ %sp.1, %for.body ], [ %sp.1, %if.then ], [ %incdec.ptr11, %if.then9 ], !dbg !3023
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.3, metadata !3007, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3010, metadata !DIExpression(DW_OP_deref)), !dbg !3015
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3026
  br label %for.cond, !dbg !3026, !llvm.loop !3043

for.end:                                          ; preds = %for.cond
  %sp.1.lcssa = phi %struct.basic_block_def** [ %sp.1, %for.cond ], !dbg !3023
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.1.lcssa, metadata !3007, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.1.lcssa, metadata !3007, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %sp.1.lcssa, metadata !3007, metadata !DIExpression()), !dbg !3011
  call fastcc void @convert_regs_1(%struct.basic_block_def* %12) #7, !dbg !3045
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !3046
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !3046
  %cmp = icmp eq %struct.basic_block_def** %sp.1.lcssa, %3, !dbg !3047
  br i1 %cmp, label %do.end, label %do.body, !dbg !3048, !llvm.loop !3049

do.end:                                           ; preds = %for.end
  call void @free(i8* %call) #6, !dbg !3051
  ret void, !dbg !3052
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compensate_edges() unnamed_addr #5 !dbg !3053 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !3055, metadata !DIExpression()), !dbg !3063
  store i1 false, i1* @starting_stack_p, align 1, !dbg !3064
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3065
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3065
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3065
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3065
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3065
  %3 = bitcast %struct.edge_def** %e to i8*, !dbg !3066
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3066
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3067
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3067
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3067
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3069
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3069
  br label %for.cond, !dbg !3065

for.cond:                                         ; preds = %for.inc13, %entry
  %.pre3 = phi %struct.function* [ %0, %entry ], [ %.pre, %for.inc13 ]
  %10 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.inc13 ], !dbg !3071
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc13 ]
  %inserted.0 = phi i8 [ 0, %entry ], [ %inserted.2, %for.inc13 ], !dbg !3072
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3073
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3073
  call void @llvm.dbg.value(metadata i8 %inserted.0, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3056, metadata !DIExpression()), !dbg !3063
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !3071
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3071
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %11, !dbg !3071
  br i1 %cmp, label %for.end15, label %for.body, !dbg !3065

for.body:                                         ; preds = %for.cond
  %x_entry_block_ptr5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 0, !dbg !3074
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr5, align 8, !dbg !3074
  %cmp6 = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !3075
  br i1 %cmp6, label %for.inc13, label %if.then, !dbg !3076

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3077
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3078
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !3079
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3079
  %call = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3079
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3079
  store i32 %13, i32* %6, align 8, !dbg !3079
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3079
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %7, align 8, !dbg !3079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !3079
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !3079
  br label %for.cond7, !dbg !3079

for.cond7:                                        ; preds = %for.body9, %if.then
  %inserted.1 = phi i8 [ %inserted.0, %if.then ], [ %or1, %for.body9 ], !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.1, metadata !3055, metadata !DIExpression()), !dbg !3063
  %15 = load i32, i32* %8, align 8, !dbg !3080
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !3080
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3057, metadata !DIExpression(DW_OP_deref)), !dbg !3066
  %call8 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !3080
  %tobool = icmp eq i8 %call8, 0, !dbg !3079
  br i1 %tobool, label %for.end, label %for.body9, !dbg !3079

for.body9:                                        ; preds = %for.cond7
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3081
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !3057, metadata !DIExpression()), !dbg !3066
  %call10 = call fastcc zeroext i8 @compensate_edge(%struct.edge_def* %17) #7, !dbg !3082
  %or1 = or i8 %inserted.1, %call10, !dbg !3083
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3062, metadata !DIExpression(DW_OP_deref)), !dbg !3066
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3080
  br label %for.cond7, !dbg !3080, !llvm.loop !3084

for.end:                                          ; preds = %for.cond7
  %inserted.1.lcssa = phi i8 [ %inserted.1, %for.cond7 ], !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.1.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.1.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.1.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3086
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3086
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3071
  br label %for.inc13, !dbg !3087

for.inc13:                                        ; preds = %for.body, %for.end
  %.pre = phi %struct.function* [ %.pre.pre, %for.end ], [ %.pre3, %for.body ], !dbg !3071
  %inserted.2 = phi i8 [ %inserted.1.lcssa, %for.end ], [ %inserted.0, %for.body ], !dbg !3072
  call void @llvm.dbg.value(metadata i8 %inserted.2, metadata !3055, metadata !DIExpression()), !dbg !3063
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3088
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3071
  br label %for.cond, !dbg !3071, !llvm.loop !3089

for.end15:                                        ; preds = %for.cond
  %inserted.0.lcssa = phi i8 [ %inserted.0, %for.cond ], !dbg !3072
  call void @llvm.dbg.value(metadata i8 %inserted.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata i8 %inserted.0.lcssa, metadata !3055, metadata !DIExpression()), !dbg !3063
  ret i8 %inserted.0.lcssa, !dbg !3091
}

declare dso_local void @clear_aux_for_blocks() local_unnamed_addr #2

declare dso_local void @fixup_abnormal_edges() local_unnamed_addr #2

declare dso_local void @commit_edge_insertions() local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @stack_result(%union.tree_node* %decl) unnamed_addr #5 !dbg !3092 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3096, metadata !DIExpression()), !dbg !3098
  %result1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 3, !dbg !3099
  %0 = load %union.tree_node*, %union.tree_node** %result1, align 8, !dbg !3099
  %call = tail call i32 @aggregate_value_p(%union.tree_node* %0, %union.tree_node* %decl) #6, !dbg !3101
  %tobool = icmp eq i32 %call, 0, !dbg !3101
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3102

if.end:                                           ; preds = %entry
  %1 = bitcast %union.tree_node** %result1 to i64**, !dbg !3103
  %2 = load i64*, i64** %1, align 8, !dbg !3103
  %bf.load = load i64, i64* %2, align 8, !dbg !3103
  %bf.cast = and i64 %bf.load, 65535, !dbg !3103
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !3103
  %3 = load i8, i8* %arrayidx4, align 1, !dbg !3103
  %tobool5 = icmp eq i8 %3, 0, !dbg !3103
  br i1 %tobool5, label %cond.end26, label %land.lhs.true, !dbg !3103

land.lhs.true:                                    ; preds = %if.end
  %rtl = getelementptr inbounds i64, i64* %2, i64 14, !dbg !3103
  %4 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !3103
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !3103
  %cmp = icmp eq %struct.rtx_def* %5, null, !dbg !3103
  br i1 %cmp, label %cond.end26, label %cond.true, !dbg !3103

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %cond.false, label %cond.true14, !dbg !3103

cond.true14:                                      ; preds = %cond.true
  br label %cond.end26, !dbg !3103

cond.false:                                       ; preds = %cond.true
  br label %cond.end26, !dbg !3103

cond.end26:                                       ; preds = %land.lhs.true, %if.end, %cond.true14, %cond.false
  %cond27 = phi i1 [ false, %cond.true14 ], [ undef, %cond.false ], [ true, %land.lhs.true ], [ true, %if.end ]
  br i1 %cond27, label %if.end34, label %if.then30, !dbg !3104

if.then30:                                        ; preds = %cond.end26
  %6 = load %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 15), align 8, !dbg !3105
  %type = getelementptr inbounds i64, i64* %2, i64 2, !dbg !3107
  %7 = bitcast i64* %type to %union.tree_node**, !dbg !3107
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3107
  %call33 = tail call %struct.rtx_def* %6(%union.tree_node* %8, %union.tree_node* %decl, i8 zeroext 1) #6, !dbg !3108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !3097, metadata !DIExpression()), !dbg !3098
  br label %if.end34, !dbg !3109

if.end34:                                         ; preds = %cond.end26, %if.then30
  %result.0 = phi %struct.rtx_def* [ %call33, %if.then30 ], [ null, %cond.end26 ], !dbg !3098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.0, metadata !3097, metadata !DIExpression()), !dbg !3098
  %cmp35 = icmp eq %struct.rtx_def* %result.0, null, !dbg !3110
  br i1 %cmp35, label %cond.false48, label %land.lhs.true37, !dbg !3111

land.lhs.true37:                                  ; preds = %if.end34
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %result.0, i64 0, i32 0, !dbg !3112
  %bf.load38 = load i32, i32* %9, align 8, !dbg !3112
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !3112
  %cmp40 = icmp eq i32 %bf.clear39, 37, !dbg !3112
  br i1 %cmp40, label %land.lhs.true42, label %cond.false48, !dbg !3112

land.lhs.true42:                                  ; preds = %land.lhs.true37
  %call43 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %result.0) #7, !dbg !3112
  %10 = and i32 %call43, -8, !dbg !3112
  %cmp45 = icmp eq i32 %10, 8, !dbg !3112
  br i1 %cmp45, label %cleanup, label %cond.false48, !dbg !3113

cond.false48:                                     ; preds = %if.end34, %land.lhs.true42, %land.lhs.true37
  br label %cleanup, !dbg !3113

cleanup:                                          ; preds = %entry, %cond.false48, %land.lhs.true42
  %retval.0 = phi %struct.rtx_def* [ null, %entry ], [ null, %cond.false48 ], [ %result.0, %land.lhs.true42 ], !dbg !3098
  ret %struct.rtx_def* %retval.0, !dbg !3114
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) unnamed_addr #0 !dbg !3115 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3120, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3121, metadata !DIExpression()), !dbg !3122
  %idxprom = zext i32 %regno to i64, !dbg !3123
  %idxprom1 = sext i32 %mode to i64, !dbg !3123
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !3123
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !3123
  %conv = zext i8 %0 to i32, !dbg !3123
  %add = add i32 %conv, %regno, !dbg !3124
  ret i32 %add, !dbg !3125
}

declare dso_local i32 @aggregate_value_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @convert_regs_1(%struct.basic_block_def* %block) unnamed_addr #5 !dbg !3126 {
entry:
  %regstack = alloca %struct.stack_def, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %block, metadata !3128, metadata !DIExpression()), !dbg !3147
  %0 = bitcast %struct.stack_def* %regstack to i8*, !dbg !3148
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3148
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 2, !dbg !3149
  %1 = bitcast i8** %aux to %struct.block_info_def**, !dbg !3149
  %2 = load %struct.block_info_def*, %struct.block_info_def** %1, align 8, !dbg !3149
  call void @llvm.dbg.value(metadata %struct.block_info_def* %2, metadata !3130, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 0, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 0, metadata !3135, metadata !DIExpression()), !dbg !3147
  store i1 false, i1* @any_malformed_asm, align 1, !dbg !3150
  %top = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 0, i32 0, !dbg !3151
  %3 = load i32, i32* %top, align 8, !dbg !3151
  %cmp = icmp eq i32 %3, -2, !dbg !3152
  br i1 %cmp, label %if.then, label %if.end24, !dbg !3153

if.then:                                          ; preds = %entry
  %4 = bitcast %struct.edge_def** %e to i8*, !dbg !3154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3154
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3139, metadata !DIExpression()), !dbg !3155
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3156
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !3156
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3157
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !3157
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 0, !dbg !3157
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !3157
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3157
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3157
  store i32 %8, i32* %7, align 8, !dbg !3157
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3157
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3157
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !3157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !3157
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !3157
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3159
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3159
  br label %for.cond, !dbg !3157

for.cond:                                         ; preds = %for.inc, %if.then
  %beste.0 = phi %struct.edge_def* [ null, %if.then ], [ %beste.1, %for.inc ], !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_def* %beste.0, metadata !3139, metadata !DIExpression()), !dbg !3155
  %13 = load i32, i32* %11, align 8, !dbg !3161
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !3161
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3136, metadata !DIExpression(DW_OP_deref)), !dbg !3155
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !3161
  %tobool = icmp eq i8 %call1, 0, !dbg !3157
  br i1 %tobool, label %for.end, label %for.body, !dbg !3157

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3162
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !3136, metadata !DIExpression()), !dbg !3155
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !3162
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3162
  %aux2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 2, !dbg !3162
  %17 = bitcast i8** %aux2 to %struct.block_info_def**, !dbg !3162
  %18 = load %struct.block_info_def*, %struct.block_info_def** %17, align 8, !dbg !3162
  %done = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %18, i64 0, i32 3, !dbg !3164
  %19 = load i32, i32* %done, align 8, !dbg !3164
  %tobool3 = icmp eq i32 %19, 0, !dbg !3162
  br i1 %tobool3, label %for.inc, label %if.then4, !dbg !3165

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !3136, metadata !DIExpression()), !dbg !3155
  %call5 = call fastcc %struct.edge_def* @better_edge(%struct.edge_def* %beste.0, %struct.edge_def* %15) #7, !dbg !3166
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !3139, metadata !DIExpression()), !dbg !3155
  br label %for.inc, !dbg !3167

for.inc:                                          ; preds = %for.body, %if.then4
  %beste.1 = phi %struct.edge_def* [ %call5, %if.then4 ], [ %beste.0, %for.body ], !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_def* %beste.1, metadata !3139, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3140, metadata !DIExpression(DW_OP_deref)), !dbg !3155
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3161
  br label %for.cond, !dbg !3161, !llvm.loop !3168

for.end:                                          ; preds = %for.cond
  %beste.0.lcssa = phi %struct.edge_def* [ %beste.0, %for.cond ], !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_def* %beste.0.lcssa, metadata !3139, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_def* %beste.0.lcssa, metadata !3139, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.value(metadata %struct.edge_def* %beste.0.lcssa, metadata !3139, metadata !DIExpression()), !dbg !3155
  %tobool6 = icmp eq %struct.edge_def* %beste.0.lcssa, null, !dbg !3170
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !3172

if.then7:                                         ; preds = %for.end
  call fastcc void @propagate_stack(%struct.edge_def* nonnull %beste.0.lcssa) #7, !dbg !3173
  br label %if.end23, !dbg !3173

if.else:                                          ; preds = %for.end
  store i32 -1, i32* %top, align 8, !dbg !3174
  call void @llvm.dbg.value(metadata i32 15, metadata !3131, metadata !DIExpression()), !dbg !3147
  %reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 0, i32 1, !dbg !3176
  br label %for.cond10, !dbg !3180

for.cond10:                                       ; preds = %for.inc21, %if.else
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc21 ], [ 15, %if.else ], !dbg !3181
  %reg.0 = phi i32 [ %dec, %for.inc21 ], [ 15, %if.else ], !dbg !3181
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3131, metadata !DIExpression()), !dbg !3147
  %cmp11 = icmp ugt i64 %indvars.iv8, 7, !dbg !3182
  br i1 %cmp11, label %for.body12, label %if.end23.loopexit, !dbg !3183

for.body12:                                       ; preds = %for.cond10
  %20 = load i64, i64* %reg_set, align 8, !dbg !3184
  %shl = shl i64 1, %indvars.iv8, !dbg !3184
  %and = and i64 %20, %shl, !dbg !3184
  %tobool14 = icmp eq i64 %and, 0, !dbg !3184
  br i1 %tobool14, label %for.inc21, label %if.then15, !dbg !3185

if.then15:                                        ; preds = %for.body12
  %conv = trunc i32 %reg.0 to i8, !dbg !3186
  %21 = load i32, i32* %top, align 8, !dbg !3187
  %inc = add nsw i32 %21, 1, !dbg !3187
  store i32 %inc, i32* %top, align 8, !dbg !3187
  %idxprom = sext i32 %inc to i64, !dbg !3188
  %arrayidx = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 0, i32 2, i64 %idxprom, !dbg !3188
  store i8 %conv, i8* %arrayidx, align 1, !dbg !3189
  br label %for.inc21, !dbg !3188

for.inc21:                                        ; preds = %for.body12, %if.then15
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, -1, !dbg !3190
  %dec = add nsw i32 %reg.0, -1, !dbg !3190
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3131, metadata !DIExpression()), !dbg !3147
  br label %for.cond10, !dbg !3191, !llvm.loop !3192

if.end23.loopexit:                                ; preds = %for.cond10
  br label %if.end23, !dbg !3194

if.end23:                                         ; preds = %if.end23.loopexit, %if.then7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !3194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !3194
  br label %if.end24, !dbg !3195

if.end24:                                         ; preds = %if.end23, %entry
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3196
  %tobool25 = icmp eq %struct._IO_FILE* %22, null, !dbg !3196
  br i1 %tobool25, label %if.end29, label %if.then26, !dbg !3198

if.then26:                                        ; preds = %if.end24
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 9, !dbg !3199
  %23 = load i32, i32* %index, align 8, !dbg !3199
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %23) #6, !dbg !3201
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3202
  %stack_in28 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 0, !dbg !3203
  call fastcc void @print_stack(%struct._IO_FILE* %24, %struct.stack_def* %stack_in28) #7, !dbg !3204
  br label %if.end29, !dbg !3205

if.end29:                                         ; preds = %if.end24, %if.then26
  store %struct.basic_block_def* %block, %struct.basic_block_def** @current_block, align 8, !dbg !3206
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %block, i64 0, i32 7, !dbg !3207
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3207
  %25 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3207
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %25, i64 0, i32 0, !dbg !3207
  %26 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !3133, metadata !DIExpression()), !dbg !3147
  %27 = bitcast %struct.block_info_def* %2 to i8*, !dbg !3208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %27, i64 24, i1 false), !dbg !3208
  store i1 true, i1* @starting_stack_p, align 1, !dbg !3209
  br label %do.body, !dbg !3210

do.body:                                          ; preds = %do.cond, %if.end29
  %control_flow_insn_deleted.0 = phi i8 [ 0, %if.end29 ], [ %control_flow_insn_deleted.2, %do.cond ], !dbg !3211
  %next.0 = phi %struct.rtx_def* [ %26, %if.end29 ], [ %spec.select, %do.cond ], !dbg !3147
  %debug_insns_with_starting_stack.0 = phi i32 [ 0, %if.end29 ], [ %debug_insns_with_starting_stack.2, %do.cond ], !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.0, metadata !3135, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !3133, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.0, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !3132, metadata !DIExpression()), !dbg !3147
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3212
  %rt_rtx = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !3212
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !3133, metadata !DIExpression()), !dbg !3147
  %tobool32 = icmp eq %struct.rtx_def* %29, null, !dbg !3214
  br i1 %tobool32, label %cond.true, label %cond.end, !dbg !3214

cond.true:                                        ; preds = %do.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2937, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3214
  br label %cond.end, !dbg !3214

cond.end:                                         ; preds = %do.body, %cond.true
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3215
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 1, !dbg !3215
  %31 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3215
  %cmp35 = icmp eq %struct.rtx_def* %next.0, %31, !dbg !3217
  %spec.select = select i1 %cmp35, %struct.rtx_def* null, %struct.rtx_def* %29, !dbg !3218
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !3133, metadata !DIExpression()), !dbg !3147
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 0, !dbg !3219
  %bf.load = load i32, i32* %32, align 8, !dbg !3219
  %bf.clear = and i32 %bf.load, 65535, !dbg !3219
  %cmp39 = icmp eq i32 %bf.clear, 7, !dbg !3219
  br i1 %cmp39, label %if.then41, label %if.else58, !dbg !3221

if.then41:                                        ; preds = %cond.end
  %.b3 = load i1, i1* @starting_stack_p, align 1, !dbg !3222
  br i1 %.b3, label %if.then43, label %if.else45, !dbg !3225

if.then43:                                        ; preds = %if.then41
  %inc44 = add nsw i32 %debug_insns_with_starting_stack.0, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %inc44, metadata !3135, metadata !DIExpression()), !dbg !3147
  br label %do.cond, !dbg !3227

if.else45:                                        ; preds = %if.then41
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, !dbg !3228
  %33 = getelementptr inbounds %union.u, %union.u* %u46, i64 1, i32 0, i32 0, i64 0, !dbg !3228
  %rt_rtx49 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !3228
  %call50 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx49, i32 (%struct.rtx_def**, i8*)* nonnull @subst_stack_regs_in_debug_insn, i8* nonnull %0) #6, !dbg !3230
  %call51 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %next.0, i32 1, %struct.rtx_def* null) #6, !dbg !3231
  %tobool52 = icmp eq %struct.rtx_def* %call51, null, !dbg !3231
  br i1 %tobool52, label %do.cond, label %cond.true53, !dbg !3231

cond.true53:                                      ; preds = %if.else45
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3231
  br label %do.cond, !dbg !3231

if.else58:                                        ; preds = %cond.end
  %call59 = call i32 @stack_regs_mentioned(%struct.rtx_def* %next.0) #7, !dbg !3232
  %tobool60 = icmp eq i32 %call59, 0, !dbg !3232
  br i1 %tobool60, label %lor.lhs.false, label %if.then65, !dbg !3234

lor.lhs.false:                                    ; preds = %if.else58
  %bf.load61 = load i32, i32* %32, align 8, !dbg !3235
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !3235
  %cmp63 = icmp eq i32 %bf.clear62, 10, !dbg !3235
  br i1 %cmp63, label %if.then65, label %do.cond, !dbg !3236

if.then65:                                        ; preds = %if.else58, %lor.lhs.false
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3237
  %tobool66 = icmp eq %struct._IO_FILE* %34, null, !dbg !3237
  br i1 %tobool66, label %if.end72, label %if.then67, !dbg !3240

if.then67:                                        ; preds = %if.then65
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3241
  %rt_int = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !3241
  %35 = load i32, i32* %rt_int, align 8, !dbg !3241
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %35) #6, !dbg !3243
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3244
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3129, metadata !DIExpression(DW_OP_deref)), !dbg !3147
  call fastcc void @print_stack(%struct._IO_FILE* %36, %struct.stack_def* nonnull %regstack) #7, !dbg !3245
  br label %if.end72, !dbg !3246

if.end72:                                         ; preds = %if.then65, %if.then67
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3129, metadata !DIExpression(DW_OP_deref)), !dbg !3147
  %call73 = call fastcc zeroext i8 @subst_stack_regs(%struct.rtx_def* %next.0, %struct.stack_def* nonnull %regstack) #7, !dbg !3247
  %or2 = or i8 %control_flow_insn_deleted.0, %call73, !dbg !3248
  call void @llvm.dbg.value(metadata i8 %or2, metadata !3134, metadata !DIExpression()), !dbg !3147
  store i1 false, i1* @starting_stack_p, align 1, !dbg !3249
  br label %do.cond, !dbg !3250

do.cond:                                          ; preds = %if.else45, %cond.true53, %if.then43, %if.end72, %lor.lhs.false
  %control_flow_insn_deleted.2 = phi i8 [ %control_flow_insn_deleted.0, %cond.true53 ], [ %control_flow_insn_deleted.0, %if.else45 ], [ %control_flow_insn_deleted.0, %if.then43 ], [ %or2, %if.end72 ], [ %control_flow_insn_deleted.0, %lor.lhs.false ], !dbg !3147
  %debug_insns_with_starting_stack.2 = phi i32 [ %debug_insns_with_starting_stack.0, %cond.true53 ], [ %debug_insns_with_starting_stack.0, %if.else45 ], [ %inc44, %if.then43 ], [ %debug_insns_with_starting_stack.0, %if.end72 ], [ %debug_insns_with_starting_stack.0, %lor.lhs.false ], !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.2, metadata !3135, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.2, metadata !3134, metadata !DIExpression()), !dbg !3147
  %tobool79 = icmp eq %struct.rtx_def* %spec.select, null, !dbg !3251
  br i1 %tobool79, label %do.end, label %do.body, !dbg !3251, !llvm.loop !3252

do.end:                                           ; preds = %do.cond
  %control_flow_insn_deleted.2.lcssa = phi i8 [ %control_flow_insn_deleted.2, %do.cond ], !dbg !3147
  %debug_insns_with_starting_stack.2.lcssa = phi i32 [ %debug_insns_with_starting_stack.2, %do.cond ], !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.2.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.2.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.2.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.2.lcssa, metadata !3135, metadata !DIExpression()), !dbg !3147
  %tobool80 = icmp eq i32 %debug_insns_with_starting_stack.2.lcssa, 0, !dbg !3254
  br i1 %tobool80, label %if.end107, label %if.then81, !dbg !3256

if.then81:                                        ; preds = %do.end
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3257
  %head_84 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i64 0, i32 0, !dbg !3257
  br label %for.cond85, !dbg !3260

for.cond85:                                       ; preds = %for.inc101, %if.then81
  %insn.0.in = phi %struct.rtx_def** [ %head_84, %if.then81 ], [ %rt_rtx105, %for.inc101 ]
  %debug_insns_with_starting_stack.3 = phi i32 [ %debug_insns_with_starting_stack.2.lcssa, %if.then81 ], [ %debug_insns_with_starting_stack.4, %for.inc101 ], !dbg !3147
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3261
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.3, metadata !3135, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3132, metadata !DIExpression()), !dbg !3147
  %tobool86 = icmp eq i32 %debug_insns_with_starting_stack.3, 0, !dbg !3262
  br i1 %tobool86, label %if.end107.loopexit, label %for.body87, !dbg !3262

for.body87:                                       ; preds = %for.cond85
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3263
  %bf.load88 = load i32, i32* %38, align 8, !dbg !3263
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !3263
  %cmp90 = icmp eq i32 %bf.clear89, 7, !dbg !3263
  br i1 %cmp90, label %if.end93, label %for.inc101, !dbg !3267

if.end93:                                         ; preds = %for.body87
  %dec94 = add nsw i32 %debug_insns_with_starting_stack.3, -1, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %dec94, metadata !3135, metadata !DIExpression()), !dbg !3147
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3269
  %39 = getelementptr inbounds %union.u, %union.u* %u95, i64 1, i32 0, i32 0, i64 0, !dbg !3269
  %rt_rtx98 = bitcast %union.rtunion_def* %39 to %struct.rtx_def**, !dbg !3269
  %call100 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx98, i32 (%struct.rtx_def**, i8*)* nonnull @subst_stack_regs_in_debug_insn, i8* %27) #6, !dbg !3270
  br label %for.inc101, !dbg !3271

for.inc101:                                       ; preds = %for.body87, %if.end93
  %debug_insns_with_starting_stack.4 = phi i32 [ %dec94, %if.end93 ], [ %debug_insns_with_starting_stack.3, %for.body87 ], !dbg !3147
  call void @llvm.dbg.value(metadata i32 %debug_insns_with_starting_stack.4, metadata !3135, metadata !DIExpression()), !dbg !3147
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3272
  %rt_rtx105 = bitcast %union.rtunion_def* %40 to %struct.rtx_def**, !dbg !3272
  br label %for.cond85, !dbg !3273, !llvm.loop !3274

if.end107.loopexit:                               ; preds = %for.cond85
  br label %if.end107, !dbg !3276

if.end107:                                        ; preds = %if.end107.loopexit, %do.end
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3276
  %tobool108 = icmp eq %struct._IO_FILE* %41, null, !dbg !3276
  br i1 %tobool108, label %if.end126, label %if.then109, !dbg !3278

if.then109:                                       ; preds = %if.end107
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3279
  call void @llvm.dbg.value(metadata i32 8, metadata !3131, metadata !DIExpression()), !dbg !3147
  %out_reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 2, !dbg !3281
  br label %for.cond111, !dbg !3285

for.cond111:                                      ; preds = %for.inc122, %if.then109
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc122 ], [ 8, %if.then109 ], !dbg !3286
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !3131, metadata !DIExpression()), !dbg !3147
  %exitcond7 = icmp eq i64 %indvars.iv5, 16, !dbg !3287
  br i1 %exitcond7, label %for.end124, label %for.body114, !dbg !3288

for.body114:                                      ; preds = %for.cond111
  %42 = load i64, i64* %out_reg_set, align 8, !dbg !3289
  %shl116 = shl i64 1, %indvars.iv5, !dbg !3289
  %and117 = and i64 %42, %shl116, !dbg !3289
  %tobool118 = icmp eq i64 %and117, 0, !dbg !3289
  br i1 %tobool118, label %for.inc122, label %if.then119, !dbg !3290

if.then119:                                       ; preds = %for.body114
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3291
  %44 = trunc i64 %indvars.iv5 to i32, !dbg !3292
  %call120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i32 %44) #6, !dbg !3292
  br label %for.inc122, !dbg !3292

for.inc122:                                       ; preds = %for.body114, %if.then119
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !3293
  call void @llvm.dbg.value(metadata i32 undef, metadata !3131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3147
  br label %for.cond111, !dbg !3294, !llvm.loop !3295

for.end124:                                       ; preds = %for.cond111
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3297
  %call125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3298
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3299
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3129, metadata !DIExpression(DW_OP_deref)), !dbg !3147
  call fastcc void @print_stack(%struct._IO_FILE* %46, %struct.stack_def* nonnull %regstack) #7, !dbg !3300
  br label %if.end126, !dbg !3301

if.end126:                                        ; preds = %if.end107, %for.end124
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3302
  %end_129 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !3302
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_129, align 8, !dbg !3302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !3132, metadata !DIExpression()), !dbg !3147
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 0, !dbg !3303
  %bf.load130 = load i32, i32* %49, align 8, !dbg !3303
  %bf.clear131 = and i32 %bf.load130, 65535, !dbg !3303
  %cmp132 = icmp eq i32 %bf.clear131, 9, !dbg !3303
  br i1 %cmp132, label %if.then134, label %if.end139, !dbg !3305

if.then134:                                       ; preds = %if.end126
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3306
  %rt_rtx138 = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !3306
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx138, align 8, !dbg !3306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !3132, metadata !DIExpression()), !dbg !3147
  br label %if.end139, !dbg !3307

if.end139:                                        ; preds = %if.then134, %if.end126
  %insn.1 = phi %struct.rtx_def* [ %51, %if.then134 ], [ %48, %if.end126 ], !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !3132, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i32 8, metadata !3131, metadata !DIExpression()), !dbg !3147
  %out_reg_set144 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 2, !dbg !3308
  %reg_set149 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !3308
  br label %for.cond140, !dbg !3309

for.cond140:                                      ; preds = %for.inc170, %if.end139
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc170 ], [ 8, %if.end139 ], !dbg !3211
  %control_flow_insn_deleted.3 = phi i8 [ %control_flow_insn_deleted.4, %for.inc170 ], [ %control_flow_insn_deleted.2.lcssa, %if.end139 ], !dbg !3211
  %insn.2 = phi %struct.rtx_def* [ %insn.3, %for.inc170 ], [ %insn.1, %if.end139 ], !dbg !3310
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3131, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !3132, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.3, metadata !3134, metadata !DIExpression()), !dbg !3147
  %exitcond = icmp eq i64 %indvars.iv, 16, !dbg !3311
  br i1 %exitcond, label %for.end172, label %for.body143, !dbg !3312

for.body143:                                      ; preds = %for.cond140
  %52 = load i64, i64* %out_reg_set144, align 8, !dbg !3313
  %shl146 = shl i64 1, %indvars.iv, !dbg !3313
  %and147 = and i64 %52, %shl146, !dbg !3313
  %tobool148 = icmp eq i64 %and147, 0, !dbg !3313
  br i1 %tobool148, label %for.inc170, label %land.lhs.true, !dbg !3314

land.lhs.true:                                    ; preds = %for.body143
  %53 = load i64, i64* %reg_set149, align 8, !dbg !3315
  %and152 = and i64 %53, %shl146, !dbg !3315
  %tobool153 = icmp eq i64 %and152, 0, !dbg !3315
  br i1 %tobool153, label %if.then154, label %for.inc170, !dbg !3316

if.then154:                                       ; preds = %land.lhs.true
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3317
  %tobool155 = icmp eq %struct._IO_FILE* %54, null, !dbg !3317
  br i1 %tobool155, label %if.end158, label %if.then156, !dbg !3319

if.then156:                                       ; preds = %if.then154
  %55 = trunc i64 %indvars.iv to i32, !dbg !3320
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i32 %55) #6, !dbg !3320
  br label %if.end158, !dbg !3320

if.end158:                                        ; preds = %if.then154, %if.then156
  %56 = add nsw i64 %indvars.iv, -8, !dbg !3321
  %arrayidx161 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %56, i64 38, !dbg !3321
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx161, align 8, !dbg !3321
  %58 = load %struct.rtx_def*, %struct.rtx_def** @not_a_num, align 8, !dbg !3321
  %call162 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %57, %struct.rtx_def* %58) #6, !dbg !3321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call162, metadata !3141, metadata !DIExpression()), !dbg !3322
  %call163 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call162, %struct.rtx_def* %insn.2) #6, !dbg !3323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call163, metadata !3132, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3129, metadata !DIExpression(DW_OP_deref)), !dbg !3147
  %call164 = call fastcc zeroext i8 @subst_stack_regs(%struct.rtx_def* %call163, %struct.stack_def* nonnull %regstack) #7, !dbg !3324
  %or1671 = or i8 %control_flow_insn_deleted.3, %call164, !dbg !3325
  call void @llvm.dbg.value(metadata i8 %or1671, metadata !3134, metadata !DIExpression()), !dbg !3147
  br label %for.inc170, !dbg !3326

for.inc170:                                       ; preds = %land.lhs.true, %for.body143, %if.end158
  %control_flow_insn_deleted.4 = phi i8 [ %control_flow_insn_deleted.3, %land.lhs.true ], [ %or1671, %if.end158 ], [ %control_flow_insn_deleted.3, %for.body143 ], !dbg !3147
  %insn.3 = phi %struct.rtx_def* [ %insn.2, %land.lhs.true ], [ %call163, %if.end158 ], [ %insn.2, %for.body143 ], !dbg !3147
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !3132, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.4, metadata !3134, metadata !DIExpression()), !dbg !3147
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3327
  call void @llvm.dbg.value(metadata i32 undef, metadata !3131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3147
  br label %for.cond140, !dbg !3328, !llvm.loop !3329

for.end172:                                       ; preds = %for.cond140
  %control_flow_insn_deleted.3.lcssa = phi i8 [ %control_flow_insn_deleted.3, %for.cond140 ], !dbg !3211
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.3.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.3.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.3.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3147
  %tobool173 = icmp eq i8 %control_flow_insn_deleted.3.lcssa, 0, !dbg !3331
  br i1 %tobool173, label %if.end176, label %if.then174, !dbg !3333

if.then174:                                       ; preds = %for.end172
  %call175 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %block) #6, !dbg !3334
  br label %if.end176, !dbg !3334

if.end176:                                        ; preds = %for.end172, %if.then174
  %59 = load i64, i64* %reg_set149, align 8, !dbg !3335
  %60 = load i64, i64* %out_reg_set144, align 8, !dbg !3335
  %call179 = call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %59, i64 %60) #7, !dbg !3335
  %tobool181 = icmp eq i8 %call179, 0, !dbg !3335
  br i1 %tobool181, label %lor.lhs.false182, label %cond.end187, !dbg !3335

lor.lhs.false182:                                 ; preds = %if.end176
  %.b = load i1, i1* @any_malformed_asm, align 1, !dbg !3335
  br i1 %.b, label %cond.end187, label %cond.true185, !dbg !3335

cond.true185:                                     ; preds = %lor.lhs.false182
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 3052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3335
  br label %cond.end187, !dbg !3335

cond.end187:                                      ; preds = %lor.lhs.false182, %if.end176, %cond.true185
  %stack_out = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 1, !dbg !3336
  %61 = bitcast %struct.stack_def* %stack_out to i8*, !dbg !3337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !3337
  %done189 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 3, !dbg !3338
  store i32 1, i32* %done189, align 8, !dbg !3339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3340
  ret void, !dbg !3340
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @better_edge(%struct.edge_def* %e1, %struct.edge_def* %e2) unnamed_addr #5 !dbg !3341 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !3345, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !3346, metadata !DIExpression()), !dbg !3347
  %tobool = icmp eq %struct.edge_def* %e1, null, !dbg !3348
  br i1 %tobool, label %return, label %if.end, !dbg !3350

if.end:                                           ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !3351
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3351
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 11, !dbg !3351
  %1 = load i32, i32* %frequency, align 8, !dbg !3351
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 8, !dbg !3351
  %2 = load i32, i32* %probability, align 4, !dbg !3351
  %mul = mul nsw i32 %1, %2, !dbg !3351
  %add = add nsw i32 %mul, 5000, !dbg !3351
  %div = sdiv i32 %add, 10000, !dbg !3351
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 0, !dbg !3353
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3353
  %frequency2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 11, !dbg !3353
  %4 = load i32, i32* %frequency2, align 8, !dbg !3353
  %probability3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 8, !dbg !3353
  %5 = load i32, i32* %probability3, align 4, !dbg !3353
  %mul4 = mul nsw i32 %4, %5, !dbg !3353
  %add5 = add nsw i32 %mul4, 5000, !dbg !3353
  %div6 = sdiv i32 %add5, 10000, !dbg !3353
  %cmp = icmp sgt i32 %div, %div6, !dbg !3354
  br i1 %cmp, label %return, label %if.end8, !dbg !3355

if.end8:                                          ; preds = %if.end
  %cmp21 = icmp slt i32 %div, %div6, !dbg !3356
  br i1 %cmp21, label %return, label %if.end23, !dbg !3358

if.end23:                                         ; preds = %if.end8
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 9, !dbg !3359
  %6 = load i64, i64* %count, align 8, !dbg !3359
  %count24 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 9, !dbg !3361
  %7 = load i64, i64* %count24, align 8, !dbg !3361
  %cmp25 = icmp sgt i64 %6, %7, !dbg !3362
  br i1 %cmp25, label %return, label %if.end27, !dbg !3363

if.end27:                                         ; preds = %if.end23
  %cmp30 = icmp slt i64 %6, %7, !dbg !3364
  br i1 %cmp30, label %return, label %if.end32, !dbg !3366

if.end32:                                         ; preds = %if.end27
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !3367
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3367
  %tobool34 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !3367
  br i1 %tobool34, label %cond.end, label %cond.true, !dbg !3367

cond.true:                                        ; preds = %if.end32
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3367
  br label %cond.end, !dbg !3367

cond.end:                                         ; preds = %if.end32, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end32 ], !dbg !3367
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3367
  %cmp37 = icmp ugt i32 %call, 1, !dbg !3367
  br i1 %cmp37, label %land.rhs, label %land.end, !dbg !3367

land.rhs:                                         ; preds = %cond.end
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !3367
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3367
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 0, !dbg !3367
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3367
  %tobool38 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !3367
  br i1 %tobool38, label %cond.end44, label %cond.true39, !dbg !3367

cond.true39:                                      ; preds = %land.rhs
  %base42 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !3367
  br label %cond.end44, !dbg !3367

cond.end44:                                       ; preds = %land.rhs, %cond.true39
  %cond45 = phi %struct.VEC_edge_base* [ %base42, %cond.true39 ], [ null, %land.rhs ], !dbg !3367
  %call46 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond45) #7, !dbg !3367
  %cmp47 = icmp ugt i32 %call46, 1, !dbg !3367
  %phitmp = zext i1 %cmp47 to i32
  br label %land.end

land.end:                                         ; preds = %cond.end44, %cond.end
  %11 = phi i32 [ 0, %cond.end ], [ %phitmp, %cond.end44 ]
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3369
  %succs49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 1, !dbg !3369
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs49, align 8, !dbg !3369
  %tobool50 = icmp eq %struct.VEC_edge_gc* %13, null, !dbg !3369
  br i1 %tobool50, label %cond.end56, label %cond.true51, !dbg !3369

cond.true51:                                      ; preds = %land.end
  %base54 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !3369
  br label %cond.end56, !dbg !3369

cond.end56:                                       ; preds = %land.end, %cond.true51
  %cond57 = phi %struct.VEC_edge_base* [ %base54, %cond.true51 ], [ null, %land.end ], !dbg !3369
  %call58 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond57) #7, !dbg !3369
  %cmp59 = icmp ugt i32 %call58, 1, !dbg !3369
  br i1 %cmp59, label %land.rhs60, label %land.end73, !dbg !3369

land.rhs60:                                       ; preds = %cond.end56
  %dest61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 1, !dbg !3369
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest61, align 8, !dbg !3369
  %preds62 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 0, !dbg !3369
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds62, align 8, !dbg !3369
  %tobool63 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !3369
  br i1 %tobool63, label %cond.end69, label %cond.true64, !dbg !3369

cond.true64:                                      ; preds = %land.rhs60
  %base67 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !3369
  br label %cond.end69, !dbg !3369

cond.end69:                                       ; preds = %land.rhs60, %cond.true64
  %cond70 = phi %struct.VEC_edge_base* [ %base67, %cond.true64 ], [ null, %land.rhs60 ], !dbg !3369
  %call71 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond70) #7, !dbg !3369
  %cmp72 = icmp ugt i32 %call71, 1, !dbg !3369
  %phitmp1 = zext i1 %cmp72 to i32
  br label %land.end73

land.end73:                                       ; preds = %cond.end69, %cond.end56
  %16 = phi i32 [ 0, %cond.end56 ], [ %phitmp1, %cond.end69 ]
  %cmp75 = icmp eq i32 %11, %16, !dbg !3370
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3347
  br i1 %cmp75, label %if.end105, label %if.then76, !dbg !3371

if.then76:                                        ; preds = %land.end73
  %succs78 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 1, !dbg !3372
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs78, align 8, !dbg !3372
  %tobool79 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !3372
  br i1 %tobool79, label %cond.end85, label %cond.true80, !dbg !3372

cond.true80:                                      ; preds = %if.then76
  %base83 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !3372
  br label %cond.end85, !dbg !3372

cond.end85:                                       ; preds = %if.then76, %cond.true80
  %cond86 = phi %struct.VEC_edge_base* [ %base83, %cond.true80 ], [ null, %if.then76 ], !dbg !3372
  %call87 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond86) #7, !dbg !3372
  %cmp88 = icmp ugt i32 %call87, 1, !dbg !3372
  br i1 %cmp88, label %land.lhs.true, label %cond.false102, !dbg !3372

land.lhs.true:                                    ; preds = %cond.end85
  %dest89 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 1, !dbg !3372
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest89, align 8, !dbg !3372
  %preds90 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 0, !dbg !3372
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds90, align 8, !dbg !3372
  %tobool91 = icmp eq %struct.VEC_edge_gc* %20, null, !dbg !3372
  br i1 %tobool91, label %cond.end97, label %cond.true92, !dbg !3372

cond.true92:                                      ; preds = %land.lhs.true
  %base95 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i64 0, i32 0, !dbg !3372
  br label %cond.end97, !dbg !3372

cond.end97:                                       ; preds = %land.lhs.true, %cond.true92
  %cond98 = phi %struct.VEC_edge_base* [ %base95, %cond.true92 ], [ null, %land.lhs.true ], !dbg !3372
  %call99 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond98) #7, !dbg !3372
  %cmp100 = icmp ugt i32 %call99, 1, !dbg !3372
  br i1 %cmp100, label %return, label %cond.false102, !dbg !3372

cond.false102:                                    ; preds = %cond.end97, %cond.end85
  br label %return, !dbg !3372

if.end105:                                        ; preds = %land.end73
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 9, !dbg !3373
  %21 = load i32, i32* %index, align 8, !dbg !3373
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !3374
  %index108 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !3375
  %23 = load i32, i32* %index108, align 8, !dbg !3375
  %cmp109 = icmp slt i32 %21, %23, !dbg !3376
  %e1.e2 = select i1 %cmp109, %struct.edge_def* %e1, %struct.edge_def* %e2, !dbg !3377
  br label %return, !dbg !3378

return:                                           ; preds = %entry, %cond.false102, %cond.end97, %if.end27, %if.end23, %if.end8, %if.end, %if.end105
  %retval.0 = phi %struct.edge_def* [ %e1.e2, %if.end105 ], [ %e2, %entry ], [ %e1, %if.end ], [ %e2, %if.end8 ], [ %e1, %if.end23 ], [ %e2, %if.end27 ], [ %e2, %cond.false102 ], [ %e1, %cond.end97 ], !dbg !3347
  ret %struct.edge_def* %retval.0, !dbg !3379
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_stack(%struct.edge_def* %e) unnamed_addr #5 !dbg !3380 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3384, metadata !DIExpression()), !dbg !3388
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3389
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3389
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 2, !dbg !3389
  %1 = bitcast i8** %aux to %struct.block_info_def**, !dbg !3389
  %2 = load %struct.block_info_def*, %struct.block_info_def** %1, align 8, !dbg !3389
  call void @llvm.dbg.value(metadata %struct.block_info_def* %2, metadata !3385, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !3388
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3390
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3390
  %aux1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 2, !dbg !3390
  %4 = bitcast i8** %aux1 to %struct.block_info_def**, !dbg !3390
  %5 = load %struct.block_info_def*, %struct.block_info_def** %4, align 8, !dbg !3390
  call void @llvm.dbg.value(metadata %struct.block_info_def* %5, metadata !3386, metadata !DIExpression()), !dbg !3388
  %top = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 0, i32 0, !dbg !3391
  store i32 -1, i32* %top, align 8, !dbg !3392
  call void @llvm.dbg.value(metadata i32 0, metadata !3387, metadata !DIExpression()), !dbg !3388
  %top2 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 1, i32 0, !dbg !3393
  %reg_set = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 0, i32 1, !dbg !3396
  br label %for.cond, !dbg !3398

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %entry ], !dbg !3399
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3387, metadata !DIExpression()), !dbg !3388
  %6 = load i32, i32* %top2, align 8, !dbg !3400
  %7 = sext i32 %6 to i64, !dbg !3401
  %cmp = icmp sgt i64 %indvars.iv1, %7, !dbg !3401
  br i1 %cmp, label %for.cond12.preheader, label %for.body, !dbg !3402

for.cond12.preheader:                             ; preds = %for.cond
  %reg_set21 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 1, i32 1, !dbg !3403
  br label %for.cond12, !dbg !3407

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %reg_set, align 8, !dbg !3408
  %arrayidx = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %2, i64 0, i32 1, i32 2, i64 %indvars.iv1, !dbg !3408
  %9 = load i8, i8* %arrayidx, align 1, !dbg !3408
  %sh_prom = zext i8 %9 to i64, !dbg !3408
  %shl = shl i64 1, %sh_prom, !dbg !3408
  %and = and i64 %8, %shl, !dbg !3408
  %tobool = icmp eq i64 %and, 0, !dbg !3408
  br i1 %tobool, label %for.inc, label %if.then, !dbg !3409

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %top, align 8, !dbg !3410
  %inc = add nsw i32 %10, 1, !dbg !3410
  store i32 %inc, i32* %top, align 8, !dbg !3410
  %idxprom9 = sext i32 %inc to i64, !dbg !3411
  %arrayidx10 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 0, i32 2, i64 %idxprom9, !dbg !3411
  store i8 %9, i8* %arrayidx10, align 1, !dbg !3412
  br label %for.inc, !dbg !3411

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3413
  call void @llvm.dbg.value(metadata i32 undef, metadata !3387, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3388
  br label %for.cond, !dbg !3414, !llvm.loop !3415

for.cond12:                                       ; preds = %for.cond12.preheader, %for.inc34
  %indvars.iv = phi i64 [ 8, %for.cond12.preheader ], [ %indvars.iv.next, %for.inc34 ], !dbg !3417
  %reg.1 = phi i32 [ 8, %for.cond12.preheader ], [ %inc35, %for.inc34 ], !dbg !3417
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3387, metadata !DIExpression()), !dbg !3388
  %exitcond = icmp eq i64 %indvars.iv, 16, !dbg !3418
  br i1 %exitcond, label %for.end36, label %for.body15, !dbg !3407

for.body15:                                       ; preds = %for.cond12
  %11 = load i64, i64* %reg_set, align 8, !dbg !3419
  %shl18 = shl i64 1, %indvars.iv, !dbg !3419
  %and19 = and i64 %11, %shl18, !dbg !3419
  %tobool20 = icmp eq i64 %and19, 0, !dbg !3419
  br i1 %tobool20, label %for.inc34, label %land.lhs.true, !dbg !3420

land.lhs.true:                                    ; preds = %for.body15
  %12 = load i64, i64* %reg_set21, align 8, !dbg !3421
  %and24 = and i64 %12, %shl18, !dbg !3421
  %tobool25 = icmp eq i64 %and24, 0, !dbg !3421
  br i1 %tobool25, label %if.then26, label %for.inc34, !dbg !3422

if.then26:                                        ; preds = %land.lhs.true
  %conv27 = trunc i32 %reg.1 to i8, !dbg !3423
  %13 = load i32, i32* %top, align 8, !dbg !3424
  %inc30 = add nsw i32 %13, 1, !dbg !3424
  store i32 %inc30, i32* %top, align 8, !dbg !3424
  %idxprom31 = sext i32 %inc30 to i64, !dbg !3425
  %arrayidx32 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 0, i32 2, i64 %idxprom31, !dbg !3425
  store i8 %conv27, i8* %arrayidx32, align 1, !dbg !3426
  br label %for.inc34, !dbg !3425

for.inc34:                                        ; preds = %land.lhs.true, %for.body15, %if.then26
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3427
  %inc35 = add nuw nsw i32 %reg.1, 1, !dbg !3427
  call void @llvm.dbg.value(metadata i32 %inc35, metadata !3387, metadata !DIExpression()), !dbg !3388
  br label %for.cond12, !dbg !3428, !llvm.loop !3429

for.end36:                                        ; preds = %for.cond12
  ret void, !dbg !3431
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* %s) unnamed_addr #5 !dbg !3432 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3436, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata %struct.stack_def* %s, metadata !3437, metadata !DIExpression()), !dbg !3442
  %tobool = icmp eq %struct._IO_FILE* %file, null, !dbg !3443
  br i1 %tobool, label %if.end13, label %if.end, !dbg !3445

if.end:                                           ; preds = %entry
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %s, i64 0, i32 0, !dbg !3446
  %0 = load i32, i32* %top, align 8, !dbg !3446
  %cmp = icmp eq i32 %0, -2, !dbg !3447
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3448

if.then1:                                         ; preds = %if.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3449
  br label %if.end13, !dbg !3449

if.else:                                          ; preds = %if.end
  %cmp3 = icmp eq i32 %0, -1, !dbg !3450
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !3451

if.then4:                                         ; preds = %if.else
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3452
  br label %if.end13, !dbg !3452

if.else6:                                         ; preds = %if.else
  %call7 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct._IO_FILE* nonnull %file) #6, !dbg !3453
  call void @llvm.dbg.value(metadata i32 0, metadata !3438, metadata !DIExpression()), !dbg !3454
  br label %for.cond, !dbg !3455

for.cond:                                         ; preds = %for.body, %if.else6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.else6 ], !dbg !3457
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3438, metadata !DIExpression()), !dbg !3454
  %1 = load i32, i32* %top, align 8, !dbg !3458
  %2 = sext i32 %1 to i64, !dbg !3460
  %cmp9 = icmp sgt i64 %indvars.iv, %2, !dbg !3460
  br i1 %cmp9, label %for.end, label %for.body, !dbg !3461

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %s, i64 0, i32 2, i64 %indvars.iv, !dbg !3462
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3462
  %conv = zext i8 %3 to i32, !dbg !3462
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i32 %conv) #6, !dbg !3463
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3464
  call void @llvm.dbg.value(metadata i32 undef, metadata !3438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3454
  br label %for.cond, !dbg !3465, !llvm.loop !3466

for.end:                                          ; preds = %for.cond
  %call11 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), %struct._IO_FILE* nonnull %file) #6, !dbg !3468
  br label %if.end13

if.end13:                                         ; preds = %entry, %if.then4, %for.end, %if.then1
  ret void, !dbg !3469
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @subst_stack_regs_in_debug_insn(%struct.rtx_def** %loc, i8* %data) #5 !dbg !3470 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3474, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i8* %data, metadata !3475, metadata !DIExpression()), !dbg !3479
  %call = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %loc) #7, !dbg !3480
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !3476, metadata !DIExpression()), !dbg !3479
  %0 = bitcast i8* %data to %struct.stack_def*, !dbg !3481
  call void @llvm.dbg.value(metadata %struct.stack_def* %0, metadata !3477, metadata !DIExpression()), !dbg !3479
  %1 = bitcast %struct.rtx_def** %call to i32**, !dbg !3482
  %2 = load i32*, i32** %1, align 8, !dbg !3482
  %bf.load = load i32, i32* %2, align 8, !dbg !3482
  %bf.clear = and i32 %bf.load, 65535, !dbg !3482
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3482
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !3482

land.lhs.true:                                    ; preds = %entry
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !3482
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !3482
  %4 = and i32 %call1, -8, !dbg !3482
  %cmp2 = icmp ne i32 %4, 8, !dbg !3482
  %cmp4 = icmp ne %struct.rtx_def** %call, %loc, !dbg !3484
  %or.cond = or i1 %cmp2, %cmp4, !dbg !3486
  br i1 %or.cond, label %cleanup, label %if.end7, !dbg !3486

if.end7:                                          ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !3487
  %call8 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %0, %struct.rtx_def* %5) #7, !dbg !3488
  call void @llvm.dbg.value(metadata i32 %call8, metadata !3478, metadata !DIExpression()), !dbg !3479
  %cmp9 = icmp sgt i32 %call8, 7, !dbg !3489
  br i1 %cmp9, label %cond.end, label %cond.true, !dbg !3489

cond.true:                                        ; preds = %if.end7
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1337, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3489
  br label %cond.end, !dbg !3489

cond.end:                                         ; preds = %if.end7, %cond.true
  tail call fastcc void @replace_reg(%struct.rtx_def** %loc, i32 %call8) #7, !dbg !3490
  br label %cleanup, !dbg !3491

cleanup:                                          ; preds = %land.lhs.true, %entry, %cond.end
  %retval.0 = phi i32 [ -1, %cond.end ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !3479
  ret i32 %retval.0, !dbg !3492
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @subst_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack) unnamed_addr #5 !dbg !3493 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3497, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3498, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8 0, metadata !3501, metadata !DIExpression()), !dbg !3509
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3510
  %bf.load = load i32, i32* %0, align 8, !dbg !3510
  %bf.clear = and i32 %bf.load, 65535, !dbg !3510
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3510
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3511

if.then:                                          ; preds = %entry
  %top1 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !3512
  %1 = load i32, i32* %top1, align 8, !dbg !3512
  call void @llvm.dbg.value(metadata i32 %1, metadata !3503, metadata !DIExpression()), !dbg !3513
  %cmp2 = icmp sgt i32 %1, -1, !dbg !3514
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !3516

if.then3:                                         ; preds = %if.then
  tail call fastcc void @straighten_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack) #7, !dbg !3517
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !3519
  %.pre = load i32, i32* %top1, align 8, !dbg !3521
  br label %while.cond, !dbg !3522

while.cond:                                       ; preds = %while.body, %if.then3
  %2 = phi i32 [ %dec, %while.body ], [ %.pre, %if.then3 ], !dbg !3521
  %cmp5 = icmp sgt i32 %2, -1, !dbg !3523
  br i1 %cmp5, label %while.body, label %if.end8.loopexit, !dbg !3522

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %2, 8, !dbg !3524
  %sh_prom = zext i32 %add to i64, !dbg !3524
  %shl = shl i64 1, %sh_prom, !dbg !3524
  %neg = xor i64 %shl, -1, !dbg !3524
  %3 = load i64, i64* %reg_set, align 8, !dbg !3524
  %and = and i64 %3, %neg, !dbg !3524
  store i64 %and, i64* %reg_set, align 8, !dbg !3524
  %dec = add nsw i32 %2, -1, !dbg !3525
  store i32 %dec, i32* %top1, align 8, !dbg !3525
  br label %while.cond, !dbg !3522, !llvm.loop !3526

if.end8.loopexit:                                 ; preds = %while.cond
  br label %if.end8, !dbg !3528

if.end8:                                          ; preds = %if.end8.loopexit, %if.then, %entry
  %call = tail call i32 @stack_regs_mentioned(%struct.rtx_def* %insn) #7, !dbg !3528
  %tobool = icmp eq i32 %call, 0, !dbg !3528
  br i1 %tobool, label %if.end106, label %if.then9, !dbg !3529

if.then9:                                         ; preds = %if.end8
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3530
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3530
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3530
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3530
  %call10 = tail call i32 @asm_noperands(%struct.rtx_def* %5) #6, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %call10, metadata !3506, metadata !DIExpression()), !dbg !3532
  %cmp11 = icmp sgt i32 %call10, -1, !dbg !3533
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !3535

if.then12:                                        ; preds = %if.then9
  tail call fastcc void @subst_asm_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack) #7, !dbg !3536
  br label %cleanup, !dbg !3538

if.end13:                                         ; preds = %if.then9
  %6 = bitcast %union.rtunion_def* %4 to i32**, !dbg !3539
  %7 = load i32*, i32** %6, align 8, !dbg !3539
  %bf.load18 = load i32, i32* %7, align 8, !dbg !3539
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !3539
  %cmp20 = icmp eq i32 %bf.clear19, 15, !dbg !3541
  %8 = bitcast i32* %7 to %struct.rtx_def*, !dbg !3542
  br i1 %cmp20, label %for.cond.preheader, label %if.else, !dbg !3542

for.cond.preheader:                               ; preds = %if.end13
  br label %for.cond, !dbg !3543

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ]
  %9 = phi %struct.rtx_def* [ %8, %for.cond.preheader ], [ %.pre2, %for.inc ]
  %10 = phi %struct.rtx_def* [ %8, %for.cond.preheader ], [ %.pre2, %for.inc ], !dbg !3545
  %control_flow_insn_deleted.0 = phi i8 [ 0, %for.cond.preheader ], [ %control_flow_insn_deleted.1, %for.inc ], !dbg !3509
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.0, metadata !3501, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3502, metadata !DIExpression()), !dbg !3509
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3545
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**, !dbg !3545
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3545
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 0, !dbg !3545
  %12 = load i32, i32* %num_elem, align 8, !dbg !3545
  %13 = sext i32 %12 to i64, !dbg !3547
  %cmp29 = icmp slt i64 %indvars.iv, %13, !dbg !3547
  br i1 %cmp29, label %for.body, label %cleanup.loopexit, !dbg !3543

for.body:                                         ; preds = %for.cond
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3548
  %rt_rtvec37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !3548
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec37, align 8, !dbg !3548
  %arrayidx38 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv, !dbg !3548
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8, !dbg !3548
  %call39 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %15) #7, !dbg !3551
  %tobool40 = icmp eq i32 %call39, 0, !dbg !3551
  br i1 %tobool40, label %for.inc, label %if.then41, !dbg !3552

if.then41:                                        ; preds = %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3553
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3553
  %rt_rtvec49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !3553
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec49, align 8, !dbg !3553
  %arrayidx52 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv, !dbg !3553
  %18 = bitcast %struct.rtx_def** %arrayidx52 to i32**, !dbg !3553
  %19 = load i32*, i32** %18, align 8, !dbg !3553
  %bf.load53 = load i32, i32* %19, align 8, !dbg !3553
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !3553
  %cmp55 = icmp eq i32 %bf.clear54, 25, !dbg !3556
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !3557
  br i1 %cmp55, label %if.then56, label %if.end80, !dbg !3557

if.then56:                                        ; preds = %if.then41
  %call68 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %20) #6, !dbg !3558
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3559
  %arrayidx75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3559
  %rt_rtvec76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtvec_def**, !dbg !3559
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec76, align 8, !dbg !3559
  %arrayidx79 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i64 0, i32 1, i64 %indvars.iv, !dbg !3559
  store %struct.rtx_def* %call68, %struct.rtx_def** %arrayidx79, align 8, !dbg !3560
  %.pre3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3561
  %arrayidx87.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3562
  %rt_rtvec88.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx87.phi.trans.insert to %struct.rtvec_def**, !dbg !3562
  %.pre4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec88.phi.trans.insert, align 8, !dbg !3561
  %arrayidx91.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre4, i64 0, i32 1, i64 %indvars.iv, !dbg !3562
  %.pre5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91.phi.trans.insert, align 8, !dbg !3561
  br label %if.end80, !dbg !3559

if.end80:                                         ; preds = %if.then56, %if.then41
  %23 = phi %struct.rtx_def* [ %.pre5, %if.then56 ], [ %20, %if.then41 ], !dbg !3561
  %call92 = tail call fastcc zeroext i8 @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %23) #7, !dbg !3563
  %or1 = or i8 %control_flow_insn_deleted.0, %call92, !dbg !3564
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3501, metadata !DIExpression()), !dbg !3509
  br label %for.inc, !dbg !3565

for.inc:                                          ; preds = %for.body, %if.end80
  %control_flow_insn_deleted.1 = phi i8 [ %or1, %if.end80 ], [ %control_flow_insn_deleted.0, %for.body ], !dbg !3509
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.1, metadata !3501, metadata !DIExpression()), !dbg !3509
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3566
  call void @llvm.dbg.value(metadata i32 undef, metadata !3502, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3509
  %.pre2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3545
  br label %for.cond, !dbg !3567, !llvm.loop !3568

if.else:                                          ; preds = %if.end13
  %call100 = tail call fastcc zeroext i8 @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %8) #7, !dbg !3570
  call void @llvm.dbg.value(metadata i8 %call100, metadata !3501, metadata !DIExpression()), !dbg !3509
  br label %cleanup

cleanup.loopexit:                                 ; preds = %for.cond
  %control_flow_insn_deleted.0.lcssa = phi i8 [ %control_flow_insn_deleted.0, %for.cond ], !dbg !3509
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.0.lcssa, metadata !3501, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.0.lcssa, metadata !3501, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.0.lcssa, metadata !3501, metadata !DIExpression()), !dbg !3509
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.else, %if.then12
  %control_flow_insn_deleted.3 = phi i8 [ 0, %if.then12 ], [ %call100, %if.else ], [ %control_flow_insn_deleted.0.lcssa, %cleanup.loopexit ], !dbg !3571
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then12 ], [ true, %if.else ], [ true, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.3, metadata !3501, metadata !DIExpression()), !dbg !3509
  br i1 %cleanup.dest.slot.0, label %if.end106, label %cleanup178

if.end106:                                        ; preds = %if.end8, %cleanup
  %control_flow_insn_deleted.4 = phi i8 [ 0, %if.end8 ], [ %control_flow_insn_deleted.3, %cleanup ], !dbg !3571
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.4, metadata !3501, metadata !DIExpression()), !dbg !3509
  %bf.load107 = load i32, i32* %0, align 8, !dbg !3572
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !3572
  %cmp109 = icmp eq i32 %bf.clear108, 13, !dbg !3572
  br i1 %cmp109, label %cleanup178, label %lor.lhs.false, !dbg !3574

lor.lhs.false:                                    ; preds = %if.end106
  %bf.clear112 = and i32 %bf.load107, 134217728, !dbg !3575
  %tobool113 = icmp eq i32 %bf.clear112, 0, !dbg !3575
  br i1 %tobool113, label %if.end115, label %cleanup178, !dbg !3576

if.end115:                                        ; preds = %lor.lhs.false
  %cmp118 = icmp eq i32 %bf.clear108, 10, !dbg !3577
  br i1 %cmp118, label %land.lhs.true, label %if.end125, !dbg !3579

land.lhs.true:                                    ; preds = %if.end115
  %call120 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 27, %struct.rtx_def* null) #6, !dbg !3580
  %tobool121 = icmp eq %struct.rtx_def* %call120, null, !dbg !3580
  br i1 %tobool121, label %if.end125, label %if.then122, !dbg !3581

if.then122:                                       ; preds = %land.lhs.true
  %top123 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !3582
  store i32 -1, i32* %top123, align 8, !dbg !3584
  %reg_set124 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !3585
  store i64 0, i64* %reg_set124, align 8, !dbg !3585
  br label %cleanup178, !dbg !3586

if.end125:                                        ; preds = %land.lhs.true, %if.end115
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3587
  %24 = getelementptr inbounds %union.u, %union.u* %u126, i64 1, i32 0, i32 0, i64 2, !dbg !3587
  %rt_rtx129 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3587
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx129, metadata !3499, metadata !DIExpression()), !dbg !3509
  br label %for.cond130, !dbg !3588

for.cond130:                                      ; preds = %for.inc172, %if.end125
  %note.0.in = phi %struct.rtx_def** [ %rt_rtx129, %if.end125 ], [ %rt_rtx176.pre-phi, %for.inc172 ]
  %note_link.0 = phi %struct.rtx_def** [ %rt_rtx129, %if.end125 ], [ %note_link.1, %for.inc172 ], !dbg !3590
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %if.end125 ], [ %insn.addr.1, %for.inc172 ]
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !3497, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.0, metadata !3499, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3500, metadata !DIExpression()), !dbg !3509
  %tobool131 = icmp eq %struct.rtx_def* %note.0, null, !dbg !3592
  br i1 %tobool131, label %cleanup178.loopexit, label %for.body132, !dbg !3592

for.body132:                                      ; preds = %for.cond130
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !3593
  %bf.load133 = load i32, i32* %25, align 8, !dbg !3593
  %bf.clear135 = and i32 %bf.load133, 16711680, !dbg !3593
  %cmp136 = icmp eq i32 %bf.clear135, 393216, !dbg !3596
  br i1 %cmp136, label %land.lhs.true138, label %if.else166, !dbg !3597

land.lhs.true138:                                 ; preds = %for.body132
  %arrayidx141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3598
  %26 = bitcast %union.rtunion_def* %arrayidx141 to i32**, !dbg !3598
  %27 = load i32*, i32** %26, align 8, !dbg !3598
  %bf.load143 = load i32, i32* %27, align 8, !dbg !3598
  %bf.clear144 = and i32 %bf.load143, 65535, !dbg !3598
  %cmp145 = icmp eq i32 %bf.clear144, 37, !dbg !3598
  br i1 %cmp145, label %land.lhs.true147, label %if.else166, !dbg !3598

land.lhs.true147:                                 ; preds = %land.lhs.true138
  %28 = bitcast i32* %27 to %struct.rtx_def*, !dbg !3598
  %call152 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %28) #7, !dbg !3598
  %29 = and i32 %call152, -8, !dbg !3598
  %cmp154 = icmp eq i32 %29, 8, !dbg !3598
  br i1 %cmp154, label %if.then156, label %if.else166, !dbg !3599

if.then156:                                       ; preds = %land.lhs.true147
  %rt_rtx151 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**, !dbg !3598
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3600
  %31 = bitcast %union.rtunion_def* %30 to i64*, !dbg !3600
  %32 = load i64, i64* %31, align 8, !dbg !3600
  %33 = bitcast %struct.rtx_def** %note_link.0 to i64*, !dbg !3602
  store i64 %32, i64* %33, align 8, !dbg !3602
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx151, align 8, !dbg !3603
  %call165 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %regstack, %struct.rtx_def* %34, i32 0) #7, !dbg !3604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call165, metadata !3497, metadata !DIExpression()), !dbg !3509
  %.pre6 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !3605
  br label %for.inc172, !dbg !3606

if.else166:                                       ; preds = %land.lhs.true147, %land.lhs.true138, %for.body132
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3607
  %rt_rtx170 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !3607
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx170, metadata !3499, metadata !DIExpression()), !dbg !3509
  br label %for.inc172

for.inc172:                                       ; preds = %if.then156, %if.else166
  %rt_rtx176.pre-phi = phi %struct.rtx_def** [ %.pre6, %if.then156 ], [ %rt_rtx170, %if.else166 ], !dbg !3605
  %note_link.1 = phi %struct.rtx_def** [ %note_link.0, %if.then156 ], [ %rt_rtx170, %if.else166 ], !dbg !3509
  %insn.addr.1 = phi %struct.rtx_def* [ %call165, %if.then156 ], [ %insn.addr.0, %if.else166 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !3497, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.1, metadata !3499, metadata !DIExpression()), !dbg !3509
  br label %for.cond130, !dbg !3608, !llvm.loop !3609

cleanup178.loopexit:                              ; preds = %for.cond130
  br label %cleanup178, !dbg !3611

cleanup178:                                       ; preds = %cleanup178.loopexit, %lor.lhs.false, %if.end106, %cleanup, %if.then122
  %retval.1 = phi i8 [ 0, %cleanup ], [ %control_flow_insn_deleted.4, %if.then122 ], [ %control_flow_insn_deleted.4, %lor.lhs.false ], [ %control_flow_insn_deleted.4, %if.end106 ], [ %control_flow_insn_deleted.4, %cleanup178.loopexit ], !dbg !3509
  ret i8 %retval.1, !dbg !3611
}

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_equal_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !3612 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !3617, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.value(metadata i64 %y, metadata !3618, metadata !DIExpression()), !dbg !3619
  %cmp = icmp eq i64 %x, %y, !dbg !3620
  %conv1 = zext i1 %cmp to i8, !dbg !3621
  ret i8 %conv1, !dbg !3622
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** %pat) unnamed_addr #5 !dbg !3623 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat, metadata !3627, metadata !DIExpression()), !dbg !3636
  br label %for.cond, !dbg !3637

for.cond:                                         ; preds = %sw.epilog, %entry
  %pat.addr.0 = phi %struct.rtx_def** [ %pat, %entry ], [ %pat.addr.2, %sw.epilog ]
  %retval.0 = phi %struct.rtx_def** [ undef, %entry ], [ %retval.3, %sw.epilog ]
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat.addr.0, metadata !3627, metadata !DIExpression()), !dbg !3636
  %0 = bitcast %struct.rtx_def** %pat.addr.0 to i32**, !dbg !3638
  %1 = load i32*, i32** %0, align 8, !dbg !3638
  %bf.load = load i32, i32* %1, align 8, !dbg !3638
  %trunc = trunc i32 %bf.load to i16, !dbg !3639
  %2 = bitcast i32* %1 to %struct.rtx_def*, !dbg !3639
  switch i16 %trunc, label %return.loopexit [
    i16 39, label %sw.bb
    i16 103, label %sw.bb27
    i16 104, label %sw.bb27
    i16 101, label %sw.bb27
    i16 18, label %sw.bb32
    i16 102, label %sw.bb44
  ], !dbg !3639

sw.bb:                                            ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 2, !dbg !3640
  %3 = bitcast i32* %arrayidx to i32**, !dbg !3640
  %4 = load i32*, i32** %3, align 8, !dbg !3640
  %bf.load1 = load i32, i32* %4, align 8, !dbg !3640
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3640
  %cmp = icmp eq i32 %bf.clear2, 37, !dbg !3640
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !3640
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !3640

land.lhs.true:                                    ; preds = %sw.bb
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3628, metadata !DIExpression()), !dbg !3641
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3640
  %6 = and i32 %call, -8, !dbg !3640
  %cmp7 = icmp eq i32 %6, 8, !dbg !3640
  br i1 %cmp7, label %if.then, label %cleanup, !dbg !3642

if.then:                                          ; preds = %land.lhs.true
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3643
  %bf.load10 = load i32, i32* %4, align 8, !dbg !3644
  %bf.lshr = lshr i32 %bf.load10, 16, !dbg !3644
  %bf.clear11 = and i32 %bf.lshr, 255, !dbg !3644
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pat.addr.0, align 8, !dbg !3645
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3645
  %rt_uint = bitcast %union.rtunion_def* %8 to i32*, !dbg !3645
  %9 = load i32, i32* %rt_uint, align 8, !dbg !3645
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !3646
  %bf.load15 = load i32, i32* %.cast, align 8, !dbg !3646
  %bf.lshr16 = lshr i32 %bf.load15, 16, !dbg !3646
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !3646
  %call18 = tail call i32 @subreg_regno_offset(i32 %call9, i32 %bf.clear11, i32 %9, i32 %bf.clear17) #6, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %call18, metadata !3633, metadata !DIExpression()), !dbg !3648
  %call19 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3649
  %add = add i32 %call19, %call18, !dbg !3649
  %sub20 = add i32 %add, -8, !dbg !3649
  %idxprom = zext i32 %sub20 to i64, !dbg !3649
  %bf.load22 = load i32, i32* %4, align 8, !dbg !3649
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !3649
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !3649
  %idxprom25 = zext i32 %bf.clear24 to i64, !dbg !3649
  %arrayidx26 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom, i64 %idxprom25, !dbg !3649
  %10 = bitcast %struct.rtx_def** %arrayidx26 to i64*, !dbg !3649
  %11 = load i64, i64* %10, align 8, !dbg !3649
  %12 = bitcast %struct.rtx_def** %pat.addr.0 to i64*, !dbg !3650
  store i64 %11, i64* %12, align 8, !dbg !3650
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %land.lhs.true, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %land.lhs.true ], [ true, %sw.bb ]
  %retval.1 = phi %struct.rtx_def** [ %pat.addr.0, %if.then ], [ %retval.0, %land.lhs.true ], [ %retval.0, %sw.bb ]
  br i1 %cleanup.dest.slot.0, label %cleanup.sw.bb27_crit_edge, label %return.loopexit

cleanup.sw.bb27_crit_edge:                        ; preds = %cleanup
  %.pn.pre.pre = load %struct.rtx_def*, %struct.rtx_def** %pat.addr.0, align 8, !dbg !3651
  br label %sw.bb27

sw.bb27:                                          ; preds = %cleanup.sw.bb27_crit_edge, %for.cond, %for.cond, %for.cond
  %.pn.pre = phi %struct.rtx_def* [ %2, %for.cond ], [ %2, %for.cond ], [ %2, %for.cond ], [ %.pn.pre.pre, %cleanup.sw.bb27_crit_edge ], !dbg !3651
  %retval.2 = phi %struct.rtx_def** [ %retval.0, %for.cond ], [ %retval.0, %for.cond ], [ %retval.0, %for.cond ], [ %retval.1, %cleanup.sw.bb27_crit_edge ]
  br label %sw.epilog, !dbg !3652

sw.bb32:                                          ; preds = %for.cond
  %pat.addr.0.lcssa7 = phi %struct.rtx_def** [ %pat.addr.0, %for.cond ]
  %.lcssa6 = phi i32* [ %1, %for.cond ], !dbg !3638
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat.addr.0.lcssa7, metadata !3627, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat.addr.0.lcssa7, metadata !3627, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat.addr.0.lcssa7, metadata !3627, metadata !DIExpression()), !dbg !3636
  %13 = getelementptr inbounds i32, i32* %.lcssa6, i64 4, !dbg !3653
  %14 = load i32, i32* %13, align 8, !dbg !3653
  %cmp36 = icmp eq i32 %14, 39, !dbg !3655
  br i1 %cmp36, label %if.then38, label %return, !dbg !3656

if.then38:                                        ; preds = %sw.bb32
  %arrayidx41 = getelementptr inbounds i32, i32* %.lcssa6, i64 2, !dbg !3657
  %rt_rtvec = bitcast i32* %arrayidx41 to %struct.rtvec_def**, !dbg !3657
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3657
  %arrayidx42 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 1, i64 0, !dbg !3657
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx42, metadata !3627, metadata !DIExpression()), !dbg !3636
  br label %return, !dbg !3658

sw.bb44:                                          ; preds = %for.cond
  %16 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !3659
  %tobool = icmp eq i32 %16, 0, !dbg !3659
  br i1 %tobool, label %return.loopexit, label %if.end46, !dbg !3661

if.end46:                                         ; preds = %sw.bb44
  br label %sw.epilog, !dbg !3662

sw.epilog:                                        ; preds = %if.end46, %sw.bb27
  %.pn = phi %struct.rtx_def* [ %2, %if.end46 ], [ %.pn.pre, %sw.bb27 ], !dbg !3651
  %retval.3 = phi %struct.rtx_def** [ %retval.0, %if.end46 ], [ %retval.2, %sw.bb27 ]
  %pat.addr.2.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3651
  %pat.addr.2 = bitcast %union.rtunion_def* %pat.addr.2.in to %struct.rtx_def**, !dbg !3651
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat.addr.2, metadata !3627, metadata !DIExpression()), !dbg !3636
  br label %for.cond, !dbg !3663, !llvm.loop !3664

return.loopexit:                                  ; preds = %cleanup, %for.cond, %sw.bb44
  %retval.4.ph = phi %struct.rtx_def** [ %pat.addr.0, %for.cond ], [ %pat.addr.0, %sw.bb44 ], [ %retval.1, %cleanup ]
  br label %return, !dbg !3667

return:                                           ; preds = %return.loopexit, %sw.bb32, %if.then38
  %retval.4 = phi %struct.rtx_def** [ %arrayidx42, %if.then38 ], [ %pat.addr.0.lcssa7, %sw.bb32 ], [ %retval.4.ph, %return.loopexit ], !dbg !3651
  ret %struct.rtx_def** %retval.4, !dbg !3667
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %reg) unnamed_addr #5 !dbg !3668 {
entry:
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3672, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3673, metadata !DIExpression()), !dbg !3675
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3676
  %bf.load = load i32, i32* %0, align 8, !dbg !3676
  %bf.clear = and i32 %bf.load, 65535, !dbg !3676
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3676
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !3676

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !3676
  %1 = and i32 %call, -8, !dbg !3676
  %cmp1 = icmp eq i32 %1, 8, !dbg !3676
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !3676

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 731, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3676
  br label %cond.end, !dbg !3676

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !3677
  %2 = load i32, i32* %top, align 8, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %2, metadata !3674, metadata !DIExpression()), !dbg !3675
  %3 = sext i32 %2 to i64, !dbg !3679
  br label %for.cond, !dbg !3679

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %cond.end ], !dbg !3680
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3674, metadata !DIExpression()), !dbg !3675
  %cmp3 = icmp sgt i64 %indvars.iv, -1, !dbg !3681
  %4 = trunc i64 %indvars.iv to i32, !dbg !3683
  br i1 %cmp3, label %for.body, label %for.end, !dbg !3683

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv, !dbg !3684
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3684
  %conv6 = zext i8 %5 to i32, !dbg !3684
  %call7 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !3686
  %cmp8 = icmp eq i32 %call7, %conv6, !dbg !3687
  br i1 %cmp8, label %for.end, label %for.inc, !dbg !3688

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3689
  call void @llvm.dbg.value(metadata i32 undef, metadata !3674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3675
  br label %for.cond, !dbg !3690, !llvm.loop !3691

for.end:                                          ; preds = %for.body, %for.cond
  %cmp3.lcssa = phi i1 [ %cmp3, %for.body ], [ %cmp3, %for.cond ], !dbg !3681
  %.lcssa = phi i32 [ %4, %for.body ], [ %4, %for.cond ], !dbg !3683
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3674, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3674, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3674, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3674, metadata !DIExpression()), !dbg !3675
  br i1 %cmp3.lcssa, label %cond.true12, label %cond.end16, !dbg !3693

cond.true12:                                      ; preds = %for.end
  %6 = load i32, i32* %top, align 8, !dbg !3694
  %add = add nsw i32 %6, 8, !dbg !3695
  %sub14 = sub nsw i32 %add, %.lcssa, !dbg !3696
  br label %cond.end16, !dbg !3693

cond.end16:                                       ; preds = %for.end, %cond.true12
  %cond17 = phi i32 [ %sub14, %cond.true12 ], [ -1, %for.end ], !dbg !3693
  ret i32 %cond17, !dbg !3697
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_reg(%struct.rtx_def** %reg, i32 %regno) unnamed_addr #5 !dbg !3698 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %reg, metadata !3702, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3703, metadata !DIExpression()), !dbg !3704
  %0 = and i32 %regno, -8, !dbg !3705
  %cmp = icmp eq i32 %0, 8, !dbg !3705
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3705

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 691, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3705
  br label %cond.end, !dbg !3705

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %struct.rtx_def** %reg to i32**, !dbg !3706
  %2 = load i32*, i32** %1, align 8, !dbg !3706
  %bf.load = load i32, i32* %2, align 8, !dbg !3706
  %bf.clear = and i32 %bf.load, 65535, !dbg !3706
  %cmp2 = icmp eq i32 %bf.clear, 37, !dbg !3706
  br i1 %cmp2, label %land.lhs.true, label %cond.true8, !dbg !3706

land.lhs.true:                                    ; preds = %cond.end
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !3706
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !3706
  %4 = and i32 %call, -8, !dbg !3706
  %cmp6 = icmp eq i32 %4, 8, !dbg !3706
  br i1 %cmp6, label %cond.end10, label %cond.true8, !dbg !3706

cond.true8:                                       ; preds = %land.lhs.true, %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 692, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3706
  br label %cond.end10, !dbg !3706

cond.end10:                                       ; preds = %land.lhs.true, %cond.true8
  %5 = load i32*, i32** %1, align 8, !dbg !3707
  %bf.load12 = load i32, i32* %5, align 8, !dbg !3707
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !3707
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !3707
  %idxprom = zext i32 %bf.clear13 to i64, !dbg !3707
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3707
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3707
  %cmp15 = icmp eq i8 %6, 8, !dbg !3707
  br i1 %cmp15, label %cond.end36, label %lor.lhs.false, !dbg !3707

lor.lhs.false:                                    ; preds = %cond.end10
  %cmp23 = icmp eq i8 %6, 9, !dbg !3707
  br i1 %cmp23, label %cond.end36, label %lor.lhs.false25, !dbg !3707

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %cmp32 = icmp eq i8 %6, 11, !dbg !3707
  br i1 %cmp32, label %cond.end36, label %cond.true34, !dbg !3707

cond.true34:                                      ; preds = %lor.lhs.false25
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 695, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3707
  %.pre = load i32*, i32** %1, align 8, !dbg !3708
  %bf.load41.pre = load i32, i32* %.pre, align 8, !dbg !3708
  %.pre2 = lshr i32 %bf.load41.pre, 16, !dbg !3708
  %.pre3 = and i32 %.pre2, 255, !dbg !3708
  %.pre4 = zext i32 %.pre3 to i64, !dbg !3708
  br label %cond.end36, !dbg !3707

cond.end36:                                       ; preds = %cond.end10, %lor.lhs.false, %lor.lhs.false25, %cond.true34
  %idxprom44.pre-phi = phi i64 [ %idxprom, %cond.end10 ], [ %idxprom, %lor.lhs.false ], [ %idxprom, %lor.lhs.false25 ], [ %.pre4, %cond.true34 ], !dbg !3708
  %sub38 = add nsw i32 %regno, -8, !dbg !3708
  %idxprom39 = sext i32 %sub38 to i64, !dbg !3708
  %arrayidx45 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom39, i64 %idxprom44.pre-phi, !dbg !3708
  %7 = bitcast %struct.rtx_def** %arrayidx45 to i64*, !dbg !3708
  %8 = load i64, i64* %7, align 8, !dbg !3708
  %9 = bitcast %struct.rtx_def** %reg to i64*, !dbg !3709
  store i64 %8, i64* %9, align 8, !dbg !3709
  ret void, !dbg !3710
}

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @straighten_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack) unnamed_addr #5 !dbg !3711 {
entry:
  %temp_stack = alloca %struct.stack_def, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3715, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3716, metadata !DIExpression()), !dbg !3719
  %0 = bitcast %struct.stack_def* %temp_stack to i8*, !dbg !3720
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3720
  %top1 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !3721
  %1 = load i32, i32* %top1, align 8, !dbg !3721
  %cmp = icmp slt i32 %1, 1, !dbg !3723
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3724

if.end:                                           ; preds = %entry
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !3725
  %2 = load i64, i64* %reg_set, align 8, !dbg !3725
  %reg_set2 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 1, !dbg !3725
  store i64 %2, i64* %reg_set2, align 8, !dbg !3725
  %top4 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 0, !dbg !3726
  store i32 %1, i32* %top4, align 8, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %1, metadata !3718, metadata !DIExpression()), !dbg !3719
  %3 = sext i32 %1 to i64, !dbg !3729
  br label %for.cond, !dbg !3729

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %3, %if.end ], !dbg !3730
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3718, metadata !DIExpression()), !dbg !3719
  %cmp5 = icmp sgt i64 %indvars.iv, -1, !dbg !3731
  br i1 %cmp5, label %for.body, label %for.end, !dbg !3733

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %top4, align 8, !dbg !3734
  %add = add nsw i32 %4, 8, !dbg !3735
  %5 = trunc i64 %indvars.iv to i32, !dbg !3736
  %sub = sub nsw i32 %add, %5, !dbg !3736
  %conv = trunc i32 %sub to i8, !dbg !3737
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %indvars.iv, !dbg !3738
  store i8 %conv, i8* %arrayidx, align 1, !dbg !3739
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3740
  call void @llvm.dbg.value(metadata i32 undef, metadata !3718, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3719
  br label %for.cond, !dbg !3741, !llvm.loop !3742

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !3717, metadata !DIExpression(DW_OP_deref)), !dbg !3719
  call fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.stack_def* nonnull %temp_stack, i32 1) #7, !dbg !3744
  br label %cleanup, !dbg !3745

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3745
  ret void, !dbg !3745
}

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @subst_asm_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack) unnamed_addr #5 !dbg !3746 {
entry:
  %temp_stack = alloca %struct.stack_def, align 8
  %n_inputs = alloca i32, align 4
  %n_outputs = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !3749, metadata !DIExpression()), !dbg !3821
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3822
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3822
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3822
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3822
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3750, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def** null, metadata !3755, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def*** null, metadata !3756, metadata !DIExpression()), !dbg !3821
  %2 = bitcast %struct.stack_def* %temp_stack to i8*, !dbg !3823
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3823
  %3 = bitcast i32* %n_inputs to i8*, !dbg !3824
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3824
  %4 = bitcast i32* %n_outputs to i8*, !dbg !3824
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !3824
  %call = tail call fastcc i32 @check_asm_stack_operands(%struct.rtx_def* %insn) #7, !dbg !3825
  %tobool = icmp eq i32 %call, 0, !dbg !3825
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3827

if.end:                                           ; preds = %entry
  tail call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !3828
  %call1 = tail call i32 @constrain_operands(i32 1) #6, !dbg !3829
  %5 = load i32, i32* @which_alternative, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %5, metadata !3751, metadata !DIExpression()), !dbg !3821
  tail call void @preprocess_constraints() #6, !dbg !3831
  call void @llvm.dbg.value(metadata i32* %n_inputs, metadata !3762, metadata !DIExpression(DW_OP_deref)), !dbg !3821
  call void @llvm.dbg.value(metadata i32* %n_outputs, metadata !3763, metadata !DIExpression(DW_OP_deref)), !dbg !3821
  call fastcc void @get_asm_operands_in_out(%struct.rtx_def* %1, i32* nonnull %n_outputs, i32* nonnull %n_inputs) #7, !dbg !3832
  %cmp = icmp sgt i32 %5, -1, !dbg !3833
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3833

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3833
  br label %cond.end, !dbg !3833

cond.end:                                         ; preds = %if.end, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !3761, metadata !DIExpression()), !dbg !3821
  br label %for.cond, !dbg !3834

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv33 = phi i64 [ %indvars.iv.next34, %for.inc ], [ 0, %cond.end ], !dbg !3836
  call void @llvm.dbg.value(metadata i64 %indvars.iv33, metadata !3761, metadata !DIExpression()), !dbg !3821
  %6 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !3837
  %7 = sext i8 %6 to i64, !dbg !3839
  %cmp2 = icmp slt i64 %indvars.iv33, %7, !dbg !3839
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3840

for.body:                                         ; preds = %for.cond
  %arrayidx4 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv33, !dbg !3841
  %8 = bitcast %struct.rtx_def** %arrayidx4 to i32**, !dbg !3841
  %9 = load i32*, i32** %8, align 8, !dbg !3841
  %bf.load = load i32, i32* %9, align 8, !dbg !3841
  %bf.clear = and i32 %bf.load, 65535, !dbg !3841
  %cmp5 = icmp eq i32 %bf.clear, 39, !dbg !3843
  br i1 %cmp5, label %land.lhs.true, label %for.inc, !dbg !3844

land.lhs.true:                                    ; preds = %for.body
  %arrayidx11 = getelementptr inbounds i32, i32* %9, i64 2, !dbg !3845
  %10 = bitcast i32* %arrayidx11 to i32**, !dbg !3845
  %11 = load i32*, i32** %10, align 8, !dbg !3845
  %bf.load13 = load i32, i32* %11, align 8, !dbg !3845
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !3845
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !3845
  br i1 %cmp15, label %if.then17, label %for.inc, !dbg !3846

if.then17:                                        ; preds = %land.lhs.true
  %arrayidx25 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv33, !dbg !3847
  %12 = bitcast %struct.rtx_def*** %arrayidx25 to i32**, !dbg !3849
  store i32* %arrayidx11, i32** %12, align 8, !dbg !3849
  %13 = bitcast i32* %arrayidx11 to i64*, !dbg !3850
  %14 = load i64, i64* %13, align 8, !dbg !3850
  %15 = bitcast %struct.rtx_def** %arrayidx4 to i64*, !dbg !3851
  store i64 %14, i64* %15, align 8, !dbg !3851
  br label %for.inc, !dbg !3852

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then17
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1, !dbg !3853
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  br label %for.cond, !dbg !3854, !llvm.loop !3855

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !3761, metadata !DIExpression()), !dbg !3821
  %16 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3857
  br label %for.cond39, !dbg !3859

for.cond39:                                       ; preds = %for.body41, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc42, %for.body41 ], !dbg !3860
  %note.0.in.in = phi %union.rtunion_def* [ %16, %for.end ], [ %17, %for.body41 ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !3860
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3760, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3761, metadata !DIExpression()), !dbg !3821
  %tobool40 = icmp eq %struct.rtx_def* %note.0, null, !dbg !3861
  br i1 %tobool40, label %for.end48, label %for.body41, !dbg !3861

for.body41:                                       ; preds = %for.cond39
  %inc42 = add nuw nsw i32 %i.1, 1, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %inc42, metadata !3761, metadata !DIExpression()), !dbg !3821
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3864
  br label %for.cond39, !dbg !3865, !llvm.loop !3866

for.end48:                                        ; preds = %for.cond39
  %i.1.lcssa = phi i32 [ %i.1, %for.cond39 ], !dbg !3860
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !3761, metadata !DIExpression()), !dbg !3821
  %conv49 = zext i32 %i.1.lcssa to i64, !dbg !3868
  %18 = alloca %struct.rtx_def*, i64 %conv49, align 16, !dbg !3868
  call void @llvm.dbg.value(metadata %struct.rtx_def** %18, metadata !3752, metadata !DIExpression()), !dbg !3821
  %19 = alloca %struct.rtx_def**, i64 %conv49, align 16, !dbg !3869
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %19, metadata !3753, metadata !DIExpression()), !dbg !3821
  %20 = alloca i32, i64 %conv49, align 16, !dbg !3870
  call void @llvm.dbg.value(metadata i32* %20, metadata !3754, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 0, metadata !3758, metadata !DIExpression()), !dbg !3821
  br label %for.cond58, !dbg !3871

for.cond58:                                       ; preds = %for.inc123, %for.end48
  %note.1.in.in = phi %union.rtunion_def* [ %16, %for.end48 ], [ %28, %for.inc123 ]
  %n_notes.0 = phi i32 [ 0, %for.end48 ], [ %n_notes.1, %for.inc123 ], !dbg !3821
  %note.1.in = bitcast %union.rtunion_def* %note.1.in.in to %struct.rtx_def**, !dbg !3872
  %note.1 = load %struct.rtx_def*, %struct.rtx_def** %note.1.in, align 8, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %n_notes.0, metadata !3758, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.1, metadata !3760, metadata !DIExpression()), !dbg !3821
  %tobool59 = icmp eq %struct.rtx_def* %note.1, null, !dbg !3873
  br i1 %tobool59, label %for.end128, label %for.body60, !dbg !3873

for.body60:                                       ; preds = %for.cond58
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3874
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !3874
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !3874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !3764, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx64, metadata !3768, metadata !DIExpression()), !dbg !3875
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !3876
  %bf.load69 = load i32, i32* %22, align 8, !dbg !3876
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !3876
  %cmp71 = icmp eq i32 %bf.clear70, 39, !dbg !3878
  br i1 %cmp71, label %land.lhs.true73, label %if.end91, !dbg !3879

land.lhs.true73:                                  ; preds = %for.body60
  %arrayidx76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3880
  %23 = bitcast %union.rtunion_def* %arrayidx76 to i32**, !dbg !3880
  %24 = load i32*, i32** %23, align 8, !dbg !3880
  %bf.load78 = load i32, i32* %24, align 8, !dbg !3880
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3880
  %cmp80 = icmp eq i32 %bf.clear79, 37, !dbg !3880
  br i1 %cmp80, label %if.then82, label %if.end91, !dbg !3881

if.then82:                                        ; preds = %land.lhs.true73
  %25 = bitcast i32* %24 to %struct.rtx_def*, !dbg !3881
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !3882
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx86, metadata !3768, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !3764, metadata !DIExpression()), !dbg !3875
  br label %if.end91, !dbg !3884

if.end91:                                         ; preds = %if.then82, %land.lhs.true73, %for.body60
  %bf.load92 = phi i32 [ %bf.load78, %if.then82 ], [ %bf.load69, %land.lhs.true73 ], [ %bf.load69, %for.body60 ], !dbg !3885
  %loc.0 = phi %struct.rtx_def** [ %rt_rtx86, %if.then82 ], [ %rt_rtx64, %land.lhs.true73 ], [ %rt_rtx64, %for.body60 ], !dbg !3875
  %reg.0 = phi %struct.rtx_def* [ %25, %if.then82 ], [ %21, %land.lhs.true73 ], [ %21, %for.body60 ], !dbg !3875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !3764, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc.0, metadata !3768, metadata !DIExpression()), !dbg !3875
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !3885
  %cmp94 = icmp eq i32 %bf.clear93, 37, !dbg !3885
  br i1 %cmp94, label %land.lhs.true96, label %for.inc123, !dbg !3885

land.lhs.true96:                                  ; preds = %if.end91
  %call97 = call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.0) #7, !dbg !3885
  %26 = and i32 %call97, -8, !dbg !3885
  %cmp99 = icmp eq i32 %26, 8, !dbg !3885
  br i1 %cmp99, label %land.lhs.true101, label %for.inc123, !dbg !3887

land.lhs.true101:                                 ; preds = %land.lhs.true96
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 0, !dbg !3888
  %bf.load102 = load i32, i32* %27, align 8, !dbg !3888
  %bf.clear103 = and i32 %bf.load102, 16711680, !dbg !3888
  %cmp104 = icmp eq i32 %bf.clear103, 65536, !dbg !3889
  br i1 %cmp104, label %if.then111, label %lor.lhs.false, !dbg !3890

lor.lhs.false:                                    ; preds = %land.lhs.true101
  %cmp109 = icmp eq i32 %bf.clear103, 393216, !dbg !3891
  br i1 %cmp109, label %if.then111, label %for.inc123, !dbg !3892

if.then111:                                       ; preds = %lor.lhs.false, %land.lhs.true101
  %idxprom112 = sext i32 %n_notes.0 to i64, !dbg !3893
  %arrayidx113 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %idxprom112, !dbg !3893
  store %struct.rtx_def* %reg.0, %struct.rtx_def** %arrayidx113, align 8, !dbg !3895
  %arrayidx115 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %19, i64 %idxprom112, !dbg !3896
  store %struct.rtx_def** %loc.0, %struct.rtx_def*** %arrayidx115, align 8, !dbg !3897
  %bf.lshr117 = lshr i32 %bf.load102, 16, !dbg !3898
  %bf.clear118 = and i32 %bf.lshr117, 255, !dbg !3898
  %arrayidx120 = getelementptr inbounds i32, i32* %20, i64 %idxprom112, !dbg !3899
  store i32 %bf.clear118, i32* %arrayidx120, align 4, !dbg !3900
  %inc121 = add nsw i32 %n_notes.0, 1, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %inc121, metadata !3758, metadata !DIExpression()), !dbg !3821
  br label %for.inc123, !dbg !3902

for.inc123:                                       ; preds = %if.end91, %land.lhs.true96, %lor.lhs.false, %if.then111
  %n_notes.1 = phi i32 [ %inc121, %if.then111 ], [ %n_notes.0, %lor.lhs.false ], [ %n_notes.0, %land.lhs.true96 ], [ %n_notes.0, %if.end91 ], !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_notes.1, metadata !3758, metadata !DIExpression()), !dbg !3821
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3903
  br label %for.cond58, !dbg !3904, !llvm.loop !3905

for.end128:                                       ; preds = %for.cond58
  %n_notes.0.lcssa = phi i32 [ %n_notes.0, %for.cond58 ], !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_notes.0.lcssa, metadata !3758, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_notes.0.lcssa, metadata !3758, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_notes.0.lcssa, metadata !3758, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 0, metadata !3759, metadata !DIExpression()), !dbg !3821
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3907
  %bf.load129 = load i32, i32* %29, align 8, !dbg !3907
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !3907
  %cmp131 = icmp eq i32 %bf.clear130, 15, !dbg !3908
  br i1 %cmp131, label %if.then133, label %if.end227, !dbg !3909

if.then133:                                       ; preds = %for.end128
  %arrayidx136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3910
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtvec_def**, !dbg !3910
  %30 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3910
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 0, !dbg !3910
  %31 = load i32, i32* %num_elem, align 8, !dbg !3910
  %conv137 = sext i32 %31 to i64, !dbg !3910
  %32 = alloca %struct.rtx_def*, i64 %conv137, align 16, !dbg !3910
  call void @llvm.dbg.value(metadata %struct.rtx_def** %32, metadata !3755, metadata !DIExpression()), !dbg !3821
  %33 = alloca %struct.rtx_def**, i64 %conv137, align 16, !dbg !3911
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %33, metadata !3756, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 0, metadata !3761, metadata !DIExpression()), !dbg !3821
  br label %for.cond146, !dbg !3912

for.cond146:                                      ; preds = %for.inc224, %if.then133
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %for.inc224 ], [ 0, %if.then133 ], !dbg !3913
  %34 = phi i32 [ %.pre2, %for.inc224 ], [ %31, %if.then133 ], !dbg !3913
  %35 = phi %struct.rtvec_def* [ %.pre, %for.inc224 ], [ %30, %if.then133 ], !dbg !3913
  %n_clobbers.0 = phi i32 [ %n_clobbers.2, %for.inc224 ], [ 0, %if.then133 ], !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0, metadata !3759, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i64 %indvars.iv31, metadata !3761, metadata !DIExpression()), !dbg !3821
  %36 = sext i32 %34 to i64, !dbg !3914
  %cmp152 = icmp slt i64 %indvars.iv31, %36, !dbg !3914
  br i1 %cmp152, label %for.body154, label %if.end227.loopexit, !dbg !3915

for.body154:                                      ; preds = %for.cond146
  %arrayidx160 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %35, i64 0, i32 1, i64 %indvars.iv31, !dbg !3916
  %37 = bitcast %struct.rtx_def** %arrayidx160 to i32**, !dbg !3916
  %38 = load i32*, i32** %37, align 8, !dbg !3916
  %bf.load161 = load i32, i32* %38, align 8, !dbg !3916
  %bf.clear162 = and i32 %bf.load161, 65535, !dbg !3916
  %cmp163 = icmp eq i32 %bf.clear162, 25, !dbg !3917
  br i1 %cmp163, label %if.then165, label %for.inc224, !dbg !3918

if.then165:                                       ; preds = %for.body154
  call void @llvm.dbg.value(metadata i32* %38, metadata !3769, metadata !DIExpression()), !dbg !3919
  %arrayidx176 = getelementptr inbounds i32, i32* %38, i64 2, !dbg !3920
  %rt_rtx177 = bitcast i32* %arrayidx176 to %struct.rtx_def**, !dbg !3920
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx177, align 8, !dbg !3920
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !3776, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx177, metadata !3777, metadata !DIExpression()), !dbg !3919
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i64 0, i32 0, !dbg !3921
  %bf.load183 = load i32, i32* %40, align 8, !dbg !3921
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !3921
  %cmp185 = icmp eq i32 %bf.clear184, 39, !dbg !3923
  br i1 %cmp185, label %land.lhs.true187, label %if.end205, !dbg !3924

land.lhs.true187:                                 ; preds = %if.then165
  %arrayidx190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3925
  %41 = bitcast %union.rtunion_def* %arrayidx190 to i32**, !dbg !3925
  %42 = load i32*, i32** %41, align 8, !dbg !3925
  %bf.load192 = load i32, i32* %42, align 8, !dbg !3925
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !3925
  %cmp194 = icmp eq i32 %bf.clear193, 37, !dbg !3925
  br i1 %cmp194, label %if.then196, label %if.end205, !dbg !3926

if.then196:                                       ; preds = %land.lhs.true187
  %43 = bitcast i32* %42 to %struct.rtx_def*, !dbg !3926
  %rt_rtx200 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !3927
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx200, metadata !3777, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %43, metadata !3776, metadata !DIExpression()), !dbg !3919
  br label %if.end205, !dbg !3929

if.end205:                                        ; preds = %if.then196, %land.lhs.true187, %if.then165
  %bf.load206 = phi i32 [ %bf.load192, %if.then196 ], [ %bf.load183, %land.lhs.true187 ], [ %bf.load183, %if.then165 ], !dbg !3930
  %reg173.0 = phi %struct.rtx_def* [ %43, %if.then196 ], [ %39, %land.lhs.true187 ], [ %39, %if.then165 ], !dbg !3919
  %loc178.0 = phi %struct.rtx_def** [ %rt_rtx200, %if.then196 ], [ %rt_rtx177, %land.lhs.true187 ], [ %rt_rtx177, %if.then165 ], !dbg !3919
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc178.0, metadata !3777, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg173.0, metadata !3776, metadata !DIExpression()), !dbg !3919
  %bf.clear207 = and i32 %bf.load206, 65535, !dbg !3930
  %cmp208 = icmp eq i32 %bf.clear207, 37, !dbg !3930
  br i1 %cmp208, label %land.lhs.true210, label %for.inc224, !dbg !3930

land.lhs.true210:                                 ; preds = %if.end205
  %call211 = call fastcc i32 @rhs_regno(%struct.rtx_def* %reg173.0) #7, !dbg !3930
  %44 = and i32 %call211, -8, !dbg !3930
  %cmp214 = icmp eq i32 %44, 8, !dbg !3930
  br i1 %cmp214, label %if.then216, label %for.inc224, !dbg !3932

if.then216:                                       ; preds = %land.lhs.true210
  %idxprom217 = sext i32 %n_clobbers.0 to i64, !dbg !3933
  %arrayidx218 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %32, i64 %idxprom217, !dbg !3933
  store %struct.rtx_def* %reg173.0, %struct.rtx_def** %arrayidx218, align 8, !dbg !3935
  %arrayidx220 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %33, i64 %idxprom217, !dbg !3936
  store %struct.rtx_def** %loc178.0, %struct.rtx_def*** %arrayidx220, align 8, !dbg !3937
  %inc221 = add nsw i32 %n_clobbers.0, 1, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %inc221, metadata !3759, metadata !DIExpression()), !dbg !3821
  br label %for.inc224, !dbg !3939

for.inc224:                                       ; preds = %for.body154, %if.then216, %land.lhs.true210, %if.end205
  %n_clobbers.2 = phi i32 [ %n_clobbers.0, %for.body154 ], [ %inc221, %if.then216 ], [ %n_clobbers.0, %land.lhs.true210 ], [ %n_clobbers.0, %if.end205 ], !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.2, metadata !3759, metadata !DIExpression()), !dbg !3821
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !3940
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3913
  %num_elem151.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre, i64 0, i32 0, !dbg !3941
  %.pre2 = load i32, i32* %num_elem151.phi.trans.insert, align 8, !dbg !3913
  br label %for.cond146, !dbg !3942, !llvm.loop !3943

if.end227.loopexit:                               ; preds = %for.cond146
  %n_clobbers.0.lcssa = phi i32 [ %n_clobbers.0, %for.cond146 ], !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !3759, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !3759, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !3759, metadata !DIExpression()), !dbg !3821
  br label %if.end227, !dbg !3945

if.end227:                                        ; preds = %if.end227.loopexit, %for.end128
  %n_clobbers.3 = phi i32 [ 0, %for.end128 ], [ %n_clobbers.0.lcssa, %if.end227.loopexit ], !dbg !3946
  %clobber_loc.0 = phi %struct.rtx_def*** [ null, %for.end128 ], [ %33, %if.end227.loopexit ], !dbg !3821
  %clobber_reg.0 = phi %struct.rtx_def** [ null, %for.end128 ], [ %32, %if.end227.loopexit ], !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def** %clobber_reg.0, metadata !3755, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def*** %clobber_loc.0, metadata !3756, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %n_clobbers.3, metadata !3759, metadata !DIExpression()), !dbg !3821
  %45 = bitcast %struct.stack_def* %regstack to i8*, !dbg !3945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %45, i64 24, i1 false), !dbg !3945
  %46 = load i32, i32* %n_outputs, align 4, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %46, metadata !3763, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %46, metadata !3761, metadata !DIExpression()), !dbg !3821
  %idxprom249 = sext i32 %5 to i64, !dbg !3948
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 0, !dbg !3949
  %47 = sext i32 %46 to i64, !dbg !3950
  br label %for.cond228, !dbg !3950

for.cond228:                                      ; preds = %for.inc301, %if.end227
  %indvars.iv29 = phi i64 [ %indvars.iv.next30, %for.inc301 ], [ %47, %if.end227 ], !dbg !3951
  %48 = phi i32 [ %.pre3, %for.inc301 ], [ %46, %if.end227 ], !dbg !3951
  call void @llvm.dbg.value(metadata i64 %indvars.iv29, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %48, metadata !3763, metadata !DIExpression()), !dbg !3821
  %49 = load i32, i32* %n_inputs, align 4, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %49, metadata !3762, metadata !DIExpression()), !dbg !3821
  %add = add nsw i32 %48, %49, !dbg !3953
  %50 = sext i32 %add to i64, !dbg !3954
  %cmp229 = icmp slt i64 %indvars.iv29, %50, !dbg !3954
  br i1 %cmp229, label %for.body231, label %for.end303, !dbg !3955

for.body231:                                      ; preds = %for.cond228
  %arrayidx233 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv29, !dbg !3956
  %51 = bitcast %struct.rtx_def** %arrayidx233 to i32**, !dbg !3956
  %52 = load i32*, i32** %51, align 8, !dbg !3956
  %bf.load234 = load i32, i32* %52, align 8, !dbg !3956
  %bf.clear235 = and i32 %bf.load234, 65535, !dbg !3956
  %cmp236 = icmp eq i32 %bf.clear235, 37, !dbg !3956
  br i1 %cmp236, label %land.lhs.true238, label %for.inc301, !dbg !3956

land.lhs.true238:                                 ; preds = %for.body231
  %53 = bitcast i32* %52 to %struct.rtx_def*, !dbg !3956
  %call241 = call fastcc i32 @rhs_regno(%struct.rtx_def* %53) #7, !dbg !3956
  %54 = and i32 %call241, -8, !dbg !3956
  %cmp244 = icmp eq i32 %54, 8, !dbg !3956
  br i1 %cmp244, label %land.lhs.true246, label %for.inc301, !dbg !3957

land.lhs.true246:                                 ; preds = %land.lhs.true238
  %cl = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv29, i64 %idxprom249, i32 1, !dbg !3958
  %55 = load i32, i32* %cl, align 8, !dbg !3958
  %call251 = call i32 @reg_class_subset_p(i32 %55, i32 16) #6, !dbg !3959
  %tobool252 = icmp eq i32 %call251, 0, !dbg !3959
  br i1 %tobool252, label %for.inc301, label %land.lhs.true253, !dbg !3960

land.lhs.true253:                                 ; preds = %land.lhs.true246
  %56 = load i32, i32* %cl, align 8, !dbg !3961
  %cmp259 = icmp eq i32 %56, 16, !dbg !3962
  br i1 %cmp259, label %for.inc301, label %if.then261, !dbg !3963

if.then261:                                       ; preds = %land.lhs.true253
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx233, align 8, !dbg !3964
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !3757, metadata !DIExpression(DW_OP_deref)), !dbg !3821
  %call264 = call fastcc i32 @get_hard_regnum(%struct.stack_def* nonnull %temp_stack, %struct.rtx_def* %57) #7, !dbg !3965
  call void @llvm.dbg.value(metadata i32 %call264, metadata !3778, metadata !DIExpression()), !dbg !3966
  %cmp265 = icmp sgt i32 %call264, -1, !dbg !3967
  br i1 %cmp265, label %cond.end269, label %cond.true267, !dbg !3967

cond.true267:                                     ; preds = %if.then261
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3967
  br label %cond.end269, !dbg !3967

cond.end269:                                      ; preds = %if.then261, %cond.true267
  %58 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx233, align 8, !dbg !3968
  %call273 = call fastcc i32 @rhs_regno(%struct.rtx_def* %58) #7, !dbg !3968
  %cmp274 = icmp eq i32 %call264, %call273, !dbg !3969
  br i1 %cmp274, label %for.inc301, label %if.then276, !dbg !3970

if.then276:                                       ; preds = %cond.end269
  %59 = load i32, i32* %top, align 8, !dbg !3971
  %sub277 = add nsw i32 %call264, -8, !dbg !3972
  %sub278 = sub nsw i32 %59, %sub277, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %sub278, metadata !3786, metadata !DIExpression()), !dbg !3949
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx233, align 8, !dbg !3974
  %call282 = call fastcc i32 @rhs_regno(%struct.rtx_def* %60) #7, !dbg !3974
  %sub283 = add i32 %call282, -8, !dbg !3975
  %sub284 = sub i32 %59, %sub283, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %sub284, metadata !3783, metadata !DIExpression()), !dbg !3949
  %idxprom286 = sext i32 %sub278 to i64, !dbg !3977
  %arrayidx287 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom286, !dbg !3977
  %61 = load i8, i8* %arrayidx287, align 1, !dbg !3977
  %idxprom290 = sext i32 %sub284 to i64, !dbg !3978
  %arrayidx291 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom290, !dbg !3978
  %62 = load i8, i8* %arrayidx291, align 1, !dbg !3978
  store i8 %62, i8* %arrayidx287, align 1, !dbg !3979
  store i8 %61, i8* %arrayidx291, align 1, !dbg !3980
  br label %for.inc301, !dbg !3981

for.inc301:                                       ; preds = %cond.end269, %land.lhs.true253, %land.lhs.true246, %for.body231, %land.lhs.true238, %if.then276
  %indvars.iv.next30 = add nsw i64 %indvars.iv29, 1, !dbg !3982
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  %.pre3 = load i32, i32* %n_outputs, align 4, !dbg !3951
  br label %for.cond228, !dbg !3983, !llvm.loop !3984

for.end303:                                       ; preds = %for.cond228
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !3757, metadata !DIExpression(DW_OP_deref)), !dbg !3821
  call fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.stack_def* nonnull %temp_stack, i32 1) #7, !dbg !3986
  %63 = load i32, i32* %n_outputs, align 4, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %63, metadata !3763, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %63, metadata !3761, metadata !DIExpression()), !dbg !3821
  %64 = sext i32 %63 to i64, !dbg !3988
  br label %for.cond304, !dbg !3988

for.cond304:                                      ; preds = %for.inc336, %for.end303
  %indvars.iv27 = phi i64 [ %indvars.iv.next28, %for.inc336 ], [ %64, %for.end303 ], !dbg !3989
  %65 = phi i32 [ %.pre4, %for.inc336 ], [ %63, %for.end303 ], !dbg !3989
  call void @llvm.dbg.value(metadata i64 %indvars.iv27, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %65, metadata !3763, metadata !DIExpression()), !dbg !3821
  %66 = load i32, i32* %n_inputs, align 4, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %66, metadata !3762, metadata !DIExpression()), !dbg !3821
  %add305 = add nsw i32 %65, %66, !dbg !3991
  %67 = sext i32 %add305 to i64, !dbg !3992
  %cmp306 = icmp slt i64 %indvars.iv27, %67, !dbg !3992
  br i1 %cmp306, label %for.body308, label %for.cond339.preheader, !dbg !3993

for.cond339.preheader:                            ; preds = %for.cond304
  %68 = sext i32 %n_notes.0.lcssa to i64, !dbg !3994
  br label %for.cond339, !dbg !3994

for.body308:                                      ; preds = %for.cond304
  %arrayidx310 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv27, !dbg !3995
  %69 = bitcast %struct.rtx_def** %arrayidx310 to i32**, !dbg !3995
  %70 = load i32*, i32** %69, align 8, !dbg !3995
  %bf.load311 = load i32, i32* %70, align 8, !dbg !3995
  %bf.clear312 = and i32 %bf.load311, 65535, !dbg !3995
  %cmp313 = icmp eq i32 %bf.clear312, 37, !dbg !3995
  br i1 %cmp313, label %land.lhs.true315, label %for.inc336, !dbg !3995

land.lhs.true315:                                 ; preds = %for.body308
  %71 = bitcast i32* %70 to %struct.rtx_def*, !dbg !3995
  %call318 = call fastcc i32 @rhs_regno(%struct.rtx_def* %71) #7, !dbg !3995
  %72 = and i32 %call318, -8, !dbg !3995
  %cmp321 = icmp eq i32 %72, 8, !dbg !3995
  br i1 %cmp321, label %if.then323, label %for.inc336, !dbg !3996

if.then323:                                       ; preds = %land.lhs.true315
  %73 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx310, align 8, !dbg !3997
  %call326 = call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %73) #7, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %call326, metadata !3788, metadata !DIExpression()), !dbg !3999
  %cmp327 = icmp sgt i32 %call326, -1, !dbg !4000
  br i1 %cmp327, label %cond.end331, label %cond.true329, !dbg !4000

cond.true329:                                     ; preds = %if.then323
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4000
  br label %cond.end331, !dbg !4000

cond.end331:                                      ; preds = %if.then323, %cond.true329
  %arrayidx334 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv27, !dbg !4001
  %74 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx334, align 8, !dbg !4001
  call fastcc void @replace_reg(%struct.rtx_def** %74, i32 %call326) #7, !dbg !4002
  br label %for.inc336, !dbg !4003

for.inc336:                                       ; preds = %for.body308, %land.lhs.true315, %cond.end331
  %indvars.iv.next28 = add nsw i64 %indvars.iv27, 1, !dbg !4004
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  %.pre4 = load i32, i32* %n_outputs, align 4, !dbg !3989
  br label %for.cond304, !dbg !4005, !llvm.loop !4006

for.cond339:                                      ; preds = %for.cond339.preheader, %for.inc361
  %indvars.iv25 = phi i64 [ 0, %for.cond339.preheader ], [ %indvars.iv.next26, %for.inc361 ], !dbg !4008
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !3761, metadata !DIExpression()), !dbg !3821
  %cmp340 = icmp slt i64 %indvars.iv25, %68, !dbg !4009
  br i1 %cmp340, label %for.body342, label %for.cond364.preheader, !dbg !3994

for.cond364.preheader:                            ; preds = %for.cond339
  %75 = sext i32 %n_clobbers.3 to i64, !dbg !4010
  br label %for.cond364, !dbg !4010

for.body342:                                      ; preds = %for.cond339
  %arrayidx344 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv25, !dbg !4011
  %76 = load i32, i32* %arrayidx344, align 4, !dbg !4011
  %cmp345 = icmp eq i32 %76, 1, !dbg !4012
  br i1 %cmp345, label %if.then347, label %for.inc361, !dbg !4013

if.then347:                                       ; preds = %for.body342
  %arrayidx350 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %indvars.iv25, !dbg !4014
  %77 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx350, align 8, !dbg !4014
  %call351 = call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %77) #7, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %call351, metadata !3793, metadata !DIExpression()), !dbg !4016
  %cmp352 = icmp sgt i32 %call351, -1, !dbg !4017
  br i1 %cmp352, label %cond.end356, label %cond.true354, !dbg !4017

cond.true354:                                     ; preds = %if.then347
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4017
  br label %cond.end356, !dbg !4017

cond.end356:                                      ; preds = %if.then347, %cond.true354
  %arrayidx359 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %19, i64 %indvars.iv25, !dbg !4018
  %78 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx359, align 8, !dbg !4018
  call fastcc void @replace_reg(%struct.rtx_def** %78, i32 %call351) #7, !dbg !4019
  br label %for.inc361, !dbg !4020

for.inc361:                                       ; preds = %for.body342, %cond.end356
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !4021
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  br label %for.cond339, !dbg !4022, !llvm.loop !4023

for.cond364:                                      ; preds = %for.cond364.preheader, %for.inc382
  %indvars.iv23 = phi i64 [ 0, %for.cond364.preheader ], [ %indvars.iv.next24, %for.inc382 ], !dbg !4025
  call void @llvm.dbg.value(metadata i64 %indvars.iv23, metadata !3761, metadata !DIExpression()), !dbg !3821
  %cmp365 = icmp slt i64 %indvars.iv23, %75, !dbg !4026
  br i1 %cmp365, label %for.body367, label %for.end384, !dbg !4010

for.body367:                                      ; preds = %for.cond364
  %arrayidx370 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv23, !dbg !4027
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx370, align 8, !dbg !4027
  %call371 = call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %79) #7, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %call371, metadata !3798, metadata !DIExpression()), !dbg !4029
  %cmp372 = icmp sgt i32 %call371, -1, !dbg !4030
  br i1 %cmp372, label %if.then374, label %for.inc382, !dbg !4032

if.then374:                                       ; preds = %for.body367
  %sub375 = add nsw i32 %call371, -8, !dbg !4033
  %idxprom376 = sext i32 %sub375 to i64, !dbg !4033
  %arrayidx378 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom376, i64 39, !dbg !4033
  %80 = bitcast %struct.rtx_def** %arrayidx378 to i64*, !dbg !4033
  %81 = load i64, i64* %80, align 8, !dbg !4033
  %arrayidx380 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %clobber_loc.0, i64 %indvars.iv23, !dbg !4035
  %82 = bitcast %struct.rtx_def*** %arrayidx380 to i64**, !dbg !4035
  %83 = load i64*, i64** %82, align 8, !dbg !4035
  store i64 %81, i64* %83, align 8, !dbg !4036
  br label %for.inc382, !dbg !4037

for.inc382:                                       ; preds = %for.body367, %if.then374
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !4038
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  br label %for.cond364, !dbg !4039, !llvm.loop !4040

for.end384:                                       ; preds = %for.cond364
  %84 = load i32, i32* %n_outputs, align 4, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %84, metadata !3763, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %84, metadata !3761, metadata !DIExpression()), !dbg !3821
  %top432 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4043
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4043
  %85 = sext i32 %n_clobbers.3 to i64, !dbg !4046
  %86 = sext i32 %84 to i64, !dbg !4046
  br label %for.cond385, !dbg !4046

for.cond385:                                      ; preds = %for.inc439, %for.end384
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %for.inc439 ], [ %86, %for.end384 ], !dbg !4047
  %87 = phi i32 [ %.pre5, %for.inc439 ], [ %84, %for.end384 ], !dbg !4047
  call void @llvm.dbg.value(metadata i64 %indvars.iv21, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %87, metadata !3763, metadata !DIExpression()), !dbg !3821
  %88 = load i32, i32* %n_inputs, align 4, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %88, metadata !3762, metadata !DIExpression()), !dbg !3821
  %add386 = add nsw i32 %87, %88, !dbg !4049
  %89 = sext i32 %add386 to i64, !dbg !4050
  %cmp387 = icmp slt i64 %indvars.iv21, %89, !dbg !4050
  br i1 %cmp387, label %for.body389, label %for.cond442.preheader, !dbg !4051

for.cond442.preheader:                            ; preds = %for.cond385
  br label %for.cond442, !dbg !4052

for.body389:                                      ; preds = %for.cond385
  %arrayidx391 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv21, !dbg !4053
  %90 = bitcast %struct.rtx_def** %arrayidx391 to i32**, !dbg !4053
  %91 = load i32*, i32** %90, align 8, !dbg !4053
  %bf.load392 = load i32, i32* %91, align 8, !dbg !4053
  %bf.clear393 = and i32 %bf.load392, 65535, !dbg !4053
  %cmp394 = icmp eq i32 %bf.clear393, 37, !dbg !4053
  br i1 %cmp394, label %land.lhs.true396, label %for.inc439, !dbg !4053

land.lhs.true396:                                 ; preds = %for.body389
  %92 = bitcast i32* %91 to %struct.rtx_def*, !dbg !4053
  %call399 = call fastcc i32 @rhs_regno(%struct.rtx_def* %92) #7, !dbg !4053
  %93 = and i32 %call399, -8, !dbg !4053
  %cmp402 = icmp eq i32 %93, 8, !dbg !4053
  br i1 %cmp402, label %for.cond406.preheader, label %for.inc439, !dbg !4054

for.cond406.preheader:                            ; preds = %land.lhs.true396
  br label %for.cond406, !dbg !4055

for.cond406:                                      ; preds = %for.cond406.preheader, %for.inc418
  %indvars.iv19 = phi i64 [ 0, %for.cond406.preheader ], [ %indvars.iv.next20, %for.inc418 ], !dbg !4057
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !3802, metadata !DIExpression()), !dbg !4058
  %cmp407 = icmp slt i64 %indvars.iv19, %85, !dbg !4059
  br i1 %cmp407, label %for.body409, label %for.end420, !dbg !4055

for.body409:                                      ; preds = %for.cond406
  %arrayidx411 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv19, !dbg !4061
  %94 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx411, align 8, !dbg !4061
  %95 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx391, align 8, !dbg !4063
  %call414 = call i32 @operands_match_p(%struct.rtx_def* %94, %struct.rtx_def* %95) #6, !dbg !4064
  %tobool415 = icmp eq i32 %call414, 0, !dbg !4064
  br i1 %tobool415, label %for.inc418, label %for.end420, !dbg !4065

for.inc418:                                       ; preds = %for.body409
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !4066
  call void @llvm.dbg.value(metadata i32 undef, metadata !3802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4058
  br label %for.cond406, !dbg !4067, !llvm.loop !4068

for.end420:                                       ; preds = %for.body409, %for.cond406
  %cmp407.lcssa = phi i1 [ %cmp407, %for.body409 ], [ %cmp407, %for.cond406 ], !dbg !4059
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !3802, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !3802, metadata !DIExpression()), !dbg !4058
  br i1 %cmp407.lcssa, label %if.then430, label %lor.lhs.false423, !dbg !4070

lor.lhs.false423:                                 ; preds = %for.end420
  %matches = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv21, i64 %idxprom249, i32 3, !dbg !4071
  %96 = load i32, i32* %matches, align 16, !dbg !4071
  %cmp428 = icmp sgt i32 %96, -1, !dbg !4072
  br i1 %cmp428, label %if.then430, label %for.inc439, !dbg !4073

if.then430:                                       ; preds = %lor.lhs.false423, %for.end420
  %97 = load i32, i32* %top432, align 8, !dbg !4074
  %idxprom433 = sext i32 %97 to i64, !dbg !4074
  %arrayidx434 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom433, !dbg !4074
  %98 = load i8, i8* %arrayidx434, align 1, !dbg !4074
  %sh_prom = zext i8 %98 to i64, !dbg !4074
  %shl = shl i64 1, %sh_prom, !dbg !4074
  %neg = xor i64 %shl, -1, !dbg !4074
  %99 = load i64, i64* %reg_set, align 8, !dbg !4074
  %and = and i64 %99, %neg, !dbg !4074
  store i64 %and, i64* %reg_set, align 8, !dbg !4074
  %dec = add nsw i32 %97, -1, !dbg !4075
  store i32 %dec, i32* %top432, align 8, !dbg !4075
  br label %for.inc439, !dbg !4076

for.inc439:                                       ; preds = %for.body389, %land.lhs.true396, %if.then430, %lor.lhs.false423
  %indvars.iv.next22 = add nsw i64 %indvars.iv21, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  %.pre5 = load i32, i32* %n_outputs, align 4, !dbg !4047
  br label %for.cond385, !dbg !4078, !llvm.loop !4079

for.cond442:                                      ; preds = %for.cond442.preheader, %for.inc485
  %indvars.iv17 = phi i64 [ 15, %for.cond442.preheader ], [ %indvars.iv.next18, %for.inc485 ], !dbg !4081
  %i.8 = phi i32 [ 15, %for.cond442.preheader ], [ %dec486, %for.inc485 ], !dbg !4081
  call void @llvm.dbg.value(metadata i64 %indvars.iv17, metadata !3761, metadata !DIExpression()), !dbg !3821
  %cmp443 = icmp ugt i64 %indvars.iv17, 7, !dbg !4082
  br i1 %cmp443, label %for.cond447.preheader, label %for.cond488.preheader, !dbg !4052

for.cond447.preheader:                            ; preds = %for.cond442
  br label %for.cond447, !dbg !4083

for.cond488.preheader:                            ; preds = %for.cond442
  %100 = sext i32 %n_notes.0.lcssa to i64, !dbg !4085
  br label %for.cond488, !dbg !4085

for.cond447:                                      ; preds = %for.cond447.preheader, %for.inc482
  %indvars.iv15 = phi i64 [ 0, %for.cond447.preheader ], [ %indvars.iv.next16, %for.inc482 ], !dbg !4086
  call void @llvm.dbg.value(metadata i64 %indvars.iv15, metadata !3807, metadata !DIExpression()), !dbg !4087
  %101 = load i32, i32* %n_outputs, align 4, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %101, metadata !3763, metadata !DIExpression()), !dbg !3821
  %102 = sext i32 %101 to i64, !dbg !4090
  %cmp448 = icmp slt i64 %indvars.iv15, %102, !dbg !4090
  br i1 %cmp448, label %for.body450, label %for.inc485.loopexit, !dbg !4083

for.body450:                                      ; preds = %for.cond447
  %arrayidx452 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv15, !dbg !4091
  %103 = bitcast %struct.rtx_def** %arrayidx452 to i32**, !dbg !4091
  %104 = load i32*, i32** %103, align 8, !dbg !4091
  %bf.load453 = load i32, i32* %104, align 8, !dbg !4091
  %bf.clear454 = and i32 %bf.load453, 65535, !dbg !4091
  %cmp455 = icmp eq i32 %bf.clear454, 37, !dbg !4091
  br i1 %cmp455, label %land.lhs.true457, label %for.inc482, !dbg !4091

land.lhs.true457:                                 ; preds = %for.body450
  %105 = bitcast i32* %104 to %struct.rtx_def*, !dbg !4091
  %call460 = call fastcc i32 @rhs_regno(%struct.rtx_def* %105) #7, !dbg !4091
  %106 = and i32 %call460, -8, !dbg !4091
  %cmp463 = icmp eq i32 %106, 8, !dbg !4091
  br i1 %cmp463, label %land.lhs.true465, label %for.inc482, !dbg !4093

land.lhs.true465:                                 ; preds = %land.lhs.true457
  %107 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx452, align 8, !dbg !4094
  %call468 = call fastcc i32 @rhs_regno(%struct.rtx_def* %107) #7, !dbg !4094
  %108 = zext i32 %call468 to i64, !dbg !4095
  %cmp469 = icmp eq i64 %indvars.iv17, %108, !dbg !4095
  br i1 %cmp469, label %if.then471, label %for.inc482, !dbg !4096

if.then471:                                       ; preds = %land.lhs.true465
  %conv472 = trunc i32 %i.8 to i8, !dbg !4097
  %109 = load i32, i32* %top432, align 8, !dbg !4099
  %inc475 = add nsw i32 %109, 1, !dbg !4099
  store i32 %inc475, i32* %top432, align 8, !dbg !4099
  %idxprom476 = sext i32 %inc475 to i64, !dbg !4100
  %arrayidx477 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom476, !dbg !4100
  store i8 %conv472, i8* %arrayidx477, align 1, !dbg !4101
  %shl479 = shl i64 1, %indvars.iv17, !dbg !4102
  %110 = load i64, i64* %reg_set, align 8, !dbg !4102
  %or = or i64 %110, %shl479, !dbg !4102
  store i64 %or, i64* %reg_set, align 8, !dbg !4102
  br label %for.inc485, !dbg !4103

for.inc482:                                       ; preds = %for.body450, %land.lhs.true457, %land.lhs.true465
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !4104
  call void @llvm.dbg.value(metadata i32 undef, metadata !3807, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4087
  br label %for.cond447, !dbg !4105, !llvm.loop !4106

for.inc485.loopexit:                              ; preds = %for.cond447
  br label %for.inc485, !dbg !4108

for.inc485:                                       ; preds = %for.inc485.loopexit, %if.then471
  %indvars.iv.next18 = add nsw i64 %indvars.iv17, -1, !dbg !4108
  %dec486 = add nsw i32 %i.8, -1, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %dec486, metadata !3761, metadata !DIExpression()), !dbg !3821
  br label %for.cond442, !dbg !4109, !llvm.loop !4110

for.cond488:                                      ; preds = %for.cond488.preheader, %for.inc534
  %indvars.iv13 = phi i64 [ 0, %for.cond488.preheader ], [ %indvars.iv.next14, %for.inc534 ], !dbg !4112
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %for.cond488.preheader ], [ %insn.addr.2, %for.inc534 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i64 %indvars.iv13, metadata !3761, metadata !DIExpression()), !dbg !3821
  %111 = load i32, i32* %n_outputs, align 4, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %111, metadata !3763, metadata !DIExpression()), !dbg !3821
  %112 = sext i32 %111 to i64, !dbg !4114
  %cmp489 = icmp slt i64 %indvars.iv13, %112, !dbg !4114
  br i1 %cmp489, label %for.body491, label %for.end536, !dbg !4085

for.body491:                                      ; preds = %for.cond488
  %arrayidx493 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv13, !dbg !4115
  %113 = bitcast %struct.rtx_def** %arrayidx493 to i32**, !dbg !4115
  %114 = load i32*, i32** %113, align 8, !dbg !4115
  %bf.load494 = load i32, i32* %114, align 8, !dbg !4115
  %bf.clear495 = and i32 %bf.load494, 65535, !dbg !4115
  %cmp496 = icmp eq i32 %bf.clear495, 37, !dbg !4115
  br i1 %cmp496, label %land.lhs.true498, label %for.inc534, !dbg !4115

land.lhs.true498:                                 ; preds = %for.body491
  %115 = bitcast i32* %114 to %struct.rtx_def*, !dbg !4115
  %call501 = call fastcc i32 @rhs_regno(%struct.rtx_def* %115) #7, !dbg !4115
  %116 = and i32 %call501, -8, !dbg !4115
  %cmp504 = icmp eq i32 %116, 8, !dbg !4115
  br i1 %cmp504, label %for.cond508.preheader, label %for.inc534, !dbg !4116

for.cond508.preheader:                            ; preds = %land.lhs.true498
  br label %for.cond508, !dbg !4117

for.cond508:                                      ; preds = %for.cond508.preheader, %for.inc530
  %indvars.iv11 = phi i64 [ 0, %for.cond508.preheader ], [ %indvars.iv.next12, %for.inc530 ], !dbg !4119
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !3811, metadata !DIExpression()), !dbg !4120
  %cmp509 = icmp slt i64 %indvars.iv11, %100, !dbg !4121
  br i1 %cmp509, label %for.body511, label %for.inc534.loopexit, !dbg !4117

for.body511:                                      ; preds = %for.cond508
  %117 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx493, align 8, !dbg !4123
  %call514 = call fastcc i32 @rhs_regno(%struct.rtx_def* %117) #7, !dbg !4123
  %arrayidx516 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %indvars.iv11, !dbg !4125
  %118 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx516, align 8, !dbg !4125
  %call517 = call fastcc i32 @rhs_regno(%struct.rtx_def* %118) #7, !dbg !4125
  %cmp518 = icmp eq i32 %call514, %call517, !dbg !4126
  br i1 %cmp518, label %land.lhs.true520, label %for.inc530, !dbg !4127

land.lhs.true520:                                 ; preds = %for.body511
  %arrayidx522 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv11, !dbg !4128
  %119 = load i32, i32* %arrayidx522, align 4, !dbg !4128
  %cmp523 = icmp eq i32 %119, 6, !dbg !4129
  br i1 %cmp523, label %if.then525, label %for.inc530, !dbg !4130

if.then525:                                       ; preds = %land.lhs.true520
  %120 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx493, align 8, !dbg !4131
  %call528 = call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %regstack, %struct.rtx_def* %120, i32 0) #7, !dbg !4133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call528, metadata !3748, metadata !DIExpression()), !dbg !3821
  br label %for.inc534, !dbg !4134

for.inc530:                                       ; preds = %for.body511, %land.lhs.true520
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !4135
  call void @llvm.dbg.value(metadata i32 undef, metadata !3811, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4120
  br label %for.cond508, !dbg !4136, !llvm.loop !4137

for.inc534.loopexit:                              ; preds = %for.cond508
  br label %for.inc534, !dbg !4139

for.inc534:                                       ; preds = %for.inc534.loopexit, %for.body491, %land.lhs.true498, %if.then525
  %insn.addr.2 = phi %struct.rtx_def* [ %insn.addr.0, %land.lhs.true498 ], [ %insn.addr.0, %for.body491 ], [ %call528, %if.then525 ], [ %insn.addr.0, %for.inc534.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.2, metadata !3748, metadata !DIExpression()), !dbg !3821
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !4139
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  br label %for.cond488, !dbg !4140, !llvm.loop !4141

for.end536:                                       ; preds = %for.cond488
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn.addr.0, %for.cond488 ]
  %.lcssa = phi i32 [ %111, %for.cond488 ], !dbg !4113
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0.lcssa, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3763, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !3761, metadata !DIExpression()), !dbg !3821
  %121 = sext i32 %n_notes.0.lcssa to i64, !dbg !4143
  %122 = sext i32 %.lcssa to i64, !dbg !4143
  br label %for.cond537, !dbg !4143

for.cond537:                                      ; preds = %for.inc593, %for.end536
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc593 ], [ %122, %for.end536 ], !dbg !4144
  %123 = phi i32 [ %.pre6, %for.inc593 ], [ %.lcssa, %for.end536 ], !dbg !4144
  %insn.addr.3 = phi %struct.rtx_def* [ %insn.addr.5, %for.inc593 ], [ %insn.addr.0.lcssa, %for.end536 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.3, metadata !3748, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !3761, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %123, metadata !3763, metadata !DIExpression()), !dbg !3821
  %124 = load i32, i32* %n_inputs, align 4, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %124, metadata !3762, metadata !DIExpression()), !dbg !3821
  %add538 = add nsw i32 %123, %124, !dbg !4146
  %125 = sext i32 %add538 to i64, !dbg !4147
  %cmp539 = icmp slt i64 %indvars.iv9, %125, !dbg !4147
  br i1 %cmp539, label %for.body541, label %cleanup.loopexit, !dbg !4148

for.body541:                                      ; preds = %for.cond537
  %arrayidx543 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv9, !dbg !4149
  %126 = bitcast %struct.rtx_def** %arrayidx543 to i32**, !dbg !4149
  %127 = load i32*, i32** %126, align 8, !dbg !4149
  %bf.load544 = load i32, i32* %127, align 8, !dbg !4149
  %bf.clear545 = and i32 %bf.load544, 65535, !dbg !4149
  %cmp546 = icmp eq i32 %bf.clear545, 37, !dbg !4149
  br i1 %cmp546, label %land.lhs.true548, label %for.inc593, !dbg !4149

land.lhs.true548:                                 ; preds = %for.body541
  %128 = bitcast i32* %127 to %struct.rtx_def*, !dbg !4149
  %call551 = call fastcc i32 @rhs_regno(%struct.rtx_def* %128) #7, !dbg !4149
  %129 = and i32 %call551, -8, !dbg !4149
  %cmp554 = icmp eq i32 %129, 8, !dbg !4149
  br i1 %cmp554, label %for.cond558.preheader, label %for.inc593, !dbg !4150

for.cond558.preheader:                            ; preds = %land.lhs.true548
  br label %for.cond558, !dbg !4151

for.cond558:                                      ; preds = %for.cond558.preheader, %for.inc589
  %indvars.iv = phi i64 [ 0, %for.cond558.preheader ], [ %indvars.iv.next, %for.inc589 ], !dbg !4153
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3816, metadata !DIExpression()), !dbg !4154
  %cmp559 = icmp slt i64 %indvars.iv, %121, !dbg !4155
  br i1 %cmp559, label %for.body561, label %for.inc593.loopexit, !dbg !4151

for.body561:                                      ; preds = %for.cond558
  %130 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx543, align 8, !dbg !4157
  %call564 = call fastcc i32 @rhs_regno(%struct.rtx_def* %130) #7, !dbg !4157
  %arrayidx566 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %indvars.iv, !dbg !4159
  %131 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx566, align 8, !dbg !4159
  %call567 = call fastcc i32 @rhs_regno(%struct.rtx_def* %131) #7, !dbg !4159
  %cmp568 = icmp eq i32 %call564, %call567, !dbg !4160
  br i1 %cmp568, label %land.lhs.true570, label %for.inc589, !dbg !4161

land.lhs.true570:                                 ; preds = %for.body561
  %arrayidx572 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv, !dbg !4162
  %132 = load i32, i32* %arrayidx572, align 4, !dbg !4162
  %cmp573 = icmp eq i32 %132, 1, !dbg !4163
  br i1 %cmp573, label %land.lhs.true575, label %for.inc589, !dbg !4164

land.lhs.true575:                                 ; preds = %land.lhs.true570
  %133 = load i64, i64* %reg_set, align 8, !dbg !4165
  %134 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx543, align 8, !dbg !4165
  %call579 = call fastcc i32 @rhs_regno(%struct.rtx_def* %134) #7, !dbg !4165
  %sh_prom580 = zext i32 %call579 to i64, !dbg !4165
  %shl581 = shl i64 1, %sh_prom580, !dbg !4165
  %and582 = and i64 %133, %shl581, !dbg !4165
  %tobool583 = icmp eq i64 %and582, 0, !dbg !4165
  br i1 %tobool583, label %for.inc589, label %if.then584, !dbg !4166

if.then584:                                       ; preds = %land.lhs.true575
  %135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx543, align 8, !dbg !4167
  %call587 = call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.3, %struct.stack_def* %regstack, %struct.rtx_def* %135, i32 0) #7, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call587, metadata !3748, metadata !DIExpression()), !dbg !3821
  br label %for.inc593, !dbg !4170

for.inc589:                                       ; preds = %land.lhs.true575, %for.body561, %land.lhs.true570
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4171
  call void @llvm.dbg.value(metadata i32 undef, metadata !3816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4154
  br label %for.cond558, !dbg !4172, !llvm.loop !4173

for.inc593.loopexit:                              ; preds = %for.cond558
  br label %for.inc593, !dbg !4175

for.inc593:                                       ; preds = %for.inc593.loopexit, %for.body541, %land.lhs.true548, %if.then584
  %insn.addr.5 = phi %struct.rtx_def* [ %insn.addr.3, %land.lhs.true548 ], [ %insn.addr.3, %for.body541 ], [ %call587, %if.then584 ], [ %insn.addr.3, %for.inc593.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.5, metadata !3748, metadata !DIExpression()), !dbg !3821
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1, !dbg !4175
  call void @llvm.dbg.value(metadata i32 undef, metadata !3761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3821
  %.pre6 = load i32, i32* %n_outputs, align 4, !dbg !4144
  br label %for.cond537, !dbg !4176, !llvm.loop !4177

cleanup.loopexit:                                 ; preds = %for.cond537
  br label %cleanup, !dbg !4179

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4179
  ret void, !dbg !4179
}

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat) unnamed_addr #5 !dbg !4180 {
entry:
  %src_note = alloca [3 x %struct.rtx_def*], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4184, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !4185, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !4186, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.value(metadata i8 0, metadata !4189, metadata !DIExpression()), !dbg !4258
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !4259
  %bf.load = load i32, i32* %0, align 8, !dbg !4259
  %trunc = trunc i32 %bf.load to i16, !dbg !4260
  switch i16 %trunc, label %cleanup1016 [
    i16 24, label %sw.bb
    i16 138, label %sw.bb14
    i16 25, label %sw.bb15
    i16 23, label %sw.bb97
  ], !dbg !4260

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4261
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4261
  %call = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx) #7, !dbg !4262
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !4188, metadata !DIExpression()), !dbg !4258
  %1 = bitcast %struct.rtx_def** %call to i32**, !dbg !4263
  %2 = load i32*, i32** %1, align 8, !dbg !4263
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4263
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4263
  %cmp = icmp eq i32 %bf.clear2, 37, !dbg !4263
  br i1 %cmp, label %land.lhs.true, label %cleanup1016, !dbg !4263

land.lhs.true:                                    ; preds = %sw.bb
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !4263
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !4263
  %4 = and i32 %call3, -8, !dbg !4263
  %cmp4 = icmp eq i32 %4, 8, !dbg !4263
  br i1 %cmp4, label %land.lhs.true6, label %cleanup1016, !dbg !4265

land.lhs.true6:                                   ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !4266
  %call7 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !4266
  %call8 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call7) #6, !dbg !4267
  %tobool = icmp eq %struct.rtx_def* %call8, null, !dbg !4267
  br i1 %tobool, label %cleanup1016, label %if.then, !dbg !4268

if.then:                                          ; preds = %land.lhs.true6
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4269
  %6 = load i64, i64* %reg_set, align 8, !dbg !4269
  %7 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !4269
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !4269
  %sh_prom = zext i32 %call9 to i64, !dbg !4269
  %shl = shl i64 1, %sh_prom, !dbg !4269
  %and = and i64 %6, %shl, !dbg !4269
  %tobool10 = icmp eq i64 %and, 0, !dbg !4269
  br i1 %tobool10, label %cleanup1016, label %if.then11, !dbg !4272

if.then11:                                        ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !4273
  %call12 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %8, i32 0) #7, !dbg !4274
  br label %cleanup1016, !dbg !4274

sw.bb14:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4275
  br label %sw.bb15, !dbg !4275

sw.bb15:                                          ; preds = %entry, %sw.bb14
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4276
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4276
  %call20 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx19) #7, !dbg !4277
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call20, metadata !4187, metadata !DIExpression()), !dbg !4258
  %9 = bitcast %struct.rtx_def** %call20 to i32**, !dbg !4278
  %10 = load i32*, i32** %9, align 8, !dbg !4278
  %bf.load21 = load i32, i32* %10, align 8, !dbg !4278
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !4278
  %cmp23 = icmp eq i32 %bf.clear22, 37, !dbg !4278
  br i1 %cmp23, label %land.lhs.true25, label %cleanup1016, !dbg !4278

land.lhs.true25:                                  ; preds = %sw.bb15
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !4278
  %call26 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !4278
  %12 = and i32 %call26, -8, !dbg !4278
  %cmp29 = icmp eq i32 %12, 8, !dbg !4278
  br i1 %cmp29, label %if.then31, label %cleanup1016, !dbg !4279

if.then31:                                        ; preds = %land.lhs.true25
  %13 = load %struct.rtx_def*, %struct.rtx_def** %call20, align 8, !dbg !4280
  %call32 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 1, %struct.rtx_def* %13) #6, !dbg !4281
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !4190, metadata !DIExpression()), !dbg !4282
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4283
  %14 = getelementptr inbounds %union.u, %union.u* %u33, i64 1, i32 0, i32 0, i64 0, !dbg !4283
  %rt_rtx36 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !4283
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !4283
  %cmp37 = icmp eq %struct.rtx_def* %15, %pat, !dbg !4284
  %tobool40 = icmp ne %struct.rtx_def* %call32, null, !dbg !4285
  br i1 %cmp37, label %if.else48, label %if.then39, !dbg !4286

if.then39:                                        ; preds = %if.then31
  %16 = load %struct.rtx_def*, %struct.rtx_def** %call20, align 8, !dbg !4287
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !4290

if.then41:                                        ; preds = %if.then39
  %call42 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %16, i32 1) #7, !dbg !4291
  br label %if.end44, !dbg !4291

if.else:                                          ; preds = %if.then39
  %call43 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* %16) #6, !dbg !4292
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !4190, metadata !DIExpression()), !dbg !4282
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then41
  %note.0 = phi %struct.rtx_def* [ %call32, %if.then41 ], [ %call43, %if.else ], !dbg !4293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4190, metadata !DIExpression()), !dbg !4282
  %tobool45 = icmp eq %struct.rtx_def* %note.0, null, !dbg !4294
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !4296

if.then46:                                        ; preds = %if.end44
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %note.0) #6, !dbg !4297
  br label %if.end47, !dbg !4297

if.end47:                                         ; preds = %if.end44, %if.then46
  tail call fastcc void @replace_reg(%struct.rtx_def** %call20, i32 9) #7, !dbg !4298
  br label %cleanup1016, !dbg !4299

if.else48:                                        ; preds = %if.then31
  br i1 %tobool40, label %cleanup1016, label %if.then50, !dbg !4300

if.then50:                                        ; preds = %if.else48
  %17 = load %struct.rtx_def*, %struct.rtx_def** %call20, align 8, !dbg !4301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !4193, metadata !DIExpression()), !dbg !4302
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !4303
  %bf.load51 = load i32, i32* %18, align 8, !dbg !4303
  %bf.lshr = lshr i32 %bf.load51, 16, !dbg !4303
  %bf.clear52 = and i32 %bf.lshr, 255, !dbg !4303
  %idxprom = zext i32 %bf.clear52 to i64, !dbg !4303
  %arrayidx53 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4303
  %19 = load i8, i8* %arrayidx53, align 1, !dbg !4303
  %cmp55 = icmp eq i8 %19, 10, !dbg !4303
  br i1 %cmp55, label %if.then65, label %lor.lhs.false, !dbg !4303

lor.lhs.false:                                    ; preds = %if.then50
  %cmp63 = icmp eq i8 %19, 11, !dbg !4303
  br i1 %cmp63, label %if.then65, label %if.end83, !dbg !4304

if.then65:                                        ; preds = %lor.lhs.false, %if.then50
  %call67 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !4305
  %sub68 = add i32 %call67, -7, !dbg !4305
  %idxprom69 = zext i32 %sub68 to i64, !dbg !4305
  %arrayidx71 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom69, i64 38, !dbg !4305
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx71, align 8, !dbg !4305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !4200, metadata !DIExpression()), !dbg !4306
  %call72 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %20) #7, !dbg !4307
  %cmp73 = icmp eq i32 %call72, -1, !dbg !4308
  br i1 %cmp73, label %if.then75, label %if.end83, !dbg !4309

if.then75:                                        ; preds = %if.then65
  %call76 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %20) #6, !dbg !4310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call76, metadata !4203, metadata !DIExpression()), !dbg !4311
  %call77 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call76, %struct.rtx_def* %insn) #6, !dbg !4312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !4206, metadata !DIExpression()), !dbg !4311
  %call78 = tail call fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %call77, %struct.stack_def* %regstack, %struct.rtx_def* %20) #7, !dbg !4313
  call void @llvm.dbg.value(metadata i8 %call78, metadata !4189, metadata !DIExpression()), !dbg !4258
  br label %if.end83, !dbg !4314

if.end83:                                         ; preds = %if.then65, %if.then75, %lor.lhs.false
  %control_flow_insn_deleted.1 = phi i8 [ 0, %lor.lhs.false ], [ %call78, %if.then75 ], [ 0, %if.then65 ], !dbg !4258
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.1, metadata !4189, metadata !DIExpression()), !dbg !4258
  %call84 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %17) #7, !dbg !4315
  %cmp85 = icmp eq i32 %call84, -1, !dbg !4317
  br i1 %cmp85, label %if.then87, label %cleanup1016, !dbg !4318

if.then87:                                        ; preds = %if.end83
  %call88 = tail call fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %17) #7, !dbg !4319
  %or915 = or i8 %control_flow_insn_deleted.1, %call88, !dbg !4320
  call void @llvm.dbg.value(metadata i8 %or915, metadata !4189, metadata !DIExpression()), !dbg !4258
  br label %cleanup1016, !dbg !4321

sw.bb97:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def** null, metadata !4207, metadata !DIExpression()), !dbg !4322
  %arrayidx100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4323
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !4323
  %call102 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx101) #7, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call102, metadata !4187, metadata !DIExpression()), !dbg !4258
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4325
  %rt_rtx106 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !4325
  %call107 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx106) #7, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call107, metadata !4188, metadata !DIExpression()), !dbg !4258
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !4327
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !4212, metadata !DIExpression()), !dbg !4322
  %23 = bitcast %struct.rtx_def** %call107 to i32**, !dbg !4328
  %24 = load i32*, i32** %23, align 8, !dbg !4328
  %bf.load112 = load i32, i32* %24, align 8, !dbg !4328
  %bf.clear113 = and i32 %bf.load112, 65535, !dbg !4328
  %cmp114 = icmp eq i32 %bf.clear113, 37, !dbg !4328
  br i1 %cmp114, label %land.lhs.true116, label %lor.lhs.false122, !dbg !4328

land.lhs.true116:                                 ; preds = %sw.bb97
  %25 = bitcast i32* %24 to %struct.rtx_def*, !dbg !4328
  %call117 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %25) #7, !dbg !4328
  %26 = and i32 %call117, -8, !dbg !4328
  %cmp120 = icmp eq i32 %26, 8, !dbg !4328
  br i1 %cmp120, label %if.then148, label %lor.lhs.false122, !dbg !4330

lor.lhs.false122:                                 ; preds = %land.lhs.true116, %sw.bb97
  %27 = bitcast %struct.rtx_def** %call102 to i32**, !dbg !4331
  %28 = load i32*, i32** %27, align 8, !dbg !4331
  %bf.load123 = load i32, i32* %28, align 8, !dbg !4331
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !4331
  %cmp125 = icmp eq i32 %bf.clear124, 37, !dbg !4331
  br i1 %cmp125, label %land.lhs.true127, label %if.end154, !dbg !4331

land.lhs.true127:                                 ; preds = %lor.lhs.false122
  %29 = bitcast i32* %28 to %struct.rtx_def*, !dbg !4331
  %call128 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %29) #7, !dbg !4331
  %30 = and i32 %call128, -8, !dbg !4331
  %cmp131 = icmp eq i32 %30, 8, !dbg !4331
  br i1 %cmp131, label %land.lhs.true133, label %if.end154, !dbg !4332

land.lhs.true133:                                 ; preds = %land.lhs.true127
  %31 = load i32*, i32** %23, align 8, !dbg !4333
  %bf.load134 = load i32, i32* %31, align 8, !dbg !4333
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !4333
  %cmp136 = icmp eq i32 %bf.clear135, 37, !dbg !4333
  br i1 %cmp136, label %if.then148, label %lor.lhs.false138, !dbg !4334

lor.lhs.false138:                                 ; preds = %land.lhs.true133
  %cmp141 = icmp eq i32 %bf.clear135, 43, !dbg !4335
  br i1 %cmp141, label %if.then148, label %lor.lhs.false143, !dbg !4336

lor.lhs.false143:                                 ; preds = %lor.lhs.false138
  %cmp146 = icmp eq i32 %bf.clear135, 32, !dbg !4337
  br i1 %cmp146, label %if.then148, label %if.end154, !dbg !4338

if.then148:                                       ; preds = %lor.lhs.false143, %lor.lhs.false138, %land.lhs.true133, %land.lhs.true116
  %call149 = tail call fastcc zeroext i8 @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat) #7, !dbg !4339
  call void @llvm.dbg.value(metadata i8 %call149, metadata !4189, metadata !DIExpression()), !dbg !4258
  br label %cleanup1016, !dbg !4341

if.end154:                                        ; preds = %lor.lhs.false143, %land.lhs.true127, %lor.lhs.false122
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 0, !dbg !4342
  %bf.load155 = load i32, i32* %32, align 8, !dbg !4342
  %trunc3 = trunc i32 %bf.load155 to i16, !dbg !4343
  switch i16 %trunc3, label %sw.default1008 [
    i16 48, label %sw.bb157
    i16 26, label %sw.bb158
    i16 37, label %sw.bb181
    i16 102, label %sw.bb184
    i16 112, label %sw.bb184
    i16 111, label %sw.bb184
    i16 51, label %sw.bb184
    i16 50, label %sw.bb222
    i16 55, label %sw.bb222
    i16 52, label %sw.bb222
    i16 49, label %sw.bb222
    i16 18, label %sw.bb494
    i16 47, label %sw.bb843
  ], !dbg !4343

sw.bb157:                                         ; preds = %if.end154
  tail call fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %22) #7, !dbg !4344
  br label %cleanup1016, !dbg !4345

sw.bb158:                                         ; preds = %if.end154
  %33 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4346
  %call159 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %33) #7, !dbg !4346
  %idxprom160 = zext i32 %call159 to i64, !dbg !4348
  %34 = load i32*, i32** %27, align 8, !dbg !4349
  %bf.load162 = load i32, i32* %34, align 8, !dbg !4349
  %bf.lshr163 = lshr i32 %bf.load162, 16, !dbg !4349
  %bf.clear164 = and i32 %bf.lshr163, 255, !dbg !4349
  %idxprom165 = zext i32 %bf.clear164 to i64, !dbg !4348
  %arrayidx166 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom160, i64 %idxprom165, !dbg !4348
  %35 = load i8, i8* %arrayidx166, align 1, !dbg !4348
  %conv167 = zext i8 %35 to i32, !dbg !4348
  call void @llvm.dbg.value(metadata i32 %conv167, metadata !4213, metadata !DIExpression()), !dbg !4350
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4351
  %reg_set179 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4351
  br label %for.cond, !dbg !4354

for.cond:                                         ; preds = %for.body, %sw.bb158
  %count.0 = phi i32 [ %conv167, %sw.bb158 ], [ %dec, %for.body ], !dbg !4355
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4213, metadata !DIExpression()), !dbg !4350
  %dec = add nsw i32 %count.0, -1, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %dec, metadata !4213, metadata !DIExpression()), !dbg !4350
  %cmp168 = icmp sgt i32 %count.0, 0, !dbg !4357
  br i1 %cmp168, label %for.body, label %for.end, !dbg !4358

for.body:                                         ; preds = %for.cond
  %36 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4359
  %call170 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %36) #7, !dbg !4359
  %add171 = add i32 %call170, %dec, !dbg !4360
  %conv172 = trunc i32 %add171 to i8, !dbg !4359
  %37 = load i32, i32* %top, align 8, !dbg !4361
  %inc = add nsw i32 %37, 1, !dbg !4361
  store i32 %inc, i32* %top, align 8, !dbg !4361
  %idxprom173 = sext i32 %inc to i64, !dbg !4362
  %arrayidx174 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom173, !dbg !4362
  store i8 %conv172, i8* %arrayidx174, align 1, !dbg !4363
  %38 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4364
  %call175 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %38) #7, !dbg !4364
  %add176 = add i32 %call175, %dec, !dbg !4364
  %sh_prom177 = zext i32 %add176 to i64, !dbg !4364
  %shl178 = shl i64 1, %sh_prom177, !dbg !4364
  %39 = load i64, i64* %reg_set179, align 8, !dbg !4364
  %or180 = or i64 %39, %shl178, !dbg !4364
  store i64 %or180, i64* %reg_set179, align 8, !dbg !4364
  br label %for.cond, !dbg !4365, !llvm.loop !4366

for.end:                                          ; preds = %for.cond
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4368
  br label %cleanup1016, !dbg !4369

sw.bb181:                                         ; preds = %if.end154
  %40 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4370
  %41 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 1), align 8, !dbg !4370
  %cmp182 = icmp eq %struct.rtx_def* %40, %41, !dbg !4370
  br i1 %cmp182, label %sw.bb184, label %cond.true, !dbg !4370

cond.true:                                        ; preds = %sw.bb181
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1481, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4370
  br label %sw.bb184, !dbg !4370

sw.bb184:                                         ; preds = %cond.true, %sw.bb181, %if.end154, %if.end154, %if.end154, %if.end154
  %src1.0 = phi %struct.rtx_def** [ null, %if.end154 ], [ null, %if.end154 ], [ null, %if.end154 ], [ null, %if.end154 ], [ %call107, %sw.bb181 ], [ %call107, %cond.true ], !dbg !4322
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src1.0, metadata !4207, metadata !DIExpression()), !dbg !4322
  %cmp185 = icmp eq %struct.rtx_def** %src1.0, null, !dbg !4371
  br i1 %cmp185, label %if.then187, label %if.end193, !dbg !4373

if.then187:                                       ; preds = %sw.bb184
  %arrayidx190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4374
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !4374
  %call192 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx191) #7, !dbg !4375
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call192, metadata !4207, metadata !DIExpression()), !dbg !4322
  br label %if.end193, !dbg !4376

if.end193:                                        ; preds = %if.then187, %sw.bb184
  %src1.1 = phi %struct.rtx_def** [ %call192, %if.then187 ], [ %src1.0, %sw.bb184 ], !dbg !4322
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src1.1, metadata !4207, metadata !DIExpression()), !dbg !4322
  %42 = load %struct.rtx_def*, %struct.rtx_def** %src1.1, align 8, !dbg !4377
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %42) #7, !dbg !4378
  %43 = load %struct.rtx_def*, %struct.rtx_def** %src1.1, align 8, !dbg !4379
  %call194 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %43) #7, !dbg !4379
  %call195 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call194) #6, !dbg !4380
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call195, metadata !4210, metadata !DIExpression()), !dbg !4322
  %44 = load i32*, i32** %27, align 8, !dbg !4381
  %bf.load196 = load i32, i32* %44, align 8, !dbg !4381
  %bf.clear197 = and i32 %bf.load196, 65535, !dbg !4381
  %cmp198 = icmp eq i32 %bf.clear197, 37, !dbg !4381
  br i1 %cmp198, label %land.lhs.true200, label %if.end207, !dbg !4381

land.lhs.true200:                                 ; preds = %if.end193
  %45 = bitcast i32* %44 to %struct.rtx_def*, !dbg !4381
  %call201 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %45) #7, !dbg !4381
  %46 = and i32 %call201, -8, !dbg !4381
  %cmp204 = icmp eq i32 %46, 8, !dbg !4381
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !4383

if.then206:                                       ; preds = %land.lhs.true200
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4384
  br label %if.end207, !dbg !4384

if.end207:                                        ; preds = %if.then206, %land.lhs.true200, %if.end193
  %tobool208 = icmp eq %struct.rtx_def* %call195, null, !dbg !4385
  br i1 %tobool208, label %if.end221, label %if.then209, !dbg !4387

if.then209:                                       ; preds = %if.end207
  %arrayidx212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call195, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4388
  %rt_rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**, !dbg !4388
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx213, i32 8) #7, !dbg !4390
  %top214 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4391
  %47 = load i32, i32* %top214, align 8, !dbg !4392
  %dec215 = add nsw i32 %47, -1, !dbg !4392
  store i32 %dec215, i32* %top214, align 8, !dbg !4392
  %48 = load %struct.rtx_def*, %struct.rtx_def** %src1.1, align 8, !dbg !4393
  %call216 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %48) #7, !dbg !4393
  %sh_prom217 = zext i32 %call216 to i64, !dbg !4393
  %shl218 = shl i64 1, %sh_prom217, !dbg !4393
  %neg = xor i64 %shl218, -1, !dbg !4393
  %reg_set219 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4393
  %49 = load i64, i64* %reg_set219, align 8, !dbg !4393
  %and220 = and i64 %49, %neg, !dbg !4393
  store i64 %and220, i64* %reg_set219, align 8, !dbg !4393
  br label %if.end221, !dbg !4394

if.end221:                                        ; preds = %if.end207, %if.then209
  tail call fastcc void @replace_reg(%struct.rtx_def** %src1.1, i32 8) #7, !dbg !4395
  br label %cleanup1016, !dbg !4396

sw.bb222:                                         ; preds = %if.end154, %if.end154, %if.end154, %if.end154
  %arrayidx225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4397
  %rt_rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**, !dbg !4397
  %call227 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx226) #7, !dbg !4398
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call227, metadata !4207, metadata !DIExpression()), !dbg !4322
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4399
  %rt_rtx231 = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !4399
  %call232 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx231) #7, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call232, metadata !4209, metadata !DIExpression()), !dbg !4322
  %51 = bitcast %struct.rtx_def** %call227 to i32**, !dbg !4401
  %52 = load i32*, i32** %51, align 8, !dbg !4401
  %bf.load233 = load i32, i32* %52, align 8, !dbg !4401
  %bf.clear234 = and i32 %bf.load233, 65535, !dbg !4401
  %cmp235 = icmp eq i32 %bf.clear234, 37, !dbg !4401
  br i1 %cmp235, label %land.lhs.true237, label %if.end247, !dbg !4401

land.lhs.true237:                                 ; preds = %sw.bb222
  %53 = bitcast i32* %52 to %struct.rtx_def*, !dbg !4401
  %call238 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %53) #7, !dbg !4401
  %54 = and i32 %call238, -8, !dbg !4401
  %cmp241 = icmp eq i32 %54, 8, !dbg !4401
  br i1 %cmp241, label %if.then243, label %if.end247, !dbg !4403

if.then243:                                       ; preds = %land.lhs.true237
  %55 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4404
  %call244 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %55) #7, !dbg !4404
  %call245 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call244) #6, !dbg !4405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call245, metadata !4210, metadata !DIExpression()), !dbg !4322
  br label %if.end247, !dbg !4406

if.end247:                                        ; preds = %sw.bb222, %land.lhs.true237, %if.then243
  %src1_note.0 = phi %struct.rtx_def* [ %call245, %if.then243 ], [ null, %land.lhs.true237 ], [ null, %sw.bb222 ], !dbg !4407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src1_note.0, metadata !4210, metadata !DIExpression()), !dbg !4322
  %56 = bitcast %struct.rtx_def** %call232 to i32**, !dbg !4408
  %57 = load i32*, i32** %56, align 8, !dbg !4408
  %bf.load248 = load i32, i32* %57, align 8, !dbg !4408
  %bf.clear249 = and i32 %bf.load248, 65535, !dbg !4408
  %cmp250 = icmp eq i32 %bf.clear249, 37, !dbg !4408
  br i1 %cmp250, label %land.lhs.true252, label %if.end262, !dbg !4408

land.lhs.true252:                                 ; preds = %if.end247
  %58 = bitcast i32* %57 to %struct.rtx_def*, !dbg !4408
  %call253 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %58) #7, !dbg !4408
  %59 = and i32 %call253, -8, !dbg !4408
  %cmp256 = icmp eq i32 %59, 8, !dbg !4408
  br i1 %cmp256, label %if.then258, label %if.end262, !dbg !4410

if.then258:                                       ; preds = %land.lhs.true252
  %60 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4411
  %call259 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %60) #7, !dbg !4411
  %call260 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call259) #6, !dbg !4412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call260, metadata !4211, metadata !DIExpression()), !dbg !4322
  br label %if.end262, !dbg !4413

if.end262:                                        ; preds = %if.end247, %land.lhs.true252, %if.then258
  %src2_note.0 = phi %struct.rtx_def* [ %call260, %if.then258 ], [ null, %land.lhs.true252 ], [ null, %if.end247 ], !dbg !4414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src2_note.0, metadata !4211, metadata !DIExpression()), !dbg !4322
  %61 = load i32*, i32** %51, align 8, !dbg !4415
  %bf.load263 = load i32, i32* %61, align 8, !dbg !4415
  %bf.clear264 = and i32 %bf.load263, 65535, !dbg !4415
  %cmp265 = icmp eq i32 %bf.clear264, 37, !dbg !4415
  br i1 %cmp265, label %land.lhs.true267, label %if.then284, !dbg !4415

land.lhs.true267:                                 ; preds = %if.end262
  %62 = bitcast i32* %61 to %struct.rtx_def*, !dbg !4415
  %call268 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %62) #7, !dbg !4415
  %63 = and i32 %call268, -8, !dbg !4415
  %cmp271 = icmp eq i32 %63, 8, !dbg !4415
  br i1 %cmp271, label %lor.lhs.false273, label %if.then284, !dbg !4416

lor.lhs.false273:                                 ; preds = %land.lhs.true267
  %64 = load i32*, i32** %56, align 8, !dbg !4417
  %bf.load274 = load i32, i32* %64, align 8, !dbg !4417
  %bf.clear275 = and i32 %bf.load274, 65535, !dbg !4417
  %cmp276 = icmp eq i32 %bf.clear275, 37, !dbg !4417
  br i1 %cmp276, label %land.lhs.true278, label %if.then284, !dbg !4417

land.lhs.true278:                                 ; preds = %lor.lhs.false273
  %65 = bitcast i32* %64 to %struct.rtx_def*, !dbg !4417
  %call279 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %65) #7, !dbg !4417
  %66 = and i32 %call279, -8, !dbg !4417
  %cmp282 = icmp eq i32 %66, 8, !dbg !4417
  br i1 %cmp282, label %if.else285, label %if.then284, !dbg !4418

if.then284:                                       ; preds = %land.lhs.true278, %lor.lhs.false273, %land.lhs.true267, %if.end262
  %67 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4419
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %67) #7, !dbg !4420
  br label %if.end321, !dbg !4420

if.else285:                                       ; preds = %land.lhs.true278
  %68 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4421
  %call286 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %68) #7, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %call286, metadata !4216, metadata !DIExpression()), !dbg !4423
  %69 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4424
  %call287 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %69) #7, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %call287, metadata !4219, metadata !DIExpression()), !dbg !4423
  %cmp288 = icmp eq i32 %call286, -1, !dbg !4426
  br i1 %cmp288, label %if.then290, label %if.end300, !dbg !4427

if.then290:                                       ; preds = %if.else285
  %70 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4428
  %call292 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %70) #6, !dbg !4428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call292, metadata !4220, metadata !DIExpression()), !dbg !4429
  %call294 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call292, %struct.rtx_def* %insn) #6, !dbg !4430
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call294, metadata !4223, metadata !DIExpression()), !dbg !4429
  %71 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4431
  %call295 = tail call fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %call294, %struct.stack_def* %regstack, %struct.rtx_def* %71) #7, !dbg !4432
  call void @llvm.dbg.value(metadata i8 %call295, metadata !4189, metadata !DIExpression()), !dbg !4258
  br label %if.end300, !dbg !4433

if.end300:                                        ; preds = %if.then290, %if.else285
  %control_flow_insn_deleted.6 = phi i8 [ %call295, %if.then290 ], [ 0, %if.else285 ], !dbg !4258
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.6, metadata !4189, metadata !DIExpression()), !dbg !4258
  %cmp301 = icmp eq i32 %call287, -1, !dbg !4434
  br i1 %cmp301, label %if.then303, label %if.end313, !dbg !4435

if.then303:                                       ; preds = %if.end300
  %72 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4436
  %call305 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %72) #6, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call305, metadata !4224, metadata !DIExpression()), !dbg !4437
  %call307 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call305, %struct.rtx_def* %insn) #6, !dbg !4438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call307, metadata !4227, metadata !DIExpression()), !dbg !4437
  %73 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4439
  %call308 = tail call fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %call307, %struct.stack_def* %regstack, %struct.rtx_def* %73) #7, !dbg !4440
  %or3114 = or i8 %control_flow_insn_deleted.6, %call308, !dbg !4441
  call void @llvm.dbg.value(metadata i8 %or3114, metadata !4189, metadata !DIExpression()), !dbg !4258
  br label %if.end313, !dbg !4442

if.end313:                                        ; preds = %if.then303, %if.end300
  %control_flow_insn_deleted.7 = phi i8 [ %or3114, %if.then303 ], [ %control_flow_insn_deleted.6, %if.end300 ], !dbg !4423
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.7, metadata !4189, metadata !DIExpression()), !dbg !4258
  %cmp314 = icmp ne i32 %call286, 8, !dbg !4443
  %cmp317 = icmp ne i32 %call287, 8, !dbg !4445
  %or.cond = and i1 %cmp314, %cmp317, !dbg !4446
  br i1 %or.cond, label %if.then319, label %if.end321, !dbg !4446

if.then319:                                       ; preds = %if.end313
  %74 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4447
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %74) #7, !dbg !4448
  br label %if.end321, !dbg !4448

if.end321:                                        ; preds = %if.end313, %if.then319, %if.then284
  %control_flow_insn_deleted.8 = phi i8 [ 0, %if.then284 ], [ %control_flow_insn_deleted.7, %if.then319 ], [ %control_flow_insn_deleted.7, %if.end313 ], !dbg !4258
  call void @llvm.dbg.value(metadata i8 %control_flow_insn_deleted.8, metadata !4189, metadata !DIExpression()), !dbg !4258
  %75 = load i32*, i32** %51, align 8, !dbg !4449
  %bf.load322 = load i32, i32* %75, align 8, !dbg !4449
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !4449
  %cmp324 = icmp eq i32 %bf.clear323, 37, !dbg !4449
  br i1 %cmp324, label %land.lhs.true326, label %if.end334, !dbg !4449

land.lhs.true326:                                 ; preds = %if.end321
  %76 = bitcast i32* %75 to %struct.rtx_def*, !dbg !4449
  %call327 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %76) #7, !dbg !4449
  %77 = and i32 %call327, -8, !dbg !4449
  %cmp330 = icmp eq i32 %77, 8, !dbg !4449
  br i1 %cmp330, label %if.then332, label %if.end334, !dbg !4451

if.then332:                                       ; preds = %land.lhs.true326
  %78 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4452
  %call333 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %78) #7, !dbg !4453
  tail call fastcc void @replace_reg(%struct.rtx_def** %call227, i32 %call333) #7, !dbg !4454
  br label %if.end334, !dbg !4454

if.end334:                                        ; preds = %if.then332, %land.lhs.true326, %if.end321
  %79 = load i32*, i32** %56, align 8, !dbg !4455
  %bf.load335 = load i32, i32* %79, align 8, !dbg !4455
  %bf.clear336 = and i32 %bf.load335, 65535, !dbg !4455
  %cmp337 = icmp eq i32 %bf.clear336, 37, !dbg !4455
  br i1 %cmp337, label %land.lhs.true339, label %if.end347, !dbg !4455

land.lhs.true339:                                 ; preds = %if.end334
  %80 = bitcast i32* %79 to %struct.rtx_def*, !dbg !4455
  %call340 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %80) #7, !dbg !4455
  %81 = and i32 %call340, -8, !dbg !4455
  %cmp343 = icmp eq i32 %81, 8, !dbg !4455
  br i1 %cmp343, label %if.then345, label %if.end347, !dbg !4457

if.then345:                                       ; preds = %land.lhs.true339
  %82 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4458
  %call346 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %82) #7, !dbg !4459
  tail call fastcc void @replace_reg(%struct.rtx_def** %call232, i32 %call346) #7, !dbg !4460
  br label %if.end347, !dbg !4460

if.end347:                                        ; preds = %if.then345, %land.lhs.true339, %if.end334
  %tobool348 = icmp eq %struct.rtx_def* %src1_note.0, null, !dbg !4461
  br i1 %tobool348, label %if.else403, label %if.then349, !dbg !4462

if.then349:                                       ; preds = %if.end347
  %arrayidx352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src1_note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4463
  %rt_rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**, !dbg !4463
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx353, align 8, !dbg !4463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !4228, metadata !DIExpression()), !dbg !4464
  %call354 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %83) #7, !dbg !4465
  %top356 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4466
  %84 = load i32, i32* %top356, align 8, !dbg !4466
  %idxprom357 = sext i32 %84 to i64, !dbg !4467
  %arrayidx358 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom357, !dbg !4467
  %85 = load i8, i8* %arrayidx358, align 1, !dbg !4467
  %conv359 = zext i8 %85 to i32, !dbg !4467
  %cmp360 = icmp eq i32 %call354, %conv359, !dbg !4468
  br i1 %cmp360, label %if.then362, label %if.else369, !dbg !4469

if.then362:                                       ; preds = %if.then349
  %86 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4470
  %call363 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %86) #7, !dbg !4470
  %sh_prom364 = zext i32 %call363 to i64, !dbg !4470
  %shl365 = shl i64 1, %sh_prom364, !dbg !4470
  %reg_set366 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4470
  %87 = load i64, i64* %reg_set366, align 8, !dbg !4470
  %or367 = or i64 %87, %shl365, !dbg !4470
  store i64 %or367, i64* %reg_set366, align 8, !dbg !4470
  %88 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4472
  %call368 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %88) #7, !dbg !4473
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 %call368) #7, !dbg !4474
  br label %if.end386, !dbg !4475

if.else369:                                       ; preds = %if.then349
  %call370 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %83) #7, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %call370, metadata !4231, metadata !DIExpression()), !dbg !4477
  %89 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4478
  %call371 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %89) #7, !dbg !4478
  %sh_prom372 = zext i32 %call371 to i64, !dbg !4478
  %shl373 = shl i64 1, %sh_prom372, !dbg !4478
  %reg_set374 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4478
  %90 = load i64, i64* %reg_set374, align 8, !dbg !4478
  %or375 = or i64 %90, %shl373, !dbg !4478
  store i64 %or375, i64* %reg_set374, align 8, !dbg !4478
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 %call370) #7, !dbg !4479
  %91 = load i32, i32* %top356, align 8, !dbg !4480
  %idxprom378 = sext i32 %91 to i64, !dbg !4481
  %arrayidx379 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom378, !dbg !4481
  %92 = load i8, i8* %arrayidx379, align 1, !dbg !4481
  %sub382 = add nsw i32 %call370, -8, !dbg !4482
  %sub383 = sub nsw i32 %91, %sub382, !dbg !4483
  %idxprom384 = sext i32 %sub383 to i64, !dbg !4484
  %arrayidx385 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom384, !dbg !4484
  store i8 %92, i8* %arrayidx385, align 1, !dbg !4485
  br label %if.end386

if.end386:                                        ; preds = %if.else369, %if.then362
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx353, align 8, !dbg !4486
  %call391 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %93) #7, !dbg !4486
  %sh_prom392 = zext i32 %call391 to i64, !dbg !4486
  %shl393 = shl i64 1, %sh_prom392, !dbg !4486
  %neg394 = xor i64 %shl393, -1, !dbg !4486
  %reg_set395 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4486
  %94 = load i64, i64* %reg_set395, align 8, !dbg !4486
  %and396 = and i64 %94, %neg394, !dbg !4486
  store i64 %and396, i64* %reg_set395, align 8, !dbg !4486
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx353, i32 8) #7, !dbg !4487
  %95 = load i32, i32* %top356, align 8, !dbg !4488
  %dec402 = add nsw i32 %95, -1, !dbg !4488
  store i32 %dec402, i32* %top356, align 8, !dbg !4488
  br label %if.end468, !dbg !4489

if.else403:                                       ; preds = %if.end347
  %tobool404 = icmp eq %struct.rtx_def* %src2_note.0, null, !dbg !4490
  br i1 %tobool404, label %if.else460, label %if.then405, !dbg !4491

if.then405:                                       ; preds = %if.else403
  %arrayidx408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src2_note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4492
  %rt_rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**, !dbg !4492
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx409, align 8, !dbg !4492
  call void @llvm.dbg.value(metadata %struct.rtx_def* %96, metadata !4234, metadata !DIExpression()), !dbg !4493
  %call410 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %96) #7, !dbg !4494
  %top412 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4495
  %97 = load i32, i32* %top412, align 8, !dbg !4495
  %idxprom413 = sext i32 %97 to i64, !dbg !4496
  %arrayidx414 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom413, !dbg !4496
  %98 = load i8, i8* %arrayidx414, align 1, !dbg !4496
  %conv415 = zext i8 %98 to i32, !dbg !4496
  %cmp416 = icmp eq i32 %call410, %conv415, !dbg !4497
  br i1 %cmp416, label %if.then418, label %if.else425, !dbg !4498

if.then418:                                       ; preds = %if.then405
  %99 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4499
  %call419 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %99) #7, !dbg !4499
  %sh_prom420 = zext i32 %call419 to i64, !dbg !4499
  %shl421 = shl i64 1, %sh_prom420, !dbg !4499
  %reg_set422 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4499
  %100 = load i64, i64* %reg_set422, align 8, !dbg !4499
  %or423 = or i64 %100, %shl421, !dbg !4499
  store i64 %or423, i64* %reg_set422, align 8, !dbg !4499
  %101 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4501
  %call424 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %101) #7, !dbg !4502
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 %call424) #7, !dbg !4503
  br label %if.end443, !dbg !4504

if.else425:                                       ; preds = %if.then405
  %call427 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %96) #7, !dbg !4505
  call void @llvm.dbg.value(metadata i32 %call427, metadata !4237, metadata !DIExpression()), !dbg !4506
  %102 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4507
  %call428 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %102) #7, !dbg !4507
  %sh_prom429 = zext i32 %call428 to i64, !dbg !4507
  %shl430 = shl i64 1, %sh_prom429, !dbg !4507
  %reg_set431 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4507
  %103 = load i64, i64* %reg_set431, align 8, !dbg !4507
  %or432 = or i64 %103, %shl430, !dbg !4507
  store i64 %or432, i64* %reg_set431, align 8, !dbg !4507
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 %call427) #7, !dbg !4508
  %104 = load i32, i32* %top412, align 8, !dbg !4509
  %idxprom435 = sext i32 %104 to i64, !dbg !4510
  %arrayidx436 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom435, !dbg !4510
  %105 = load i8, i8* %arrayidx436, align 1, !dbg !4510
  %sub439 = add nsw i32 %call427, -8, !dbg !4511
  %sub440 = sub nsw i32 %104, %sub439, !dbg !4512
  %idxprom441 = sext i32 %sub440 to i64, !dbg !4513
  %arrayidx442 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom441, !dbg !4513
  store i8 %105, i8* %arrayidx442, align 1, !dbg !4514
  br label %if.end443

if.end443:                                        ; preds = %if.else425, %if.then418
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx409, align 8, !dbg !4515
  %call448 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %106) #7, !dbg !4515
  %sh_prom449 = zext i32 %call448 to i64, !dbg !4515
  %shl450 = shl i64 1, %sh_prom449, !dbg !4515
  %neg451 = xor i64 %shl450, -1, !dbg !4515
  %reg_set452 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4515
  %107 = load i64, i64* %reg_set452, align 8, !dbg !4515
  %and453 = and i64 %107, %neg451, !dbg !4515
  store i64 %and453, i64* %reg_set452, align 8, !dbg !4515
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx409, i32 8) #7, !dbg !4516
  %108 = load i32, i32* %top412, align 8, !dbg !4517
  %dec459 = add nsw i32 %108, -1, !dbg !4517
  store i32 %dec459, i32* %top412, align 8, !dbg !4517
  br label %if.end468, !dbg !4518

if.else460:                                       ; preds = %if.else403
  %109 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4519
  %call461 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %109) #7, !dbg !4519
  %sh_prom462 = zext i32 %call461 to i64, !dbg !4519
  %shl463 = shl i64 1, %sh_prom462, !dbg !4519
  %reg_set464 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4519
  %110 = load i64, i64* %reg_set464, align 8, !dbg !4519
  %or465 = or i64 %110, %shl463, !dbg !4519
  store i64 %or465, i64* %reg_set464, align 8, !dbg !4519
  %111 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4521
  %call466 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %111) #7, !dbg !4522
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 %call466) #7, !dbg !4523
  br label %if.end468

if.end468:                                        ; preds = %if.end443, %if.else460, %if.end386
  %bf.load469 = load i32, i32* %32, align 8, !dbg !4524
  %bf.clear470 = and i32 %bf.load469, 65535, !dbg !4524
  %idxprom471 = zext i32 %bf.clear470 to i64, !dbg !4524
  %arrayidx472 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom471, !dbg !4524
  %112 = load i32, i32* %arrayidx472, align 4, !dbg !4524
  %cmp473 = icmp eq i32 %112, 3, !dbg !4524
  br i1 %cmp473, label %land.lhs.true475, label %cleanup1016, !dbg !4525

land.lhs.true475:                                 ; preds = %if.end468
  %113 = load i32*, i32** %51, align 8, !dbg !4526
  %bf.load476 = load i32, i32* %113, align 8, !dbg !4526
  %bf.clear477 = and i32 %bf.load476, 65535, !dbg !4526
  %cmp478 = icmp eq i32 %bf.clear477, 37, !dbg !4526
  %114 = bitcast i32* %113 to %struct.rtx_def*, !dbg !4527
  br i1 %cmp478, label %land.lhs.true480, label %cleanup1016, !dbg !4527

land.lhs.true480:                                 ; preds = %land.lhs.true475
  %115 = load i32*, i32** %56, align 8, !dbg !4528
  %bf.load481 = load i32, i32* %115, align 8, !dbg !4528
  %bf.clear482 = and i32 %bf.load481, 65535, !dbg !4528
  %cmp483 = icmp eq i32 %bf.clear482, 37, !dbg !4528
  br i1 %cmp483, label %land.lhs.true485, label %cleanup1016, !dbg !4529

land.lhs.true485:                                 ; preds = %land.lhs.true480
  %call486 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %114) #7, !dbg !4530
  %116 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4531
  %call487 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %116) #7, !dbg !4531
  %cmp488 = icmp eq i32 %call486, %call487, !dbg !4532
  br i1 %cmp488, label %cleanup1016, label %if.then490, !dbg !4533

if.then490:                                       ; preds = %land.lhs.true485
  %117 = load %struct.rtx_def*, %struct.rtx_def** %call227, align 8, !dbg !4534
  %call491 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %117) #7, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %call491, metadata !4240, metadata !DIExpression()), !dbg !4535
  %118 = load %struct.rtx_def*, %struct.rtx_def** %call232, align 8, !dbg !4536
  %call492 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %118) #7, !dbg !4536
  tail call fastcc void @replace_reg(%struct.rtx_def** %call227, i32 %call492) #7, !dbg !4537
  tail call fastcc void @replace_reg(%struct.rtx_def** %call232, i32 %call491) #7, !dbg !4538
  br label %cleanup1016, !dbg !4539

sw.bb494:                                         ; preds = %if.end154
  %119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4540
  %rt_int = bitcast %union.rtunion_def* %119 to i32*, !dbg !4540
  %120 = load i32, i32* %rt_int, align 8, !dbg !4540
  switch i32 %120, label %sw.default [
    i32 66, label %sw.bb498
    i32 74, label %sw.bb498
    i32 75, label %sw.bb498
    i32 69, label %sw.bb533
    i32 60, label %sw.bb556
    i32 61, label %sw.bb556
    i32 65, label %sw.bb556
    i32 67, label %sw.bb556
    i32 70, label %sw.bb556
    i32 71, label %sw.bb556
    i32 72, label %sw.bb556
    i32 73, label %sw.bb556
    i32 80, label %sw.bb556
    i32 84, label %sw.bb556
    i32 81, label %sw.bb583
    i32 85, label %sw.bb583
    i32 68, label %sw.bb494.sw.bb586_crit_edge
    i32 62, label %sw.bb629
    i32 63, label %sw.bb629
    i32 64, label %sw.bb629
    i32 86, label %sw.bb697
    i32 88, label %sw.bb697
    i32 90, label %sw.bb697
    i32 87, label %sw.bb749
    i32 89, label %sw.bb749
    i32 91, label %sw.bb749
    i32 95, label %sw.bb788
    i32 32, label %sw.bb803
    i32 31, label %sw.bb828
  ], !dbg !4541

sw.bb494.sw.bb586_crit_edge:                      ; preds = %sw.bb494
  %top588.phi.trans.insert = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4542
  %.pre = load i32, i32* %top588.phi.trans.insert, align 8, !dbg !4544
  br label %sw.bb586, !dbg !4541

sw.bb498:                                         ; preds = %sw.bb494, %sw.bb494, %sw.bb494
  %arrayidx501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4545
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx501 to %struct.rtvec_def**, !dbg !4545
  %121 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4545
  %arrayidx502 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %121, i64 0, i32 1, i64 0, !dbg !4545
  %call503 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx502) #7, !dbg !4546
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call503, metadata !4207, metadata !DIExpression()), !dbg !4322
  %122 = load %struct.rtx_def*, %struct.rtx_def** %call503, align 8, !dbg !4547
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %122) #7, !dbg !4548
  %123 = load %struct.rtx_def*, %struct.rtx_def** %call503, align 8, !dbg !4549
  %call504 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %123) #7, !dbg !4549
  %call505 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call504) #6, !dbg !4550
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call505, metadata !4210, metadata !DIExpression()), !dbg !4322
  %124 = load i32*, i32** %27, align 8, !dbg !4551
  %bf.load506 = load i32, i32* %124, align 8, !dbg !4551
  %bf.clear507 = and i32 %bf.load506, 65535, !dbg !4551
  %cmp508 = icmp eq i32 %bf.clear507, 37, !dbg !4551
  br i1 %cmp508, label %land.lhs.true510, label %if.end517, !dbg !4551

land.lhs.true510:                                 ; preds = %sw.bb498
  %125 = bitcast i32* %124 to %struct.rtx_def*, !dbg !4551
  %call511 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %125) #7, !dbg !4551
  %126 = and i32 %call511, -8, !dbg !4551
  %cmp514 = icmp eq i32 %126, 8, !dbg !4551
  br i1 %cmp514, label %if.then516, label %if.end517, !dbg !4553

if.then516:                                       ; preds = %land.lhs.true510
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4554
  br label %if.end517, !dbg !4554

if.end517:                                        ; preds = %if.then516, %land.lhs.true510, %sw.bb498
  %tobool518 = icmp eq %struct.rtx_def* %call505, null, !dbg !4555
  br i1 %tobool518, label %if.end532, label %if.then519, !dbg !4557

if.then519:                                       ; preds = %if.end517
  %arrayidx522 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call505, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4558
  %rt_rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**, !dbg !4558
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx523, i32 8) #7, !dbg !4560
  %top524 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4561
  %127 = load i32, i32* %top524, align 8, !dbg !4562
  %dec525 = add nsw i32 %127, -1, !dbg !4562
  store i32 %dec525, i32* %top524, align 8, !dbg !4562
  %128 = load %struct.rtx_def*, %struct.rtx_def** %call503, align 8, !dbg !4563
  %call526 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %128) #7, !dbg !4563
  %sh_prom527 = zext i32 %call526 to i64, !dbg !4563
  %shl528 = shl i64 1, %sh_prom527, !dbg !4563
  %neg529 = xor i64 %shl528, -1, !dbg !4563
  %reg_set530 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4563
  %129 = load i64, i64* %reg_set530, align 8, !dbg !4563
  %and531 = and i64 %129, %neg529, !dbg !4563
  store i64 %and531, i64* %reg_set530, align 8, !dbg !4563
  br label %if.end532, !dbg !4564

if.end532:                                        ; preds = %if.end517, %if.then519
  tail call fastcc void @replace_reg(%struct.rtx_def** %call503, i32 8) #7, !dbg !4565
  br label %cleanup1016, !dbg !4566

sw.bb533:                                         ; preds = %sw.bb494
  %arrayidx536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4567
  %rt_rtvec537 = bitcast %union.rtunion_def* %arrayidx536 to %struct.rtvec_def**, !dbg !4567
  %130 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec537, align 8, !dbg !4567
  %arrayidx539 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %130, i64 0, i32 1, i64 0, !dbg !4567
  %call540 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx539) #7, !dbg !4568
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call540, metadata !4207, metadata !DIExpression()), !dbg !4322
  %131 = load %struct.rtx_def*, %struct.rtx_def** %call540, align 8, !dbg !4569
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %131) #7, !dbg !4570
  %132 = load %struct.rtx_def*, %struct.rtx_def** %call540, align 8, !dbg !4571
  %call541 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %132) #7, !dbg !4571
  %call542 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call541) #6, !dbg !4572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call542, metadata !4210, metadata !DIExpression()), !dbg !4322
  tail call fastcc void @replace_reg(%struct.rtx_def** %call540, i32 8) #7, !dbg !4573
  %tobool543 = icmp eq %struct.rtx_def* %call542, null, !dbg !4574
  br i1 %tobool543, label %cleanup1016, label %if.then544, !dbg !4576

if.then544:                                       ; preds = %sw.bb533
  %arrayidx547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call542, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4577
  %rt_rtx548 = bitcast %union.rtunion_def* %arrayidx547 to %struct.rtx_def**, !dbg !4577
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx548, align 8, !dbg !4577
  %call549 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %133) #7, !dbg !4577
  tail call fastcc void @remove_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call549) #7, !dbg !4579
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx548, align 8, !dbg !4580
  %call554 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %134, i32 0) #7, !dbg !4581
  br label %cleanup1016, !dbg !4582

sw.bb556:                                         ; preds = %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494, %sw.bb494
  %arrayidx559 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4583
  %rt_rtvec560 = bitcast %union.rtunion_def* %arrayidx559 to %struct.rtvec_def**, !dbg !4583
  %135 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec560, align 8, !dbg !4583
  %arrayidx562 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %135, i64 0, i32 1, i64 0, !dbg !4583
  %call563 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx562) #7, !dbg !4584
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call563, metadata !4207, metadata !DIExpression()), !dbg !4322
  %136 = load %struct.rtx_def*, %struct.rtx_def** %call563, align 8, !dbg !4585
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %136) #7, !dbg !4586
  %137 = load %struct.rtx_def*, %struct.rtx_def** %call563, align 8, !dbg !4587
  %call564 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %137) #7, !dbg !4587
  %call565 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call564) #6, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call565, metadata !4210, metadata !DIExpression()), !dbg !4322
  %tobool566 = icmp eq %struct.rtx_def* %call565, null, !dbg !4589
  br i1 %tobool566, label %cond.end569, label %cond.true567, !dbg !4589

cond.true567:                                     ; preds = %sw.bb556
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4589
  br label %cond.end569, !dbg !4589

cond.end569:                                      ; preds = %sw.bb556, %cond.true567
  %138 = load i32*, i32** %27, align 8, !dbg !4590
  %bf.load571 = load i32, i32* %138, align 8, !dbg !4590
  %bf.clear572 = and i32 %bf.load571, 65535, !dbg !4590
  %cmp573 = icmp eq i32 %bf.clear572, 37, !dbg !4590
  br i1 %cmp573, label %land.lhs.true575, label %if.end582, !dbg !4590

land.lhs.true575:                                 ; preds = %cond.end569
  %139 = bitcast i32* %138 to %struct.rtx_def*, !dbg !4590
  %call576 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %139) #7, !dbg !4590
  %140 = and i32 %call576, -8, !dbg !4590
  %cmp579 = icmp eq i32 %140, 8, !dbg !4590
  br i1 %cmp579, label %if.then581, label %if.end582, !dbg !4592

if.then581:                                       ; preds = %land.lhs.true575
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4593
  br label %if.end582, !dbg !4593

if.end582:                                        ; preds = %if.then581, %land.lhs.true575, %cond.end569
  tail call fastcc void @replace_reg(%struct.rtx_def** %call563, i32 8) #7, !dbg !4594
  br label %cleanup1016, !dbg !4595

sw.bb583:                                         ; preds = %sw.bb494, %sw.bb494
  %top584 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4596
  %141 = load i32, i32* %top584, align 8, !dbg !4597
  %inc585 = add nsw i32 %141, 1, !dbg !4597
  store i32 %inc585, i32* %top584, align 8, !dbg !4597
  br label %sw.bb586, !dbg !4598

sw.bb586:                                         ; preds = %sw.bb494.sw.bb586_crit_edge, %sw.bb583
  %142 = phi i32 [ %.pre, %sw.bb494.sw.bb586_crit_edge ], [ %inc585, %sw.bb583 ], !dbg !4544
  %top588 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4544
  %sub589 = add nsw i32 %142, -1, !dbg !4599
  %idxprom590 = sext i32 %sub589 to i64, !dbg !4600
  %arrayidx591 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom590, !dbg !4600
  %143 = load i8, i8* %arrayidx591, align 1, !dbg !4600
  %idxprom594 = sext i32 %142 to i64, !dbg !4601
  %arrayidx595 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom594, !dbg !4601
  store i8 %143, i8* %arrayidx595, align 1, !dbg !4602
  %144 = load i32*, i32** %27, align 8, !dbg !4603
  %bf.load596 = load i32, i32* %144, align 8, !dbg !4603
  %bf.clear597 = and i32 %bf.load596, 65535, !dbg !4603
  %cmp598 = icmp eq i32 %bf.clear597, 37, !dbg !4603
  br i1 %cmp598, label %land.lhs.true600, label %cond.true606, !dbg !4603

land.lhs.true600:                                 ; preds = %sw.bb586
  %145 = bitcast i32* %144 to %struct.rtx_def*, !dbg !4603
  %call601 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %145) #7, !dbg !4603
  %146 = and i32 %call601, -8, !dbg !4603
  %cmp604 = icmp eq i32 %146, 8, !dbg !4603
  br i1 %cmp604, label %cond.end608, label %cond.true606, !dbg !4603

cond.true606:                                     ; preds = %land.lhs.true600, %sw.bb586
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4603
  br label %cond.end608, !dbg !4603

cond.end608:                                      ; preds = %land.lhs.true600, %cond.true606
  %147 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4604
  %call610 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %147) #7, !dbg !4604
  %conv611 = trunc i32 %call610 to i8, !dbg !4604
  %148 = load i32, i32* %top588, align 8, !dbg !4605
  %sub614 = add nsw i32 %148, -1, !dbg !4606
  %idxprom615 = sext i32 %sub614 to i64, !dbg !4607
  %arrayidx616 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom615, !dbg !4607
  store i8 %conv611, i8* %arrayidx616, align 1, !dbg !4608
  %149 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4609
  %call617 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %149) #7, !dbg !4609
  %sh_prom618 = zext i32 %call617 to i64, !dbg !4609
  %shl619 = shl i64 1, %sh_prom618, !dbg !4609
  %reg_set620 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4609
  %150 = load i64, i64* %reg_set620, align 8, !dbg !4609
  %or621 = or i64 %150, %shl619, !dbg !4609
  store i64 %or621, i64* %reg_set620, align 8, !dbg !4609
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 9) #7, !dbg !4610
  %arrayidx624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4611
  %rt_rtvec625 = bitcast %union.rtunion_def* %arrayidx624 to %struct.rtvec_def**, !dbg !4611
  %151 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec625, align 8, !dbg !4611
  %arrayidx627 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %151, i64 0, i32 1, i64 0, !dbg !4611
  %call628 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx627) #7, !dbg !4612
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call628, metadata !4207, metadata !DIExpression()), !dbg !4322
  tail call fastcc void @replace_reg(%struct.rtx_def** %call628, i32 8) #7, !dbg !4613
  br label %cleanup1016, !dbg !4614

sw.bb629:                                         ; preds = %sw.bb494, %sw.bb494, %sw.bb494
  %arrayidx632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4615
  %rt_rtvec633 = bitcast %union.rtunion_def* %arrayidx632 to %struct.rtvec_def**, !dbg !4615
  %152 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec633, align 8, !dbg !4615
  %arrayidx635 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %152, i64 0, i32 1, i64 0, !dbg !4615
  %call636 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx635) #7, !dbg !4616
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call636, metadata !4207, metadata !DIExpression()), !dbg !4322
  %153 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec633, align 8, !dbg !4617
  %arrayidx642 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %153, i64 0, i32 1, i64 1, !dbg !4617
  %call643 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx642) #7, !dbg !4618
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call643, metadata !4209, metadata !DIExpression()), !dbg !4322
  %154 = load %struct.rtx_def*, %struct.rtx_def** %call636, align 8, !dbg !4619
  %call644 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %154) #7, !dbg !4619
  %call645 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call644) #6, !dbg !4620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call645, metadata !4210, metadata !DIExpression()), !dbg !4322
  %155 = load %struct.rtx_def*, %struct.rtx_def** %call643, align 8, !dbg !4621
  %call646 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %155) #7, !dbg !4621
  %call647 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call646) #6, !dbg !4622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call647, metadata !4211, metadata !DIExpression()), !dbg !4322
  %156 = load %struct.rtx_def*, %struct.rtx_def** %call636, align 8, !dbg !4623
  %157 = load %struct.rtx_def*, %struct.rtx_def** %call643, align 8, !dbg !4624
  tail call fastcc void @swap_to_top(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %156, %struct.rtx_def* %157) #7, !dbg !4625
  tail call fastcc void @replace_reg(%struct.rtx_def** %call636, i32 8) #7, !dbg !4626
  tail call fastcc void @replace_reg(%struct.rtx_def** %call643, i32 9) #7, !dbg !4627
  %tobool648 = icmp eq %struct.rtx_def* %call645, null, !dbg !4628
  br i1 %tobool648, label %if.end654, label %if.then649, !dbg !4630

if.then649:                                       ; preds = %sw.bb629
  %arrayidx652 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call645, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4631
  %rt_rtx653 = bitcast %union.rtunion_def* %arrayidx652 to %struct.rtx_def**, !dbg !4631
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx653, i32 8) #7, !dbg !4632
  br label %if.end654, !dbg !4632

if.end654:                                        ; preds = %sw.bb629, %if.then649
  %tobool655 = icmp eq %struct.rtx_def* %call647, null, !dbg !4633
  br i1 %tobool655, label %if.end661, label %if.then656, !dbg !4635

if.then656:                                       ; preds = %if.end654
  %arrayidx659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call647, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4636
  %rt_rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**, !dbg !4636
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx660, i32 9) #7, !dbg !4637
  br label %if.end661, !dbg !4637

if.end661:                                        ; preds = %if.end654, %if.then656
  %top663 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4638
  %158 = load i32, i32* %top663, align 8, !dbg !4638
  %idxprom664 = sext i32 %158 to i64, !dbg !4638
  %arrayidx665 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom664, !dbg !4638
  %159 = load i8, i8* %arrayidx665, align 1, !dbg !4638
  %sh_prom667 = zext i8 %159 to i64, !dbg !4638
  %shl668 = shl i64 1, %sh_prom667, !dbg !4638
  %neg669 = xor i64 %shl668, -1, !dbg !4638
  %reg_set670 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4638
  %160 = load i64, i64* %reg_set670, align 8, !dbg !4638
  %and671 = and i64 %160, %neg669, !dbg !4638
  store i64 %and671, i64* %reg_set670, align 8, !dbg !4638
  %sub674 = add nsw i32 %158, -1, !dbg !4639
  %idxprom675 = sext i32 %sub674 to i64, !dbg !4639
  %arrayidx676 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom675, !dbg !4639
  %161 = load i8, i8* %arrayidx676, align 1, !dbg !4639
  %sh_prom678 = zext i8 %161 to i64, !dbg !4639
  %shl679 = shl i64 1, %sh_prom678, !dbg !4639
  %neg680 = xor i64 %shl679, -1, !dbg !4639
  %and682 = and i64 %and671, %neg680, !dbg !4639
  store i64 %and682, i64* %reg_set670, align 8, !dbg !4639
  %sub684 = add nsw i32 %158, -2, !dbg !4640
  store i32 %sub684, i32* %top663, align 8, !dbg !4640
  %162 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4641
  %call685 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %162) #7, !dbg !4641
  %conv686 = trunc i32 %call685 to i8, !dbg !4641
  %163 = load i32, i32* %top663, align 8, !dbg !4642
  %inc689 = add nsw i32 %163, 1, !dbg !4642
  store i32 %inc689, i32* %top663, align 8, !dbg !4642
  %idxprom690 = sext i32 %inc689 to i64, !dbg !4643
  %arrayidx691 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom690, !dbg !4643
  store i8 %conv686, i8* %arrayidx691, align 1, !dbg !4644
  %164 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4645
  %call692 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %164) #7, !dbg !4645
  %sh_prom693 = zext i32 %call692 to i64, !dbg !4645
  %shl694 = shl i64 1, %sh_prom693, !dbg !4645
  %165 = load i64, i64* %reg_set670, align 8, !dbg !4645
  %or696 = or i64 %165, %shl694, !dbg !4645
  store i64 %or696, i64* %reg_set670, align 8, !dbg !4645
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4646
  br label %cleanup1016, !dbg !4647

sw.bb697:                                         ; preds = %sw.bb494, %sw.bb494, %sw.bb494
  %arrayidx700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4648
  %rt_rtvec701 = bitcast %union.rtunion_def* %arrayidx700 to %struct.rtvec_def**, !dbg !4648
  %166 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec701, align 8, !dbg !4648
  %arrayidx703 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %166, i64 0, i32 1, i64 0, !dbg !4648
  %call704 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx703) #7, !dbg !4649
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call704, metadata !4207, metadata !DIExpression()), !dbg !4322
  %167 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec701, align 8, !dbg !4650
  %arrayidx710 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %167, i64 0, i32 1, i64 1, !dbg !4650
  %call711 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx710) #7, !dbg !4651
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call711, metadata !4209, metadata !DIExpression()), !dbg !4322
  %168 = load %struct.rtx_def*, %struct.rtx_def** %call704, align 8, !dbg !4652
  %call712 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %168) #7, !dbg !4652
  %call713 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call712) #6, !dbg !4653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call713, metadata !4210, metadata !DIExpression()), !dbg !4322
  %169 = load %struct.rtx_def*, %struct.rtx_def** %call711, align 8, !dbg !4654
  %call714 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %169) #7, !dbg !4654
  %call715 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call714) #6, !dbg !4655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call715, metadata !4211, metadata !DIExpression()), !dbg !4322
  %tobool716 = icmp eq %struct.rtx_def* %call713, null, !dbg !4656
  br i1 %tobool716, label %cond.end719, label %cond.true717, !dbg !4656

cond.true717:                                     ; preds = %sw.bb697
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1815, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4656
  br label %cond.end719, !dbg !4656

cond.end719:                                      ; preds = %sw.bb697, %cond.true717
  %tobool721 = icmp eq %struct.rtx_def* %call715, null, !dbg !4657
  br i1 %tobool721, label %cond.end724, label %cond.true722, !dbg !4657

cond.true722:                                     ; preds = %cond.end719
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1816, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4657
  br label %cond.end724, !dbg !4657

cond.end724:                                      ; preds = %cond.end719, %cond.true722
  %170 = load %struct.rtx_def*, %struct.rtx_def** %call704, align 8, !dbg !4658
  %171 = load %struct.rtx_def*, %struct.rtx_def** %call711, align 8, !dbg !4659
  tail call fastcc void @swap_to_top(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %170, %struct.rtx_def* %171) #7, !dbg !4660
  %172 = load i32*, i32** %27, align 8, !dbg !4661
  %bf.load726 = load i32, i32* %172, align 8, !dbg !4661
  %bf.clear727 = and i32 %bf.load726, 65535, !dbg !4661
  %cmp728 = icmp eq i32 %bf.clear727, 37, !dbg !4661
  br i1 %cmp728, label %land.lhs.true730, label %if.end748, !dbg !4661

land.lhs.true730:                                 ; preds = %cond.end724
  %173 = bitcast i32* %172 to %struct.rtx_def*, !dbg !4661
  %call731 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %173) #7, !dbg !4661
  %174 = and i32 %call731, -8, !dbg !4661
  %cmp734 = icmp eq i32 %174, 8, !dbg !4661
  br i1 %cmp734, label %if.then736, label %if.end748, !dbg !4663

if.then736:                                       ; preds = %land.lhs.true730
  %175 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4664
  %call737 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %175) #7, !dbg !4664
  %conv738 = trunc i32 %call737 to i8, !dbg !4664
  %top740 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4666
  %176 = load i32, i32* %top740, align 8, !dbg !4666
  %idxprom741 = sext i32 %176 to i64, !dbg !4667
  %arrayidx742 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom741, !dbg !4667
  store i8 %conv738, i8* %arrayidx742, align 1, !dbg !4668
  %177 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4669
  %call743 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %177) #7, !dbg !4669
  %sh_prom744 = zext i32 %call743 to i64, !dbg !4669
  %shl745 = shl i64 1, %sh_prom744, !dbg !4669
  %reg_set746 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4669
  %178 = load i64, i64* %reg_set746, align 8, !dbg !4669
  %or747 = or i64 %178, %shl745, !dbg !4669
  store i64 %or747, i64* %reg_set746, align 8, !dbg !4669
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4670
  br label %if.end748, !dbg !4671

if.end748:                                        ; preds = %if.then736, %land.lhs.true730, %cond.end724
  tail call fastcc void @replace_reg(%struct.rtx_def** %call704, i32 8) #7, !dbg !4672
  tail call fastcc void @replace_reg(%struct.rtx_def** %call711, i32 9) #7, !dbg !4673
  br label %cleanup1016, !dbg !4674

sw.bb749:                                         ; preds = %sw.bb494, %sw.bb494, %sw.bb494
  %arrayidx752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4675
  %rt_rtvec753 = bitcast %union.rtunion_def* %arrayidx752 to %struct.rtvec_def**, !dbg !4675
  %179 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec753, align 8, !dbg !4675
  %arrayidx755 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %179, i64 0, i32 1, i64 0, !dbg !4675
  %call756 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx755) #7, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call756, metadata !4207, metadata !DIExpression()), !dbg !4322
  %180 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec753, align 8, !dbg !4677
  %arrayidx762 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %180, i64 0, i32 1, i64 1, !dbg !4677
  %call763 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx762) #7, !dbg !4678
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call763, metadata !4209, metadata !DIExpression()), !dbg !4322
  %181 = load i32*, i32** %27, align 8, !dbg !4679
  %bf.load764 = load i32, i32* %181, align 8, !dbg !4679
  %bf.clear765 = and i32 %bf.load764, 65535, !dbg !4679
  %cmp766 = icmp eq i32 %bf.clear765, 37, !dbg !4679
  br i1 %cmp766, label %land.lhs.true768, label %if.end787, !dbg !4679

land.lhs.true768:                                 ; preds = %sw.bb749
  %182 = bitcast i32* %181 to %struct.rtx_def*, !dbg !4679
  %call769 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %182) #7, !dbg !4679
  %183 = and i32 %call769, -8, !dbg !4679
  %cmp772 = icmp eq i32 %183, 8, !dbg !4679
  br i1 %cmp772, label %if.then774, label %if.end787, !dbg !4681

if.then774:                                       ; preds = %land.lhs.true768
  %184 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4682
  %call775 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %184) #7, !dbg !4682
  %conv776 = trunc i32 %call775 to i8, !dbg !4682
  %top778 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4684
  %185 = load i32, i32* %top778, align 8, !dbg !4684
  %sub779 = add nsw i32 %185, -1, !dbg !4685
  %idxprom780 = sext i32 %sub779 to i64, !dbg !4686
  %arrayidx781 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom780, !dbg !4686
  store i8 %conv776, i8* %arrayidx781, align 1, !dbg !4687
  %186 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4688
  %call782 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %186) #7, !dbg !4688
  %sh_prom783 = zext i32 %call782 to i64, !dbg !4688
  %shl784 = shl i64 1, %sh_prom783, !dbg !4688
  %reg_set785 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4688
  %187 = load i64, i64* %reg_set785, align 8, !dbg !4688
  %or786 = or i64 %187, %shl784, !dbg !4688
  store i64 %or786, i64* %reg_set785, align 8, !dbg !4688
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 9) #7, !dbg !4689
  br label %if.end787, !dbg !4690

if.end787:                                        ; preds = %if.then774, %land.lhs.true768, %sw.bb749
  tail call fastcc void @replace_reg(%struct.rtx_def** %call756, i32 8) #7, !dbg !4691
  tail call fastcc void @replace_reg(%struct.rtx_def** %call763, i32 9) #7, !dbg !4692
  br label %cleanup1016, !dbg !4693

sw.bb788:                                         ; preds = %sw.bb494
  %arrayidx791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4694
  %rt_rtvec792 = bitcast %union.rtunion_def* %arrayidx791 to %struct.rtvec_def**, !dbg !4694
  %188 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec792, align 8, !dbg !4694
  %arrayidx794 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %188, i64 0, i32 1, i64 0, !dbg !4694
  %call795 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx794) #7, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call795, metadata !4207, metadata !DIExpression()), !dbg !4322
  %189 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec792, align 8, !dbg !4696
  %arrayidx801 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %189, i64 0, i32 1, i64 1, !dbg !4696
  %call802 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %arrayidx801) #7, !dbg !4697
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call802, metadata !4209, metadata !DIExpression()), !dbg !4322
  tail call fastcc void @replace_reg(%struct.rtx_def** %call795, i32 8) #7, !dbg !4698
  tail call fastcc void @replace_reg(%struct.rtx_def** %call802, i32 9) #7, !dbg !4699
  br label %cleanup1016, !dbg !4700

sw.bb803:                                         ; preds = %sw.bb494
  %arrayidx806 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4701
  %rt_rtvec807 = bitcast %union.rtunion_def* %arrayidx806 to %struct.rtvec_def**, !dbg !4701
  %190 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec807, align 8, !dbg !4701
  %arrayidx809 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %190, i64 0, i32 1, i64 0, !dbg !4701
  %191 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx809, align 8, !dbg !4701
  call void @llvm.dbg.value(metadata %struct.rtx_def* %191, metadata !4212, metadata !DIExpression()), !dbg !4322
  %192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i64 0, i32 0, !dbg !4702
  %bf.load810 = load i32, i32* %192, align 8, !dbg !4702
  %bf.clear811 = and i32 %bf.load810, 65535, !dbg !4702
  %cmp812 = icmp eq i32 %bf.clear811, 18, !dbg !4702
  br i1 %cmp812, label %cond.end816, label %cond.true814, !dbg !4702

cond.true814:                                     ; preds = %sw.bb803
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1871, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4702
  br label %cond.end816, !dbg !4702

cond.end816:                                      ; preds = %sw.bb803, %cond.true814
  %193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4703
  %rt_int821 = bitcast %union.rtunion_def* %193 to i32*, !dbg !4703
  %194 = load i32, i32* %rt_int821, align 8, !dbg !4703
  %cmp822 = icmp eq i32 %194, 31, !dbg !4703
  br i1 %cmp822, label %sw.bb828, label %cond.true824, !dbg !4703

cond.true824:                                     ; preds = %cond.end816
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1872, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4703
  br label %sw.bb828, !dbg !4703

sw.bb828:                                         ; preds = %cond.true824, %cond.end816, %sw.bb494
  %pat_src.0 = phi %struct.rtx_def* [ %22, %sw.bb494 ], [ %191, %cond.end816 ], [ %191, %cond.true824 ], !dbg !4322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_src.0, metadata !4212, metadata !DIExpression()), !dbg !4322
  %arrayidx831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_src.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4704
  %rt_rtvec832 = bitcast %union.rtunion_def* %arrayidx831 to %struct.rtvec_def**, !dbg !4704
  %195 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec832, align 8, !dbg !4704
  %arrayidx834 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %195, i64 0, i32 1, i64 0, !dbg !4704
  %196 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx834, align 8, !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %196, metadata !4212, metadata !DIExpression()), !dbg !4322
  %197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i64 0, i32 0, !dbg !4705
  %bf.load835 = load i32, i32* %197, align 8, !dbg !4705
  %bf.clear836 = and i32 %bf.load835, 65535, !dbg !4705
  %cmp837 = icmp eq i32 %bf.clear836, 48, !dbg !4705
  br i1 %cmp837, label %cond.end841, label %cond.true839, !dbg !4705

cond.true839:                                     ; preds = %sw.bb828
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1881, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4705
  br label %cond.end841, !dbg !4705

cond.end841:                                      ; preds = %sw.bb828, %cond.true839
  tail call fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %196) #7, !dbg !4706
  br label %cleanup1016, !dbg !4707

sw.default:                                       ; preds = %sw.bb494
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1887, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4708
  br label %cleanup1016, !dbg !4709

sw.bb843:                                         ; preds = %if.end154
  %198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4710
  %rt_rtx847 = bitcast %union.rtunion_def* %198 to %struct.rtx_def**, !dbg !4710
  %call848 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx847) #7, !dbg !4711
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call848, metadata !4207, metadata !DIExpression()), !dbg !4322
  %199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4712
  %rt_rtx852 = bitcast %union.rtunion_def* %199 to %struct.rtx_def**, !dbg !4712
  %call853 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx852) #7, !dbg !4713
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call853, metadata !4209, metadata !DIExpression()), !dbg !4322
  %200 = load %struct.rtx_def*, %struct.rtx_def** %call848, align 8, !dbg !4714
  %call854 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %200) #7, !dbg !4714
  %call855 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call854) #6, !dbg !4715
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call855, metadata !4210, metadata !DIExpression()), !dbg !4322
  %201 = load %struct.rtx_def*, %struct.rtx_def** %call853, align 8, !dbg !4716
  %call856 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %201) #7, !dbg !4716
  %call857 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call856) #6, !dbg !4717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call857, metadata !4211, metadata !DIExpression()), !dbg !4322
  %202 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4718
  %call858 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %202) #7, !dbg !4719
  %cmp859 = icmp sgt i32 %call858, 7, !dbg !4720
  br i1 %cmp859, label %land.lhs.true861, label %if.end924, !dbg !4721

land.lhs.true861:                                 ; preds = %sw.bb843
  %203 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4722
  %call862 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %203) #7, !dbg !4722
  %top864 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4723
  %204 = load i32, i32* %top864, align 8, !dbg !4723
  %idxprom865 = sext i32 %204 to i64, !dbg !4724
  %arrayidx866 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom865, !dbg !4724
  %205 = load i8, i8* %arrayidx866, align 1, !dbg !4724
  %conv867 = zext i8 %205 to i32, !dbg !4724
  %cmp868 = icmp eq i32 %call862, %conv867, !dbg !4725
  br i1 %cmp868, label %if.end924, label %if.then870, !dbg !4726

if.then870:                                       ; preds = %land.lhs.true861
  %206 = load %struct.rtx_def*, %struct.rtx_def** %call848, align 8, !dbg !4727
  %call871 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %206) #7, !dbg !4727
  %207 = load i32, i32* %top864, align 8, !dbg !4728
  %idxprom874 = sext i32 %207 to i64, !dbg !4729
  %arrayidx875 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom874, !dbg !4729
  %208 = load i8, i8* %arrayidx875, align 1, !dbg !4729
  %conv876 = zext i8 %208 to i32, !dbg !4729
  %cmp877 = icmp eq i32 %call871, %conv876, !dbg !4730
  %tobool880 = icmp ne %struct.rtx_def* %call855, null, !dbg !4731
  %or.cond1 = and i1 %cmp877, %tobool880, !dbg !4732
  br i1 %or.cond1, label %if.then892, label %lor.lhs.false881, !dbg !4732

lor.lhs.false881:                                 ; preds = %if.then870
  %209 = load %struct.rtx_def*, %struct.rtx_def** %call853, align 8, !dbg !4733
  %call882 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %209) #7, !dbg !4733
  %210 = load i32, i32* %top864, align 8, !dbg !4734
  %idxprom885 = sext i32 %210 to i64, !dbg !4735
  %arrayidx886 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom885, !dbg !4735
  %211 = load i8, i8* %arrayidx886, align 1, !dbg !4735
  %conv887 = zext i8 %211 to i32, !dbg !4735
  %cmp888 = icmp eq i32 %call882, %conv887, !dbg !4736
  %tobool891 = icmp ne %struct.rtx_def* %call857, null, !dbg !4737
  %or.cond2 = and i1 %cmp888, %tobool891, !dbg !4738
  br i1 %or.cond2, label %if.then892, label %if.else922, !dbg !4738

if.then892:                                       ; preds = %lor.lhs.false881, %if.then870
  %212 = load %struct.rtx_def*, %struct.rtx_def** %call848, align 8, !dbg !4739
  %call893 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %212) #7, !dbg !4740
  %sub894 = add nsw i32 %call893, -8, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %sub894, metadata !4243, metadata !DIExpression()), !dbg !4742
  %213 = load %struct.rtx_def*, %struct.rtx_def** %call853, align 8, !dbg !4743
  %call895 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %213) #7, !dbg !4744
  %sub896 = add nsw i32 %call895, -8, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %sub896, metadata !4248, metadata !DIExpression()), !dbg !4742
  %214 = load %struct.rtx_def*, %struct.rtx_def** %call853, align 8, !dbg !4746
  %call897 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %214) #7, !dbg !4746
  %conv898 = trunc i32 %call897 to i8, !dbg !4746
  %215 = load i32, i32* %top864, align 8, !dbg !4747
  %sub901 = sub nsw i32 %215, %sub894, !dbg !4748
  %idxprom902 = sext i32 %sub901 to i64, !dbg !4749
  %arrayidx903 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom902, !dbg !4749
  store i8 %conv898, i8* %arrayidx903, align 1, !dbg !4750
  %216 = load %struct.rtx_def*, %struct.rtx_def** %call848, align 8, !dbg !4751
  %call904 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %216) #7, !dbg !4751
  %conv905 = trunc i32 %call904 to i8, !dbg !4751
  %217 = load i32, i32* %top864, align 8, !dbg !4752
  %sub908 = sub nsw i32 %217, %sub896, !dbg !4753
  %idxprom909 = sext i32 %sub908 to i64, !dbg !4754
  %arrayidx910 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom909, !dbg !4754
  store i8 %conv905, i8* %arrayidx910, align 1, !dbg !4755
  %arrayidx913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4756
  %rt_rtx914 = bitcast %union.rtunion_def* %arrayidx913 to %struct.rtx_def**, !dbg !4756
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx914, align 8, !dbg !4756
  %call915 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %218, %struct.rtx_def* %insn) #6, !dbg !4756
  %219 = bitcast %union.rtunion_def* %arrayidx913 to i32**, !dbg !4756
  %220 = load i32*, i32** %219, align 8, !dbg !4756
  %bf.load920 = load i32, i32* %220, align 8, !dbg !4756
  %bf.value = and i32 %call915, 65535, !dbg !4756
  %bf.clear921 = and i32 %bf.load920, -65536, !dbg !4756
  %bf.set = or i32 %bf.clear921, %bf.value, !dbg !4756
  store i32 %bf.set, i32* %220, align 8, !dbg !4756
  br label %if.end924, !dbg !4757

if.else922:                                       ; preds = %lor.lhs.false881
  %221 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4758
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %221) #7, !dbg !4759
  br label %if.end924

if.end924:                                        ; preds = %land.lhs.true861, %if.then892, %if.else922, %sw.bb843
  %222 = bitcast [3 x %struct.rtx_def*]* %src_note to i8*, !dbg !4760
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #8, !dbg !4760
  call void @llvm.dbg.declare(metadata [3 x %struct.rtx_def*]* %src_note, metadata !4249, metadata !DIExpression()), !dbg !4761
  %arrayidx925 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %src_note, i64 0, i64 0, !dbg !4762
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx925, align 16, !dbg !4763
  %arrayidx926 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %src_note, i64 0, i64 1, !dbg !4764
  store %struct.rtx_def* %call855, %struct.rtx_def** %arrayidx926, align 8, !dbg !4765
  %arrayidx927 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %src_note, i64 0, i64 2, !dbg !4766
  store %struct.rtx_def* %call857, %struct.rtx_def** %arrayidx927, align 16, !dbg !4767
  %223 = bitcast %struct.rtx_def** %call848 to i32**, !dbg !4768
  %224 = load i32*, i32** %223, align 8, !dbg !4768
  %bf.load928 = load i32, i32* %224, align 8, !dbg !4768
  %bf.clear929 = and i32 %bf.load928, 65535, !dbg !4768
  %cmp930 = icmp eq i32 %bf.clear929, 37, !dbg !4768
  br i1 %cmp930, label %land.lhs.true932, label %if.end940, !dbg !4768

land.lhs.true932:                                 ; preds = %if.end924
  %225 = bitcast i32* %224 to %struct.rtx_def*, !dbg !4768
  %call933 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %225) #7, !dbg !4768
  %226 = and i32 %call933, -8, !dbg !4768
  %cmp936 = icmp eq i32 %226, 8, !dbg !4768
  br i1 %cmp936, label %if.then938, label %if.end940, !dbg !4770

if.then938:                                       ; preds = %land.lhs.true932
  %227 = load %struct.rtx_def*, %struct.rtx_def** %call848, align 8, !dbg !4771
  %call939 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %227) #7, !dbg !4772
  tail call fastcc void @replace_reg(%struct.rtx_def** %call848, i32 %call939) #7, !dbg !4773
  br label %if.end940, !dbg !4773

if.end940:                                        ; preds = %if.then938, %land.lhs.true932, %if.end924
  %228 = bitcast %struct.rtx_def** %call853 to i32**, !dbg !4774
  %229 = load i32*, i32** %228, align 8, !dbg !4774
  %bf.load941 = load i32, i32* %229, align 8, !dbg !4774
  %bf.clear942 = and i32 %bf.load941, 65535, !dbg !4774
  %cmp943 = icmp eq i32 %bf.clear942, 37, !dbg !4774
  br i1 %cmp943, label %land.lhs.true945, label %if.end953, !dbg !4774

land.lhs.true945:                                 ; preds = %if.end940
  %230 = bitcast i32* %229 to %struct.rtx_def*, !dbg !4774
  %call946 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %230) #7, !dbg !4774
  %231 = and i32 %call946, -8, !dbg !4774
  %cmp949 = icmp eq i32 %231, 8, !dbg !4774
  br i1 %cmp949, label %if.then951, label %if.end953, !dbg !4776

if.then951:                                       ; preds = %land.lhs.true945
  %232 = load %struct.rtx_def*, %struct.rtx_def** %call853, align 8, !dbg !4777
  %call952 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %232) #7, !dbg !4778
  tail call fastcc void @replace_reg(%struct.rtx_def** %call853, i32 %call952) #7, !dbg !4779
  br label %if.end953, !dbg !4779

if.end953:                                        ; preds = %if.then951, %land.lhs.true945, %if.end940
  call void @llvm.dbg.value(metadata i32 1, metadata !4252, metadata !DIExpression()), !dbg !4780
  %top971 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4781
  br label %for.cond954, !dbg !4782

for.cond954:                                      ; preds = %for.inc, %if.end953
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %if.end953 ], !dbg !4783
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4252, metadata !DIExpression()), !dbg !4780
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !4784
  br i1 %exitcond, label %for.end990, label %for.body957, !dbg !4785

for.body957:                                      ; preds = %for.cond954
  %arrayidx959 = getelementptr inbounds [3 x %struct.rtx_def*], [3 x %struct.rtx_def*]* %src_note, i64 0, i64 %indvars.iv, !dbg !4786
  %233 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx959, align 8, !dbg !4786
  %tobool960 = icmp eq %struct.rtx_def* %233, null, !dbg !4786
  br i1 %tobool960, label %for.inc, label %if.then961, !dbg !4787

if.then961:                                       ; preds = %for.body957
  %arrayidx967 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4788
  %rt_rtx968 = bitcast %union.rtunion_def* %arrayidx967 to %struct.rtx_def**, !dbg !4788
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx968, align 8, !dbg !4788
  %call969 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %234) #7, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %call969, metadata !4253, metadata !DIExpression()), !dbg !4781
  %235 = load i32, i32* %top971, align 8, !dbg !4789
  %idxprom972 = sext i32 %235 to i64, !dbg !4789
  %arrayidx973 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom972, !dbg !4789
  %236 = load i8, i8* %arrayidx973, align 1, !dbg !4789
  %conv974 = zext i8 %236 to i32, !dbg !4789
  %cmp975 = icmp eq i32 %call969, %conv974, !dbg !4789
  br i1 %cmp975, label %cond.true977, label %cond.end979, !dbg !4789

cond.true977:                                     ; preds = %if.then961
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4789
  br label %cond.end979, !dbg !4789

cond.end979:                                      ; preds = %if.then961, %cond.true977
  tail call fastcc void @remove_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call969) #7, !dbg !4790
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx968, align 8, !dbg !4791
  %call987 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %237, i32 0) #7, !dbg !4792
  br label %for.inc, !dbg !4793

for.inc:                                          ; preds = %for.body957, %cond.end979
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4252, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4780
  br label %for.cond954, !dbg !4795, !llvm.loop !4796

for.end990:                                       ; preds = %for.cond954
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #8, !dbg !4798
  %238 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4799
  %call991 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %238) #7, !dbg !4801
  %cmp992 = icmp slt i32 %call991, 8, !dbg !4802
  br i1 %cmp992, label %if.then994, label %if.end1002, !dbg !4803

if.then994:                                       ; preds = %for.end990
  %239 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4804
  %call995 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %239) #7, !dbg !4804
  %conv996 = trunc i32 %call995 to i8, !dbg !4804
  %240 = load i32, i32* %top971, align 8, !dbg !4805
  %inc999 = add nsw i32 %240, 1, !dbg !4805
  store i32 %inc999, i32* %top971, align 8, !dbg !4805
  %idxprom1000 = sext i32 %inc999 to i64, !dbg !4806
  %arrayidx1001 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom1000, !dbg !4806
  store i8 %conv996, i8* %arrayidx1001, align 1, !dbg !4807
  br label %if.end1002, !dbg !4806

if.end1002:                                       ; preds = %if.then994, %for.end990
  %241 = load %struct.rtx_def*, %struct.rtx_def** %call102, align 8, !dbg !4808
  %call1003 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %241) #7, !dbg !4808
  %sh_prom1004 = zext i32 %call1003 to i64, !dbg !4808
  %shl1005 = shl i64 1, %sh_prom1004, !dbg !4808
  %reg_set1006 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4808
  %242 = load i64, i64* %reg_set1006, align 8, !dbg !4808
  %or1007 = or i64 %242, %shl1005, !dbg !4808
  store i64 %or1007, i64* %reg_set1006, align 8, !dbg !4808
  tail call fastcc void @replace_reg(%struct.rtx_def** %call102, i32 8) #7, !dbg !4809
  br label %cleanup1016, !dbg !4810

sw.default1008:                                   ; preds = %if.end154
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1973, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4811
  br label %cleanup1016, !dbg !4812

cleanup1016:                                      ; preds = %if.then, %land.lhs.true6, %land.lhs.true485, %sw.bb533, %land.lhs.true, %sw.bb, %if.end47, %if.end83, %if.then87, %if.else48, %land.lhs.true25, %sw.bb15, %sw.bb157, %for.end, %if.end221, %if.end1002, %sw.default1008, %if.then490, %land.lhs.true480, %land.lhs.true475, %if.end468, %if.then544, %sw.default, %cond.end841, %sw.bb788, %if.end787, %if.end748, %if.end661, %cond.end608, %if.end582, %if.end532, %if.then148, %entry, %if.then11
  %retval.0 = phi i8 [ 0, %if.then11 ], [ 0, %if.then ], [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true ], [ 0, %sw.bb ], [ 0, %land.lhs.true25 ], [ 0, %sw.bb15 ], [ 0, %if.end47 ], [ 0, %if.else48 ], [ %or915, %if.then87 ], [ %control_flow_insn_deleted.1, %if.end83 ], [ %call149, %if.then148 ], [ 0, %sw.default1008 ], [ 0, %if.end1002 ], [ 0, %if.end221 ], [ 0, %for.end ], [ 0, %sw.bb157 ], [ %control_flow_insn_deleted.8, %if.then490 ], [ %control_flow_insn_deleted.8, %land.lhs.true485 ], [ %control_flow_insn_deleted.8, %land.lhs.true480 ], [ %control_flow_insn_deleted.8, %land.lhs.true475 ], [ %control_flow_insn_deleted.8, %if.end468 ], [ 0, %sw.bb533 ], [ 0, %if.then544 ], [ 0, %sw.default ], [ 0, %cond.end841 ], [ 0, %sw.bb788 ], [ 0, %if.end787 ], [ 0, %if.end748 ], [ 0, %if.end661 ], [ 0, %cond.end608 ], [ 0, %if.end582 ], [ 0, %if.end532 ], [ 0, %entry ], !dbg !4258
  ret i8 %retval.0, !dbg !4813
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %reg, i32 %where) unnamed_addr #5 !dbg !4814 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4818, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !4819, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !4820, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.value(metadata i32 %where, metadata !4821, metadata !DIExpression()), !dbg !4829
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !4830
  %bf.load = load i32, i32* %0, align 8, !dbg !4830
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4830
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4830
  %idxprom = zext i32 %bf.clear to i64, !dbg !4830
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4830
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4830
  %cmp = icmp eq i8 %1, 10, !dbg !4830
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4830

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i8 %1, 11, !dbg !4830
  br i1 %cmp8, label %if.then, label %if.end29, !dbg !4831

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !4832
  %sub = add i32 %call, -8, !dbg !4832
  %idxprom10 = zext i32 %sub to i64, !dbg !4832
  %arrayidx12 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom10, i64 39, !dbg !4832
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8, !dbg !4832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4825, metadata !DIExpression()), !dbg !4833
  %call13 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !4834
  %sub14 = add i32 %call13, -7, !dbg !4834
  %idxprom15 = zext i32 %sub14 to i64, !dbg !4834
  %arrayidx17 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom15, i64 39, !dbg !4834
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8, !dbg !4834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4828, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4822, metadata !DIExpression()), !dbg !4829
  %call18 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !4835
  %cmp19 = icmp sgt i32 %call18, -1, !dbg !4837
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !4838

if.then21:                                        ; preds = %if.then
  %call22 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %2, i32 %where) #7, !dbg !4839
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !4822, metadata !DIExpression()), !dbg !4829
  br label %if.end, !dbg !4840

if.end:                                           ; preds = %if.then21, %if.then
  %pop_insn.0 = phi %struct.rtx_def* [ %call22, %if.then21 ], [ null, %if.then ], !dbg !4833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pop_insn.0, metadata !4822, metadata !DIExpression()), !dbg !4829
  %call23 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %3) #7, !dbg !4841
  %cmp24 = icmp sgt i32 %call23, -1, !dbg !4843
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !4844

if.then26:                                        ; preds = %if.end
  %call27 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %3, i32 %where) #7, !dbg !4845
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !4822, metadata !DIExpression()), !dbg !4829
  br label %if.end28, !dbg !4846

if.end28:                                         ; preds = %if.then26, %if.end
  %pop_insn.1 = phi %struct.rtx_def* [ %call27, %if.then26 ], [ %pop_insn.0, %if.end ], !dbg !4833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pop_insn.1, metadata !4822, metadata !DIExpression()), !dbg !4829
  %tobool = icmp eq %struct.rtx_def* %pop_insn.1, null, !dbg !4847
  br i1 %tobool, label %cond.true, label %cleanup, !dbg !4847

cond.true:                                        ; preds = %if.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 765, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4847
  br label %cleanup, !dbg !4847

if.end29:                                         ; preds = %lor.lhs.false
  %call30 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %reg) #7, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %call30, metadata !4824, metadata !DIExpression()), !dbg !4829
  %cmp31 = icmp sgt i32 %call30, 7, !dbg !4849
  br i1 %cmp31, label %cond.end35, label %cond.true33, !dbg !4849

cond.true33:                                      ; preds = %if.end29
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4849
  br label %cond.end35, !dbg !4849

cond.end35:                                       ; preds = %if.end29, %cond.true33
  %sub37 = add nsw i32 %call30, -8, !dbg !4850
  %idxprom38 = sext i32 %sub37 to i64, !dbg !4850
  %arrayidx40 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom38, i64 39, !dbg !4850
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !4850
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 39), align 8, !dbg !4850
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %5) #6, !dbg !4850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !4823, metadata !DIExpression()), !dbg !4829
  %cmp42 = icmp eq i32 %where, 0, !dbg !4851
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !4853

if.then44:                                        ; preds = %cond.end35
  %call45 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call41, %struct.rtx_def* %insn) #6, !dbg !4854
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !4822, metadata !DIExpression()), !dbg !4829
  br label %if.end47, !dbg !4855

if.else:                                          ; preds = %cond.end35
  %call46 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call41, %struct.rtx_def* %insn) #6, !dbg !4856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call46, metadata !4822, metadata !DIExpression()), !dbg !4829
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then44
  %pop_insn.2 = phi %struct.rtx_def* [ %call45, %if.then44 ], [ %call46, %if.else ], !dbg !4857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pop_insn.2, metadata !4822, metadata !DIExpression()), !dbg !4829
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 39), align 8, !dbg !4858
  tail call void @add_reg_note(%struct.rtx_def* %pop_insn.2, i32 1, %struct.rtx_def* %6) #6, !dbg !4859
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !4860
  %7 = load i32, i32* %top, align 8, !dbg !4860
  %idxprom49 = sext i32 %7 to i64, !dbg !4861
  %arrayidx50 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom49, !dbg !4861
  %8 = load i8, i8* %arrayidx50, align 1, !dbg !4861
  %sub54 = sub nsw i32 %7, %sub37, !dbg !4862
  %idxprom55 = sext i32 %sub54 to i64, !dbg !4863
  %arrayidx56 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom55, !dbg !4863
  store i8 %8, i8* %arrayidx56, align 1, !dbg !4864
  %9 = load i32, i32* %top, align 8, !dbg !4865
  %sub58 = add nsw i32 %9, -1, !dbg !4865
  store i32 %sub58, i32* %top, align 8, !dbg !4865
  %call59 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !4866
  %sh_prom = zext i32 %call59 to i64, !dbg !4866
  %shl = shl i64 1, %sh_prom, !dbg !4866
  %neg = xor i64 %shl, -1, !dbg !4866
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !4866
  %10 = load i64, i64* %reg_set, align 8, !dbg !4866
  %and = and i64 %10, %neg, !dbg !4866
  store i64 %and, i64* %reg_set, align 8, !dbg !4866
  br label %cleanup, !dbg !4867

cleanup:                                          ; preds = %if.end28, %cond.true, %if.end47
  %retval.0 = phi %struct.rtx_def* [ %pop_insn.2, %if.end47 ], [ %pop_insn.1, %if.end28 ], [ null, %cond.true ], !dbg !4829
  ret %struct.rtx_def* %retval.0, !dbg !4868
}

; Function Attrs: nounwind uwtable
define internal fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %old, %struct.stack_def* %new_stack, i32 %where) unnamed_addr #5 !dbg !4869 {
entry:
  %slots = alloca [8 x i8], align 1
  %pops = alloca [8 x i32], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4873, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata %struct.stack_def* %old, metadata !4874, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata %struct.stack_def* %new_stack, metadata !4875, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %where, metadata !4876, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 0, metadata !4878, metadata !DIExpression()), !dbg !4891
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !4892
  %tobool = icmp eq %struct.basic_block_def* %0, null, !dbg !4892
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4894

land.lhs.true:                                    ; preds = %entry
  %.b = load i1, i1* @starting_stack_p, align 1, !dbg !4895
  %cmp = icmp eq i32 %where, 1, !dbg !4896
  %or.cond = and i1 %.b, %cmp, !dbg !4897
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4897

if.then:                                          ; preds = %land.lhs.true
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 2, !dbg !4898
  %1 = load i8*, i8** %aux, align 8, !dbg !4898
  %2 = bitcast %struct.stack_def* %new_stack to i8*, !dbg !4900
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !4900
  store i1 false, i1* @starting_stack_p, align 1, !dbg !4901
  %3 = bitcast %struct.stack_def* %old to i8*, !dbg !4902
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %2, i64 24, i1 false), !dbg !4902
  br label %cleanup.cont, !dbg !4903

if.end:                                           ; preds = %entry, %land.lhs.true
  %cmp4 = icmp eq i32 %where, 0, !dbg !4904
  br i1 %cmp4, label %if.then6, label %if.end13, !dbg !4906

if.then6:                                         ; preds = %if.end
  br i1 %tobool, label %if.end12, label %land.lhs.true8, !dbg !4907

land.lhs.true8:                                   ; preds = %if.then6
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !4910
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4910
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4910
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !4910
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4910
  %cmp9 = icmp eq %struct.rtx_def* %5, %insn, !dbg !4911
  %spec.select = zext i1 %cmp9 to i32, !dbg !4912
  br label %if.end12, !dbg !4912

if.end12:                                         ; preds = %if.then6, %land.lhs.true8
  %update_end.0 = phi i32 [ 0, %if.then6 ], [ %spec.select, %land.lhs.true8 ], !dbg !4891
  call void @llvm.dbg.value(metadata i32 %update_end.0, metadata !4878, metadata !DIExpression()), !dbg !4891
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4913
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4913
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4873, metadata !DIExpression()), !dbg !4891
  br label %if.end13, !dbg !4914

if.end13:                                         ; preds = %if.end12, %if.end
  %update_end.1 = phi i32 [ %update_end.0, %if.end12 ], [ 0, %if.end ], !dbg !4891
  %insn.addr.0 = phi %struct.rtx_def* [ %7, %if.end12 ], [ %insn, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !4873, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %update_end.1, metadata !4878, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 8, metadata !4879, metadata !DIExpression()), !dbg !4891
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 1, !dbg !4915
  %reg_set18 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 1, !dbg !4915
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 0, !dbg !4919
  br label %for.cond, !dbg !4921

for.cond:                                         ; preds = %for.inc, %if.end13
  %indvars.iv38 = phi i64 [ %indvars.iv.next39, %for.inc ], [ 8, %if.end13 ], !dbg !4922
  %i.0 = phi i32 [ %inc35, %for.inc ], [ 8, %if.end13 ], !dbg !4922
  call void @llvm.dbg.value(metadata i64 %indvars.iv38, metadata !4879, metadata !DIExpression()), !dbg !4891
  %exitcond41 = icmp eq i64 %indvars.iv38, 16, !dbg !4923
  br i1 %exitcond41, label %for.end, label %for.body, !dbg !4924

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %reg_set, align 8, !dbg !4925
  %shl = shl i64 1, %indvars.iv38, !dbg !4925
  %and = and i64 %8, %shl, !dbg !4925
  %tobool16 = icmp eq i64 %and, 0, !dbg !4925
  br i1 %tobool16, label %for.inc, label %land.lhs.true17, !dbg !4926

land.lhs.true17:                                  ; preds = %for.body
  %9 = load i64, i64* %reg_set18, align 8, !dbg !4927
  %and21 = and i64 %9, %shl, !dbg !4927
  %tobool22 = icmp eq i64 %and21, 0, !dbg !4927
  br i1 %tobool22, label %if.then23, label %for.inc, !dbg !4928

if.then23:                                        ; preds = %land.lhs.true17
  %conv24 = trunc i32 %i.0 to i8, !dbg !4929
  %10 = load i32, i32* %top, align 8, !dbg !4930
  %inc = add nsw i32 %10, 1, !dbg !4930
  store i32 %inc, i32* %top, align 8, !dbg !4930
  %idxprom = sext i32 %inc to i64, !dbg !4931
  %arrayidx26 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom, !dbg !4931
  store i8 %conv24, i8* %arrayidx26, align 1, !dbg !4932
  %11 = load i64, i64* %reg_set18, align 8, !dbg !4933
  %or = or i64 %11, %shl, !dbg !4933
  store i64 %or, i64* %reg_set18, align 8, !dbg !4933
  %12 = add nsw i64 %indvars.iv38, -8, !dbg !4934
  %arrayidx32 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %12, i64 38, !dbg !4934
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !4934
  %14 = load %struct.rtx_def*, %struct.rtx_def** @not_a_num, align 8, !dbg !4934
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %14) #6, !dbg !4934
  %call33 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call, %struct.rtx_def* %insn.addr.0) #6, !dbg !4935
  br label %for.inc, !dbg !4936

for.inc:                                          ; preds = %land.lhs.true17, %for.body, %if.then23
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1, !dbg !4937
  %inc35 = add nuw nsw i32 %i.0, 1, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %inc35, metadata !4879, metadata !DIExpression()), !dbg !4891
  br label %for.cond, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond
  %top36 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 0, !dbg !4941
  %15 = load i32, i32* %top36, align 8, !dbg !4941
  %cmp37 = icmp sgt i32 %15, 0, !dbg !4942
  br i1 %cmp37, label %if.then39, label %for.cond171.preheader, !dbg !4943

for.cond171.preheader:                            ; preds = %for.end
  %16 = load i32, i32* %top, align 8, !dbg !4944
  %17 = sext i32 %16 to i64, !dbg !4947
  br label %for.cond171, !dbg !4947

if.then39:                                        ; preds = %for.end
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 0, !dbg !4948
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8, !dbg !4948
  call void @llvm.dbg.declare(metadata [8 x i8]* %slots, metadata !4880, metadata !DIExpression()), !dbg !4949
  %19 = bitcast [8 x i32]* %pops to i8*, !dbg !4950
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #8, !dbg !4950
  call void @llvm.dbg.declare(metadata [8 x i32]* %pops, metadata !4883, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i32 0, metadata !4877, metadata !DIExpression()), !dbg !4891
  %20 = add i32 %15, 1, !dbg !4952
  %wide.trip.count = zext i32 %20 to i64, !dbg !4954
  br label %for.cond40, !dbg !4952

for.cond40:                                       ; preds = %for.body44, %if.then39
  %indvars.iv32 = phi i64 [ %indvars.iv.next33, %for.body44 ], [ 0, %if.then39 ], !dbg !4956
  call void @llvm.dbg.value(metadata i64 %indvars.iv32, metadata !4877, metadata !DIExpression()), !dbg !4891
  %exitcond = icmp eq i64 %indvars.iv32, %wide.trip.count, !dbg !4954
  br i1 %exitcond, label %for.end60, label %for.body44, !dbg !4957

for.body44:                                       ; preds = %for.cond40
  %21 = load i64, i64* %reg_set, align 8, !dbg !4958
  %arrayidx48 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv32, !dbg !4958
  %22 = load i8, i8* %arrayidx48, align 1, !dbg !4958
  %sh_prom50 = zext i8 %22 to i64, !dbg !4958
  %shl51 = shl i64 1, %sh_prom50, !dbg !4958
  %and52 = and i64 %21, %shl51, !dbg !4958
  %tobool53 = icmp ne i64 %and52, 0, !dbg !4958
  %conv55 = zext i1 %tobool53 to i8, !dbg !4958
  %arrayidx57 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 %indvars.iv32, !dbg !4959
  store i8 %conv55, i8* %arrayidx57, align 1, !dbg !4960
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !4961
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4891
  br label %for.cond40, !dbg !4962, !llvm.loop !4963

for.end60:                                        ; preds = %for.cond40
  call void @llvm.dbg.value(metadata i32 -1, metadata !4887, metadata !DIExpression()), !dbg !4965
  %23 = load i32, i32* %top, align 8, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %23, metadata !4877, metadata !DIExpression()), !dbg !4891
  %24 = sext i32 %23 to i64, !dbg !4968
  %25 = sext i32 %15 to i64, !dbg !4968
  %26 = add nsw i64 %25, 1, !dbg !4968
  br label %for.cond62, !dbg !4968

for.cond62:                                       ; preds = %for.inc113, %for.end60
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %for.inc113 ], [ %24, %for.end60 ]
  %topsrc.0 = phi i32 [ %topsrc.3, %for.inc113 ], [ -1, %for.end60 ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.0, metadata !4887, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp64 = icmp sgt i64 %indvars.iv30, %25, !dbg !4969
  br i1 %cmp64, label %for.body66, label %for.end114, !dbg !4971

for.body66:                                       ; preds = %for.cond62
  %27 = load i64, i64* %reg_set, align 8, !dbg !4972
  %arrayidx70 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv30, !dbg !4972
  %28 = load i8, i8* %arrayidx70, align 1, !dbg !4972
  %sh_prom72 = zext i8 %28 to i64, !dbg !4972
  %shl73 = shl i64 1, %sh_prom72, !dbg !4972
  %and74 = and i64 %27, %shl73, !dbg !4972
  %tobool75 = icmp eq i64 %and74, 0, !dbg !4972
  br i1 %tobool75, label %if.else, label %for.cond77.preheader, !dbg !4974

for.cond77.preheader:                             ; preds = %for.body66
  br label %for.cond77, !dbg !4975

for.cond77:                                       ; preds = %for.cond77.preheader, %for.inc105
  %indvars.iv28 = phi i64 [ 0, %for.cond77.preheader ], [ %indvars.iv.next29, %for.inc105 ], !dbg !4978
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !4885, metadata !DIExpression()), !dbg !4965
  %exitcond50 = icmp eq i64 %indvars.iv28, %26, !dbg !4979
  br i1 %exitcond50, label %for.end107.loopexit, label %for.body81, !dbg !4975

for.body81:                                       ; preds = %for.cond77
  %arrayidx83 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 %indvars.iv28, !dbg !4981
  %29 = load i8, i8* %arrayidx83, align 1, !dbg !4981
  %tobool84 = icmp eq i8 %29, 0, !dbg !4981
  br i1 %tobool84, label %land.lhs.true85, label %for.inc105, !dbg !4983

land.lhs.true85:                                  ; preds = %for.body81
  %arrayidx88 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 %indvars.iv28, !dbg !4984
  %30 = load i8, i8* %arrayidx88, align 1, !dbg !4984
  %cmp94 = icmp eq i8 %30, %28, !dbg !4985
  br i1 %cmp94, label %if.then96, label %for.inc105, !dbg !4986

if.then96:                                        ; preds = %land.lhs.true85
  %arrayidx83.lcssa = phi i8* [ %arrayidx83, %land.lhs.true85 ], !dbg !4981
  %indvars.iv28.lcssa48 = phi i64 [ %indvars.iv28, %land.lhs.true85 ], !dbg !4978
  call void @llvm.dbg.value(metadata i64 %indvars.iv28.lcssa48, metadata !4885, metadata !DIExpression()), !dbg !4965
  %31 = trunc i64 %indvars.iv28.lcssa48 to i32, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %31, metadata !4885, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 %31, metadata !4885, metadata !DIExpression()), !dbg !4965
  %cmp98 = icmp eq i32 %15, %31, !dbg !4987
  %32 = trunc i64 %indvars.iv30 to i32, !dbg !4990
  %spec.select1 = select i1 %cmp98, i32 %32, i32 %topsrc.0, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4887, metadata !DIExpression()), !dbg !4965
  store i8 1, i8* %arrayidx83.lcssa, align 1, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %31, metadata !4886, metadata !DIExpression()), !dbg !4965
  br label %for.end107, !dbg !4992

for.inc105:                                       ; preds = %for.body81, %land.lhs.true85
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !4993
  call void @llvm.dbg.value(metadata i32 undef, metadata !4885, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4965
  br label %for.cond77, !dbg !4994, !llvm.loop !4995

for.end107.loopexit:                              ; preds = %for.cond77
  br label %for.end107, !dbg !4997

for.end107:                                       ; preds = %for.end107.loopexit, %if.then96
  %dest.0 = phi i32 [ %31, %if.then96 ], [ -1, %for.end107.loopexit ], !dbg !4998
  %topsrc.2 = phi i32 [ %spec.select1, %if.then96 ], [ %topsrc.0, %for.end107.loopexit ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.2, metadata !4887, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 %dest.0, metadata !4886, metadata !DIExpression()), !dbg !4965
  %arrayidx109 = getelementptr inbounds [8 x i32], [8 x i32]* %pops, i64 0, i64 %indvars.iv30, !dbg !4997
  store i32 %dest.0, i32* %arrayidx109, align 4, !dbg !4999
  br label %for.inc113, !dbg !5000

if.else:                                          ; preds = %for.body66
  %arrayidx111 = getelementptr inbounds [8 x i32], [8 x i32]* %pops, i64 0, i64 %indvars.iv30, !dbg !5001
  %33 = trunc i64 %indvars.iv30 to i32, !dbg !5002
  store i32 %33, i32* %arrayidx111, align 4, !dbg !5002
  br label %for.inc113

for.inc113:                                       ; preds = %for.end107, %if.else
  %topsrc.3 = phi i32 [ %topsrc.2, %for.end107 ], [ %topsrc.0, %if.else ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.3, metadata !4887, metadata !DIExpression()), !dbg !4965
  %indvars.iv.next31 = add nsw i64 %indvars.iv30, -1, !dbg !5003
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4891
  br label %for.cond62, !dbg !5004, !llvm.loop !5005

for.end114:                                       ; preds = %for.cond62
  %topsrc.0.lcssa = phi i32 [ %topsrc.0, %for.cond62 ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.0.lcssa, metadata !4887, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.0.lcssa, metadata !4887, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 %topsrc.0.lcssa, metadata !4887, metadata !DIExpression()), !dbg !4965
  %cmp115 = icmp eq i32 %topsrc.0.lcssa, -1, !dbg !5007
  br i1 %cmp115, label %if.end138, label %for.cond118.preheader, !dbg !5009

for.cond118.preheader:                            ; preds = %for.end114
  %34 = sext i32 %15 to i64, !dbg !5010
  br label %for.cond118, !dbg !5010

for.cond118:                                      ; preds = %for.cond118.preheader, %for.inc135
  %indvars.iv26 = phi i64 [ 0, %for.cond118.preheader ], [ %indvars.iv.next27, %for.inc135 ], !dbg !5012
  call void @llvm.dbg.value(metadata i64 %indvars.iv26, metadata !4877, metadata !DIExpression()), !dbg !4891
  %exitcond49 = icmp ne i64 %indvars.iv26, %34, !dbg !5013
  br i1 %exitcond49, label %for.body122, label %if.end138.loopexit, !dbg !5010

for.body122:                                      ; preds = %for.cond118
  %arrayidx124 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 %indvars.iv26, !dbg !5015
  %35 = load i8, i8* %arrayidx124, align 1, !dbg !5015
  %tobool125 = icmp eq i8 %35, 0, !dbg !5015
  br i1 %tobool125, label %if.then126, label %for.inc135, !dbg !5017

if.then126:                                       ; preds = %for.body122
  %arrayidx124.lcssa = phi i8* [ %arrayidx124, %for.body122 ], !dbg !5015
  %indvars.iv26.lcssa47 = phi i64 [ %indvars.iv26, %for.body122 ], !dbg !5012
  call void @llvm.dbg.value(metadata i64 %indvars.iv26.lcssa47, metadata !4877, metadata !DIExpression()), !dbg !4891
  %36 = trunc i64 %indvars.iv26.lcssa47 to i32, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %36, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %36, metadata !4877, metadata !DIExpression()), !dbg !4891
  %idxprom127 = sext i32 %topsrc.0.lcssa to i64, !dbg !5018
  %arrayidx128 = getelementptr inbounds [8 x i32], [8 x i32]* %pops, i64 0, i64 %idxprom127, !dbg !5018
  store i32 %36, i32* %arrayidx128, align 4, !dbg !5020
  %idxprom130 = sext i32 %15 to i64, !dbg !5021
  %arrayidx131 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 %idxprom130, !dbg !5021
  store i8 0, i8* %arrayidx131, align 1, !dbg !5022
  store i8 1, i8* %arrayidx124.lcssa, align 1, !dbg !5023
  br label %if.end138, !dbg !5024

for.inc135:                                       ; preds = %for.body122
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !5025
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4891
  br label %for.cond118, !dbg !5026, !llvm.loop !5027

if.end138.loopexit:                               ; preds = %for.cond118
  br label %if.end138, !dbg !5029

if.end138:                                        ; preds = %if.end138.loopexit, %for.end114, %if.then126
  call void @llvm.dbg.value(metadata i32 %15, metadata !4885, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i32 %23, metadata !4877, metadata !DIExpression()), !dbg !4891
  %37 = sext i32 %23 to i64, !dbg !5030
  br label %for.cond141, !dbg !5030

for.cond141:                                      ; preds = %if.end156, %if.end138
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %if.end156 ], [ %37, %if.end138 ], !dbg !5032
  %38 = phi i32 [ %.pre7, %if.end156 ], [ %15, %if.end138 ], !dbg !5032
  %next.1 = phi i32 [ %next.3, %if.end156 ], [ %15, %if.end138 ], !dbg !4965
  call void @llvm.dbg.value(metadata i64 %indvars.iv24, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %next.1, metadata !4885, metadata !DIExpression()), !dbg !4965
  %39 = sext i32 %38 to i64, !dbg !5034
  %cmp143 = icmp sgt i64 %indvars.iv24, %39, !dbg !5034
  br i1 %cmp143, label %for.body145, label %for.end168, !dbg !5035

for.body145:                                      ; preds = %for.cond141
  %arrayidx147 = getelementptr inbounds [8 x i32], [8 x i32]* %pops, i64 0, i64 %indvars.iv24, !dbg !5036
  %40 = load i32, i32* %arrayidx147, align 4, !dbg !5036
  call void @llvm.dbg.value(metadata i32 %40, metadata !4886, metadata !DIExpression()), !dbg !4965
  %cmp148 = icmp eq i32 %40, -1, !dbg !5038
  br i1 %cmp148, label %while.cond.preheader, label %for.body145.if.end156_crit_edge, !dbg !5040

for.body145.if.end156_crit_edge:                  ; preds = %for.body145
  %.pre10 = sext i32 %40 to i64, !dbg !5041
  br label %if.end156, !dbg !5040

while.cond.preheader:                             ; preds = %for.body145
  %41 = sext i32 %next.1 to i64, !dbg !5042
  br label %while.cond, !dbg !5042

while.cond:                                       ; preds = %while.cond.preheader, %while.cond
  %indvars.iv22 = phi i64 [ %41, %while.cond.preheader ], [ %indvars.iv.next23, %while.cond ], !dbg !4965
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !4885, metadata !DIExpression()), !dbg !4965
  %arrayidx152 = getelementptr inbounds [8 x i8], [8 x i8]* %slots, i64 0, i64 %indvars.iv22, !dbg !5044
  %42 = load i8, i8* %arrayidx152, align 1, !dbg !5044
  %tobool153 = icmp eq i8 %42, 0, !dbg !5042
  %indvars.iv.next23 = add i64 %indvars.iv22, -1, !dbg !5045
  call void @llvm.dbg.value(metadata i32 undef, metadata !4885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4965
  call void @llvm.dbg.value(metadata i32 undef, metadata !4885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4965
  br i1 %tobool153, label %if.end156.loopexit, label %while.cond, !dbg !5042, !llvm.loop !5046

if.end156.loopexit:                               ; preds = %while.cond
  %indvars.iv22.lcssa = phi i64 [ %indvars.iv22, %while.cond ], !dbg !4965
  %indvars.iv.next23.lcssa = phi i64 [ %indvars.iv.next23, %while.cond ], !dbg !5045
  call void @llvm.dbg.value(metadata i64 %indvars.iv22.lcssa, metadata !4885, metadata !DIExpression()), !dbg !4965
  %43 = trunc i64 %indvars.iv.next23.lcssa to i32, !dbg !4965
  call void @llvm.dbg.value(metadata i64 %indvars.iv22.lcssa, metadata !4885, metadata !DIExpression()), !dbg !4965
  br label %if.end156, !dbg !5041

if.end156:                                        ; preds = %for.body145.if.end156_crit_edge, %if.end156.loopexit
  %idxprom158.pre-phi = phi i64 [ %.pre10, %for.body145.if.end156_crit_edge ], [ %indvars.iv22.lcssa, %if.end156.loopexit ], !dbg !5041
  %next.3 = phi i32 [ %next.1, %for.body145.if.end156_crit_edge ], [ %43, %if.end156.loopexit ], !dbg !4965
  call void @llvm.dbg.value(metadata i32 %next.3, metadata !4885, metadata !DIExpression()), !dbg !4965
  %arrayidx159 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom158.pre-phi, !dbg !5041
  %44 = load i8, i8* %arrayidx159, align 1, !dbg !5041
  %conv160 = zext i8 %44 to i64, !dbg !5041
  %sub161 = add nsw i64 %conv160, -8, !dbg !5041
  %arrayidx164 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub161, i64 39, !dbg !5041
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx164, align 8, !dbg !5041
  %call165 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %45, i32 1) #7, !dbg !5048
  %indvars.iv.next25 = add i64 %indvars.iv24, -1, !dbg !5049
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4891
  %.pre7 = load i32, i32* %top36, align 8, !dbg !5032
  br label %for.cond141, !dbg !5050, !llvm.loop !5051

for.end168:                                       ; preds = %for.cond141
  %.lcssa46 = phi i32 [ %38, %for.cond141 ], !dbg !5032
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #8, !dbg !5053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8, !dbg !5053
  br label %if.end246, !dbg !5054

for.cond171:                                      ; preds = %for.cond171.preheader, %for.body175
  %indvars.iv36 = phi i64 [ 0, %for.cond171.preheader ], [ %indvars.iv.next37, %for.body175 ], !dbg !5055
  %live.0 = phi i32 [ 0, %for.cond171.preheader ], [ %spec.select2, %for.body175 ], !dbg !5056
  call void @llvm.dbg.value(metadata i32 %live.0, metadata !4888, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i64 %indvars.iv36, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp173 = icmp sgt i64 %indvars.iv36, %17, !dbg !5057
  br i1 %cmp173, label %while.cond191.preheader, label %for.body175, !dbg !4947

while.cond191.preheader:                          ; preds = %for.cond171
  %live.0.lcssa = phi i32 [ %live.0, %for.cond171 ], !dbg !5056
  call void @llvm.dbg.value(metadata i32 %live.0.lcssa, metadata !4888, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i32 %live.0.lcssa, metadata !4888, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i32 %live.0.lcssa, metadata !4888, metadata !DIExpression()), !dbg !5056
  br label %while.cond191, !dbg !5058

for.body175:                                      ; preds = %for.cond171
  %46 = load i64, i64* %reg_set, align 8, !dbg !5059
  %arrayidx179 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv36, !dbg !5059
  %47 = load i8, i8* %arrayidx179, align 1, !dbg !5059
  %sh_prom181 = zext i8 %47 to i64, !dbg !5059
  %shl182 = shl i64 1, %sh_prom181, !dbg !5059
  %and183 = and i64 %46, %shl182, !dbg !5059
  %tobool184 = icmp ne i64 %and183, 0, !dbg !5059
  %inc186 = zext i1 %tobool184 to i32, !dbg !5061
  %spec.select2 = add nuw nsw i32 %live.0, %inc186, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !4888, metadata !DIExpression()), !dbg !5056
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1, !dbg !5062
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4891
  br label %for.cond171, !dbg !5063, !llvm.loop !5064

while.cond191:                                    ; preds = %while.cond191.preheader, %if.end244
  %48 = phi i32 [ %.pre, %if.end244 ], [ %16, %while.cond191.preheader ], !dbg !5066
  %next170.0 = phi i32 [ %next170.2, %if.end244 ], [ %live.0.lcssa, %while.cond191.preheader ], !dbg !5067
  call void @llvm.dbg.value(metadata i32 %next170.0, metadata !4890, metadata !DIExpression()), !dbg !5056
  %cmp193 = icmp slt i32 %48, %live.0.lcssa, !dbg !5068
  br i1 %cmp193, label %if.end246.loopexit, label %while.body195, !dbg !5058

while.body195:                                    ; preds = %while.cond191
  %49 = load i64, i64* %reg_set, align 8, !dbg !5069
  %idxprom199 = sext i32 %48 to i64, !dbg !5069
  %arrayidx200 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom199, !dbg !5069
  %50 = load i8, i8* %arrayidx200, align 1, !dbg !5069
  %sh_prom202 = zext i8 %50 to i64, !dbg !5069
  %shl203 = shl i64 1, %sh_prom202, !dbg !5069
  %and204 = and i64 %49, %shl203, !dbg !5069
  %tobool205 = icmp eq i64 %and204, 0, !dbg !5069
  br i1 %tobool205, label %if.else233, label %while.cond207.preheader, !dbg !5071

while.cond207.preheader:                          ; preds = %while.body195
  %51 = sext i32 %next170.0 to i64, !dbg !5072
  br label %while.cond207, !dbg !5072

while.cond207:                                    ; preds = %while.cond207.preheader, %while.body221
  %indvars.iv34 = phi i64 [ %51, %while.cond207.preheader ], [ %indvars.iv.next35, %while.body221 ], !dbg !5056
  call void @llvm.dbg.value(metadata i64 %indvars.iv34, metadata !4890, metadata !DIExpression()), !dbg !5056
  %arrayidx211 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv34, !dbg !5074
  %52 = load i8, i8* %arrayidx211, align 1, !dbg !5074
  %sh_prom213 = zext i8 %52 to i64, !dbg !5074
  %shl214 = shl i64 1, %sh_prom213, !dbg !5074
  %and215 = and i64 %49, %shl214, !dbg !5074
  %tobool216 = icmp eq i64 %and215, 0, !dbg !5074
  br i1 %tobool216, label %while.end223, label %while.body221, !dbg !5072

while.body221:                                    ; preds = %while.cond207
  %indvars.iv.next35 = add i64 %indvars.iv34, -1, !dbg !5075
  call void @llvm.dbg.value(metadata i32 undef, metadata !4890, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5056
  br label %while.cond207, !dbg !5072, !llvm.loop !5076

while.end223:                                     ; preds = %while.cond207
  %indvars.iv34.lcssa = phi i64 [ %indvars.iv34, %while.cond207 ], !dbg !5056
  %sh_prom213.lcssa = phi i64 [ %sh_prom213, %while.cond207 ], !dbg !5074
  call void @llvm.dbg.value(metadata i64 %indvars.iv34.lcssa, metadata !4890, metadata !DIExpression()), !dbg !5056
  %53 = trunc i64 %indvars.iv34.lcssa to i32, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %53, metadata !4890, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i32 %53, metadata !4890, metadata !DIExpression()), !dbg !5056
  %sub228 = add nsw i64 %sh_prom213.lcssa, -8, !dbg !5077
  %arrayidx231 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub228, i64 39, !dbg !5077
  %54 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx231, align 8, !dbg !5077
  %call232 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %54, i32 1) #7, !dbg !5078
  br label %if.end244, !dbg !5079

if.else233:                                       ; preds = %while.body195
  %sub239 = add nsw i64 %sh_prom202, -8, !dbg !5080
  %arrayidx242 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub239, i64 39, !dbg !5080
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx242, align 8, !dbg !5080
  %call243 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %55, i32 1) #7, !dbg !5081
  br label %if.end244

if.end244:                                        ; preds = %if.else233, %while.end223
  %next170.2 = phi i32 [ %53, %while.end223 ], [ %next170.0, %if.else233 ], !dbg !5067
  call void @llvm.dbg.value(metadata i32 %next170.2, metadata !4890, metadata !DIExpression()), !dbg !5056
  %.pre = load i32, i32* %top, align 8, !dbg !5066
  br label %while.cond191, !dbg !5058, !llvm.loop !5082

if.end246.loopexit:                               ; preds = %while.cond191
  %.pre8 = load i32, i32* %top36, align 8, !dbg !5084
  br label %if.end246, !dbg !5084

if.end246:                                        ; preds = %if.end246.loopexit, %for.end168
  %56 = phi i32 [ %.pre8, %if.end246.loopexit ], [ %.lcssa46, %for.end168 ], !dbg !5084
  %cmp248 = icmp eq i32 %56, -2, !dbg !5086
  br i1 %cmp248, label %if.then250, label %if.else257, !dbg !5087

if.then250:                                       ; preds = %if.end246
  %57 = load i32, i32* %top, align 8, !dbg !5088
  store i32 %57, i32* %top36, align 8, !dbg !5090
  %arraydecay = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 0, !dbg !5091
  %arraydecay255 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 0, !dbg !5092
  %call256 = tail call i8* @memcpy(i8* nonnull %arraydecay, i8* nonnull %arraydecay255, i64 8) #6, !dbg !5093
  br label %if.end377, !dbg !5094

if.else257:                                       ; preds = %if.end246
  %58 = load i64, i64* %reg_set18, align 8, !dbg !5095
  %59 = load i64, i64* %reg_set, align 8, !dbg !5095
  %call260 = tail call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %58, i64 %59) #7, !dbg !5095
  %tobool261 = icmp eq i8 %call260, 0, !dbg !5095
  br i1 %tobool261, label %cond.true, label %cond.end, !dbg !5095

cond.true:                                        ; preds = %if.else257
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2541, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5095
  br label %cond.end, !dbg !5095

cond.end:                                         ; preds = %if.else257, %cond.true
  %60 = load i32, i32* %top, align 8, !dbg !5097
  %61 = load i32, i32* %top36, align 8, !dbg !5097
  %cmp264 = icmp eq i32 %60, %61, !dbg !5097
  br i1 %cmp264, label %cond.end268, label %cond.true266, !dbg !5097

cond.true266:                                     ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5097
  %.pre9 = load i32, i32* %top36, align 8, !dbg !5098
  br label %cond.end268, !dbg !5097

cond.end268:                                      ; preds = %cond.end, %cond.true266
  %62 = phi i32 [ %60, %cond.end ], [ %.pre9, %cond.true266 ], !dbg !5098
  %cmp271 = icmp eq i32 %62, -1, !dbg !5100
  br i1 %cmp271, label %if.end354, label %do.body.preheader, !dbg !5101

do.body.preheader:                                ; preds = %cond.end268
  br label %do.body, !dbg !5102

do.body:                                          ; preds = %do.body.preheader, %do.cond
  br label %while.cond274, !dbg !5103

while.cond274:                                    ; preds = %cond.end313, %do.body
  %63 = load i32, i32* %top, align 8, !dbg !5105
  %idxprom277 = sext i32 %63 to i64, !dbg !5106
  %arrayidx278 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom277, !dbg !5106
  %64 = load i8, i8* %arrayidx278, align 1, !dbg !5106
  %65 = load i32, i32* %top36, align 8, !dbg !5107
  %idxprom282 = sext i32 %65 to i64, !dbg !5108
  %arrayidx283 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 %idxprom282, !dbg !5108
  %66 = load i8, i8* %arrayidx283, align 1, !dbg !5108
  %cmp285 = icmp eq i8 %64, %66, !dbg !5109
  call void @llvm.dbg.value(metadata i32 %65, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %65, metadata !4877, metadata !DIExpression()), !dbg !4891
  br i1 %cmp285, label %for.cond325.preheader, label %for.cond289.preheader, !dbg !5103

for.cond325.preheader:                            ; preds = %while.cond274
  %.lcssa42 = phi i32 [ %65, %while.cond274 ], !dbg !5107
  %67 = sext i32 %.lcssa42 to i64, !dbg !5110
  br label %for.cond325, !dbg !5110

for.cond289.preheader:                            ; preds = %while.cond274
  %68 = sext i32 %65 to i64, !dbg !5112
  br label %for.cond289, !dbg !5112

for.cond289:                                      ; preds = %for.cond289.preheader, %for.inc306
  %indvars.iv18 = phi i64 [ %68, %for.cond289.preheader ], [ %indvars.iv.next19, %for.inc306 ], !dbg !5115
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp290 = icmp sgt i64 %indvars.iv18, -1, !dbg !5116
  %69 = trunc i64 %indvars.iv18 to i32, !dbg !5112
  br i1 %cmp290, label %for.body292, label %for.end308, !dbg !5112

for.body292:                                      ; preds = %for.cond289
  %arrayidx295 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 %indvars.iv18, !dbg !5118
  %70 = load i8, i8* %arrayidx295, align 1, !dbg !5118
  %cmp302 = icmp eq i8 %70, %64, !dbg !5120
  br i1 %cmp302, label %for.end308, label %for.inc306, !dbg !5121

for.inc306:                                       ; preds = %for.body292
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, -1, !dbg !5122
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4891
  br label %for.cond289, !dbg !5123, !llvm.loop !5124

for.end308:                                       ; preds = %for.body292, %for.cond289
  %indvars.iv18.lcssa = phi i64 [ %indvars.iv18, %for.body292 ], [ %indvars.iv18, %for.cond289 ], !dbg !5115
  %.lcssa = phi i32 [ %69, %for.body292 ], [ %69, %for.cond289 ], !dbg !5112
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i64 %indvars.iv18.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp309 = icmp eq i32 %.lcssa, -1, !dbg !5126
  br i1 %cmp309, label %cond.true311, label %cond.end313, !dbg !5126

cond.true311:                                     ; preds = %for.end308
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2565, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5126
  br label %cond.end313, !dbg !5126

cond.end313:                                      ; preds = %for.end308, %cond.true311
  %sext = shl i64 %indvars.iv18.lcssa, 32, !dbg !5127
  %idxprom316 = ashr exact i64 %sext, 32, !dbg !5127
  %arrayidx317 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom316, !dbg !5127
  %71 = load i8, i8* %arrayidx317, align 1, !dbg !5127
  %conv318 = zext i8 %71 to i64, !dbg !5127
  %sub319 = add nsw i64 %conv318, -8, !dbg !5127
  %arrayidx322 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub319, i64 39, !dbg !5127
  %72 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx322, align 8, !dbg !5127
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %72) #7, !dbg !5128
  br label %while.cond274, !dbg !5103, !llvm.loop !5129

for.cond325:                                      ; preds = %for.cond325.preheader, %for.inc349
  %indvars.iv20 = phi i64 [ %67, %for.cond325.preheader ], [ %indvars.iv.next21, %for.inc349 ], !dbg !5131
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp326 = icmp sgt i64 %indvars.iv20, -1, !dbg !5132
  br i1 %cmp326, label %for.body328, label %do.cond.loopexit, !dbg !5110

for.body328:                                      ; preds = %for.cond325
  %arrayidx331 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 %indvars.iv20, !dbg !5134
  %73 = load i8, i8* %arrayidx331, align 1, !dbg !5134
  %arrayidx335 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv20, !dbg !5136
  %74 = load i8, i8* %arrayidx335, align 1, !dbg !5136
  %cmp337 = icmp eq i8 %73, %74, !dbg !5137
  br i1 %cmp337, label %for.inc349, label %if.then339, !dbg !5138

if.then339:                                       ; preds = %for.body328
  %.lcssa45 = phi i8 [ %74, %for.body328 ], !dbg !5136
  %cmp326.lcssa43 = phi i1 [ %cmp326, %for.body328 ], !dbg !5132
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !4877, metadata !DIExpression()), !dbg !4891
  %conv343 = zext i8 %.lcssa45 to i64, !dbg !5139
  %sub344 = add nsw i64 %conv343, -8, !dbg !5139
  %arrayidx347 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub344, i64 39, !dbg !5139
  %75 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx347, align 8, !dbg !5139
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %75) #7, !dbg !5141
  br label %do.cond, !dbg !5142

for.inc349:                                       ; preds = %for.body328
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, -1, !dbg !5143
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4891
  br label %for.cond325, !dbg !5144, !llvm.loop !5145

do.cond.loopexit:                                 ; preds = %for.cond325
  %cmp326.lcssa = phi i1 [ %cmp326, %for.cond325 ], !dbg !5132
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !4877, metadata !DIExpression()), !dbg !4891
  br label %do.cond, !dbg !5147

do.cond:                                          ; preds = %do.cond.loopexit, %if.then339
  %cmp32644 = phi i1 [ %cmp326.lcssa, %do.cond.loopexit ], [ %cmp326.lcssa43, %if.then339 ]
  br i1 %cmp32644, label %do.body, label %if.end354.loopexit, !dbg !5148, !llvm.loop !5149

if.end354.loopexit:                               ; preds = %do.cond
  br label %if.end354, !dbg !5151

if.end354:                                        ; preds = %if.end354.loopexit, %cond.end268
  %76 = load i32, i32* %top, align 8, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %76, metadata !4877, metadata !DIExpression()), !dbg !4891
  %77 = sext i32 %76 to i64, !dbg !5153
  br label %for.cond356, !dbg !5153

for.cond356:                                      ; preds = %for.inc374, %if.end354
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc374 ], [ %77, %if.end354 ], !dbg !5154
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4877, metadata !DIExpression()), !dbg !4891
  %cmp357 = icmp sgt i64 %indvars.iv, -1, !dbg !5155
  br i1 %cmp357, label %for.body359, label %if.end377.loopexit, !dbg !5157

for.body359:                                      ; preds = %for.cond356
  %arrayidx362 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv, !dbg !5158
  %78 = load i8, i8* %arrayidx362, align 1, !dbg !5158
  %arrayidx366 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %new_stack, i64 0, i32 2, i64 %indvars.iv, !dbg !5158
  %79 = load i8, i8* %arrayidx366, align 1, !dbg !5158
  %cmp368 = icmp eq i8 %78, %79, !dbg !5158
  br i1 %cmp368, label %for.inc374, label %cond.true370, !dbg !5158

cond.true370:                                     ; preds = %for.body359
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2587, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5158
  br label %for.inc374, !dbg !5158

for.inc374:                                       ; preds = %cond.true370, %for.body359
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5159
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4891
  br label %for.cond356, !dbg !5160, !llvm.loop !5161

if.end377.loopexit:                               ; preds = %for.cond356
  br label %if.end377, !dbg !5163

if.end377:                                        ; preds = %if.end377.loopexit, %if.then250
  %tobool378 = icmp eq i32 %update_end.1, 0, !dbg !5163
  br i1 %tobool378, label %cleanup.cont, label %if.then379, !dbg !5165

if.then379:                                       ; preds = %if.end377
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5166
  %81 = bitcast %union.rtunion_def* %80 to i64*, !dbg !5166
  %82 = load i64, i64* %81, align 8, !dbg !5166
  %83 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !5167
  %il384 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %83, i64 0, i32 7, !dbg !5167
  %rtl385 = bitcast %union.basic_block_il_dependent* %il384 to %struct.rtl_bb_info**, !dbg !5167
  %84 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl385, align 8, !dbg !5167
  %end_386 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %84, i64 0, i32 1, !dbg !5167
  %85 = bitcast %struct.rtx_def** %end_386 to i64*, !dbg !5168
  store i64 %82, i64* %85, align 8, !dbg !5168
  br label %cleanup.cont, !dbg !5167

cleanup.cont:                                     ; preds = %if.end377, %if.then, %if.then379
  ret void, !dbg !5169
}

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %reg) unnamed_addr #5 !dbg !5170 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5174, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !5175, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !5176, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5182, metadata !DIExpression()), !dbg !5191
  %call = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %reg) #7, !dbg !5192
  call void @llvm.dbg.value(metadata i32 %call, metadata !5177, metadata !DIExpression()), !dbg !5191
  switch i32 %call, label %if.end5 [
    i32 8, label %cleanup.cont217
    i32 -1, label %if.then2
  ], !dbg !5193

if.then2:                                         ; preds = %entry
  %.b = load i1, i1* @any_malformed_asm, align 1, !dbg !5194
  br i1 %.b, label %cond.end, label %cond.true, !dbg !5194

cond.true:                                        ; preds = %if.then2
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 817, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5194
  br label %cond.end, !dbg !5194

cond.end:                                         ; preds = %if.then2, %cond.true
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !5197
  %conv = trunc i32 %call3 to i8, !dbg !5197
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5198
  %0 = load i32, i32* %top, align 8, !dbg !5199
  %inc = add nsw i32 %0, 1, !dbg !5199
  store i32 %inc, i32* %top, align 8, !dbg !5199
  %idxprom = sext i32 %inc to i64, !dbg !5200
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom, !dbg !5200
  store i8 %conv, i8* %arrayidx, align 1, !dbg !5201
  br label %cleanup.cont217, !dbg !5202

if.end5:                                          ; preds = %entry
  %cmp6 = icmp sgt i32 %call, 7, !dbg !5203
  br i1 %cmp6, label %cond.end10, label %cond.true8, !dbg !5203

cond.true8:                                       ; preds = %if.end5
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 821, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5203
  br label %cond.end10, !dbg !5203

cond.end10:                                       ; preds = %if.end5, %cond.true8
  %top12 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5204
  %1 = load i32, i32* %top12, align 8, !dbg !5204
  %sub = add nsw i32 %call, -8, !dbg !5205
  %sub13 = sub nsw i32 %1, %sub, !dbg !5206
  call void @llvm.dbg.value(metadata i32 %sub13, metadata !5180, metadata !DIExpression()), !dbg !5191
  %idxprom15 = sext i32 %sub13 to i64, !dbg !5207
  %arrayidx16 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom15, !dbg !5207
  %2 = load i8, i8* %arrayidx16, align 1, !dbg !5207
  %idxprom20 = sext i32 %1 to i64, !dbg !5208
  %arrayidx21 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom20, !dbg !5208
  %3 = load i8, i8* %arrayidx21, align 1, !dbg !5208
  store i8 %3, i8* %arrayidx16, align 1, !dbg !5209
  %4 = load i32, i32* %top12, align 8, !dbg !5210
  %idxprom28 = sext i32 %4 to i64, !dbg !5211
  %arrayidx29 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom28, !dbg !5211
  store i8 %2, i8* %arrayidx29, align 1, !dbg !5212
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5181, metadata !DIExpression()), !dbg !5191
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !5213
  %tobool30 = icmp eq %struct.basic_block_def* %5, null, !dbg !5213
  br i1 %tobool30, label %if.end76, label %land.lhs.true, !dbg !5214

land.lhs.true:                                    ; preds = %cond.end10
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 7, !dbg !5215
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5215
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5215
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !5215
  %7 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5215
  %cmp31 = icmp eq %struct.rtx_def* %7, %insn, !dbg !5216
  br i1 %cmp31, label %if.end76, label %if.then33, !dbg !5217

if.then33:                                        ; preds = %land.lhs.true
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5218
  %rt_rtx42 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5218
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !5218
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5186, metadata !DIExpression()), !dbg !5219
  br label %while.cond, !dbg !5220

while.cond:                                       ; preds = %if.end71, %if.then33
  %insn.pn = phi %struct.rtx_def* [ %insn, %if.then33 ], [ %tmp34.0, %if.end71 ]
  %tmp34.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5219
  %tmp34.0.in = bitcast %union.rtunion_def* %tmp34.0.in.in to %struct.rtx_def**, !dbg !5219
  %tmp34.0 = load %struct.rtx_def*, %struct.rtx_def** %tmp34.0.in, align 8, !dbg !5219
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp34.0, metadata !5183, metadata !DIExpression()), !dbg !5219
  %cmp43 = icmp eq %struct.rtx_def* %tmp34.0, %9, !dbg !5221
  br i1 %cmp43, label %if.end76.loopexit, label %while.body, !dbg !5220

while.body:                                       ; preds = %while.cond
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp34.0, i64 0, i32 0, !dbg !5222
  %bf.load = load i32, i32* %10, align 8, !dbg !5222
  %bf.clear = and i32 %bf.load, 65535, !dbg !5222
  %cmp45 = icmp eq i32 %bf.clear, 12, !dbg !5222
  %cmp49 = icmp eq i32 %bf.clear, 10, !dbg !5225
  %or.cond = or i1 %cmp45, %cmp49, !dbg !5226
  br i1 %or.cond, label %if.end76.loopexit, label %lor.lhs.false51, !dbg !5226

lor.lhs.false51:                                  ; preds = %while.body
  %cmp54 = icmp eq i32 %bf.clear, 13, !dbg !5227
  br i1 %cmp54, label %land.lhs.true56, label %lor.lhs.false62, !dbg !5227

land.lhs.true56:                                  ; preds = %lor.lhs.false51
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp34.0, i64 0, i32 1, !dbg !5227
  %11 = getelementptr inbounds %union.u, %union.u* %u57, i64 1, i32 0, i32 0, i64 0, !dbg !5227
  %rt_int = bitcast %union.rtunion_def* %11 to i32*, !dbg !5227
  %12 = load i32, i32* %rt_int, align 8, !dbg !5227
  %cmp60 = icmp eq i32 %12, 10, !dbg !5227
  br i1 %cmp60, label %if.end76.loopexit, label %lor.lhs.false62, !dbg !5228

lor.lhs.false62:                                  ; preds = %land.lhs.true56, %lor.lhs.false51
  %cmp65 = icmp eq i32 %bf.clear, 8, !dbg !5229
  br i1 %cmp65, label %land.lhs.true67, label %if.end71, !dbg !5230

land.lhs.true67:                                  ; preds = %lor.lhs.false62
  %call68 = tail call i32 @stack_regs_mentioned(%struct.rtx_def* %tmp34.0) #7, !dbg !5231
  %tobool69 = icmp eq i32 %call68, 0, !dbg !5231
  br i1 %tobool69, label %if.end71, label %if.end76.loopexit, !dbg !5232

if.end71:                                         ; preds = %land.lhs.true67, %lor.lhs.false62
  br label %while.cond, !dbg !5220, !llvm.loop !5233

if.end76.loopexit:                                ; preds = %while.body, %land.lhs.true56, %while.cond, %land.lhs.true67
  %i1.1.ph = phi %struct.rtx_def* [ %tmp34.0, %while.body ], [ %tmp34.0, %land.lhs.true56 ], [ %tmp34.0, %land.lhs.true67 ], [ null, %while.cond ]
  br label %if.end76, !dbg !5235

if.end76:                                         ; preds = %if.end76.loopexit, %land.lhs.true, %cond.end10
  %i1.1 = phi %struct.rtx_def* [ null, %land.lhs.true ], [ null, %cond.end10 ], [ %i1.1.ph, %if.end76.loopexit ], !dbg !5191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.1, metadata !5181, metadata !DIExpression()), !dbg !5191
  %cmp77 = icmp eq %struct.rtx_def* %i1.1, null, !dbg !5235
  br i1 %cmp77, label %if.end185, label %land.lhs.true79, !dbg !5236

land.lhs.true79:                                  ; preds = %if.end76
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1.1, i64 0, i32 0, !dbg !5237
  %bf.load80 = load i32, i32* %13, align 8, !dbg !5237
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !5237
  %cmp82 = icmp eq i32 %bf.clear81, 8, !dbg !5237
  br i1 %cmp82, label %cond.true99, label %lor.lhs.false84, !dbg !5237

lor.lhs.false84:                                  ; preds = %land.lhs.true79
  %cmp87 = icmp eq i32 %bf.clear81, 7, !dbg !5237
  br i1 %cmp87, label %cond.true99, label %lor.lhs.false89, !dbg !5237

lor.lhs.false89:                                  ; preds = %lor.lhs.false84
  %cmp92 = icmp eq i32 %bf.clear81, 9, !dbg !5237
  br i1 %cmp92, label %cond.true99, label %lor.lhs.false94, !dbg !5237

lor.lhs.false94:                                  ; preds = %lor.lhs.false89
  %cmp97 = icmp eq i32 %bf.clear81, 10, !dbg !5237
  br i1 %cmp97, label %cond.true99, label %cond.end122, !dbg !5237

cond.true99:                                      ; preds = %lor.lhs.false94, %lor.lhs.false89, %lor.lhs.false84, %land.lhs.true79
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1.1, i64 0, i32 1, !dbg !5237
  %14 = getelementptr inbounds %union.u, %union.u* %u100, i64 1, i32 0, i32 0, i64 0, !dbg !5237
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !5237
  %16 = load i32*, i32** %15, align 8, !dbg !5237
  %bf.load104 = load i32, i32* %16, align 8, !dbg !5237
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !5237
  %cmp106 = icmp eq i32 %bf.clear105, 23, !dbg !5237
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5237
  br i1 %cmp106, label %cond.end122, label %cond.false113, !dbg !5237

cond.false113:                                    ; preds = %cond.true99
  %call118 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %i1.1, %struct.rtx_def* %17) #6, !dbg !5237
  br label %cond.end122, !dbg !5237

cond.end122:                                      ; preds = %lor.lhs.false94, %cond.false113, %cond.true99
  %cond123 = phi %struct.rtx_def* [ %call118, %cond.false113 ], [ %17, %cond.true99 ], [ null, %lor.lhs.false94 ], !dbg !5237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond123, metadata !5182, metadata !DIExpression()), !dbg !5191
  %cmp124 = icmp eq %struct.rtx_def* %cond123, null, !dbg !5238
  br i1 %cmp124, label %if.end185, label %if.then126, !dbg !5239

if.then126:                                       ; preds = %cond.end122
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond123, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5240
  %rt_rtx130 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !5240
  %call131 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx130) #7, !dbg !5241
  %19 = load %struct.rtx_def*, %struct.rtx_def** %call131, align 8, !dbg !5242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5187, metadata !DIExpression()), !dbg !5243
  %arrayidx134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond123, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5244
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !5244
  %call136 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx135) #7, !dbg !5245
  %20 = load %struct.rtx_def*, %struct.rtx_def** %call136, align 8, !dbg !5246
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5190, metadata !DIExpression()), !dbg !5243
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !5247
  %bf.load137 = load i32, i32* %21, align 8, !dbg !5247
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !5247
  %cmp139 = icmp eq i32 %bf.clear138, 37, !dbg !5247
  br i1 %cmp139, label %land.lhs.true141, label %if.end160, !dbg !5249

land.lhs.true141:                                 ; preds = %if.then126
  %call142 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %20) #7, !dbg !5250
  %cmp143 = icmp eq i32 %call142, 8, !dbg !5251
  br i1 %cmp143, label %land.lhs.true145, label %if.end160, !dbg !5252

land.lhs.true145:                                 ; preds = %land.lhs.true141
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !5253
  %bf.load146 = load i32, i32* %22, align 8, !dbg !5253
  %bf.clear147 = and i32 %bf.load146, 65535, !dbg !5253
  %cmp148 = icmp eq i32 %bf.clear147, 37, !dbg !5253
  br i1 %cmp148, label %land.lhs.true150, label %if.end160, !dbg !5254

land.lhs.true150:                                 ; preds = %land.lhs.true145
  %call151 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %19) #7, !dbg !5255
  %sub152 = add i32 %call, -1, !dbg !5256
  %cmp153 = icmp eq i32 %call151, %sub152, !dbg !5257
  br i1 %cmp153, label %land.lhs.true155, label %if.end160, !dbg !5258

land.lhs.true155:                                 ; preds = %land.lhs.true150
  %call156 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* nonnull %i1.1, i32 1, i32 8) #6, !dbg !5259
  %cmp157 = icmp eq %struct.rtx_def* %call156, null, !dbg !5260
  br i1 %cmp157, label %cleanup, label %if.end160, !dbg !5261

if.end160:                                        ; preds = %land.lhs.true155, %land.lhs.true150, %land.lhs.true145, %land.lhs.true141, %if.then126
  %bf.load161 = load i32, i32* %21, align 8, !dbg !5262
  %bf.clear162 = and i32 %bf.load161, 65535, !dbg !5262
  %cmp163 = icmp eq i32 %bf.clear162, 37, !dbg !5262
  br i1 %cmp163, label %land.lhs.true165, label %if.end183, !dbg !5264

land.lhs.true165:                                 ; preds = %if.end160
  %call166 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %20) #7, !dbg !5265
  %cmp167 = icmp eq i32 %call166, %call, !dbg !5266
  br i1 %cmp167, label %land.lhs.true169, label %if.end183, !dbg !5267

land.lhs.true169:                                 ; preds = %land.lhs.true165
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !5268
  %bf.load170 = load i32, i32* %23, align 8, !dbg !5268
  %bf.clear171 = and i32 %bf.load170, 65535, !dbg !5268
  %cmp172 = icmp eq i32 %bf.clear171, 37, !dbg !5268
  br i1 %cmp172, label %land.lhs.true174, label %if.end183, !dbg !5269

land.lhs.true174:                                 ; preds = %land.lhs.true169
  %call175 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %19) #7, !dbg !5270
  %cmp176 = icmp eq i32 %call175, 8, !dbg !5271
  br i1 %cmp176, label %land.lhs.true178, label %if.end183, !dbg !5272

land.lhs.true178:                                 ; preds = %land.lhs.true174
  %call179 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* nonnull %i1.1, i32 1, i32 8) #6, !dbg !5273
  %cmp180 = icmp eq %struct.rtx_def* %call179, null, !dbg !5274
  br i1 %cmp180, label %cleanup, label %if.end183, !dbg !5275

if.end183:                                        ; preds = %land.lhs.true178, %land.lhs.true174, %land.lhs.true169, %land.lhs.true165, %if.end160
  br label %cleanup, !dbg !5276

cleanup:                                          ; preds = %land.lhs.true178, %land.lhs.true155, %if.end183
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end183 ], [ false, %land.lhs.true155 ], [ false, %land.lhs.true178 ]
  br i1 %cleanup.dest.slot.0, label %if.end185, label %cleanup.cont217

if.end185:                                        ; preds = %cond.end122, %if.end76, %cleanup
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !5277
  %tobool186 = icmp eq %struct.basic_block_def* %24, null, !dbg !5277
  br i1 %tobool186, label %if.end191, label %land.lhs.true187, !dbg !5279

land.lhs.true187:                                 ; preds = %if.end185
  %.b2 = load i1, i1* @starting_stack_p, align 1, !dbg !5280
  br i1 %.b2, label %if.then190, label %if.end191, !dbg !5281

if.then190:                                       ; preds = %land.lhs.true187
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 2, !dbg !5282
  %25 = load i8*, i8** %aux, align 8, !dbg !5282
  %26 = bitcast %struct.stack_def* %regstack to i8*, !dbg !5284
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !5284
  store i1 false, i1* @starting_stack_p, align 1, !dbg !5285
  br label %cleanup.cont217, !dbg !5286

if.end191:                                        ; preds = %land.lhs.true187, %if.end185
  %idxprom193 = sext i32 %sub to i64, !dbg !5287
  %arrayidx195 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom193, i64 40, !dbg !5287
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx195, align 8, !dbg !5287
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 40), align 16, !dbg !5288
  %call196 = tail call %struct.rtx_def* @gen_swapxf(%struct.rtx_def* %27, %struct.rtx_def* %28) #6, !dbg !5289
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call196, metadata !5178, metadata !DIExpression()), !dbg !5191
  br i1 %cmp77, label %if.else, label %if.then198, !dbg !5290

if.then198:                                       ; preds = %if.end191
  %call199 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call196, %struct.rtx_def* nonnull %i1.1) #6, !dbg !5291
  br label %cleanup.cont217, !dbg !5291

if.else:                                          ; preds = %if.end191
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !5293
  %tobool200 = icmp eq %struct.basic_block_def* %29, null, !dbg !5293
  br i1 %tobool200, label %if.else206, label %if.then201, !dbg !5295

if.then201:                                       ; preds = %if.else
  %il202 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 7, !dbg !5296
  %rtl203 = bitcast %union.basic_block_il_dependent* %il202 to %struct.rtl_bb_info**, !dbg !5296
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl203, align 8, !dbg !5296
  %head_204 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !5296
  %31 = load %struct.rtx_def*, %struct.rtx_def** %head_204, align 8, !dbg !5296
  %call205 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call196, %struct.rtx_def* %31) #6, !dbg !5297
  br label %cleanup.cont217, !dbg !5297

if.else206:                                       ; preds = %if.else
  %call207 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call196, %struct.rtx_def* %insn) #6, !dbg !5298
  br label %cleanup.cont217

cleanup.cont217:                                  ; preds = %cond.end, %if.then190, %cleanup, %entry, %if.then201, %if.else206, %if.then198
  ret void, !dbg !5299
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_swapxf(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_asm_stack_operands(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5300 {
entry:
  %reg_used_as_output = alloca [53 x i8], align 16
  %implicitly_dies = alloca [53 x i8], align 16
  %n_inputs = alloca i32, align 4
  %n_outputs = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5304, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 0, metadata !5307, metadata !DIExpression()), !dbg !5343
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5344
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5344
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5344
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5308, metadata !DIExpression()), !dbg !5343
  %2 = getelementptr inbounds [53 x i8], [53 x i8]* %reg_used_as_output, i64 0, i64 0, !dbg !5345
  call void @llvm.lifetime.start.p0i8(i64 53, i8* nonnull %2) #8, !dbg !5345
  call void @llvm.dbg.declare(metadata [53 x i8]* %reg_used_as_output, metadata !5309, metadata !DIExpression()), !dbg !5346
  %3 = getelementptr inbounds [53 x i8], [53 x i8]* %implicitly_dies, i64 0, i64 0, !dbg !5347
  call void @llvm.lifetime.start.p0i8(i64 53, i8* nonnull %3) #8, !dbg !5347
  call void @llvm.dbg.declare(metadata [53 x i8]* %implicitly_dies, metadata !5313, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.rtx_def** null, metadata !5315, metadata !DIExpression()), !dbg !5343
  %4 = bitcast i32* %n_inputs to i8*, !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !5349
  %5 = bitcast i32* %n_outputs to i8*, !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8, !dbg !5349
  tail call void @extract_insn(%struct.rtx_def* %insn) #6, !dbg !5350
  %call = tail call i32 @constrain_operands(i32 1) #6, !dbg !5351
  %6 = load i32, i32* @which_alternative, align 4, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %6, metadata !5314, metadata !DIExpression()), !dbg !5343
  tail call void @preprocess_constraints() #6, !dbg !5353
  call void @llvm.dbg.value(metadata i32* %n_inputs, metadata !5316, metadata !DIExpression(DW_OP_deref)), !dbg !5343
  call void @llvm.dbg.value(metadata i32* %n_outputs, metadata !5317, metadata !DIExpression(DW_OP_deref)), !dbg !5343
  call fastcc void @get_asm_operands_in_out(%struct.rtx_def* %1, i32* nonnull %n_outputs, i32* nonnull %n_inputs) #7, !dbg !5354
  %cmp = icmp slt i32 %6, 0, !dbg !5355
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !5357

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5358

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5360
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %7) #6, !dbg !5360
  store %struct.rtx_def* %call1, %struct.rtx_def** %rt_rtx, align 8, !dbg !5362
  br label %cleanup, !dbg !5363

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv34 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next35, %for.inc ], !dbg !5364
  call void @llvm.dbg.value(metadata i64 %indvars.iv34, metadata !5305, metadata !DIExpression()), !dbg !5343
  %8 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !5365
  %9 = sext i8 %8 to i64, !dbg !5367
  %cmp6 = icmp slt i64 %indvars.iv34, %9, !dbg !5367
  br i1 %cmp6, label %for.body, label %for.end, !dbg !5358

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv34, !dbg !5368
  %10 = bitcast %struct.rtx_def** %arrayidx8 to i32**, !dbg !5368
  %11 = load i32*, i32** %10, align 8, !dbg !5368
  %bf.load = load i32, i32* %11, align 8, !dbg !5368
  %bf.clear = and i32 %bf.load, 65535, !dbg !5368
  %cmp9 = icmp eq i32 %bf.clear, 39, !dbg !5370
  br i1 %cmp9, label %land.lhs.true, label %for.inc, !dbg !5371

land.lhs.true:                                    ; preds = %for.body
  %arrayidx15 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !5372
  %12 = bitcast i32* %arrayidx15 to i32**, !dbg !5372
  %13 = load i32*, i32** %12, align 8, !dbg !5372
  %bf.load17 = load i32, i32* %13, align 8, !dbg !5372
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !5372
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !5372
  br i1 %cmp19, label %if.then21, label %for.inc, !dbg !5373

if.then21:                                        ; preds = %land.lhs.true
  %14 = ptrtoint i32* %13 to i64, !dbg !5373
  %15 = bitcast %struct.rtx_def** %arrayidx8 to i64*, !dbg !5374
  store i64 %14, i64* %15, align 8, !dbg !5374
  br label %for.inc, !dbg !5375

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then21
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !5376
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond, !dbg !5377, !llvm.loop !5378

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5343
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5380
  %bf.load31 = load i32, i32* %16, align 8, !dbg !5380
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !5380
  %cmp33 = icmp eq i32 %bf.clear32, 15, !dbg !5381
  br i1 %cmp33, label %if.then35, label %if.end108, !dbg !5382

if.then35:                                        ; preds = %for.end
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5383
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtvec_def**, !dbg !5383
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5383
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !5383
  %18 = load i32, i32* %num_elem, align 8, !dbg !5383
  %conv39 = sext i32 %18 to i64, !dbg !5383
  %19 = alloca %struct.rtx_def*, i64 %conv39, align 16, !dbg !5383
  call void @llvm.dbg.value(metadata %struct.rtx_def** %19, metadata !5315, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()), !dbg !5343
  br label %for.cond40, !dbg !5384

for.cond40:                                       ; preds = %for.inc105, %if.then35
  %indvars.iv32 = phi i64 [ %indvars.iv.next33, %for.inc105 ], [ 0, %if.then35 ], !dbg !5385
  %20 = phi i32 [ %.pre3, %for.inc105 ], [ %18, %if.then35 ], !dbg !5385
  %21 = phi %struct.rtvec_def* [ %.pre, %for.inc105 ], [ %17, %if.then35 ], !dbg !5385
  %n_clobbers.0 = phi i32 [ %n_clobbers.2, %for.inc105 ], [ 0, %if.then35 ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv32, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0, metadata !5306, metadata !DIExpression()), !dbg !5343
  %22 = sext i32 %20 to i64, !dbg !5386
  %cmp46 = icmp slt i64 %indvars.iv32, %22, !dbg !5386
  br i1 %cmp46, label %for.body48, label %if.end108.loopexit, !dbg !5387

for.body48:                                       ; preds = %for.cond40
  %arrayidx54 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i64 0, i32 1, i64 %indvars.iv32, !dbg !5388
  %23 = bitcast %struct.rtx_def** %arrayidx54 to i32**, !dbg !5388
  %24 = load i32*, i32** %23, align 8, !dbg !5388
  %bf.load55 = load i32, i32* %24, align 8, !dbg !5388
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !5388
  %cmp57 = icmp eq i32 %bf.clear56, 25, !dbg !5389
  br i1 %cmp57, label %if.then59, label %for.inc105, !dbg !5390

if.then59:                                        ; preds = %for.body48
  call void @llvm.dbg.value(metadata i32* %24, metadata !5318, metadata !DIExpression()), !dbg !5391
  %arrayidx69 = getelementptr inbounds i32, i32* %24, i64 2, !dbg !5392
  %rt_rtx70 = bitcast i32* %arrayidx69 to %struct.rtx_def**, !dbg !5392
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !5392
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5325, metadata !DIExpression()), !dbg !5391
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 0, !dbg !5393
  %bf.load71 = load i32, i32* %26, align 8, !dbg !5393
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !5393
  %cmp73 = icmp eq i32 %bf.clear72, 39, !dbg !5395
  br i1 %cmp73, label %land.lhs.true75, label %if.end89, !dbg !5396

land.lhs.true75:                                  ; preds = %if.then59
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5397
  %27 = bitcast %union.rtunion_def* %arrayidx78 to i32**, !dbg !5397
  %28 = load i32*, i32** %27, align 8, !dbg !5397
  %bf.load80 = load i32, i32* %28, align 8, !dbg !5397
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !5397
  %cmp82 = icmp eq i32 %bf.clear81, 37, !dbg !5397
  br i1 %cmp82, label %if.then84, label %if.end89, !dbg !5398

if.then84:                                        ; preds = %land.lhs.true75
  %29 = bitcast i32* %28 to %struct.rtx_def*, !dbg !5398
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5325, metadata !DIExpression()), !dbg !5391
  br label %if.end89, !dbg !5399

if.end89:                                         ; preds = %if.then84, %land.lhs.true75, %if.then59
  %bf.load90 = phi i32 [ %bf.load80, %if.then84 ], [ %bf.load71, %land.lhs.true75 ], [ %bf.load71, %if.then59 ], !dbg !5400
  %reg.0 = phi %struct.rtx_def* [ %29, %if.then84 ], [ %25, %land.lhs.true75 ], [ %25, %if.then59 ], !dbg !5391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !5325, metadata !DIExpression()), !dbg !5391
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !5400
  %cmp92 = icmp eq i32 %bf.clear91, 37, !dbg !5400
  br i1 %cmp92, label %land.lhs.true94, label %for.inc105, !dbg !5400

land.lhs.true94:                                  ; preds = %if.end89
  %call95 = call fastcc i32 @rhs_regno(%struct.rtx_def* %reg.0) #7, !dbg !5400
  %30 = and i32 %call95, -8, !dbg !5400
  %cmp97 = icmp eq i32 %30, 8, !dbg !5400
  br i1 %cmp97, label %if.then99, label %for.inc105, !dbg !5402

if.then99:                                        ; preds = %land.lhs.true94
  %idxprom100 = sext i32 %n_clobbers.0 to i64, !dbg !5403
  %arrayidx101 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %idxprom100, !dbg !5403
  store %struct.rtx_def* %reg.0, %struct.rtx_def** %arrayidx101, align 8, !dbg !5405
  %inc102 = add nsw i32 %n_clobbers.0, 1, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %inc102, metadata !5306, metadata !DIExpression()), !dbg !5343
  br label %for.inc105, !dbg !5407

for.inc105:                                       ; preds = %for.body48, %if.then99, %land.lhs.true94, %if.end89
  %n_clobbers.2 = phi i32 [ %n_clobbers.0, %for.body48 ], [ %inc102, %if.then99 ], [ %n_clobbers.0, %land.lhs.true94 ], [ %n_clobbers.0, %if.end89 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %n_clobbers.2, metadata !5306, metadata !DIExpression()), !dbg !5343
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !5408
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5385
  %num_elem45.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre, i64 0, i32 0, !dbg !5409
  %.pre3 = load i32, i32* %num_elem45.phi.trans.insert, align 8, !dbg !5385
  br label %for.cond40, !dbg !5410, !llvm.loop !5411

if.end108.loopexit:                               ; preds = %for.cond40
  %n_clobbers.0.lcssa = phi i32 [ %n_clobbers.0, %for.cond40 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !5306, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !5306, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %n_clobbers.0.lcssa, metadata !5306, metadata !DIExpression()), !dbg !5343
  br label %if.end108, !dbg !5413

if.end108:                                        ; preds = %if.end108.loopexit, %for.end
  %clobber_reg.0 = phi %struct.rtx_def** [ null, %for.end ], [ %19, %if.end108.loopexit ], !dbg !5343
  %n_clobbers.3 = phi i32 [ 0, %for.end ], [ %n_clobbers.0.lcssa, %if.end108.loopexit ], !dbg !5414
  call void @llvm.dbg.value(metadata i32 %n_clobbers.3, metadata !5306, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata %struct.rtx_def** %clobber_reg.0, metadata !5315, metadata !DIExpression()), !dbg !5343
  %call109 = call i8* @memset(i8* nonnull %2, i32 0, i64 53) #6, !dbg !5415
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()), !dbg !5343
  %idxprom131 = sext i32 %6 to i64, !dbg !5416
  %31 = sext i32 %n_clobbers.3 to i64, !dbg !5417
  br label %for.cond110, !dbg !5417

for.cond110:                                      ; preds = %for.inc171, %if.end108
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %for.inc171 ], [ 0, %if.end108 ], !dbg !5343
  %malformed_asm.0 = phi i32 [ %malformed_asm.3, %for.inc171 ], [ 0, %if.end108 ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.0, metadata !5307, metadata !DIExpression()), !dbg !5343
  %32 = load i32, i32* %n_outputs, align 4, !dbg !5418
  call void @llvm.dbg.value(metadata i32 %32, metadata !5317, metadata !DIExpression()), !dbg !5343
  %33 = sext i32 %32 to i64, !dbg !5419
  %cmp111 = icmp slt i64 %indvars.iv30, %33, !dbg !5419
  br i1 %cmp111, label %for.body113, label %for.cond174.preheader, !dbg !5420

for.cond174.preheader:                            ; preds = %for.cond110
  %malformed_asm.0.lcssa = phi i32 [ %malformed_asm.0, %for.cond110 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.0.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.0.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.0.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %for.cond174, !dbg !5421

for.body113:                                      ; preds = %for.cond110
  %arrayidx115 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv30, !dbg !5423
  %34 = bitcast %struct.rtx_def** %arrayidx115 to i32**, !dbg !5423
  %35 = load i32*, i32** %34, align 8, !dbg !5423
  %bf.load116 = load i32, i32* %35, align 8, !dbg !5423
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !5423
  %cmp118 = icmp eq i32 %bf.clear117, 37, !dbg !5423
  br i1 %cmp118, label %land.lhs.true120, label %for.inc171, !dbg !5423

land.lhs.true120:                                 ; preds = %for.body113
  %36 = bitcast i32* %35 to %struct.rtx_def*, !dbg !5423
  %call123 = call fastcc i32 @rhs_regno(%struct.rtx_def* %36) #7, !dbg !5423
  %37 = and i32 %call123, -8, !dbg !5423
  %cmp126 = icmp eq i32 %37, 8, !dbg !5423
  br i1 %cmp126, label %if.then128, label %for.inc171, !dbg !5424

if.then128:                                       ; preds = %land.lhs.true120
  %cl = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv30, i64 %idxprom131, i32 1, !dbg !5425
  %38 = load i32, i32* %cl, align 8, !dbg !5425
  %idxprom133 = sext i32 %38 to i64, !dbg !5426
  %arrayidx134 = getelementptr inbounds [27 x i32], [27 x i32]* @reg_class_size, i64 0, i64 %idxprom133, !dbg !5426
  %39 = load i32, i32* %arrayidx134, align 4, !dbg !5426
  %cmp135 = icmp eq i32 %39, 1, !dbg !5427
  br i1 %cmp135, label %for.cond138.preheader, label %if.then137, !dbg !5428

for.cond138.preheader:                            ; preds = %if.then128
  br label %for.cond138, !dbg !5429

if.then137:                                       ; preds = %if.then128
  %40 = trunc i64 %indvars.iv30 to i32, !dbg !5431
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i32 %40) #6, !dbg !5431
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %for.inc171, !dbg !5433

for.cond138:                                      ; preds = %for.cond138.preheader, %for.inc157
  %indvars.iv28 = phi i64 [ 0, %for.cond138.preheader ], [ %indvars.iv.next29, %for.inc157 ], !dbg !5434
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !5326, metadata !DIExpression()), !dbg !5435
  %cmp139 = icmp slt i64 %indvars.iv28, %31, !dbg !5436
  br i1 %cmp139, label %for.body141, label %for.end159.loopexit, !dbg !5429

for.body141:                                      ; preds = %for.cond138
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx115, align 8, !dbg !5438
  %call144 = call fastcc i32 @rhs_regno(%struct.rtx_def* %41) #7, !dbg !5438
  %arrayidx146 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv28, !dbg !5440
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx146, align 8, !dbg !5440
  %call147 = call fastcc i32 @rhs_regno(%struct.rtx_def* %42) #7, !dbg !5440
  %cmp148 = icmp eq i32 %call144, %call147, !dbg !5441
  br i1 %cmp148, label %if.then150, label %for.inc157, !dbg !5442

if.then150:                                       ; preds = %for.body141
  %arrayidx146.lcssa = phi %struct.rtx_def** [ %arrayidx146, %for.body141 ], !dbg !5440
  %indvars.iv28.lcssa39 = phi i64 [ %indvars.iv28, %for.body141 ], !dbg !5434
  call void @llvm.dbg.value(metadata i64 %indvars.iv28.lcssa39, metadata !5326, metadata !DIExpression()), !dbg !5435
  %43 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx146.lcssa, align 8, !dbg !5443
  %call153 = call fastcc i32 @rhs_regno(%struct.rtx_def* %43) #7, !dbg !5443
  %idxprom154 = zext i32 %call153 to i64, !dbg !5445
  %arrayidx155 = getelementptr inbounds [53 x i8*], [53 x i8*]* @reg_names, i64 0, i64 %idxprom154, !dbg !5445
  %44 = load i8*, i8** %arrayidx155, align 8, !dbg !5445
  %45 = trunc i64 %indvars.iv30 to i32, !dbg !5446
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.18, i64 0, i64 0), i32 %45, i8* %44) #6, !dbg !5446
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %for.end159, !dbg !5447

for.inc157:                                       ; preds = %for.body141
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !5448
  call void @llvm.dbg.value(metadata i32 undef, metadata !5326, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5435
  br label %for.cond138, !dbg !5449, !llvm.loop !5450

for.end159.loopexit:                              ; preds = %for.cond138
  %indvars.iv28.lcssa = phi i64 [ %indvars.iv28, %for.cond138 ], !dbg !5434
  call void @llvm.dbg.value(metadata i64 %indvars.iv28.lcssa, metadata !5326, metadata !DIExpression()), !dbg !5435
  br label %for.end159, !dbg !5452

for.end159:                                       ; preds = %for.end159.loopexit, %if.then150
  %indvars.iv2840 = phi i64 [ %indvars.iv28.lcssa39, %if.then150 ], [ %indvars.iv28.lcssa, %for.end159.loopexit ]
  %malformed_asm.1 = phi i32 [ 1, %if.then150 ], [ %malformed_asm.0, %for.end159.loopexit ], !dbg !5343
  %j.010 = trunc i64 %indvars.iv2840 to i32, !dbg !5435
  call void @llvm.dbg.value(metadata i32 %malformed_asm.1, metadata !5307, metadata !DIExpression()), !dbg !5343
  %cmp160 = icmp eq i32 %n_clobbers.3, %j.010, !dbg !5452
  br i1 %cmp160, label %if.then162, label %for.inc171, !dbg !5454

if.then162:                                       ; preds = %for.end159
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx115, align 8, !dbg !5455
  %call165 = call fastcc i32 @rhs_regno(%struct.rtx_def* %46) #7, !dbg !5455
  %idxprom166 = zext i32 %call165 to i64, !dbg !5456
  %arrayidx167 = getelementptr inbounds [53 x i8], [53 x i8]* %reg_used_as_output, i64 0, i64 %idxprom166, !dbg !5456
  store i8 1, i8* %arrayidx167, align 1, !dbg !5457
  br label %for.inc171, !dbg !5456

for.inc171:                                       ; preds = %for.body113, %land.lhs.true120, %for.end159, %if.then162, %if.then137
  %malformed_asm.3 = phi i32 [ %malformed_asm.0, %land.lhs.true120 ], [ %malformed_asm.0, %for.body113 ], [ 1, %if.then137 ], [ %malformed_asm.1, %if.then162 ], [ %malformed_asm.1, %for.end159 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.3, metadata !5307, metadata !DIExpression()), !dbg !5343
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !5458
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond110, !dbg !5459, !llvm.loop !5460

for.cond174:                                      ; preds = %for.cond174.preheader, %for.inc182
  %indvars.iv25 = phi i64 [ 8, %for.cond174.preheader ], [ %indvars.iv.next26, %for.inc182 ], !dbg !5462
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !5305, metadata !DIExpression()), !dbg !5343
  %exitcond27 = icmp eq i64 %indvars.iv25, 16, !dbg !5463
  br i1 %exitcond27, label %for.end184, label %for.body177, !dbg !5421

for.body177:                                      ; preds = %for.cond174
  %arrayidx179 = getelementptr inbounds [53 x i8], [53 x i8]* %reg_used_as_output, i64 0, i64 %indvars.iv25, !dbg !5465
  %47 = load i8, i8* %arrayidx179, align 1, !dbg !5465
  %tobool = icmp eq i8 %47, 0, !dbg !5465
  br i1 %tobool, label %for.end184, label %for.inc182, !dbg !5467

for.inc182:                                       ; preds = %for.body177
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !5468
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond174, !dbg !5469, !llvm.loop !5470

for.end184:                                       ; preds = %for.cond174, %for.body177
  %indvars.iv25.lcssa = phi i64 [ %indvars.iv25, %for.cond174 ], [ %indvars.iv25, %for.body177 ], !dbg !5462
  call void @llvm.dbg.value(metadata i64 %indvars.iv25.lcssa, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv25.lcssa, metadata !5305, metadata !DIExpression()), !dbg !5343
  %48 = and i64 %indvars.iv25.lcssa, 4294967295, !dbg !5472
  br label %for.cond185, !dbg !5472

for.cond185:                                      ; preds = %for.inc194, %for.end184
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc194 ], [ %48, %for.end184 ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !5305, metadata !DIExpression()), !dbg !5343
  %49 = trunc i64 %indvars.iv22 to i32, !dbg !5473
  %exitcond24 = icmp eq i64 %indvars.iv22, 16, !dbg !5475
  br i1 %exitcond24, label %for.end196, label %for.body188, !dbg !5473

for.body188:                                      ; preds = %for.cond185
  %arrayidx190 = getelementptr inbounds [53 x i8], [53 x i8]* %reg_used_as_output, i64 0, i64 %indvars.iv22, !dbg !5477
  %50 = load i8, i8* %arrayidx190, align 1, !dbg !5477
  %tobool191 = icmp eq i8 %50, 0, !dbg !5477
  br i1 %tobool191, label %for.inc194, label %for.end196, !dbg !5479

for.inc194:                                       ; preds = %for.body188
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !5480
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond185, !dbg !5481, !llvm.loop !5482

for.end196:                                       ; preds = %for.cond185, %for.body188
  %.lcssa38 = phi i32 [ %49, %for.cond185 ], [ %49, %for.body188 ], !dbg !5473
  call void @llvm.dbg.value(metadata i32 %.lcssa38, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa38, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa38, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa38, metadata !5305, metadata !DIExpression()), !dbg !5343
  %cmp197 = icmp eq i32 %.lcssa38, 16, !dbg !5484
  br i1 %cmp197, label %if.end200, label %if.then199, !dbg !5486

if.then199:                                       ; preds = %for.end196
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !5487
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %if.end200, !dbg !5489

if.end200:                                        ; preds = %for.end196, %if.then199
  %malformed_asm.4 = phi i32 [ 1, %if.then199 ], [ %malformed_asm.0.lcssa, %for.end196 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.4, metadata !5307, metadata !DIExpression()), !dbg !5343
  %call202 = call i8* @memset(i8* nonnull %3, i32 0, i64 53) #6, !dbg !5490
  %51 = load i32, i32* %n_outputs, align 4, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %51, metadata !5317, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %51, metadata !5305, metadata !DIExpression()), !dbg !5343
  %52 = sext i32 %n_clobbers.3 to i64, !dbg !5492
  %53 = sext i32 %51 to i64, !dbg !5492
  br label %for.cond203, !dbg !5492

for.cond203:                                      ; preds = %for.inc254, %if.end200
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.inc254 ], [ %53, %if.end200 ], !dbg !5493
  %54 = phi i32 [ %.pre4, %for.inc254 ], [ %51, %if.end200 ], !dbg !5493
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %54, metadata !5317, metadata !DIExpression()), !dbg !5343
  %55 = load i32, i32* %n_inputs, align 4, !dbg !5494
  call void @llvm.dbg.value(metadata i32 %55, metadata !5316, metadata !DIExpression()), !dbg !5343
  %add = add nsw i32 %54, %55, !dbg !5495
  %56 = sext i32 %add to i64, !dbg !5496
  %cmp204 = icmp slt i64 %indvars.iv20, %56, !dbg !5496
  br i1 %cmp204, label %for.body206, label %for.cond257.preheader, !dbg !5497

for.cond257.preheader:                            ; preds = %for.cond203
  %.lcssa37 = phi i32 [ %54, %for.cond203 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %.lcssa37, metadata !5317, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa37, metadata !5317, metadata !DIExpression()), !dbg !5343
  br label %for.cond257, !dbg !5498

for.body206:                                      ; preds = %for.cond203
  %arrayidx208 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv20, !dbg !5500
  %57 = bitcast %struct.rtx_def** %arrayidx208 to i32**, !dbg !5500
  %58 = load i32*, i32** %57, align 8, !dbg !5500
  %bf.load209 = load i32, i32* %58, align 8, !dbg !5500
  %bf.clear210 = and i32 %bf.load209, 65535, !dbg !5500
  %cmp211 = icmp eq i32 %bf.clear210, 37, !dbg !5500
  br i1 %cmp211, label %land.lhs.true213, label %for.inc254, !dbg !5500

land.lhs.true213:                                 ; preds = %for.body206
  %59 = bitcast i32* %58 to %struct.rtx_def*, !dbg !5500
  %call216 = call fastcc i32 @rhs_regno(%struct.rtx_def* %59) #7, !dbg !5500
  %60 = and i32 %call216, -8, !dbg !5500
  %cmp219 = icmp eq i32 %60, 8, !dbg !5500
  br i1 %cmp219, label %for.cond223.preheader, label %for.inc254, !dbg !5501

for.cond223.preheader:                            ; preds = %land.lhs.true213
  br label %for.cond223, !dbg !5502

for.cond223:                                      ; preds = %for.cond223.preheader, %for.inc235
  %indvars.iv18 = phi i64 [ 0, %for.cond223.preheader ], [ %indvars.iv.next19, %for.inc235 ], !dbg !5504
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !5333, metadata !DIExpression()), !dbg !5505
  %cmp224 = icmp slt i64 %indvars.iv18, %52, !dbg !5506
  br i1 %cmp224, label %for.body226, label %for.end237, !dbg !5502

for.body226:                                      ; preds = %for.cond223
  %arrayidx228 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv18, !dbg !5508
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx228, align 8, !dbg !5508
  %62 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx208, align 8, !dbg !5510
  %call231 = call i32 @operands_match_p(%struct.rtx_def* %61, %struct.rtx_def* %62) #6, !dbg !5511
  %tobool232 = icmp eq i32 %call231, 0, !dbg !5511
  br i1 %tobool232, label %for.inc235, label %for.end237, !dbg !5512

for.inc235:                                       ; preds = %for.body226
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !5513
  call void @llvm.dbg.value(metadata i32 undef, metadata !5333, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5505
  br label %for.cond223, !dbg !5514, !llvm.loop !5515

for.end237:                                       ; preds = %for.body226, %for.cond223
  %cmp224.lcssa = phi i1 [ %cmp224, %for.body226 ], [ %cmp224, %for.cond223 ], !dbg !5506
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !5333, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !5333, metadata !DIExpression()), !dbg !5505
  br i1 %cmp224.lcssa, label %if.then246, label %lor.lhs.false, !dbg !5517

lor.lhs.false:                                    ; preds = %for.end237
  %matches = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv20, i64 %idxprom131, i32 3, !dbg !5519
  %63 = load i32, i32* %matches, align 16, !dbg !5519
  %cmp244 = icmp sgt i32 %63, -1, !dbg !5520
  br i1 %cmp244, label %if.then246, label %for.inc254, !dbg !5521

if.then246:                                       ; preds = %lor.lhs.false, %for.end237
  %64 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx208, align 8, !dbg !5522
  %call249 = call fastcc i32 @rhs_regno(%struct.rtx_def* %64) #7, !dbg !5522
  %idxprom250 = zext i32 %call249 to i64, !dbg !5523
  %arrayidx251 = getelementptr inbounds [53 x i8], [53 x i8]* %implicitly_dies, i64 0, i64 %idxprom250, !dbg !5523
  store i8 1, i8* %arrayidx251, align 1, !dbg !5524
  br label %for.inc254, !dbg !5523

for.inc254:                                       ; preds = %for.body206, %land.lhs.true213, %if.then246, %lor.lhs.false
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1, !dbg !5525
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  %.pre4 = load i32, i32* %n_outputs, align 4, !dbg !5493
  br label %for.cond203, !dbg !5526, !llvm.loop !5527

for.cond257:                                      ; preds = %for.cond257.preheader, %for.inc266
  %indvars.iv15 = phi i64 [ 8, %for.cond257.preheader ], [ %indvars.iv.next16, %for.inc266 ], !dbg !5529
  call void @llvm.dbg.value(metadata i64 %indvars.iv15, metadata !5305, metadata !DIExpression()), !dbg !5343
  %exitcond17 = icmp eq i64 %indvars.iv15, 16, !dbg !5530
  br i1 %exitcond17, label %for.end268, label %for.body260, !dbg !5498

for.body260:                                      ; preds = %for.cond257
  %arrayidx262 = getelementptr inbounds [53 x i8], [53 x i8]* %implicitly_dies, i64 0, i64 %indvars.iv15, !dbg !5532
  %65 = load i8, i8* %arrayidx262, align 1, !dbg !5532
  %tobool263 = icmp eq i8 %65, 0, !dbg !5532
  br i1 %tobool263, label %for.end268, label %for.inc266, !dbg !5534

for.inc266:                                       ; preds = %for.body260
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !5535
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond257, !dbg !5536, !llvm.loop !5537

for.end268:                                       ; preds = %for.cond257, %for.body260
  %indvars.iv15.lcssa = phi i64 [ %indvars.iv15, %for.cond257 ], [ %indvars.iv15, %for.body260 ], !dbg !5529
  call void @llvm.dbg.value(metadata i64 %indvars.iv15.lcssa, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv15.lcssa, metadata !5305, metadata !DIExpression()), !dbg !5343
  %66 = and i64 %indvars.iv15.lcssa, 4294967295, !dbg !5539
  br label %for.cond269, !dbg !5539

for.cond269:                                      ; preds = %for.inc278, %for.end268
  %indvars.iv13 = phi i64 [ %indvars.iv.next14, %for.inc278 ], [ %66, %for.end268 ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv13, metadata !5305, metadata !DIExpression()), !dbg !5343
  %67 = trunc i64 %indvars.iv13 to i32, !dbg !5540
  %exitcond = icmp eq i64 %indvars.iv13, 16, !dbg !5542
  br i1 %exitcond, label %for.end280, label %for.body272, !dbg !5540

for.body272:                                      ; preds = %for.cond269
  %arrayidx274 = getelementptr inbounds [53 x i8], [53 x i8]* %implicitly_dies, i64 0, i64 %indvars.iv13, !dbg !5544
  %68 = load i8, i8* %arrayidx274, align 1, !dbg !5544
  %tobool275 = icmp eq i8 %68, 0, !dbg !5544
  br i1 %tobool275, label %for.inc278, label %for.end280, !dbg !5546

for.inc278:                                       ; preds = %for.body272
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !5547
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond269, !dbg !5548, !llvm.loop !5549

for.end280:                                       ; preds = %for.cond269, %for.body272
  %.lcssa36 = phi i32 [ %67, %for.cond269 ], [ %67, %for.body272 ], !dbg !5540
  call void @llvm.dbg.value(metadata i32 %.lcssa36, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa36, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa36, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa36, metadata !5305, metadata !DIExpression()), !dbg !5343
  %cmp281 = icmp eq i32 %.lcssa36, 16, !dbg !5551
  br i1 %cmp281, label %if.end284, label %if.then283, !dbg !5553

if.then283:                                       ; preds = %for.end280
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !5554
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  %.pre5 = load i32, i32* %n_outputs, align 4, !dbg !5556
  br label %if.end284, !dbg !5557

if.end284:                                        ; preds = %for.end280, %if.then283
  %69 = phi i32 [ %.pre5, %if.then283 ], [ %.lcssa37, %for.end280 ], !dbg !5556
  %malformed_asm.5 = phi i32 [ 1, %if.then283 ], [ %malformed_asm.4, %for.end280 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.5, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %69, metadata !5317, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %69, metadata !5305, metadata !DIExpression()), !dbg !5343
  %70 = sext i32 %69 to i64, !dbg !5558
  br label %for.cond285, !dbg !5558

for.cond285:                                      ; preds = %for.inc315, %if.end284
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %for.inc315 ], [ %70, %if.end284 ]
  %71 = phi i32 [ %81, %for.inc315 ], [ %69, %if.end284 ]
  %72 = phi i32 [ %82, %for.inc315 ], [ %69, %if.end284 ], !dbg !5559
  %malformed_asm.6 = phi i32 [ %malformed_asm.9, %for.inc315 ], [ %malformed_asm.5, %if.end284 ], !dbg !5560
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !5305, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.6, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %72, metadata !5317, metadata !DIExpression()), !dbg !5343
  %73 = load i32, i32* %n_inputs, align 4, !dbg !5561
  call void @llvm.dbg.value(metadata i32 %73, metadata !5316, metadata !DIExpression()), !dbg !5343
  %add286 = add nsw i32 %72, %73, !dbg !5562
  %74 = sext i32 %add286 to i64, !dbg !5563
  %cmp287 = icmp slt i64 %indvars.iv11, %74, !dbg !5563
  br i1 %cmp287, label %for.body289, label %for.end317, !dbg !5564

for.body289:                                      ; preds = %for.cond285
  %matches294 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv11, i64 %idxprom131, i32 3, !dbg !5565
  %75 = load i32, i32* %matches294, align 16, !dbg !5565
  %cmp295 = icmp eq i32 %75, -1, !dbg !5566
  br i1 %cmp295, label %for.cond299.preheader, label %for.inc315, !dbg !5567

for.cond299.preheader:                            ; preds = %for.body289
  %arrayidx306 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv11, !dbg !5568
  br label %for.cond299, !dbg !5572

for.cond299:                                      ; preds = %for.cond299.preheader, %for.inc311
  %indvars.iv = phi i64 [ 0, %for.cond299.preheader ], [ %indvars.iv.next, %for.inc311 ], !dbg !5573
  %76 = phi i32 [ %71, %for.cond299.preheader ], [ %.pre6, %for.inc311 ], !dbg !5573
  %malformed_asm.7 = phi i32 [ %malformed_asm.6, %for.cond299.preheader ], [ %malformed_asm.8, %for.inc311 ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5338, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32 %malformed_asm.7, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %76, metadata !5317, metadata !DIExpression()), !dbg !5343
  %77 = sext i32 %76 to i64, !dbg !5575
  %cmp300 = icmp slt i64 %indvars.iv, %77, !dbg !5575
  br i1 %cmp300, label %for.body302, label %for.inc315.loopexit, !dbg !5572

for.body302:                                      ; preds = %for.cond299
  %arrayidx304 = getelementptr inbounds %struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv, !dbg !5576
  %78 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx304, align 8, !dbg !5576
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx306, align 8, !dbg !5577
  %call307 = call i32 @operands_match_p(%struct.rtx_def* %78, %struct.rtx_def* %79) #6, !dbg !5578
  %tobool308 = icmp eq i32 %call307, 0, !dbg !5578
  br i1 %tobool308, label %for.inc311, label %if.then309, !dbg !5579

if.then309:                                       ; preds = %for.body302
  %80 = trunc i64 %indvars.iv to i32, !dbg !5580
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i32 %80) #6, !dbg !5580
  call void @llvm.dbg.value(metadata i32 1, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %for.inc311, !dbg !5582

for.inc311:                                       ; preds = %for.body302, %if.then309
  %malformed_asm.8 = phi i32 [ 1, %if.then309 ], [ %malformed_asm.7, %for.body302 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.8, metadata !5307, metadata !DIExpression()), !dbg !5343
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5583
  call void @llvm.dbg.value(metadata i32 undef, metadata !5338, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5574
  %.pre6 = load i32, i32* %n_outputs, align 4, !dbg !5573
  br label %for.cond299, !dbg !5584, !llvm.loop !5585

for.inc315.loopexit:                              ; preds = %for.cond299
  %.lcssa = phi i32 [ %76, %for.cond299 ], !dbg !5573
  %malformed_asm.7.lcssa = phi i32 [ %malformed_asm.7, %for.cond299 ], !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5317, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.7.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5317, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.7.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.7.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  br label %for.inc315, !dbg !5587

for.inc315:                                       ; preds = %for.inc315.loopexit, %for.body289
  %81 = phi i32 [ %71, %for.body289 ], [ %.lcssa, %for.inc315.loopexit ]
  %82 = phi i32 [ %72, %for.body289 ], [ %.lcssa, %for.inc315.loopexit ]
  %malformed_asm.9 = phi i32 [ %malformed_asm.6, %for.body289 ], [ %malformed_asm.7.lcssa, %for.inc315.loopexit ], !dbg !5560
  call void @llvm.dbg.value(metadata i32 %malformed_asm.9, metadata !5307, metadata !DIExpression()), !dbg !5343
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, 1, !dbg !5587
  call void @llvm.dbg.value(metadata i32 undef, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  br label %for.cond285, !dbg !5588, !llvm.loop !5589

for.end317:                                       ; preds = %for.cond285
  %malformed_asm.6.lcssa = phi i32 [ %malformed_asm.6, %for.cond285 ], !dbg !5560
  call void @llvm.dbg.value(metadata i32 %malformed_asm.6.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.6.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %malformed_asm.6.lcssa, metadata !5307, metadata !DIExpression()), !dbg !5343
  %tobool318 = icmp eq i32 %malformed_asm.6.lcssa, 0, !dbg !5591
  br i1 %tobool318, label %cleanup, label %if.then319, !dbg !5593

if.then319:                                       ; preds = %for.end317
  %83 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5594
  %call320 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %83) #6, !dbg !5594
  store %struct.rtx_def* %call320, %struct.rtx_def** %rt_rtx, align 8, !dbg !5596
  store i1 true, i1* @any_malformed_asm, align 1, !dbg !5597
  br label %cleanup, !dbg !5598

cleanup:                                          ; preds = %for.end317, %if.then319, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then319 ], [ 1, %for.end317 ], !dbg !5343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8, !dbg !5599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !5599
  call void @llvm.lifetime.end.p0i8(i64 53, i8* nonnull %3) #8, !dbg !5599
  call void @llvm.lifetime.end.p0i8(i64 53, i8* nonnull %2) #8, !dbg !5599
  ret i32 %retval.0, !dbg !5599
}

declare dso_local void @extract_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @constrain_operands(i32) local_unnamed_addr #2

declare dso_local void @preprocess_constraints() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @get_asm_operands_in_out(%struct.rtx_def* %body, i32* %pout, i32* %pin) unnamed_addr #5 !dbg !5600 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !5605, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32* %pout, metadata !5606, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32* %pin, metadata !5607, metadata !DIExpression()), !dbg !5609
  %call = tail call %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %body) #6, !dbg !5610
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5608, metadata !DIExpression()), !dbg !5609
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !5611
  %rt_rtvec = bitcast %struct.object_block** %arrayidx to %struct.rtvec_def**, !dbg !5611
  %0 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5611
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 0, !dbg !5611
  %1 = load i32, i32* %num_elem, align 8, !dbg !5611
  store i32 %1, i32* %pin, align 4, !dbg !5612
  %2 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i64 0, i32 7), align 2, !dbg !5613
  %conv = sext i8 %2 to i32, !dbg !5614
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5615
  %num_elem5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !5615
  %4 = load i32, i32* %num_elem5, align 8, !dbg !5615
  %sub = sub nsw i32 %conv, %4, !dbg !5616
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !5617
  %5 = getelementptr inbounds %union.u, %union.u* %u6, i64 1, i32 0, i32 0, i64 0, !dbg !5617
  %rt_rtvec9 = bitcast %union.rtunion_def* %5 to %struct.rtvec_def**, !dbg !5617
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec9, align 8, !dbg !5617
  %num_elem10 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !5617
  %7 = load i32, i32* %num_elem10, align 8, !dbg !5617
  %sub11 = sub nsw i32 %sub, %7, !dbg !5618
  store i32 %sub11, i32* %pout, align 4, !dbg !5619
  ret void, !dbg !5620
}

declare dso_local i32 @reg_class_subset_p(i32, i32) local_unnamed_addr #2

declare dso_local i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @error_for_asm(%struct.rtx_def*, i8*, ...) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @extract_asm_operands(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %dest) unnamed_addr #5 !dbg !5621 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5623, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !5624, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !5625, metadata !DIExpression()), !dbg !5627
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest) #7, !dbg !5628
  %sub = add i32 %call, -8, !dbg !5628
  %idxprom = zext i32 %sub to i64, !dbg !5628
  %arrayidx1 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom, i64 38, !dbg !5628
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1, align 8, !dbg !5628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5625, metadata !DIExpression()), !dbg !5627
  %1 = load %struct.rtx_def*, %struct.rtx_def** @not_a_num, align 8, !dbg !5629
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %1) #6, !dbg !5629
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5626, metadata !DIExpression()), !dbg !5627
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5630
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5630
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5630
  store %struct.rtx_def* %call2, %struct.rtx_def** %rt_rtx, align 8, !dbg !5631
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !5632
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !5632
  store i32 -1, i32* %rt_int, align 8, !dbg !5633
  %call7 = tail call fastcc zeroext i8 @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %call2) #7, !dbg !5634
  ret i8 %call7, !dbg !5635
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat) unnamed_addr #5 !dbg !5636 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5638, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !5639, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5640, metadata !DIExpression()), !dbg !5661
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5662
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5662
  %call = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx) #7, !dbg !5663
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !5641, metadata !DIExpression()), !dbg !5661
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5664
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5664
  %call5 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx4) #7, !dbg !5665
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call5, metadata !5642, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.value(metadata i8 0, metadata !5646, metadata !DIExpression()), !dbg !5661
  %1 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5643, metadata !DIExpression()), !dbg !5661
  %2 = load %struct.rtx_def*, %struct.rtx_def** %call5, align 8, !dbg !5667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5644, metadata !DIExpression()), !dbg !5661
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5668
  %bf.load = load i32, i32* %3, align 8, !dbg !5668
  %bf.clear = and i32 %bf.load, 65535, !dbg !5668
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5668
  br i1 %cmp, label %land.lhs.true, label %if.else107, !dbg !5668

land.lhs.true:                                    ; preds = %entry
  %call6 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5668
  %4 = and i32 %call6, -8, !dbg !5668
  %cmp7 = icmp eq i32 %4, 8, !dbg !5668
  br i1 %cmp7, label %land.lhs.true9, label %if.else107, !dbg !5669

land.lhs.true9:                                   ; preds = %land.lhs.true
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !5670
  %bf.load10 = load i32, i32* %5, align 8, !dbg !5670
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5670
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !5670
  br i1 %cmp12, label %land.lhs.true14, label %if.else107, !dbg !5670

land.lhs.true14:                                  ; preds = %land.lhs.true9
  %call15 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5670
  %6 = and i32 %call15, -8, !dbg !5670
  %cmp18 = icmp eq i32 %6, 8, !dbg !5670
  br i1 %cmp18, label %if.then, label %if.else107, !dbg !5671

if.then:                                          ; preds = %land.lhs.true14
  %call20 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5672
  %call21 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call20) #6, !dbg !5673
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !5645, metadata !DIExpression()), !dbg !5661
  %tobool = icmp eq %struct.rtx_def* %call21, null, !dbg !5674
  %call23 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5675
  %call24 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5675
  br i1 %tobool, label %if.end69, label %if.then22, !dbg !5676

if.then22:                                        ; preds = %if.then
  %cmp25 = icmp eq i32 %call23, %call24, !dbg !5677
  br i1 %cmp25, label %cond.true, label %cond.end, !dbg !5677

cond.true:                                        ; preds = %if.then22
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 968, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5677
  br label %cond.end, !dbg !5677

cond.end:                                         ; preds = %if.then22, %cond.true
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5678
  %7 = load i32, i32* %top, align 8, !dbg !5678
  call void @llvm.dbg.value(metadata i32 %7, metadata !5647, metadata !DIExpression()), !dbg !5680
  %8 = sext i32 %7 to i64, !dbg !5681
  br label %for.cond, !dbg !5681

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %8, %cond.end ], !dbg !5682
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5647, metadata !DIExpression()), !dbg !5680
  %cmp27 = icmp sgt i64 %indvars.iv, -1, !dbg !5683
  %9 = trunc i64 %indvars.iv to i32, !dbg !5685
  br i1 %cmp27, label %for.body, label %for.end, !dbg !5685

for.body:                                         ; preds = %for.cond
  %arrayidx29 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv, !dbg !5686
  %10 = load i8, i8* %arrayidx29, align 1, !dbg !5686
  %conv30 = zext i8 %10 to i32, !dbg !5686
  %call31 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5688
  %cmp32 = icmp eq i32 %call31, %conv30, !dbg !5689
  br i1 %cmp32, label %for.end, label %for.inc, !dbg !5690

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5691
  call void @llvm.dbg.value(metadata i32 undef, metadata !5647, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5680
  br label %for.cond, !dbg !5692, !llvm.loop !5693

for.end:                                          ; preds = %for.body, %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.body ], [ %indvars.iv, %for.cond ], !dbg !5682
  %.lcssa = phi i32 [ %9, %for.body ], [ %9, %for.cond ], !dbg !5685
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5647, metadata !DIExpression()), !dbg !5680
  %call35 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !5695
  %cmp36 = icmp slt i32 %call35, 8, !dbg !5695
  br i1 %cmp36, label %cond.end40, label %cond.true38, !dbg !5695

cond.true38:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 975, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5695
  br label %cond.end40, !dbg !5695

cond.end40:                                       ; preds = %for.end, %cond.true38
  %cmp42 = icmp slt i32 %.lcssa, 0, !dbg !5696
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !5698

if.then44:                                        ; preds = %cond.end40
  %call45 = tail call fastcc zeroext i8 @move_nan_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !5699
  br label %cleanup256, !dbg !5700

if.end46:                                         ; preds = %cond.end40
  %call47 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5701
  %call48 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 6, i32 %call47) #6, !dbg !5703
  %tobool49 = icmp eq %struct.rtx_def* %call48, null, !dbg !5703
  br i1 %tobool49, label %if.else, label %if.then50, !dbg !5704

if.then50:                                        ; preds = %if.end46
  %call51 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %1, i32 0) #7, !dbg !5705
  br label %if.end62, !dbg !5705

if.else:                                          ; preds = %if.end46
  %call52 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5706
  %conv53 = trunc i32 %call52 to i8, !dbg !5706
  %sext = shl i64 %indvars.iv.lcssa, 32, !dbg !5708
  %idxprom55 = ashr exact i64 %sext, 32, !dbg !5708
  %arrayidx56 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom55, !dbg !5708
  store i8 %conv53, i8* %arrayidx56, align 1, !dbg !5709
  %call57 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5710
  %sh_prom = zext i32 %call57 to i64, !dbg !5710
  %shl = shl i64 1, %sh_prom, !dbg !5710
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !5710
  %11 = load i64, i64* %reg_set, align 8, !dbg !5710
  %or = or i64 %11, %shl, !dbg !5710
  store i64 %or, i64* %reg_set, align 8, !dbg !5710
  %call58 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5711
  %sh_prom59 = zext i32 %call58 to i64, !dbg !5711
  %shl60 = shl i64 1, %sh_prom59, !dbg !5711
  %neg = xor i64 %shl60, -1, !dbg !5711
  %12 = load i64, i64* %reg_set, align 8, !dbg !5711
  %and = and i64 %12, %neg, !dbg !5711
  store i64 %and, i64* %reg_set, align 8, !dbg !5711
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then50
  %call63 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %insn) #6, !dbg !5712
  call void @llvm.dbg.value(metadata i8 %call63, metadata !5646, metadata !DIExpression()), !dbg !5661
  %call68 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !5713
  br label %cleanup256, !dbg !5714

if.end69:                                         ; preds = %if.then
  %cmp72 = icmp eq i32 %call23, %call24, !dbg !5715
  br i1 %cmp72, label %if.then74, label %if.end87, !dbg !5717

if.then74:                                        ; preds = %if.end69
  %call75 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5718
  %call76 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 6, i32 %call75) #6, !dbg !5721
  %tobool77 = icmp eq %struct.rtx_def* %call76, null, !dbg !5721
  br i1 %tobool77, label %if.end80, label %if.then78, !dbg !5722

if.then78:                                        ; preds = %if.then74
  %call79 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %2, i32 0) #7, !dbg !5723
  br label %if.end80, !dbg !5723

if.end80:                                         ; preds = %if.then74, %if.then78
  %call81 = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %insn) #6, !dbg !5724
  call void @llvm.dbg.value(metadata i8 %call81, metadata !5646, metadata !DIExpression()), !dbg !5661
  %call86 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #6, !dbg !5725
  br label %cleanup256, !dbg !5726

if.end87:                                         ; preds = %if.end69
  %call88 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !5727
  %cmp89 = icmp slt i32 %call88, 8, !dbg !5727
  br i1 %cmp89, label %cond.end93, label %cond.true91, !dbg !5727

cond.true91:                                      ; preds = %if.end87
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1017, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5727
  br label %cond.end93, !dbg !5727

cond.end93:                                       ; preds = %if.end87, %cond.true91
  %call95 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %1) #7, !dbg !5728
  tail call fastcc void @replace_reg(%struct.rtx_def** %call, i32 %call95) #7, !dbg !5729
  %call96 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5730
  %conv97 = trunc i32 %call96 to i8, !dbg !5730
  %top99 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5731
  %13 = load i32, i32* %top99, align 8, !dbg !5732
  %inc = add nsw i32 %13, 1, !dbg !5732
  store i32 %inc, i32* %top99, align 8, !dbg !5732
  %idxprom100 = sext i32 %inc to i64, !dbg !5733
  %arrayidx101 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom100, !dbg !5733
  store i8 %conv97, i8* %arrayidx101, align 1, !dbg !5734
  %call102 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5735
  %sh_prom103 = zext i32 %call102 to i64, !dbg !5735
  %shl104 = shl i64 1, %sh_prom103, !dbg !5735
  %reg_set105 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !5735
  %14 = load i64, i64* %reg_set105, align 8, !dbg !5735
  %or106 = or i64 %14, %shl104, !dbg !5735
  store i64 %or106, i64* %reg_set105, align 8, !dbg !5735
  tail call fastcc void @replace_reg(%struct.rtx_def** %call5, i32 8) #7, !dbg !5736
  br label %cleanup256, !dbg !5737

if.else107:                                       ; preds = %land.lhs.true14, %land.lhs.true9, %land.lhs.true, %entry
  %bf.load108 = load i32, i32* %3, align 8, !dbg !5738
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !5738
  %cmp110 = icmp eq i32 %bf.clear109, 37, !dbg !5738
  br i1 %cmp110, label %land.lhs.true112, label %if.else154, !dbg !5738

land.lhs.true112:                                 ; preds = %if.else107
  %call113 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5738
  %15 = and i32 %call113, -8, !dbg !5738
  %cmp116 = icmp eq i32 %15, 8, !dbg !5738
  br i1 %cmp116, label %if.then118, label %if.else154, !dbg !5739

if.then118:                                       ; preds = %land.lhs.true112
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %1) #7, !dbg !5740
  %call119 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5741
  %call120 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call119) #6, !dbg !5742
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !5645, metadata !DIExpression()), !dbg !5661
  %tobool121 = icmp eq %struct.rtx_def* %call120, null, !dbg !5743
  br i1 %tobool121, label %if.else135, label %if.then122, !dbg !5744

if.then122:                                       ; preds = %if.then118
  %arrayidx125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call120, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5745
  %rt_rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**, !dbg !5745
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx126, i32 8) #7, !dbg !5747
  %top127 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5748
  %16 = load i32, i32* %top127, align 8, !dbg !5749
  %dec128 = add nsw i32 %16, -1, !dbg !5749
  store i32 %dec128, i32* %top127, align 8, !dbg !5749
  %call129 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !5750
  %sh_prom130 = zext i32 %call129 to i64, !dbg !5750
  %shl131 = shl i64 1, %sh_prom130, !dbg !5750
  %neg132 = xor i64 %shl131, -1, !dbg !5750
  %reg_set133 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !5750
  %17 = load i64, i64* %reg_set133, align 8, !dbg !5750
  %and134 = and i64 %17, %neg132, !dbg !5750
  store i64 %and134, i64* %reg_set133, align 8, !dbg !5750
  br label %if.end153, !dbg !5751

if.else135:                                       ; preds = %if.then118
  %bf.load136 = load i32, i32* %3, align 8, !dbg !5752
  %bf.clear137 = and i32 %bf.load136, 16711680, !dbg !5752
  %cmp138 = icmp eq i32 %bf.clear137, 2621440, !dbg !5753
  br i1 %cmp138, label %land.lhs.true140, label %if.end153, !dbg !5754

land.lhs.true140:                                 ; preds = %if.else135
  %top141 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5755
  %18 = load i32, i32* %top141, align 8, !dbg !5755
  %cmp142 = icmp slt i32 %18, 7, !dbg !5756
  br i1 %cmp142, label %if.then144, label %if.end153, !dbg !5757

if.then144:                                       ; preds = %land.lhs.true140
  %bf.lshr146 = lshr i32 %bf.load136, 16, !dbg !5758
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !5758
  %idxprom148 = zext i32 %bf.clear147 to i64, !dbg !5758
  %arrayidx149 = getelementptr inbounds [8 x [87 x %struct.rtx_def*]], [8 x [87 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom148, !dbg !5758
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx149, align 8, !dbg !5758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5658, metadata !DIExpression()), !dbg !5759
  %call150 = tail call %struct.rtx_def* @gen_movxf(%struct.rtx_def* %19, %struct.rtx_def* %19) #6, !dbg !5760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call150, metadata !5652, metadata !DIExpression()), !dbg !5759
  %call151 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call150, %struct.rtx_def* %insn) #6, !dbg !5761
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 1, %struct.rtx_def* %19) #6, !dbg !5762
  br label %if.end153, !dbg !5763

if.end153:                                        ; preds = %if.else135, %land.lhs.true140, %if.then144, %if.then122
  tail call fastcc void @replace_reg(%struct.rtx_def** %call, i32 8) #7, !dbg !5764
  br label %cleanup256, !dbg !5765

if.else154:                                       ; preds = %land.lhs.true112, %if.else107
  %u156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5766
  %20 = getelementptr inbounds %union.u, %union.u* %u156, i64 1, i32 0, i32 0, i64 0, !dbg !5766
  %rt_rtx159 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !5766
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx159, align 8, !dbg !5766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !5659, metadata !DIExpression()), !dbg !5767
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !5768
  %bf.load160 = load i32, i32* %22, align 8, !dbg !5768
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !5768
  %cmp162 = icmp eq i32 %bf.clear161, 37, !dbg !5768
  br i1 %cmp162, label %land.lhs.true164, label %cond.true170, !dbg !5768

land.lhs.true164:                                 ; preds = %if.else154
  %call165 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5768
  %23 = and i32 %call165, -8, !dbg !5768
  %cmp168 = icmp eq i32 %23, 8, !dbg !5768
  br i1 %cmp168, label %cond.end172, label %cond.true170, !dbg !5768

cond.true170:                                     ; preds = %land.lhs.true164, %if.else154
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1064, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5768
  br label %cond.end172, !dbg !5768

cond.end172:                                      ; preds = %land.lhs.true164, %cond.true170
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !5769
  %bf.load174 = load i32, i32* %24, align 8, !dbg !5769
  %bf.clear175 = and i32 %bf.load174, 65535, !dbg !5769
  %cmp176 = icmp eq i32 %bf.clear175, 15, !dbg !5771
  br i1 %cmp176, label %land.lhs.true178, label %if.else226, !dbg !5772

land.lhs.true178:                                 ; preds = %cond.end172
  %arrayidx181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5773
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtvec_def**, !dbg !5773
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5773
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 0, !dbg !5773
  %26 = load i32, i32* %num_elem, align 8, !dbg !5773
  %cmp182 = icmp eq i32 %26, 2, !dbg !5774
  br i1 %cmp182, label %land.lhs.true184, label %if.else226, !dbg !5775

land.lhs.true184:                                 ; preds = %land.lhs.true178
  %arrayidx189 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 1, i64 1, !dbg !5776
  %27 = bitcast %struct.rtx_def** %arrayidx189 to i32**, !dbg !5776
  %28 = load i32*, i32** %27, align 8, !dbg !5776
  %bf.load190 = load i32, i32* %28, align 8, !dbg !5776
  %bf.clear191 = and i32 %bf.load190, 65535, !dbg !5776
  %cmp192 = icmp eq i32 %bf.clear191, 23, !dbg !5777
  br i1 %cmp192, label %land.lhs.true194, label %if.else226, !dbg !5778

land.lhs.true194:                                 ; preds = %land.lhs.true184
  %29 = getelementptr inbounds i32, i32* %28, i64 4, !dbg !5779
  %30 = bitcast i32* %29 to i32**, !dbg !5779
  %31 = load i32*, i32** %30, align 8, !dbg !5779
  %bf.load205 = load i32, i32* %31, align 8, !dbg !5779
  %bf.clear206 = and i32 %bf.load205, 65535, !dbg !5779
  %cmp207 = icmp eq i32 %bf.clear206, 18, !dbg !5780
  br i1 %cmp207, label %land.lhs.true209, label %if.else226, !dbg !5781

land.lhs.true209:                                 ; preds = %land.lhs.true194
  %32 = getelementptr inbounds i32, i32* %31, i64 4, !dbg !5782
  %33 = load i32, i32* %32, align 8, !dbg !5782
  %cmp223 = icmp eq i32 %33, 68, !dbg !5783
  br i1 %cmp223, label %if.then225, label %if.else226, !dbg !5784

if.then225:                                       ; preds = %land.lhs.true209
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !5785
  br label %if.end234, !dbg !5785

if.else226:                                       ; preds = %land.lhs.true209, %land.lhs.true194, %land.lhs.true184, %land.lhs.true178, %cond.end172
  %call227 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %2) #7, !dbg !5786
  %cmp228 = icmp slt i32 %call227, 8, !dbg !5786
  br i1 %cmp228, label %if.end234, label %cond.true230, !dbg !5786

cond.true230:                                     ; preds = %if.else226
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1082, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5786
  br label %if.end234, !dbg !5786

if.end234:                                        ; preds = %cond.true230, %if.else226, %if.then225
  %top235 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !5787
  %34 = load i32, i32* %top235, align 8, !dbg !5787
  %cmp236 = icmp slt i32 %34, 8, !dbg !5787
  br i1 %cmp236, label %cond.end240, label %cond.true238, !dbg !5787

cond.true238:                                     ; preds = %if.end234
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 1084, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5787
  br label %cond.end240, !dbg !5787

cond.end240:                                      ; preds = %if.end234, %cond.true238
  %call242 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5788
  %conv243 = trunc i32 %call242 to i8, !dbg !5788
  %35 = load i32, i32* %top235, align 8, !dbg !5789
  %inc246 = add nsw i32 %35, 1, !dbg !5789
  store i32 %inc246, i32* %top235, align 8, !dbg !5789
  %idxprom247 = sext i32 %inc246 to i64, !dbg !5790
  %arrayidx248 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom247, !dbg !5790
  store i8 %conv243, i8* %arrayidx248, align 1, !dbg !5791
  %call249 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5792
  %sh_prom250 = zext i32 %call249 to i64, !dbg !5792
  %shl251 = shl i64 1, %sh_prom250, !dbg !5792
  %reg_set252 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !5792
  %36 = load i64, i64* %reg_set252, align 8, !dbg !5792
  %or253 = or i64 %36, %shl251, !dbg !5792
  store i64 %or253, i64* %reg_set252, align 8, !dbg !5792
  tail call fastcc void @replace_reg(%struct.rtx_def** %call5, i32 8) #7, !dbg !5793
  br label %cleanup256

cleanup256:                                       ; preds = %cond.end93, %cond.end240, %if.end153, %if.then44, %if.end62, %if.end80
  %retval.1 = phi i8 [ %call81, %if.end80 ], [ %call45, %if.then44 ], [ %call63, %if.end62 ], [ 0, %if.end153 ], [ 0, %cond.end240 ], [ 0, %cond.end93 ], !dbg !5661
  ret i8 %retval.1, !dbg !5794
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat_src) unnamed_addr #5 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5797, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !5798, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_src, metadata !5799, metadata !DIExpression()), !dbg !5807
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5808
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5808
  %call = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx) #7, !dbg !5809
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !5800, metadata !DIExpression()), !dbg !5807
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_src, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5810
  %rt_rtx4 = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5810
  %call5 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx4) #7, !dbg !5811
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call5, metadata !5801, metadata !DIExpression()), !dbg !5807
  %1 = bitcast %struct.rtx_def** %call to i32**, !dbg !5812
  %2 = load i32*, i32** %1, align 8, !dbg !5812
  %bf.load = load i32, i32* %2, align 8, !dbg !5812
  %bf.clear = and i32 %bf.load, 65535, !dbg !5812
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5812
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true23, !dbg !5812

land.lhs.true:                                    ; preds = %entry
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !5812
  %call6 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !5812
  %4 = and i32 %call6, -8, !dbg !5812
  %cmp7 = icmp eq i32 %4, 8, !dbg !5812
  br i1 %cmp7, label %lor.lhs.false, label %land.lhs.true23, !dbg !5813

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = bitcast %struct.rtx_def** %call5 to i32**, !dbg !5814
  %6 = load i32*, i32** %5, align 8, !dbg !5814
  %bf.load9 = load i32, i32* %6, align 8, !dbg !5814
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5814
  %cmp11 = icmp eq i32 %bf.clear10, 37, !dbg !5814
  br i1 %cmp11, label %land.lhs.true13, label %if.end, !dbg !5814

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !5814
  %call14 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !5814
  %8 = and i32 %call14, -8, !dbg !5814
  %cmp17 = icmp eq i32 %8, 8, !dbg !5814
  br i1 %cmp17, label %land.lhs.true19, label %if.end, !dbg !5815

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %9 = load %struct.rtx_def*, %struct.rtx_def** %call5, align 8, !dbg !5816
  %call20 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %9) #7, !dbg !5817
  %cmp21 = icmp eq i32 %call20, 8, !dbg !5818
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !5819

land.lhs.true23:                                  ; preds = %land.lhs.true19, %land.lhs.true, %entry
  %call24 = tail call fastcc i32 @swap_rtx_condition(%struct.rtx_def* %insn) #7, !dbg !5820
  %tobool = icmp eq i32 %call24, 0, !dbg !5820
  br i1 %tobool, label %if.end, label %if.then, !dbg !5821

if.then:                                          ; preds = %land.lhs.true23
  %10 = bitcast %union.rtunion_def* %arrayidx to i64*, !dbg !5822
  %11 = load i64, i64* %10, align 8, !dbg !5822
  %12 = bitcast %union.rtunion_def* %0 to i64*, !dbg !5823
  %13 = load i64, i64* %12, align 8, !dbg !5823
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_src, i64 0, i32 1, !dbg !5824
  %14 = bitcast %union.u* %u33 to i64*, !dbg !5825
  store i64 %13, i64* %14, align 8, !dbg !5825
  store i64 %11, i64* %12, align 8, !dbg !5826
  %call45 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx) #7, !dbg !5827
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call45, metadata !5800, metadata !DIExpression()), !dbg !5807
  %call50 = tail call fastcc %struct.rtx_def** @get_true_reg(%struct.rtx_def** nonnull %rt_rtx4) #7, !dbg !5828
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call50, metadata !5801, metadata !DIExpression()), !dbg !5807
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5829
  %15 = getelementptr inbounds %union.u, %union.u* %u51, i64 1, i32 0, i32 0, i64 1, !dbg !5829
  %rt_int = bitcast %union.rtunion_def* %15 to i32*, !dbg !5829
  store i32 -1, i32* %rt_int, align 8, !dbg !5830
  br label %if.end, !dbg !5831

if.end:                                           ; preds = %land.lhs.true23, %if.then, %land.lhs.true19, %land.lhs.true13, %lor.lhs.false
  %src1.0 = phi %struct.rtx_def** [ %call45, %if.then ], [ %call, %land.lhs.true23 ], [ %call, %land.lhs.true19 ], [ %call, %land.lhs.true13 ], [ %call, %lor.lhs.false ], !dbg !5807
  %src2.0 = phi %struct.rtx_def** [ %call50, %if.then ], [ %call5, %land.lhs.true23 ], [ %call5, %land.lhs.true19 ], [ %call5, %land.lhs.true13 ], [ %call5, %lor.lhs.false ], !dbg !5807
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src2.0, metadata !5801, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %struct.rtx_def** %src1.0, metadata !5800, metadata !DIExpression()), !dbg !5807
  %16 = load %struct.rtx_def*, %struct.rtx_def** %src1.0, align 8, !dbg !5832
  %call54 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %16) #7, !dbg !5832
  %call55 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call54) #6, !dbg !5833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !5802, metadata !DIExpression()), !dbg !5807
  %17 = bitcast %struct.rtx_def** %src2.0 to i32**, !dbg !5834
  %18 = load i32*, i32** %17, align 8, !dbg !5834
  %bf.load56 = load i32, i32* %18, align 8, !dbg !5834
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !5834
  %cmp58 = icmp eq i32 %bf.clear57, 37, !dbg !5834
  br i1 %cmp58, label %land.lhs.true60, label %if.end69, !dbg !5834

land.lhs.true60:                                  ; preds = %if.end
  %19 = bitcast i32* %18 to %struct.rtx_def*, !dbg !5834
  %call61 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %19) #7, !dbg !5834
  %20 = and i32 %call61, -8, !dbg !5834
  %cmp64 = icmp eq i32 %20, 8, !dbg !5834
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !5836

if.then66:                                        ; preds = %land.lhs.true60
  %21 = load %struct.rtx_def*, %struct.rtx_def** %src2.0, align 8, !dbg !5837
  %call67 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %21) #7, !dbg !5837
  %call68 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call67) #6, !dbg !5838
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call68, metadata !5803, metadata !DIExpression()), !dbg !5807
  br label %if.end69, !dbg !5839

if.end69:                                         ; preds = %if.end, %land.lhs.true60, %if.then66
  %src2_note.0 = phi %struct.rtx_def* [ %call68, %if.then66 ], [ null, %land.lhs.true60 ], [ null, %if.end ], !dbg !5840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src2_note.0, metadata !5803, metadata !DIExpression()), !dbg !5807
  %22 = load %struct.rtx_def*, %struct.rtx_def** %src1.0, align 8, !dbg !5841
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %22) #7, !dbg !5842
  tail call fastcc void @replace_reg(%struct.rtx_def** %src1.0, i32 8) #7, !dbg !5843
  %23 = load i32*, i32** %17, align 8, !dbg !5844
  %bf.load70 = load i32, i32* %23, align 8, !dbg !5844
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !5844
  %cmp72 = icmp eq i32 %bf.clear71, 37, !dbg !5844
  br i1 %cmp72, label %land.lhs.true74, label %if.end82, !dbg !5844

land.lhs.true74:                                  ; preds = %if.end69
  %24 = bitcast i32* %23 to %struct.rtx_def*, !dbg !5844
  %call75 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %24) #7, !dbg !5844
  %25 = and i32 %call75, -8, !dbg !5844
  %cmp78 = icmp eq i32 %25, 8, !dbg !5844
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !5846

if.then80:                                        ; preds = %land.lhs.true74
  %26 = load %struct.rtx_def*, %struct.rtx_def** %src2.0, align 8, !dbg !5847
  %call81 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %26) #7, !dbg !5848
  tail call fastcc void @replace_reg(%struct.rtx_def** %src2.0, i32 %call81) #7, !dbg !5849
  br label %if.end82, !dbg !5849

if.end82:                                         ; preds = %if.then80, %land.lhs.true74, %if.end69
  %tobool83 = icmp eq %struct.rtx_def* %call55, null, !dbg !5850
  br i1 %tobool83, label %if.end94, label %if.then84, !dbg !5852

if.then84:                                        ; preds = %if.end82
  %arrayidx87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call55, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5853
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !5853
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !5853
  %call89 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %27) #7, !dbg !5853
  tail call fastcc void @pop_stack(%struct.stack_def* %regstack, i32 %call89) #7, !dbg !5855
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx88, i32 8) #7, !dbg !5856
  br label %if.end94, !dbg !5857

if.end94:                                         ; preds = %if.end82, %if.then84
  %tobool95 = icmp eq %struct.rtx_def* %src2_note.0, null, !dbg !5858
  br i1 %tobool95, label %if.end155, label %land.lhs.true96, !dbg !5860

land.lhs.true96:                                  ; preds = %if.end94
  %28 = bitcast %struct.rtx_def** %src1.0 to i32**, !dbg !5861
  %29 = load i32*, i32** %28, align 8, !dbg !5861
  %bf.load97 = load i32, i32* %29, align 8, !dbg !5861
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !5861
  %cmp99 = icmp eq i32 %bf.clear98, 37, !dbg !5861
  br i1 %cmp99, label %land.lhs.true101, label %if.then123, !dbg !5861

land.lhs.true101:                                 ; preds = %land.lhs.true96
  %30 = bitcast i32* %29 to %struct.rtx_def*, !dbg !5861
  %call102 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %30) #7, !dbg !5861
  %31 = and i32 %call102, -8, !dbg !5861
  %cmp105 = icmp eq i32 %31, 8, !dbg !5861
  br i1 %cmp105, label %land.lhs.true107, label %if.then123, !dbg !5862

land.lhs.true107:                                 ; preds = %land.lhs.true101
  %32 = load i32*, i32** %17, align 8, !dbg !5863
  %bf.load108 = load i32, i32* %32, align 8, !dbg !5863
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !5863
  %cmp110 = icmp eq i32 %bf.clear109, 37, !dbg !5863
  br i1 %cmp110, label %land.lhs.true112, label %if.then123, !dbg !5863

land.lhs.true112:                                 ; preds = %land.lhs.true107
  %33 = bitcast i32* %32 to %struct.rtx_def*, !dbg !5863
  %call113 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %33) #7, !dbg !5863
  %34 = and i32 %call113, -8, !dbg !5863
  %cmp116 = icmp eq i32 %34, 8, !dbg !5863
  br i1 %cmp116, label %land.lhs.true118, label %if.then123, !dbg !5864

land.lhs.true118:                                 ; preds = %land.lhs.true112
  %35 = load %struct.rtx_def*, %struct.rtx_def** %src1.0, align 8, !dbg !5865
  %call119 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %35) #7, !dbg !5865
  %36 = load %struct.rtx_def*, %struct.rtx_def** %src2.0, align 8, !dbg !5866
  %call120 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %36) #7, !dbg !5866
  %cmp121 = icmp eq i32 %call119, %call120, !dbg !5867
  br i1 %cmp121, label %if.end155, label %if.then123, !dbg !5868

if.then123:                                       ; preds = %land.lhs.true118, %land.lhs.true112, %land.lhs.true107, %land.lhs.true101, %land.lhs.true96
  %arrayidx126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src2_note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5869
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !5869
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5869
  %call128 = tail call fastcc i32 @get_hard_regnum(%struct.stack_def* %regstack, %struct.rtx_def* %37) #7, !dbg !5872
  %cmp129 = icmp eq i32 %call128, 8, !dbg !5873
  %tobool132 = icmp ne %struct.rtx_def* %call55, null, !dbg !5874
  %or.cond = and i1 %cmp129, %tobool132, !dbg !5875
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5876
  %call138 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %38) #7, !dbg !5876
  br i1 %or.cond, label %if.then133, label %if.else143, !dbg !5875

if.then133:                                       ; preds = %if.then123
  tail call fastcc void @pop_stack(%struct.stack_def* %regstack, i32 %call138) #7, !dbg !5877
  tail call fastcc void @replace_reg(%struct.rtx_def** nonnull %rt_rtx127, i32 9) #7, !dbg !5879
  br label %if.end155, !dbg !5880

if.else143:                                       ; preds = %if.then123
  tail call fastcc void @remove_regno_note(%struct.rtx_def* %insn, i32 1, i32 %call138) #7, !dbg !5881
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5883
  %call153 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %39, i32 0) #7, !dbg !5884
  br label %if.end155

if.end155:                                        ; preds = %if.end94, %if.then133, %if.else143, %land.lhs.true118
  ret void, !dbg !5885
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_regno_note(%struct.rtx_def* %insn, i32 %note, i32 %regno) unnamed_addr #5 !dbg !5886 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5890, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata i32 1, metadata !5891, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5892, metadata !DIExpression()), !dbg !5895
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5896
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !5896
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5896
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx, metadata !5893, metadata !DIExpression()), !dbg !5895
  br label %for.cond, !dbg !5897

for.cond:                                         ; preds = %if.else, %entry
  %note_link.0 = phi %struct.rtx_def** [ %rt_rtx, %entry ], [ %rt_rtx21, %if.else ], !dbg !5895
  %this_rtx.0.in = phi %struct.rtx_def** [ %rt_rtx, %entry ], [ %rt_rtx21, %if.else ]
  %this_rtx.0 = load %struct.rtx_def*, %struct.rtx_def** %this_rtx.0.in, align 8, !dbg !5899
  call void @llvm.dbg.value(metadata %struct.rtx_def* %this_rtx.0, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.0, metadata !5893, metadata !DIExpression()), !dbg !5895
  %tobool = icmp eq %struct.rtx_def* %this_rtx.0, null, !dbg !5900
  br i1 %tobool, label %for.end, label %for.body, !dbg !5900

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_rtx.0, i64 0, i32 0, !dbg !5901
  %bf.load = load i32, i32* %1, align 8, !dbg !5901
  %bf.clear = and i32 %bf.load, 16711680, !dbg !5901
  %cmp = icmp eq i32 %bf.clear, 65536, !dbg !5904
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5905

land.lhs.true:                                    ; preds = %for.body
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5906
  %2 = bitcast %union.rtunion_def* %arrayidx3 to i32**, !dbg !5906
  %3 = load i32*, i32** %2, align 8, !dbg !5906
  %bf.load5 = load i32, i32* %3, align 8, !dbg !5906
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5906
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !5906
  br i1 %cmp7, label %land.lhs.true8, label %if.else, !dbg !5907

land.lhs.true8:                                   ; preds = %land.lhs.true
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5907
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !5908
  %cmp13 = icmp eq i32 %call, %regno, !dbg !5909
  br i1 %cmp13, label %if.then, label %if.else, !dbg !5910

if.then:                                          ; preds = %land.lhs.true8
  %note_link.0.lcssa6 = phi %struct.rtx_def** [ %note_link.0, %land.lhs.true8 ], !dbg !5895
  %this_rtx.0.lcssa5 = phi %struct.rtx_def* [ %this_rtx.0, %land.lhs.true8 ], !dbg !5899
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.0.lcssa6, metadata !5893, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.0.lcssa6, metadata !5893, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata %struct.rtx_def** %note_link.0.lcssa6, metadata !5893, metadata !DIExpression()), !dbg !5895
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_rtx.0.lcssa5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5911
  %6 = bitcast %union.rtunion_def* %5 to i64*, !dbg !5911
  %7 = load i64, i64* %6, align 8, !dbg !5911
  %8 = bitcast %struct.rtx_def** %note_link.0.lcssa6 to i64*, !dbg !5913
  store i64 %7, i64* %8, align 8, !dbg !5913
  br label %cleanup.cont, !dbg !5914

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true, %for.body
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %this_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5915
  %rt_rtx21 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5915
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx21, metadata !5893, metadata !DIExpression()), !dbg !5895
  br label %for.cond, !dbg !5916, !llvm.loop !5917

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 719, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5919
  br label %cleanup.cont, !dbg !5920

cleanup.cont:                                     ; preds = %if.then, %for.end
  ret void, !dbg !5920
}

; Function Attrs: nounwind uwtable
define internal fastcc void @swap_to_top(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %src1, %struct.rtx_def* %src2) unnamed_addr #5 !dbg !5921 {
entry:
  %temp_stack = alloca %struct.stack_def, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5925, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !5926, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src1, metadata !5927, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src2, metadata !5928, metadata !DIExpression()), !dbg !5934
  %0 = bitcast %struct.stack_def* %temp_stack to i8*, !dbg !5935
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5935
  %1 = bitcast %struct.stack_def* %regstack to i8*, !dbg !5936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !5936
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !5929, metadata !DIExpression(DW_OP_deref)), !dbg !5934
  %call = call fastcc i32 @get_hard_regnum(%struct.stack_def* nonnull %temp_stack, %struct.rtx_def* %src1) #7, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %call, metadata !5930, metadata !DIExpression()), !dbg !5934
  %cmp = icmp sgt i32 %call, -1, !dbg !5938
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5938

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 915, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5938
  br label %cond.end, !dbg !5938

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp eq i32 %call, 8, !dbg !5939
  br i1 %cmp1, label %if.end, label %if.then, !dbg !5941

if.then:                                          ; preds = %cond.end
  %top = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 0, !dbg !5942
  %2 = load i32, i32* %top, align 8, !dbg !5942
  %sub = add nsw i32 %call, -8, !dbg !5944
  %sub2 = sub nsw i32 %2, %sub, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %sub2, metadata !5932, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i32 %2, metadata !5931, metadata !DIExpression()), !dbg !5934
  %idxprom = sext i32 %sub2 to i64, !dbg !5946
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom, !dbg !5946
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5946
  %idxprom5 = sext i32 %2 to i64, !dbg !5947
  %arrayidx6 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom5, !dbg !5947
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5947
  store i8 %4, i8* %arrayidx, align 1, !dbg !5948
  store i8 %3, i8* %arrayidx6, align 1, !dbg !5949
  br label %if.end, !dbg !5950

if.end:                                           ; preds = %cond.end, %if.then
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !5929, metadata !DIExpression(DW_OP_deref)), !dbg !5934
  %call14 = call fastcc i32 @get_hard_regnum(%struct.stack_def* nonnull %temp_stack, %struct.rtx_def* %src2) #7, !dbg !5951
  call void @llvm.dbg.value(metadata i32 %call14, metadata !5930, metadata !DIExpression()), !dbg !5934
  %cmp15 = icmp sgt i32 %call14, -1, !dbg !5952
  br i1 %cmp15, label %cond.end19, label %cond.true17, !dbg !5952

cond.true17:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 928, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5952
  br label %cond.end19, !dbg !5952

cond.end19:                                       ; preds = %if.end, %cond.true17
  %cmp21 = icmp eq i32 %call14, 9, !dbg !5953
  br i1 %cmp21, label %if.end43, label %if.then23, !dbg !5955

if.then23:                                        ; preds = %cond.end19
  %top24 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 0, !dbg !5956
  %5 = load i32, i32* %top24, align 8, !dbg !5956
  %sub25 = add nsw i32 %call14, -8, !dbg !5958
  %sub26 = sub nsw i32 %5, %sub25, !dbg !5959
  call void @llvm.dbg.value(metadata i32 %sub26, metadata !5932, metadata !DIExpression()), !dbg !5934
  %sub28 = add nsw i32 %5, -1, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %sub28, metadata !5931, metadata !DIExpression()), !dbg !5934
  %idxprom30 = sext i32 %sub26 to i64, !dbg !5961
  %arrayidx31 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom30, !dbg !5961
  %6 = load i8, i8* %arrayidx31, align 1, !dbg !5961
  %idxprom34 = sext i32 %sub28 to i64, !dbg !5962
  %arrayidx35 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom34, !dbg !5962
  %7 = load i8, i8* %arrayidx35, align 1, !dbg !5962
  store i8 %7, i8* %arrayidx31, align 1, !dbg !5963
  store i8 %6, i8* %arrayidx35, align 1, !dbg !5964
  br label %if.end43, !dbg !5965

if.end43:                                         ; preds = %cond.end19, %if.then23
  call void @llvm.dbg.value(metadata %struct.stack_def* %temp_stack, metadata !5929, metadata !DIExpression(DW_OP_deref)), !dbg !5934
  call fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.stack_def* nonnull %temp_stack, i32 1) #7, !dbg !5966
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5967
  ret void, !dbg !5967
}

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_movxf(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @swap_rtx_condition(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5968 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5970, metadata !DIExpression()), !dbg !5978
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5979
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5979
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5979
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5971, metadata !DIExpression()), !dbg !5978
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5980
  %bf.load = load i32, i32* %2, align 8, !dbg !5980
  %bf.clear = and i32 %bf.load, 65535, !dbg !5980
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !5982
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !5983

land.lhs.true:                                    ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5984
  %3 = bitcast %union.rtunion_def* %arrayidx3 to i32**, !dbg !5984
  %4 = load i32*, i32** %3, align 8, !dbg !5984
  %bf.load5 = load i32, i32* %4, align 8, !dbg !5984
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5984
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !5984
  br i1 %cmp7, label %land.lhs.true8, label %if.end21, !dbg !5985

land.lhs.true8:                                   ; preds = %land.lhs.true
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !5985
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !5986
  %cmp13 = icmp eq i32 %call, 17, !dbg !5987
  br i1 %cmp13, label %if.then, label %if.end21, !dbg !5988

if.then:                                          ; preds = %land.lhs.true8
  %call14 = tail call fastcc %struct.rtx_def* @next_flags_user(%struct.rtx_def* %insn) #7, !dbg !5989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !5970, metadata !DIExpression()), !dbg !5978
  %cmp15 = icmp eq %struct.rtx_def* %call14, null, !dbg !5991
  br i1 %cmp15, label %cleanup148, label %if.end, !dbg !5993

if.end:                                           ; preds = %if.then
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 1, !dbg !5994
  %6 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 0, i64 0, !dbg !5994
  %rt_rtx20 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !5994
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5994
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5971, metadata !DIExpression()), !dbg !5978
  br label %if.end21, !dbg !5995

if.end21:                                         ; preds = %if.end, %land.lhs.true8, %land.lhs.true, %entry
  %pat.0 = phi %struct.rtx_def* [ %7, %if.end ], [ %1, %land.lhs.true8 ], [ %1, %land.lhs.true ], [ %1, %entry ], !dbg !5978
  %insn.addr.0 = phi %struct.rtx_def* [ %call14, %if.end ], [ %insn, %land.lhs.true8 ], [ %insn, %land.lhs.true ], [ %insn, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5970, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.0, metadata !5971, metadata !DIExpression()), !dbg !5978
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 0, !dbg !5996
  %bf.load22 = load i32, i32* %8, align 8, !dbg !5996
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5996
  %cmp24 = icmp eq i32 %bf.clear23, 23, !dbg !5997
  br i1 %cmp24, label %land.lhs.true25, label %if.end119, !dbg !5998

land.lhs.true25:                                  ; preds = %if.end21
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5999
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !5999
  %11 = load i32*, i32** %10, align 8, !dbg !5999
  %bf.load30 = load i32, i32* %11, align 8, !dbg !5999
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !5999
  %cmp32 = icmp eq i32 %bf.clear31, 18, !dbg !6000
  br i1 %cmp32, label %land.lhs.true33, label %if.end119, !dbg !6001

land.lhs.true33:                                  ; preds = %land.lhs.true25
  %12 = getelementptr inbounds i32, i32* %11, i64 4, !dbg !6002
  %13 = load i32, i32* %12, align 8, !dbg !6002
  %cmp41 = icmp eq i32 %13, 31, !dbg !6003
  br i1 %cmp41, label %if.then42, label %if.end119, !dbg !6004

if.then42:                                        ; preds = %land.lhs.true33
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6005
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !6005
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !6005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !5972, metadata !DIExpression()), !dbg !6006
  br label %while.cond, !dbg !6007

while.cond:                                       ; preds = %if.end69, %if.then42
  %insn.addr.1 = phi %struct.rtx_def* [ %insn.addr.0, %if.then42 ], [ %19, %if.end69 ], !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5970, metadata !DIExpression()), !dbg !5978
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !6008
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 7, !dbg !6008
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6008
  %16 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6008
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %16, i64 0, i32 1, !dbg !6008
  %17 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6008
  %cmp47 = icmp eq %struct.rtx_def* %insn.addr.1, %17, !dbg !6009
  br i1 %cmp47, label %while.end.loopexit, label %while.body, !dbg !6007

while.body:                                       ; preds = %while.cond
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6010
  %rt_rtx51 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !6010
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !6010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5970, metadata !DIExpression()), !dbg !5978
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !6012
  %bf.load52 = load i32, i32* %20, align 8, !dbg !6012
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !6012
  %cmp54 = icmp eq i32 %bf.clear53, 8, !dbg !6012
  br i1 %cmp54, label %land.lhs.true66, label %lor.lhs.false, !dbg !6012

lor.lhs.false:                                    ; preds = %while.body
  %cmp57 = icmp eq i32 %bf.clear53, 7, !dbg !6012
  br i1 %cmp57, label %land.lhs.true66, label %lor.lhs.false58, !dbg !6012

lor.lhs.false58:                                  ; preds = %lor.lhs.false
  %cmp61 = icmp eq i32 %bf.clear53, 9, !dbg !6012
  br i1 %cmp61, label %land.lhs.true66, label %lor.lhs.false62, !dbg !6012

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %cmp65 = icmp eq i32 %bf.clear53, 10, !dbg !6012
  br i1 %cmp65, label %land.lhs.true66, label %if.end69, !dbg !6014

land.lhs.true66:                                  ; preds = %lor.lhs.false62, %lor.lhs.false58, %lor.lhs.false, %while.body
  %call67 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %14, %struct.rtx_def* %19) #6, !dbg !6015
  %tobool = icmp eq i32 %call67, 0, !dbg !6015
  br i1 %tobool, label %land.lhs.true66.if.end69_crit_edge, label %land.lhs.true66.while.end_crit_edge, !dbg !6016

land.lhs.true66.while.end_crit_edge:              ; preds = %land.lhs.true66
  %.lcssa = phi %struct.rtx_def* [ %19, %land.lhs.true66 ], !dbg !6010
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !6017
  %il75.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre, i64 0, i32 7, !dbg !6019
  %rtl76.phi.trans.insert = bitcast %union.basic_block_il_dependent* %il75.phi.trans.insert to %struct.rtl_bb_info**, !dbg !6019
  %.pre2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl76.phi.trans.insert, align 8, !dbg !6017
  %end_77.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre2, i64 0, i32 1, !dbg !6019
  %.pre3 = load %struct.rtx_def*, %struct.rtx_def** %end_77.phi.trans.insert, align 8, !dbg !6017
  br label %while.end, !dbg !6016

land.lhs.true66.if.end69_crit_edge:               ; preds = %land.lhs.true66
  %bf.load70.pre = load i32, i32* %20, align 8, !dbg !6020
  br label %if.end69, !dbg !6016

if.end69:                                         ; preds = %land.lhs.true66.if.end69_crit_edge, %lor.lhs.false62
  %bf.load70 = phi i32 [ %bf.load70.pre, %land.lhs.true66.if.end69_crit_edge ], [ %bf.load52, %lor.lhs.false62 ], !dbg !6020
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !6020
  %cmp72 = icmp eq i32 %bf.clear71, 10, !dbg !6020
  br i1 %cmp72, label %cleanup.loopexit, label %while.cond, !dbg !6022, !llvm.loop !6023

while.end.loopexit:                               ; preds = %while.cond
  %insn.addr.1.lcssa = phi %struct.rtx_def* [ %insn.addr.1, %while.cond ], !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5970, metadata !DIExpression()), !dbg !5978
  br label %while.end, !dbg !6025

while.end:                                        ; preds = %while.end.loopexit, %land.lhs.true66.while.end_crit_edge
  %21 = phi %struct.rtx_def* [ %.pre3, %land.lhs.true66.while.end_crit_edge ], [ %insn.addr.1.lcssa, %while.end.loopexit ], !dbg !6017
  %insn.addr.2 = phi %struct.rtx_def* [ %.lcssa, %land.lhs.true66.while.end_crit_edge ], [ %insn.addr.1.lcssa, %while.end.loopexit ], !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.2, metadata !5970, metadata !DIExpression()), !dbg !5978
  %cmp78 = icmp eq %struct.rtx_def* %insn.addr.2, %21, !dbg !6025
  br i1 %cmp78, label %cleanup, label %if.end80, !dbg !6026

if.end80:                                         ; preds = %while.end
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.2, i64 0, i32 1, !dbg !6027
  %22 = getelementptr inbounds %union.u, %union.u* %u81, i64 1, i32 0, i32 0, i64 0, !dbg !6027
  %rt_rtx84 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6027
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !5971, metadata !DIExpression()), !dbg !5978
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !6028
  %bf.load85 = load i32, i32* %24, align 8, !dbg !6028
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !6028
  %cmp87 = icmp eq i32 %bf.clear86, 23, !dbg !6030
  br i1 %cmp87, label %lor.lhs.false88, label %cleanup, !dbg !6031

lor.lhs.false88:                                  ; preds = %if.end80
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6032
  %26 = bitcast %union.rtunion_def* %25 to i32**, !dbg !6032
  %27 = load i32*, i32** %26, align 8, !dbg !6032
  %bf.load93 = load i32, i32* %27, align 8, !dbg !6032
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !6032
  %cmp95 = icmp eq i32 %bf.clear94, 18, !dbg !6033
  br i1 %cmp95, label %lor.lhs.false96, label %cleanup, !dbg !6034

lor.lhs.false96:                                  ; preds = %lor.lhs.false88
  %28 = getelementptr inbounds i32, i32* %27, i64 4, !dbg !6035
  %29 = load i32, i32* %28, align 8, !dbg !6035
  %cmp105 = icmp eq i32 %29, 32, !dbg !6036
  br i1 %cmp105, label %lor.lhs.false106, label %cleanup, !dbg !6037

lor.lhs.false106:                                 ; preds = %lor.lhs.false96
  %call107 = tail call i32 @dead_or_set_p(%struct.rtx_def* %insn.addr.2, %struct.rtx_def* %14) #6, !dbg !6038
  %tobool108 = icmp eq i32 %call107, 0, !dbg !6038
  br i1 %tobool108, label %cleanup, label %if.end110, !dbg !6039

if.end110:                                        ; preds = %lor.lhs.false106
  %call111 = tail call fastcc %struct.rtx_def* @next_flags_user(%struct.rtx_def* %insn.addr.2) #7, !dbg !6040
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call111, metadata !5970, metadata !DIExpression()), !dbg !5978
  %cmp112 = icmp eq %struct.rtx_def* %call111, null, !dbg !6041
  br i1 %cmp112, label %cleanup, label %if.end114, !dbg !6043

if.end114:                                        ; preds = %if.end110
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call111, i64 0, i32 1, !dbg !6044
  %30 = getelementptr inbounds %union.u, %union.u* %u115, i64 1, i32 0, i32 0, i64 0, !dbg !6044
  %rt_rtx118 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !6044
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !6044
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !5971, metadata !DIExpression()), !dbg !5978
  br label %cleanup, !dbg !6045

cleanup.loopexit:                                 ; preds = %if.end69
  %.lcssa9 = phi %struct.rtx_def* [ %19, %if.end69 ], !dbg !6010
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false106, %lor.lhs.false96, %lor.lhs.false88, %if.end80, %if.end110, %while.end, %if.end114
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end114 ], [ false, %while.end ], [ false, %lor.lhs.false106 ], [ false, %lor.lhs.false96 ], [ false, %lor.lhs.false88 ], [ false, %if.end80 ], [ false, %if.end110 ], [ false, %cleanup.loopexit ]
  %pat.1 = phi %struct.rtx_def* [ %31, %if.end114 ], [ %pat.0, %while.end ], [ %23, %lor.lhs.false106 ], [ %23, %lor.lhs.false96 ], [ %23, %lor.lhs.false88 ], [ %23, %if.end80 ], [ %23, %if.end110 ], [ %pat.0, %cleanup.loopexit ], !dbg !5978
  %insn.addr.3 = phi %struct.rtx_def* [ %call111, %if.end114 ], [ %21, %while.end ], [ %insn.addr.2, %lor.lhs.false106 ], [ %insn.addr.2, %lor.lhs.false96 ], [ %insn.addr.2, %lor.lhs.false88 ], [ %insn.addr.2, %if.end80 ], [ null, %if.end110 ], [ %.lcssa9, %cleanup.loopexit ], !dbg !6006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.3, metadata !5970, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.1, metadata !5971, metadata !DIExpression()), !dbg !5978
  br i1 %cleanup.dest.slot.0, label %if.end119, label %cleanup148

if.end119:                                        ; preds = %cleanup, %land.lhs.true33, %land.lhs.true25, %if.end21
  %pat.2 = phi %struct.rtx_def* [ %pat.0, %land.lhs.true33 ], [ %pat.0, %land.lhs.true25 ], [ %pat.0, %if.end21 ], [ %pat.1, %cleanup ], !dbg !6046
  %insn.addr.4 = phi %struct.rtx_def* [ %insn.addr.0, %land.lhs.true33 ], [ %insn.addr.0, %land.lhs.true25 ], [ %insn.addr.0, %if.end21 ], [ %insn.addr.3, %cleanup ], !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.4, metadata !5970, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.2, metadata !5971, metadata !DIExpression()), !dbg !5978
  %call120 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %pat.2) #7, !dbg !6047
  %tobool121 = icmp eq i32 %call120, 0, !dbg !6047
  br i1 %tobool121, label %cleanup148, label %if.then122, !dbg !6048

if.then122:                                       ; preds = %if.end119
  call void @llvm.dbg.value(metadata i32 0, metadata !5975, metadata !DIExpression()), !dbg !6049
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.4, i64 0, i32 1, !dbg !6050
  %32 = getelementptr inbounds %union.u, %union.u* %u123, i64 1, i32 0, i32 0, i64 1, !dbg !6050
  %rt_int126 = bitcast %union.rtunion_def* %32 to i32*, !dbg !6050
  store i32 -1, i32* %rt_int126, align 8, !dbg !6051
  %call127 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn.addr.4) #7, !dbg !6052
  %cmp128 = icmp eq i32 %call127, -1, !dbg !6054
  br i1 %cmp128, label %if.end141, label %if.else, !dbg !6055

if.else:                                          ; preds = %if.then122
  %33 = load %struct.rtx_def*, %struct.rtx_def** @ix86_flags_rtx, align 8, !dbg !6056
  %call130 = tail call i32 @dead_or_set_p(%struct.rtx_def* %insn.addr.4, %struct.rtx_def* %33) #6, !dbg !6058
  %tobool131 = icmp eq i32 %call130, 0, !dbg !6058
  br i1 %tobool131, label %if.then132, label %if.end141, !dbg !6059

if.then132:                                       ; preds = %if.else
  %call133 = tail call fastcc %struct.rtx_def* @next_flags_user(%struct.rtx_def* %insn.addr.4) #7, !dbg !6060
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !5970, metadata !DIExpression()), !dbg !5978
  %tobool134 = icmp eq %struct.rtx_def* %call133, null, !dbg !6062
  br i1 %tobool134, label %if.then138, label %lor.lhs.false135, !dbg !6064

lor.lhs.false135:                                 ; preds = %if.then132
  %call136 = tail call fastcc i32 @swap_rtx_condition(%struct.rtx_def* nonnull %call133) #7, !dbg !6065
  %tobool137 = icmp eq i32 %call136, 0, !dbg !6065
  br i1 %tobool137, label %if.then138, label %if.end141, !dbg !6066

if.then138:                                       ; preds = %lor.lhs.false135, %if.then132
  call void @llvm.dbg.value(metadata i32 1, metadata !5975, metadata !DIExpression()), !dbg !6049
  br label %if.end141, !dbg !6067

if.end141:                                        ; preds = %lor.lhs.false135, %if.else, %if.then138, %if.then122
  %fail.2 = phi i1 [ true, %if.then122 ], [ false, %if.else ], [ false, %lor.lhs.false135 ], [ true, %if.then138 ]
  br i1 %fail.2, label %if.then143, label %cleanup148, !dbg !6068

if.then143:                                       ; preds = %if.end141
  %call144 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %pat.2) #7, !dbg !6069
  br label %cleanup148, !dbg !6072

cleanup148:                                       ; preds = %if.end119, %if.then143, %if.end141, %if.then, %cleanup
  %retval.2 = phi i32 [ 0, %cleanup ], [ 0, %if.then ], [ 0, %if.then143 ], [ 1, %if.end141 ], [ 0, %if.end119 ], !dbg !5978
  ret i32 %retval.2, !dbg !6073
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pop_stack(%struct.stack_def* %regstack, i32 %regno) unnamed_addr #5 !dbg !6074 {
entry:
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !6078, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6079, metadata !DIExpression()), !dbg !6089
  %top1 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 0, !dbg !6090
  %0 = load i32, i32* %top1, align 8, !dbg !6090
  call void @llvm.dbg.value(metadata i32 %0, metadata !6080, metadata !DIExpression()), !dbg !6089
  %sh_prom = zext i32 %regno to i64, !dbg !6091
  %shl = shl i64 1, %sh_prom, !dbg !6091
  %neg = xor i64 %shl, -1, !dbg !6091
  %reg_set = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 1, !dbg !6091
  %1 = load i64, i64* %reg_set, align 8, !dbg !6091
  %and = and i64 %1, %neg, !dbg !6091
  store i64 %and, i64* %reg_set, align 8, !dbg !6091
  %dec = add nsw i32 %0, -1, !dbg !6092
  store i32 %dec, i32* %top1, align 8, !dbg !6092
  %idxprom = sext i32 %0 to i64, !dbg !6093
  %arrayidx = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom, !dbg !6093
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6093
  %conv = zext i8 %2 to i32, !dbg !6093
  %cmp = icmp eq i32 %conv, %regno, !dbg !6094
  br i1 %cmp, label %if.end27, label %if.then, !dbg !6095

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %dec, metadata !6081, metadata !DIExpression()), !dbg !6096
  %3 = add i32 %0, -1, !dbg !6097
  %4 = sext i32 %3 to i64, !dbg !6097
  br label %for.cond, !dbg !6097

for.cond:                                         ; preds = %for.inc24, %if.then
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc24 ], [ %4, %if.then ], !dbg !6098
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !6081, metadata !DIExpression()), !dbg !6096
  %cmp5 = icmp sgt i64 %indvars.iv4, -1, !dbg !6099
  br i1 %cmp5, label %for.body, label %if.end27.loopexit1, !dbg !6100

for.body:                                         ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv4, !dbg !6101
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !6101
  %conv10 = zext i8 %5 to i32, !dbg !6101
  %cmp11 = icmp eq i32 %conv10, %regno, !dbg !6102
  br i1 %cmp11, label %for.cond14.preheader, label %for.inc24, !dbg !6103

for.cond14.preheader:                             ; preds = %for.body
  %indvars.iv4.lcssa6 = phi i64 [ %indvars.iv4, %for.body ], !dbg !6098
  call void @llvm.dbg.value(metadata i64 %indvars.iv4.lcssa6, metadata !6081, metadata !DIExpression()), !dbg !6096
  %sext = shl i64 %indvars.iv4.lcssa6, 32, !dbg !6104
  %6 = ashr exact i64 %sext, 32, !dbg !6104
  %7 = sext i32 %0 to i64, !dbg !6104
  br label %for.cond14, !dbg !6104

for.cond14:                                       ; preds = %for.cond14.preheader, %for.body17
  %indvars.iv = phi i64 [ %6, %for.cond14.preheader ], [ %indvars.iv.next, %for.body17 ], !dbg !6106
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6084, metadata !DIExpression()), !dbg !6107
  %cmp15 = icmp slt i64 %indvars.iv, %7, !dbg !6108
  br i1 %cmp15, label %for.body17, label %if.end27.loopexit, !dbg !6104

for.body17:                                       ; preds = %for.cond14
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6110
  %arrayidx20 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next, !dbg !6111
  %8 = load i8, i8* %arrayidx20, align 1, !dbg !6111
  %arrayidx23 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv, !dbg !6112
  store i8 %8, i8* %arrayidx23, align 1, !dbg !6113
  call void @llvm.dbg.value(metadata i32 undef, metadata !6084, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6107
  br label %for.cond14, !dbg !6114, !llvm.loop !6115

for.inc24:                                        ; preds = %for.body
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !6117
  call void @llvm.dbg.value(metadata i32 undef, metadata !6081, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6096
  br label %for.cond, !dbg !6118, !llvm.loop !6119

if.end27.loopexit:                                ; preds = %for.cond14
  br label %if.end27, !dbg !6121

if.end27.loopexit1:                               ; preds = %for.cond
  br label %if.end27, !dbg !6121

if.end27:                                         ; preds = %if.end27.loopexit1, %if.end27.loopexit, %entry
  ret void, !dbg !6121
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @next_flags_user(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !6122 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6126, metadata !DIExpression()), !dbg !6127
  br label %while.cond, !dbg !6128

while.cond:                                       ; preds = %if.end, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %4, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** @current_block, align 8, !dbg !6129
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !6129
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6129
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6129
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !6129
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6129
  %cmp = icmp eq %struct.rtx_def* %insn.addr.0, %2, !dbg !6130
  br i1 %cmp, label %return, label %while.body, !dbg !6128

while.body:                                       ; preds = %while.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6131
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6131
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6126, metadata !DIExpression()), !dbg !6127
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6133
  %bf.load = load i32, i32* %5, align 8, !dbg !6133
  %bf.clear = and i32 %bf.load, 65535, !dbg !6133
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !6133
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !6133

lor.lhs.false:                                    ; preds = %while.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !6133
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !6133

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !6133
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !6133

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !6133
  br i1 %cmp12, label %land.lhs.true, label %if.end, !dbg !6135

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %while.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** @ix86_flags_rtx, align 8, !dbg !6136
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !6137
  %7 = getelementptr inbounds %union.u, %union.u* %u13, i64 1, i32 0, i32 0, i64 0, !dbg !6137
  %rt_rtx16 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6137
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !6137
  %call = tail call i32 @reg_mentioned_p(%struct.rtx_def* %6, %struct.rtx_def* %8) #6, !dbg !6138
  %tobool = icmp eq i32 %call, 0, !dbg !6138
  br i1 %tobool, label %land.lhs.true.if.end_crit_edge, label %return, !dbg !6139

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %bf.load17.pre = load i32, i32* %5, align 8, !dbg !6140
  %.pre = and i32 %bf.load17.pre, 65535, !dbg !6140
  br label %if.end, !dbg !6139

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %lor.lhs.false9
  %bf.clear18.pre-phi = phi i32 [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %bf.clear, %lor.lhs.false9 ], !dbg !6140
  %cmp19 = icmp eq i32 %bf.clear18.pre-phi, 10, !dbg !6140
  br i1 %cmp19, label %return, label %while.cond, !dbg !6142, !llvm.loop !6143

return:                                           ; preds = %land.lhs.true, %while.cond, %if.end
  %retval.0 = phi %struct.rtx_def* [ %4, %land.lhs.true ], [ null, %if.end ], [ null, %while.cond ], !dbg !6127
  ret %struct.rtx_def* %retval.0, !dbg !6145
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %pat) unnamed_addr #5 !dbg !6146 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !6148, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 0, metadata !6151, metadata !DIExpression()), !dbg !6160
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !6161
  %bf.load = load i32, i32* %0, align 8, !dbg !6161
  %bf.clear = and i32 %bf.load, 65535, !dbg !6161
  %idxprom = zext i32 %bf.clear to i64, !dbg !6161
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6161
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6161
  %cmp = icmp ult i32 %1, 2, !dbg !6161
  br i1 %cmp, label %if.then, label %if.else, !dbg !6162

if.then:                                          ; preds = %entry
  %call = tail call i32 @swap_condition(i32 %bf.clear) #6, !dbg !6163
  %bf.load3 = load i32, i32* %0, align 8, !dbg !6163
  %bf.value = and i32 %call, 65535, !dbg !6163
  %bf.clear4 = and i32 %bf.load3, -65536, !dbg !6163
  %bf.set = or i32 %bf.clear4, %bf.value, !dbg !6163
  store i32 %bf.set, i32* %0, align 8, !dbg !6163
  call void @llvm.dbg.value(metadata i32 1, metadata !6151, metadata !DIExpression()), !dbg !6160
  br label %if.end53, !dbg !6165

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6166
  %2 = load i8*, i8** %arrayidx8, align 8, !dbg !6166
  call void @llvm.dbg.value(metadata i8* %2, metadata !6149, metadata !DIExpression()), !dbg !6160
  %arrayidx12 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !6167
  %3 = load i8, i8* %arrayidx12, align 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8 %3, metadata !6150, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6160
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, !dbg !6168
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !6168
  %4 = zext i8 %3 to i64, !dbg !6170
  br label %for.cond, !dbg !6170

for.cond:                                         ; preds = %for.inc50, %if.else
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc50 ], [ %4, %if.else ]
  %r.0 = phi i32 [ %r.3, %for.inc50 ], [ 0, %if.else ], !dbg !6171
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 undef, metadata !6150, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6160
  %cmp13 = icmp sgt i64 %indvars.iv1, 0, !dbg !6173
  br i1 %cmp13, label %for.body, label %if.end53.loopexit, !dbg !6174

for.body:                                         ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next2, !dbg !6175
  %5 = load i8, i8* %arrayidx16, align 1, !dbg !6175
  %cmp18 = icmp eq i8 %5, 69, !dbg !6176
  br i1 %cmp18, label %if.then20, label %if.else36, !dbg !6177

if.then20:                                        ; preds = %for.body
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 %indvars.iv.next2, !dbg !6178
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !6178
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6178
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !6178
  %7 = load i32, i32* %num_elem, align 8, !dbg !6178
  call void @llvm.dbg.value(metadata i32 %7, metadata !6152, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6180
  %8 = sext i32 %7 to i64, !dbg !6181
  br label %for.cond24, !dbg !6181

for.cond24:                                       ; preds = %for.body27, %if.then20
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body27 ], [ %8, %if.then20 ], !dbg !6160
  %r.1 = phi i32 [ %or, %for.body27 ], [ %r.0, %if.then20 ], !dbg !6160
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6182
  call void @llvm.dbg.value(metadata i32 undef, metadata !6152, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %r.1, metadata !6151, metadata !DIExpression()), !dbg !6160
  %cmp25 = icmp sgt i64 %indvars.iv, 0, !dbg !6183
  br i1 %cmp25, label %for.body27, label %for.inc50.loopexit, !dbg !6185

for.body27:                                       ; preds = %for.cond24
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6186
  %arrayidx34 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6186
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx34, align 8, !dbg !6186
  %call35 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %10) #7, !dbg !6187
  %or = or i32 %r.1, %call35, !dbg !6188
  call void @llvm.dbg.value(metadata i32 %or, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 undef, metadata !6152, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6180
  br label %for.cond24, !dbg !6189, !llvm.loop !6190

if.else36:                                        ; preds = %for.body
  %cmp40 = icmp eq i8 %5, 101, !dbg !6192
  br i1 %cmp40, label %if.then42, label %for.inc50, !dbg !6193

if.then42:                                        ; preds = %if.else36
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 %indvars.iv.next2, !dbg !6194
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !6194
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6194
  %call47 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %11) #7, !dbg !6195
  %or48 = or i32 %r.0, %call47, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %or48, metadata !6151, metadata !DIExpression()), !dbg !6160
  br label %for.inc50, !dbg !6197

for.inc50.loopexit:                               ; preds = %for.cond24
  %r.1.lcssa = phi i32 [ %r.1, %for.cond24 ], !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.1.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.1.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.1.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  br label %for.inc50, !dbg !6198

for.inc50:                                        ; preds = %for.inc50.loopexit, %if.then42, %if.else36
  %r.3 = phi i32 [ %or48, %if.then42 ], [ %r.0, %if.else36 ], [ %r.1.lcssa, %for.inc50.loopexit ], !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.3, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 undef, metadata !6150, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6160
  br label %for.cond, !dbg !6198, !llvm.loop !6199

if.end53.loopexit:                                ; preds = %for.cond
  %r.0.lcssa = phi i32 [ %r.0, %for.cond ], !dbg !6171
  call void @llvm.dbg.value(metadata i32 %r.0.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.0.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.0.lcssa, metadata !6151, metadata !DIExpression()), !dbg !6160
  br label %if.end53, !dbg !6201

if.end53:                                         ; preds = %if.end53.loopexit, %if.then
  %r.4 = phi i32 [ 1, %if.then ], [ %r.0.lcssa, %if.end53.loopexit ], !dbg !6160
  call void @llvm.dbg.value(metadata i32 %r.4, metadata !6151, metadata !DIExpression()), !dbg !6160
  ret i32 %r.4, !dbg !6201
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !6202 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6205, metadata !DIExpression()), !dbg !6206
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6207
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !6207
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !6207
  %1 = load i32, i32* %rt_int, align 8, !dbg !6207
  %cmp = icmp slt i32 %1, 0, !dbg !6209
  br i1 %cmp, label %if.then, label %if.end, !dbg !6210

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6211
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6211
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6211
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !6212
  store i32 %call, i32* %rt_int, align 8, !dbg !6213
  br label %if.end, !dbg !6214

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !6215
  ret i32 %4, !dbg !6216
}

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #2

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compensate_edge(%struct.edge_def* %e) unnamed_addr #5 !dbg !6217 {
entry:
  %regstack = alloca %struct.stack_def, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6221, metadata !DIExpression()), !dbg !6232
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !6233
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !6222, metadata !DIExpression()), !dbg !6232
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !6234
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6234
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !6223, metadata !DIExpression()), !dbg !6232
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 2, !dbg !6235
  %2 = bitcast i8** %aux to %struct.block_info_def**, !dbg !6235
  %3 = load %struct.block_info_def*, %struct.block_info_def** %2, align 8, !dbg !6235
  %stack_in = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %3, i64 0, i32 0, !dbg !6236
  call void @llvm.dbg.value(metadata %struct.stack_def* %stack_in, metadata !6224, metadata !DIExpression()), !dbg !6232
  %aux1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 2, !dbg !6237
  %4 = bitcast i8** %aux1 to %struct.block_info_def**, !dbg !6237
  %5 = load %struct.block_info_def*, %struct.block_info_def** %4, align 8, !dbg !6237
  %stack_out = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 1, !dbg !6238
  call void @llvm.dbg.value(metadata %struct.stack_def* %stack_out, metadata !6225, metadata !DIExpression()), !dbg !6232
  %6 = bitcast %struct.stack_def* %regstack to i8*, !dbg !6239
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6239
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6240
  %tobool = icmp eq %struct._IO_FILE* %7, null, !dbg !6240
  br i1 %tobool, label %if.end, label %if.then, !dbg !6242

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !6243
  %8 = load i32, i32* %index, align 8, !dbg !6243
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !6244
  %9 = load i32, i32* %index2, align 8, !dbg !6244
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i32 %8, i32 %9) #6, !dbg !6245
  br label %if.end, !dbg !6245

if.end:                                           ; preds = %entry, %if.then
  %top = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %3, i64 0, i32 0, i32 0, !dbg !6246
  %10 = load i32, i32* %top, align 8, !dbg !6246
  %cmp = icmp eq i32 %10, -2, !dbg !6246
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6246

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2741, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6246
  %.pre = load i32, i32* %top, align 8, !dbg !6247
  br label %cond.end, !dbg !6246

cond.end:                                         ; preds = %if.end, %cond.true
  %11 = phi i32 [ %10, %if.end ], [ %.pre, %cond.true ], !dbg !6247
  %top4 = getelementptr inbounds %struct.stack_def, %struct.stack_def* %stack_out, i64 0, i32 0, !dbg !6249
  %12 = load i32, i32* %top4, align 8, !dbg !6249
  %cmp5 = icmp eq i32 %11, %12, !dbg !6250
  br i1 %cmp5, label %if.then6, label %if.end26, !dbg !6251

if.then6:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 %11, metadata !6227, metadata !DIExpression()), !dbg !6232
  %13 = sext i32 %11 to i64, !dbg !6252
  br label %for.cond, !dbg !6252

for.cond:                                         ; preds = %for.inc, %if.then6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %13, %if.then6 ], !dbg !6255
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6227, metadata !DIExpression()), !dbg !6232
  %cmp8 = icmp sgt i64 %indvars.iv, -1, !dbg !6256
  %14 = trunc i64 %indvars.iv to i32, !dbg !6258
  br i1 %cmp8, label %for.body, label %for.end, !dbg !6258

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %3, i64 0, i32 0, i32 2, i64 %indvars.iv, !dbg !6259
  %15 = load i8, i8* %arrayidx, align 1, !dbg !6259
  %arrayidx12 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %5, i64 0, i32 1, i32 2, i64 %indvars.iv, !dbg !6261
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !6261
  %cmp14 = icmp eq i8 %15, %16, !dbg !6262
  br i1 %cmp14, label %for.inc, label %for.end, !dbg !6263

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6264
  call void @llvm.dbg.value(metadata i32 undef, metadata !6227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6232
  br label %for.cond, !dbg !6265, !llvm.loop !6266

for.end:                                          ; preds = %for.body, %for.cond
  %.lcssa = phi i32 [ %14, %for.body ], [ %14, %for.cond ], !dbg !6258
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6227, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6227, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6227, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !6227, metadata !DIExpression()), !dbg !6232
  %cmp18 = icmp eq i32 %.lcssa, -1, !dbg !6268
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !6270

if.then20:                                        ; preds = %for.end
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6271
  %tobool21 = icmp eq %struct._IO_FILE* %17, null, !dbg !6271
  br i1 %tobool21, label %cleanup, label %if.then22, !dbg !6274

if.then22:                                        ; preds = %if.then20
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !6275
  br label %cleanup, !dbg !6275

if.end26:                                         ; preds = %for.end, %cond.end
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6276
  %tobool27 = icmp eq %struct._IO_FILE* %18, null, !dbg !6276
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !6278

if.then28:                                        ; preds = %if.end26
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !6279
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6281
  tail call fastcc void @print_stack(%struct._IO_FILE* %19, %struct.stack_def* %stack_in) #7, !dbg !6282
  br label %if.end30, !dbg !6283

if.end30:                                         ; preds = %if.end26, %if.then28
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !6284
  %20 = load i32, i32* %flags, align 8, !dbg !6284
  %and = and i32 %20, 4, !dbg !6286
  %tobool31 = icmp eq i32 %and, 0, !dbg !6286
  br i1 %tobool31, label %if.end50, label %if.then32, !dbg !6287

if.then32:                                        ; preds = %if.end30
  %21 = load i32, i32* %top4, align 8, !dbg !6288
  %cmp34 = icmp eq i32 %21, 0, !dbg !6288
  br i1 %cmp34, label %cond.end41, label %lor.lhs.false, !dbg !6288

lor.lhs.false:                                    ; preds = %if.then32
  %cmp37 = icmp eq i32 %21, 1, !dbg !6288
  br i1 %cmp37, label %cond.end41, label %cond.true39, !dbg !6288

cond.true39:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6288
  br label %cond.end41, !dbg !6288

cond.end41:                                       ; preds = %if.then32, %lor.lhs.false, %cond.true39
  %22 = load i32, i32* %top, align 8, !dbg !6290
  %cmp44 = icmp eq i32 %22, -1, !dbg !6290
  br i1 %cmp44, label %cleanup, label %cond.true46, !dbg !6290

cond.true46:                                      ; preds = %cond.end41
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2773, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6290
  br label %cleanup, !dbg !6290

if.end50:                                         ; preds = %if.end30
  %and52 = and i32 %20, 8, !dbg !6291
  %tobool53 = icmp eq i32 %and52, 0, !dbg !6291
  br i1 %tobool53, label %if.end62, label %if.then54, !dbg !6293

if.then54:                                        ; preds = %if.end50
  %23 = load i32, i32* %top, align 8, !dbg !6294
  %cmp56 = icmp eq i32 %23, -1, !dbg !6294
  br i1 %cmp56, label %cleanup, label %cond.true58, !dbg !6294

cond.true58:                                      ; preds = %if.then54
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2782, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6294
  br label %cleanup, !dbg !6294

if.end62:                                         ; preds = %if.end50
  %and64 = and i32 %20, 2, !dbg !6296
  %tobool65 = icmp eq i32 %and64, 0, !dbg !6296
  br i1 %tobool65, label %cond.end68, label %cond.true66, !dbg !6296

cond.true66:                                      ; preds = %if.end62
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 2789, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6296
  br label %cond.end68, !dbg !6296

cond.end68:                                       ; preds = %if.end62, %cond.true66
  %24 = bitcast %struct.stack_def* %stack_out to i8*, !dbg !6297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !6297
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !6298
  %25 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6298
  %tobool70 = icmp eq %struct.VEC_edge_gc* %25, null, !dbg !6298
  br i1 %tobool70, label %cond.end74, label %cond.true71, !dbg !6298

cond.true71:                                      ; preds = %cond.end68
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !6298
  br label %cond.end74, !dbg !6298

cond.end74:                                       ; preds = %cond.end68, %cond.true71
  %cond75 = phi %struct.VEC_edge_base* [ %base, %cond.true71 ], [ null, %cond.end68 ], !dbg !6298
  %call76 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond75) #7, !dbg !6298
  %cmp77 = icmp eq i32 %call76, 1, !dbg !6299
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !6300

if.then79:                                        ; preds = %cond.end74
  store %struct.basic_block_def* %0, %struct.basic_block_def** @current_block, align 8, !dbg !6301
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !6303
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6303
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6303
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 1, !dbg !6303
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6303
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 0, !dbg !6304
  %bf.load = load i32, i32* %.cast, align 8, !dbg !6304
  %bf.clear = and i32 %bf.load, 65535, !dbg !6304
  %cmp83 = icmp eq i32 %bf.clear, 9, !dbg !6304
  %cond85 = zext i1 %cmp83 to i32, !dbg !6304
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !6226, metadata !DIExpression(DW_OP_deref)), !dbg !6232
  call fastcc void @change_stack(%struct.rtx_def* %27, %struct.stack_def* nonnull %regstack, %struct.stack_def* %stack_in, i32 %cond85) #7, !dbg !6305
  br label %cleanup, !dbg !6306

if.else:                                          ; preds = %cond.end74
  store %struct.basic_block_def* null, %struct.basic_block_def** @current_block, align 8, !dbg !6307
  tail call void @start_sequence() #6, !dbg !6308
  %call86 = tail call %struct.rtx_def* @emit_note(i32 0) #6, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !6231, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata %struct.stack_def* %regstack, metadata !6226, metadata !DIExpression(DW_OP_deref)), !dbg !6232
  call fastcc void @change_stack(%struct.rtx_def* %call86, %struct.stack_def* nonnull %regstack, %struct.stack_def* %stack_in, i32 1) #7, !dbg !6311
  %call87 = call %struct.rtx_def* @get_insns() #6, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call87, metadata !6228, metadata !DIExpression()), !dbg !6310
  call void @end_sequence() #6, !dbg !6313
  call void @insert_insn_on_edge(%struct.rtx_def* %call87, %struct.edge_def* %e) #6, !dbg !6314
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %cond.true58, %if.then54, %cond.true46, %cond.end41, %if.then22, %if.then79, %if.else
  %retval.0 = phi i8 [ 0, %if.then79 ], [ 1, %if.else ], [ 0, %if.then22 ], [ 0, %if.then20 ], [ 0, %cond.end41 ], [ 0, %cond.true46 ], [ 0, %if.then54 ], [ 0, %cond.true58 ], !dbg !6232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6315
  ret i8 %retval.0, !dbg !6315
}

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_note(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1939, !1940, !1941}
!llvm.ident = !{!1942}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "regstack_completed", scope: !2, file: !3, line: 192, type: !766, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !763, globals: !1889, nameTableKind: None)
!3 = !DIFile(filename: "reg-stack.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !527, !703, !725, !759}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !521, line: 104, baseType: !7, size: 32, elements: !522)
!521 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!522 = !{!523, !524, !525, !526}
!523 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!524 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!525 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!526 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !528, line: 74, baseType: !7, size: 32, elements: !529)
!528 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702}
!530 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!702 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !704, line: 36, baseType: !7, size: 32, elements: !705)
!704 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724}
!706 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!707 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!708 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!709 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!710 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!711 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!712 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!713 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!714 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!715 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!716 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!717 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!718 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!719 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!720 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!721 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!722 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!723 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!724 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758}
!727 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!728 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!729 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!730 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!731 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!732 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!733 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!734 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!735 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!736 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!737 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!738 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!739 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!740 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!741 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!742 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!743 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!744 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!745 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!746 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!747 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!748 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!749 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!750 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!751 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!752 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!753 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!754 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!755 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!756 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!757 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!758 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!759 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emit_where", file: !3, line: 226, baseType: !7, size: 32, elements: !760)
!760 = !{!761, !762}
!761 = !DIEnumerator(name: "EMIT_AFTER", value: 0, isUnsigned: true)
!762 = !DIEnumerator(name: "EMIT_BEFORE", value: 1, isUnsigned: true)
!763 = !{!764, !765, !766, !767, !770, !771, !377, !7, !773, !788, !789, !798, !5, !808, !183, !878, !1884, !703, !725, !910, !1886, !1887, !1888}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!766 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_char_heap", file: !775, line: 24, baseType: !776)
!775 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_char_heap", file: !775, line: 24, size: 96, elements: !777)
!777 = !{!778}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !776, file: !775, line: 24, baseType: !779, size: 96)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_char_base", file: !775, line: 23, baseType: !780)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_char_base", file: !775, line: 23, size: 96, elements: !781)
!781 = !{!782, !783, !784}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !780, file: !775, line: 23, baseType: !7, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !780, file: !775, line: 23, baseType: !7, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !780, file: !775, line: 23, baseType: !785, size: 8, offset: 64)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 8, elements: !786)
!786 = !{!787}
!787 = !DISubrange(count: 1)
!788 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_info", file: !3, line: 221, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_info_def", file: !3, line: 213, size: 512, elements: !792)
!792 = !{!793, !804, !805, !806, !807}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "stack_in", scope: !791, file: !3, line: 215, baseType: !794, size: 192)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stack_def", file: !3, line: 203, size: 192, elements: !795)
!795 = !{!796, !797, !800}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !794, file: !3, line: 205, baseType: !766, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set", scope: !794, file: !3, line: 206, baseType: !798, size: 64, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !799, line: 42, baseType: !788)
!799 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!800 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !794, file: !3, line: 207, baseType: !801, size: 64, offset: 128)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 64, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 8)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "stack_out", scope: !791, file: !3, line: 216, baseType: !794, size: 192, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "out_reg_set", scope: !791, file: !3, line: 217, baseType: !798, size: 64, offset: 384)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !791, file: !3, line: 218, baseType: !766, size: 32, offset: 448)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "predecessors", scope: !791, file: !3, line: 219, baseType: !766, size: 32, offset: 480)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !810, line: 826, size: 256, elements: !811)
!810 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!811 = !{!812, !875, !876, !877}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !809, file: !810, line: 829, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !814, line: 47, baseType: !815)
!814 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !817, line: 75, size: 256, elements: !818)
!817 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !833, !834, !835}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !816, file: !817, line: 76, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !817, line: 68, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !817, line: 63, size: 320, elements: !823)
!823 = !{!824, !826, !827, !828}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !822, file: !817, line: 64, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !822, file: !817, line: 65, baseType: !825, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !822, file: !817, line: 66, baseType: !7, size: 32, offset: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !822, file: !817, line: 67, baseType: !829, size: 128, offset: 192)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 128, elements: !831)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !817, line: 29, baseType: !788)
!831 = !{!832}
!832 = !DISubrange(count: 2)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !816, file: !817, line: 77, baseType: !820, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !816, file: !817, line: 78, baseType: !7, size: 32, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !816, file: !817, line: 79, baseType: !836, size: 64, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !817, line: 49, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !817, line: 45, size: 832, elements: !839)
!839 = !{!840, !841, !842}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !838, file: !817, line: 46, baseType: !825, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !838, file: !817, line: 47, baseType: !815, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !838, file: !817, line: 48, baseType: !843, size: 704, offset: 128)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !844, line: 164, size: 704, elements: !845)
!844 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!845 = !{!846, !848, !858, !859, !860, !861, !862, !863, !867, !871, !872, !873, !874}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !843, file: !844, line: 166, baseType: !847, size: 64)
!847 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !843, file: !844, line: 167, baseType: !849, size: 64, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !844, line: 157, size: 192, elements: !851)
!851 = !{!852, !853, !854}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !850, file: !844, line: 159, baseType: !768, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !850, file: !844, line: 160, baseType: !849, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !850, file: !844, line: 161, baseType: !855, size: 32, offset: 128)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 32, elements: !856)
!856 = !{!857}
!857 = !DISubrange(count: 4)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !843, file: !844, line: 168, baseType: !768, size: 64, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !843, file: !844, line: 169, baseType: !768, size: 64, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !843, file: !844, line: 170, baseType: !768, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !843, file: !844, line: 171, baseType: !847, size: 64, offset: 320)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !843, file: !844, line: 172, baseType: !766, size: 32, offset: 384)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !843, file: !844, line: 176, baseType: !864, size: 64, offset: 448)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!849, !770, !847}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !843, file: !844, line: 177, baseType: !868, size: 64, offset: 512)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !770, !849}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !843, file: !844, line: 178, baseType: !770, size: 64, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !843, file: !844, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !843, file: !844, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !843, file: !844, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !809, file: !810, line: 831, baseType: !813, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !809, file: !810, line: 834, baseType: !813, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !809, file: !810, line: 835, baseType: !813, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !814, line: 111, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !882)
!882 = !{!883, !1849, !1850, !1851, !1854, !1858, !1859, !1860, !1878, !1879, !1880, !1881, !1882, !1883}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !881, file: !135, line: 219, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !887)
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !886, file: !135, line: 151, baseType: !889, size: 128)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !891)
!891 = !{!892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !890, file: !135, line: 150, baseType: !7, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !890, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !890, file: !135, line: 150, baseType: !895, size: 64, offset: 64)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 64, elements: !786)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !814, line: 108, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !899)
!899 = !{!900, !901, !902, !1841, !1842, !1843, !1844, !1845, !1846, !1847}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !898, file: !135, line: 124, baseType: !880, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !898, file: !135, line: 125, baseType: !880, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !898, file: !135, line: 131, baseType: !903, size: 64, offset: 128)
!903 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !904)
!904 = !{!905, !909}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !903, file: !135, line: 129, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !814, line: 66, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !814, line: 65, flags: DIFlagFwdDecl)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !903, file: !135, line: 130, baseType: !910, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !814, line: 50, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !913)
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !912, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !912, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !912, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !912, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !912, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !912, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !912, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !912, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !912, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !912, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !912, file: !378, line: 321, baseType: !925, size: 320, offset: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !926)
!926 = !{!927, !1776, !1778, !1839, !1840}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !925, file: !378, line: 316, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 64, elements: !786)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !944, !945, !957, !960, !961, !1754, !1755, !1766, !1773}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !930, file: !378, line: 168, baseType: !766, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !930, file: !378, line: 169, baseType: !7, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !930, file: !378, line: 170, baseType: !771, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !930, file: !378, line: 171, baseType: !910, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !930, file: !378, line: 172, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !814, line: 53, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !939, file: !378, line: 360, baseType: !766, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !939, file: !378, line: 361, baseType: !943, size: 64, offset: 64)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 64, elements: !786)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !930, file: !378, line: 173, baseType: !5, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !930, file: !378, line: 174, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !947, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !947, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !947, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !947, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !947, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !947, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !947, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !947, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !930, file: !378, line: 175, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !930, file: !378, line: 176, baseType: !815, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !930, file: !378, line: 177, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !814, line: 56, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !965)
!965 = !{!966, !999, !1005, !1016, !1035, !1046, !1051, !1057, !1063, !1076, !1088, !1126, !1131, !1159, !1167, !1168, !1173, !1182, !1188, !1193, !1197, !1201, !1378, !1427, !1433, !1440, !1447, !1473, !1498, !1515, !1527, !1549, !1564, !1736}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !964, file: !151, line: 3372, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !967, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !967, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !967, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !967, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !967, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !967, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !967, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !967, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !967, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !967, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !967, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !967, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !967, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !967, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !967, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !967, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !967, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !967, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !967, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !967, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !967, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !967, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !967, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !967, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !967, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !967, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !967, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !967, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !967, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !967, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !964, file: !151, line: 3373, baseType: !1000, size: 192)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1000, file: !151, line: 403, baseType: !967, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1000, file: !151, line: 404, baseType: !962, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1000, file: !151, line: 405, baseType: !962, size: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !964, file: !151, line: 3374, baseType: !1006, size: 320)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1006, file: !151, line: 1385, baseType: !1000, size: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1006, file: !151, line: 1386, baseType: !1010, size: 128, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1011, line: 58, baseType: !1012)
!1011 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1011, line: 54, size: 128, elements: !1013)
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1012, file: !1011, line: 56, baseType: !788, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1012, file: !1011, line: 57, baseType: !847, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !964, file: !151, line: 3375, baseType: !1017, size: 256)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1017, file: !151, line: 1398, baseType: !1000, size: 192)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1017, file: !151, line: 1399, baseType: !1021, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1023, line: 52, size: 256, elements: !1024)
!1023 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1022, file: !1023, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1022, file: !1023, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1022, file: !1023, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1022, file: !1023, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1022, file: !1023, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1022, file: !1023, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1022, file: !1023, line: 62, baseType: !1032, size: 192, offset: 64)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 192, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 3)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !964, file: !151, line: 3376, baseType: !1036, size: 256)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !1037)
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1036, file: !151, line: 1409, baseType: !1000, size: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1036, file: !151, line: 1410, baseType: !1040, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1042, line: 27, size: 192, elements: !1043)
!1042 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1041, file: !1042, line: 29, baseType: !1010, size: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1041, file: !1042, line: 30, baseType: !5, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !964, file: !151, line: 3377, baseType: !1047, size: 256)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1047, file: !151, line: 1438, baseType: !1000, size: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1047, file: !151, line: 1439, baseType: !962, size: 64, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !964, file: !151, line: 3378, baseType: !1052, size: 256)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1052, file: !151, line: 1419, baseType: !1000, size: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1052, file: !151, line: 1420, baseType: !766, size: 32, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1052, file: !151, line: 1421, baseType: !785, size: 8, offset: 224)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !964, file: !151, line: 3379, baseType: !1058, size: 320)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !1059)
!1059 = !{!1060, !1061, !1062}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1058, file: !151, line: 1429, baseType: !1000, size: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1058, file: !151, line: 1430, baseType: !962, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1058, file: !151, line: 1431, baseType: !962, size: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !964, file: !151, line: 3380, baseType: !1064, size: 320)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !151, line: 1461, baseType: !1000, size: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1064, file: !151, line: 1462, baseType: !1068, size: 128, offset: 192)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1069, line: 31, size: 128, elements: !1070)
!1069 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1070 = !{!1071, !1074, !1075}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1068, file: !1069, line: 32, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1068, file: !1069, line: 33, baseType: !7, size: 32, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1068, file: !1069, line: 34, baseType: !7, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !964, file: !151, line: 3381, baseType: !1077, size: 384)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !1078)
!1078 = !{!1079, !1080, !1085, !1086, !1087}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1077, file: !151, line: 2508, baseType: !1000, size: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1077, file: !151, line: 2509, baseType: !1081, size: 32, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1082, line: 58, baseType: !1083)
!1082 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1084, line: 44, baseType: !7)
!1084 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1077, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1077, file: !151, line: 2511, baseType: !962, size: 64, offset: 256)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1077, file: !151, line: 2512, baseType: !962, size: 64, offset: 320)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !964, file: !151, line: 3382, baseType: !1089, size: 896)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !151, line: 2653, baseType: !1077, size: 384)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1089, file: !151, line: 2654, baseType: !962, size: 64, offset: 384)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1089, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1089, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1089, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1089, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1089, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1089, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1089, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1089, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1089, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1089, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1089, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1089, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1089, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1089, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1089, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1089, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1089, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1089, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1089, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1089, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1089, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1089, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1089, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1089, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1089, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1089, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1089, file: !151, line: 2705, baseType: !962, size: 64, offset: 576)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1089, file: !151, line: 2706, baseType: !962, size: 64, offset: 640)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1089, file: !151, line: 2707, baseType: !962, size: 64, offset: 704)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1089, file: !151, line: 2708, baseType: !962, size: 64, offset: 768)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1089, file: !151, line: 2711, baseType: !1124, size: 64, offset: 832)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !964, file: !151, line: 3383, baseType: !1127, size: 960)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !1128)
!1128 = !{!1129, !1130}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1127, file: !151, line: 2757, baseType: !1089, size: 896)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1127, file: !151, line: 2758, baseType: !910, size: 64, offset: 896)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !964, file: !151, line: 3384, baseType: !1132, size: 1472)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1133)
!1133 = !{!1134, !1155, !1156, !1157, !1158}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1132, file: !151, line: 3115, baseType: !1135, size: 1216)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !151, line: 2985, baseType: !1127, size: 960)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1135, file: !151, line: 2986, baseType: !962, size: 64, offset: 960)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1135, file: !151, line: 2987, baseType: !962, size: 64, offset: 1024)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1135, file: !151, line: 2988, baseType: !962, size: 64, offset: 1088)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1135, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1135, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1135, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1135, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1135, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1135, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1135, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1135, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1135, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1135, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1135, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1135, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1135, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1135, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1132, file: !151, line: 3117, baseType: !962, size: 64, offset: 1216)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1132, file: !151, line: 3119, baseType: !962, size: 64, offset: 1280)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1132, file: !151, line: 3121, baseType: !962, size: 64, offset: 1344)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1132, file: !151, line: 3123, baseType: !962, size: 64, offset: 1408)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !964, file: !151, line: 3385, baseType: !1160, size: 1088)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1160, file: !151, line: 2875, baseType: !1127, size: 960)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1160, file: !151, line: 2876, baseType: !910, size: 64, offset: 960)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1160, file: !151, line: 2877, baseType: !1165, size: 64, offset: 1024)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !964, file: !151, line: 3386, baseType: !1135, size: 1216)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !964, file: !151, line: 3387, baseType: !1169, size: 1280)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1170)
!1170 = !{!1171, !1172}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1169, file: !151, line: 3094, baseType: !1135, size: 1216)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1169, file: !151, line: 3095, baseType: !1165, size: 64, offset: 1216)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !964, file: !151, line: 3388, baseType: !1174, size: 1216)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1180, !1181}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1174, file: !151, line: 2825, baseType: !1089, size: 896)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1174, file: !151, line: 2827, baseType: !962, size: 64, offset: 896)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1174, file: !151, line: 2828, baseType: !962, size: 64, offset: 960)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1174, file: !151, line: 2829, baseType: !962, size: 64, offset: 1024)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1174, file: !151, line: 2830, baseType: !962, size: 64, offset: 1088)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1174, file: !151, line: 2831, baseType: !962, size: 64, offset: 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !964, file: !151, line: 3389, baseType: !1183, size: 1024)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1184)
!1184 = !{!1185, !1186, !1187}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1183, file: !151, line: 2851, baseType: !1127, size: 960)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1183, file: !151, line: 2852, baseType: !766, size: 32, offset: 960)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1183, file: !151, line: 2853, baseType: !766, size: 32, offset: 992)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !964, file: !151, line: 3390, baseType: !1189, size: 1024)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1189, file: !151, line: 2858, baseType: !1127, size: 960)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1189, file: !151, line: 2859, baseType: !1165, size: 64, offset: 960)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !964, file: !151, line: 3391, baseType: !1194, size: 960)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1195)
!1195 = !{!1196}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1194, file: !151, line: 2863, baseType: !1127, size: 960)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !964, file: !151, line: 3392, baseType: !1198, size: 1472)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1198, file: !151, line: 3305, baseType: !1132, size: 1472)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !964, file: !151, line: 3393, baseType: !1202, size: 1792)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1203)
!1203 = !{!1204, !1205, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1202, file: !151, line: 3249, baseType: !1132, size: 1472)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1202, file: !151, line: 3251, baseType: !1206, size: 64, offset: 1472)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1208, line: 463, size: 1152, elements: !1209)
!1208 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1209 = !{!1210, !1213, !1243, !1244, !1247, !1250, !1302, !1303, !1304, !1305, !1306, !1330, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1207, file: !1208, line: 464, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1208, line: 464, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1207, file: !1208, line: 467, baseType: !1214, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1232, !1233, !1234, !1235, !1236, !1237, !1239, !1241, !1242}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1215, file: !135, line: 377, baseType: !879, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1215, file: !135, line: 378, baseType: !879, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1215, file: !135, line: 381, baseType: !1220, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1223)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1222, file: !135, line: 282, baseType: !1225, size: 128)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1227)
!1227 = !{!1228, !1229, !1230}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1226, file: !135, line: 281, baseType: !7, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1226, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1226, file: !135, line: 281, baseType: !1231, size: 64, offset: 64)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 64, elements: !786)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1215, file: !135, line: 384, baseType: !766, size: 32, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1215, file: !135, line: 387, baseType: !766, size: 32, offset: 224)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1215, file: !135, line: 390, baseType: !766, size: 32, offset: 256)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1215, file: !135, line: 394, baseType: !1220, size: 64, offset: 320)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1215, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1215, file: !135, line: 399, baseType: !1238, size: 64, offset: 416)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !831)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1215, file: !135, line: 402, baseType: !1240, size: 64, offset: 480)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !831)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1215, file: !135, line: 406, baseType: !766, size: 32, offset: 544)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1215, file: !135, line: 409, baseType: !766, size: 32, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1207, file: !1208, line: 470, baseType: !907, size: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1207, file: !1208, line: 473, baseType: !1245, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1208, line: 166, flags: DIFlagFwdDecl)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1207, file: !1208, line: 476, baseType: !1248, size: 64, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1208, line: 476, flags: DIFlagFwdDecl)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1207, file: !1208, line: 479, baseType: !1251, size: 64, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1252, line: 144, baseType: !1253)
!1252 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1252, line: 100, size: 896, elements: !1255)
!1255 = !{!1256, !1264, !1269, !1274, !1276, !1279, !1280, !1281, !1282, !1283, !1288, !1290, !1291, !1296, !1301}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1254, file: !1252, line: 102, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1252, line: 52, baseType: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!1261, !1262}
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1252, line: 47, baseType: !7)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1254, file: !1252, line: 105, baseType: !1265, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1252, line: 59, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!766, !1262, !1262}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1254, file: !1252, line: 108, baseType: !1270, size: 64, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1252, line: 63, baseType: !1271)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !770}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1254, file: !1252, line: 111, baseType: !1275, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1254, file: !1252, line: 114, baseType: !1277, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1278, line: 46, baseType: !788)
!1278 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1254, file: !1252, line: 117, baseType: !1277, size: 64, offset: 320)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1254, file: !1252, line: 120, baseType: !1277, size: 64, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1254, file: !1252, line: 124, baseType: !7, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1254, file: !1252, line: 128, baseType: !7, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1254, file: !1252, line: 131, baseType: !1284, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1252, line: 75, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!770, !1277, !1277}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1254, file: !1252, line: 132, baseType: !1289, size: 64, offset: 576)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1252, line: 78, baseType: !1271)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1254, file: !1252, line: 135, baseType: !770, size: 64, offset: 640)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1254, file: !1252, line: 136, baseType: !1292, size: 64, offset: 704)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1252, line: 82, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!770, !770, !1277, !1277}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1254, file: !1252, line: 137, baseType: !1297, size: 64, offset: 768)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1252, line: 83, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !770, !770}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1254, file: !1252, line: 141, baseType: !7, size: 32, offset: 832)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1207, file: !1208, line: 484, baseType: !962, size: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1207, file: !1208, line: 488, baseType: !962, size: 64, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1207, file: !1208, line: 493, baseType: !962, size: 64, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1207, file: !1208, line: 496, baseType: !962, size: 64, offset: 576)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1207, file: !1208, line: 501, baseType: !1307, size: 64, offset: 640)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1309)
!1309 = !{!1310, !1313, !1314, !1315, !1316, !1318, !1319, !1324, !1325, !1326, !1327, !1328, !1329}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1308, file: !146, line: 2356, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1308, file: !146, line: 2357, baseType: !771, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1308, file: !146, line: 2358, baseType: !766, size: 32, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1308, file: !146, line: 2359, baseType: !766, size: 32, offset: 160)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1308, file: !146, line: 2360, baseType: !1317, size: 128, offset: 192)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 128, elements: !856)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1308, file: !146, line: 2364, baseType: !766, size: 32, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1308, file: !146, line: 2367, baseType: !1320, size: 128, offset: 384)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1321)
!1321 = !{!1322, !1323}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1320, file: !146, line: 2351, baseType: !910, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1320, file: !146, line: 2352, baseType: !847, size: 64, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1308, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1308, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1308, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1308, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1308, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1308, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1207, file: !1208, line: 504, baseType: !1331, size: 64, offset: 704)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1208, line: 504, flags: DIFlagFwdDecl)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1207, file: !1208, line: 507, baseType: !1251, size: 64, offset: 768)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1207, file: !1208, line: 510, baseType: !766, size: 32, offset: 832)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1207, file: !1208, line: 513, baseType: !766, size: 32, offset: 864)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1207, file: !1208, line: 516, baseType: !1081, size: 32, offset: 896)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1207, file: !1208, line: 519, baseType: !1081, size: 32, offset: 928)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1207, file: !1208, line: 522, baseType: !7, size: 32, offset: 960)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1207, file: !1208, line: 523, baseType: !7, size: 32, offset: 992)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1207, file: !1208, line: 528, baseType: !771, size: 64, offset: 1024)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1207, file: !1208, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1207, file: !1208, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1207, file: !1208, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1207, file: !1208, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1207, file: !1208, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1207, file: !1208, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1207, file: !1208, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1207, file: !1208, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1207, file: !1208, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1207, file: !1208, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1207, file: !1208, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1207, file: !1208, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1207, file: !1208, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1207, file: !1208, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1207, file: !1208, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1207, file: !1208, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1202, file: !151, line: 3254, baseType: !962, size: 64, offset: 1536)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1202, file: !151, line: 3257, baseType: !962, size: 64, offset: 1600)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1202, file: !151, line: 3258, baseType: !962, size: 64, offset: 1664)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1202, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1202, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1202, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1202, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1202, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1202, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1202, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1202, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1202, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1202, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1202, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1202, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1202, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1202, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1202, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1202, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1202, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1202, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !964, file: !151, line: 3394, baseType: !1379, size: 1344)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1380)
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1406, !1407, !1408, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1379, file: !151, line: 2280, baseType: !1000, size: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1379, file: !151, line: 2281, baseType: !962, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1379, file: !151, line: 2282, baseType: !962, size: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1379, file: !151, line: 2283, baseType: !962, size: 64, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1379, file: !151, line: 2284, baseType: !962, size: 64, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1379, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1379, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1379, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1379, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1379, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1379, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1379, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1379, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1379, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1379, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1379, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1379, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1379, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1379, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1379, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1379, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1379, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1379, file: !151, line: 2306, baseType: !1404, size: 32, offset: 544)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1405, line: 31, baseType: !766)
!1405 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1379, file: !151, line: 2307, baseType: !962, size: 64, offset: 576)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1379, file: !151, line: 2308, baseType: !962, size: 64, offset: 640)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1379, file: !151, line: 2314, baseType: !1409, size: 64, offset: 704)
!1409 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1410)
!1410 = !{!1411, !1412, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1409, file: !151, line: 2310, baseType: !766, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1409, file: !151, line: 2311, baseType: !771, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1409, file: !151, line: 2312, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1379, file: !151, line: 2315, baseType: !962, size: 64, offset: 768)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1379, file: !151, line: 2316, baseType: !962, size: 64, offset: 832)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1379, file: !151, line: 2317, baseType: !962, size: 64, offset: 896)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1379, file: !151, line: 2318, baseType: !962, size: 64, offset: 960)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1379, file: !151, line: 2319, baseType: !962, size: 64, offset: 1024)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1379, file: !151, line: 2320, baseType: !962, size: 64, offset: 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1379, file: !151, line: 2321, baseType: !962, size: 64, offset: 1152)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1379, file: !151, line: 2322, baseType: !962, size: 64, offset: 1216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1379, file: !151, line: 2324, baseType: !1425, size: 64, offset: 1280)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !964, file: !151, line: 3395, baseType: !1428, size: 320)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1428, file: !151, line: 1470, baseType: !1000, size: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1428, file: !151, line: 1471, baseType: !962, size: 64, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1428, file: !151, line: 1472, baseType: !962, size: 64, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !964, file: !151, line: 3396, baseType: !1434, size: 320)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1435)
!1435 = !{!1436, !1437, !1438}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1434, file: !151, line: 1483, baseType: !1000, size: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1434, file: !151, line: 1484, baseType: !766, size: 32, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1434, file: !151, line: 1485, baseType: !1439, size: 64, offset: 256)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 64, elements: !786)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !964, file: !151, line: 3397, baseType: !1441, size: 384)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1441, file: !151, line: 1830, baseType: !1000, size: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1441, file: !151, line: 1831, baseType: !1081, size: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1441, file: !151, line: 1832, baseType: !962, size: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1441, file: !151, line: 1835, baseType: !1439, size: 64, offset: 320)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !964, file: !151, line: 3398, baseType: !1448, size: 704)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1456, !1457, !1460}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1448, file: !151, line: 1899, baseType: !1000, size: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1448, file: !151, line: 1902, baseType: !962, size: 64, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1448, file: !151, line: 1905, baseType: !1453, size: 64, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !814, line: 58, baseType: !1454)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !814, line: 57, flags: DIFlagFwdDecl)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1448, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1448, file: !151, line: 1911, baseType: !1458, size: 64, offset: 384)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1448, file: !151, line: 1914, baseType: !1461, size: 256, offset: 448)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1462)
!1462 = !{!1463, !1465, !1466, !1471}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1461, file: !151, line: 1884, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1461, file: !151, line: 1885, baseType: !1464, size: 64, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1461, file: !151, line: 1891, baseType: !1467, size: 64, offset: 128)
!1467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1461, file: !151, line: 1891, size: 64, elements: !1468)
!1468 = !{!1469, !1470}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1467, file: !151, line: 1891, baseType: !1453, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1467, file: !151, line: 1891, baseType: !962, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1461, file: !151, line: 1892, baseType: !1472, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !964, file: !151, line: 3399, baseType: !1474, size: 704)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1493, !1494, !1495, !1496, !1497}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1474, file: !151, line: 2009, baseType: !1000, size: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1474, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1474, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1474, file: !151, line: 2014, baseType: !1081, size: 32, offset: 224)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1474, file: !151, line: 2016, baseType: !962, size: 64, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1474, file: !151, line: 2017, baseType: !1482, size: 64, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1485)
!1485 = !{!1486}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1484, file: !151, line: 183, baseType: !1487, size: 128)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1489)
!1489 = !{!1490, !1491, !1492}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1488, file: !151, line: 182, baseType: !7, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1488, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1488, file: !151, line: 182, baseType: !1439, size: 64, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1474, file: !151, line: 2019, baseType: !962, size: 64, offset: 384)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1474, file: !151, line: 2020, baseType: !962, size: 64, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1474, file: !151, line: 2021, baseType: !962, size: 64, offset: 512)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1474, file: !151, line: 2022, baseType: !962, size: 64, offset: 576)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1474, file: !151, line: 2023, baseType: !962, size: 64, offset: 640)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !964, file: !151, line: 3400, baseType: !1499, size: 832)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1499, file: !151, line: 2431, baseType: !1000, size: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1499, file: !151, line: 2433, baseType: !962, size: 64, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1499, file: !151, line: 2434, baseType: !962, size: 64, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1499, file: !151, line: 2435, baseType: !962, size: 64, offset: 320)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1499, file: !151, line: 2436, baseType: !962, size: 64, offset: 384)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1499, file: !151, line: 2437, baseType: !1482, size: 64, offset: 448)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1499, file: !151, line: 2438, baseType: !962, size: 64, offset: 512)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1499, file: !151, line: 2440, baseType: !962, size: 64, offset: 576)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1499, file: !151, line: 2441, baseType: !962, size: 64, offset: 640)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1499, file: !151, line: 2443, baseType: !1511, size: 128, offset: 704)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1513)
!1513 = !{!1514}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1512, file: !151, line: 182, baseType: !1487, size: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !964, file: !151, line: 3401, baseType: !1516, size: 320)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1517)
!1517 = !{!1518, !1519, !1526}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1516, file: !151, line: 3329, baseType: !1000, size: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1516, file: !151, line: 3330, baseType: !1520, size: 64, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1522)
!1522 = !{!1523, !1524, !1525}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1521, file: !151, line: 3322, baseType: !1520, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1521, file: !151, line: 3323, baseType: !1520, size: 64, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1521, file: !151, line: 3324, baseType: !962, size: 64, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1516, file: !151, line: 3331, baseType: !1520, size: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !964, file: !151, line: 3402, baseType: !1528, size: 256)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1528, file: !151, line: 1541, baseType: !1000, size: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1528, file: !151, line: 1542, baseType: !1532, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1535)
!1535 = !{!1536}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1534, file: !151, line: 1538, baseType: !1537, size: 192)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1539)
!1539 = !{!1540, !1541, !1542}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1538, file: !151, line: 1537, baseType: !7, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1538, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1538, file: !151, line: 1537, baseType: !1543, size: 128, offset: 64)
!1543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1544, size: 128, elements: !786)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1545, file: !151, line: 1533, baseType: !962, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1545, file: !151, line: 1534, baseType: !962, size: 64, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !964, file: !151, line: 3403, baseType: !1550, size: 512)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1561, !1562, !1563}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1550, file: !151, line: 1939, baseType: !1000, size: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1550, file: !151, line: 1940, baseType: !1081, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1550, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1550, file: !151, line: 1946, baseType: !1556, size: 32, offset: 256)
!1556 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1557)
!1557 = !{!1558, !1559, !1560}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1556, file: !151, line: 1943, baseType: !169, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1556, file: !151, line: 1944, baseType: !176, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1556, file: !151, line: 1945, baseType: !183, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1550, file: !151, line: 1950, baseType: !906, size: 64, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1550, file: !151, line: 1951, baseType: !906, size: 64, offset: 384)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1550, file: !151, line: 1953, baseType: !1439, size: 64, offset: 448)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !964, file: !151, line: 3404, baseType: !1565, size: 1664)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !151, line: 3338, baseType: !1000, size: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1565, file: !151, line: 3341, baseType: !1569, size: 1472, offset: 192)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1570, line: 410, size: 1472, elements: !1571)
!1570 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1571 = !{!1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1569, file: !1570, line: 412, baseType: !766, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1569, file: !1570, line: 413, baseType: !766, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1569, file: !1570, line: 414, baseType: !766, size: 32, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1569, file: !1570, line: 415, baseType: !766, size: 32, offset: 96)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1569, file: !1570, line: 416, baseType: !766, size: 32, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1569, file: !1570, line: 417, baseType: !766, size: 32, offset: 160)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1569, file: !1570, line: 418, baseType: !765, size: 8, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1569, file: !1570, line: 419, baseType: !765, size: 8, offset: 200)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1569, file: !1570, line: 420, baseType: !1581, size: 8, offset: 208)
!1581 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1569, file: !1570, line: 421, baseType: !1581, size: 8, offset: 216)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1569, file: !1570, line: 422, baseType: !1581, size: 8, offset: 224)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1569, file: !1570, line: 423, baseType: !1581, size: 8, offset: 232)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1569, file: !1570, line: 424, baseType: !1581, size: 8, offset: 240)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1569, file: !1570, line: 425, baseType: !1581, size: 8, offset: 248)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1569, file: !1570, line: 426, baseType: !1581, size: 8, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1569, file: !1570, line: 427, baseType: !1581, size: 8, offset: 264)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1569, file: !1570, line: 428, baseType: !1581, size: 8, offset: 272)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1569, file: !1570, line: 429, baseType: !1581, size: 8, offset: 280)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1569, file: !1570, line: 430, baseType: !1581, size: 8, offset: 288)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1569, file: !1570, line: 431, baseType: !1581, size: 8, offset: 296)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1569, file: !1570, line: 432, baseType: !1581, size: 8, offset: 304)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1569, file: !1570, line: 433, baseType: !1581, size: 8, offset: 312)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1569, file: !1570, line: 434, baseType: !1581, size: 8, offset: 320)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1569, file: !1570, line: 435, baseType: !1581, size: 8, offset: 328)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1569, file: !1570, line: 436, baseType: !1581, size: 8, offset: 336)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1569, file: !1570, line: 437, baseType: !1581, size: 8, offset: 344)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1569, file: !1570, line: 438, baseType: !1581, size: 8, offset: 352)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1569, file: !1570, line: 439, baseType: !1581, size: 8, offset: 360)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1569, file: !1570, line: 440, baseType: !1581, size: 8, offset: 368)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1569, file: !1570, line: 441, baseType: !1581, size: 8, offset: 376)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1569, file: !1570, line: 442, baseType: !1581, size: 8, offset: 384)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1569, file: !1570, line: 443, baseType: !1581, size: 8, offset: 392)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1569, file: !1570, line: 444, baseType: !1581, size: 8, offset: 400)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1569, file: !1570, line: 445, baseType: !1581, size: 8, offset: 408)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1569, file: !1570, line: 446, baseType: !1581, size: 8, offset: 416)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1569, file: !1570, line: 447, baseType: !1581, size: 8, offset: 424)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1569, file: !1570, line: 448, baseType: !1581, size: 8, offset: 432)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1569, file: !1570, line: 449, baseType: !1581, size: 8, offset: 440)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1569, file: !1570, line: 450, baseType: !1581, size: 8, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1569, file: !1570, line: 451, baseType: !1581, size: 8, offset: 456)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1569, file: !1570, line: 452, baseType: !1581, size: 8, offset: 464)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1569, file: !1570, line: 453, baseType: !1581, size: 8, offset: 472)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1569, file: !1570, line: 454, baseType: !1581, size: 8, offset: 480)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1569, file: !1570, line: 455, baseType: !1581, size: 8, offset: 488)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1569, file: !1570, line: 456, baseType: !1581, size: 8, offset: 496)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1569, file: !1570, line: 457, baseType: !1581, size: 8, offset: 504)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1569, file: !1570, line: 458, baseType: !1581, size: 8, offset: 512)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1569, file: !1570, line: 459, baseType: !1581, size: 8, offset: 520)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1569, file: !1570, line: 460, baseType: !1581, size: 8, offset: 528)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1569, file: !1570, line: 461, baseType: !1581, size: 8, offset: 536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1569, file: !1570, line: 462, baseType: !1581, size: 8, offset: 544)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1569, file: !1570, line: 463, baseType: !1581, size: 8, offset: 552)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1569, file: !1570, line: 464, baseType: !1581, size: 8, offset: 560)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1569, file: !1570, line: 465, baseType: !1581, size: 8, offset: 568)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1569, file: !1570, line: 466, baseType: !1581, size: 8, offset: 576)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1569, file: !1570, line: 467, baseType: !1581, size: 8, offset: 584)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1569, file: !1570, line: 468, baseType: !1581, size: 8, offset: 592)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1569, file: !1570, line: 469, baseType: !1581, size: 8, offset: 600)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1569, file: !1570, line: 470, baseType: !1581, size: 8, offset: 608)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1569, file: !1570, line: 471, baseType: !1581, size: 8, offset: 616)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1569, file: !1570, line: 472, baseType: !1581, size: 8, offset: 624)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1569, file: !1570, line: 473, baseType: !1581, size: 8, offset: 632)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1569, file: !1570, line: 474, baseType: !1581, size: 8, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1569, file: !1570, line: 475, baseType: !1581, size: 8, offset: 648)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1569, file: !1570, line: 476, baseType: !1581, size: 8, offset: 656)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1569, file: !1570, line: 477, baseType: !1581, size: 8, offset: 664)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1569, file: !1570, line: 478, baseType: !1581, size: 8, offset: 672)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1569, file: !1570, line: 479, baseType: !1581, size: 8, offset: 680)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1569, file: !1570, line: 480, baseType: !1581, size: 8, offset: 688)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1569, file: !1570, line: 481, baseType: !1581, size: 8, offset: 696)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1569, file: !1570, line: 482, baseType: !1581, size: 8, offset: 704)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1569, file: !1570, line: 483, baseType: !1581, size: 8, offset: 712)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1569, file: !1570, line: 484, baseType: !1581, size: 8, offset: 720)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1569, file: !1570, line: 485, baseType: !1581, size: 8, offset: 728)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1569, file: !1570, line: 486, baseType: !1581, size: 8, offset: 736)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1569, file: !1570, line: 487, baseType: !1581, size: 8, offset: 744)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1569, file: !1570, line: 488, baseType: !1581, size: 8, offset: 752)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1569, file: !1570, line: 489, baseType: !1581, size: 8, offset: 760)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1569, file: !1570, line: 490, baseType: !1581, size: 8, offset: 768)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1569, file: !1570, line: 491, baseType: !1581, size: 8, offset: 776)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1569, file: !1570, line: 492, baseType: !1581, size: 8, offset: 784)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1569, file: !1570, line: 493, baseType: !1581, size: 8, offset: 792)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1569, file: !1570, line: 494, baseType: !1581, size: 8, offset: 800)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1569, file: !1570, line: 495, baseType: !1581, size: 8, offset: 808)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1569, file: !1570, line: 496, baseType: !1581, size: 8, offset: 816)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1569, file: !1570, line: 497, baseType: !1581, size: 8, offset: 824)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1569, file: !1570, line: 498, baseType: !1581, size: 8, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1569, file: !1570, line: 499, baseType: !1581, size: 8, offset: 840)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1569, file: !1570, line: 500, baseType: !1581, size: 8, offset: 848)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1569, file: !1570, line: 501, baseType: !1581, size: 8, offset: 856)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1569, file: !1570, line: 502, baseType: !1581, size: 8, offset: 864)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1569, file: !1570, line: 503, baseType: !1581, size: 8, offset: 872)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1569, file: !1570, line: 504, baseType: !1581, size: 8, offset: 880)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1569, file: !1570, line: 505, baseType: !1581, size: 8, offset: 888)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1569, file: !1570, line: 506, baseType: !1581, size: 8, offset: 896)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1569, file: !1570, line: 507, baseType: !1581, size: 8, offset: 904)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1569, file: !1570, line: 508, baseType: !1581, size: 8, offset: 912)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1569, file: !1570, line: 509, baseType: !1581, size: 8, offset: 920)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1569, file: !1570, line: 510, baseType: !1581, size: 8, offset: 928)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1569, file: !1570, line: 511, baseType: !1581, size: 8, offset: 936)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1569, file: !1570, line: 512, baseType: !1581, size: 8, offset: 944)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1569, file: !1570, line: 513, baseType: !1581, size: 8, offset: 952)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1569, file: !1570, line: 514, baseType: !1581, size: 8, offset: 960)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1569, file: !1570, line: 515, baseType: !1581, size: 8, offset: 968)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1569, file: !1570, line: 516, baseType: !1581, size: 8, offset: 976)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1569, file: !1570, line: 517, baseType: !1581, size: 8, offset: 984)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1569, file: !1570, line: 518, baseType: !1581, size: 8, offset: 992)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1569, file: !1570, line: 519, baseType: !1581, size: 8, offset: 1000)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1569, file: !1570, line: 520, baseType: !1581, size: 8, offset: 1008)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1569, file: !1570, line: 521, baseType: !1581, size: 8, offset: 1016)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1569, file: !1570, line: 522, baseType: !1581, size: 8, offset: 1024)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1569, file: !1570, line: 523, baseType: !1581, size: 8, offset: 1032)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1569, file: !1570, line: 524, baseType: !1581, size: 8, offset: 1040)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1569, file: !1570, line: 525, baseType: !1581, size: 8, offset: 1048)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1569, file: !1570, line: 526, baseType: !1581, size: 8, offset: 1056)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1569, file: !1570, line: 527, baseType: !1581, size: 8, offset: 1064)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1569, file: !1570, line: 528, baseType: !1581, size: 8, offset: 1072)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1569, file: !1570, line: 529, baseType: !1581, size: 8, offset: 1080)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1569, file: !1570, line: 530, baseType: !1581, size: 8, offset: 1088)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1569, file: !1570, line: 531, baseType: !1581, size: 8, offset: 1096)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1569, file: !1570, line: 532, baseType: !1581, size: 8, offset: 1104)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1569, file: !1570, line: 533, baseType: !1581, size: 8, offset: 1112)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1569, file: !1570, line: 534, baseType: !1581, size: 8, offset: 1120)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1569, file: !1570, line: 535, baseType: !1581, size: 8, offset: 1128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1569, file: !1570, line: 536, baseType: !1581, size: 8, offset: 1136)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1569, file: !1570, line: 537, baseType: !1581, size: 8, offset: 1144)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1569, file: !1570, line: 538, baseType: !1581, size: 8, offset: 1152)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1569, file: !1570, line: 539, baseType: !1581, size: 8, offset: 1160)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1569, file: !1570, line: 540, baseType: !1581, size: 8, offset: 1168)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1569, file: !1570, line: 541, baseType: !1581, size: 8, offset: 1176)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1569, file: !1570, line: 542, baseType: !1581, size: 8, offset: 1184)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1569, file: !1570, line: 543, baseType: !1581, size: 8, offset: 1192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1569, file: !1570, line: 544, baseType: !1581, size: 8, offset: 1200)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1569, file: !1570, line: 545, baseType: !1581, size: 8, offset: 1208)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1569, file: !1570, line: 546, baseType: !1581, size: 8, offset: 1216)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1569, file: !1570, line: 547, baseType: !1581, size: 8, offset: 1224)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1569, file: !1570, line: 548, baseType: !1581, size: 8, offset: 1232)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1569, file: !1570, line: 549, baseType: !1581, size: 8, offset: 1240)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1569, file: !1570, line: 550, baseType: !1581, size: 8, offset: 1248)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1569, file: !1570, line: 551, baseType: !1581, size: 8, offset: 1256)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1569, file: !1570, line: 552, baseType: !1581, size: 8, offset: 1264)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1569, file: !1570, line: 553, baseType: !1581, size: 8, offset: 1272)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1569, file: !1570, line: 554, baseType: !1581, size: 8, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1569, file: !1570, line: 555, baseType: !1581, size: 8, offset: 1288)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1569, file: !1570, line: 556, baseType: !1581, size: 8, offset: 1296)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1569, file: !1570, line: 557, baseType: !1581, size: 8, offset: 1304)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1569, file: !1570, line: 558, baseType: !1581, size: 8, offset: 1312)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1569, file: !1570, line: 559, baseType: !1581, size: 8, offset: 1320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1569, file: !1570, line: 560, baseType: !1581, size: 8, offset: 1328)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1569, file: !1570, line: 561, baseType: !1581, size: 8, offset: 1336)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1569, file: !1570, line: 562, baseType: !1581, size: 8, offset: 1344)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1569, file: !1570, line: 563, baseType: !1581, size: 8, offset: 1352)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1569, file: !1570, line: 564, baseType: !1581, size: 8, offset: 1360)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1569, file: !1570, line: 565, baseType: !1581, size: 8, offset: 1368)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1569, file: !1570, line: 566, baseType: !1581, size: 8, offset: 1376)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1569, file: !1570, line: 567, baseType: !1581, size: 8, offset: 1384)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1569, file: !1570, line: 568, baseType: !1581, size: 8, offset: 1392)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1569, file: !1570, line: 569, baseType: !1581, size: 8, offset: 1400)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1569, file: !1570, line: 570, baseType: !1581, size: 8, offset: 1408)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1569, file: !1570, line: 571, baseType: !1581, size: 8, offset: 1416)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1569, file: !1570, line: 572, baseType: !1581, size: 8, offset: 1424)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1569, file: !1570, line: 573, baseType: !1581, size: 8, offset: 1432)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1569, file: !1570, line: 574, baseType: !1581, size: 8, offset: 1440)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !964, file: !151, line: 3405, baseType: !1737, size: 384)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1737, file: !151, line: 3353, baseType: !1000, size: 192)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1737, file: !151, line: 3356, baseType: !1741, size: 192, offset: 192)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1570, line: 578, size: 192, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1741, file: !1570, line: 580, baseType: !766, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1741, file: !1570, line: 581, baseType: !766, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1741, file: !1570, line: 582, baseType: !766, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1741, file: !1570, line: 583, baseType: !766, size: 32, offset: 96)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1741, file: !1570, line: 584, baseType: !765, size: 8, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1741, file: !1570, line: 585, baseType: !765, size: 8, offset: 136)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1741, file: !1570, line: 586, baseType: !765, size: 8, offset: 144)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1741, file: !1570, line: 587, baseType: !765, size: 8, offset: 152)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1741, file: !1570, line: 588, baseType: !765, size: 8, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1741, file: !1570, line: 589, baseType: !765, size: 8, offset: 168)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1741, file: !1570, line: 590, baseType: !765, size: 8, offset: 176)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !930, file: !378, line: 178, baseType: !880, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !930, file: !378, line: 179, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764, !1765}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1758, file: !378, line: 144, baseType: !962, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1758, file: !378, line: 145, baseType: !910, size: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1758, file: !378, line: 146, baseType: !910, size: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1758, file: !378, line: 147, baseType: !1404, size: 32, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1758, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1758, file: !378, line: 149, baseType: !765, size: 8, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !930, file: !378, line: 180, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1769, file: !378, line: 160, baseType: !962, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1769, file: !378, line: 161, baseType: !847, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !930, file: !378, line: 181, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !925, file: !378, line: 317, baseType: !1777, size: 64)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 64, elements: !786)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !925, file: !378, line: 318, baseType: !1779, size: 320)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1780)
!1780 = !{!1781, !1783, !1838}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1779, file: !378, line: 190, baseType: !1782, size: 192)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 192, elements: !1033)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1779, file: !378, line: 193, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1786)
!1786 = !{!1787, !1823, !1824, !1825, !1837}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1785, file: !378, line: 208, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !814, line: 62, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1791, line: 538, size: 256, elements: !1792)
!1791 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1792 = !{!1793, !1797, !1803, !1814}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1790, file: !1791, line: 539, baseType: !1794, size: 32)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1791, line: 482, size: 32, elements: !1795)
!1795 = !{!1796}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1794, file: !1791, line: 484, baseType: !7, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1790, file: !1791, line: 540, baseType: !1798, size: 192)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1791, line: 488, size: 192, elements: !1799)
!1799 = !{!1800, !1801, !1802}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1798, file: !1791, line: 489, baseType: !1794, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1798, file: !1791, line: 492, baseType: !771, size: 64, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1798, file: !1791, line: 496, baseType: !962, size: 64, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1790, file: !1791, line: 541, baseType: !1804, size: 256)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1791, line: 504, size: 256, elements: !1805)
!1805 = !{!1806, !1807, !1812, !1813}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1804, file: !1791, line: 505, baseType: !1794, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1804, file: !1791, line: 509, baseType: !1808, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1791, line: 501, baseType: !1809)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{null, !1262}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1804, file: !1791, line: 510, baseType: !1262, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1804, file: !1791, line: 513, baseType: !1788, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1790, file: !1791, line: 542, baseType: !1815, size: 128)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1791, line: 530, size: 128, elements: !1816)
!1816 = !{!1817, !1818}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1815, file: !1791, line: 531, baseType: !1794, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1815, file: !1791, line: 534, baseType: !1819, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1791, line: 525, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!765, !962, !771, !788, !788}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1785, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1785, file: !378, line: 214, baseType: !847, size: 64, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1785, file: !378, line: 224, baseType: !1826, size: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1829)
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1828, file: !378, line: 202, baseType: !1831, size: 128)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1832, file: !378, line: 200, baseType: !7, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1832, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1832, file: !378, line: 200, baseType: !943, size: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1785, file: !378, line: 234, baseType: !1826, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1779, file: !378, line: 197, baseType: !847, size: 64, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !925, file: !378, line: 319, baseType: !1022, size: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !925, file: !378, line: 320, baseType: !1041, size: 192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !898, file: !135, line: 134, baseType: !770, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !898, file: !135, line: 137, baseType: !962, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !898, file: !135, line: 138, baseType: !1081, size: 32, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !898, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !898, file: !135, line: 144, baseType: !766, size: 32, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !898, file: !135, line: 145, baseType: !766, size: 32, offset: 416)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !898, file: !135, line: 146, baseType: !1848, size: 64, offset: 448)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !847)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !881, file: !135, line: 220, baseType: !884, size: 64, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !881, file: !135, line: 223, baseType: !770, size: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !881, file: !135, line: 226, baseType: !1852, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !881, file: !135, line: 229, baseType: !1855, size: 128, offset: 256)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 128, elements: !831)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !881, file: !135, line: 232, baseType: !880, size: 64, offset: 384)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !881, file: !135, line: 233, baseType: !880, size: 64, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !881, file: !135, line: 238, baseType: !1861, size: 64, offset: 512)
!1861 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1862)
!1862 = !{!1863, !1869}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1861, file: !135, line: 236, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1866)
!1866 = !{!1867, !1868}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1865, file: !135, line: 275, baseType: !906, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1865, file: !135, line: 278, baseType: !906, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1861, file: !135, line: 237, baseType: !1870, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1871, file: !135, line: 261, baseType: !910, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1871, file: !135, line: 262, baseType: !910, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1871, file: !135, line: 266, baseType: !910, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1871, file: !135, line: 267, baseType: !910, size: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1871, file: !135, line: 270, baseType: !766, size: 32, offset: 256)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !881, file: !135, line: 241, baseType: !1848, size: 64, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !881, file: !135, line: 244, baseType: !766, size: 32, offset: 640)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !881, file: !135, line: 247, baseType: !766, size: 32, offset: 672)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !881, file: !135, line: 250, baseType: !766, size: 32, offset: 704)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !881, file: !135, line: 253, baseType: !766, size: 32, offset: 736)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !881, file: !135, line: 256, baseType: !766, size: 32, offset: 768)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack", file: !3, line: 208, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!1889 = !{!0, !1890, !1918, !1920, !1922, !1927, !1929, !1931, !1933, !1935}
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "pass_stack_regs", scope: !2, file: !3, line: 3274, type: !1892, isLocal: false, isDefinition: true)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !521, line: 162, size: 640, elements: !1893)
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1892, file: !521, line: 164, baseType: !1895, size: 640)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !521, line: 114, size: 640, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1903, !1907, !1909, !1910, !1911, !1913, !1914, !1915, !1916, !1917}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1895, file: !521, line: 117, baseType: !520, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1895, file: !521, line: 121, baseType: !771, size: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1895, file: !521, line: 125, baseType: !1900, size: 64, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!765}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1895, file: !521, line: 130, baseType: !1904, size: 64, offset: 192)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!7}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1895, file: !521, line: 133, baseType: !1908, size: 64, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1895, file: !521, line: 136, baseType: !1908, size: 64, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1895, file: !521, line: 139, baseType: !766, size: 32, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1895, file: !521, line: 143, baseType: !1912, size: 32, offset: 416)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !528, line: 80, baseType: !527)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1895, file: !521, line: 146, baseType: !7, size: 32, offset: 448)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1895, file: !521, line: 147, baseType: !7, size: 32, offset: 480)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1895, file: !521, line: 148, baseType: !7, size: 32, offset: 512)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1895, file: !521, line: 151, baseType: !7, size: 32, offset: 544)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1895, file: !521, line: 152, baseType: !7, size: 32, offset: 576)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "pass_stack_regs_run", scope: !2, file: !3, line: 3305, type: !1892, isLocal: false, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "stack_regs_mentioned_data", scope: !2, file: !3, line: 188, type: !773, isLocal: true, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "FP_mode_reg", scope: !2, file: !3, line: 242, type: !1924, isLocal: true, isDefinition: true)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 44544, elements: !1925)
!1925 = !{!803, !1926}
!1926 = !DISubrange(count: 87)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "ix86_flags_rtx", scope: !2, file: !3, line: 337, type: !910, isLocal: true, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "not_a_num", scope: !2, file: !3, line: 248, type: !910, isLocal: true, isDefinition: true)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "any_malformed_asm", scope: !2, file: !3, line: 454, type: !765, isLocal: true, isDefinition: true)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "current_block", scope: !2, file: !3, line: 233, type: !879, isLocal: true, isDefinition: true)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "starting_stack_p", scope: !2, file: !3, line: 238, type: !765, isLocal: true, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1938 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1939 = !{i32 2, !"Dwarf Version", i32 4}
!1940 = !{i32 2, !"Debug Info Version", i32 3}
!1941 = !{i32 1, !"wchar_size", i32 4}
!1942 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1943 = distinct !DISubprogram(name: "vprintf", scope: !1944, file: !1944, line: 39, type: !1945, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1955)
!1944 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!766, !1947, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !771)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1950)
!1950 = !{!1951, !1952, !1953, !1954}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1949, file: !3, baseType: !7, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1949, file: !3, baseType: !7, size: 32, offset: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1949, file: !3, baseType: !770, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1949, file: !3, baseType: !770, size: 64, offset: 128)
!1955 = !{!1956, !1957}
!1956 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1943, file: !1944, line: 39, type: !1947)
!1957 = !DILocalVariable(name: "__arg", arg: 2, scope: !1943, file: !1944, line: 39, type: !1948)
!1958 = !DILocation(line: 0, scope: !1943)
!1959 = !DILocation(line: 41, column: 20, scope: !1943)
!1960 = !DILocation(line: 41, column: 10, scope: !1943)
!1961 = !DILocation(line: 41, column: 3, scope: !1943)
!1962 = distinct !DISubprogram(name: "getchar", scope: !1944, file: !1944, line: 47, type: !1963, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1965)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!766}
!1965 = !{}
!1966 = !DILocation(line: 49, column: 16, scope: !1962)
!1967 = !DILocation(line: 49, column: 10, scope: !1962)
!1968 = !DILocation(line: 49, column: 3, scope: !1962)
!1969 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1944, file: !1944, line: 56, type: !1970, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2023)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{!766, !1972}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1974, line: 7, baseType: !1975)
!1974 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1976, line: 49, size: 1728, elements: !1977)
!1976 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1993, !1995, !1996, !1997, !2000, !2002, !2003, !2004, !2007, !2009, !2012, !2015, !2016, !2017, !2018, !2019}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1975, file: !1976, line: 51, baseType: !766, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1975, file: !1976, line: 54, baseType: !768, size: 64, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1975, file: !1976, line: 55, baseType: !768, size: 64, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1975, file: !1976, line: 56, baseType: !768, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1975, file: !1976, line: 57, baseType: !768, size: 64, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1975, file: !1976, line: 58, baseType: !768, size: 64, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1975, file: !1976, line: 59, baseType: !768, size: 64, offset: 384)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1975, file: !1976, line: 60, baseType: !768, size: 64, offset: 448)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1975, file: !1976, line: 61, baseType: !768, size: 64, offset: 512)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1975, file: !1976, line: 64, baseType: !768, size: 64, offset: 576)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1975, file: !1976, line: 65, baseType: !768, size: 64, offset: 640)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1975, file: !1976, line: 66, baseType: !768, size: 64, offset: 704)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1975, file: !1976, line: 68, baseType: !1991, size: 64, offset: 768)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1976, line: 36, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1975, file: !1976, line: 70, baseType: !1994, size: 64, offset: 832)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1975, file: !1976, line: 72, baseType: !766, size: 32, offset: 896)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1975, file: !1976, line: 73, baseType: !766, size: 32, offset: 928)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1975, file: !1976, line: 74, baseType: !1998, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1999, line: 152, baseType: !847)
!1999 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1975, file: !1976, line: 77, baseType: !2001, size: 16, offset: 1024)
!2001 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1975, file: !1976, line: 78, baseType: !1581, size: 8, offset: 1040)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1975, file: !1976, line: 79, baseType: !785, size: 8, offset: 1048)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1975, file: !1976, line: 81, baseType: !2005, size: 64, offset: 1088)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1976, line: 43, baseType: null)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1975, file: !1976, line: 89, baseType: !2008, size: 64, offset: 1152)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1999, line: 153, baseType: !847)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1975, file: !1976, line: 91, baseType: !2010, size: 64, offset: 1216)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1976, line: 37, flags: DIFlagFwdDecl)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1975, file: !1976, line: 92, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1976, line: 38, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1975, file: !1976, line: 93, baseType: !1994, size: 64, offset: 1344)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1975, file: !1976, line: 94, baseType: !770, size: 64, offset: 1408)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1975, file: !1976, line: 95, baseType: !1277, size: 64, offset: 1472)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1975, file: !1976, line: 96, baseType: !766, size: 32, offset: 1536)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1975, file: !1976, line: 98, baseType: !2020, size: 160, offset: 1568)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 160, elements: !2021)
!2021 = !{!2022}
!2022 = !DISubrange(count: 20)
!2023 = !{!2024}
!2024 = !DILocalVariable(name: "__fp", arg: 1, scope: !1969, file: !1944, line: 56, type: !1972)
!2025 = !DILocation(line: 0, scope: !1969)
!2026 = !DILocation(line: 58, column: 10, scope: !1969)
!2027 = !DILocation(line: 58, column: 3, scope: !1969)
!2028 = distinct !DISubprogram(name: "getc_unlocked", scope: !1944, file: !1944, line: 66, type: !1970, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2029)
!2029 = !{!2030}
!2030 = !DILocalVariable(name: "__fp", arg: 1, scope: !2028, file: !1944, line: 66, type: !1972)
!2031 = !DILocation(line: 0, scope: !2028)
!2032 = !DILocation(line: 68, column: 10, scope: !2028)
!2033 = !DILocation(line: 68, column: 3, scope: !2028)
!2034 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1944, file: !1944, line: 73, type: !1963, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1965)
!2035 = !DILocation(line: 75, column: 10, scope: !2034)
!2036 = !DILocation(line: 75, column: 3, scope: !2034)
!2037 = distinct !DISubprogram(name: "putchar", scope: !1944, file: !1944, line: 82, type: !2038, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2040)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!766, !766}
!2040 = !{!2041}
!2041 = !DILocalVariable(name: "__c", arg: 1, scope: !2037, file: !1944, line: 82, type: !766)
!2042 = !DILocation(line: 0, scope: !2037)
!2043 = !DILocation(line: 84, column: 21, scope: !2037)
!2044 = !DILocation(line: 84, column: 10, scope: !2037)
!2045 = !DILocation(line: 84, column: 3, scope: !2037)
!2046 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1944, file: !1944, line: 91, type: !2047, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2049)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!766, !766, !1972}
!2049 = !{!2050, !2051}
!2050 = !DILocalVariable(name: "__c", arg: 1, scope: !2046, file: !1944, line: 91, type: !766)
!2051 = !DILocalVariable(name: "__stream", arg: 2, scope: !2046, file: !1944, line: 91, type: !1972)
!2052 = !DILocation(line: 0, scope: !2046)
!2053 = !DILocation(line: 93, column: 10, scope: !2046)
!2054 = !DILocation(line: 93, column: 3, scope: !2046)
!2055 = distinct !DISubprogram(name: "putc_unlocked", scope: !1944, file: !1944, line: 101, type: !2047, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2056)
!2056 = !{!2057, !2058}
!2057 = !DILocalVariable(name: "__c", arg: 1, scope: !2055, file: !1944, line: 101, type: !766)
!2058 = !DILocalVariable(name: "__stream", arg: 2, scope: !2055, file: !1944, line: 101, type: !1972)
!2059 = !DILocation(line: 0, scope: !2055)
!2060 = !DILocation(line: 103, column: 10, scope: !2055)
!2061 = !DILocation(line: 103, column: 3, scope: !2055)
!2062 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1944, file: !1944, line: 108, type: !2038, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!2063 = !{!2064}
!2064 = !DILocalVariable(name: "__c", arg: 1, scope: !2062, file: !1944, line: 108, type: !766)
!2065 = !DILocation(line: 0, scope: !2062)
!2066 = !DILocation(line: 110, column: 10, scope: !2062)
!2067 = !DILocation(line: 110, column: 3, scope: !2062)
!2068 = distinct !DISubprogram(name: "getline", scope: !1944, file: !1944, line: 118, type: !2069, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2073)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{!2071, !767, !2072, !1972}
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1999, line: 193, baseType: !847)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!2073 = !{!2074, !2075, !2076}
!2074 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2068, file: !1944, line: 118, type: !767)
!2075 = !DILocalVariable(name: "__n", arg: 2, scope: !2068, file: !1944, line: 118, type: !2072)
!2076 = !DILocalVariable(name: "__stream", arg: 3, scope: !2068, file: !1944, line: 118, type: !1972)
!2077 = !DILocation(line: 0, scope: !2068)
!2078 = !DILocation(line: 120, column: 10, scope: !2068)
!2079 = !DILocation(line: 120, column: 3, scope: !2068)
!2080 = distinct !DISubprogram(name: "feof_unlocked", scope: !1944, file: !1944, line: 128, type: !1970, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2081)
!2081 = !{!2082}
!2082 = !DILocalVariable(name: "__stream", arg: 1, scope: !2080, file: !1944, line: 128, type: !1972)
!2083 = !DILocation(line: 0, scope: !2080)
!2084 = !DILocation(line: 130, column: 10, scope: !2080)
!2085 = !DILocation(line: 130, column: 3, scope: !2080)
!2086 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1944, file: !1944, line: 135, type: !1970, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2087)
!2087 = !{!2088}
!2088 = !DILocalVariable(name: "__stream", arg: 1, scope: !2086, file: !1944, line: 135, type: !1972)
!2089 = !DILocation(line: 0, scope: !2086)
!2090 = !DILocation(line: 137, column: 10, scope: !2086)
!2091 = !DILocation(line: 137, column: 3, scope: !2086)
!2092 = distinct !DISubprogram(name: "tolower", scope: !2093, file: !2093, line: 207, type: !2038, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2094)
!2093 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2094 = !{!2095}
!2095 = !DILocalVariable(name: "__c", arg: 1, scope: !2092, file: !2093, line: 207, type: !766)
!2096 = !DILocation(line: 0, scope: !2092)
!2097 = !DILocation(line: 209, column: 22, scope: !2092)
!2098 = !DILocation(line: 209, column: 39, scope: !2092)
!2099 = !DILocation(line: 209, column: 38, scope: !2092)
!2100 = !DILocation(line: 209, column: 37, scope: !2092)
!2101 = !DILocation(line: 209, column: 10, scope: !2092)
!2102 = !DILocation(line: 209, column: 3, scope: !2092)
!2103 = distinct !DISubprogram(name: "toupper", scope: !2093, file: !2093, line: 213, type: !2038, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2104)
!2104 = !{!2105}
!2105 = !DILocalVariable(name: "__c", arg: 1, scope: !2103, file: !2093, line: 213, type: !766)
!2106 = !DILocation(line: 0, scope: !2103)
!2107 = !DILocation(line: 215, column: 22, scope: !2103)
!2108 = !DILocation(line: 215, column: 39, scope: !2103)
!2109 = !DILocation(line: 215, column: 38, scope: !2103)
!2110 = !DILocation(line: 215, column: 37, scope: !2103)
!2111 = !DILocation(line: 215, column: 10, scope: !2103)
!2112 = !DILocation(line: 215, column: 3, scope: !2103)
!2113 = distinct !DISubprogram(name: "atoi", scope: !2114, file: !2114, line: 361, type: !2115, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2117)
!2114 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!766, !771}
!2117 = !{!2118}
!2118 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2113, file: !2114, line: 361, type: !771)
!2119 = !DILocation(line: 0, scope: !2113)
!2120 = !DILocation(line: 363, column: 16, scope: !2113)
!2121 = !DILocation(line: 363, column: 10, scope: !2113)
!2122 = !DILocation(line: 363, column: 3, scope: !2113)
!2123 = distinct !DISubprogram(name: "atol", scope: !2114, file: !2114, line: 366, type: !2124, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2126)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!847, !771}
!2126 = !{!2127}
!2127 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2123, file: !2114, line: 366, type: !771)
!2128 = !DILocation(line: 0, scope: !2123)
!2129 = !DILocation(line: 368, column: 10, scope: !2123)
!2130 = !DILocation(line: 368, column: 3, scope: !2123)
!2131 = distinct !DISubprogram(name: "atoll", scope: !2114, file: !2114, line: 373, type: !2132, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!2134, !771}
!2134 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2135 = !{!2136}
!2136 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2131, file: !2114, line: 373, type: !771)
!2137 = !DILocation(line: 0, scope: !2131)
!2138 = !DILocation(line: 375, column: 10, scope: !2131)
!2139 = !DILocation(line: 375, column: 3, scope: !2131)
!2140 = distinct !DISubprogram(name: "bsearch", scope: !2141, file: !2141, line: 20, type: !2142, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2141 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!770, !1262, !1262, !1277, !1277, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2114, line: 808, baseType: !1266)
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2146 = !DILocalVariable(name: "__key", arg: 1, scope: !2140, file: !2141, line: 20, type: !1262)
!2147 = !DILocalVariable(name: "__base", arg: 2, scope: !2140, file: !2141, line: 20, type: !1262)
!2148 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2140, file: !2141, line: 20, type: !1277)
!2149 = !DILocalVariable(name: "__size", arg: 4, scope: !2140, file: !2141, line: 20, type: !1277)
!2150 = !DILocalVariable(name: "__compar", arg: 5, scope: !2140, file: !2141, line: 21, type: !2144)
!2151 = !DILocalVariable(name: "__l", scope: !2140, file: !2141, line: 23, type: !1277)
!2152 = !DILocalVariable(name: "__u", scope: !2140, file: !2141, line: 23, type: !1277)
!2153 = !DILocalVariable(name: "__idx", scope: !2140, file: !2141, line: 23, type: !1277)
!2154 = !DILocalVariable(name: "__p", scope: !2140, file: !2141, line: 24, type: !1262)
!2155 = !DILocalVariable(name: "__comparison", scope: !2140, file: !2141, line: 25, type: !766)
!2156 = !DILocation(line: 0, scope: !2140)
!2157 = !DILocation(line: 29, column: 3, scope: !2140)
!2158 = !DILocation(line: 27, column: 7, scope: !2140)
!2159 = !DILocation(line: 29, column: 14, scope: !2140)
!2160 = !DILocation(line: 31, column: 20, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2140, file: !2141, line: 30, column: 5)
!2162 = !DILocation(line: 31, column: 27, scope: !2161)
!2163 = !DILocation(line: 32, column: 56, scope: !2161)
!2164 = !DILocation(line: 32, column: 47, scope: !2161)
!2165 = !DILocation(line: 33, column: 22, scope: !2161)
!2166 = !DILocation(line: 34, column: 24, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2161, file: !2141, line: 34, column: 11)
!2168 = !DILocation(line: 34, column: 11, scope: !2161)
!2169 = !DILocation(line: 36, column: 29, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2167, file: !2141, line: 36, column: 16)
!2171 = !DILocation(line: 36, column: 16, scope: !2167)
!2172 = !DILocation(line: 37, column: 14, scope: !2170)
!2173 = distinct !{!2173, !2157, !2174}
!2174 = !DILocation(line: 40, column: 5, scope: !2140)
!2175 = !DILocation(line: 43, column: 1, scope: !2140)
!2176 = distinct !DISubprogram(name: "atof", scope: !2177, file: !2177, line: 25, type: !2178, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2181)
!2177 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!2180, !771}
!2180 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2181 = !{!2182}
!2182 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2176, file: !2177, line: 25, type: !771)
!2183 = !DILocation(line: 0, scope: !2176)
!2184 = !DILocation(line: 27, column: 10, scope: !2176)
!2185 = !DILocation(line: 27, column: 3, scope: !2176)
!2186 = distinct !DISubprogram(name: "strtoimax", scope: !2187, file: !2187, line: 324, type: !2188, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2194)
!2187 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!2190, !1947, !2193, !766}
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2191, line: 101, baseType: !2192)
!2191 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1999, line: 72, baseType: !847)
!2193 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !767)
!2194 = !{!2195, !2196, !2197}
!2195 = !DILocalVariable(name: "nptr", arg: 1, scope: !2186, file: !2187, line: 324, type: !1947)
!2196 = !DILocalVariable(name: "endptr", arg: 2, scope: !2186, file: !2187, line: 324, type: !2193)
!2197 = !DILocalVariable(name: "base", arg: 3, scope: !2186, file: !2187, line: 324, type: !766)
!2198 = !DILocation(line: 0, scope: !2186)
!2199 = !DILocation(line: 327, column: 10, scope: !2186)
!2200 = !DILocation(line: 327, column: 3, scope: !2186)
!2201 = distinct !DISubprogram(name: "strtoumax", scope: !2187, file: !2187, line: 336, type: !2202, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2206)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!2204, !1947, !2193, !766}
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2191, line: 102, baseType: !2205)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1999, line: 73, baseType: !788)
!2206 = !{!2207, !2208, !2209}
!2207 = !DILocalVariable(name: "nptr", arg: 1, scope: !2201, file: !2187, line: 336, type: !1947)
!2208 = !DILocalVariable(name: "endptr", arg: 2, scope: !2201, file: !2187, line: 336, type: !2193)
!2209 = !DILocalVariable(name: "base", arg: 3, scope: !2201, file: !2187, line: 336, type: !766)
!2210 = !DILocation(line: 0, scope: !2201)
!2211 = !DILocation(line: 339, column: 10, scope: !2201)
!2212 = !DILocation(line: 339, column: 3, scope: !2201)
!2213 = distinct !DISubprogram(name: "wcstoimax", scope: !2187, file: !2187, line: 348, type: !2214, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2223)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{!2190, !2216, !2220, !766}
!2216 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2217)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2187, line: 34, baseType: !766)
!2220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2221)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2223 = !{!2224, !2225, !2226}
!2224 = !DILocalVariable(name: "nptr", arg: 1, scope: !2213, file: !2187, line: 348, type: !2216)
!2225 = !DILocalVariable(name: "endptr", arg: 2, scope: !2213, file: !2187, line: 348, type: !2220)
!2226 = !DILocalVariable(name: "base", arg: 3, scope: !2213, file: !2187, line: 348, type: !766)
!2227 = !DILocation(line: 0, scope: !2213)
!2228 = !DILocation(line: 351, column: 10, scope: !2213)
!2229 = !DILocation(line: 351, column: 3, scope: !2213)
!2230 = distinct !DISubprogram(name: "wcstoumax", scope: !2187, file: !2187, line: 362, type: !2231, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2233)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!2204, !2216, !2220, !766}
!2233 = !{!2234, !2235, !2236}
!2234 = !DILocalVariable(name: "nptr", arg: 1, scope: !2230, file: !2187, line: 362, type: !2216)
!2235 = !DILocalVariable(name: "endptr", arg: 2, scope: !2230, file: !2187, line: 362, type: !2220)
!2236 = !DILocalVariable(name: "base", arg: 3, scope: !2230, file: !2187, line: 362, type: !766)
!2237 = !DILocation(line: 0, scope: !2230)
!2238 = !DILocation(line: 365, column: 10, scope: !2230)
!2239 = !DILocation(line: 365, column: 3, scope: !2230)
!2240 = distinct !DISubprogram(name: "stat", scope: !2241, file: !2241, line: 453, type: !2242, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2241 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!766, !771, !2244}
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2246, line: 46, size: 1152, elements: !2247)
!2246 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2247 = !{!2248, !2250, !2252, !2254, !2256, !2258, !2260, !2261, !2262, !2263, !2265, !2267, !2275, !2276, !2277}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2245, file: !2246, line: 48, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1999, line: 145, baseType: !788)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2245, file: !2246, line: 53, baseType: !2251, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1999, line: 148, baseType: !788)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2245, file: !2246, line: 61, baseType: !2253, size: 64, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1999, line: 151, baseType: !788)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2245, file: !2246, line: 62, baseType: !2255, size: 32, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1999, line: 150, baseType: !7)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2245, file: !2246, line: 64, baseType: !2257, size: 32, offset: 224)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1999, line: 146, baseType: !7)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2245, file: !2246, line: 65, baseType: !2259, size: 32, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1999, line: 147, baseType: !7)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2245, file: !2246, line: 67, baseType: !766, size: 32, offset: 288)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2245, file: !2246, line: 69, baseType: !2249, size: 64, offset: 320)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2245, file: !2246, line: 74, baseType: !1998, size: 64, offset: 384)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2245, file: !2246, line: 78, baseType: !2264, size: 64, offset: 448)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1999, line: 174, baseType: !847)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2245, file: !2246, line: 80, baseType: !2266, size: 64, offset: 512)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1999, line: 179, baseType: !847)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2245, file: !2246, line: 91, baseType: !2268, size: 128, offset: 576)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2269, line: 10, size: 128, elements: !2270)
!2269 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2270 = !{!2271, !2273}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2268, file: !2269, line: 12, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1999, line: 160, baseType: !847)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2268, file: !2269, line: 16, baseType: !2274, size: 64, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1999, line: 196, baseType: !847)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2245, file: !2246, line: 92, baseType: !2268, size: 128, offset: 704)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2245, file: !2246, line: 93, baseType: !2268, size: 128, offset: 832)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2245, file: !2246, line: 106, baseType: !2278, size: 192, offset: 960)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2274, size: 192, elements: !1033)
!2279 = !{!2280, !2281}
!2280 = !DILocalVariable(name: "__path", arg: 1, scope: !2240, file: !2241, line: 453, type: !771)
!2281 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2240, file: !2241, line: 453, type: !2244)
!2282 = !DILocation(line: 0, scope: !2240)
!2283 = !DILocation(line: 455, column: 10, scope: !2240)
!2284 = !DILocation(line: 455, column: 3, scope: !2240)
!2285 = distinct !DISubprogram(name: "lstat", scope: !2241, file: !2241, line: 460, type: !2242, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2286)
!2286 = !{!2287, !2288}
!2287 = !DILocalVariable(name: "__path", arg: 1, scope: !2285, file: !2241, line: 460, type: !771)
!2288 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2285, file: !2241, line: 460, type: !2244)
!2289 = !DILocation(line: 0, scope: !2285)
!2290 = !DILocation(line: 462, column: 10, scope: !2285)
!2291 = !DILocation(line: 462, column: 3, scope: !2285)
!2292 = distinct !DISubprogram(name: "fstat", scope: !2241, file: !2241, line: 467, type: !2293, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2295)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!766, !766, !2244}
!2295 = !{!2296, !2297}
!2296 = !DILocalVariable(name: "__fd", arg: 1, scope: !2292, file: !2241, line: 467, type: !766)
!2297 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2292, file: !2241, line: 467, type: !2244)
!2298 = !DILocation(line: 0, scope: !2292)
!2299 = !DILocation(line: 469, column: 10, scope: !2292)
!2300 = !DILocation(line: 469, column: 3, scope: !2292)
!2301 = distinct !DISubprogram(name: "fstatat", scope: !2241, file: !2241, line: 474, type: !2302, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2304)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!766, !766, !771, !2244, !766}
!2304 = !{!2305, !2306, !2307, !2308}
!2305 = !DILocalVariable(name: "__fd", arg: 1, scope: !2301, file: !2241, line: 474, type: !766)
!2306 = !DILocalVariable(name: "__filename", arg: 2, scope: !2301, file: !2241, line: 474, type: !771)
!2307 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2301, file: !2241, line: 474, type: !2244)
!2308 = !DILocalVariable(name: "__flag", arg: 4, scope: !2301, file: !2241, line: 474, type: !766)
!2309 = !DILocation(line: 0, scope: !2301)
!2310 = !DILocation(line: 477, column: 10, scope: !2301)
!2311 = !DILocation(line: 477, column: 3, scope: !2301)
!2312 = distinct !DISubprogram(name: "mknod", scope: !2241, file: !2241, line: 483, type: !2313, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!766, !771, !2255, !2249}
!2315 = !{!2316, !2317, !2318}
!2316 = !DILocalVariable(name: "__path", arg: 1, scope: !2312, file: !2241, line: 483, type: !771)
!2317 = !DILocalVariable(name: "__mode", arg: 2, scope: !2312, file: !2241, line: 483, type: !2255)
!2318 = !DILocalVariable(name: "__dev", arg: 3, scope: !2312, file: !2241, line: 483, type: !2249)
!2319 = !DILocation(line: 0, scope: !2312)
!2320 = !DILocation(line: 485, column: 10, scope: !2312)
!2321 = !DILocation(line: 485, column: 3, scope: !2312)
!2322 = distinct !DISubprogram(name: "mknodat", scope: !2241, file: !2241, line: 491, type: !2323, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!766, !766, !771, !2255, !2249}
!2325 = !{!2326, !2327, !2328, !2329}
!2326 = !DILocalVariable(name: "__fd", arg: 1, scope: !2322, file: !2241, line: 491, type: !766)
!2327 = !DILocalVariable(name: "__path", arg: 2, scope: !2322, file: !2241, line: 491, type: !771)
!2328 = !DILocalVariable(name: "__mode", arg: 3, scope: !2322, file: !2241, line: 491, type: !2255)
!2329 = !DILocalVariable(name: "__dev", arg: 4, scope: !2322, file: !2241, line: 491, type: !2249)
!2330 = !DILocation(line: 0, scope: !2322)
!2331 = !DILocation(line: 494, column: 10, scope: !2322)
!2332 = !DILocation(line: 494, column: 3, scope: !2322)
!2333 = distinct !DISubprogram(name: "stat64", scope: !2241, file: !2241, line: 502, type: !2334, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2356)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!766, !771, !2336}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2246, line: 119, size: 1152, elements: !2338)
!2338 = !{!2339, !2340, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2352, !2353, !2354, !2355}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2337, file: !2246, line: 121, baseType: !2249, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2337, file: !2246, line: 123, baseType: !2341, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1999, line: 149, baseType: !788)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2337, file: !2246, line: 124, baseType: !2253, size: 64, offset: 128)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2337, file: !2246, line: 125, baseType: !2255, size: 32, offset: 192)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2337, file: !2246, line: 132, baseType: !2257, size: 32, offset: 224)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2337, file: !2246, line: 133, baseType: !2259, size: 32, offset: 256)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2337, file: !2246, line: 135, baseType: !766, size: 32, offset: 288)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2337, file: !2246, line: 136, baseType: !2249, size: 64, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2337, file: !2246, line: 137, baseType: !1998, size: 64, offset: 384)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2337, file: !2246, line: 143, baseType: !2264, size: 64, offset: 448)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2337, file: !2246, line: 144, baseType: !2351, size: 64, offset: 512)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1999, line: 180, baseType: !847)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2337, file: !2246, line: 152, baseType: !2268, size: 128, offset: 576)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2337, file: !2246, line: 153, baseType: !2268, size: 128, offset: 704)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2337, file: !2246, line: 154, baseType: !2268, size: 128, offset: 832)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2337, file: !2246, line: 164, baseType: !2278, size: 192, offset: 960)
!2356 = !{!2357, !2358}
!2357 = !DILocalVariable(name: "__path", arg: 1, scope: !2333, file: !2241, line: 502, type: !771)
!2358 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2333, file: !2241, line: 502, type: !2336)
!2359 = !DILocation(line: 0, scope: !2333)
!2360 = !DILocation(line: 504, column: 10, scope: !2333)
!2361 = !DILocation(line: 504, column: 3, scope: !2333)
!2362 = distinct !DISubprogram(name: "lstat64", scope: !2241, file: !2241, line: 509, type: !2334, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2363)
!2363 = !{!2364, !2365}
!2364 = !DILocalVariable(name: "__path", arg: 1, scope: !2362, file: !2241, line: 509, type: !771)
!2365 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2362, file: !2241, line: 509, type: !2336)
!2366 = !DILocation(line: 0, scope: !2362)
!2367 = !DILocation(line: 511, column: 10, scope: !2362)
!2368 = !DILocation(line: 511, column: 3, scope: !2362)
!2369 = distinct !DISubprogram(name: "fstat64", scope: !2241, file: !2241, line: 516, type: !2370, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2372)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!766, !766, !2336}
!2372 = !{!2373, !2374}
!2373 = !DILocalVariable(name: "__fd", arg: 1, scope: !2369, file: !2241, line: 516, type: !766)
!2374 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2369, file: !2241, line: 516, type: !2336)
!2375 = !DILocation(line: 0, scope: !2369)
!2376 = !DILocation(line: 518, column: 10, scope: !2369)
!2377 = !DILocation(line: 518, column: 3, scope: !2369)
!2378 = distinct !DISubprogram(name: "fstatat64", scope: !2241, file: !2241, line: 523, type: !2379, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!766, !766, !771, !2336, !766}
!2381 = !{!2382, !2383, !2384, !2385}
!2382 = !DILocalVariable(name: "__fd", arg: 1, scope: !2378, file: !2241, line: 523, type: !766)
!2383 = !DILocalVariable(name: "__filename", arg: 2, scope: !2378, file: !2241, line: 523, type: !771)
!2384 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2378, file: !2241, line: 523, type: !2336)
!2385 = !DILocalVariable(name: "__flag", arg: 4, scope: !2378, file: !2241, line: 523, type: !766)
!2386 = !DILocation(line: 0, scope: !2378)
!2387 = !DILocation(line: 526, column: 10, scope: !2378)
!2388 = !DILocation(line: 526, column: 3, scope: !2378)
!2389 = distinct !DISubprogram(name: "stack_regs_mentioned", scope: !3, file: !3, line: 308, type: !2390, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2395)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!766, !2392}
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !814, line: 51, baseType: !2393)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!2395 = !{!2396, !2397, !2398, !2399}
!2396 = !DILocalVariable(name: "insn", arg: 1, scope: !2389, file: !3, line: 308, type: !2392)
!2397 = !DILocalVariable(name: "uid", scope: !2389, file: !3, line: 310, type: !7)
!2398 = !DILocalVariable(name: "max", scope: !2389, file: !3, line: 310, type: !7)
!2399 = !DILocalVariable(name: "test", scope: !2389, file: !3, line: 311, type: !766)
!2400 = !DILocation(line: 0, scope: !2389)
!2401 = !DILocation(line: 313, column: 9, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 313, column: 7)
!2403 = !DILocation(line: 313, column: 23, scope: !2402)
!2404 = !DILocation(line: 313, column: 27, scope: !2402)
!2405 = !DILocation(line: 313, column: 7, scope: !2389)
!2406 = !DILocation(line: 316, column: 9, scope: !2389)
!2407 = !DILocation(line: 317, column: 9, scope: !2389)
!2408 = !DILocation(line: 318, column: 11, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 318, column: 7)
!2410 = !DILocation(line: 318, column: 7, scope: !2389)
!2411 = !DILocation(line: 322, column: 23, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 319, column: 5)
!2413 = !DILocation(line: 322, column: 17, scope: !2412)
!2414 = !DILocation(line: 322, column: 28, scope: !2412)
!2415 = !DILocation(line: 323, column: 7, scope: !2412)
!2416 = !DILocation(line: 324, column: 5, scope: !2412)
!2417 = !DILocation(line: 326, column: 10, scope: !2389)
!2418 = !DILocation(line: 327, column: 12, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 327, column: 7)
!2420 = !DILocation(line: 327, column: 7, scope: !2389)
!2421 = !DILocation(line: 330, column: 38, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2419, file: !3, line: 328, column: 5)
!2423 = !DILocation(line: 330, column: 14, scope: !2422)
!2424 = !DILocation(line: 331, column: 7, scope: !2422)
!2425 = !DILocation(line: 332, column: 5, scope: !2422)
!2426 = !DILocation(line: 334, column: 15, scope: !2389)
!2427 = !DILocation(line: 334, column: 3, scope: !2389)
!2428 = !DILocation(line: 335, column: 1, scope: !2389)
!2429 = distinct !DISubprogram(name: "VEC_char_base_length", scope: !775, file: !775, line: 23, type: !2430, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2434)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!7, !2432}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!2434 = !{!2435}
!2435 = !DILocalVariable(name: "vec_", arg: 1, scope: !2429, file: !775, line: 23, type: !2432)
!2436 = !DILocation(line: 0, scope: !2429)
!2437 = !DILocation(line: 23, column: 1, scope: !2429)
!2438 = distinct !DISubprogram(name: "VEC_char_heap_safe_grow_cleared", scope: !775, file: !775, line: 24, type: !2439, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2442)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{null, !2441, !766}
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!2442 = !{!2443, !2444, !2445}
!2443 = !DILocalVariable(name: "vec_", arg: 1, scope: !2438, file: !775, line: 24, type: !2441)
!2444 = !DILocalVariable(name: "size_", arg: 2, scope: !2438, file: !775, line: 24, type: !766)
!2445 = !DILocalVariable(name: "oldsize", scope: !2438, file: !775, line: 24, type: !766)
!2446 = !DILocation(line: 0, scope: !2438)
!2447 = !DILocation(line: 24, column: 1, scope: !2438)
!2448 = distinct !DISubprogram(name: "VEC_char_base_index", scope: !775, file: !775, line: 23, type: !2449, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!769, !2432, !7}
!2451 = !{!2452, !2453}
!2452 = !DILocalVariable(name: "vec_", arg: 1, scope: !2448, file: !775, line: 23, type: !2432)
!2453 = !DILocalVariable(name: "ix_", arg: 2, scope: !2448, file: !775, line: 23, type: !7)
!2454 = !DILocation(line: 0, scope: !2448)
!2455 = !DILocation(line: 23, column: 1, scope: !2448)
!2456 = distinct !DISubprogram(name: "stack_regs_mentioned_p", scope: !3, file: !3, line: 279, type: !2390, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2457)
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DILocalVariable(name: "pat", arg: 1, scope: !2456, file: !3, line: 279, type: !2392)
!2459 = !DILocalVariable(name: "fmt", scope: !2456, file: !3, line: 281, type: !771)
!2460 = !DILocalVariable(name: "i", scope: !2456, file: !3, line: 282, type: !766)
!2461 = !DILocalVariable(name: "j", scope: !2462, file: !3, line: 292, type: !766)
!2462 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 291, column: 2)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !3, line: 290, column: 11)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 289, column: 5)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 288, column: 3)
!2466 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 288, column: 3)
!2467 = !DILocation(line: 0, scope: !2456)
!2468 = !DILocation(line: 284, column: 7, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 284, column: 7)
!2470 = !DILocation(line: 284, column: 7, scope: !2456)
!2471 = !DILocation(line: 287, column: 9, scope: !2456)
!2472 = !DILocation(line: 288, column: 12, scope: !2466)
!2473 = !DILocation(line: 298, column: 57, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 298, column: 16)
!2475 = !DILocation(line: 288, column: 8, scope: !2466)
!2476 = !DILocation(line: 0, scope: !2466)
!2477 = !DILocation(line: 288, column: 51, scope: !2465)
!2478 = !DILocation(line: 288, column: 3, scope: !2466)
!2479 = !DILocation(line: 290, column: 11, scope: !2463)
!2480 = !DILocation(line: 290, column: 18, scope: !2463)
!2481 = !DILocation(line: 290, column: 11, scope: !2464)
!2482 = !DILocation(line: 294, column: 13, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 294, column: 4)
!2484 = !DILocation(line: 0, scope: !2462)
!2485 = !DILocation(line: 294, column: 9, scope: !2483)
!2486 = !DILocation(line: 0, scope: !2483)
!2487 = !DILocation(line: 294, column: 37, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 294, column: 4)
!2489 = !DILocation(line: 294, column: 4, scope: !2483)
!2490 = !DILocation(line: 295, column: 34, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 295, column: 10)
!2492 = !DILocation(line: 295, column: 10, scope: !2491)
!2493 = !DILocation(line: 295, column: 10, scope: !2488)
!2494 = !DILocation(line: 294, column: 4, scope: !2488)
!2495 = distinct !{!2495, !2489, !2496}
!2496 = !DILocation(line: 296, column: 15, scope: !2483)
!2497 = !DILocation(line: 298, column: 23, scope: !2474)
!2498 = !DILocation(line: 298, column: 30, scope: !2474)
!2499 = !DILocation(line: 298, column: 33, scope: !2474)
!2500 = !DILocation(line: 298, column: 16, scope: !2463)
!2501 = !DILocation(line: 288, column: 3, scope: !2465)
!2502 = distinct !{!2502, !2478, !2503}
!2503 = !DILocation(line: 300, column: 5, scope: !2466)
!2504 = !DILocation(line: 303, column: 1, scope: !2456)
!2505 = distinct !DISubprogram(name: "VEC_char_base_replace", scope: !775, file: !775, line: 23, type: !2506, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2509)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!769, !2508, !7, !769}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!2509 = !{!2510, !2511, !2512, !2513}
!2510 = !DILocalVariable(name: "vec_", arg: 1, scope: !2505, file: !775, line: 23, type: !2508)
!2511 = !DILocalVariable(name: "ix_", arg: 2, scope: !2505, file: !775, line: 23, type: !7)
!2512 = !DILocalVariable(name: "obj_", arg: 3, scope: !2505, file: !775, line: 23, type: !769)
!2513 = !DILocalVariable(name: "old_obj_", scope: !2505, file: !775, line: 23, type: !769)
!2514 = !DILocation(line: 0, scope: !2505)
!2515 = !DILocation(line: 23, column: 1, scope: !2505)
!2516 = distinct !DISubprogram(name: "gate_handle_stack_regs", scope: !3, file: !3, line: 3265, type: !1901, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1965)
!2517 = !DILocation(line: 3268, column: 3, scope: !2516)
!2518 = distinct !DISubprogram(name: "rest_of_handle_stack_regs", scope: !3, file: !3, line: 3296, type: !1905, scopeLine: 3297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1965)
!2519 = !DILocation(line: 3299, column: 3, scope: !2518)
!2520 = !DILocation(line: 3300, column: 22, scope: !2518)
!2521 = !DILocation(line: 3302, column: 3, scope: !2518)
!2522 = distinct !DISubprogram(name: "VEC_char_heap_safe_grow", scope: !775, file: !775, line: 24, type: !2439, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2523)
!2523 = !{!2524, !2525}
!2524 = !DILocalVariable(name: "vec_", arg: 1, scope: !2522, file: !775, line: 24, type: !2441)
!2525 = !DILocalVariable(name: "size_", arg: 2, scope: !2522, file: !775, line: 24, type: !766)
!2526 = !DILocation(line: 0, scope: !2522)
!2527 = !DILocation(line: 24, column: 1, scope: !2522)
!2528 = distinct !DISubprogram(name: "VEC_char_base_address", scope: !775, file: !775, line: 23, type: !2529, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2531)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!768, !2508}
!2531 = !{!2532}
!2532 = !DILocalVariable(name: "vec_", arg: 1, scope: !2528, file: !775, line: 23, type: !2508)
!2533 = !DILocation(line: 0, scope: !2528)
!2534 = !DILocation(line: 23, column: 1, scope: !2528)
!2535 = distinct !DISubprogram(name: "VEC_char_heap_reserve_exact", scope: !775, file: !775, line: 24, type: !2536, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!766, !2441, !766}
!2538 = !{!2539, !2540, !2541}
!2539 = !DILocalVariable(name: "vec_", arg: 1, scope: !2535, file: !775, line: 24, type: !2441)
!2540 = !DILocalVariable(name: "alloc_", arg: 2, scope: !2535, file: !775, line: 24, type: !766)
!2541 = !DILocalVariable(name: "extend", scope: !2535, file: !775, line: 24, type: !766)
!2542 = !DILocation(line: 0, scope: !2535)
!2543 = !DILocation(line: 24, column: 1, scope: !2535)
!2544 = !DILocation(line: 24, column: 1, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2535, file: !775, line: 24, column: 1)
!2546 = distinct !DISubprogram(name: "VEC_char_base_space", scope: !775, file: !775, line: 23, type: !2547, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2549)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!766, !2508, !766}
!2549 = !{!2550, !2551}
!2550 = !DILocalVariable(name: "vec_", arg: 1, scope: !2546, file: !775, line: 23, type: !2508)
!2551 = !DILocalVariable(name: "alloc_", arg: 2, scope: !2546, file: !775, line: 23, type: !766)
!2552 = !DILocation(line: 0, scope: !2546)
!2553 = !DILocation(line: 23, column: 1, scope: !2546)
!2554 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !2555, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2557)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!7, !2392}
!2557 = !{!2558}
!2558 = !DILocalVariable(name: "x", arg: 1, scope: !2554, file: !378, line: 1051, type: !2392)
!2559 = !DILocation(line: 0, scope: !2554)
!2560 = !DILocation(line: 1053, column: 10, scope: !2554)
!2561 = !DILocation(line: 1053, column: 3, scope: !2554)
!2562 = distinct !DISubprogram(name: "reg_to_stack", scope: !3, file: !3, line: 3166, type: !1901, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2571, !2578, !2579, !2580, !2584}
!2564 = !DILocalVariable(name: "bb", scope: !2562, file: !3, line: 3168, type: !879)
!2565 = !DILocalVariable(name: "i", scope: !2562, file: !3, line: 3169, type: !766)
!2566 = !DILocalVariable(name: "max_uid", scope: !2562, file: !3, line: 3170, type: !766)
!2567 = !DILocalVariable(name: "bi", scope: !2568, file: !3, line: 3193, type: !789)
!2568 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 3192, column: 5)
!2569 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 3191, column: 3)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3191, column: 3)
!2571 = !DILocalVariable(name: "ei", scope: !2568, file: !3, line: 3194, type: !2572)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2573, file: !135, line: 680, baseType: !7, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2573, file: !135, line: 681, baseType: !2577, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!2578 = !DILocalVariable(name: "e", scope: !2568, file: !3, line: 3195, type: !896)
!2579 = !DILocalVariable(name: "reg", scope: !2568, file: !3, line: 3196, type: !766)
!2580 = !DILocalVariable(name: "mode", scope: !2581, file: !3, line: 3219, type: !5)
!2581 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 3218, column: 5)
!2582 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 3217, column: 3)
!2583 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3217, column: 3)
!2584 = !DILocalVariable(name: "r", scope: !2585, file: !3, line: 3244, type: !1022)
!2585 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 3243, column: 5)
!2586 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3239, column: 7)
!2587 = !DILocation(line: 3173, column: 7, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3173, column: 7)
!2589 = !DILocation(line: 3173, column: 33, scope: !2588)
!2590 = !DILocation(line: 3173, column: 7, scope: !2562)
!2591 = !DILocation(line: 3174, column: 5, scope: !2588)
!2592 = !DILocation(line: 0, scope: !2562)
!2593 = !DILocation(line: 3178, column: 8, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3178, column: 3)
!2595 = !DILocation(line: 0, scope: !2594)
!2596 = !DILocation(line: 3178, column: 31, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 3178, column: 3)
!2598 = !DILocation(line: 3178, column: 3, scope: !2594)
!2599 = !DILocation(line: 3179, column: 9, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2597, file: !3, line: 3179, column: 9)
!2601 = !DILocation(line: 3179, column: 9, scope: !2597)
!2602 = !DILocation(line: 3178, column: 51, scope: !2597)
!2603 = !DILocation(line: 3178, column: 3, scope: !2597)
!2604 = distinct !{!2604, !2598, !2605}
!2605 = !DILocation(line: 3180, column: 7, scope: !2594)
!2606 = !DILocation(line: 3181, column: 9, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 3181, column: 7)
!2608 = !DILocation(line: 3181, column: 7, scope: !2562)
!2609 = !DILocation(line: 3184, column: 3, scope: !2562)
!2610 = !DILocation(line: 3185, column: 3, scope: !2562)
!2611 = !DILocation(line: 3187, column: 3, scope: !2562)
!2612 = !DILocation(line: 3190, column: 3, scope: !2562)
!2613 = !DILocation(line: 3191, column: 3, scope: !2570)
!2614 = !DILocation(line: 0, scope: !2568)
!2615 = !DILocation(line: 0, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 3198, column: 7)
!2617 = !DILocation(line: 0, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 3198, column: 7)
!2619 = !DILocation(line: 3191, column: 3, scope: !2569)
!2620 = !DILocation(line: 0, scope: !2570)
!2621 = !DILocation(line: 3217, column: 3, scope: !2583)
!2622 = !DILocation(line: 3193, column: 23, scope: !2568)
!2623 = !DILocation(line: 3194, column: 7, scope: !2568)
!2624 = !DILocation(line: 3195, column: 7, scope: !2568)
!2625 = !DILocation(line: 3198, column: 7, scope: !2616)
!2626 = !DILocation(line: 0, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 3199, column: 6)
!2628 = !DILocation(line: 3198, column: 7, scope: !2618)
!2629 = !DILocation(line: 3199, column: 8, scope: !2627)
!2630 = !DILocation(line: 3199, column: 11, scope: !2627)
!2631 = !DILocation(line: 3199, column: 17, scope: !2627)
!2632 = !DILocation(line: 3200, column: 6, scope: !2627)
!2633 = !DILocation(line: 3200, column: 12, scope: !2627)
!2634 = !DILocation(line: 3200, column: 19, scope: !2627)
!2635 = !DILocation(line: 3200, column: 16, scope: !2627)
!2636 = !DILocation(line: 3199, column: 6, scope: !2618)
!2637 = !DILocation(line: 3201, column: 20, scope: !2627)
!2638 = !DILocation(line: 3201, column: 4, scope: !2627)
!2639 = distinct !{!2639, !2625, !2640}
!2640 = !DILocation(line: 3201, column: 20, scope: !2616)
!2641 = !DILocation(line: 3204, column: 20, scope: !2568)
!2642 = !DILocation(line: 3204, column: 24, scope: !2568)
!2643 = !DILocation(line: 0, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 3209, column: 8)
!2645 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 3208, column: 2)
!2646 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 3207, column: 7)
!2647 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 3207, column: 7)
!2648 = !DILocation(line: 0, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 3211, column: 8)
!2650 = !DILocation(line: 3207, column: 12, scope: !2647)
!2651 = !DILocation(line: 0, scope: !2647)
!2652 = !DILocation(line: 3207, column: 39, scope: !2646)
!2653 = !DILocation(line: 3207, column: 7, scope: !2647)
!2654 = !DILocation(line: 3209, column: 8, scope: !2644)
!2655 = !DILocation(line: 3209, column: 8, scope: !2645)
!2656 = !DILocation(line: 3210, column: 6, scope: !2644)
!2657 = !DILocation(line: 3211, column: 8, scope: !2649)
!2658 = !DILocation(line: 3211, column: 8, scope: !2645)
!2659 = !DILocation(line: 3212, column: 6, scope: !2649)
!2660 = !DILocation(line: 3207, column: 61, scope: !2646)
!2661 = !DILocation(line: 3207, column: 7, scope: !2646)
!2662 = distinct !{!2662, !2653, !2663}
!2663 = !DILocation(line: 3213, column: 2, scope: !2647)
!2664 = !DILocation(line: 3214, column: 5, scope: !2569)
!2665 = !DILocation(line: 0, scope: !2569)
!2666 = distinct !{!2666, !2613, !2667}
!2667 = !DILocation(line: 3214, column: 5, scope: !2570)
!2668 = !DILocation(line: 0, scope: !2583)
!2669 = !DILocation(line: 3217, column: 31, scope: !2582)
!2670 = !DILocation(line: 0, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !3, line: 3220, column: 7)
!2672 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 3220, column: 7)
!2673 = !DILocation(line: 3220, column: 12, scope: !2672)
!2674 = !DILocation(line: 0, scope: !2672)
!2675 = !DILocation(line: 0, scope: !2581)
!2676 = !DILocation(line: 3221, column: 10, scope: !2671)
!2677 = !DILocation(line: 3220, column: 7, scope: !2672)
!2678 = !DILocation(line: 3223, column: 26, scope: !2671)
!2679 = !DILocation(line: 3223, column: 2, scope: !2671)
!2680 = !DILocation(line: 3223, column: 24, scope: !2671)
!2681 = !DILocation(line: 3222, column: 12, scope: !2671)
!2682 = !DILocation(line: 3220, column: 7, scope: !2671)
!2683 = distinct !{!2683, !2677, !2684}
!2684 = !DILocation(line: 3223, column: 46, scope: !2672)
!2685 = !DILocation(line: 3224, column: 12, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 3224, column: 7)
!2687 = !DILocation(line: 0, scope: !2686)
!2688 = !DILocation(line: 3225, column: 10, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 3224, column: 7)
!2690 = !DILocation(line: 3224, column: 7, scope: !2686)
!2691 = !DILocation(line: 3227, column: 26, scope: !2689)
!2692 = !DILocation(line: 3227, column: 2, scope: !2689)
!2693 = !DILocation(line: 3227, column: 24, scope: !2689)
!2694 = !DILocation(line: 3226, column: 12, scope: !2689)
!2695 = !DILocation(line: 3224, column: 7, scope: !2689)
!2696 = distinct !{!2696, !2690, !2697}
!2697 = !DILocation(line: 3227, column: 46, scope: !2686)
!2698 = !DILocation(line: 3217, column: 51, scope: !2582)
!2699 = !DILocation(line: 3217, column: 3, scope: !2582)
!2700 = distinct !{!2700, !2621, !2701}
!2701 = !DILocation(line: 3228, column: 5, scope: !2583)
!2702 = !DILocation(line: 3230, column: 20, scope: !2562)
!2703 = !DILocation(line: 3230, column: 18, scope: !2562)
!2704 = !DILocation(line: 3239, column: 8, scope: !2586)
!2705 = !DILocation(line: 3240, column: 10, scope: !2586)
!2706 = !DILocation(line: 3240, column: 22, scope: !2586)
!2707 = !DILocation(line: 3240, column: 7, scope: !2586)
!2708 = !DILocation(line: 3240, column: 49, scope: !2586)
!2709 = !DILocation(line: 3241, column: 17, scope: !2586)
!2710 = !DILocation(line: 3241, column: 15, scope: !2586)
!2711 = !DILocation(line: 3241, column: 5, scope: !2586)
!2712 = !DILocation(line: 3244, column: 7, scope: !2585)
!2713 = !DILocation(line: 0, scope: !2585)
!2714 = !DILocation(line: 3246, column: 7, scope: !2585)
!2715 = !DILocation(line: 3247, column: 19, scope: !2585)
!2716 = !DILocation(line: 3247, column: 17, scope: !2585)
!2717 = !DILocation(line: 3248, column: 19, scope: !2585)
!2718 = !DILocation(line: 3248, column: 17, scope: !2585)
!2719 = !DILocation(line: 3249, column: 5, scope: !2586)
!2720 = !DILocation(line: 3252, column: 13, scope: !2562)
!2721 = !DILocation(line: 3253, column: 31, scope: !2562)
!2722 = !DILocation(line: 3253, column: 29, scope: !2562)
!2723 = !DILocation(line: 3254, column: 11, scope: !2562)
!2724 = !DILocation(line: 3255, column: 23, scope: !2562)
!2725 = !DILocation(line: 3254, column: 3, scope: !2562)
!2726 = !DILocation(line: 3257, column: 3, scope: !2562)
!2727 = !DILocation(line: 3259, column: 3, scope: !2562)
!2728 = !DILocation(line: 3260, column: 3, scope: !2562)
!2729 = !DILocation(line: 3261, column: 1, scope: !2562)
!2730 = distinct !DISubprogram(name: "VEC_char_heap_free", scope: !775, file: !775, line: 24, type: !2731, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2733)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{null, !2441}
!2733 = !{!2734}
!2734 = !DILocalVariable(name: "vec_", arg: 1, scope: !2730, file: !775, line: 24, type: !2441)
!2735 = !DILocation(line: 0, scope: !2730)
!2736 = !DILocation(line: 24, column: 1, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2730, file: !775, line: 24, column: 1)
!2738 = !DILocation(line: 24, column: 1, scope: !2730)
!2739 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !2740, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2742)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!2572, !2577}
!2742 = !{!2743, !2744}
!2743 = !DILocalVariable(name: "ev", arg: 1, scope: !2739, file: !135, line: 696, type: !2577)
!2744 = !DILocalVariable(name: "i", scope: !2739, file: !135, line: 698, type: !2572)
!2745 = !DILocation(line: 0, scope: !2739)
!2746 = !DILocation(line: 700, column: 5, scope: !2739)
!2747 = !DILocation(line: 700, column: 11, scope: !2739)
!2748 = !DILocation(line: 701, column: 5, scope: !2739)
!2749 = !DILocation(line: 701, column: 15, scope: !2739)
!2750 = !DILocation(line: 703, column: 3, scope: !2739)
!2751 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !2752, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2755)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!765, !2572, !2754}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!2755 = !{!2756, !2757}
!2756 = !DILocalVariable(name: "ei", arg: 1, scope: !2751, file: !135, line: 771, type: !2572)
!2757 = !DILocalVariable(name: "p", arg: 2, scope: !2751, file: !135, line: 771, type: !2754)
!2758 = !DILocation(line: 0, scope: !2751)
!2759 = !DILocation(line: 773, column: 8, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2751, file: !135, line: 773, column: 7)
!2761 = !DILocation(line: 773, column: 7, scope: !2751)
!2762 = !DILocation(line: 775, column: 12, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2760, file: !135, line: 774, column: 5)
!2764 = !DILocation(line: 776, column: 7, scope: !2763)
!2765 = !DILocation(line: 781, column: 7, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2760, file: !135, line: 779, column: 5)
!2767 = !DILocation(line: 0, scope: !2760)
!2768 = !DILocation(line: 783, column: 1, scope: !2751)
!2769 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !2770, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2773)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{null, !2772}
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2773 = !{!2774}
!2774 = !DILocalVariable(name: "i", arg: 1, scope: !2769, file: !135, line: 736, type: !2772)
!2775 = !DILocation(line: 0, scope: !2769)
!2776 = !DILocation(line: 738, column: 3, scope: !2769)
!2777 = !DILocation(line: 739, column: 11, scope: !2769)
!2778 = !DILocation(line: 740, column: 1, scope: !2769)
!2779 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !810, file: !810, line: 1052, type: !2780, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2782)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!808, !7}
!2782 = !{!2783}
!2783 = !DILocalVariable(name: "index", arg: 1, scope: !2779, file: !810, line: 1052, type: !7)
!2784 = !DILocation(line: 0, scope: !2779)
!2785 = !DILocation(line: 1054, column: 15, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2779, file: !810, line: 1054, column: 7)
!2787 = !DILocation(line: 1054, column: 22, scope: !2786)
!2788 = !DILocation(line: 1054, column: 13, scope: !2786)
!2789 = !DILocation(line: 1054, column: 7, scope: !2779)
!2790 = !DILocation(line: 1055, column: 44, scope: !2786)
!2791 = !DILocation(line: 1055, column: 37, scope: !2786)
!2792 = !DILocation(line: 1055, column: 5, scope: !2786)
!2793 = !DILocation(line: 0, scope: !2786)
!2794 = !DILocation(line: 1058, column: 1, scope: !2779)
!2795 = distinct !DISubprogram(name: "VEC_char_heap_alloc", scope: !775, file: !775, line: 24, type: !2796, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2798)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!773, !766}
!2798 = !{!2799}
!2799 = !DILocalVariable(name: "alloc_", arg: 1, scope: !2795, file: !775, line: 24, type: !766)
!2800 = !DILocation(line: 0, scope: !2795)
!2801 = !DILocation(line: 24, column: 1, scope: !2795)
!2802 = distinct !DISubprogram(name: "convert_regs", scope: !3, file: !3, line: 3113, type: !2803, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2805)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{null}
!2805 = !{!2806, !2807, !2808, !2809, !2810}
!2806 = !DILocalVariable(name: "inserted", scope: !2802, file: !3, line: 3115, type: !766)
!2807 = !DILocalVariable(name: "b", scope: !2802, file: !3, line: 3116, type: !879)
!2808 = !DILocalVariable(name: "e", scope: !2802, file: !3, line: 3117, type: !896)
!2809 = !DILocalVariable(name: "ei", scope: !2802, file: !3, line: 3118, type: !2572)
!2810 = !DILocalVariable(name: "bi", scope: !2811, file: !3, line: 3139, type: !789)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 3138, column: 5)
!2812 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 3137, column: 3)
!2813 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 3137, column: 3)
!2814 = !DILocation(line: 3117, column: 3, scope: !2802)
!2815 = !DILocation(line: 3118, column: 3, scope: !2802)
!2816 = !DILocation(line: 3121, column: 14, scope: !2802)
!2817 = !DILocation(line: 0, scope: !2802)
!2818 = !DILocation(line: 3124, column: 3, scope: !2802)
!2819 = !DILocation(line: 3125, column: 3, scope: !2802)
!2820 = !DILocation(line: 3125, column: 32, scope: !2802)
!2821 = !DILocation(line: 3125, column: 37, scope: !2802)
!2822 = !DILocation(line: 3132, column: 3, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 3132, column: 3)
!2824 = !DILocation(line: 0, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 3132, column: 3)
!2826 = !DILocation(line: 3132, column: 3, scope: !2825)
!2827 = !DILocation(line: 3133, column: 21, scope: !2825)
!2828 = !DILocation(line: 3133, column: 24, scope: !2825)
!2829 = !DILocation(line: 3133, column: 5, scope: !2825)
!2830 = distinct !{!2830, !2822, !2831}
!2831 = !DILocation(line: 3133, column: 28, scope: !2823)
!2832 = !DILocation(line: 3137, column: 3, scope: !2813)
!2833 = !DILocation(line: 3137, column: 3, scope: !2812)
!2834 = !DILocation(line: 0, scope: !2813)
!2835 = !DILocation(line: 3139, column: 23, scope: !2811)
!2836 = !DILocation(line: 0, scope: !2811)
!2837 = !DILocation(line: 3141, column: 17, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 3141, column: 11)
!2839 = !DILocation(line: 3141, column: 13, scope: !2838)
!2840 = !DILocation(line: 3141, column: 11, scope: !2811)
!2841 = !DILocation(line: 3142, column: 2, scope: !2838)
!2842 = !DILocation(line: 0, scope: !2812)
!2843 = distinct !{!2843, !2832, !2844}
!2844 = !DILocation(line: 3143, column: 5, scope: !2813)
!2845 = !DILocation(line: 3145, column: 15, scope: !2802)
!2846 = !DILocation(line: 3145, column: 12, scope: !2802)
!2847 = !DILocation(line: 3147, column: 3, scope: !2802)
!2848 = !DILocation(line: 3149, column: 3, scope: !2802)
!2849 = !DILocation(line: 3150, column: 7, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 3150, column: 7)
!2851 = !DILocation(line: 3150, column: 7, scope: !2802)
!2852 = !DILocation(line: 3151, column: 5, scope: !2850)
!2853 = !DILocation(line: 3153, column: 7, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 3153, column: 7)
!2855 = !DILocation(line: 3153, column: 7, scope: !2802)
!2856 = !DILocation(line: 3154, column: 5, scope: !2854)
!2857 = !DILocation(line: 3155, column: 1, scope: !2802)
!2858 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !2859, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2861)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!765, !2572}
!2861 = !{!2862}
!2862 = !DILocalVariable(name: "i", arg: 1, scope: !2858, file: !135, line: 721, type: !2572)
!2863 = !DILocation(line: 723, column: 22, scope: !2858)
!2864 = !DILocation(line: 723, column: 19, scope: !2858)
!2865 = !DILocation(line: 723, column: 10, scope: !2858)
!2866 = !DILocation(line: 723, column: 3, scope: !2858)
!2867 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !2868, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2870)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!896, !2572}
!2870 = !{!2871}
!2871 = !DILocalVariable(name: "i", arg: 1, scope: !2867, file: !135, line: 752, type: !2572)
!2872 = !DILocation(line: 754, column: 10, scope: !2867)
!2873 = !DILocation(line: 754, column: 3, scope: !2867)
!2874 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !2875, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2879)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!7, !2877}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!2879 = !{!2880}
!2880 = !DILocalVariable(name: "vec_", arg: 1, scope: !2874, file: !135, line: 150, type: !2877)
!2881 = !DILocation(line: 0, scope: !2874)
!2882 = !DILocation(line: 150, column: 1, scope: !2874)
!2883 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !2884, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2886)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!884, !2572}
!2886 = !{!2887}
!2887 = !DILocalVariable(name: "i", arg: 1, scope: !2883, file: !135, line: 685, type: !2572)
!2888 = !DILocation(line: 687, column: 3, scope: !2883)
!2889 = !DILocation(line: 688, column: 10, scope: !2883)
!2890 = !DILocation(line: 688, column: 3, scope: !2883)
!2891 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !2892, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2894)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!896, !2877, !7}
!2894 = !{!2895, !2896}
!2895 = !DILocalVariable(name: "vec_", arg: 1, scope: !2891, file: !135, line: 150, type: !2877)
!2896 = !DILocalVariable(name: "ix_", arg: 2, scope: !2891, file: !135, line: 150, type: !7)
!2897 = !DILocation(line: 0, scope: !2891)
!2898 = !DILocation(line: 150, column: 1, scope: !2891)
!2899 = distinct !DISubprogram(name: "convert_regs_entry", scope: !3, file: !3, line: 2625, type: !1963, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2900)
!2900 = !{!2901, !2902, !2903, !2904, !2908, !2909, !2910, !2911}
!2901 = !DILocalVariable(name: "inserted", scope: !2899, file: !3, line: 2627, type: !766)
!2902 = !DILocalVariable(name: "e", scope: !2899, file: !3, line: 2628, type: !896)
!2903 = !DILocalVariable(name: "ei", scope: !2899, file: !3, line: 2629, type: !2572)
!2904 = !DILocalVariable(name: "block", scope: !2905, file: !3, line: 2642, type: !879)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 2641, column: 5)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 2640, column: 3)
!2907 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 2640, column: 3)
!2908 = !DILocalVariable(name: "bi", scope: !2905, file: !3, line: 2643, type: !789)
!2909 = !DILocalVariable(name: "reg", scope: !2905, file: !3, line: 2644, type: !766)
!2910 = !DILocalVariable(name: "top", scope: !2905, file: !3, line: 2644, type: !766)
!2911 = !DILocalVariable(name: "init", scope: !2912, file: !3, line: 2649, type: !910)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 2648, column: 4)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 2647, column: 6)
!2914 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 2646, column: 7)
!2915 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 2646, column: 7)
!2916 = !DILocation(line: 0, scope: !2899)
!2917 = !DILocation(line: 2628, column: 3, scope: !2899)
!2918 = !DILocation(line: 2629, column: 3, scope: !2899)
!2919 = !DILocation(line: 2640, column: 3, scope: !2907)
!2920 = !DILocation(line: 0, scope: !2906)
!2921 = !DILocation(line: 2627, column: 7, scope: !2899)
!2922 = !DILocation(line: 2640, column: 3, scope: !2906)
!2923 = !DILocation(line: 2642, column: 27, scope: !2905)
!2924 = !DILocation(line: 2642, column: 30, scope: !2905)
!2925 = !DILocation(line: 0, scope: !2905)
!2926 = !DILocation(line: 2643, column: 23, scope: !2905)
!2927 = !DILocation(line: 0, scope: !2913)
!2928 = !DILocation(line: 2646, column: 12, scope: !2915)
!2929 = !DILocation(line: 0, scope: !2915)
!2930 = !DILocation(line: 2646, column: 38, scope: !2914)
!2931 = !DILocation(line: 2646, column: 7, scope: !2915)
!2932 = !DILocation(line: 2647, column: 6, scope: !2913)
!2933 = !DILocation(line: 2647, column: 6, scope: !2914)
!2934 = !DILocation(line: 2651, column: 32, scope: !2912)
!2935 = !DILocation(line: 2651, column: 23, scope: !2912)
!2936 = !DILocation(line: 2651, column: 6, scope: !2912)
!2937 = !DILocation(line: 2651, column: 30, scope: !2912)
!2938 = !DILocation(line: 2653, column: 13, scope: !2912)
!2939 = !DILocation(line: 0, scope: !2912)
!2940 = !DILocation(line: 2656, column: 33, scope: !2912)
!2941 = !DILocation(line: 2656, column: 6, scope: !2912)
!2942 = !DILocation(line: 2658, column: 4, scope: !2912)
!2943 = !DILocation(line: 2646, column: 58, scope: !2914)
!2944 = !DILocation(line: 2646, column: 7, scope: !2914)
!2945 = distinct !{!2945, !2931, !2946}
!2946 = !DILocation(line: 2658, column: 4, scope: !2915)
!2947 = !DILocation(line: 2660, column: 20, scope: !2905)
!2948 = !DILocation(line: 2660, column: 24, scope: !2905)
!2949 = distinct !{!2949, !2919, !2950}
!2950 = !DILocation(line: 2661, column: 5, scope: !2907)
!2951 = !DILocation(line: 2664, column: 1, scope: !2899)
!2952 = !DILocation(line: 2663, column: 3, scope: !2899)
!2953 = distinct !DISubprogram(name: "convert_regs_exit", scope: !3, file: !3, line: 2670, type: !2803, scopeLine: 2671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2954)
!2954 = !{!2955, !2956, !2957, !2958, !2959}
!2955 = !DILocalVariable(name: "value_reg_low", scope: !2953, file: !3, line: 2672, type: !766)
!2956 = !DILocalVariable(name: "value_reg_high", scope: !2953, file: !3, line: 2672, type: !766)
!2957 = !DILocalVariable(name: "output_stack", scope: !2953, file: !3, line: 2673, type: !1884)
!2958 = !DILocalVariable(name: "retvalue", scope: !2953, file: !3, line: 2674, type: !910)
!2959 = !DILocalVariable(name: "reg", scope: !2960, file: !3, line: 2689, type: !766)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 2688, column: 5)
!2961 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2685, column: 7)
!2962 = !DILocation(line: 2676, column: 28, scope: !2953)
!2963 = !DILocation(line: 2676, column: 14, scope: !2953)
!2964 = !DILocation(line: 0, scope: !2953)
!2965 = !DILocation(line: 2678, column: 7, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2678, column: 7)
!2967 = !DILocation(line: 2678, column: 7, scope: !2953)
!2968 = !DILocation(line: 2680, column: 23, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2679, column: 5)
!2970 = !DILocation(line: 2681, column: 24, scope: !2969)
!2971 = !DILocation(line: 2681, column: 50, scope: !2969)
!2972 = !DILocation(line: 2682, column: 5, scope: !2969)
!2973 = !DILocation(line: 2684, column: 19, scope: !2953)
!2974 = !DILocation(line: 2685, column: 21, scope: !2961)
!2975 = !DILocation(line: 2685, column: 7, scope: !2953)
!2976 = !DILocation(line: 2686, column: 19, scope: !2961)
!2977 = !DILocation(line: 2686, column: 23, scope: !2961)
!2978 = !DILocation(line: 2686, column: 5, scope: !2961)
!2979 = !DILocation(line: 2691, column: 42, scope: !2960)
!2980 = !DILocation(line: 2691, column: 21, scope: !2960)
!2981 = !DILocation(line: 2691, column: 25, scope: !2960)
!2982 = !DILocation(line: 0, scope: !2960)
!2983 = !DILocation(line: 0, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 2693, column: 2)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2692, column: 7)
!2986 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 2692, column: 7)
!2987 = !DILocation(line: 2692, column: 12, scope: !2986)
!2988 = !DILocation(line: 0, scope: !2986)
!2989 = !DILocation(line: 2692, column: 37, scope: !2985)
!2990 = !DILocation(line: 2692, column: 7, scope: !2986)
!2991 = !DILocation(line: 2694, column: 46, scope: !2984)
!2992 = !DILocation(line: 2694, column: 37, scope: !2984)
!2993 = !DILocation(line: 2694, column: 4, scope: !2984)
!2994 = !DILocation(line: 2694, column: 44, scope: !2984)
!2995 = !DILocation(line: 2695, column: 4, scope: !2984)
!2996 = !DILocation(line: 2692, column: 56, scope: !2985)
!2997 = !DILocation(line: 2692, column: 7, scope: !2985)
!2998 = distinct !{!2998, !2990, !2999}
!2999 = !DILocation(line: 2696, column: 2, scope: !2986)
!3000 = !DILocation(line: 2698, column: 1, scope: !2953)
!3001 = distinct !DISubprogram(name: "convert_regs_2", scope: !3, file: !3, line: 3060, type: !3002, scopeLine: 3061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3004)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{null, !879}
!3004 = !{!3005, !3006, !3007, !3008, !3010}
!3005 = !DILocalVariable(name: "block", arg: 1, scope: !3001, file: !3, line: 3060, type: !879)
!3006 = !DILocalVariable(name: "stack", scope: !3001, file: !3, line: 3062, type: !878)
!3007 = !DILocalVariable(name: "sp", scope: !3001, file: !3, line: 3062, type: !878)
!3008 = !DILocalVariable(name: "e", scope: !3009, file: !3, line: 3075, type: !896)
!3009 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 3074, column: 5)
!3010 = !DILocalVariable(name: "ei", scope: !3009, file: !3, line: 3076, type: !2572)
!3011 = !DILocation(line: 0, scope: !3001)
!3012 = !DILocation(line: 3068, column: 11, scope: !3001)
!3013 = !DILocation(line: 3071, column: 6, scope: !3001)
!3014 = !DILocation(line: 3071, column: 9, scope: !3001)
!3015 = !DILocation(line: 0, scope: !3009)
!3016 = !DILocation(line: 0, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 3093, column: 7)
!3018 = !DILocation(line: 0, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 3093, column: 7)
!3020 = !DILocation(line: 3073, column: 3, scope: !3001)
!3021 = !DILocation(line: 3075, column: 7, scope: !3009)
!3022 = !DILocation(line: 3076, column: 7, scope: !3009)
!3023 = !DILocation(line: 3078, column: 16, scope: !3009)
!3024 = !DILocation(line: 3078, column: 15, scope: !3009)
!3025 = !DILocation(line: 3093, column: 7, scope: !3017)
!3026 = !DILocation(line: 3093, column: 7, scope: !3019)
!3027 = !DILocation(line: 3094, column: 9, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 3094, column: 6)
!3029 = !DILocation(line: 3094, column: 12, scope: !3028)
!3030 = !DILocation(line: 3094, column: 18, scope: !3028)
!3031 = !DILocation(line: 3094, column: 6, scope: !3019)
!3032 = !DILocation(line: 3096, column: 6, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 3095, column: 4)
!3034 = !DILocation(line: 3096, column: 28, scope: !3033)
!3035 = !DILocation(line: 3096, column: 40, scope: !3033)
!3036 = !DILocation(line: 3097, column: 11, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 3097, column: 10)
!3038 = !DILocation(line: 3097, column: 33, scope: !3037)
!3039 = !DILocation(line: 3097, column: 10, scope: !3033)
!3040 = !DILocation(line: 3098, column: 11, scope: !3037)
!3041 = !DILocation(line: 3098, column: 14, scope: !3037)
!3042 = !DILocation(line: 3098, column: 8, scope: !3037)
!3043 = distinct !{!3043, !3025, !3044}
!3044 = !DILocation(line: 3099, column: 4, scope: !3017)
!3045 = !DILocation(line: 3101, column: 7, scope: !3009)
!3046 = !DILocation(line: 3102, column: 5, scope: !3001)
!3047 = !DILocation(line: 3103, column: 13, scope: !3001)
!3048 = !DILocation(line: 3102, column: 5, scope: !3009)
!3049 = distinct !{!3049, !3020, !3050}
!3050 = !DILocation(line: 3103, column: 21, scope: !3001)
!3051 = !DILocation(line: 3105, column: 3, scope: !3001)
!3052 = !DILocation(line: 3106, column: 1, scope: !3001)
!3053 = distinct !DISubprogram(name: "compensate_edges", scope: !3, file: !3, line: 2830, type: !1901, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3054)
!3054 = !{!3055, !3056, !3057, !3062}
!3055 = !DILocalVariable(name: "inserted", scope: !3053, file: !3, line: 2832, type: !765)
!3056 = !DILocalVariable(name: "bb", scope: !3053, file: !3, line: 2833, type: !879)
!3057 = !DILocalVariable(name: "e", scope: !3058, file: !3, line: 2840, type: !896)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 2839, column: 7)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 2838, column: 9)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 2837, column: 3)
!3061 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 2837, column: 3)
!3062 = !DILocalVariable(name: "ei", scope: !3058, file: !3, line: 2841, type: !2572)
!3063 = !DILocation(line: 0, scope: !3053)
!3064 = !DILocation(line: 2835, column: 20, scope: !3053)
!3065 = !DILocation(line: 2837, column: 3, scope: !3061)
!3066 = !DILocation(line: 0, scope: !3058)
!3067 = !DILocation(line: 0, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3058, file: !3, line: 2843, column: 9)
!3069 = !DILocation(line: 0, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 2843, column: 9)
!3071 = !DILocation(line: 2837, column: 3, scope: !3060)
!3072 = !DILocation(line: 2832, column: 8, scope: !3053)
!3073 = !DILocation(line: 0, scope: !3061)
!3074 = !DILocation(line: 2838, column: 15, scope: !3059)
!3075 = !DILocation(line: 2838, column: 12, scope: !3059)
!3076 = !DILocation(line: 2838, column: 9, scope: !3060)
!3077 = !DILocation(line: 2840, column: 9, scope: !3058)
!3078 = !DILocation(line: 2841, column: 9, scope: !3058)
!3079 = !DILocation(line: 2843, column: 9, scope: !3068)
!3080 = !DILocation(line: 2843, column: 9, scope: !3070)
!3081 = !DILocation(line: 2844, column: 33, scope: !3070)
!3082 = !DILocation(line: 2844, column: 16, scope: !3070)
!3083 = !DILocation(line: 2844, column: 13, scope: !3070)
!3084 = distinct !{!3084, !3079, !3085}
!3085 = !DILocation(line: 2844, column: 34, scope: !3068)
!3086 = !DILocation(line: 2845, column: 7, scope: !3059)
!3087 = !DILocation(line: 2845, column: 7, scope: !3058)
!3088 = !DILocation(line: 0, scope: !3060)
!3089 = distinct !{!3089, !3065, !3090}
!3090 = !DILocation(line: 2845, column: 7, scope: !3061)
!3091 = !DILocation(line: 2846, column: 3, scope: !3053)
!3092 = distinct !DISubprogram(name: "stack_result", scope: !3, file: !3, line: 662, type: !3093, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3095)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!910, !962}
!3095 = !{!3096, !3097}
!3096 = !DILocalVariable(name: "decl", arg: 1, scope: !3092, file: !3, line: 662, type: !962)
!3097 = !DILocalVariable(name: "result", scope: !3092, file: !3, line: 664, type: !910)
!3098 = !DILocation(line: 0, scope: !3092)
!3099 = !DILocation(line: 668, column: 26, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 668, column: 7)
!3101 = !DILocation(line: 668, column: 7, scope: !3100)
!3102 = !DILocation(line: 668, column: 7, scope: !3092)
!3103 = !DILocation(line: 671, column: 12, scope: !3092)
!3104 = !DILocation(line: 672, column: 7, scope: !3092)
!3105 = !DILocation(line: 673, column: 28, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 672, column: 7)
!3107 = !DILocation(line: 673, column: 44, scope: !3106)
!3108 = !DILocation(line: 673, column: 14, scope: !3106)
!3109 = !DILocation(line: 673, column: 5, scope: !3106)
!3110 = !DILocation(line: 676, column: 17, scope: !3092)
!3111 = !DILocation(line: 676, column: 22, scope: !3092)
!3112 = !DILocation(line: 676, column: 25, scope: !3092)
!3113 = !DILocation(line: 676, column: 10, scope: !3092)
!3114 = !DILocation(line: 677, column: 1, scope: !3092)
!3115 = distinct !DISubprogram(name: "end_hard_regno", scope: !3116, file: !3116, line: 290, type: !3117, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3119)
!3116 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!7, !5, !7}
!3119 = !{!3120, !3121}
!3120 = !DILocalVariable(name: "mode", arg: 1, scope: !3115, file: !3116, line: 290, type: !5)
!3121 = !DILocalVariable(name: "regno", arg: 2, scope: !3115, file: !3116, line: 290, type: !7)
!3122 = !DILocation(line: 0, scope: !3115)
!3123 = !DILocation(line: 292, column: 18, scope: !3115)
!3124 = !DILocation(line: 292, column: 16, scope: !3115)
!3125 = !DILocation(line: 292, column: 3, scope: !3115)
!3126 = distinct !DISubprogram(name: "convert_regs_1", scope: !3, file: !3, line: 2883, type: !3002, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3139, !3140, !3141}
!3128 = !DILocalVariable(name: "block", arg: 1, scope: !3126, file: !3, line: 2883, type: !879)
!3129 = !DILocalVariable(name: "regstack", scope: !3126, file: !3, line: 2885, type: !794)
!3130 = !DILocalVariable(name: "bi", scope: !3126, file: !3, line: 2886, type: !789)
!3131 = !DILocalVariable(name: "reg", scope: !3126, file: !3, line: 2887, type: !766)
!3132 = !DILocalVariable(name: "insn", scope: !3126, file: !3, line: 2888, type: !910)
!3133 = !DILocalVariable(name: "next", scope: !3126, file: !3, line: 2888, type: !910)
!3134 = !DILocalVariable(name: "control_flow_insn_deleted", scope: !3126, file: !3, line: 2889, type: !765)
!3135 = !DILocalVariable(name: "debug_insns_with_starting_stack", scope: !3126, file: !3, line: 2890, type: !766)
!3136 = !DILocalVariable(name: "e", scope: !3137, file: !3, line: 2897, type: !896)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 2896, column: 5)
!3138 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2895, column: 7)
!3139 = !DILocalVariable(name: "beste", scope: !3137, file: !3, line: 2897, type: !896)
!3140 = !DILocalVariable(name: "ei", scope: !3137, file: !3, line: 2898, type: !2572)
!3141 = !DILocalVariable(name: "set", scope: !3142, file: !3, line: 3016, type: !910)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 3015, column: 2)
!3143 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 3013, column: 11)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 3012, column: 5)
!3145 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 3011, column: 3)
!3146 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 3011, column: 3)
!3147 = !DILocation(line: 0, scope: !3126)
!3148 = !DILocation(line: 2885, column: 3, scope: !3126)
!3149 = !DILocation(line: 2886, column: 19, scope: !3126)
!3150 = !DILocation(line: 2892, column: 21, scope: !3126)
!3151 = !DILocation(line: 2895, column: 20, scope: !3138)
!3152 = !DILocation(line: 2895, column: 24, scope: !3138)
!3153 = !DILocation(line: 2895, column: 7, scope: !3126)
!3154 = !DILocation(line: 2897, column: 7, scope: !3137)
!3155 = !DILocation(line: 0, scope: !3137)
!3156 = !DILocation(line: 2898, column: 7, scope: !3137)
!3157 = !DILocation(line: 2902, column: 7, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 2902, column: 7)
!3159 = !DILocation(line: 0, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 2902, column: 7)
!3161 = !DILocation(line: 2902, column: 7, scope: !3160)
!3162 = !DILocation(line: 2903, column: 6, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2903, column: 6)
!3164 = !DILocation(line: 2903, column: 27, scope: !3163)
!3165 = !DILocation(line: 2903, column: 6, scope: !3160)
!3166 = !DILocation(line: 2904, column: 12, scope: !3163)
!3167 = !DILocation(line: 2904, column: 4, scope: !3163)
!3168 = distinct !{!3168, !3157, !3169}
!3169 = !DILocation(line: 2904, column: 33, scope: !3158)
!3170 = !DILocation(line: 2906, column: 11, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 2906, column: 11)
!3172 = !DILocation(line: 2906, column: 11, scope: !3137)
!3173 = !DILocation(line: 2907, column: 2, scope: !3171)
!3174 = !DILocation(line: 2911, column: 21, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 2909, column: 2)
!3176 = !DILocation(line: 0, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 2913, column: 10)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 2912, column: 4)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 2912, column: 4)
!3180 = !DILocation(line: 2912, column: 9, scope: !3179)
!3181 = !DILocation(line: 0, scope: !3179)
!3182 = !DILocation(line: 2912, column: 35, scope: !3178)
!3183 = !DILocation(line: 2912, column: 4, scope: !3179)
!3184 = !DILocation(line: 2913, column: 10, scope: !3177)
!3185 = !DILocation(line: 2913, column: 10, scope: !3178)
!3186 = !DILocation(line: 2914, column: 47, scope: !3177)
!3187 = !DILocation(line: 2914, column: 25, scope: !3177)
!3188 = !DILocation(line: 2914, column: 8, scope: !3177)
!3189 = !DILocation(line: 2914, column: 45, scope: !3177)
!3190 = !DILocation(line: 2912, column: 55, scope: !3178)
!3191 = !DILocation(line: 2912, column: 4, scope: !3178)
!3192 = distinct !{!3192, !3183, !3193}
!3193 = !DILocation(line: 2914, column: 47, scope: !3179)
!3194 = !DILocation(line: 2916, column: 5, scope: !3138)
!3195 = !DILocation(line: 2916, column: 5, scope: !3137)
!3196 = !DILocation(line: 2918, column: 7, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2918, column: 7)
!3198 = !DILocation(line: 2918, column: 7, scope: !3126)
!3199 = !DILocation(line: 2920, column: 69, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 2919, column: 5)
!3201 = !DILocation(line: 2920, column: 7, scope: !3200)
!3202 = !DILocation(line: 2921, column: 20, scope: !3200)
!3203 = !DILocation(line: 2921, column: 36, scope: !3200)
!3204 = !DILocation(line: 2921, column: 7, scope: !3200)
!3205 = !DILocation(line: 2922, column: 5, scope: !3200)
!3206 = !DILocation(line: 2926, column: 17, scope: !3126)
!3207 = !DILocation(line: 2927, column: 10, scope: !3126)
!3208 = !DILocation(line: 2928, column: 18, scope: !3126)
!3209 = !DILocation(line: 2929, column: 20, scope: !3126)
!3210 = !DILocation(line: 2931, column: 3, scope: !3126)
!3211 = !DILocation(line: 2889, column: 8, scope: !3126)
!3212 = !DILocation(line: 2934, column: 14, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2932, column: 5)
!3214 = !DILocation(line: 2937, column: 7, scope: !3213)
!3215 = !DILocation(line: 2938, column: 19, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 2938, column: 11)
!3217 = !DILocation(line: 2938, column: 16, scope: !3216)
!3218 = !DILocation(line: 2938, column: 11, scope: !3213)
!3219 = !DILocation(line: 2943, column: 11, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 2943, column: 11)
!3221 = !DILocation(line: 2943, column: 11, scope: !3213)
!3222 = !DILocation(line: 2945, column: 8, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 2945, column: 8)
!3224 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 2944, column: 2)
!3225 = !DILocation(line: 2945, column: 8, scope: !3224)
!3226 = !DILocation(line: 2946, column: 37, scope: !3223)
!3227 = !DILocation(line: 2946, column: 6, scope: !3223)
!3228 = !DILocation(line: 2949, column: 23, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 2948, column: 6)
!3230 = !DILocation(line: 2949, column: 8, scope: !3229)
!3231 = !DILocation(line: 2957, column: 8, scope: !3229)
!3232 = !DILocation(line: 2960, column: 16, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 2960, column: 16)
!3234 = !DILocation(line: 2961, column: 9, scope: !3233)
!3235 = !DILocation(line: 2961, column: 12, scope: !3233)
!3236 = !DILocation(line: 2960, column: 16, scope: !3220)
!3237 = !DILocation(line: 2963, column: 8, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2963, column: 8)
!3239 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 2962, column: 2)
!3240 = !DILocation(line: 2963, column: 8, scope: !3239)
!3241 = !DILocation(line: 2966, column: 10, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 2964, column: 6)
!3243 = !DILocation(line: 2965, column: 8, scope: !3242)
!3244 = !DILocation(line: 2967, column: 21, scope: !3242)
!3245 = !DILocation(line: 2967, column: 8, scope: !3242)
!3246 = !DILocation(line: 2968, column: 6, scope: !3242)
!3247 = !DILocation(line: 2969, column: 33, scope: !3239)
!3248 = !DILocation(line: 2969, column: 30, scope: !3239)
!3249 = !DILocation(line: 2970, column: 21, scope: !3239)
!3250 = !DILocation(line: 2971, column: 2, scope: !3239)
!3251 = !DILocation(line: 2972, column: 5, scope: !3213)
!3252 = distinct !{!3252, !3210, !3253}
!3253 = !DILocation(line: 2973, column: 14, scope: !3126)
!3254 = !DILocation(line: 2975, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2975, column: 7)
!3256 = !DILocation(line: 2975, column: 7, scope: !3126)
!3257 = !DILocation(line: 2981, column: 19, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2981, column: 7)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 2976, column: 5)
!3260 = !DILocation(line: 2981, column: 12, scope: !3258)
!3261 = !DILocation(line: 0, scope: !3258)
!3262 = !DILocation(line: 2981, column: 7, scope: !3258)
!3263 = !DILocation(line: 2984, column: 9, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 2984, column: 8)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 2983, column: 2)
!3266 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 2981, column: 7)
!3267 = !DILocation(line: 2984, column: 8, scope: !3265)
!3268 = !DILocation(line: 2987, column: 35, scope: !3265)
!3269 = !DILocation(line: 2988, column: 19, scope: !3265)
!3270 = !DILocation(line: 2988, column: 4, scope: !3265)
!3271 = !DILocation(line: 2990, column: 2, scope: !3265)
!3272 = !DILocation(line: 2982, column: 12, scope: !3266)
!3273 = !DILocation(line: 2981, column: 7, scope: !3266)
!3274 = distinct !{!3274, !3262, !3275}
!3275 = !DILocation(line: 2990, column: 2, scope: !3258)
!3276 = !DILocation(line: 2993, column: 7, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2993, column: 7)
!3278 = !DILocation(line: 2993, column: 7, scope: !3126)
!3279 = !DILocation(line: 2995, column: 7, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 2994, column: 5)
!3281 = !DILocation(line: 0, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 2997, column: 6)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 2996, column: 7)
!3284 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 2996, column: 7)
!3285 = !DILocation(line: 2996, column: 12, scope: !3284)
!3286 = !DILocation(line: 0, scope: !3284)
!3287 = !DILocation(line: 2996, column: 39, scope: !3283)
!3288 = !DILocation(line: 2996, column: 7, scope: !3284)
!3289 = !DILocation(line: 2997, column: 6, scope: !3282)
!3290 = !DILocation(line: 2997, column: 6, scope: !3283)
!3291 = !DILocation(line: 2998, column: 13, scope: !3282)
!3292 = !DILocation(line: 2998, column: 4, scope: !3282)
!3293 = !DILocation(line: 2996, column: 58, scope: !3283)
!3294 = !DILocation(line: 2996, column: 7, scope: !3283)
!3295 = distinct !{!3295, !3288, !3296}
!3296 = !DILocation(line: 2998, column: 34, scope: !3284)
!3297 = !DILocation(line: 2999, column: 16, scope: !3280)
!3298 = !DILocation(line: 2999, column: 7, scope: !3280)
!3299 = !DILocation(line: 3000, column: 20, scope: !3280)
!3300 = !DILocation(line: 3000, column: 7, scope: !3280)
!3301 = !DILocation(line: 3001, column: 5, scope: !3280)
!3302 = !DILocation(line: 3003, column: 10, scope: !3126)
!3303 = !DILocation(line: 3004, column: 7, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 3004, column: 7)
!3305 = !DILocation(line: 3004, column: 7, scope: !3126)
!3306 = !DILocation(line: 3005, column: 12, scope: !3304)
!3307 = !DILocation(line: 3005, column: 5, scope: !3304)
!3308 = !DILocation(line: 0, scope: !3143)
!3309 = !DILocation(line: 3011, column: 8, scope: !3146)
!3310 = !DILocation(line: 3005, column: 10, scope: !3304)
!3311 = !DILocation(line: 3011, column: 35, scope: !3145)
!3312 = !DILocation(line: 3011, column: 3, scope: !3146)
!3313 = !DILocation(line: 3013, column: 11, scope: !3143)
!3314 = !DILocation(line: 3014, column: 4, scope: !3143)
!3315 = !DILocation(line: 3014, column: 9, scope: !3143)
!3316 = !DILocation(line: 3013, column: 11, scope: !3144)
!3317 = !DILocation(line: 3018, column: 8, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 3018, column: 8)
!3319 = !DILocation(line: 3018, column: 8, scope: !3142)
!3320 = !DILocation(line: 3019, column: 6, scope: !3318)
!3321 = !DILocation(line: 3021, column: 10, scope: !3142)
!3322 = !DILocation(line: 0, scope: !3142)
!3323 = !DILocation(line: 3022, column: 11, scope: !3142)
!3324 = !DILocation(line: 3023, column: 33, scope: !3142)
!3325 = !DILocation(line: 3023, column: 30, scope: !3142)
!3326 = !DILocation(line: 3024, column: 2, scope: !3142)
!3327 = !DILocation(line: 3011, column: 54, scope: !3145)
!3328 = !DILocation(line: 3011, column: 3, scope: !3145)
!3329 = distinct !{!3329, !3312, !3330}
!3330 = !DILocation(line: 3025, column: 5, scope: !3146)
!3331 = !DILocation(line: 3044, column: 7, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 3044, column: 7)
!3333 = !DILocation(line: 3044, column: 7, scope: !3126)
!3334 = !DILocation(line: 3045, column: 5, scope: !3332)
!3335 = !DILocation(line: 3051, column: 3, scope: !3126)
!3336 = !DILocation(line: 3053, column: 7, scope: !3126)
!3337 = !DILocation(line: 3053, column: 19, scope: !3126)
!3338 = !DILocation(line: 3054, column: 7, scope: !3126)
!3339 = !DILocation(line: 3054, column: 12, scope: !3126)
!3340 = !DILocation(line: 3055, column: 1, scope: !3126)
!3341 = distinct !DISubprogram(name: "better_edge", scope: !3, file: !3, line: 2855, type: !3342, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3344)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!896, !896, !896}
!3344 = !{!3345, !3346}
!3345 = !DILocalVariable(name: "e1", arg: 1, scope: !3341, file: !3, line: 2855, type: !896)
!3346 = !DILocalVariable(name: "e2", arg: 2, scope: !3341, file: !3, line: 2855, type: !896)
!3347 = !DILocation(line: 0, scope: !3341)
!3348 = !DILocation(line: 2857, column: 8, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2857, column: 7)
!3350 = !DILocation(line: 2857, column: 7, scope: !3341)
!3351 = !DILocation(line: 2860, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2860, column: 7)
!3353 = !DILocation(line: 2860, column: 29, scope: !3352)
!3354 = !DILocation(line: 2860, column: 27, scope: !3352)
!3355 = !DILocation(line: 2860, column: 7, scope: !3341)
!3356 = !DILocation(line: 2862, column: 27, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2862, column: 7)
!3358 = !DILocation(line: 2862, column: 7, scope: !3341)
!3359 = !DILocation(line: 2865, column: 11, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2865, column: 7)
!3361 = !DILocation(line: 2865, column: 23, scope: !3360)
!3362 = !DILocation(line: 2865, column: 17, scope: !3360)
!3363 = !DILocation(line: 2865, column: 7, scope: !3341)
!3364 = !DILocation(line: 2867, column: 17, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2867, column: 7)
!3366 = !DILocation(line: 2867, column: 7, scope: !3341)
!3367 = !DILocation(line: 2873, column: 7, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 2873, column: 7)
!3369 = !DILocation(line: 2873, column: 31, scope: !3368)
!3370 = !DILocation(line: 2873, column: 28, scope: !3368)
!3371 = !DILocation(line: 2873, column: 7, scope: !3341)
!3372 = !DILocation(line: 2874, column: 12, scope: !3368)
!3373 = !DILocation(line: 2877, column: 20, scope: !3341)
!3374 = !DILocation(line: 2877, column: 32, scope: !3341)
!3375 = !DILocation(line: 2877, column: 37, scope: !3341)
!3376 = !DILocation(line: 2877, column: 26, scope: !3341)
!3377 = !DILocation(line: 2877, column: 10, scope: !3341)
!3378 = !DILocation(line: 2877, column: 3, scope: !3341)
!3379 = !DILocation(line: 2878, column: 1, scope: !3341)
!3380 = distinct !DISubprogram(name: "propagate_stack", scope: !3, file: !3, line: 2704, type: !3381, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !896}
!3383 = !{!3384, !3385, !3386, !3387}
!3384 = !DILocalVariable(name: "e", arg: 1, scope: !3380, file: !3, line: 2704, type: !896)
!3385 = !DILocalVariable(name: "src_stack", scope: !3380, file: !3, line: 2706, type: !1884)
!3386 = !DILocalVariable(name: "dest_stack", scope: !3380, file: !3, line: 2707, type: !1884)
!3387 = !DILocalVariable(name: "reg", scope: !3380, file: !3, line: 2708, type: !766)
!3388 = !DILocation(line: 0, scope: !3380)
!3389 = !DILocation(line: 2706, column: 22, scope: !3380)
!3390 = !DILocation(line: 2707, column: 23, scope: !3380)
!3391 = !DILocation(line: 2712, column: 15, scope: !3380)
!3392 = !DILocation(line: 2712, column: 19, scope: !3380)
!3393 = !DILocation(line: 0, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 2713, column: 3)
!3395 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2713, column: 3)
!3396 = !DILocation(line: 0, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2714, column: 9)
!3398 = !DILocation(line: 2713, column: 8, scope: !3395)
!3399 = !DILocation(line: 0, scope: !3395)
!3400 = !DILocation(line: 2713, column: 35, scope: !3394)
!3401 = !DILocation(line: 2713, column: 21, scope: !3394)
!3402 = !DILocation(line: 2713, column: 3, scope: !3395)
!3403 = !DILocation(line: 0, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 2719, column: 9)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 2718, column: 3)
!3406 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2718, column: 3)
!3407 = !DILocation(line: 2718, column: 3, scope: !3406)
!3408 = !DILocation(line: 2714, column: 9, scope: !3397)
!3409 = !DILocation(line: 2714, column: 9, scope: !3394)
!3410 = !DILocation(line: 2715, column: 23, scope: !3397)
!3411 = !DILocation(line: 2715, column: 7, scope: !3397)
!3412 = !DILocation(line: 2715, column: 42, scope: !3397)
!3413 = !DILocation(line: 2713, column: 40, scope: !3394)
!3414 = !DILocation(line: 2713, column: 3, scope: !3394)
!3415 = distinct !{!3415, !3402, !3416}
!3416 = !DILocation(line: 2715, column: 62, scope: !3395)
!3417 = !DILocation(line: 0, scope: !3406)
!3418 = !DILocation(line: 2718, column: 35, scope: !3405)
!3419 = !DILocation(line: 2719, column: 9, scope: !3404)
!3420 = !DILocation(line: 2720, column: 9, scope: !3404)
!3421 = !DILocation(line: 2720, column: 13, scope: !3404)
!3422 = !DILocation(line: 2719, column: 9, scope: !3405)
!3423 = !DILocation(line: 2721, column: 44, scope: !3404)
!3424 = !DILocation(line: 2721, column: 23, scope: !3404)
!3425 = !DILocation(line: 2721, column: 7, scope: !3404)
!3426 = !DILocation(line: 2721, column: 42, scope: !3404)
!3427 = !DILocation(line: 2718, column: 60, scope: !3405)
!3428 = !DILocation(line: 2718, column: 3, scope: !3405)
!3429 = distinct !{!3429, !3407, !3430}
!3430 = !DILocation(line: 2721, column: 44, scope: !3406)
!3431 = !DILocation(line: 2722, column: 1, scope: !3380)
!3432 = distinct !DISubprogram(name: "print_stack", scope: !3, file: !3, line: 2597, type: !3433, scopeLine: 2598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !1972, !1884}
!3435 = !{!3436, !3437, !3438}
!3436 = !DILocalVariable(name: "file", arg: 1, scope: !3432, file: !3, line: 2597, type: !1972)
!3437 = !DILocalVariable(name: "s", arg: 2, scope: !3432, file: !3, line: 2597, type: !1884)
!3438 = !DILocalVariable(name: "i", scope: !3439, file: !3, line: 2608, type: !766)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 2607, column: 5)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 2604, column: 12)
!3441 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 2602, column: 7)
!3442 = !DILocation(line: 0, scope: !3432)
!3443 = !DILocation(line: 2599, column: 9, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 2599, column: 7)
!3445 = !DILocation(line: 2599, column: 7, scope: !3432)
!3446 = !DILocation(line: 2602, column: 10, scope: !3441)
!3447 = !DILocation(line: 2602, column: 14, scope: !3441)
!3448 = !DILocation(line: 2602, column: 7, scope: !3432)
!3449 = !DILocation(line: 2603, column: 5, scope: !3441)
!3450 = !DILocation(line: 2604, column: 19, scope: !3440)
!3451 = !DILocation(line: 2604, column: 12, scope: !3441)
!3452 = !DILocation(line: 2605, column: 5, scope: !3440)
!3453 = !DILocation(line: 2609, column: 7, scope: !3439)
!3454 = !DILocation(line: 0, scope: !3439)
!3455 = !DILocation(line: 2610, column: 12, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 2610, column: 7)
!3457 = !DILocation(line: 0, scope: !3456)
!3458 = !DILocation(line: 2610, column: 27, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 2610, column: 7)
!3460 = !DILocation(line: 2610, column: 21, scope: !3459)
!3461 = !DILocation(line: 2610, column: 7, scope: !3456)
!3462 = !DILocation(line: 2611, column: 24, scope: !3459)
!3463 = !DILocation(line: 2611, column: 2, scope: !3459)
!3464 = !DILocation(line: 2610, column: 32, scope: !3459)
!3465 = !DILocation(line: 2610, column: 7, scope: !3459)
!3466 = distinct !{!3466, !3461, !3467}
!3467 = !DILocation(line: 2611, column: 33, scope: !3456)
!3468 = !DILocation(line: 2612, column: 7, scope: !3439)
!3469 = !DILocation(line: 2614, column: 1, scope: !3432)
!3470 = distinct !DISubprogram(name: "subst_stack_regs_in_debug_insn", scope: !3, file: !3, line: 1324, type: !3471, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!766, !1886, !770}
!3473 = !{!3474, !3475, !3476, !3477, !3478}
!3474 = !DILocalVariable(name: "loc", arg: 1, scope: !3470, file: !3, line: 1324, type: !1886)
!3475 = !DILocalVariable(name: "data", arg: 2, scope: !3470, file: !3, line: 1324, type: !770)
!3476 = !DILocalVariable(name: "tloc", scope: !3470, file: !3, line: 1326, type: !1886)
!3477 = !DILocalVariable(name: "regstack", scope: !3470, file: !3, line: 1327, type: !1884)
!3478 = !DILocalVariable(name: "hard_regno", scope: !3470, file: !3, line: 1328, type: !766)
!3479 = !DILocation(line: 0, scope: !3470)
!3480 = !DILocation(line: 1326, column: 15, scope: !3470)
!3481 = !DILocation(line: 1327, column: 20, scope: !3470)
!3482 = !DILocation(line: 1330, column: 8, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1330, column: 7)
!3484 = !DILocation(line: 1333, column: 12, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1333, column: 7)
!3486 = !DILocation(line: 1330, column: 7, scope: !3470)
!3487 = !DILocation(line: 1336, column: 43, scope: !3470)
!3488 = !DILocation(line: 1336, column: 16, scope: !3470)
!3489 = !DILocation(line: 1337, column: 3, scope: !3470)
!3490 = !DILocation(line: 1339, column: 3, scope: !3470)
!3491 = !DILocation(line: 1341, column: 3, scope: !3470)
!3492 = !DILocation(line: 1342, column: 1, scope: !3470)
!3493 = distinct !DISubprogram(name: "subst_stack_regs", scope: !3, file: !3, line: 2279, type: !3494, scopeLine: 2280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3496)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!765, !910, !1884}
!3496 = !{!3497, !3498, !3499, !3500, !3501, !3502, !3503, !3506}
!3497 = !DILocalVariable(name: "insn", arg: 1, scope: !3493, file: !3, line: 2279, type: !910)
!3498 = !DILocalVariable(name: "regstack", arg: 2, scope: !3493, file: !3, line: 2279, type: !1884)
!3499 = !DILocalVariable(name: "note_link", scope: !3493, file: !3, line: 2281, type: !1886)
!3500 = !DILocalVariable(name: "note", scope: !3493, file: !3, line: 2281, type: !910)
!3501 = !DILocalVariable(name: "control_flow_insn_deleted", scope: !3493, file: !3, line: 2282, type: !765)
!3502 = !DILocalVariable(name: "i", scope: !3493, file: !3, line: 2283, type: !766)
!3503 = !DILocalVariable(name: "top", scope: !3504, file: !3, line: 2287, type: !766)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 2286, column: 5)
!3505 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2285, column: 7)
!3506 = !DILocalVariable(name: "n_operands", scope: !3507, file: !3, line: 2315, type: !766)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 2314, column: 5)
!3508 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2313, column: 7)
!3509 = !DILocation(line: 0, scope: !3493)
!3510 = !DILocation(line: 2285, column: 7, scope: !3505)
!3511 = !DILocation(line: 2285, column: 7, scope: !3493)
!3512 = !DILocation(line: 2287, column: 27, scope: !3504)
!3513 = !DILocation(line: 0, scope: !3504)
!3514 = !DILocation(line: 2293, column: 15, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 2293, column: 11)
!3516 = !DILocation(line: 2293, column: 11, scope: !3504)
!3517 = !DILocation(line: 2295, column: 4, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 2294, column: 2)
!3519 = !DILocation(line: 0, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 2300, column: 6)
!3521 = !DILocation(line: 2299, column: 21, scope: !3518)
!3522 = !DILocation(line: 2299, column: 4, scope: !3518)
!3523 = !DILocation(line: 2299, column: 25, scope: !3518)
!3524 = !DILocation(line: 2301, column: 8, scope: !3520)
!3525 = !DILocation(line: 2302, column: 21, scope: !3520)
!3526 = distinct !{!3526, !3522, !3527}
!3527 = !DILocation(line: 2303, column: 6, scope: !3518)
!3528 = !DILocation(line: 2313, column: 7, scope: !3508)
!3529 = !DILocation(line: 2313, column: 7, scope: !3493)
!3530 = !DILocation(line: 2315, column: 39, scope: !3507)
!3531 = !DILocation(line: 2315, column: 24, scope: !3507)
!3532 = !DILocation(line: 0, scope: !3507)
!3533 = !DILocation(line: 2316, column: 22, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 2316, column: 11)
!3535 = !DILocation(line: 2316, column: 11, scope: !3507)
!3536 = !DILocation(line: 2322, column: 4, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 2317, column: 2)
!3538 = !DILocation(line: 2323, column: 4, scope: !3537)
!3539 = !DILocation(line: 2326, column: 11, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 2326, column: 11)
!3541 = !DILocation(line: 2326, column: 37, scope: !3540)
!3542 = !DILocation(line: 2326, column: 11, scope: !3507)
!3543 = !DILocation(line: 2327, column: 2, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 2327, column: 2)
!3545 = !DILocation(line: 2327, column: 18, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 2327, column: 2)
!3547 = !DILocation(line: 2327, column: 16, scope: !3546)
!3548 = !DILocation(line: 2329, column: 34, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 2329, column: 10)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 2328, column: 4)
!3551 = !DILocation(line: 2329, column: 10, scope: !3549)
!3552 = !DILocation(line: 2329, column: 10, scope: !3550)
!3553 = !DILocation(line: 2331, column: 14, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 2331, column: 14)
!3555 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 2330, column: 8)
!3556 = !DILocation(line: 2331, column: 56, scope: !3554)
!3557 = !DILocation(line: 2331, column: 14, scope: !3555)
!3558 = !DILocation(line: 2333, column: 10, scope: !3554)
!3559 = !DILocation(line: 2332, column: 13, scope: !3554)
!3560 = !DILocation(line: 2333, column: 8, scope: !3554)
!3561 = !DILocation(line: 2336, column: 9, scope: !3555)
!3562 = !DILocation(line: 0, scope: !3555)
!3563 = !DILocation(line: 2335, column: 8, scope: !3555)
!3564 = !DILocation(line: 2335, column: 5, scope: !3555)
!3565 = !DILocation(line: 2337, column: 8, scope: !3555)
!3566 = !DILocation(line: 2327, column: 48, scope: !3546)
!3567 = !DILocation(line: 2327, column: 2, scope: !3546)
!3568 = distinct !{!3568, !3543, !3569}
!3569 = !DILocation(line: 2338, column: 4, scope: !3544)
!3570 = !DILocation(line: 2341, column: 7, scope: !3540)
!3571 = !DILocation(line: 2282, column: 8, scope: !3493)
!3572 = !DILocation(line: 2347, column: 7, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2347, column: 7)
!3574 = !DILocation(line: 2347, column: 21, scope: !3573)
!3575 = !DILocation(line: 2347, column: 24, scope: !3573)
!3576 = !DILocation(line: 2347, column: 7, scope: !3493)
!3577 = !DILocation(line: 2352, column: 7, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2352, column: 7)
!3579 = !DILocation(line: 2353, column: 7, scope: !3578)
!3580 = !DILocation(line: 2353, column: 10, scope: !3578)
!3581 = !DILocation(line: 2352, column: 7, scope: !3493)
!3582 = !DILocation(line: 2355, column: 17, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 2354, column: 5)
!3584 = !DILocation(line: 2355, column: 21, scope: !3583)
!3585 = !DILocation(line: 2356, column: 7, scope: !3583)
!3586 = !DILocation(line: 2357, column: 7, scope: !3583)
!3587 = !DILocation(line: 2365, column: 16, scope: !3493)
!3588 = !DILocation(line: 2366, column: 8, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2366, column: 3)
!3590 = !DILocation(line: 2365, column: 13, scope: !3493)
!3591 = !DILocation(line: 0, scope: !3589)
!3592 = !DILocation(line: 2366, column: 3, scope: !3589)
!3593 = !DILocation(line: 2367, column: 9, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 2367, column: 9)
!3595 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 2366, column: 3)
!3596 = !DILocation(line: 2367, column: 30, scope: !3594)
!3597 = !DILocation(line: 2367, column: 44, scope: !3594)
!3598 = !DILocation(line: 2367, column: 47, scope: !3594)
!3599 = !DILocation(line: 2367, column: 9, scope: !3595)
!3600 = !DILocation(line: 2369, column: 15, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 2368, column: 7)
!3602 = !DILocation(line: 2369, column: 13, scope: !3601)
!3603 = !DILocation(line: 2370, column: 40, scope: !3601)
!3604 = !DILocation(line: 2370, column: 9, scope: !3601)
!3605 = !DILocation(line: 2366, column: 40, scope: !3595)
!3606 = !DILocation(line: 2371, column: 7, scope: !3601)
!3607 = !DILocation(line: 2373, column: 20, scope: !3594)
!3608 = !DILocation(line: 2366, column: 3, scope: !3595)
!3609 = distinct !{!3609, !3592, !3610}
!3610 = !DILocation(line: 2373, column: 20, scope: !3589)
!3611 = !DILocation(line: 2376, column: 1, scope: !3493)
!3612 = distinct !DISubprogram(name: "hard_reg_set_equal_p", scope: !799, file: !799, line: 121, type: !3613, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3616)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!765, !3615, !3615}
!3615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!3616 = !{!3617, !3618}
!3617 = !DILocalVariable(name: "x", arg: 1, scope: !3612, file: !799, line: 121, type: !3615)
!3618 = !DILocalVariable(name: "y", arg: 2, scope: !3612, file: !799, line: 121, type: !3615)
!3619 = !DILocation(line: 0, scope: !3612)
!3620 = !DILocation(line: 123, column: 12, scope: !3612)
!3621 = !DILocation(line: 123, column: 10, scope: !3612)
!3622 = !DILocation(line: 123, column: 3, scope: !3612)
!3623 = distinct !DISubprogram(name: "get_true_reg", scope: !3, file: !3, line: 410, type: !3624, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3626)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!1886, !1886}
!3626 = !{!3627, !3628, !3633}
!3627 = !DILocalVariable(name: "pat", arg: 1, scope: !3623, file: !3, line: 410, type: !1886)
!3628 = !DILocalVariable(name: "subreg", scope: !3629, file: !3, line: 419, type: !910)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 418, column: 2)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 414, column: 7)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 412, column: 3)
!3632 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 412, column: 3)
!3633 = !DILocalVariable(name: "regno_off", scope: !3634, file: !3, line: 422, type: !766)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 421, column: 6)
!3635 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 420, column: 8)
!3636 = !DILocation(line: 0, scope: !3623)
!3637 = !DILocation(line: 412, column: 3, scope: !3623)
!3638 = !DILocation(line: 413, column: 13, scope: !3631)
!3639 = !DILocation(line: 413, column: 5, scope: !3631)
!3640 = !DILocation(line: 420, column: 8, scope: !3635)
!3641 = !DILocation(line: 0, scope: !3629)
!3642 = !DILocation(line: 420, column: 8, scope: !3629)
!3643 = !DILocation(line: 422, column: 45, scope: !3634)
!3644 = !DILocation(line: 423, column: 10, scope: !3634)
!3645 = !DILocation(line: 424, column: 10, scope: !3634)
!3646 = !DILocation(line: 425, column: 10, scope: !3634)
!3647 = !DILocation(line: 422, column: 24, scope: !3634)
!3648 = !DILocation(line: 0, scope: !3634)
!3649 = !DILocation(line: 426, column: 15, scope: !3634)
!3650 = !DILocation(line: 426, column: 13, scope: !3634)
!3651 = !DILocation(line: 0, scope: !3630)
!3652 = !DILocation(line: 435, column: 2, scope: !3630)
!3653 = !DILocation(line: 438, column: 6, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 438, column: 6)
!3655 = !DILocation(line: 438, column: 21, scope: !3654)
!3656 = !DILocation(line: 438, column: 6, scope: !3630)
!3657 = !DILocation(line: 439, column: 12, scope: !3654)
!3658 = !DILocation(line: 439, column: 4, scope: !3654)
!3659 = !DILocation(line: 443, column: 7, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 443, column: 6)
!3661 = !DILocation(line: 443, column: 6, scope: !3630)
!3662 = !DILocation(line: 446, column: 2, scope: !3630)
!3663 = !DILocation(line: 412, column: 3, scope: !3631)
!3664 = distinct !{!3664, !3665, !3666}
!3665 = !DILocation(line: 412, column: 3, scope: !3632)
!3666 = !DILocation(line: 450, column: 7, scope: !3632)
!3667 = !DILocation(line: 451, column: 1, scope: !3623)
!3668 = distinct !DISubprogram(name: "get_hard_regnum", scope: !3, file: !3, line: 727, type: !3669, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3671)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!766, !1884, !910}
!3671 = !{!3672, !3673, !3674}
!3672 = !DILocalVariable(name: "regstack", arg: 1, scope: !3668, file: !3, line: 727, type: !1884)
!3673 = !DILocalVariable(name: "reg", arg: 2, scope: !3668, file: !3, line: 727, type: !910)
!3674 = !DILocalVariable(name: "i", scope: !3668, file: !3, line: 729, type: !766)
!3675 = !DILocation(line: 0, scope: !3668)
!3676 = !DILocation(line: 731, column: 3, scope: !3668)
!3677 = !DILocation(line: 733, column: 22, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 733, column: 3)
!3679 = !DILocation(line: 733, column: 8, scope: !3678)
!3680 = !DILocation(line: 0, scope: !3678)
!3681 = !DILocation(line: 733, column: 29, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 733, column: 3)
!3683 = !DILocation(line: 733, column: 3, scope: !3678)
!3684 = !DILocation(line: 734, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 734, column: 9)
!3686 = !DILocation(line: 734, column: 29, scope: !3685)
!3687 = !DILocation(line: 734, column: 26, scope: !3685)
!3688 = !DILocation(line: 734, column: 9, scope: !3682)
!3689 = !DILocation(line: 733, column: 36, scope: !3682)
!3690 = !DILocation(line: 733, column: 3, scope: !3682)
!3691 = distinct !{!3691, !3683, !3692}
!3692 = !DILocation(line: 735, column: 7, scope: !3678)
!3693 = !DILocation(line: 737, column: 10, scope: !3668)
!3694 = !DILocation(line: 737, column: 48, scope: !3668)
!3695 = !DILocation(line: 737, column: 36, scope: !3668)
!3696 = !DILocation(line: 737, column: 52, scope: !3668)
!3697 = !DILocation(line: 737, column: 3, scope: !3668)
!3698 = distinct !DISubprogram(name: "replace_reg", scope: !3, file: !3, line: 689, type: !3699, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{null, !1886, !766}
!3701 = !{!3702, !3703}
!3702 = !DILocalVariable(name: "reg", arg: 1, scope: !3698, file: !3, line: 689, type: !1886)
!3703 = !DILocalVariable(name: "regno", arg: 2, scope: !3698, file: !3, line: 689, type: !766)
!3704 = !DILocation(line: 0, scope: !3698)
!3705 = !DILocation(line: 691, column: 3, scope: !3698)
!3706 = !DILocation(line: 692, column: 3, scope: !3698)
!3707 = !DILocation(line: 694, column: 3, scope: !3698)
!3708 = !DILocation(line: 697, column: 10, scope: !3698)
!3709 = !DILocation(line: 697, column: 8, scope: !3698)
!3710 = !DILocation(line: 698, column: 1, scope: !3698)
!3711 = distinct !DISubprogram(name: "straighten_stack", scope: !3, file: !3, line: 361, type: !3712, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3714)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{null, !910, !1884}
!3714 = !{!3715, !3716, !3717, !3718}
!3715 = !DILocalVariable(name: "insn", arg: 1, scope: !3711, file: !3, line: 361, type: !910)
!3716 = !DILocalVariable(name: "regstack", arg: 2, scope: !3711, file: !3, line: 361, type: !1884)
!3717 = !DILocalVariable(name: "temp_stack", scope: !3711, file: !3, line: 363, type: !794)
!3718 = !DILocalVariable(name: "top", scope: !3711, file: !3, line: 364, type: !766)
!3719 = !DILocation(line: 0, scope: !3711)
!3720 = !DILocation(line: 363, column: 3, scope: !3711)
!3721 = !DILocation(line: 370, column: 17, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 370, column: 7)
!3723 = !DILocation(line: 370, column: 21, scope: !3722)
!3724 = !DILocation(line: 370, column: 7, scope: !3711)
!3725 = !DILocation(line: 373, column: 3, scope: !3711)
!3726 = !DILocation(line: 375, column: 25, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 375, column: 3)
!3728 = !DILocation(line: 375, column: 29, scope: !3727)
!3729 = !DILocation(line: 375, column: 8, scope: !3727)
!3730 = !DILocation(line: 0, scope: !3727)
!3731 = !DILocation(line: 375, column: 50, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 375, column: 3)
!3733 = !DILocation(line: 375, column: 3, scope: !3727)
!3734 = !DILocation(line: 376, column: 56, scope: !3732)
!3735 = !DILocation(line: 376, column: 43, scope: !3732)
!3736 = !DILocation(line: 376, column: 60, scope: !3732)
!3737 = !DILocation(line: 376, column: 27, scope: !3732)
!3738 = !DILocation(line: 376, column: 5, scope: !3732)
!3739 = !DILocation(line: 376, column: 25, scope: !3732)
!3740 = !DILocation(line: 375, column: 59, scope: !3732)
!3741 = !DILocation(line: 375, column: 3, scope: !3732)
!3742 = distinct !{!3742, !3733, !3743}
!3743 = !DILocation(line: 376, column: 62, scope: !3727)
!3744 = !DILocation(line: 378, column: 3, scope: !3711)
!3745 = !DILocation(line: 379, column: 1, scope: !3711)
!3746 = distinct !DISubprogram(name: "subst_asm_stack_regs", scope: !3, file: !3, line: 1996, type: !3712, scopeLine: 1997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3747)
!3747 = !{!3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3768, !3769, !3776, !3777, !3778, !3783, !3786, !3787, !3788, !3793, !3798, !3802, !3807, !3811, !3816}
!3748 = !DILocalVariable(name: "insn", arg: 1, scope: !3746, file: !3, line: 1996, type: !910)
!3749 = !DILocalVariable(name: "regstack", arg: 2, scope: !3746, file: !3, line: 1996, type: !1884)
!3750 = !DILocalVariable(name: "body", scope: !3746, file: !3, line: 1998, type: !910)
!3751 = !DILocalVariable(name: "alt", scope: !3746, file: !3, line: 1999, type: !766)
!3752 = !DILocalVariable(name: "note_reg", scope: !3746, file: !3, line: 2001, type: !1886)
!3753 = !DILocalVariable(name: "note_loc", scope: !3746, file: !3, line: 2002, type: !1887)
!3754 = !DILocalVariable(name: "note_kind", scope: !3746, file: !3, line: 2003, type: !1888)
!3755 = !DILocalVariable(name: "clobber_reg", scope: !3746, file: !3, line: 2005, type: !1886)
!3756 = !DILocalVariable(name: "clobber_loc", scope: !3746, file: !3, line: 2006, type: !1887)
!3757 = !DILocalVariable(name: "temp_stack", scope: !3746, file: !3, line: 2008, type: !794)
!3758 = !DILocalVariable(name: "n_notes", scope: !3746, file: !3, line: 2009, type: !766)
!3759 = !DILocalVariable(name: "n_clobbers", scope: !3746, file: !3, line: 2010, type: !766)
!3760 = !DILocalVariable(name: "note", scope: !3746, file: !3, line: 2011, type: !910)
!3761 = !DILocalVariable(name: "i", scope: !3746, file: !3, line: 2012, type: !766)
!3762 = !DILocalVariable(name: "n_inputs", scope: !3746, file: !3, line: 2013, type: !766)
!3763 = !DILocalVariable(name: "n_outputs", scope: !3746, file: !3, line: 2013, type: !766)
!3764 = !DILocalVariable(name: "reg", scope: !3765, file: !3, line: 2052, type: !910)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2051, column: 5)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 2050, column: 3)
!3767 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2050, column: 3)
!3768 = !DILocalVariable(name: "loc", scope: !3765, file: !3, line: 2053, type: !1886)
!3769 = !DILocalVariable(name: "clobber", scope: !3770, file: !3, line: 2084, type: !910)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 2083, column: 4)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 2082, column: 6)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2081, column: 7)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 2081, column: 7)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 2077, column: 5)
!3775 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2076, column: 7)
!3776 = !DILocalVariable(name: "reg", scope: !3770, file: !3, line: 2085, type: !910)
!3777 = !DILocalVariable(name: "loc", scope: !3770, file: !3, line: 2086, type: !1886)
!3778 = !DILocalVariable(name: "regno", scope: !3779, file: !3, line: 2120, type: !766)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2112, column: 7)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 2108, column: 9)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 2107, column: 3)
!3782 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2107, column: 3)
!3783 = !DILocalVariable(name: "j", scope: !3784, file: !3, line: 2130, type: !766)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 2125, column: 4)
!3785 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 2124, column: 6)
!3786 = !DILocalVariable(name: "k", scope: !3784, file: !3, line: 2130, type: !766)
!3787 = !DILocalVariable(name: "temp", scope: !3784, file: !3, line: 2130, type: !766)
!3788 = !DILocalVariable(name: "regnum", scope: !3789, file: !3, line: 2153, type: !766)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 2152, column: 7)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 2151, column: 9)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2150, column: 3)
!3792 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2150, column: 3)
!3793 = !DILocalVariable(name: "regnum", scope: !3794, file: !3, line: 2163, type: !766)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 2162, column: 7)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 2161, column: 9)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 2160, column: 3)
!3797 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2160, column: 3)
!3798 = !DILocalVariable(name: "regnum", scope: !3799, file: !3, line: 2174, type: !766)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 2171, column: 5)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2170, column: 3)
!3801 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2170, column: 3)
!3802 = !DILocalVariable(name: "j", scope: !3803, file: !3, line: 2193, type: !766)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2190, column: 7)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 2189, column: 9)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2188, column: 3)
!3806 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2188, column: 3)
!3807 = !DILocalVariable(name: "j", scope: !3808, file: !3, line: 2220, type: !766)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 2218, column: 5)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 2217, column: 3)
!3810 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2217, column: 3)
!3811 = !DILocalVariable(name: "j", scope: !3812, file: !3, line: 2242, type: !766)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 2241, column: 7)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 2240, column: 9)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 2239, column: 3)
!3815 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2239, column: 3)
!3816 = !DILocalVariable(name: "j", scope: !3817, file: !3, line: 2257, type: !766)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 2256, column: 7)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 2255, column: 9)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 2254, column: 3)
!3820 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2254, column: 3)
!3821 = !DILocation(line: 0, scope: !3746)
!3822 = !DILocation(line: 1998, column: 14, scope: !3746)
!3823 = !DILocation(line: 2008, column: 3, scope: !3746)
!3824 = !DILocation(line: 2013, column: 3, scope: !3746)
!3825 = !DILocation(line: 2015, column: 9, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2015, column: 7)
!3827 = !DILocation(line: 2015, column: 7, scope: !3746)
!3828 = !DILocation(line: 2021, column: 3, scope: !3746)
!3829 = !DILocation(line: 2022, column: 3, scope: !3746)
!3830 = !DILocation(line: 2023, column: 9, scope: !3746)
!3831 = !DILocation(line: 2025, column: 3, scope: !3746)
!3832 = !DILocation(line: 2027, column: 3, scope: !3746)
!3833 = !DILocation(line: 2029, column: 3, scope: !3746)
!3834 = !DILocation(line: 2032, column: 8, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2032, column: 3)
!3836 = !DILocation(line: 0, scope: !3835)
!3837 = !DILocation(line: 2032, column: 30, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 2032, column: 3)
!3839 = !DILocation(line: 2032, column: 17, scope: !3838)
!3840 = !DILocation(line: 2032, column: 3, scope: !3835)
!3841 = !DILocation(line: 2033, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2033, column: 9)
!3843 = !DILocation(line: 2033, column: 42, scope: !3842)
!3844 = !DILocation(line: 2034, column: 2, scope: !3842)
!3845 = !DILocation(line: 2034, column: 5, scope: !3842)
!3846 = !DILocation(line: 2033, column: 9, scope: !3838)
!3847 = !DILocation(line: 2036, column: 2, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 2035, column: 7)
!3849 = !DILocation(line: 2036, column: 28, scope: !3848)
!3850 = !DILocation(line: 2037, column: 26, scope: !3848)
!3851 = !DILocation(line: 2037, column: 24, scope: !3848)
!3852 = !DILocation(line: 2038, column: 7, scope: !3848)
!3853 = !DILocation(line: 2032, column: 43, scope: !3838)
!3854 = !DILocation(line: 2032, column: 3, scope: !3838)
!3855 = distinct !{!3855, !3840, !3856}
!3856 = !DILocation(line: 2038, column: 7, scope: !3835)
!3857 = !DILocation(line: 2042, column: 22, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2042, column: 3)
!3859 = !DILocation(line: 2042, column: 8, scope: !3858)
!3860 = !DILocation(line: 0, scope: !3858)
!3861 = !DILocation(line: 2042, column: 3, scope: !3858)
!3862 = !DILocation(line: 2043, column: 6, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 2042, column: 3)
!3864 = !DILocation(line: 2042, column: 53, scope: !3863)
!3865 = !DILocation(line: 2042, column: 3, scope: !3863)
!3866 = distinct !{!3866, !3861, !3867}
!3867 = !DILocation(line: 2043, column: 6, scope: !3858)
!3868 = !DILocation(line: 2045, column: 14, scope: !3746)
!3869 = !DILocation(line: 2046, column: 14, scope: !3746)
!3870 = !DILocation(line: 2047, column: 15, scope: !3746)
!3871 = !DILocation(line: 2050, column: 8, scope: !3767)
!3872 = !DILocation(line: 0, scope: !3767)
!3873 = !DILocation(line: 2050, column: 3, scope: !3767)
!3874 = !DILocation(line: 2052, column: 17, scope: !3765)
!3875 = !DILocation(line: 0, scope: !3765)
!3876 = !DILocation(line: 2055, column: 11, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 2055, column: 11)
!3878 = !DILocation(line: 2055, column: 26, scope: !3877)
!3879 = !DILocation(line: 2055, column: 36, scope: !3877)
!3880 = !DILocation(line: 2055, column: 39, scope: !3877)
!3881 = !DILocation(line: 2055, column: 11, scope: !3765)
!3882 = !DILocation(line: 2057, column: 12, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 2056, column: 2)
!3884 = !DILocation(line: 2059, column: 2, scope: !3883)
!3885 = !DILocation(line: 2061, column: 11, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 2061, column: 11)
!3887 = !DILocation(line: 2062, column: 4, scope: !3886)
!3888 = !DILocation(line: 2062, column: 8, scope: !3886)
!3889 = !DILocation(line: 2062, column: 29, scope: !3886)
!3890 = !DILocation(line: 2063, column: 8, scope: !3886)
!3891 = !DILocation(line: 2063, column: 32, scope: !3886)
!3892 = !DILocation(line: 2061, column: 11, scope: !3765)
!3893 = !DILocation(line: 2065, column: 4, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 2064, column: 2)
!3895 = !DILocation(line: 2065, column: 22, scope: !3894)
!3896 = !DILocation(line: 2066, column: 4, scope: !3894)
!3897 = !DILocation(line: 2066, column: 22, scope: !3894)
!3898 = !DILocation(line: 2067, column: 25, scope: !3894)
!3899 = !DILocation(line: 2067, column: 4, scope: !3894)
!3900 = !DILocation(line: 2067, column: 23, scope: !3894)
!3901 = !DILocation(line: 2068, column: 11, scope: !3894)
!3902 = !DILocation(line: 2069, column: 2, scope: !3894)
!3903 = !DILocation(line: 2050, column: 46, scope: !3766)
!3904 = !DILocation(line: 2050, column: 3, scope: !3766)
!3905 = distinct !{!3905, !3873, !3906}
!3906 = !DILocation(line: 2070, column: 5, scope: !3767)
!3907 = !DILocation(line: 2076, column: 7, scope: !3775)
!3908 = !DILocation(line: 2076, column: 23, scope: !3775)
!3909 = !DILocation(line: 2076, column: 7, scope: !3746)
!3910 = !DILocation(line: 2078, column: 21, scope: !3774)
!3911 = !DILocation(line: 2079, column: 21, scope: !3774)
!3912 = !DILocation(line: 2081, column: 12, scope: !3773)
!3913 = !DILocation(line: 2081, column: 23, scope: !3772)
!3914 = !DILocation(line: 2081, column: 21, scope: !3772)
!3915 = !DILocation(line: 2081, column: 7, scope: !3773)
!3916 = !DILocation(line: 2082, column: 6, scope: !3771)
!3917 = !DILocation(line: 2082, column: 38, scope: !3771)
!3918 = !DILocation(line: 2082, column: 6, scope: !3772)
!3919 = !DILocation(line: 0, scope: !3770)
!3920 = !DILocation(line: 2085, column: 16, scope: !3770)
!3921 = !DILocation(line: 2088, column: 10, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 2088, column: 10)
!3923 = !DILocation(line: 2088, column: 25, scope: !3922)
!3924 = !DILocation(line: 2088, column: 35, scope: !3922)
!3925 = !DILocation(line: 2088, column: 38, scope: !3922)
!3926 = !DILocation(line: 2088, column: 10, scope: !3770)
!3927 = !DILocation(line: 2090, column: 11, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 2089, column: 8)
!3929 = !DILocation(line: 2092, column: 8, scope: !3928)
!3930 = !DILocation(line: 2094, column: 10, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 2094, column: 10)
!3932 = !DILocation(line: 2094, column: 10, scope: !3770)
!3933 = !DILocation(line: 2096, column: 3, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 2095, column: 8)
!3935 = !DILocation(line: 2096, column: 27, scope: !3934)
!3936 = !DILocation(line: 2097, column: 3, scope: !3934)
!3937 = !DILocation(line: 2097, column: 27, scope: !3934)
!3938 = !DILocation(line: 2098, column: 13, scope: !3934)
!3939 = !DILocation(line: 2099, column: 8, scope: !3934)
!3940 = !DILocation(line: 2081, column: 43, scope: !3772)
!3941 = !DILocation(line: 0, scope: !3772)
!3942 = !DILocation(line: 2081, column: 7, scope: !3772)
!3943 = distinct !{!3943, !3915, !3944}
!3944 = !DILocation(line: 2100, column: 4, scope: !3773)
!3945 = !DILocation(line: 2103, column: 16, scope: !3746)
!3946 = !DILocation(line: 2074, column: 14, scope: !3746)
!3947 = !DILocation(line: 2107, column: 12, scope: !3782)
!3948 = !DILocation(line: 0, scope: !3780)
!3949 = !DILocation(line: 0, scope: !3784)
!3950 = !DILocation(line: 2107, column: 8, scope: !3782)
!3951 = !DILocation(line: 2107, column: 27, scope: !3781)
!3952 = !DILocation(line: 2107, column: 39, scope: !3781)
!3953 = !DILocation(line: 2107, column: 37, scope: !3781)
!3954 = !DILocation(line: 2107, column: 25, scope: !3781)
!3955 = !DILocation(line: 2107, column: 3, scope: !3782)
!3956 = !DILocation(line: 2108, column: 9, scope: !3780)
!3957 = !DILocation(line: 2109, column: 2, scope: !3780)
!3958 = !DILocation(line: 2109, column: 46, scope: !3780)
!3959 = !DILocation(line: 2109, column: 5, scope: !3780)
!3960 = !DILocation(line: 2111, column: 2, scope: !3780)
!3961 = !DILocation(line: 2111, column: 26, scope: !3780)
!3962 = !DILocation(line: 2111, column: 29, scope: !3780)
!3963 = !DILocation(line: 2108, column: 9, scope: !3781)
!3964 = !DILocation(line: 2120, column: 44, scope: !3779)
!3965 = !DILocation(line: 2120, column: 14, scope: !3779)
!3966 = !DILocation(line: 0, scope: !3779)
!3967 = !DILocation(line: 2122, column: 2, scope: !3779)
!3968 = !DILocation(line: 2124, column: 30, scope: !3785)
!3969 = !DILocation(line: 2124, column: 27, scope: !3785)
!3970 = !DILocation(line: 2124, column: 6, scope: !3779)
!3971 = !DILocation(line: 2132, column: 21, scope: !3784)
!3972 = !DILocation(line: 2132, column: 34, scope: !3784)
!3973 = !DILocation(line: 2132, column: 25, scope: !3784)
!3974 = !DILocation(line: 2134, column: 7, scope: !3784)
!3975 = !DILocation(line: 2134, column: 37, scope: !3784)
!3976 = !DILocation(line: 2134, column: 4, scope: !3784)
!3977 = !DILocation(line: 2136, column: 13, scope: !3784)
!3978 = !DILocation(line: 2137, column: 26, scope: !3784)
!3979 = !DILocation(line: 2137, column: 24, scope: !3784)
!3980 = !DILocation(line: 2138, column: 24, scope: !3784)
!3981 = !DILocation(line: 2139, column: 4, scope: !3784)
!3982 = !DILocation(line: 2107, column: 50, scope: !3781)
!3983 = !DILocation(line: 2107, column: 3, scope: !3781)
!3984 = distinct !{!3984, !3955, !3985}
!3985 = !DILocation(line: 2140, column: 7, scope: !3782)
!3986 = !DILocation(line: 2145, column: 3, scope: !3746)
!3987 = !DILocation(line: 2150, column: 12, scope: !3792)
!3988 = !DILocation(line: 2150, column: 8, scope: !3792)
!3989 = !DILocation(line: 2150, column: 27, scope: !3791)
!3990 = !DILocation(line: 2150, column: 39, scope: !3791)
!3991 = !DILocation(line: 2150, column: 37, scope: !3791)
!3992 = !DILocation(line: 2150, column: 25, scope: !3791)
!3993 = !DILocation(line: 2150, column: 3, scope: !3792)
!3994 = !DILocation(line: 2160, column: 3, scope: !3797)
!3995 = !DILocation(line: 2151, column: 9, scope: !3790)
!3996 = !DILocation(line: 2151, column: 9, scope: !3791)
!3997 = !DILocation(line: 2153, column: 42, scope: !3789)
!3998 = !DILocation(line: 2153, column: 15, scope: !3789)
!3999 = !DILocation(line: 0, scope: !3789)
!4000 = !DILocation(line: 2155, column: 2, scope: !3789)
!4001 = !DILocation(line: 2157, column: 15, scope: !3789)
!4002 = !DILocation(line: 2157, column: 2, scope: !3789)
!4003 = !DILocation(line: 2158, column: 7, scope: !3789)
!4004 = !DILocation(line: 2150, column: 50, scope: !3791)
!4005 = !DILocation(line: 2150, column: 3, scope: !3791)
!4006 = distinct !{!4006, !3993, !4007}
!4007 = !DILocation(line: 2158, column: 7, scope: !3792)
!4008 = !DILocation(line: 0, scope: !3797)
!4009 = !DILocation(line: 2160, column: 17, scope: !3796)
!4010 = !DILocation(line: 2170, column: 3, scope: !3801)
!4011 = !DILocation(line: 2161, column: 9, scope: !3795)
!4012 = !DILocation(line: 2161, column: 22, scope: !3795)
!4013 = !DILocation(line: 2161, column: 9, scope: !3796)
!4014 = !DILocation(line: 2163, column: 42, scope: !3794)
!4015 = !DILocation(line: 2163, column: 15, scope: !3794)
!4016 = !DILocation(line: 0, scope: !3794)
!4017 = !DILocation(line: 2165, column: 2, scope: !3794)
!4018 = !DILocation(line: 2167, column: 15, scope: !3794)
!4019 = !DILocation(line: 2167, column: 2, scope: !3794)
!4020 = !DILocation(line: 2168, column: 7, scope: !3794)
!4021 = !DILocation(line: 2160, column: 29, scope: !3796)
!4022 = !DILocation(line: 2160, column: 3, scope: !3796)
!4023 = distinct !{!4023, !3994, !4024}
!4024 = !DILocation(line: 2168, column: 7, scope: !3797)
!4025 = !DILocation(line: 0, scope: !3801)
!4026 = !DILocation(line: 2170, column: 17, scope: !3800)
!4027 = !DILocation(line: 2174, column: 47, scope: !3799)
!4028 = !DILocation(line: 2174, column: 20, scope: !3799)
!4029 = !DILocation(line: 0, scope: !3799)
!4030 = !DILocation(line: 2176, column: 18, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 2176, column: 11)
!4032 = !DILocation(line: 2176, column: 11, scope: !3799)
!4033 = !DILocation(line: 2182, column: 22, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2177, column: 2)
!4035 = !DILocation(line: 2182, column: 5, scope: !4034)
!4036 = !DILocation(line: 2182, column: 20, scope: !4034)
!4037 = !DILocation(line: 2183, column: 2, scope: !4034)
!4038 = !DILocation(line: 2170, column: 32, scope: !3800)
!4039 = !DILocation(line: 2170, column: 3, scope: !3800)
!4040 = distinct !{!4040, !4010, !4041}
!4041 = !DILocation(line: 2184, column: 5, scope: !3801)
!4042 = !DILocation(line: 2188, column: 12, scope: !3806)
!4043 = !DILocation(line: 0, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 2200, column: 4)
!4045 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2199, column: 6)
!4046 = !DILocation(line: 2188, column: 8, scope: !3806)
!4047 = !DILocation(line: 2188, column: 27, scope: !3805)
!4048 = !DILocation(line: 2188, column: 39, scope: !3805)
!4049 = !DILocation(line: 2188, column: 37, scope: !3805)
!4050 = !DILocation(line: 2188, column: 25, scope: !3805)
!4051 = !DILocation(line: 2188, column: 3, scope: !3806)
!4052 = !DILocation(line: 2217, column: 3, scope: !3810)
!4053 = !DILocation(line: 2189, column: 9, scope: !3804)
!4054 = !DILocation(line: 2189, column: 9, scope: !3805)
!4055 = !DILocation(line: 2195, column: 2, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2195, column: 2)
!4057 = !DILocation(line: 0, scope: !4056)
!4058 = !DILocation(line: 0, scope: !3803)
!4059 = !DILocation(line: 2195, column: 16, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 2195, column: 2)
!4061 = !DILocation(line: 2196, column: 26, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 2196, column: 8)
!4063 = !DILocation(line: 2196, column: 42, scope: !4062)
!4064 = !DILocation(line: 2196, column: 8, scope: !4062)
!4065 = !DILocation(line: 2196, column: 8, scope: !4060)
!4066 = !DILocation(line: 2195, column: 31, scope: !4060)
!4067 = !DILocation(line: 2195, column: 2, scope: !4060)
!4068 = distinct !{!4068, !4055, !4069}
!4069 = !DILocation(line: 2197, column: 6, scope: !4056)
!4070 = !DILocation(line: 2199, column: 21, scope: !4045)
!4071 = !DILocation(line: 2199, column: 45, scope: !4045)
!4072 = !DILocation(line: 2199, column: 53, scope: !4045)
!4073 = !DILocation(line: 2199, column: 6, scope: !3803)
!4074 = !DILocation(line: 2207, column: 6, scope: !4044)
!4075 = !DILocation(line: 2209, column: 19, scope: !4044)
!4076 = !DILocation(line: 2210, column: 4, scope: !4044)
!4077 = !DILocation(line: 2188, column: 50, scope: !3805)
!4078 = !DILocation(line: 2188, column: 3, scope: !3805)
!4079 = distinct !{!4079, !4051, !4080}
!4080 = !DILocation(line: 2211, column: 7, scope: !3806)
!4081 = !DILocation(line: 0, scope: !3810)
!4082 = !DILocation(line: 2217, column: 30, scope: !3809)
!4083 = !DILocation(line: 2222, column: 7, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 2222, column: 7)
!4085 = !DILocation(line: 2239, column: 3, scope: !3815)
!4086 = !DILocation(line: 0, scope: !4084)
!4087 = !DILocation(line: 0, scope: !3808)
!4088 = !DILocation(line: 2222, column: 23, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 2222, column: 7)
!4090 = !DILocation(line: 2222, column: 21, scope: !4089)
!4091 = !DILocation(line: 2223, column: 6, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 2223, column: 6)
!4093 = !DILocation(line: 2224, column: 6, scope: !4092)
!4094 = !DILocation(line: 2224, column: 9, scope: !4092)
!4095 = !DILocation(line: 2224, column: 39, scope: !4092)
!4096 = !DILocation(line: 2223, column: 6, scope: !4089)
!4097 = !DILocation(line: 2226, column: 39, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 2225, column: 4)
!4099 = !DILocation(line: 2226, column: 20, scope: !4098)
!4100 = !DILocation(line: 2226, column: 6, scope: !4098)
!4101 = !DILocation(line: 2226, column: 37, scope: !4098)
!4102 = !DILocation(line: 2227, column: 6, scope: !4098)
!4103 = !DILocation(line: 2228, column: 6, scope: !4098)
!4104 = !DILocation(line: 2222, column: 35, scope: !4089)
!4105 = !DILocation(line: 2222, column: 7, scope: !4089)
!4106 = distinct !{!4106, !4083, !4107}
!4107 = !DILocation(line: 2229, column: 4, scope: !4084)
!4108 = !DILocation(line: 2217, column: 51, scope: !3809)
!4109 = !DILocation(line: 2217, column: 3, scope: !3809)
!4110 = distinct !{!4110, !4052, !4111}
!4111 = !DILocation(line: 2230, column: 5, scope: !3810)
!4112 = !DILocation(line: 0, scope: !3815)
!4113 = !DILocation(line: 2239, column: 19, scope: !3814)
!4114 = !DILocation(line: 2239, column: 17, scope: !3814)
!4115 = !DILocation(line: 2240, column: 9, scope: !3813)
!4116 = !DILocation(line: 2240, column: 9, scope: !3814)
!4117 = !DILocation(line: 2244, column: 2, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 2244, column: 2)
!4119 = !DILocation(line: 0, scope: !4118)
!4120 = !DILocation(line: 0, scope: !3812)
!4121 = !DILocation(line: 2244, column: 16, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 2244, column: 2)
!4123 = !DILocation(line: 2245, column: 8, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 2245, column: 8)
!4125 = !DILocation(line: 2245, column: 41, scope: !4124)
!4126 = !DILocation(line: 2245, column: 38, scope: !4124)
!4127 = !DILocation(line: 2246, column: 8, scope: !4124)
!4128 = !DILocation(line: 2246, column: 11, scope: !4124)
!4129 = !DILocation(line: 2246, column: 24, scope: !4124)
!4130 = !DILocation(line: 2245, column: 8, scope: !4122)
!4131 = !DILocation(line: 2248, column: 46, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 2247, column: 6)
!4133 = !DILocation(line: 2248, column: 15, scope: !4132)
!4134 = !DILocation(line: 2250, column: 8, scope: !4132)
!4135 = !DILocation(line: 2244, column: 28, scope: !4122)
!4136 = !DILocation(line: 2244, column: 2, scope: !4122)
!4137 = distinct !{!4137, !4117, !4138}
!4138 = !DILocation(line: 2251, column: 6, scope: !4118)
!4139 = !DILocation(line: 2239, column: 31, scope: !3814)
!4140 = !DILocation(line: 2239, column: 3, scope: !3814)
!4141 = distinct !{!4141, !4085, !4142}
!4142 = !DILocation(line: 2252, column: 7, scope: !3815)
!4143 = !DILocation(line: 2254, column: 8, scope: !3820)
!4144 = !DILocation(line: 2254, column: 27, scope: !3819)
!4145 = !DILocation(line: 2254, column: 39, scope: !3819)
!4146 = !DILocation(line: 2254, column: 37, scope: !3819)
!4147 = !DILocation(line: 2254, column: 25, scope: !3819)
!4148 = !DILocation(line: 2254, column: 3, scope: !3820)
!4149 = !DILocation(line: 2255, column: 9, scope: !3818)
!4150 = !DILocation(line: 2255, column: 9, scope: !3819)
!4151 = !DILocation(line: 2259, column: 2, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 2259, column: 2)
!4153 = !DILocation(line: 0, scope: !4152)
!4154 = !DILocation(line: 0, scope: !3817)
!4155 = !DILocation(line: 2259, column: 16, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2259, column: 2)
!4157 = !DILocation(line: 2260, column: 8, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 2260, column: 8)
!4159 = !DILocation(line: 2260, column: 41, scope: !4158)
!4160 = !DILocation(line: 2260, column: 38, scope: !4158)
!4161 = !DILocation(line: 2261, column: 8, scope: !4158)
!4162 = !DILocation(line: 2261, column: 11, scope: !4158)
!4163 = !DILocation(line: 2261, column: 24, scope: !4158)
!4164 = !DILocation(line: 2262, column: 8, scope: !4158)
!4165 = !DILocation(line: 2262, column: 11, scope: !4158)
!4166 = !DILocation(line: 2260, column: 8, scope: !4156)
!4167 = !DILocation(line: 2265, column: 46, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 2264, column: 6)
!4169 = !DILocation(line: 2265, column: 15, scope: !4168)
!4170 = !DILocation(line: 2267, column: 8, scope: !4168)
!4171 = !DILocation(line: 2259, column: 28, scope: !4156)
!4172 = !DILocation(line: 2259, column: 2, scope: !4156)
!4173 = distinct !{!4173, !4151, !4174}
!4174 = !DILocation(line: 2268, column: 6, scope: !4152)
!4175 = !DILocation(line: 2254, column: 50, scope: !3819)
!4176 = !DILocation(line: 2254, column: 3, scope: !3819)
!4177 = distinct !{!4177, !4148, !4178}
!4178 = !DILocation(line: 2269, column: 7, scope: !3820)
!4179 = !DILocation(line: 2270, column: 1, scope: !3746)
!4180 = distinct !DISubprogram(name: "subst_stack_regs_pat", scope: !3, file: !3, line: 1349, type: !4181, scopeLine: 1350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!765, !910, !1884, !910}
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189, !4190, !4193, !4200, !4203, !4206, !4207, !4209, !4210, !4211, !4212, !4213, !4216, !4219, !4220, !4223, !4224, !4227, !4228, !4231, !4234, !4237, !4240, !4243, !4248, !4249, !4252, !4253}
!4184 = !DILocalVariable(name: "insn", arg: 1, scope: !4180, file: !3, line: 1349, type: !910)
!4185 = !DILocalVariable(name: "regstack", arg: 2, scope: !4180, file: !3, line: 1349, type: !1884)
!4186 = !DILocalVariable(name: "pat", arg: 3, scope: !4180, file: !3, line: 1349, type: !910)
!4187 = !DILocalVariable(name: "dest", scope: !4180, file: !3, line: 1351, type: !1886)
!4188 = !DILocalVariable(name: "src", scope: !4180, file: !3, line: 1351, type: !1886)
!4189 = !DILocalVariable(name: "control_flow_insn_deleted", scope: !4180, file: !3, line: 1352, type: !765)
!4190 = !DILocalVariable(name: "note", scope: !4191, file: !3, line: 1382, type: !910)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1381, column: 7)
!4192 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 1355, column: 5)
!4193 = !DILocalVariable(name: "t", scope: !4194, file: !3, line: 1419, type: !910)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 1418, column: 5)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 1417, column: 7)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 1411, column: 8)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 1389, column: 10)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1386, column: 4)
!4199 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1385, column: 6)
!4200 = !DILocalVariable(name: "u", scope: !4201, file: !3, line: 1422, type: !910)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 1421, column: 9)
!4202 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1420, column: 11)
!4203 = !DILocalVariable(name: "pat2", scope: !4204, file: !3, line: 1425, type: !910)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 1424, column: 6)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 1423, column: 8)
!4206 = !DILocalVariable(name: "insn2", scope: !4204, file: !3, line: 1426, type: !910)
!4207 = !DILocalVariable(name: "src1", scope: !4208, file: !3, line: 1442, type: !1886)
!4208 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1441, column: 7)
!4209 = !DILocalVariable(name: "src2", scope: !4208, file: !3, line: 1442, type: !1886)
!4210 = !DILocalVariable(name: "src1_note", scope: !4208, file: !3, line: 1443, type: !910)
!4211 = !DILocalVariable(name: "src2_note", scope: !4208, file: !3, line: 1443, type: !910)
!4212 = !DILocalVariable(name: "pat_src", scope: !4208, file: !3, line: 1444, type: !910)
!4213 = !DILocalVariable(name: "count", scope: !4214, file: !3, line: 1468, type: !766)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1467, column: 6)
!4215 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 1461, column: 4)
!4216 = !DILocalVariable(name: "src1_hard_regnum", scope: !4217, file: !3, line: 1552, type: !766)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 1547, column: 8)
!4218 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1544, column: 10)
!4219 = !DILocalVariable(name: "src2_hard_regnum", scope: !4217, file: !3, line: 1552, type: !766)
!4220 = !DILocalVariable(name: "pat2", scope: !4221, file: !3, line: 1561, type: !910)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 1560, column: 5)
!4222 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 1559, column: 7)
!4223 = !DILocalVariable(name: "insn2", scope: !4221, file: !3, line: 1562, type: !910)
!4224 = !DILocalVariable(name: "pat2", scope: !4225, file: !3, line: 1568, type: !910)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1567, column: 5)
!4226 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 1566, column: 7)
!4227 = !DILocalVariable(name: "insn2", scope: !4225, file: !3, line: 1569, type: !910)
!4228 = !DILocalVariable(name: "src1_reg", scope: !4229, file: !3, line: 1586, type: !910)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1585, column: 8)
!4230 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1584, column: 10)
!4231 = !DILocalVariable(name: "regno", scope: !4232, file: !3, line: 1601, type: !766)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1600, column: 5)
!4233 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 1594, column: 7)
!4234 = !DILocalVariable(name: "src2_reg", scope: !4235, file: !3, line: 1617, type: !910)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 1616, column: 8)
!4236 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1615, column: 15)
!4237 = !DILocalVariable(name: "regno", scope: !4238, file: !3, line: 1625, type: !766)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 1624, column: 5)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1618, column: 7)
!4240 = !DILocalVariable(name: "tmp", scope: !4241, file: !3, line: 1650, type: !766)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 1649, column: 7)
!4242 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1646, column: 10)
!4243 = !DILocalVariable(name: "idx1", scope: !4244, file: !3, line: 1916, type: !766)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1915, column: 5)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 1911, column: 7)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 1907, column: 8)
!4247 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1905, column: 10)
!4248 = !DILocalVariable(name: "idx2", scope: !4244, file: !3, line: 1918, type: !766)
!4249 = !DILocalVariable(name: "src_note", scope: !4250, file: !3, line: 1936, type: !4251)
!4250 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1935, column: 6)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 192, elements: !1033)
!4252 = !DILocalVariable(name: "i", scope: !4250, file: !3, line: 1937, type: !766)
!4253 = !DILocalVariable(name: "regno", scope: !4254, file: !3, line: 1951, type: !766)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 1950, column: 5)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 1949, column: 7)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1948, column: 8)
!4257 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 1948, column: 8)
!4258 = !DILocation(line: 0, scope: !4180)
!4259 = !DILocation(line: 1354, column: 11, scope: !4180)
!4260 = !DILocation(line: 1354, column: 3, scope: !4180)
!4261 = !DILocation(line: 1359, column: 28, scope: !4192)
!4262 = !DILocation(line: 1359, column: 13, scope: !4192)
!4263 = !DILocation(line: 1360, column: 11, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1360, column: 11)
!4265 = !DILocation(line: 1361, column: 4, scope: !4264)
!4266 = !DILocation(line: 1361, column: 40, scope: !4264)
!4267 = !DILocation(line: 1361, column: 7, scope: !4264)
!4268 = !DILocation(line: 1360, column: 11, scope: !4192)
!4269 = !DILocation(line: 1365, column: 15, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1365, column: 15)
!4271 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 1362, column: 2)
!4272 = !DILocation(line: 1365, column: 15, scope: !4271)
!4273 = !DILocation(line: 1366, column: 37, scope: !4270)
!4274 = !DILocation(line: 1366, column: 6, scope: !4270)
!4275 = !DILocation(line: 1378, column: 7, scope: !4192)
!4276 = !DILocation(line: 1384, column: 24, scope: !4191)
!4277 = !DILocation(line: 1384, column: 9, scope: !4191)
!4278 = !DILocation(line: 1385, column: 6, scope: !4199)
!4279 = !DILocation(line: 1385, column: 6, scope: !4191)
!4280 = !DILocation(line: 1387, column: 44, scope: !4198)
!4281 = !DILocation(line: 1387, column: 13, scope: !4198)
!4282 = !DILocation(line: 0, scope: !4191)
!4283 = !DILocation(line: 1389, column: 17, scope: !4197)
!4284 = !DILocation(line: 1389, column: 14, scope: !4197)
!4285 = !DILocation(line: 0, scope: !4197)
!4286 = !DILocation(line: 1389, column: 10, scope: !4198)
!4287 = !DILocation(line: 0, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1402, column: 7)
!4289 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 1390, column: 8)
!4290 = !DILocation(line: 1402, column: 7, scope: !4289)
!4291 = !DILocation(line: 1403, column: 5, scope: !4288)
!4292 = !DILocation(line: 1405, column: 12, scope: !4288)
!4293 = !DILocation(line: 0, scope: !4198)
!4294 = !DILocation(line: 1406, column: 7, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1406, column: 7)
!4296 = !DILocation(line: 1406, column: 7, scope: !4289)
!4297 = !DILocation(line: 1407, column: 5, scope: !4295)
!4298 = !DILocation(line: 1408, column: 3, scope: !4289)
!4299 = !DILocation(line: 1409, column: 8, scope: !4289)
!4300 = !DILocation(line: 1417, column: 7, scope: !4196)
!4301 = !DILocation(line: 1419, column: 15, scope: !4194)
!4302 = !DILocation(line: 0, scope: !4194)
!4303 = !DILocation(line: 1420, column: 11, scope: !4202)
!4304 = !DILocation(line: 1420, column: 11, scope: !4194)
!4305 = !DILocation(line: 1422, column: 12, scope: !4201)
!4306 = !DILocation(line: 0, scope: !4201)
!4307 = !DILocation(line: 1423, column: 8, scope: !4205)
!4308 = !DILocation(line: 1423, column: 38, scope: !4205)
!4309 = !DILocation(line: 1423, column: 8, scope: !4201)
!4310 = !DILocation(line: 1425, column: 19, scope: !4204)
!4311 = !DILocation(line: 0, scope: !4204)
!4312 = !DILocation(line: 1426, column: 20, scope: !4204)
!4313 = !DILocation(line: 1428, column: 13, scope: !4204)
!4314 = !DILocation(line: 1429, column: 6, scope: !4204)
!4315 = !DILocation(line: 1431, column: 11, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1431, column: 11)
!4317 = !DILocation(line: 1431, column: 41, scope: !4316)
!4318 = !DILocation(line: 1431, column: 11, scope: !4194)
!4319 = !DILocation(line: 1433, column: 7, scope: !4316)
!4320 = !DILocation(line: 1433, column: 4, scope: !4316)
!4321 = !DILocation(line: 1432, column: 9, scope: !4316)
!4322 = !DILocation(line: 0, scope: !4208)
!4323 = !DILocation(line: 1446, column: 24, scope: !4208)
!4324 = !DILocation(line: 1446, column: 9, scope: !4208)
!4325 = !DILocation(line: 1447, column: 24, scope: !4208)
!4326 = !DILocation(line: 1447, column: 9, scope: !4208)
!4327 = !DILocation(line: 1448, column: 12, scope: !4208)
!4328 = !DILocation(line: 1451, column: 6, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 1451, column: 6)
!4330 = !DILocation(line: 1452, column: 6, scope: !4329)
!4331 = !DILocation(line: 1452, column: 10, scope: !4329)
!4332 = !DILocation(line: 1453, column: 3, scope: !4329)
!4333 = !DILocation(line: 1453, column: 7, scope: !4329)
!4334 = !DILocation(line: 1453, column: 20, scope: !4329)
!4335 = !DILocation(line: 1453, column: 23, scope: !4329)
!4336 = !DILocation(line: 1454, column: 7, scope: !4329)
!4337 = !DILocation(line: 1454, column: 26, scope: !4329)
!4338 = !DILocation(line: 1451, column: 6, scope: !4208)
!4339 = !DILocation(line: 1456, column: 35, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 1455, column: 4)
!4341 = !DILocation(line: 1457, column: 6, scope: !4340)
!4342 = !DILocation(line: 1460, column: 10, scope: !4208)
!4343 = !DILocation(line: 1460, column: 2, scope: !4208)
!4344 = !DILocation(line: 1463, column: 6, scope: !4215)
!4345 = !DILocation(line: 1464, column: 6, scope: !4215)
!4346 = !DILocation(line: 1469, column: 38, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 1469, column: 8)
!4348 = !DILocation(line: 1469, column: 21, scope: !4347)
!4349 = !DILocation(line: 1469, column: 53, scope: !4347)
!4350 = !DILocation(line: 0, scope: !4214)
!4351 = !DILocation(line: 0, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 1471, column: 3)
!4353 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 1469, column: 8)
!4354 = !DILocation(line: 1469, column: 13, scope: !4347)
!4355 = !DILocation(line: 0, scope: !4347)
!4356 = !DILocation(line: 1470, column: 6, scope: !4353)
!4357 = !DILocation(line: 1470, column: 14, scope: !4353)
!4358 = !DILocation(line: 1469, column: 8, scope: !4347)
!4359 = !DILocation(line: 1472, column: 38, scope: !4352)
!4360 = !DILocation(line: 1472, column: 52, scope: !4352)
!4361 = !DILocation(line: 1472, column: 19, scope: !4352)
!4362 = !DILocation(line: 1472, column: 5, scope: !4352)
!4363 = !DILocation(line: 1472, column: 36, scope: !4352)
!4364 = !DILocation(line: 1473, column: 5, scope: !4352)
!4365 = !DILocation(line: 1469, column: 8, scope: !4353)
!4366 = distinct !{!4366, !4358, !4367}
!4367 = !DILocation(line: 1474, column: 3, scope: !4347)
!4368 = !DILocation(line: 1476, column: 6, scope: !4215)
!4369 = !DILocation(line: 1477, column: 6, scope: !4215)
!4370 = !DILocation(line: 1481, column: 6, scope: !4215)
!4371 = !DILocation(line: 1495, column: 15, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1495, column: 10)
!4373 = !DILocation(line: 1495, column: 10, scope: !4215)
!4374 = !DILocation(line: 1496, column: 30, scope: !4372)
!4375 = !DILocation(line: 1496, column: 15, scope: !4372)
!4376 = !DILocation(line: 1496, column: 8, scope: !4372)
!4377 = !DILocation(line: 1498, column: 38, scope: !4215)
!4378 = !DILocation(line: 1498, column: 6, scope: !4215)
!4379 = !DILocation(line: 1500, column: 51, scope: !4215)
!4380 = !DILocation(line: 1500, column: 18, scope: !4215)
!4381 = !DILocation(line: 1502, column: 10, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1502, column: 10)
!4383 = !DILocation(line: 1502, column: 10, scope: !4215)
!4384 = !DILocation(line: 1503, column: 8, scope: !4382)
!4385 = !DILocation(line: 1505, column: 10, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1505, column: 10)
!4387 = !DILocation(line: 1505, column: 10, scope: !4215)
!4388 = !DILocation(line: 1507, column: 17, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1506, column: 8)
!4390 = !DILocation(line: 1507, column: 3, scope: !4389)
!4391 = !DILocation(line: 1508, column: 13, scope: !4389)
!4392 = !DILocation(line: 1508, column: 16, scope: !4389)
!4393 = !DILocation(line: 1509, column: 3, scope: !4389)
!4394 = !DILocation(line: 1510, column: 8, scope: !4389)
!4395 = !DILocation(line: 1512, column: 6, scope: !4215)
!4396 = !DILocation(line: 1513, column: 6, scope: !4215)
!4397 = !DILocation(line: 1527, column: 28, scope: !4215)
!4398 = !DILocation(line: 1527, column: 13, scope: !4215)
!4399 = !DILocation(line: 1528, column: 28, scope: !4215)
!4400 = !DILocation(line: 1528, column: 13, scope: !4215)
!4401 = !DILocation(line: 1532, column: 10, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1532, column: 10)
!4403 = !DILocation(line: 1532, column: 10, scope: !4215)
!4404 = !DILocation(line: 1533, column: 53, scope: !4402)
!4405 = !DILocation(line: 1533, column: 20, scope: !4402)
!4406 = !DILocation(line: 1533, column: 8, scope: !4402)
!4407 = !DILocation(line: 0, scope: !4402)
!4408 = !DILocation(line: 1536, column: 10, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1536, column: 10)
!4410 = !DILocation(line: 1536, column: 10, scope: !4215)
!4411 = !DILocation(line: 1537, column: 53, scope: !4409)
!4412 = !DILocation(line: 1537, column: 20, scope: !4409)
!4413 = !DILocation(line: 1537, column: 8, scope: !4409)
!4414 = !DILocation(line: 0, scope: !4409)
!4415 = !DILocation(line: 1544, column: 12, scope: !4218)
!4416 = !DILocation(line: 1544, column: 32, scope: !4218)
!4417 = !DILocation(line: 1544, column: 37, scope: !4218)
!4418 = !DILocation(line: 1544, column: 10, scope: !4215)
!4419 = !DILocation(line: 1545, column: 40, scope: !4218)
!4420 = !DILocation(line: 1545, column: 8, scope: !4218)
!4421 = !DILocation(line: 1554, column: 49, scope: !4217)
!4422 = !DILocation(line: 1554, column: 22, scope: !4217)
!4423 = !DILocation(line: 0, scope: !4217)
!4424 = !DILocation(line: 1555, column: 49, scope: !4217)
!4425 = !DILocation(line: 1555, column: 22, scope: !4217)
!4426 = !DILocation(line: 1559, column: 24, scope: !4222)
!4427 = !DILocation(line: 1559, column: 7, scope: !4217)
!4428 = !DILocation(line: 1561, column: 18, scope: !4221)
!4429 = !DILocation(line: 0, scope: !4221)
!4430 = !DILocation(line: 1562, column: 19, scope: !4221)
!4431 = !DILocation(line: 1564, column: 53, scope: !4221)
!4432 = !DILocation(line: 1564, column: 12, scope: !4221)
!4433 = !DILocation(line: 1565, column: 5, scope: !4221)
!4434 = !DILocation(line: 1566, column: 24, scope: !4226)
!4435 = !DILocation(line: 1566, column: 7, scope: !4217)
!4436 = !DILocation(line: 1568, column: 18, scope: !4225)
!4437 = !DILocation(line: 0, scope: !4225)
!4438 = !DILocation(line: 1569, column: 19, scope: !4225)
!4439 = !DILocation(line: 1571, column: 53, scope: !4225)
!4440 = !DILocation(line: 1571, column: 12, scope: !4225)
!4441 = !DILocation(line: 1571, column: 9, scope: !4225)
!4442 = !DILocation(line: 1572, column: 5, scope: !4225)
!4443 = !DILocation(line: 1574, column: 24, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 1574, column: 7)
!4445 = !DILocation(line: 1575, column: 27, scope: !4444)
!4446 = !DILocation(line: 1575, column: 7, scope: !4444)
!4447 = !DILocation(line: 1576, column: 37, scope: !4444)
!4448 = !DILocation(line: 1576, column: 5, scope: !4444)
!4449 = !DILocation(line: 1579, column: 10, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1579, column: 10)
!4451 = !DILocation(line: 1579, column: 10, scope: !4215)
!4452 = !DILocation(line: 1580, column: 54, scope: !4450)
!4453 = !DILocation(line: 1580, column: 27, scope: !4450)
!4454 = !DILocation(line: 1580, column: 8, scope: !4450)
!4455 = !DILocation(line: 1581, column: 10, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1581, column: 10)
!4457 = !DILocation(line: 1581, column: 10, scope: !4215)
!4458 = !DILocation(line: 1582, column: 54, scope: !4456)
!4459 = !DILocation(line: 1582, column: 27, scope: !4456)
!4460 = !DILocation(line: 1582, column: 8, scope: !4456)
!4461 = !DILocation(line: 1584, column: 10, scope: !4230)
!4462 = !DILocation(line: 1584, column: 10, scope: !4215)
!4463 = !DILocation(line: 1586, column: 18, scope: !4229)
!4464 = !DILocation(line: 0, scope: !4229)
!4465 = !DILocation(line: 1594, column: 7, scope: !4233)
!4466 = !DILocation(line: 1594, column: 51, scope: !4233)
!4467 = !DILocation(line: 1594, column: 27, scope: !4233)
!4468 = !DILocation(line: 1594, column: 24, scope: !4233)
!4469 = !DILocation(line: 1594, column: 7, scope: !4229)
!4470 = !DILocation(line: 1596, column: 7, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1595, column: 5)
!4472 = !DILocation(line: 1597, column: 53, scope: !4471)
!4473 = !DILocation(line: 1597, column: 26, scope: !4471)
!4474 = !DILocation(line: 1597, column: 7, scope: !4471)
!4475 = !DILocation(line: 1598, column: 5, scope: !4471)
!4476 = !DILocation(line: 1601, column: 19, scope: !4232)
!4477 = !DILocation(line: 0, scope: !4232)
!4478 = !DILocation(line: 1603, column: 7, scope: !4232)
!4479 = !DILocation(line: 1604, column: 7, scope: !4232)
!4480 = !DILocation(line: 1607, column: 35, scope: !4232)
!4481 = !DILocation(line: 1607, column: 11, scope: !4232)
!4482 = !DILocation(line: 1606, column: 44, scope: !4232)
!4483 = !DILocation(line: 1606, column: 35, scope: !4232)
!4484 = !DILocation(line: 1606, column: 7, scope: !4232)
!4485 = !DILocation(line: 1607, column: 9, scope: !4232)
!4486 = !DILocation(line: 1610, column: 3, scope: !4229)
!4487 = !DILocation(line: 1612, column: 3, scope: !4229)
!4488 = !DILocation(line: 1613, column: 16, scope: !4229)
!4489 = !DILocation(line: 1614, column: 8, scope: !4229)
!4490 = !DILocation(line: 1615, column: 15, scope: !4236)
!4491 = !DILocation(line: 1615, column: 15, scope: !4230)
!4492 = !DILocation(line: 1617, column: 18, scope: !4235)
!4493 = !DILocation(line: 0, scope: !4235)
!4494 = !DILocation(line: 1618, column: 7, scope: !4239)
!4495 = !DILocation(line: 1618, column: 51, scope: !4239)
!4496 = !DILocation(line: 1618, column: 27, scope: !4239)
!4497 = !DILocation(line: 1618, column: 24, scope: !4239)
!4498 = !DILocation(line: 1618, column: 7, scope: !4235)
!4499 = !DILocation(line: 1620, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 1619, column: 5)
!4501 = !DILocation(line: 1621, column: 53, scope: !4500)
!4502 = !DILocation(line: 1621, column: 26, scope: !4500)
!4503 = !DILocation(line: 1621, column: 7, scope: !4500)
!4504 = !DILocation(line: 1622, column: 5, scope: !4500)
!4505 = !DILocation(line: 1625, column: 19, scope: !4238)
!4506 = !DILocation(line: 0, scope: !4238)
!4507 = !DILocation(line: 1627, column: 7, scope: !4238)
!4508 = !DILocation(line: 1628, column: 7, scope: !4238)
!4509 = !DILocation(line: 1631, column: 35, scope: !4238)
!4510 = !DILocation(line: 1631, column: 11, scope: !4238)
!4511 = !DILocation(line: 1630, column: 44, scope: !4238)
!4512 = !DILocation(line: 1630, column: 35, scope: !4238)
!4513 = !DILocation(line: 1630, column: 7, scope: !4238)
!4514 = !DILocation(line: 1631, column: 9, scope: !4238)
!4515 = !DILocation(line: 1634, column: 3, scope: !4235)
!4516 = !DILocation(line: 1636, column: 3, scope: !4235)
!4517 = !DILocation(line: 1637, column: 16, scope: !4235)
!4518 = !DILocation(line: 1638, column: 8, scope: !4235)
!4519 = !DILocation(line: 1641, column: 3, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 1640, column: 8)
!4521 = !DILocation(line: 1642, column: 49, scope: !4520)
!4522 = !DILocation(line: 1642, column: 22, scope: !4520)
!4523 = !DILocation(line: 1642, column: 3, scope: !4520)
!4524 = !DILocation(line: 1646, column: 10, scope: !4242)
!4525 = !DILocation(line: 1647, column: 3, scope: !4242)
!4526 = !DILocation(line: 1647, column: 6, scope: !4242)
!4527 = !DILocation(line: 1647, column: 20, scope: !4242)
!4528 = !DILocation(line: 1647, column: 23, scope: !4242)
!4529 = !DILocation(line: 1648, column: 3, scope: !4242)
!4530 = !DILocation(line: 1648, column: 6, scope: !4242)
!4531 = !DILocation(line: 1648, column: 23, scope: !4242)
!4532 = !DILocation(line: 1648, column: 20, scope: !4242)
!4533 = !DILocation(line: 1646, column: 10, scope: !4215)
!4534 = !DILocation(line: 1650, column: 13, scope: !4241)
!4535 = !DILocation(line: 0, scope: !4241)
!4536 = !DILocation(line: 1651, column: 22, scope: !4241)
!4537 = !DILocation(line: 1651, column: 3, scope: !4241)
!4538 = !DILocation(line: 1652, column: 3, scope: !4241)
!4539 = !DILocation(line: 1653, column: 7, scope: !4241)
!4540 = !DILocation(line: 1657, column: 14, scope: !4215)
!4541 = !DILocation(line: 1657, column: 6, scope: !4215)
!4542 = !DILocation(line: 0, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1658, column: 8)
!4544 = !DILocation(line: 1754, column: 31, scope: !4543)
!4545 = !DILocation(line: 1666, column: 25, scope: !4543)
!4546 = !DILocation(line: 1666, column: 10, scope: !4543)
!4547 = !DILocation(line: 1667, column: 35, scope: !4543)
!4548 = !DILocation(line: 1667, column: 3, scope: !4543)
!4549 = !DILocation(line: 1669, column: 48, scope: !4543)
!4550 = !DILocation(line: 1669, column: 15, scope: !4543)
!4551 = !DILocation(line: 1671, column: 7, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1671, column: 7)
!4553 = !DILocation(line: 1671, column: 7, scope: !4543)
!4554 = !DILocation(line: 1672, column: 5, scope: !4552)
!4555 = !DILocation(line: 1674, column: 7, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1674, column: 7)
!4557 = !DILocation(line: 1674, column: 7, scope: !4543)
!4558 = !DILocation(line: 1676, column: 21, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1675, column: 5)
!4560 = !DILocation(line: 1676, column: 7, scope: !4559)
!4561 = !DILocation(line: 1677, column: 17, scope: !4559)
!4562 = !DILocation(line: 1677, column: 20, scope: !4559)
!4563 = !DILocation(line: 1678, column: 7, scope: !4559)
!4564 = !DILocation(line: 1679, column: 5, scope: !4559)
!4565 = !DILocation(line: 1681, column: 3, scope: !4543)
!4566 = !DILocation(line: 1682, column: 3, scope: !4543)
!4567 = !DILocation(line: 1688, column: 25, scope: !4543)
!4568 = !DILocation(line: 1688, column: 10, scope: !4543)
!4569 = !DILocation(line: 1689, column: 35, scope: !4543)
!4570 = !DILocation(line: 1689, column: 3, scope: !4543)
!4571 = !DILocation(line: 1691, column: 48, scope: !4543)
!4572 = !DILocation(line: 1691, column: 15, scope: !4543)
!4573 = !DILocation(line: 1693, column: 3, scope: !4543)
!4574 = !DILocation(line: 1695, column: 7, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1695, column: 7)
!4576 = !DILocation(line: 1695, column: 7, scope: !4543)
!4577 = !DILocation(line: 1698, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 1696, column: 5)
!4579 = !DILocation(line: 1697, column: 7, scope: !4578)
!4580 = !DILocation(line: 1699, column: 38, scope: !4578)
!4581 = !DILocation(line: 1699, column: 7, scope: !4578)
!4582 = !DILocation(line: 1701, column: 5, scope: !4578)
!4583 = !DILocation(line: 1723, column: 25, scope: !4543)
!4584 = !DILocation(line: 1723, column: 10, scope: !4543)
!4585 = !DILocation(line: 1725, column: 35, scope: !4543)
!4586 = !DILocation(line: 1725, column: 3, scope: !4543)
!4587 = !DILocation(line: 1728, column: 48, scope: !4543)
!4588 = !DILocation(line: 1728, column: 15, scope: !4543)
!4589 = !DILocation(line: 1729, column: 3, scope: !4543)
!4590 = !DILocation(line: 1731, column: 7, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1731, column: 7)
!4592 = !DILocation(line: 1731, column: 7, scope: !4543)
!4593 = !DILocation(line: 1732, column: 5, scope: !4591)
!4594 = !DILocation(line: 1734, column: 3, scope: !4543)
!4595 = !DILocation(line: 1735, column: 3, scope: !4543)
!4596 = !DILocation(line: 1743, column: 13, scope: !4543)
!4597 = !DILocation(line: 1743, column: 16, scope: !4543)
!4598 = !DILocation(line: 1743, column: 3, scope: !4543)
!4599 = !DILocation(line: 1754, column: 35, scope: !4543)
!4600 = !DILocation(line: 1754, column: 7, scope: !4543)
!4601 = !DILocation(line: 1753, column: 3, scope: !4543)
!4602 = !DILocation(line: 1754, column: 5, scope: !4543)
!4603 = !DILocation(line: 1756, column: 3, scope: !4543)
!4604 = !DILocation(line: 1758, column: 38, scope: !4543)
!4605 = !DILocation(line: 1758, column: 27, scope: !4543)
!4606 = !DILocation(line: 1758, column: 31, scope: !4543)
!4607 = !DILocation(line: 1758, column: 3, scope: !4543)
!4608 = !DILocation(line: 1758, column: 36, scope: !4543)
!4609 = !DILocation(line: 1759, column: 3, scope: !4543)
!4610 = !DILocation(line: 1760, column: 3, scope: !4543)
!4611 = !DILocation(line: 1762, column: 25, scope: !4543)
!4612 = !DILocation(line: 1762, column: 10, scope: !4543)
!4613 = !DILocation(line: 1764, column: 3, scope: !4543)
!4614 = !DILocation(line: 1765, column: 3, scope: !4543)
!4615 = !DILocation(line: 1772, column: 25, scope: !4543)
!4616 = !DILocation(line: 1772, column: 10, scope: !4543)
!4617 = !DILocation(line: 1773, column: 25, scope: !4543)
!4618 = !DILocation(line: 1773, column: 10, scope: !4543)
!4619 = !DILocation(line: 1775, column: 48, scope: !4543)
!4620 = !DILocation(line: 1775, column: 15, scope: !4543)
!4621 = !DILocation(line: 1776, column: 48, scope: !4543)
!4622 = !DILocation(line: 1776, column: 15, scope: !4543)
!4623 = !DILocation(line: 1778, column: 32, scope: !4543)
!4624 = !DILocation(line: 1778, column: 39, scope: !4543)
!4625 = !DILocation(line: 1778, column: 3, scope: !4543)
!4626 = !DILocation(line: 1780, column: 3, scope: !4543)
!4627 = !DILocation(line: 1781, column: 3, scope: !4543)
!4628 = !DILocation(line: 1783, column: 7, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1783, column: 7)
!4630 = !DILocation(line: 1783, column: 7, scope: !4543)
!4631 = !DILocation(line: 1784, column: 19, scope: !4629)
!4632 = !DILocation(line: 1784, column: 5, scope: !4629)
!4633 = !DILocation(line: 1785, column: 7, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1785, column: 7)
!4635 = !DILocation(line: 1785, column: 7, scope: !4543)
!4636 = !DILocation(line: 1786, column: 19, scope: !4634)
!4637 = !DILocation(line: 1786, column: 5, scope: !4634)
!4638 = !DILocation(line: 1789, column: 3, scope: !4543)
!4639 = !DILocation(line: 1791, column: 3, scope: !4543)
!4640 = !DILocation(line: 1793, column: 17, scope: !4543)
!4641 = !DILocation(line: 1796, column: 36, scope: !4543)
!4642 = !DILocation(line: 1796, column: 17, scope: !4543)
!4643 = !DILocation(line: 1796, column: 3, scope: !4543)
!4644 = !DILocation(line: 1796, column: 34, scope: !4543)
!4645 = !DILocation(line: 1797, column: 3, scope: !4543)
!4646 = !DILocation(line: 1798, column: 3, scope: !4543)
!4647 = !DILocation(line: 1799, column: 3, scope: !4543)
!4648 = !DILocation(line: 1807, column: 25, scope: !4543)
!4649 = !DILocation(line: 1807, column: 10, scope: !4543)
!4650 = !DILocation(line: 1808, column: 25, scope: !4543)
!4651 = !DILocation(line: 1808, column: 10, scope: !4543)
!4652 = !DILocation(line: 1810, column: 48, scope: !4543)
!4653 = !DILocation(line: 1810, column: 15, scope: !4543)
!4654 = !DILocation(line: 1811, column: 48, scope: !4543)
!4655 = !DILocation(line: 1811, column: 15, scope: !4543)
!4656 = !DILocation(line: 1815, column: 3, scope: !4543)
!4657 = !DILocation(line: 1816, column: 3, scope: !4543)
!4658 = !DILocation(line: 1818, column: 32, scope: !4543)
!4659 = !DILocation(line: 1818, column: 39, scope: !4543)
!4660 = !DILocation(line: 1818, column: 3, scope: !4543)
!4661 = !DILocation(line: 1822, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1822, column: 7)
!4663 = !DILocation(line: 1822, column: 7, scope: !4543)
!4664 = !DILocation(line: 1824, column: 38, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 1823, column: 5)
!4666 = !DILocation(line: 1824, column: 31, scope: !4665)
!4667 = !DILocation(line: 1824, column: 7, scope: !4665)
!4668 = !DILocation(line: 1824, column: 36, scope: !4665)
!4669 = !DILocation(line: 1825, column: 7, scope: !4665)
!4670 = !DILocation(line: 1826, column: 7, scope: !4665)
!4671 = !DILocation(line: 1827, column: 5, scope: !4665)
!4672 = !DILocation(line: 1829, column: 3, scope: !4543)
!4673 = !DILocation(line: 1830, column: 3, scope: !4543)
!4674 = !DILocation(line: 1831, column: 3, scope: !4543)
!4675 = !DILocation(line: 1839, column: 25, scope: !4543)
!4676 = !DILocation(line: 1839, column: 10, scope: !4543)
!4677 = !DILocation(line: 1840, column: 25, scope: !4543)
!4678 = !DILocation(line: 1840, column: 10, scope: !4543)
!4679 = !DILocation(line: 1844, column: 7, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1844, column: 7)
!4681 = !DILocation(line: 1844, column: 7, scope: !4543)
!4682 = !DILocation(line: 1846, column: 42, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 1845, column: 5)
!4684 = !DILocation(line: 1846, column: 31, scope: !4683)
!4685 = !DILocation(line: 1846, column: 35, scope: !4683)
!4686 = !DILocation(line: 1846, column: 7, scope: !4683)
!4687 = !DILocation(line: 1846, column: 40, scope: !4683)
!4688 = !DILocation(line: 1847, column: 7, scope: !4683)
!4689 = !DILocation(line: 1848, column: 7, scope: !4683)
!4690 = !DILocation(line: 1849, column: 5, scope: !4683)
!4691 = !DILocation(line: 1851, column: 3, scope: !4543)
!4692 = !DILocation(line: 1852, column: 3, scope: !4543)
!4693 = !DILocation(line: 1853, column: 3, scope: !4543)
!4694 = !DILocation(line: 1859, column: 25, scope: !4543)
!4695 = !DILocation(line: 1859, column: 10, scope: !4543)
!4696 = !DILocation(line: 1860, column: 25, scope: !4543)
!4697 = !DILocation(line: 1860, column: 10, scope: !4543)
!4698 = !DILocation(line: 1862, column: 3, scope: !4543)
!4699 = !DILocation(line: 1863, column: 3, scope: !4543)
!4700 = !DILocation(line: 1864, column: 3, scope: !4543)
!4701 = !DILocation(line: 1870, column: 13, scope: !4543)
!4702 = !DILocation(line: 1871, column: 3, scope: !4543)
!4703 = !DILocation(line: 1872, column: 3, scope: !4543)
!4704 = !DILocation(line: 1880, column: 13, scope: !4543)
!4705 = !DILocation(line: 1881, column: 3, scope: !4543)
!4706 = !DILocation(line: 1883, column: 3, scope: !4543)
!4707 = !DILocation(line: 1884, column: 3, scope: !4543)
!4708 = !DILocation(line: 1887, column: 3, scope: !4543)
!4709 = !DILocation(line: 1888, column: 8, scope: !4543)
!4710 = !DILocation(line: 1894, column: 28, scope: !4215)
!4711 = !DILocation(line: 1894, column: 13, scope: !4215)
!4712 = !DILocation(line: 1895, column: 28, scope: !4215)
!4713 = !DILocation(line: 1895, column: 13, scope: !4215)
!4714 = !DILocation(line: 1897, column: 51, scope: !4215)
!4715 = !DILocation(line: 1897, column: 18, scope: !4215)
!4716 = !DILocation(line: 1898, column: 51, scope: !4215)
!4717 = !DILocation(line: 1898, column: 18, scope: !4215)
!4718 = !DILocation(line: 1905, column: 37, scope: !4247)
!4719 = !DILocation(line: 1905, column: 10, scope: !4247)
!4720 = !DILocation(line: 1905, column: 44, scope: !4247)
!4721 = !DILocation(line: 1906, column: 3, scope: !4247)
!4722 = !DILocation(line: 1906, column: 6, scope: !4247)
!4723 = !DILocation(line: 1906, column: 47, scope: !4247)
!4724 = !DILocation(line: 1906, column: 23, scope: !4247)
!4725 = !DILocation(line: 1906, column: 20, scope: !4247)
!4726 = !DILocation(line: 1905, column: 10, scope: !4215)
!4727 = !DILocation(line: 1911, column: 8, scope: !4245)
!4728 = !DILocation(line: 1911, column: 49, scope: !4245)
!4729 = !DILocation(line: 1911, column: 25, scope: !4245)
!4730 = !DILocation(line: 1911, column: 22, scope: !4245)
!4731 = !DILocation(line: 1912, column: 11, scope: !4245)
!4732 = !DILocation(line: 1912, column: 8, scope: !4245)
!4733 = !DILocation(line: 1913, column: 11, scope: !4245)
!4734 = !DILocation(line: 1913, column: 52, scope: !4245)
!4735 = !DILocation(line: 1913, column: 28, scope: !4245)
!4736 = !DILocation(line: 1913, column: 25, scope: !4245)
!4737 = !DILocation(line: 1914, column: 7, scope: !4245)
!4738 = !DILocation(line: 1914, column: 4, scope: !4245)
!4739 = !DILocation(line: 1916, column: 46, scope: !4244)
!4740 = !DILocation(line: 1916, column: 19, scope: !4244)
!4741 = !DILocation(line: 1917, column: 5, scope: !4244)
!4742 = !DILocation(line: 0, scope: !4244)
!4743 = !DILocation(line: 1918, column: 46, scope: !4244)
!4744 = !DILocation(line: 1918, column: 19, scope: !4244)
!4745 = !DILocation(line: 1919, column: 5, scope: !4244)
!4746 = !DILocation(line: 1923, column: 45, scope: !4244)
!4747 = !DILocation(line: 1923, column: 31, scope: !4244)
!4748 = !DILocation(line: 1923, column: 35, scope: !4244)
!4749 = !DILocation(line: 1923, column: 7, scope: !4244)
!4750 = !DILocation(line: 1923, column: 43, scope: !4244)
!4751 = !DILocation(line: 1924, column: 45, scope: !4244)
!4752 = !DILocation(line: 1924, column: 31, scope: !4244)
!4753 = !DILocation(line: 1924, column: 35, scope: !4244)
!4754 = !DILocation(line: 1924, column: 7, scope: !4244)
!4755 = !DILocation(line: 1924, column: 43, scope: !4244)
!4756 = !DILocation(line: 1928, column: 7, scope: !4244)
!4757 = !DILocation(line: 1930, column: 5, scope: !4244)
!4758 = !DILocation(line: 1932, column: 44, scope: !4245)
!4759 = !DILocation(line: 1932, column: 12, scope: !4245)
!4760 = !DILocation(line: 1936, column: 8, scope: !4250)
!4761 = !DILocation(line: 1936, column: 12, scope: !4250)
!4762 = !DILocation(line: 1939, column: 8, scope: !4250)
!4763 = !DILocation(line: 1939, column: 20, scope: !4250)
!4764 = !DILocation(line: 1940, column: 8, scope: !4250)
!4765 = !DILocation(line: 1940, column: 20, scope: !4250)
!4766 = !DILocation(line: 1941, column: 8, scope: !4250)
!4767 = !DILocation(line: 1941, column: 20, scope: !4250)
!4768 = !DILocation(line: 1943, column: 12, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 1943, column: 12)
!4770 = !DILocation(line: 1943, column: 12, scope: !4250)
!4771 = !DILocation(line: 1944, column: 49, scope: !4769)
!4772 = !DILocation(line: 1944, column: 22, scope: !4769)
!4773 = !DILocation(line: 1944, column: 3, scope: !4769)
!4774 = !DILocation(line: 1945, column: 12, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 1945, column: 12)
!4776 = !DILocation(line: 1945, column: 12, scope: !4250)
!4777 = !DILocation(line: 1946, column: 49, scope: !4775)
!4778 = !DILocation(line: 1946, column: 22, scope: !4775)
!4779 = !DILocation(line: 1946, column: 3, scope: !4775)
!4780 = !DILocation(line: 0, scope: !4250)
!4781 = !DILocation(line: 0, scope: !4254)
!4782 = !DILocation(line: 1948, column: 13, scope: !4257)
!4783 = !DILocation(line: 0, scope: !4257)
!4784 = !DILocation(line: 1948, column: 22, scope: !4256)
!4785 = !DILocation(line: 1948, column: 8, scope: !4257)
!4786 = !DILocation(line: 1949, column: 7, scope: !4255)
!4787 = !DILocation(line: 1949, column: 7, scope: !4256)
!4788 = !DILocation(line: 1951, column: 19, scope: !4254)
!4789 = !DILocation(line: 1957, column: 7, scope: !4254)
!4790 = !DILocation(line: 1958, column: 7, scope: !4254)
!4791 = !DILocation(line: 1959, column: 38, scope: !4254)
!4792 = !DILocation(line: 1959, column: 7, scope: !4254)
!4793 = !DILocation(line: 1961, column: 5, scope: !4254)
!4794 = !DILocation(line: 1948, column: 29, scope: !4256)
!4795 = !DILocation(line: 1948, column: 8, scope: !4256)
!4796 = distinct !{!4796, !4785, !4797}
!4797 = !DILocation(line: 1961, column: 5, scope: !4257)
!4798 = !DILocation(line: 1962, column: 6, scope: !4215)
!4799 = !DILocation(line: 1966, column: 37, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1966, column: 10)
!4801 = !DILocation(line: 1966, column: 10, scope: !4800)
!4802 = !DILocation(line: 1966, column: 44, scope: !4800)
!4803 = !DILocation(line: 1966, column: 10, scope: !4215)
!4804 = !DILocation(line: 1967, column: 41, scope: !4800)
!4805 = !DILocation(line: 1967, column: 22, scope: !4800)
!4806 = !DILocation(line: 1967, column: 8, scope: !4800)
!4807 = !DILocation(line: 1967, column: 39, scope: !4800)
!4808 = !DILocation(line: 1968, column: 6, scope: !4215)
!4809 = !DILocation(line: 1969, column: 6, scope: !4215)
!4810 = !DILocation(line: 1970, column: 6, scope: !4215)
!4811 = !DILocation(line: 1973, column: 6, scope: !4215)
!4812 = !DILocation(line: 1974, column: 4, scope: !4215)
!4813 = !DILocation(line: 1983, column: 1, scope: !4180)
!4814 = distinct !DISubprogram(name: "emit_pop_insn", scope: !3, file: !3, line: 748, type: !4815, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4817)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!910, !910, !1884, !910, !759}
!4817 = !{!4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4828}
!4818 = !DILocalVariable(name: "insn", arg: 1, scope: !4814, file: !3, line: 748, type: !910)
!4819 = !DILocalVariable(name: "regstack", arg: 2, scope: !4814, file: !3, line: 748, type: !1884)
!4820 = !DILocalVariable(name: "reg", arg: 3, scope: !4814, file: !3, line: 748, type: !910)
!4821 = !DILocalVariable(name: "where", arg: 4, scope: !4814, file: !3, line: 748, type: !759)
!4822 = !DILocalVariable(name: "pop_insn", scope: !4814, file: !3, line: 750, type: !910)
!4823 = !DILocalVariable(name: "pop_rtx", scope: !4814, file: !3, line: 750, type: !910)
!4824 = !DILocalVariable(name: "hard_regno", scope: !4814, file: !3, line: 751, type: !766)
!4825 = !DILocalVariable(name: "reg1", scope: !4826, file: !3, line: 757, type: !910)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 756, column: 5)
!4827 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 755, column: 7)
!4828 = !DILocalVariable(name: "reg2", scope: !4826, file: !3, line: 758, type: !910)
!4829 = !DILocation(line: 0, scope: !4814)
!4830 = !DILocation(line: 755, column: 7, scope: !4827)
!4831 = !DILocation(line: 755, column: 7, scope: !4814)
!4832 = !DILocation(line: 757, column: 18, scope: !4826)
!4833 = !DILocation(line: 0, scope: !4826)
!4834 = !DILocation(line: 758, column: 18, scope: !4826)
!4835 = !DILocation(line: 761, column: 11, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 761, column: 11)
!4837 = !DILocation(line: 761, column: 44, scope: !4836)
!4838 = !DILocation(line: 761, column: 11, scope: !4826)
!4839 = !DILocation(line: 762, column: 13, scope: !4836)
!4840 = !DILocation(line: 762, column: 2, scope: !4836)
!4841 = !DILocation(line: 763, column: 11, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 763, column: 11)
!4843 = !DILocation(line: 763, column: 44, scope: !4842)
!4844 = !DILocation(line: 763, column: 11, scope: !4826)
!4845 = !DILocation(line: 764, column: 13, scope: !4842)
!4846 = !DILocation(line: 764, column: 2, scope: !4842)
!4847 = !DILocation(line: 765, column: 7, scope: !4826)
!4848 = !DILocation(line: 769, column: 16, scope: !4814)
!4849 = !DILocation(line: 771, column: 3, scope: !4814)
!4850 = !DILocation(line: 773, column: 13, scope: !4814)
!4851 = !DILocation(line: 776, column: 13, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 776, column: 7)
!4853 = !DILocation(line: 776, column: 7, scope: !4814)
!4854 = !DILocation(line: 777, column: 16, scope: !4852)
!4855 = !DILocation(line: 777, column: 5, scope: !4852)
!4856 = !DILocation(line: 779, column: 16, scope: !4852)
!4857 = !DILocation(line: 0, scope: !4852)
!4858 = !DILocation(line: 781, column: 37, scope: !4814)
!4859 = !DILocation(line: 781, column: 3, scope: !4814)
!4860 = !DILocation(line: 784, column: 31, scope: !4814)
!4861 = !DILocation(line: 784, column: 7, scope: !4814)
!4862 = !DILocation(line: 783, column: 31, scope: !4814)
!4863 = !DILocation(line: 783, column: 3, scope: !4814)
!4864 = !DILocation(line: 784, column: 5, scope: !4814)
!4865 = !DILocation(line: 785, column: 17, scope: !4814)
!4866 = !DILocation(line: 786, column: 3, scope: !4814)
!4867 = !DILocation(line: 788, column: 3, scope: !4814)
!4868 = !DILocation(line: 789, column: 1, scope: !4814)
!4869 = distinct !DISubprogram(name: "change_stack", scope: !3, file: !3, line: 2391, type: !4870, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4872)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{null, !910, !1884, !1884, !759}
!4872 = !{!4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4883, !4885, !4886, !4887, !4888, !4890}
!4873 = !DILocalVariable(name: "insn", arg: 1, scope: !4869, file: !3, line: 2391, type: !910)
!4874 = !DILocalVariable(name: "old", arg: 2, scope: !4869, file: !3, line: 2391, type: !1884)
!4875 = !DILocalVariable(name: "new_stack", arg: 3, scope: !4869, file: !3, line: 2391, type: !1884)
!4876 = !DILocalVariable(name: "where", arg: 4, scope: !4869, file: !3, line: 2391, type: !759)
!4877 = !DILocalVariable(name: "reg", scope: !4869, file: !3, line: 2393, type: !766)
!4878 = !DILocalVariable(name: "update_end", scope: !4869, file: !3, line: 2394, type: !766)
!4879 = !DILocalVariable(name: "i", scope: !4869, file: !3, line: 2395, type: !766)
!4880 = !DILocalVariable(name: "slots", scope: !4881, file: !3, line: 2438, type: !801)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2437, column: 5)
!4882 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2436, column: 7)
!4883 = !DILocalVariable(name: "pops", scope: !4881, file: !3, line: 2439, type: !4884)
!4884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 256, elements: !802)
!4885 = !DILocalVariable(name: "next", scope: !4881, file: !3, line: 2440, type: !766)
!4886 = !DILocalVariable(name: "dest", scope: !4881, file: !3, line: 2440, type: !766)
!4887 = !DILocalVariable(name: "topsrc", scope: !4881, file: !3, line: 2440, type: !766)
!4888 = !DILocalVariable(name: "live", scope: !4889, file: !3, line: 2504, type: !766)
!4889 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2500, column: 5)
!4890 = !DILocalVariable(name: "next", scope: !4889, file: !3, line: 2504, type: !766)
!4891 = !DILocation(line: 0, scope: !4869)
!4892 = !DILocation(line: 2400, column: 7, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2400, column: 7)
!4894 = !DILocation(line: 2401, column: 7, scope: !4893)
!4895 = !DILocation(line: 2401, column: 10, scope: !4893)
!4896 = !DILocation(line: 2402, column: 16, scope: !4893)
!4897 = !DILocation(line: 2402, column: 7, scope: !4893)
!4898 = !DILocation(line: 2404, column: 7, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 2403, column: 5)
!4900 = !DILocation(line: 2404, column: 46, scope: !4899)
!4901 = !DILocation(line: 2405, column: 24, scope: !4899)
!4902 = !DILocation(line: 2406, column: 14, scope: !4899)
!4903 = !DILocation(line: 2407, column: 7, scope: !4899)
!4904 = !DILocation(line: 2413, column: 13, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2413, column: 7)
!4906 = !DILocation(line: 2413, column: 7, scope: !4869)
!4907 = !DILocation(line: 2415, column: 25, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2415, column: 11)
!4909 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 2414, column: 5)
!4910 = !DILocation(line: 2415, column: 28, scope: !4908)
!4911 = !DILocation(line: 2415, column: 51, scope: !4908)
!4912 = !DILocation(line: 2415, column: 11, scope: !4909)
!4913 = !DILocation(line: 2417, column: 14, scope: !4909)
!4914 = !DILocation(line: 2418, column: 5, scope: !4909)
!4915 = !DILocation(line: 0, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2422, column: 9)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2421, column: 3)
!4918 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2421, column: 3)
!4919 = !DILocation(line: 0, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2424, column: 7)
!4921 = !DILocation(line: 2421, column: 8, scope: !4918)
!4922 = !DILocation(line: 0, scope: !4918)
!4923 = !DILocation(line: 2421, column: 31, scope: !4917)
!4924 = !DILocation(line: 2421, column: 3, scope: !4918)
!4925 = !DILocation(line: 2422, column: 9, scope: !4916)
!4926 = !DILocation(line: 2423, column: 2, scope: !4916)
!4927 = !DILocation(line: 2423, column: 6, scope: !4916)
!4928 = !DILocation(line: 2422, column: 9, scope: !4917)
!4929 = !DILocation(line: 2425, column: 25, scope: !4920)
!4930 = !DILocation(line: 2425, column: 11, scope: !4920)
!4931 = !DILocation(line: 2425, column: 2, scope: !4920)
!4932 = !DILocation(line: 2425, column: 23, scope: !4920)
!4933 = !DILocation(line: 2426, column: 9, scope: !4920)
!4934 = !DILocation(line: 2427, column: 20, scope: !4920)
!4935 = !DILocation(line: 2427, column: 2, scope: !4920)
!4936 = !DILocation(line: 2429, column: 7, scope: !4920)
!4937 = !DILocation(line: 2421, column: 54, scope: !4917)
!4938 = !DILocation(line: 2421, column: 3, scope: !4917)
!4939 = distinct !{!4939, !4924, !4940}
!4940 = !DILocation(line: 2429, column: 7, scope: !4918)
!4941 = !DILocation(line: 2436, column: 18, scope: !4882)
!4942 = !DILocation(line: 2436, column: 22, scope: !4882)
!4943 = !DILocation(line: 2436, column: 7, scope: !4869)
!4944 = !DILocation(line: 0, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 2507, column: 7)
!4946 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 2507, column: 7)
!4947 = !DILocation(line: 2507, column: 7, scope: !4946)
!4948 = !DILocation(line: 2438, column: 7, scope: !4881)
!4949 = !DILocation(line: 2438, column: 12, scope: !4881)
!4950 = !DILocation(line: 2439, column: 7, scope: !4881)
!4951 = !DILocation(line: 2439, column: 11, scope: !4881)
!4952 = !DILocation(line: 2443, column: 12, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 2443, column: 7)
!4954 = !DILocation(line: 2443, column: 25, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 2443, column: 7)
!4956 = !DILocation(line: 0, scope: !4953)
!4957 = !DILocation(line: 2443, column: 7, scope: !4953)
!4958 = !DILocation(line: 2444, column: 15, scope: !4955)
!4959 = !DILocation(line: 2444, column: 2, scope: !4955)
!4960 = !DILocation(line: 2444, column: 13, scope: !4955)
!4961 = !DILocation(line: 2443, column: 47, scope: !4955)
!4962 = !DILocation(line: 2443, column: 7, scope: !4955)
!4963 = distinct !{!4963, !4957, !4964}
!4964 = !DILocation(line: 2444, column: 15, scope: !4953)
!4965 = !DILocation(line: 0, scope: !4881)
!4966 = !DILocation(line: 2448, column: 23, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 2448, column: 7)
!4968 = !DILocation(line: 2448, column: 12, scope: !4967)
!4969 = !DILocation(line: 2448, column: 32, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2448, column: 7)
!4971 = !DILocation(line: 2448, column: 7, scope: !4967)
!4972 = !DILocation(line: 2449, column: 6, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 2449, column: 6)
!4974 = !DILocation(line: 2449, column: 6, scope: !4970)
!4975 = !DILocation(line: 2452, column: 6, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2452, column: 6)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 2450, column: 4)
!4978 = !DILocation(line: 0, scope: !4976)
!4979 = !DILocation(line: 2452, column: 26, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 2452, column: 6)
!4981 = !DILocation(line: 2453, column: 13, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 2453, column: 12)
!4983 = !DILocation(line: 2453, column: 25, scope: !4982)
!4984 = !DILocation(line: 2453, column: 28, scope: !4982)
!4985 = !DILocation(line: 2453, column: 49, scope: !4982)
!4986 = !DILocation(line: 2453, column: 12, scope: !4980)
!4987 = !DILocation(line: 2457, column: 28, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 2457, column: 23)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 2454, column: 3)
!4990 = !DILocation(line: 2457, column: 23, scope: !4989)
!4991 = !DILocation(line: 2459, column: 17, scope: !4989)
!4992 = !DILocation(line: 2461, column: 5, scope: !4989)
!4993 = !DILocation(line: 2452, column: 49, scope: !4980)
!4994 = !DILocation(line: 2452, column: 6, scope: !4980)
!4995 = distinct !{!4995, !4975, !4996}
!4996 = !DILocation(line: 2462, column: 3, scope: !4976)
!4997 = !DILocation(line: 2463, column: 6, scope: !4977)
!4998 = !DILocation(line: 0, scope: !4977)
!4999 = !DILocation(line: 2463, column: 16, scope: !4977)
!5000 = !DILocation(line: 2464, column: 4, scope: !4977)
!5001 = !DILocation(line: 2466, column: 4, scope: !4973)
!5002 = !DILocation(line: 2466, column: 14, scope: !4973)
!5003 = !DILocation(line: 2448, column: 53, scope: !4970)
!5004 = !DILocation(line: 2448, column: 7, scope: !4970)
!5005 = distinct !{!5005, !4971, !5006}
!5006 = !DILocation(line: 2466, column: 16, scope: !4967)
!5007 = !DILocation(line: 2473, column: 18, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 2473, column: 11)
!5009 = !DILocation(line: 2473, column: 11, scope: !4881)
!5010 = !DILocation(line: 2474, column: 2, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 2474, column: 2)
!5012 = !DILocation(line: 0, scope: !5011)
!5013 = !DILocation(line: 2474, column: 20, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 2474, column: 2)
!5015 = !DILocation(line: 2475, column: 9, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 2475, column: 8)
!5017 = !DILocation(line: 2475, column: 8, scope: !5014)
!5018 = !DILocation(line: 2477, column: 8, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2476, column: 6)
!5020 = !DILocation(line: 2477, column: 21, scope: !5019)
!5021 = !DILocation(line: 2478, column: 8, scope: !5019)
!5022 = !DILocation(line: 2478, column: 30, scope: !5019)
!5023 = !DILocation(line: 2479, column: 19, scope: !5019)
!5024 = !DILocation(line: 2480, column: 8, scope: !5019)
!5025 = !DILocation(line: 2474, column: 41, scope: !5014)
!5026 = !DILocation(line: 2474, column: 2, scope: !5014)
!5027 = distinct !{!5027, !5010, !5028}
!5028 = !DILocation(line: 2481, column: 6, scope: !5011)
!5029 = !DILocation(line: 2484, column: 25, scope: !4881)
!5030 = !DILocation(line: 2485, column: 12, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 2485, column: 7)
!5032 = !DILocation(line: 2485, column: 45, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2485, column: 7)
!5034 = !DILocation(line: 2485, column: 32, scope: !5033)
!5035 = !DILocation(line: 2485, column: 7, scope: !5031)
!5036 = !DILocation(line: 2487, column: 11, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 2486, column: 2)
!5038 = !DILocation(line: 2488, column: 13, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 2488, column: 8)
!5040 = !DILocation(line: 2488, column: 8, scope: !5037)
!5041 = !DILocation(line: 2495, column: 30, scope: !5037)
!5042 = !DILocation(line: 2491, column: 8, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 2489, column: 6)
!5044 = !DILocation(line: 2491, column: 15, scope: !5043)
!5045 = !DILocation(line: 0, scope: !5043)
!5046 = distinct !{!5046, !5042, !5047}
!5047 = !DILocation(line: 2492, column: 7, scope: !5043)
!5048 = !DILocation(line: 2495, column: 4, scope: !5037)
!5049 = !DILocation(line: 2485, column: 53, scope: !5033)
!5050 = !DILocation(line: 2485, column: 7, scope: !5033)
!5051 = distinct !{!5051, !5035, !5052}
!5052 = !DILocation(line: 2497, column: 2, scope: !5031)
!5053 = !DILocation(line: 2498, column: 5, scope: !4882)
!5054 = !DILocation(line: 2498, column: 5, scope: !4881)
!5055 = !DILocation(line: 0, scope: !4946)
!5056 = !DILocation(line: 0, scope: !4889)
!5057 = !DILocation(line: 2507, column: 25, scope: !4945)
!5058 = !DILocation(line: 2512, column: 7, scope: !4889)
!5059 = !DILocation(line: 2508, column: 13, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 2508, column: 13)
!5061 = !DILocation(line: 2508, column: 13, scope: !4945)
!5062 = !DILocation(line: 2507, column: 41, scope: !4945)
!5063 = !DILocation(line: 2507, column: 7, scope: !4945)
!5064 = distinct !{!5064, !4947, !5065}
!5065 = !DILocation(line: 2509, column: 15, scope: !4946)
!5066 = !DILocation(line: 2512, column: 19, scope: !4889)
!5067 = !DILocation(line: 2511, column: 12, scope: !4889)
!5068 = !DILocation(line: 2512, column: 23, scope: !4889)
!5069 = !DILocation(line: 2513, column: 13, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 2513, column: 13)
!5071 = !DILocation(line: 2513, column: 13, scope: !4889)
!5072 = !DILocation(line: 2515, column: 6, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 2514, column: 4)
!5074 = !DILocation(line: 2515, column: 13, scope: !5073)
!5075 = !DILocation(line: 2516, column: 12, scope: !5073)
!5076 = distinct !{!5076, !5072, !5075}
!5077 = !DILocation(line: 2517, column: 32, scope: !5073)
!5078 = !DILocation(line: 2517, column: 6, scope: !5073)
!5079 = !DILocation(line: 2519, column: 4, scope: !5073)
!5080 = !DILocation(line: 2521, column: 30, scope: !5070)
!5081 = !DILocation(line: 2521, column: 4, scope: !5070)
!5082 = distinct !{!5082, !5058, !5083}
!5083 = !DILocation(line: 2522, column: 16, scope: !4889)
!5084 = !DILocation(line: 2525, column: 18, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2525, column: 7)
!5086 = !DILocation(line: 2525, column: 22, scope: !5085)
!5087 = !DILocation(line: 2525, column: 7, scope: !4869)
!5088 = !DILocation(line: 2530, column: 29, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 2526, column: 5)
!5090 = !DILocation(line: 2530, column: 22, scope: !5089)
!5091 = !DILocation(line: 2531, column: 15, scope: !5089)
!5092 = !DILocation(line: 2531, column: 31, scope: !5089)
!5093 = !DILocation(line: 2531, column: 7, scope: !5089)
!5094 = !DILocation(line: 2532, column: 5, scope: !5089)
!5095 = !DILocation(line: 2541, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 2534, column: 5)
!5097 = !DILocation(line: 2542, column: 7, scope: !5096)
!5098 = !DILocation(line: 2553, column: 22, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2553, column: 11)
!5100 = !DILocation(line: 2553, column: 26, scope: !5099)
!5101 = !DILocation(line: 2553, column: 11, scope: !5096)
!5102 = !DILocation(line: 2554, column: 2, scope: !5099)
!5103 = !DILocation(line: 2559, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 2555, column: 4)
!5105 = !DILocation(line: 2559, column: 27, scope: !5104)
!5106 = !DILocation(line: 2559, column: 13, scope: !5104)
!5107 = !DILocation(line: 2559, column: 61, scope: !5104)
!5108 = !DILocation(line: 2559, column: 35, scope: !5104)
!5109 = !DILocation(line: 2559, column: 32, scope: !5104)
!5110 = !DILocation(line: 2575, column: 6, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 2575, column: 6)
!5112 = !DILocation(line: 2561, column: 3, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2561, column: 3)
!5114 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 2560, column: 8)
!5115 = !DILocation(line: 0, scope: !5113)
!5116 = !DILocation(line: 2561, column: 34, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2561, column: 3)
!5118 = !DILocation(line: 2562, column: 9, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 2562, column: 9)
!5120 = !DILocation(line: 2562, column: 29, scope: !5119)
!5121 = !DILocation(line: 2562, column: 9, scope: !5117)
!5122 = !DILocation(line: 2561, column: 43, scope: !5117)
!5123 = !DILocation(line: 2561, column: 3, scope: !5117)
!5124 = distinct !{!5124, !5112, !5125}
!5125 = !DILocation(line: 2563, column: 7, scope: !5113)
!5126 = !DILocation(line: 2565, column: 3, scope: !5114)
!5127 = !DILocation(line: 2568, column: 5, scope: !5114)
!5128 = !DILocation(line: 2567, column: 3, scope: !5114)
!5129 = distinct !{!5129, !5103, !5130}
!5130 = !DILocation(line: 2569, column: 8, scope: !5104)
!5131 = !DILocation(line: 0, scope: !5111)
!5132 = !DILocation(line: 2575, column: 37, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 2575, column: 6)
!5134 = !DILocation(line: 2576, column: 12, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2576, column: 12)
!5136 = !DILocation(line: 2576, column: 35, scope: !5135)
!5137 = !DILocation(line: 2576, column: 32, scope: !5135)
!5138 = !DILocation(line: 2576, column: 12, scope: !5133)
!5139 = !DILocation(line: 2579, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2577, column: 3)
!5141 = !DILocation(line: 2578, column: 5, scope: !5140)
!5142 = !DILocation(line: 2580, column: 5, scope: !5140)
!5143 = !DILocation(line: 2575, column: 46, scope: !5133)
!5144 = !DILocation(line: 2575, column: 6, scope: !5133)
!5145 = distinct !{!5145, !5110, !5146}
!5146 = !DILocation(line: 2581, column: 3, scope: !5111)
!5147 = !DILocation(line: 2582, column: 17, scope: !5099)
!5148 = !DILocation(line: 2582, column: 4, scope: !5104)
!5149 = distinct !{!5149, !5102, !5150}
!5150 = !DILocation(line: 2582, column: 21, scope: !5099)
!5151 = !DILocation(line: 2586, column: 23, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2586, column: 7)
!5153 = !DILocation(line: 2586, column: 12, scope: !5152)
!5154 = !DILocation(line: 0, scope: !5152)
!5155 = !DILocation(line: 2586, column: 32, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 2586, column: 7)
!5157 = !DILocation(line: 2586, column: 7, scope: !5152)
!5158 = !DILocation(line: 2587, column: 2, scope: !5156)
!5159 = !DILocation(line: 2586, column: 41, scope: !5156)
!5160 = !DILocation(line: 2586, column: 7, scope: !5156)
!5161 = distinct !{!5161, !5157, !5162}
!5162 = !DILocation(line: 2587, column: 2, scope: !5152)
!5163 = !DILocation(line: 2590, column: 7, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2590, column: 7)
!5165 = !DILocation(line: 2590, column: 7, scope: !4869)
!5166 = !DILocation(line: 2591, column: 30, scope: !5164)
!5167 = !DILocation(line: 2591, column: 5, scope: !5164)
!5168 = !DILocation(line: 2591, column: 28, scope: !5164)
!5169 = !DILocation(line: 2592, column: 1, scope: !4869)
!5170 = distinct !DISubprogram(name: "emit_swap_insn", scope: !3, file: !3, line: 799, type: !5171, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5173)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{null, !910, !1884, !910}
!5173 = !{!5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5186, !5187, !5190}
!5174 = !DILocalVariable(name: "insn", arg: 1, scope: !5170, file: !3, line: 799, type: !910)
!5175 = !DILocalVariable(name: "regstack", arg: 2, scope: !5170, file: !3, line: 799, type: !1884)
!5176 = !DILocalVariable(name: "reg", arg: 3, scope: !5170, file: !3, line: 799, type: !910)
!5177 = !DILocalVariable(name: "hard_regno", scope: !5170, file: !3, line: 801, type: !766)
!5178 = !DILocalVariable(name: "swap_rtx", scope: !5170, file: !3, line: 802, type: !910)
!5179 = !DILocalVariable(name: "tmp", scope: !5170, file: !3, line: 803, type: !766)
!5180 = !DILocalVariable(name: "other_reg", scope: !5170, file: !3, line: 803, type: !766)
!5181 = !DILocalVariable(name: "i1", scope: !5170, file: !3, line: 804, type: !910)
!5182 = !DILocalVariable(name: "i1set", scope: !5170, file: !3, line: 805, type: !910)
!5183 = !DILocalVariable(name: "tmp", scope: !5184, file: !3, line: 834, type: !910)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 833, column: 5)
!5185 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 832, column: 7)
!5186 = !DILocalVariable(name: "limit", scope: !5184, file: !3, line: 835, type: !910)
!5187 = !DILocalVariable(name: "i1src", scope: !5188, file: !3, line: 854, type: !910)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 853, column: 5)
!5189 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 851, column: 7)
!5190 = !DILocalVariable(name: "i1dest", scope: !5188, file: !3, line: 855, type: !910)
!5191 = !DILocation(line: 0, scope: !5170)
!5192 = !DILocation(line: 807, column: 16, scope: !5170)
!5193 = !DILocation(line: 809, column: 7, scope: !5170)
!5194 = !DILocation(line: 817, column: 7, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 812, column: 5)
!5196 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 811, column: 7)
!5197 = !DILocation(line: 818, column: 40, scope: !5195)
!5198 = !DILocation(line: 818, column: 33, scope: !5195)
!5199 = !DILocation(line: 818, column: 21, scope: !5195)
!5200 = !DILocation(line: 818, column: 7, scope: !5195)
!5201 = !DILocation(line: 818, column: 38, scope: !5195)
!5202 = !DILocation(line: 819, column: 7, scope: !5195)
!5203 = !DILocation(line: 821, column: 3, scope: !5170)
!5204 = !DILocation(line: 823, column: 25, scope: !5170)
!5205 = !DILocation(line: 823, column: 43, scope: !5170)
!5206 = !DILocation(line: 823, column: 29, scope: !5170)
!5207 = !DILocation(line: 825, column: 9, scope: !5170)
!5208 = !DILocation(line: 826, column: 30, scope: !5170)
!5209 = !DILocation(line: 826, column: 28, scope: !5170)
!5210 = !DILocation(line: 827, column: 27, scope: !5170)
!5211 = !DILocation(line: 827, column: 3, scope: !5170)
!5212 = !DILocation(line: 827, column: 32, scope: !5170)
!5213 = !DILocation(line: 832, column: 7, scope: !5185)
!5214 = !DILocation(line: 832, column: 21, scope: !5185)
!5215 = !DILocation(line: 832, column: 32, scope: !5185)
!5216 = !DILocation(line: 832, column: 29, scope: !5185)
!5217 = !DILocation(line: 832, column: 7, scope: !5170)
!5218 = !DILocation(line: 835, column: 19, scope: !5184)
!5219 = !DILocation(line: 0, scope: !5184)
!5220 = !DILocation(line: 836, column: 7, scope: !5184)
!5221 = !DILocation(line: 836, column: 18, scope: !5184)
!5222 = !DILocation(line: 838, column: 8, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 838, column: 8)
!5224 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 837, column: 2)
!5225 = !DILocation(line: 839, column: 11, scope: !5223)
!5226 = !DILocation(line: 839, column: 8, scope: !5223)
!5227 = !DILocation(line: 840, column: 11, scope: !5223)
!5228 = !DILocation(line: 841, column: 8, scope: !5223)
!5229 = !DILocation(line: 841, column: 12, scope: !5223)
!5230 = !DILocation(line: 842, column: 5, scope: !5223)
!5231 = !DILocation(line: 842, column: 8, scope: !5223)
!5232 = !DILocation(line: 838, column: 8, scope: !5224)
!5233 = distinct !{!5233, !5220, !5234}
!5234 = !DILocation(line: 848, column: 2, scope: !5184)
!5235 = !DILocation(line: 851, column: 10, scope: !5189)
!5236 = !DILocation(line: 852, column: 7, scope: !5189)
!5237 = !DILocation(line: 852, column: 19, scope: !5189)
!5238 = !DILocation(line: 852, column: 36, scope: !5189)
!5239 = !DILocation(line: 851, column: 7, scope: !5170)
!5240 = !DILocation(line: 854, column: 35, scope: !5188)
!5241 = !DILocation(line: 854, column: 20, scope: !5188)
!5242 = !DILocation(line: 854, column: 19, scope: !5188)
!5243 = !DILocation(line: 0, scope: !5188)
!5244 = !DILocation(line: 855, column: 36, scope: !5188)
!5245 = !DILocation(line: 855, column: 21, scope: !5188)
!5246 = !DILocation(line: 855, column: 20, scope: !5188)
!5247 = !DILocation(line: 860, column: 11, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 860, column: 11)
!5249 = !DILocation(line: 860, column: 26, scope: !5248)
!5250 = !DILocation(line: 860, column: 29, scope: !5248)
!5251 = !DILocation(line: 860, column: 44, scope: !5248)
!5252 = !DILocation(line: 861, column: 4, scope: !5248)
!5253 = !DILocation(line: 861, column: 7, scope: !5248)
!5254 = !DILocation(line: 862, column: 4, scope: !5248)
!5255 = !DILocation(line: 862, column: 7, scope: !5248)
!5256 = !DILocation(line: 862, column: 46, scope: !5248)
!5257 = !DILocation(line: 862, column: 21, scope: !5248)
!5258 = !DILocation(line: 863, column: 4, scope: !5248)
!5259 = !DILocation(line: 863, column: 7, scope: !5248)
!5260 = !DILocation(line: 863, column: 55, scope: !5248)
!5261 = !DILocation(line: 860, column: 11, scope: !5188)
!5262 = !DILocation(line: 869, column: 11, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 869, column: 11)
!5264 = !DILocation(line: 869, column: 26, scope: !5263)
!5265 = !DILocation(line: 869, column: 29, scope: !5263)
!5266 = !DILocation(line: 869, column: 44, scope: !5263)
!5267 = !DILocation(line: 870, column: 4, scope: !5263)
!5268 = !DILocation(line: 870, column: 7, scope: !5263)
!5269 = !DILocation(line: 870, column: 21, scope: !5263)
!5270 = !DILocation(line: 870, column: 24, scope: !5263)
!5271 = !DILocation(line: 870, column: 38, scope: !5263)
!5272 = !DILocation(line: 871, column: 4, scope: !5263)
!5273 = !DILocation(line: 871, column: 7, scope: !5263)
!5274 = !DILocation(line: 871, column: 55, scope: !5263)
!5275 = !DILocation(line: 869, column: 11, scope: !5188)
!5276 = !DILocation(line: 873, column: 5, scope: !5189)
!5277 = !DILocation(line: 878, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 878, column: 7)
!5279 = !DILocation(line: 878, column: 21, scope: !5278)
!5280 = !DILocation(line: 878, column: 24, scope: !5278)
!5281 = !DILocation(line: 878, column: 7, scope: !5170)
!5282 = !DILocation(line: 880, column: 7, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 879, column: 5)
!5284 = !DILocation(line: 880, column: 46, scope: !5283)
!5285 = !DILocation(line: 881, column: 24, scope: !5283)
!5286 = !DILocation(line: 882, column: 7, scope: !5283)
!5287 = !DILocation(line: 885, column: 26, scope: !5170)
!5288 = !DILocation(line: 886, column: 5, scope: !5170)
!5289 = !DILocation(line: 885, column: 14, scope: !5170)
!5290 = !DILocation(line: 888, column: 7, scope: !5170)
!5291 = !DILocation(line: 889, column: 5, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 888, column: 7)
!5293 = !DILocation(line: 890, column: 12, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 890, column: 12)
!5295 = !DILocation(line: 890, column: 12, scope: !5292)
!5296 = !DILocation(line: 891, column: 33, scope: !5294)
!5297 = !DILocation(line: 891, column: 5, scope: !5294)
!5298 = !DILocation(line: 893, column: 5, scope: !5294)
!5299 = !DILocation(line: 894, column: 1, scope: !5170)
!5300 = distinct !DISubprogram(name: "check_asm_stack_operands", scope: !3, file: !3, line: 461, type: !5301, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!766, !910}
!5303 = !{!5304, !5305, !5306, !5307, !5308, !5309, !5313, !5314, !5315, !5316, !5317, !5318, !5325, !5326, !5333, !5338}
!5304 = !DILocalVariable(name: "insn", arg: 1, scope: !5300, file: !3, line: 461, type: !910)
!5305 = !DILocalVariable(name: "i", scope: !5300, file: !3, line: 463, type: !766)
!5306 = !DILocalVariable(name: "n_clobbers", scope: !5300, file: !3, line: 464, type: !766)
!5307 = !DILocalVariable(name: "malformed_asm", scope: !5300, file: !3, line: 465, type: !766)
!5308 = !DILocalVariable(name: "body", scope: !5300, file: !3, line: 466, type: !910)
!5309 = !DILocalVariable(name: "reg_used_as_output", scope: !5300, file: !3, line: 468, type: !5310)
!5310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 424, elements: !5311)
!5311 = !{!5312}
!5312 = !DISubrange(count: 53)
!5313 = !DILocalVariable(name: "implicitly_dies", scope: !5300, file: !3, line: 469, type: !5310)
!5314 = !DILocalVariable(name: "alt", scope: !5300, file: !3, line: 470, type: !766)
!5315 = !DILocalVariable(name: "clobber_reg", scope: !5300, file: !3, line: 472, type: !1886)
!5316 = !DILocalVariable(name: "n_inputs", scope: !5300, file: !3, line: 473, type: !766)
!5317 = !DILocalVariable(name: "n_outputs", scope: !5300, file: !3, line: 473, type: !766)
!5318 = !DILocalVariable(name: "clobber", scope: !5319, file: !3, line: 510, type: !910)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 509, column: 4)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 508, column: 6)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 507, column: 7)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 507, column: 7)
!5323 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 504, column: 5)
!5324 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 503, column: 7)
!5325 = !DILocalVariable(name: "reg", scope: !5319, file: !3, line: 511, type: !910)
!5326 = !DILocalVariable(name: "j", scope: !5327, file: !3, line: 542, type: !766)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 541, column: 4)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 535, column: 6)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 534, column: 7)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 533, column: 9)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 532, column: 3)
!5332 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 532, column: 3)
!5333 = !DILocalVariable(name: "j", scope: !5334, file: !3, line: 584, type: !766)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 581, column: 7)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 580, column: 9)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 579, column: 3)
!5337 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 579, column: 3)
!5338 = !DILocalVariable(name: "j", scope: !5339, file: !3, line: 620, type: !766)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 619, column: 7)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 618, column: 9)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 617, column: 3)
!5342 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 617, column: 3)
!5343 = !DILocation(line: 0, scope: !5300)
!5344 = !DILocation(line: 466, column: 14, scope: !5300)
!5345 = !DILocation(line: 468, column: 3, scope: !5300)
!5346 = !DILocation(line: 468, column: 8, scope: !5300)
!5347 = !DILocation(line: 469, column: 3, scope: !5300)
!5348 = !DILocation(line: 469, column: 8, scope: !5300)
!5349 = !DILocation(line: 473, column: 3, scope: !5300)
!5350 = !DILocation(line: 477, column: 3, scope: !5300)
!5351 = !DILocation(line: 478, column: 3, scope: !5300)
!5352 = !DILocation(line: 479, column: 9, scope: !5300)
!5353 = !DILocation(line: 481, column: 3, scope: !5300)
!5354 = !DILocation(line: 483, column: 3, scope: !5300)
!5355 = !DILocation(line: 485, column: 11, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 485, column: 7)
!5357 = !DILocation(line: 485, column: 7, scope: !5300)
!5358 = !DILocation(line: 494, column: 3, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 494, column: 3)
!5360 = !DILocation(line: 489, column: 24, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 486, column: 5)
!5362 = !DILocation(line: 489, column: 22, scope: !5361)
!5363 = !DILocation(line: 490, column: 7, scope: !5361)
!5364 = !DILocation(line: 0, scope: !5359)
!5365 = !DILocation(line: 494, column: 30, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 494, column: 3)
!5367 = !DILocation(line: 494, column: 17, scope: !5366)
!5368 = !DILocation(line: 495, column: 9, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 495, column: 9)
!5370 = !DILocation(line: 495, column: 42, scope: !5369)
!5371 = !DILocation(line: 496, column: 2, scope: !5369)
!5372 = !DILocation(line: 496, column: 5, scope: !5369)
!5373 = !DILocation(line: 495, column: 9, scope: !5366)
!5374 = !DILocation(line: 497, column: 29, scope: !5369)
!5375 = !DILocation(line: 497, column: 7, scope: !5369)
!5376 = !DILocation(line: 494, column: 43, scope: !5366)
!5377 = !DILocation(line: 494, column: 3, scope: !5366)
!5378 = distinct !{!5378, !5358, !5379}
!5379 = !DILocation(line: 497, column: 31, scope: !5359)
!5380 = !DILocation(line: 503, column: 7, scope: !5324)
!5381 = !DILocation(line: 503, column: 23, scope: !5324)
!5382 = !DILocation(line: 503, column: 7, scope: !5300)
!5383 = !DILocation(line: 505, column: 21, scope: !5323)
!5384 = !DILocation(line: 507, column: 12, scope: !5322)
!5385 = !DILocation(line: 507, column: 23, scope: !5321)
!5386 = !DILocation(line: 507, column: 21, scope: !5321)
!5387 = !DILocation(line: 507, column: 7, scope: !5322)
!5388 = !DILocation(line: 508, column: 6, scope: !5320)
!5389 = !DILocation(line: 508, column: 38, scope: !5320)
!5390 = !DILocation(line: 508, column: 6, scope: !5321)
!5391 = !DILocation(line: 0, scope: !5319)
!5392 = !DILocation(line: 511, column: 16, scope: !5319)
!5393 = !DILocation(line: 513, column: 10, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 513, column: 10)
!5395 = !DILocation(line: 513, column: 25, scope: !5394)
!5396 = !DILocation(line: 513, column: 35, scope: !5394)
!5397 = !DILocation(line: 513, column: 38, scope: !5394)
!5398 = !DILocation(line: 513, column: 10, scope: !5319)
!5399 = !DILocation(line: 514, column: 8, scope: !5394)
!5400 = !DILocation(line: 516, column: 10, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 516, column: 10)
!5402 = !DILocation(line: 516, column: 10, scope: !5319)
!5403 = !DILocation(line: 518, column: 3, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 517, column: 8)
!5405 = !DILocation(line: 518, column: 27, scope: !5404)
!5406 = !DILocation(line: 519, column: 13, scope: !5404)
!5407 = !DILocation(line: 520, column: 8, scope: !5404)
!5408 = !DILocation(line: 507, column: 43, scope: !5321)
!5409 = !DILocation(line: 0, scope: !5321)
!5410 = !DILocation(line: 507, column: 7, scope: !5321)
!5411 = distinct !{!5411, !5387, !5412}
!5412 = !DILocation(line: 521, column: 4, scope: !5322)
!5413 = !DILocation(line: 531, column: 11, scope: !5300)
!5414 = !DILocation(line: 501, column: 14, scope: !5300)
!5415 = !DILocation(line: 531, column: 3, scope: !5300)
!5416 = !DILocation(line: 0, scope: !5328)
!5417 = !DILocation(line: 532, column: 8, scope: !5332)
!5418 = !DILocation(line: 532, column: 19, scope: !5331)
!5419 = !DILocation(line: 532, column: 17, scope: !5331)
!5420 = !DILocation(line: 532, column: 3, scope: !5332)
!5421 = !DILocation(line: 559, column: 3, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 559, column: 3)
!5423 = !DILocation(line: 533, column: 9, scope: !5330)
!5424 = !DILocation(line: 533, column: 9, scope: !5331)
!5425 = !DILocation(line: 535, column: 48, scope: !5328)
!5426 = !DILocation(line: 535, column: 6, scope: !5328)
!5427 = !DILocation(line: 535, column: 52, scope: !5328)
!5428 = !DILocation(line: 535, column: 6, scope: !5329)
!5429 = !DILocation(line: 544, column: 6, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 544, column: 6)
!5431 = !DILocation(line: 537, column: 6, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 536, column: 4)
!5433 = !DILocation(line: 539, column: 4, scope: !5432)
!5434 = !DILocation(line: 0, scope: !5430)
!5435 = !DILocation(line: 0, scope: !5327)
!5436 = !DILocation(line: 544, column: 20, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 544, column: 6)
!5438 = !DILocation(line: 545, column: 12, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 545, column: 12)
!5440 = !DILocation(line: 545, column: 45, scope: !5439)
!5441 = !DILocation(line: 545, column: 42, scope: !5439)
!5442 = !DILocation(line: 545, column: 12, scope: !5437)
!5443 = !DILocation(line: 548, column: 20, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 546, column: 3)
!5445 = !DILocation(line: 548, column: 9, scope: !5444)
!5446 = !DILocation(line: 547, column: 5, scope: !5444)
!5447 = !DILocation(line: 550, column: 5, scope: !5444)
!5448 = !DILocation(line: 544, column: 35, scope: !5437)
!5449 = !DILocation(line: 544, column: 6, scope: !5437)
!5450 = distinct !{!5450, !5429, !5451}
!5451 = !DILocation(line: 551, column: 3, scope: !5430)
!5452 = !DILocation(line: 552, column: 12, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 552, column: 10)
!5454 = !DILocation(line: 552, column: 10, scope: !5327)
!5455 = !DILocation(line: 553, column: 27, scope: !5453)
!5456 = !DILocation(line: 553, column: 8, scope: !5453)
!5457 = !DILocation(line: 553, column: 58, scope: !5453)
!5458 = !DILocation(line: 532, column: 31, scope: !5331)
!5459 = !DILocation(line: 532, column: 3, scope: !5331)
!5460 = distinct !{!5460, !5420, !5461}
!5461 = !DILocation(line: 555, column: 7, scope: !5332)
!5462 = !DILocation(line: 0, scope: !5422)
!5463 = !DILocation(line: 559, column: 31, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 559, column: 3)
!5465 = !DILocation(line: 560, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 560, column: 9)
!5467 = !DILocation(line: 560, column: 9, scope: !5464)
!5468 = !DILocation(line: 559, column: 54, scope: !5464)
!5469 = !DILocation(line: 559, column: 3, scope: !5464)
!5470 = distinct !{!5470, !5421, !5471}
!5471 = !DILocation(line: 561, column: 7, scope: !5422)
!5472 = !DILocation(line: 564, column: 3, scope: !5300)
!5473 = !DILocation(line: 564, column: 3, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 564, column: 3)
!5475 = !DILocation(line: 564, column: 12, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 564, column: 3)
!5477 = !DILocation(line: 565, column: 9, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 565, column: 9)
!5479 = !DILocation(line: 565, column: 9, scope: !5476)
!5480 = !DILocation(line: 564, column: 35, scope: !5476)
!5481 = !DILocation(line: 564, column: 3, scope: !5476)
!5482 = distinct !{!5482, !5473, !5483}
!5483 = !DILocation(line: 566, column: 7, scope: !5474)
!5484 = !DILocation(line: 568, column: 9, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 568, column: 7)
!5486 = !DILocation(line: 568, column: 7, scope: !5300)
!5487 = !DILocation(line: 570, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 569, column: 5)
!5489 = !DILocation(line: 572, column: 5, scope: !5488)
!5490 = !DILocation(line: 578, column: 3, scope: !5300)
!5491 = !DILocation(line: 579, column: 12, scope: !5337)
!5492 = !DILocation(line: 579, column: 8, scope: !5337)
!5493 = !DILocation(line: 579, column: 27, scope: !5336)
!5494 = !DILocation(line: 579, column: 39, scope: !5336)
!5495 = !DILocation(line: 579, column: 37, scope: !5336)
!5496 = !DILocation(line: 579, column: 25, scope: !5336)
!5497 = !DILocation(line: 579, column: 3, scope: !5337)
!5498 = !DILocation(line: 595, column: 3, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 595, column: 3)
!5500 = !DILocation(line: 580, column: 9, scope: !5335)
!5501 = !DILocation(line: 580, column: 9, scope: !5336)
!5502 = !DILocation(line: 586, column: 2, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 586, column: 2)
!5504 = !DILocation(line: 0, scope: !5503)
!5505 = !DILocation(line: 0, scope: !5334)
!5506 = !DILocation(line: 586, column: 16, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 586, column: 2)
!5508 = !DILocation(line: 587, column: 26, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 587, column: 8)
!5510 = !DILocation(line: 587, column: 42, scope: !5509)
!5511 = !DILocation(line: 587, column: 8, scope: !5509)
!5512 = !DILocation(line: 587, column: 8, scope: !5507)
!5513 = !DILocation(line: 586, column: 31, scope: !5507)
!5514 = !DILocation(line: 586, column: 2, scope: !5507)
!5515 = distinct !{!5515, !5502, !5516}
!5516 = !DILocation(line: 588, column: 6, scope: !5503)
!5517 = !DILocation(line: 590, column: 21, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 590, column: 6)
!5519 = !DILocation(line: 590, column: 45, scope: !5518)
!5520 = !DILocation(line: 590, column: 53, scope: !5518)
!5521 = !DILocation(line: 590, column: 6, scope: !5334)
!5522 = !DILocation(line: 591, column: 20, scope: !5518)
!5523 = !DILocation(line: 591, column: 4, scope: !5518)
!5524 = !DILocation(line: 591, column: 51, scope: !5518)
!5525 = !DILocation(line: 579, column: 50, scope: !5336)
!5526 = !DILocation(line: 579, column: 3, scope: !5336)
!5527 = distinct !{!5527, !5497, !5528}
!5528 = !DILocation(line: 592, column: 7, scope: !5337)
!5529 = !DILocation(line: 0, scope: !5499)
!5530 = !DILocation(line: 595, column: 31, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 595, column: 3)
!5532 = !DILocation(line: 596, column: 11, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 596, column: 9)
!5534 = !DILocation(line: 596, column: 9, scope: !5531)
!5535 = !DILocation(line: 595, column: 54, scope: !5531)
!5536 = !DILocation(line: 595, column: 3, scope: !5531)
!5537 = distinct !{!5537, !5498, !5538}
!5538 = !DILocation(line: 597, column: 7, scope: !5499)
!5539 = !DILocation(line: 600, column: 3, scope: !5300)
!5540 = !DILocation(line: 600, column: 3, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 600, column: 3)
!5542 = !DILocation(line: 600, column: 12, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 600, column: 3)
!5544 = !DILocation(line: 601, column: 9, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 601, column: 9)
!5546 = !DILocation(line: 601, column: 9, scope: !5543)
!5547 = !DILocation(line: 600, column: 35, scope: !5543)
!5548 = !DILocation(line: 600, column: 3, scope: !5543)
!5549 = distinct !{!5549, !5540, !5550}
!5550 = !DILocation(line: 602, column: 7, scope: !5541)
!5551 = !DILocation(line: 604, column: 9, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 604, column: 7)
!5553 = !DILocation(line: 604, column: 7, scope: !5300)
!5554 = !DILocation(line: 606, column: 7, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 605, column: 5)
!5556 = !DILocation(line: 617, column: 12, scope: !5342)
!5557 = !DILocation(line: 609, column: 5, scope: !5555)
!5558 = !DILocation(line: 617, column: 8, scope: !5342)
!5559 = !DILocation(line: 617, column: 27, scope: !5341)
!5560 = !DILocation(line: 608, column: 21, scope: !5555)
!5561 = !DILocation(line: 617, column: 39, scope: !5341)
!5562 = !DILocation(line: 617, column: 37, scope: !5341)
!5563 = !DILocation(line: 617, column: 25, scope: !5341)
!5564 = !DILocation(line: 617, column: 3, scope: !5342)
!5565 = !DILocation(line: 618, column: 30, scope: !5340)
!5566 = !DILocation(line: 618, column: 38, scope: !5340)
!5567 = !DILocation(line: 618, column: 9, scope: !5341)
!5568 = !DILocation(line: 0, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 623, column: 8)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 622, column: 2)
!5571 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 622, column: 2)
!5572 = !DILocation(line: 622, column: 2, scope: !5571)
!5573 = !DILocation(line: 622, column: 18, scope: !5570)
!5574 = !DILocation(line: 0, scope: !5339)
!5575 = !DILocation(line: 622, column: 16, scope: !5570)
!5576 = !DILocation(line: 623, column: 26, scope: !5569)
!5577 = !DILocation(line: 623, column: 49, scope: !5569)
!5578 = !DILocation(line: 623, column: 8, scope: !5569)
!5579 = !DILocation(line: 623, column: 8, scope: !5570)
!5580 = !DILocation(line: 625, column: 8, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 624, column: 6)
!5582 = !DILocation(line: 628, column: 6, scope: !5581)
!5583 = !DILocation(line: 622, column: 30, scope: !5570)
!5584 = !DILocation(line: 622, column: 2, scope: !5570)
!5585 = distinct !{!5585, !5572, !5586}
!5586 = !DILocation(line: 628, column: 6, scope: !5571)
!5587 = !DILocation(line: 617, column: 50, scope: !5341)
!5588 = !DILocation(line: 617, column: 3, scope: !5341)
!5589 = distinct !{!5589, !5564, !5590}
!5590 = !DILocation(line: 629, column: 7, scope: !5342)
!5591 = !DILocation(line: 631, column: 7, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 631, column: 7)
!5593 = !DILocation(line: 631, column: 7, scope: !5300)
!5594 = !DILocation(line: 634, column: 24, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 632, column: 5)
!5596 = !DILocation(line: 634, column: 22, scope: !5595)
!5597 = !DILocation(line: 635, column: 25, scope: !5595)
!5598 = !DILocation(line: 636, column: 7, scope: !5595)
!5599 = !DILocation(line: 640, column: 1, scope: !5300)
!5600 = distinct !DISubprogram(name: "get_asm_operands_in_out", scope: !3, file: !3, line: 648, type: !5601, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5604)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{null, !910, !5603, !5603}
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!5604 = !{!5605, !5606, !5607, !5608}
!5605 = !DILocalVariable(name: "body", arg: 1, scope: !5600, file: !3, line: 648, type: !910)
!5606 = !DILocalVariable(name: "pout", arg: 2, scope: !5600, file: !3, line: 648, type: !5603)
!5607 = !DILocalVariable(name: "pin", arg: 3, scope: !5600, file: !3, line: 648, type: !5603)
!5608 = !DILocalVariable(name: "asmop", scope: !5600, file: !3, line: 650, type: !910)
!5609 = !DILocation(line: 0, scope: !5600)
!5610 = !DILocation(line: 650, column: 15, scope: !5600)
!5611 = !DILocation(line: 652, column: 10, scope: !5600)
!5612 = !DILocation(line: 652, column: 8, scope: !5600)
!5613 = !DILocation(line: 653, column: 23, scope: !5600)
!5614 = !DILocation(line: 653, column: 12, scope: !5600)
!5615 = !DILocation(line: 654, column: 7, scope: !5600)
!5616 = !DILocation(line: 654, column: 5, scope: !5600)
!5617 = !DILocation(line: 655, column: 7, scope: !5600)
!5618 = !DILocation(line: 655, column: 5, scope: !5600)
!5619 = !DILocation(line: 653, column: 9, scope: !5600)
!5620 = !DILocation(line: 656, column: 1, scope: !5600)
!5621 = distinct !DISubprogram(name: "move_nan_for_stack_reg", scope: !3, file: !3, line: 1098, type: !4181, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5622)
!5622 = !{!5623, !5624, !5625, !5626}
!5623 = !DILocalVariable(name: "insn", arg: 1, scope: !5621, file: !3, line: 1098, type: !910)
!5624 = !DILocalVariable(name: "regstack", arg: 2, scope: !5621, file: !3, line: 1098, type: !1884)
!5625 = !DILocalVariable(name: "dest", arg: 3, scope: !5621, file: !3, line: 1098, type: !910)
!5626 = !DILocalVariable(name: "pat", scope: !5621, file: !3, line: 1100, type: !910)
!5627 = !DILocation(line: 0, scope: !5621)
!5628 = !DILocation(line: 1102, column: 10, scope: !5621)
!5629 = !DILocation(line: 1103, column: 9, scope: !5621)
!5630 = !DILocation(line: 1104, column: 3, scope: !5621)
!5631 = !DILocation(line: 1104, column: 18, scope: !5621)
!5632 = !DILocation(line: 1105, column: 3, scope: !5621)
!5633 = !DILocation(line: 1105, column: 20, scope: !5621)
!5634 = !DILocation(line: 1107, column: 10, scope: !5621)
!5635 = !DILocation(line: 1107, column: 3, scope: !5621)
!5636 = distinct !DISubprogram(name: "move_for_stack_reg", scope: !3, file: !3, line: 947, type: !4181, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5637)
!5637 = !{!5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5652, !5658, !5659}
!5638 = !DILocalVariable(name: "insn", arg: 1, scope: !5636, file: !3, line: 947, type: !910)
!5639 = !DILocalVariable(name: "regstack", arg: 2, scope: !5636, file: !3, line: 947, type: !1884)
!5640 = !DILocalVariable(name: "pat", arg: 3, scope: !5636, file: !3, line: 947, type: !910)
!5641 = !DILocalVariable(name: "psrc", scope: !5636, file: !3, line: 949, type: !1886)
!5642 = !DILocalVariable(name: "pdest", scope: !5636, file: !3, line: 950, type: !1886)
!5643 = !DILocalVariable(name: "src", scope: !5636, file: !3, line: 951, type: !910)
!5644 = !DILocalVariable(name: "dest", scope: !5636, file: !3, line: 951, type: !910)
!5645 = !DILocalVariable(name: "note", scope: !5636, file: !3, line: 952, type: !910)
!5646 = !DILocalVariable(name: "control_flow_insn_deleted", scope: !5636, file: !3, line: 953, type: !765)
!5647 = !DILocalVariable(name: "i", scope: !5648, file: !3, line: 965, type: !766)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 964, column: 2)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 963, column: 11)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 958, column: 5)
!5651 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 957, column: 7)
!5652 = !DILocalVariable(name: "push_rtx", scope: !5653, file: !3, line: 1050, type: !910)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1042, column: 2)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1040, column: 16)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 1034, column: 11)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1026, column: 5)
!5657 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1025, column: 12)
!5658 = !DILocalVariable(name: "top_stack_reg", scope: !5653, file: !3, line: 1051, type: !910)
!5659 = !DILocalVariable(name: "pat", scope: !5660, file: !3, line: 1062, type: !910)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1061, column: 5)
!5661 = !DILocation(line: 0, scope: !5636)
!5662 = !DILocation(line: 949, column: 31, scope: !5636)
!5663 = !DILocation(line: 949, column: 16, scope: !5636)
!5664 = !DILocation(line: 950, column: 31, scope: !5636)
!5665 = !DILocation(line: 950, column: 16, scope: !5636)
!5666 = !DILocation(line: 955, column: 9, scope: !5636)
!5667 = !DILocation(line: 955, column: 23, scope: !5636)
!5668 = !DILocation(line: 957, column: 7, scope: !5651)
!5669 = !DILocation(line: 957, column: 25, scope: !5651)
!5670 = !DILocation(line: 957, column: 28, scope: !5651)
!5671 = !DILocation(line: 957, column: 7, scope: !5636)
!5672 = !DILocation(line: 962, column: 47, scope: !5650)
!5673 = !DILocation(line: 962, column: 14, scope: !5650)
!5674 = !DILocation(line: 963, column: 11, scope: !5649)
!5675 = !DILocation(line: 0, scope: !5650)
!5676 = !DILocation(line: 963, column: 11, scope: !5650)
!5677 = !DILocation(line: 968, column: 4, scope: !5648)
!5678 = !DILocation(line: 970, column: 23, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 970, column: 4)
!5680 = !DILocation(line: 0, scope: !5648)
!5681 = !DILocation(line: 970, column: 9, scope: !5679)
!5682 = !DILocation(line: 0, scope: !5679)
!5683 = !DILocation(line: 970, column: 30, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 970, column: 4)
!5685 = !DILocation(line: 970, column: 4, scope: !5679)
!5686 = !DILocation(line: 971, column: 10, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 971, column: 10)
!5688 = !DILocation(line: 971, column: 30, scope: !5687)
!5689 = !DILocation(line: 971, column: 27, scope: !5687)
!5690 = !DILocation(line: 971, column: 10, scope: !5684)
!5691 = !DILocation(line: 970, column: 37, scope: !5684)
!5692 = !DILocation(line: 970, column: 4, scope: !5684)
!5693 = distinct !{!5693, !5685, !5694}
!5694 = !DILocation(line: 972, column: 8, scope: !5679)
!5695 = !DILocation(line: 975, column: 4, scope: !5648)
!5696 = !DILocation(line: 979, column: 10, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 979, column: 8)
!5698 = !DILocation(line: 979, column: 8, scope: !5648)
!5699 = !DILocation(line: 980, column: 13, scope: !5697)
!5700 = !DILocation(line: 980, column: 6, scope: !5697)
!5701 = !DILocation(line: 985, column: 43, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 985, column: 8)
!5703 = !DILocation(line: 985, column: 8, scope: !5702)
!5704 = !DILocation(line: 985, column: 8, scope: !5648)
!5705 = !DILocation(line: 986, column: 6, scope: !5702)
!5706 = !DILocation(line: 989, column: 27, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 988, column: 6)
!5708 = !DILocation(line: 989, column: 8, scope: !5707)
!5709 = !DILocation(line: 989, column: 25, scope: !5707)
!5710 = !DILocation(line: 990, column: 8, scope: !5707)
!5711 = !DILocation(line: 991, column: 8, scope: !5707)
!5712 = !DILocation(line: 994, column: 33, scope: !5648)
!5713 = !DILocation(line: 995, column: 4, scope: !5648)
!5714 = !DILocation(line: 996, column: 4, scope: !5648)
!5715 = !DILocation(line: 1006, column: 23, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1006, column: 11)
!5717 = !DILocation(line: 1006, column: 11, scope: !5650)
!5718 = !DILocation(line: 1008, column: 43, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1008, column: 8)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1007, column: 2)
!5721 = !DILocation(line: 1008, column: 8, scope: !5719)
!5722 = !DILocation(line: 1008, column: 8, scope: !5720)
!5723 = !DILocation(line: 1009, column: 6, scope: !5719)
!5724 = !DILocation(line: 1011, column: 33, scope: !5720)
!5725 = !DILocation(line: 1012, column: 4, scope: !5720)
!5726 = !DILocation(line: 1013, column: 4, scope: !5720)
!5727 = !DILocation(line: 1017, column: 7, scope: !5650)
!5728 = !DILocation(line: 1019, column: 26, scope: !5650)
!5729 = !DILocation(line: 1019, column: 7, scope: !5650)
!5730 = !DILocation(line: 1021, column: 40, scope: !5650)
!5731 = !DILocation(line: 1021, column: 33, scope: !5650)
!5732 = !DILocation(line: 1021, column: 21, scope: !5650)
!5733 = !DILocation(line: 1021, column: 7, scope: !5650)
!5734 = !DILocation(line: 1021, column: 38, scope: !5650)
!5735 = !DILocation(line: 1022, column: 7, scope: !5650)
!5736 = !DILocation(line: 1023, column: 7, scope: !5650)
!5737 = !DILocation(line: 1024, column: 5, scope: !5650)
!5738 = !DILocation(line: 1025, column: 12, scope: !5657)
!5739 = !DILocation(line: 1025, column: 12, scope: !5651)
!5740 = !DILocation(line: 1031, column: 7, scope: !5656)
!5741 = !DILocation(line: 1033, column: 47, scope: !5656)
!5742 = !DILocation(line: 1033, column: 14, scope: !5656)
!5743 = !DILocation(line: 1034, column: 11, scope: !5655)
!5744 = !DILocation(line: 1034, column: 11, scope: !5656)
!5745 = !DILocation(line: 1036, column: 18, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1035, column: 2)
!5747 = !DILocation(line: 1036, column: 4, scope: !5746)
!5748 = !DILocation(line: 1037, column: 14, scope: !5746)
!5749 = !DILocation(line: 1037, column: 17, scope: !5746)
!5750 = !DILocation(line: 1038, column: 4, scope: !5746)
!5751 = !DILocation(line: 1039, column: 2, scope: !5746)
!5752 = !DILocation(line: 1040, column: 17, scope: !5654)
!5753 = !DILocation(line: 1040, column: 32, scope: !5654)
!5754 = !DILocation(line: 1041, column: 9, scope: !5654)
!5755 = !DILocation(line: 1041, column: 22, scope: !5654)
!5756 = !DILocation(line: 1041, column: 26, scope: !5654)
!5757 = !DILocation(line: 1040, column: 16, scope: !5655)
!5758 = !DILocation(line: 1051, column: 24, scope: !5653)
!5759 = !DILocation(line: 0, scope: !5653)
!5760 = !DILocation(line: 1053, column: 15, scope: !5653)
!5761 = !DILocation(line: 1054, column: 4, scope: !5653)
!5762 = !DILocation(line: 1055, column: 4, scope: !5653)
!5763 = !DILocation(line: 1056, column: 2, scope: !5653)
!5764 = !DILocation(line: 1058, column: 7, scope: !5656)
!5765 = !DILocation(line: 1059, column: 5, scope: !5656)
!5766 = !DILocation(line: 1062, column: 17, scope: !5660)
!5767 = !DILocation(line: 0, scope: !5660)
!5768 = !DILocation(line: 1064, column: 7, scope: !5660)
!5769 = !DILocation(line: 1075, column: 11, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1075, column: 11)
!5771 = !DILocation(line: 1075, column: 26, scope: !5770)
!5772 = !DILocation(line: 1076, column: 4, scope: !5770)
!5773 = !DILocation(line: 1076, column: 7, scope: !5770)
!5774 = !DILocation(line: 1076, column: 24, scope: !5770)
!5775 = !DILocation(line: 1077, column: 4, scope: !5770)
!5776 = !DILocation(line: 1077, column: 7, scope: !5770)
!5777 = !DILocation(line: 1077, column: 38, scope: !5770)
!5778 = !DILocation(line: 1078, column: 4, scope: !5770)
!5779 = !DILocation(line: 1078, column: 7, scope: !5770)
!5780 = !DILocation(line: 1078, column: 48, scope: !5770)
!5781 = !DILocation(line: 1079, column: 4, scope: !5770)
!5782 = !DILocation(line: 1079, column: 7, scope: !5770)
!5783 = !DILocation(line: 1079, column: 47, scope: !5770)
!5784 = !DILocation(line: 1075, column: 11, scope: !5660)
!5785 = !DILocation(line: 1080, column: 2, scope: !5770)
!5786 = !DILocation(line: 1082, column: 2, scope: !5770)
!5787 = !DILocation(line: 1084, column: 7, scope: !5660)
!5788 = !DILocation(line: 1086, column: 40, scope: !5660)
!5789 = !DILocation(line: 1086, column: 21, scope: !5660)
!5790 = !DILocation(line: 1086, column: 7, scope: !5660)
!5791 = !DILocation(line: 1086, column: 38, scope: !5660)
!5792 = !DILocation(line: 1087, column: 7, scope: !5660)
!5793 = !DILocation(line: 1088, column: 7, scope: !5660)
!5794 = !DILocation(line: 1092, column: 1, scope: !5636)
!5795 = distinct !DISubprogram(name: "compare_for_stack_reg", scope: !3, file: !3, line: 1237, type: !5171, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5796)
!5796 = !{!5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804}
!5797 = !DILocalVariable(name: "insn", arg: 1, scope: !5795, file: !3, line: 1237, type: !910)
!5798 = !DILocalVariable(name: "regstack", arg: 2, scope: !5795, file: !3, line: 1237, type: !1884)
!5799 = !DILocalVariable(name: "pat_src", arg: 3, scope: !5795, file: !3, line: 1237, type: !910)
!5800 = !DILocalVariable(name: "src1", scope: !5795, file: !3, line: 1239, type: !1886)
!5801 = !DILocalVariable(name: "src2", scope: !5795, file: !3, line: 1239, type: !1886)
!5802 = !DILocalVariable(name: "src1_note", scope: !5795, file: !3, line: 1240, type: !910)
!5803 = !DILocalVariable(name: "src2_note", scope: !5795, file: !3, line: 1240, type: !910)
!5804 = !DILocalVariable(name: "temp", scope: !5805, file: !3, line: 1252, type: !910)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1251, column: 5)
!5806 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1247, column: 7)
!5807 = !DILocation(line: 0, scope: !5795)
!5808 = !DILocation(line: 1242, column: 25, scope: !5795)
!5809 = !DILocation(line: 1242, column: 10, scope: !5795)
!5810 = !DILocation(line: 1243, column: 25, scope: !5795)
!5811 = !DILocation(line: 1243, column: 10, scope: !5795)
!5812 = !DILocation(line: 1247, column: 10, scope: !5806)
!5813 = !DILocation(line: 1248, column: 8, scope: !5806)
!5814 = !DILocation(line: 1248, column: 12, scope: !5806)
!5815 = !DILocation(line: 1249, column: 5, scope: !5806)
!5816 = !DILocation(line: 1249, column: 35, scope: !5806)
!5817 = !DILocation(line: 1249, column: 8, scope: !5806)
!5818 = !DILocation(line: 1249, column: 42, scope: !5806)
!5819 = !DILocation(line: 1250, column: 7, scope: !5806)
!5820 = !DILocation(line: 1250, column: 10, scope: !5806)
!5821 = !DILocation(line: 1247, column: 7, scope: !5795)
!5822 = !DILocation(line: 1253, column: 14, scope: !5805)
!5823 = !DILocation(line: 1254, column: 27, scope: !5805)
!5824 = !DILocation(line: 1254, column: 7, scope: !5805)
!5825 = !DILocation(line: 1254, column: 25, scope: !5805)
!5826 = !DILocation(line: 1255, column: 25, scope: !5805)
!5827 = !DILocation(line: 1257, column: 14, scope: !5805)
!5828 = !DILocation(line: 1258, column: 14, scope: !5805)
!5829 = !DILocation(line: 1260, column: 7, scope: !5805)
!5830 = !DILocation(line: 1260, column: 24, scope: !5805)
!5831 = !DILocation(line: 1261, column: 5, scope: !5805)
!5832 = !DILocation(line: 1265, column: 48, scope: !5795)
!5833 = !DILocation(line: 1265, column: 15, scope: !5795)
!5834 = !DILocation(line: 1267, column: 7, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1267, column: 7)
!5836 = !DILocation(line: 1267, column: 7, scope: !5795)
!5837 = !DILocation(line: 1268, column: 50, scope: !5835)
!5838 = !DILocation(line: 1268, column: 17, scope: !5835)
!5839 = !DILocation(line: 1268, column: 5, scope: !5835)
!5840 = !DILocation(line: 0, scope: !5835)
!5841 = !DILocation(line: 1272, column: 35, scope: !5795)
!5842 = !DILocation(line: 1272, column: 3, scope: !5795)
!5843 = !DILocation(line: 1274, column: 3, scope: !5795)
!5844 = !DILocation(line: 1276, column: 7, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1276, column: 7)
!5846 = !DILocation(line: 1276, column: 7, scope: !5795)
!5847 = !DILocation(line: 1277, column: 51, scope: !5845)
!5848 = !DILocation(line: 1277, column: 24, scope: !5845)
!5849 = !DILocation(line: 1277, column: 5, scope: !5845)
!5850 = !DILocation(line: 1279, column: 7, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1279, column: 7)
!5852 = !DILocation(line: 1279, column: 7, scope: !5795)
!5853 = !DILocation(line: 1281, column: 28, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1280, column: 5)
!5855 = !DILocation(line: 1281, column: 7, scope: !5854)
!5856 = !DILocation(line: 1282, column: 7, scope: !5854)
!5857 = !DILocation(line: 1283, column: 5, scope: !5854)
!5858 = !DILocation(line: 1289, column: 7, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1289, column: 7)
!5860 = !DILocation(line: 1290, column: 7, scope: !5859)
!5861 = !DILocation(line: 1290, column: 13, scope: !5859)
!5862 = !DILocation(line: 1290, column: 33, scope: !5859)
!5863 = !DILocation(line: 1290, column: 36, scope: !5859)
!5864 = !DILocation(line: 1291, column: 6, scope: !5859)
!5865 = !DILocation(line: 1291, column: 9, scope: !5859)
!5866 = !DILocation(line: 1291, column: 26, scope: !5859)
!5867 = !DILocation(line: 1291, column: 23, scope: !5859)
!5868 = !DILocation(line: 1289, column: 7, scope: !5795)
!5869 = !DILocation(line: 1298, column: 38, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1298, column: 11)
!5871 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 1292, column: 5)
!5872 = !DILocation(line: 1298, column: 11, scope: !5870)
!5873 = !DILocation(line: 1298, column: 59, scope: !5870)
!5874 = !DILocation(line: 1299, column: 7, scope: !5870)
!5875 = !DILocation(line: 1299, column: 4, scope: !5870)
!5876 = !DILocation(line: 0, scope: !5870)
!5877 = !DILocation(line: 1301, column: 4, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1300, column: 2)
!5879 = !DILocation(line: 1302, column: 4, scope: !5878)
!5880 = !DILocation(line: 1303, column: 2, scope: !5878)
!5881 = !DILocation(line: 1312, column: 4, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1305, column: 2)
!5883 = !DILocation(line: 1314, column: 35, scope: !5882)
!5884 = !DILocation(line: 1314, column: 4, scope: !5882)
!5885 = !DILocation(line: 1318, column: 1, scope: !5795)
!5886 = distinct !DISubprogram(name: "remove_regno_note", scope: !3, file: !3, line: 704, type: !5887, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5889)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{null, !910, !725, !7}
!5889 = !{!5890, !5891, !5892, !5893, !5894}
!5890 = !DILocalVariable(name: "insn", arg: 1, scope: !5886, file: !3, line: 704, type: !910)
!5891 = !DILocalVariable(name: "note", arg: 2, scope: !5886, file: !3, line: 704, type: !725)
!5892 = !DILocalVariable(name: "regno", arg: 3, scope: !5886, file: !3, line: 704, type: !7)
!5893 = !DILocalVariable(name: "note_link", scope: !5886, file: !3, line: 706, type: !1886)
!5894 = !DILocalVariable(name: "this_rtx", scope: !5886, file: !3, line: 706, type: !910)
!5895 = !DILocation(line: 0, scope: !5886)
!5896 = !DILocation(line: 708, column: 16, scope: !5886)
!5897 = !DILocation(line: 709, column: 8, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 709, column: 3)
!5899 = !DILocation(line: 0, scope: !5898)
!5900 = !DILocation(line: 709, column: 3, scope: !5898)
!5901 = !DILocation(line: 710, column: 9, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 710, column: 9)
!5903 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 709, column: 3)
!5904 = !DILocation(line: 710, column: 34, scope: !5902)
!5905 = !DILocation(line: 711, column: 2, scope: !5902)
!5906 = !DILocation(line: 711, column: 5, scope: !5902)
!5907 = !DILocation(line: 711, column: 32, scope: !5902)
!5908 = !DILocation(line: 711, column: 35, scope: !5902)
!5909 = !DILocation(line: 711, column: 62, scope: !5902)
!5910 = !DILocation(line: 710, column: 9, scope: !5903)
!5911 = !DILocation(line: 713, column: 15, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 712, column: 7)
!5913 = !DILocation(line: 713, column: 13, scope: !5912)
!5914 = !DILocation(line: 714, column: 2, scope: !5912)
!5915 = !DILocation(line: 717, column: 20, scope: !5902)
!5916 = !DILocation(line: 709, column: 3, scope: !5903)
!5917 = distinct !{!5917, !5900, !5918}
!5918 = !DILocation(line: 717, column: 20, scope: !5898)
!5919 = !DILocation(line: 719, column: 3, scope: !5886)
!5920 = !DILocation(line: 720, column: 1, scope: !5886)
!5921 = distinct !DISubprogram(name: "swap_to_top", scope: !3, file: !3, line: 906, type: !5922, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5924)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{null, !910, !1884, !910, !910}
!5924 = !{!5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933}
!5925 = !DILocalVariable(name: "insn", arg: 1, scope: !5921, file: !3, line: 906, type: !910)
!5926 = !DILocalVariable(name: "regstack", arg: 2, scope: !5921, file: !3, line: 906, type: !1884)
!5927 = !DILocalVariable(name: "src1", arg: 3, scope: !5921, file: !3, line: 906, type: !910)
!5928 = !DILocalVariable(name: "src2", arg: 4, scope: !5921, file: !3, line: 906, type: !910)
!5929 = !DILocalVariable(name: "temp_stack", scope: !5921, file: !3, line: 908, type: !794)
!5930 = !DILocalVariable(name: "regno", scope: !5921, file: !3, line: 909, type: !766)
!5931 = !DILocalVariable(name: "j", scope: !5921, file: !3, line: 909, type: !766)
!5932 = !DILocalVariable(name: "k", scope: !5921, file: !3, line: 909, type: !766)
!5933 = !DILocalVariable(name: "temp", scope: !5921, file: !3, line: 909, type: !766)
!5934 = !DILocation(line: 0, scope: !5921)
!5935 = !DILocation(line: 908, column: 3, scope: !5921)
!5936 = !DILocation(line: 911, column: 16, scope: !5921)
!5937 = !DILocation(line: 914, column: 11, scope: !5921)
!5938 = !DILocation(line: 915, column: 3, scope: !5921)
!5939 = !DILocation(line: 916, column: 13, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 916, column: 7)
!5941 = !DILocation(line: 916, column: 7, scope: !5921)
!5942 = !DILocation(line: 918, column: 22, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 917, column: 5)
!5944 = !DILocation(line: 918, column: 35, scope: !5943)
!5945 = !DILocation(line: 918, column: 26, scope: !5943)
!5946 = !DILocation(line: 921, column: 14, scope: !5943)
!5947 = !DILocation(line: 922, column: 27, scope: !5943)
!5948 = !DILocation(line: 922, column: 25, scope: !5943)
!5949 = !DILocation(line: 923, column: 25, scope: !5943)
!5950 = !DILocation(line: 924, column: 5, scope: !5943)
!5951 = !DILocation(line: 927, column: 11, scope: !5921)
!5952 = !DILocation(line: 928, column: 3, scope: !5921)
!5953 = !DILocation(line: 929, column: 13, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 929, column: 7)
!5955 = !DILocation(line: 929, column: 7, scope: !5921)
!5956 = !DILocation(line: 931, column: 22, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 930, column: 5)
!5958 = !DILocation(line: 931, column: 35, scope: !5957)
!5959 = !DILocation(line: 931, column: 26, scope: !5957)
!5960 = !DILocation(line: 932, column: 26, scope: !5957)
!5961 = !DILocation(line: 934, column: 14, scope: !5957)
!5962 = !DILocation(line: 935, column: 27, scope: !5957)
!5963 = !DILocation(line: 935, column: 25, scope: !5957)
!5964 = !DILocation(line: 936, column: 25, scope: !5957)
!5965 = !DILocation(line: 937, column: 5, scope: !5957)
!5966 = !DILocation(line: 939, column: 3, scope: !5921)
!5967 = !DILocation(line: 940, column: 1, scope: !5921)
!5968 = distinct !DISubprogram(name: "swap_rtx_condition", scope: !3, file: !3, line: 1146, type: !5301, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5969)
!5969 = !{!5970, !5971, !5972, !5975}
!5970 = !DILocalVariable(name: "insn", arg: 1, scope: !5968, file: !3, line: 1146, type: !910)
!5971 = !DILocalVariable(name: "pat", scope: !5968, file: !3, line: 1148, type: !910)
!5972 = !DILocalVariable(name: "dest", scope: !5973, file: !3, line: 1170, type: !910)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1169, column: 5)
!5974 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1166, column: 7)
!5975 = !DILocalVariable(name: "fail", scope: !5976, file: !3, line: 1206, type: !766)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1205, column: 5)
!5977 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1204, column: 7)
!5978 = !DILocation(line: 0, scope: !5968)
!5979 = !DILocation(line: 1148, column: 13, scope: !5968)
!5980 = !DILocation(line: 1152, column: 7, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1152, column: 7)
!5982 = !DILocation(line: 1152, column: 22, scope: !5981)
!5983 = !DILocation(line: 1153, column: 7, scope: !5981)
!5984 = !DILocation(line: 1153, column: 10, scope: !5981)
!5985 = !DILocation(line: 1154, column: 7, scope: !5981)
!5986 = !DILocation(line: 1154, column: 10, scope: !5981)
!5987 = !DILocation(line: 1154, column: 33, scope: !5981)
!5988 = !DILocation(line: 1152, column: 7, scope: !5968)
!5989 = !DILocation(line: 1156, column: 14, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 1155, column: 5)
!5991 = !DILocation(line: 1157, column: 16, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1157, column: 11)
!5993 = !DILocation(line: 1157, column: 11, scope: !5990)
!5994 = !DILocation(line: 1159, column: 13, scope: !5990)
!5995 = !DILocation(line: 1160, column: 5, scope: !5990)
!5996 = !DILocation(line: 1166, column: 7, scope: !5974)
!5997 = !DILocation(line: 1166, column: 22, scope: !5974)
!5998 = !DILocation(line: 1167, column: 7, scope: !5974)
!5999 = !DILocation(line: 1167, column: 10, scope: !5974)
!6000 = !DILocation(line: 1167, column: 35, scope: !5974)
!6001 = !DILocation(line: 1168, column: 7, scope: !5974)
!6002 = !DILocation(line: 1168, column: 10, scope: !5974)
!6003 = !DILocation(line: 1168, column: 34, scope: !5974)
!6004 = !DILocation(line: 1166, column: 7, scope: !5968)
!6005 = !DILocation(line: 1170, column: 18, scope: !5973)
!6006 = !DILocation(line: 0, scope: !5973)
!6007 = !DILocation(line: 1174, column: 7, scope: !5973)
!6008 = !DILocation(line: 1174, column: 22, scope: !5973)
!6009 = !DILocation(line: 1174, column: 19, scope: !5973)
!6010 = !DILocation(line: 1176, column: 11, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1175, column: 2)
!6012 = !DILocation(line: 1177, column: 8, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1177, column: 8)
!6014 = !DILocation(line: 1177, column: 22, scope: !6013)
!6015 = !DILocation(line: 1177, column: 25, scope: !6013)
!6016 = !DILocation(line: 1177, column: 8, scope: !6011)
!6017 = !DILocation(line: 1184, column: 19, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1184, column: 11)
!6019 = !DILocation(line: 0, scope: !6018)
!6020 = !DILocation(line: 1179, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1179, column: 8)
!6022 = !DILocation(line: 1179, column: 8, scope: !6011)
!6023 = distinct !{!6023, !6007, !6024}
!6024 = !DILocation(line: 1181, column: 2, scope: !5973)
!6025 = !DILocation(line: 1184, column: 16, scope: !6018)
!6026 = !DILocation(line: 1184, column: 11, scope: !5973)
!6027 = !DILocation(line: 1190, column: 13, scope: !5973)
!6028 = !DILocation(line: 1191, column: 11, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1191, column: 11)
!6030 = !DILocation(line: 1191, column: 26, scope: !6029)
!6031 = !DILocation(line: 1192, column: 4, scope: !6029)
!6032 = !DILocation(line: 1192, column: 7, scope: !6029)
!6033 = !DILocation(line: 1192, column: 32, scope: !6029)
!6034 = !DILocation(line: 1193, column: 4, scope: !6029)
!6035 = !DILocation(line: 1193, column: 7, scope: !6029)
!6036 = !DILocation(line: 1193, column: 31, scope: !6029)
!6037 = !DILocation(line: 1194, column: 4, scope: !6029)
!6038 = !DILocation(line: 1194, column: 9, scope: !6029)
!6039 = !DILocation(line: 1191, column: 11, scope: !5973)
!6040 = !DILocation(line: 1198, column: 14, scope: !5973)
!6041 = !DILocation(line: 1199, column: 16, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1199, column: 11)
!6043 = !DILocation(line: 1199, column: 11, scope: !5973)
!6044 = !DILocation(line: 1201, column: 13, scope: !5973)
!6045 = !DILocation(line: 1202, column: 5, scope: !5974)
!6046 = !DILocation(line: 1159, column: 11, scope: !5990)
!6047 = !DILocation(line: 1204, column: 7, scope: !5977)
!6048 = !DILocation(line: 1204, column: 7, scope: !5968)
!6049 = !DILocation(line: 0, scope: !5976)
!6050 = !DILocation(line: 1207, column: 7, scope: !5976)
!6051 = !DILocation(line: 1207, column: 24, scope: !5976)
!6052 = !DILocation(line: 1208, column: 11, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1208, column: 11)
!6054 = !DILocation(line: 1208, column: 33, scope: !6053)
!6055 = !DILocation(line: 1208, column: 11, scope: !5976)
!6056 = !DILocation(line: 1212, column: 39, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1212, column: 16)
!6058 = !DILocation(line: 1212, column: 18, scope: !6057)
!6059 = !DILocation(line: 1212, column: 16, scope: !6053)
!6060 = !DILocation(line: 1214, column: 11, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1213, column: 2)
!6062 = !DILocation(line: 1215, column: 9, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1215, column: 8)
!6064 = !DILocation(line: 1215, column: 14, scope: !6063)
!6065 = !DILocation(line: 1215, column: 18, scope: !6063)
!6066 = !DILocation(line: 1215, column: 8, scope: !6061)
!6067 = !DILocation(line: 1216, column: 6, scope: !6063)
!6068 = !DILocation(line: 1218, column: 11, scope: !5976)
!6069 = !DILocation(line: 1220, column: 4, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1219, column: 2)
!6071 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 1218, column: 11)
!6072 = !DILocation(line: 1221, column: 4, scope: !6070)
!6073 = !DILocation(line: 1226, column: 1, scope: !5968)
!6074 = distinct !DISubprogram(name: "pop_stack", scope: !3, file: !3, line: 384, type: !6075, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6077)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{null, !1884, !766}
!6077 = !{!6078, !6079, !6080, !6081, !6084}
!6078 = !DILocalVariable(name: "regstack", arg: 1, scope: !6074, file: !3, line: 384, type: !1884)
!6079 = !DILocalVariable(name: "regno", arg: 2, scope: !6074, file: !3, line: 384, type: !766)
!6080 = !DILocalVariable(name: "top", scope: !6074, file: !3, line: 386, type: !766)
!6081 = !DILocalVariable(name: "i", scope: !6082, file: !3, line: 393, type: !766)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 392, column: 5)
!6083 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 391, column: 7)
!6084 = !DILocalVariable(name: "j", scope: !6085, file: !3, line: 397, type: !766)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 396, column: 4)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 395, column: 6)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 394, column: 7)
!6088 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 394, column: 7)
!6089 = !DILocation(line: 0, scope: !6074)
!6090 = !DILocation(line: 386, column: 23, scope: !6074)
!6091 = !DILocation(line: 388, column: 3, scope: !6074)
!6092 = !DILocation(line: 389, column: 16, scope: !6074)
!6093 = !DILocation(line: 391, column: 7, scope: !6083)
!6094 = !DILocation(line: 391, column: 27, scope: !6083)
!6095 = !DILocation(line: 391, column: 7, scope: !6074)
!6096 = !DILocation(line: 0, scope: !6082)
!6097 = !DILocation(line: 394, column: 12, scope: !6088)
!6098 = !DILocation(line: 0, scope: !6088)
!6099 = !DILocation(line: 394, column: 33, scope: !6087)
!6100 = !DILocation(line: 394, column: 7, scope: !6088)
!6101 = !DILocation(line: 395, column: 6, scope: !6086)
!6102 = !DILocation(line: 395, column: 24, scope: !6086)
!6103 = !DILocation(line: 395, column: 6, scope: !6087)
!6104 = !DILocation(line: 398, column: 6, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 398, column: 6)
!6106 = !DILocation(line: 0, scope: !6105)
!6107 = !DILocation(line: 0, scope: !6085)
!6108 = !DILocation(line: 398, column: 20, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 398, column: 6)
!6110 = !DILocation(line: 399, column: 45, scope: !6109)
!6111 = !DILocation(line: 399, column: 28, scope: !6109)
!6112 = !DILocation(line: 399, column: 8, scope: !6109)
!6113 = !DILocation(line: 399, column: 26, scope: !6109)
!6114 = !DILocation(line: 398, column: 6, scope: !6109)
!6115 = distinct !{!6115, !6104, !6116}
!6116 = !DILocation(line: 399, column: 48, scope: !6105)
!6117 = !DILocation(line: 394, column: 40, scope: !6087)
!6118 = !DILocation(line: 394, column: 7, scope: !6087)
!6119 = distinct !{!6119, !6100, !6120}
!6120 = !DILocation(line: 401, column: 4, scope: !6088)
!6121 = !DILocation(line: 403, column: 1, scope: !6074)
!6122 = distinct !DISubprogram(name: "next_flags_user", scope: !3, file: !3, line: 340, type: !6123, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6125)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{!910, !910}
!6125 = !{!6126}
!6126 = !DILocalVariable(name: "insn", arg: 1, scope: !6122, file: !3, line: 340, type: !910)
!6127 = !DILocation(line: 0, scope: !6122)
!6128 = !DILocation(line: 345, column: 3, scope: !6122)
!6129 = !DILocation(line: 345, column: 18, scope: !6122)
!6130 = !DILocation(line: 345, column: 15, scope: !6122)
!6131 = !DILocation(line: 347, column: 14, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 346, column: 5)
!6133 = !DILocation(line: 349, column: 11, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 349, column: 11)
!6135 = !DILocation(line: 349, column: 25, scope: !6134)
!6136 = !DILocation(line: 349, column: 45, scope: !6134)
!6137 = !DILocation(line: 349, column: 61, scope: !6134)
!6138 = !DILocation(line: 349, column: 28, scope: !6134)
!6139 = !DILocation(line: 349, column: 11, scope: !6132)
!6140 = !DILocation(line: 352, column: 11, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 352, column: 11)
!6142 = !DILocation(line: 352, column: 11, scope: !6132)
!6143 = distinct !{!6143, !6128, !6144}
!6144 = !DILocation(line: 354, column: 5, scope: !6122)
!6145 = !DILocation(line: 356, column: 1, scope: !6122)
!6146 = distinct !DISubprogram(name: "swap_rtx_condition_1", scope: !3, file: !3, line: 1115, type: !5301, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6147)
!6147 = !{!6148, !6149, !6150, !6151, !6152}
!6148 = !DILocalVariable(name: "pat", arg: 1, scope: !6146, file: !3, line: 1115, type: !910)
!6149 = !DILocalVariable(name: "fmt", scope: !6146, file: !3, line: 1117, type: !771)
!6150 = !DILocalVariable(name: "i", scope: !6146, file: !3, line: 1118, type: !766)
!6151 = !DILocalVariable(name: "r", scope: !6146, file: !3, line: 1118, type: !766)
!6152 = !DILocalVariable(name: "j", scope: !6153, file: !3, line: 1132, type: !766)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1131, column: 6)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1130, column: 8)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1129, column: 2)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 1128, column: 7)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 1128, column: 7)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 1126, column: 5)
!6159 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1120, column: 7)
!6160 = !DILocation(line: 0, scope: !6146)
!6161 = !DILocation(line: 1120, column: 7, scope: !6159)
!6162 = !DILocation(line: 1120, column: 7, scope: !6146)
!6163 = !DILocation(line: 1122, column: 7, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 1121, column: 5)
!6165 = !DILocation(line: 1124, column: 5, scope: !6164)
!6166 = !DILocation(line: 1127, column: 13, scope: !6158)
!6167 = !DILocation(line: 1128, column: 16, scope: !6157)
!6168 = !DILocation(line: 0, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1137, column: 13)
!6170 = !DILocation(line: 1128, column: 12, scope: !6157)
!6171 = !DILocation(line: 1118, column: 10, scope: !6146)
!6172 = !DILocation(line: 0, scope: !6157)
!6173 = !DILocation(line: 1128, column: 55, scope: !6156)
!6174 = !DILocation(line: 1128, column: 7, scope: !6157)
!6175 = !DILocation(line: 1130, column: 8, scope: !6154)
!6176 = !DILocation(line: 1130, column: 15, scope: !6154)
!6177 = !DILocation(line: 1130, column: 8, scope: !6155)
!6178 = !DILocation(line: 1134, column: 17, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 1134, column: 8)
!6180 = !DILocation(line: 0, scope: !6153)
!6181 = !DILocation(line: 1134, column: 13, scope: !6179)
!6182 = !DILocation(line: 0, scope: !6179)
!6183 = !DILocation(line: 1134, column: 41, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 1134, column: 8)
!6185 = !DILocation(line: 1134, column: 8, scope: !6179)
!6186 = !DILocation(line: 1135, column: 30, scope: !6184)
!6187 = !DILocation(line: 1135, column: 8, scope: !6184)
!6188 = !DILocation(line: 1135, column: 5, scope: !6184)
!6189 = !DILocation(line: 1134, column: 8, scope: !6184)
!6190 = distinct !{!6190, !6185, !6191}
!6191 = !DILocation(line: 1135, column: 49, scope: !6179)
!6192 = !DILocation(line: 1137, column: 20, scope: !6169)
!6193 = !DILocation(line: 1137, column: 13, scope: !6154)
!6194 = !DILocation(line: 1138, column: 33, scope: !6169)
!6195 = !DILocation(line: 1138, column: 11, scope: !6169)
!6196 = !DILocation(line: 1138, column: 8, scope: !6169)
!6197 = !DILocation(line: 1138, column: 6, scope: !6169)
!6198 = !DILocation(line: 1128, column: 7, scope: !6156)
!6199 = distinct !{!6199, !6174, !6200}
!6200 = !DILocation(line: 1139, column: 2, scope: !6157)
!6201 = !DILocation(line: 1142, column: 3, scope: !6146)
!6202 = distinct !DISubprogram(name: "recog_memoized", scope: !6203, file: !6203, line: 150, type: !5301, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6204)
!6203 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6204 = !{!6205}
!6205 = !DILocalVariable(name: "insn", arg: 1, scope: !6202, file: !6203, line: 150, type: !910)
!6206 = !DILocation(line: 0, scope: !6202)
!6207 = !DILocation(line: 152, column: 7, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6202, file: !6203, line: 152, column: 7)
!6209 = !DILocation(line: 152, column: 24, scope: !6208)
!6210 = !DILocation(line: 152, column: 7, scope: !6202)
!6211 = !DILocation(line: 153, column: 31, scope: !6208)
!6212 = !DILocation(line: 153, column: 24, scope: !6208)
!6213 = !DILocation(line: 153, column: 22, scope: !6208)
!6214 = !DILocation(line: 153, column: 5, scope: !6208)
!6215 = !DILocation(line: 154, column: 10, scope: !6202)
!6216 = !DILocation(line: 154, column: 3, scope: !6202)
!6217 = distinct !DISubprogram(name: "compensate_edge", scope: !3, file: !3, line: 2730, type: !6218, scopeLine: 2731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!765, !896}
!6220 = !{!6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6231}
!6221 = !DILocalVariable(name: "e", arg: 1, scope: !6217, file: !3, line: 2730, type: !896)
!6222 = !DILocalVariable(name: "source", scope: !6217, file: !3, line: 2732, type: !879)
!6223 = !DILocalVariable(name: "target", scope: !6217, file: !3, line: 2732, type: !879)
!6224 = !DILocalVariable(name: "target_stack", scope: !6217, file: !3, line: 2733, type: !1884)
!6225 = !DILocalVariable(name: "source_stack", scope: !6217, file: !3, line: 2734, type: !1884)
!6226 = !DILocalVariable(name: "regstack", scope: !6217, file: !3, line: 2735, type: !794)
!6227 = !DILocalVariable(name: "reg", scope: !6217, file: !3, line: 2736, type: !766)
!6228 = !DILocalVariable(name: "seq", scope: !6229, file: !3, line: 2806, type: !910)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2805, column: 5)
!6230 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2798, column: 7)
!6231 = !DILocalVariable(name: "after", scope: !6229, file: !3, line: 2806, type: !910)
!6232 = !DILocation(line: 0, scope: !6217)
!6233 = !DILocation(line: 2732, column: 27, scope: !6217)
!6234 = !DILocation(line: 2732, column: 44, scope: !6217)
!6235 = !DILocation(line: 2733, column: 25, scope: !6217)
!6236 = !DILocation(line: 2733, column: 46, scope: !6217)
!6237 = !DILocation(line: 2734, column: 25, scope: !6217)
!6238 = !DILocation(line: 2734, column: 46, scope: !6217)
!6239 = !DILocation(line: 2735, column: 3, scope: !6217)
!6240 = !DILocation(line: 2738, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2738, column: 7)
!6242 = !DILocation(line: 2738, column: 7, scope: !6217)
!6243 = !DILocation(line: 2739, column: 50, scope: !6241)
!6244 = !DILocation(line: 2739, column: 65, scope: !6241)
!6245 = !DILocation(line: 2739, column: 5, scope: !6241)
!6246 = !DILocation(line: 2741, column: 3, scope: !6217)
!6247 = !DILocation(line: 2744, column: 21, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2744, column: 7)
!6249 = !DILocation(line: 2744, column: 42, scope: !6248)
!6250 = !DILocation(line: 2744, column: 25, scope: !6248)
!6251 = !DILocation(line: 2744, column: 7, scope: !6217)
!6252 = !DILocation(line: 2746, column: 12, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2746, column: 7)
!6254 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 2745, column: 5)
!6255 = !DILocation(line: 0, scope: !6253)
!6256 = !DILocation(line: 2746, column: 41, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2746, column: 7)
!6258 = !DILocation(line: 2746, column: 7, scope: !6253)
!6259 = !DILocation(line: 2747, column: 6, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 2747, column: 6)
!6261 = !DILocation(line: 2747, column: 32, scope: !6260)
!6262 = !DILocation(line: 2747, column: 29, scope: !6260)
!6263 = !DILocation(line: 2747, column: 6, scope: !6257)
!6264 = !DILocation(line: 2746, column: 47, scope: !6257)
!6265 = !DILocation(line: 2746, column: 7, scope: !6257)
!6266 = distinct !{!6266, !6258, !6267}
!6267 = !DILocation(line: 2748, column: 4, scope: !6253)
!6268 = !DILocation(line: 2750, column: 15, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2750, column: 11)
!6270 = !DILocation(line: 2750, column: 11, scope: !6254)
!6271 = !DILocation(line: 2752, column: 8, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 2752, column: 8)
!6273 = distinct !DILexicalBlock(scope: !6269, file: !3, line: 2751, column: 2)
!6274 = !DILocation(line: 2752, column: 8, scope: !6273)
!6275 = !DILocation(line: 2753, column: 6, scope: !6272)
!6276 = !DILocation(line: 2758, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2758, column: 7)
!6278 = !DILocation(line: 2758, column: 7, scope: !6217)
!6279 = !DILocation(line: 2760, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 2759, column: 5)
!6281 = !DILocation(line: 2761, column: 20, scope: !6280)
!6282 = !DILocation(line: 2761, column: 7, scope: !6280)
!6283 = !DILocation(line: 2762, column: 5, scope: !6280)
!6284 = !DILocation(line: 2766, column: 10, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2766, column: 7)
!6286 = !DILocation(line: 2766, column: 16, scope: !6285)
!6287 = !DILocation(line: 2766, column: 7, scope: !6217)
!6288 = !DILocation(line: 2772, column: 7, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2767, column: 5)
!6290 = !DILocation(line: 2773, column: 7, scope: !6289)
!6291 = !DILocation(line: 2780, column: 16, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2780, column: 7)
!6293 = !DILocation(line: 2780, column: 7, scope: !6217)
!6294 = !DILocation(line: 2782, column: 7, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2781, column: 5)
!6296 = !DILocation(line: 2789, column: 3, scope: !6217)
!6297 = !DILocation(line: 2792, column: 14, scope: !6217)
!6298 = !DILocation(line: 2798, column: 7, scope: !6230)
!6299 = !DILocation(line: 2798, column: 34, scope: !6230)
!6300 = !DILocation(line: 2798, column: 7, scope: !6217)
!6301 = !DILocation(line: 2800, column: 21, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2799, column: 5)
!6303 = !DILocation(line: 2801, column: 21, scope: !6302)
!6304 = !DILocation(line: 2802, column: 8, scope: !6302)
!6305 = !DILocation(line: 2801, column: 7, scope: !6302)
!6306 = !DILocation(line: 2822, column: 3, scope: !6217)
!6307 = !DILocation(line: 2808, column: 21, scope: !6229)
!6308 = !DILocation(line: 2809, column: 7, scope: !6229)
!6309 = !DILocation(line: 2812, column: 15, scope: !6229)
!6310 = !DILocation(line: 0, scope: !6229)
!6311 = !DILocation(line: 2814, column: 7, scope: !6229)
!6312 = !DILocation(line: 2816, column: 13, scope: !6229)
!6313 = !DILocation(line: 2817, column: 7, scope: !6229)
!6314 = !DILocation(line: 2819, column: 7, scope: !6229)
!6315 = !DILocation(line: 2823, column: 1, scope: !6217)
