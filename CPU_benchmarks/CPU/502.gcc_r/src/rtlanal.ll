; ModuleID = 'rtlanal.bc'
source_filename = "rtlanal.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.set_of_data = type { %struct.rtx_def*, %struct.rtx_def* }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.subreg_info = type { i32, i32, i8 }
%struct.parms_set_data = type { i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@regs_invalidated_by_call = external dso_local local_unnamed_addr global i64, align 8
@.str = private unnamed_addr constant [10 x i8] c"rtlanal.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@flag_signaling_nans = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@flag_trapping_math = external dso_local local_unnamed_addr global i32, align 4
@non_rtx_starting_operands = internal unnamed_addr global [139 x i32] zeroinitializer, align 16, !dbg !0
@target_flags = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1681
@mode_nunits = external dso_local local_unnamed_addr constant [87 x i8], align 16
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@mode_mask_array = external dso_local local_unnamed_addr constant [87 x i64], align 16
@rtl_hooks = external dso_local local_unnamed_addr global %struct.rtl_hooks, align 8
@num_sign_bit_copies_in_rep = internal unnamed_addr global [20 x [20 x i32]] zeroinitializer, align 16, !dbg !1683
@.str.2 = private unnamed_addr constant [4 x i8] c"eEV\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1695 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1708, metadata !DIExpression()), !dbg !1710
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1709, metadata !DIExpression()), !dbg !1710
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1711
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1712
  ret i32 %call, !dbg !1713
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1714 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1718
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1719
  ret i32 %call, !dbg !1720
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1721 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1774, metadata !DIExpression()), !dbg !1775
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1776
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1776
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1776
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1776
  %cmp = icmp uge i8* %0, %1, !dbg !1776
  %conv1 = zext i1 %cmp to i64, !dbg !1776
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1776
  %tobool = icmp eq i64 %expval, 0, !dbg !1776
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1776

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1776
  br label %cond.end, !dbg !1776

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1776
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1776
  %2 = load i8, i8* %0, align 1, !dbg !1776
  %conv3 = zext i8 %2 to i32, !dbg !1776
  br label %cond.end, !dbg !1776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1776
  ret i32 %cond, !dbg !1777
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1778 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1780, metadata !DIExpression()), !dbg !1781
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1782
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1782
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1782
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1782
  %cmp = icmp uge i8* %0, %1, !dbg !1782
  %conv1 = zext i1 %cmp to i64, !dbg !1782
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1782
  %tobool = icmp eq i64 %expval, 0, !dbg !1782
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1782

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1782
  br label %cond.end, !dbg !1782

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1782
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1782
  %2 = load i8, i8* %0, align 1, !dbg !1782
  %conv3 = zext i8 %2 to i32, !dbg !1782
  br label %cond.end, !dbg !1782

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1782
  ret i32 %cond, !dbg !1783
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !1784 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1785
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !1785
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1785
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !1785
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !1785
  %cmp = icmp uge i8* %1, %2, !dbg !1785
  %conv1 = zext i1 %cmp to i64, !dbg !1785
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1785
  %tobool = icmp eq i64 %expval, 0, !dbg !1785
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1785

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !1785
  br label %cond.end, !dbg !1785

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1785
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1785
  %3 = load i8, i8* %1, align 1, !dbg !1785
  %conv3 = zext i8 %3 to i32, !dbg !1785
  br label %cond.end, !dbg !1785

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1785
  ret i32 %cond, !dbg !1786
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !1787 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1791, metadata !DIExpression()), !dbg !1792
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1793
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !1794
  ret i32 %call, !dbg !1795
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1796 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1800, metadata !DIExpression()), !dbg !1802
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1801, metadata !DIExpression()), !dbg !1802
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1803
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1803
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1803
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1803
  %cmp = icmp uge i8* %0, %1, !dbg !1803
  %conv1 = zext i1 %cmp to i64, !dbg !1803
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1803
  %tobool = icmp eq i64 %expval, 0, !dbg !1803
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1803

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1803
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1803
  br label %cond.end, !dbg !1803

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1803
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1803
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1803
  store i8 %conv2, i8* %0, align 1, !dbg !1803
  %conv6 = and i32 %__c, 255, !dbg !1803
  br label %cond.end, !dbg !1803

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1803
  ret i32 %cond, !dbg !1804
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1805 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1807, metadata !DIExpression()), !dbg !1809
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1808, metadata !DIExpression()), !dbg !1809
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1810
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1810
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1810
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1810
  %cmp = icmp uge i8* %0, %1, !dbg !1810
  %conv1 = zext i1 %cmp to i64, !dbg !1810
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1810
  %tobool = icmp eq i64 %expval, 0, !dbg !1810
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1810

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1810
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1810
  br label %cond.end, !dbg !1810

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1810
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1810
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1810
  store i8 %conv2, i8* %0, align 1, !dbg !1810
  %conv6 = and i32 %__c, 255, !dbg !1810
  br label %cond.end, !dbg !1810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1810
  ret i32 %cond, !dbg !1811
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !1812 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1814, metadata !DIExpression()), !dbg !1815
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1816
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !1816
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1816
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !1816
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !1816
  %cmp = icmp uge i8* %1, %2, !dbg !1816
  %conv1 = zext i1 %cmp to i64, !dbg !1816
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1816
  %tobool = icmp eq i64 %expval, 0, !dbg !1816
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1816

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1816
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !1816
  br label %cond.end, !dbg !1816

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !1816
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1816
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1816
  store i8 %conv4, i8* %1, align 1, !dbg !1816
  %conv6 = and i32 %__c, 255, !dbg !1816
  br label %cond.end, !dbg !1816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1816
  ret i32 %cond, !dbg !1817
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1818 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !1824, metadata !DIExpression()), !dbg !1827
  call void @llvm.dbg.value(metadata i64* %__n, metadata !1825, metadata !DIExpression()), !dbg !1827
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1826, metadata !DIExpression()), !dbg !1827
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !1828
  ret i64 %call, !dbg !1829
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1830 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1832, metadata !DIExpression()), !dbg !1833
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1834
  %0 = load i32, i32* %_flags, align 8, !dbg !1834
  %and = lshr i32 %0, 4, !dbg !1834
  %and.lobit = and i32 %and, 1, !dbg !1834
  ret i32 %and.lobit, !dbg !1835
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1836 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1838, metadata !DIExpression()), !dbg !1839
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1840
  %0 = load i32, i32* %_flags, align 8, !dbg !1840
  %and = lshr i32 %0, 5, !dbg !1840
  %and.lobit = and i32 %and, 1, !dbg !1840
  ret i32 %and.lobit, !dbg !1841
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !1842 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1845, metadata !DIExpression()), !dbg !1846
  %__c.off = add i32 %__c, 128, !dbg !1847
  %0 = icmp ult i32 %__c.off, 384, !dbg !1847
  br i1 %0, label %cond.true, label %cond.end, !dbg !1847

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !1848
  %1 = load i32*, i32** %call, align 8, !dbg !1849
  %idxprom = sext i32 %__c to i64, !dbg !1850
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1850
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1850
  br label %cond.end, !dbg !1851

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1851
  ret i32 %cond, !dbg !1852
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !1853 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1855, metadata !DIExpression()), !dbg !1856
  %__c.off = add i32 %__c, 128, !dbg !1857
  %0 = icmp ult i32 %__c.off, 384, !dbg !1857
  br i1 %0, label %cond.true, label %cond.end, !dbg !1857

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !1858
  %1 = load i32*, i32** %call, align 8, !dbg !1859
  %idxprom = sext i32 %__c to i64, !dbg !1860
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1860
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1860
  br label %cond.end, !dbg !1861

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1861
  ret i32 %cond, !dbg !1862
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !1863 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1868, metadata !DIExpression()), !dbg !1869
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1870
  %conv = trunc i64 %call to i32, !dbg !1871
  ret i32 %conv, !dbg !1872
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !1873 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1877, metadata !DIExpression()), !dbg !1878
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !1879
  ret i64 %call, !dbg !1880
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !1881 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1886, metadata !DIExpression()), !dbg !1887
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !1888
  ret i64 %call, !dbg !1889
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !1890 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !1896, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i8* %__base, metadata !1897, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1898, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__size, metadata !1899, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !1900, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 0, metadata !1901, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !1902, metadata !DIExpression()), !dbg !1906
  br label %while.cond, !dbg !1907

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !1908
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !1902, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !1901, metadata !DIExpression()), !dbg !1906
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !1909
  br i1 %cmp, label %while.body, label %cleanup, !dbg !1907

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !1910
  %div = lshr i64 %add, 1, !dbg !1912
  call void @llvm.dbg.value(metadata i64 %div, metadata !1903, metadata !DIExpression()), !dbg !1906
  %mul = mul i64 %div, %__size, !dbg !1913
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !1914
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !1904, metadata !DIExpression()), !dbg !1906
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !1915
  call void @llvm.dbg.value(metadata i32 %call, metadata !1905, metadata !DIExpression()), !dbg !1906
  %cmp1 = icmp slt i32 %call, 0, !dbg !1916
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !1918

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !1919
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !1921

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !1922
  call void @llvm.dbg.value(metadata i64 %add4, metadata !1901, metadata !DIExpression()), !dbg !1906
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !1906
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !1902, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !1901, metadata !DIExpression()), !dbg !1906
  br label %while.cond, !dbg !1907, !llvm.loop !1923

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !1906
  ret i8* %retval.0, !dbg !1925
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !1926 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !1932, metadata !DIExpression()), !dbg !1933
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !1934
  ret double %call, !dbg !1935
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1936 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !1945, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !1946, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.value(metadata i32 %base, metadata !1947, metadata !DIExpression()), !dbg !1948
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !1949
  ret i64 %call, !dbg !1950
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1951 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !1957, metadata !DIExpression()), !dbg !1960
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !1958, metadata !DIExpression()), !dbg !1960
  call void @llvm.dbg.value(metadata i32 %base, metadata !1959, metadata !DIExpression()), !dbg !1960
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !1961
  ret i64 %call, !dbg !1962
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1963 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !1974, metadata !DIExpression()), !dbg !1977
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !1975, metadata !DIExpression()), !dbg !1977
  call void @llvm.dbg.value(metadata i32 %base, metadata !1976, metadata !DIExpression()), !dbg !1977
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !1978
  ret i64 %call, !dbg !1979
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !1980 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !1984, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !1985, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.value(metadata i32 %base, metadata !1986, metadata !DIExpression()), !dbg !1987
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !1988
  ret i64 %call, !dbg !1989
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !1990 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2030, metadata !DIExpression()), !dbg !2032
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2031, metadata !DIExpression()), !dbg !2032
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2033
  ret i32 %call, !dbg !2034
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2035 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2037, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2038, metadata !DIExpression()), !dbg !2039
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2040
  ret i32 %call, !dbg !2041
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2042 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2046, metadata !DIExpression()), !dbg !2048
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2047, metadata !DIExpression()), !dbg !2048
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2049
  ret i32 %call, !dbg !2050
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2051 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2055, metadata !DIExpression()), !dbg !2059
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2056, metadata !DIExpression()), !dbg !2059
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2057, metadata !DIExpression()), !dbg !2059
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2058, metadata !DIExpression()), !dbg !2059
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2060
  ret i32 %call, !dbg !2061
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2062 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2066, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2067, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2068, metadata !DIExpression()), !dbg !2069
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2068, metadata !DIExpression(DW_OP_deref)), !dbg !2069
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2070
  ret i32 %call, !dbg !2071
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2072 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2076, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2077, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2078, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2079, metadata !DIExpression()), !dbg !2080
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2079, metadata !DIExpression(DW_OP_deref)), !dbg !2080
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2081
  ret i32 %call, !dbg !2082
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2083 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2107, metadata !DIExpression()), !dbg !2109
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2108, metadata !DIExpression()), !dbg !2109
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2110
  ret i32 %call, !dbg !2111
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2112 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2114, metadata !DIExpression()), !dbg !2116
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2115, metadata !DIExpression()), !dbg !2116
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2117
  ret i32 %call, !dbg !2118
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2119 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2123, metadata !DIExpression()), !dbg !2125
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2124, metadata !DIExpression()), !dbg !2125
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2126
  ret i32 %call, !dbg !2127
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2128 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2132, metadata !DIExpression()), !dbg !2136
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2133, metadata !DIExpression()), !dbg !2136
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2134, metadata !DIExpression()), !dbg !2136
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2135, metadata !DIExpression()), !dbg !2136
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2137
  ret i32 %call, !dbg !2138
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @rtx_unstable_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2139 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2143, metadata !DIExpression()), !dbg !2154
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2155
  %bf.load = load i32, i32* %0, align 8, !dbg !2155
  %bf.clear = and i32 %bf.load, 65535, !dbg !2155
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2144, metadata !DIExpression()), !dbg !2154
  %trunc = trunc i32 %bf.load to i16, !dbg !2156
  switch i16 %trunc, label %sw.epilog [
    i16 43, label %sw.bb
    i16 35, label %cleanup71
    i16 30, label %cleanup71
    i16 32, label %cleanup71
    i16 31, label %cleanup71
    i16 33, label %cleanup71
    i16 45, label %cleanup71
    i16 44, label %cleanup71
    i16 37, label %sw.bb5
    i16 17, label %sw.bb14
  ], !dbg !2156

sw.bb:                                            ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 67108864, !dbg !2157
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !2157
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !2159

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2160
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2160
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2160
  %call = tail call i32 @rtx_unstable_p(%struct.rtx_def* %1) #7, !dbg !2161
  %tobool3 = icmp ne i32 %call, 0, !dbg !2159
  %phitmp = zext i1 %tobool3 to i32, !dbg !2159
  br label %lor.end, !dbg !2159

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %2 = phi i32 [ 1, %sw.bb ], [ %phitmp, %lor.rhs ]
  br label %cleanup71, !dbg !2162

sw.bb5:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2163
  %cmp = icmp eq %struct.rtx_def* %3, %x, !dbg !2165
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2166
  %cmp6 = icmp eq %struct.rtx_def* %4, %x, !dbg !2167
  %or.cond = or i1 %cmp, %cmp6, !dbg !2168
  br i1 %or.cond, label %cleanup71, label %lor.lhs.false7, !dbg !2168

lor.lhs.false7:                                   ; preds = %sw.bb5
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2169
  %cmp8 = icmp eq %struct.rtx_def* %5, %x, !dbg !2170
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !2171

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %6 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2172
  %tobool9 = icmp eq i8 %6, 0, !dbg !2172
  br i1 %tobool9, label %if.end, label %cleanup71, !dbg !2173

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false7
  %7 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2174
  %cmp10 = icmp ne %struct.rtx_def* %7, %x, !dbg !2176
  %. = zext i1 %cmp10 to i32, !dbg !2177
  br label %cleanup71, !dbg !2177

sw.bb14:                                          ; preds = %entry
  %bf.clear17 = and i32 %bf.load, 134217728, !dbg !2178
  %tobool18 = icmp eq i32 %bf.clear17, 0, !dbg !2178
  br i1 %tobool18, label %sw.epilog, label %cleanup71, !dbg !2180

sw.epilog:                                        ; preds = %sw.bb14, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !2181
  %arrayidx21 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2181
  %8 = load i8*, i8** %arrayidx21, align 8, !dbg !2181
  call void @llvm.dbg.value(metadata i8* %8, metadata !2147, metadata !DIExpression()), !dbg !2154
  %arrayidx23 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2182
  %9 = load i8, i8* %arrayidx23, align 1, !dbg !2182
  call void @llvm.dbg.value(metadata i8 %9, metadata !2146, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2154
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !2183
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !2183
  %10 = zext i8 %9 to i64, !dbg !2186
  br label %for.cond, !dbg !2186

for.cond:                                         ; preds = %for.inc69, %sw.epilog
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc69 ], [ %10, %sw.epilog ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !2187
  call void @llvm.dbg.value(metadata i32 undef, metadata !2146, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2154
  %cmp25 = icmp sgt i64 %indvars.iv1, 0, !dbg !2188
  br i1 %cmp25, label %for.body, label %cleanup71.loopexit, !dbg !2189

for.body:                                         ; preds = %for.cond
  %arrayidx28 = getelementptr inbounds i8, i8* %8, i64 %indvars.iv.next2, !dbg !2190
  %11 = load i8, i8* %arrayidx28, align 1, !dbg !2190
  %cmp30 = icmp eq i8 %11, 101, !dbg !2191
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !2192

if.then32:                                        ; preds = %for.body
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next2, !dbg !2183
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !2183
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !2183
  %call38 = tail call i32 @rtx_unstable_p(%struct.rtx_def* %12) #7, !dbg !2193
  %tobool39 = icmp eq i32 %call38, 0, !dbg !2193
  br i1 %tobool39, label %for.inc69, label %cleanup71.loopexit, !dbg !2194

if.else:                                          ; preds = %for.body
  %cmp45 = icmp eq i8 %11, 69, !dbg !2195
  br i1 %cmp45, label %for.cond48.preheader, label %for.inc69, !dbg !2196

for.cond48.preheader:                             ; preds = %if.else
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next2, !dbg !2197
  %rt_rtvec60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtvec_def**, !dbg !2197
  br label %for.cond48, !dbg !2201

for.cond48:                                       ; preds = %for.cond48.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond48.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !2202
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2148, metadata !DIExpression()), !dbg !2203
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec60, align 8, !dbg !2204
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !2204
  %14 = load i32, i32* %num_elem, align 8, !dbg !2204
  %15 = sext i32 %14 to i64, !dbg !2205
  %cmp53 = icmp slt i64 %indvars.iv, %15, !dbg !2205
  br i1 %cmp53, label %for.body55, label %cleanup, !dbg !2201

for.body55:                                       ; preds = %for.cond48
  %arrayidx62 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv, !dbg !2197
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8, !dbg !2197
  %call63 = tail call i32 @rtx_unstable_p(%struct.rtx_def* %16) #7, !dbg !2206
  %tobool64 = icmp eq i32 %call63, 0, !dbg !2206
  br i1 %tobool64, label %for.inc, label %cleanup, !dbg !2207

for.inc:                                          ; preds = %for.body55
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2208
  call void @llvm.dbg.value(metadata i32 undef, metadata !2148, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2203
  br label %for.cond48, !dbg !2209, !llvm.loop !2210

cleanup:                                          ; preds = %for.body55, %for.cond48
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body55 ], [ true, %for.cond48 ]
  br i1 %cleanup.dest.slot.0, label %for.inc69, label %cleanup71.loopexit

for.inc69:                                        ; preds = %if.then32, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2146, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2154
  br label %for.cond, !dbg !2212, !llvm.loop !2213

cleanup71.loopexit:                               ; preds = %cleanup, %for.cond, %if.then32
  %retval.4.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then32 ], [ 1, %cleanup ]
  br label %cleanup71, !dbg !2215

cleanup71:                                        ; preds = %cleanup71.loopexit, %land.lhs.true, %sw.bb14, %if.end, %sw.bb5, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %lor.end
  %retval.4 = phi i32 [ %2, %lor.end ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %sw.bb5 ], [ %., %if.end ], [ 1, %sw.bb14 ], [ %retval.4.ph, %cleanup71.loopexit ], !dbg !2154
  ret i32 %retval.4, !dbg !2215
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def* %x, i8 zeroext %for_alias) local_unnamed_addr #4 !dbg !2216 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2220, metadata !DIExpression()), !dbg !2231
  call void @llvm.dbg.value(metadata i8 %for_alias, metadata !2221, metadata !DIExpression()), !dbg !2231
  %tobool = icmp eq %struct.rtx_def* %x, null, !dbg !2232
  br i1 %tobool, label %cleanup100, label %if.end, !dbg !2234

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2235
  %bf.load = load i32, i32* %0, align 8, !dbg !2235
  %bf.clear = and i32 %bf.load, 65535, !dbg !2235
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2222, metadata !DIExpression()), !dbg !2231
  %trunc = trunc i32 %bf.load to i16, !dbg !2236
  switch i16 %trunc, label %sw.epilog [
    i16 43, label %sw.bb
    i16 35, label %cleanup100
    i16 30, label %cleanup100
    i16 32, label %cleanup100
    i16 31, label %cleanup100
    i16 33, label %cleanup100
    i16 45, label %cleanup100
    i16 44, label %cleanup100
    i16 37, label %sw.bb7
    i16 122, label %sw.bb22
    i16 17, label %sw.bb43
  ], !dbg !2236

sw.bb:                                            ; preds = %if.end
  %bf.clear2 = and i32 %bf.load, 67108864, !dbg !2237
  %tobool3 = icmp eq i32 %bf.clear2, 0, !dbg !2237
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !2239

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2240
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2240
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2240
  %call = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %1, i8 zeroext %for_alias) #7, !dbg !2241
  %tobool4 = icmp ne i8 %call, 0, !dbg !2239
  %phitmp1 = zext i1 %tobool4 to i8, !dbg !2239
  br label %lor.end, !dbg !2239

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %2 = phi i8 [ 1, %sw.bb ], [ %phitmp1, %lor.rhs ]
  br label %cleanup100, !dbg !2242

sw.bb7:                                           ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2243
  %cmp = icmp eq %struct.rtx_def* %3, %x, !dbg !2245
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2246
  %cmp9 = icmp eq %struct.rtx_def* %4, %x, !dbg !2247
  %or.cond = or i1 %cmp, %cmp9, !dbg !2248
  br i1 %or.cond, label %cleanup100, label %lor.lhs.false11, !dbg !2248

lor.lhs.false11:                                  ; preds = %sw.bb7
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2249
  %cmp12 = icmp eq %struct.rtx_def* %5, %x, !dbg !2250
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !2251

land.lhs.true:                                    ; preds = %lor.lhs.false11
  %6 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2252
  %tobool15 = icmp eq i8 %6, 0, !dbg !2252
  br i1 %tobool15, label %if.end17, label %cleanup100, !dbg !2253

if.end17:                                         ; preds = %land.lhs.true, %lor.lhs.false11
  %7 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2254
  %cmp18 = icmp ne %struct.rtx_def* %7, %x, !dbg !2256
  %. = zext i1 %cmp18 to i8, !dbg !2257
  br label %cleanup100, !dbg !2257

sw.bb22:                                          ; preds = %if.end
  %tobool23 = icmp eq i8 %for_alias, 0, !dbg !2258
  br i1 %tobool23, label %land.lhs.true24, label %lor.rhs32, !dbg !2259

land.lhs.true24:                                  ; preds = %sw.bb22
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2260
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !2260
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !2260
  %call29 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %8, i8 zeroext 0) #7, !dbg !2261
  %tobool31 = icmp eq i8 %call29, 0, !dbg !2261
  br i1 %tobool31, label %lor.rhs32, label %lor.end40, !dbg !2262

lor.rhs32:                                        ; preds = %land.lhs.true24, %sw.bb22
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2263
  %rt_rtx36 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !2263
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !2263
  %call37 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %10, i8 zeroext %for_alias) #7, !dbg !2264
  %tobool39 = icmp ne i8 %call37, 0, !dbg !2262
  %phitmp = zext i1 %tobool39 to i8, !dbg !2262
  br label %lor.end40, !dbg !2262

lor.end40:                                        ; preds = %land.lhs.true24, %lor.rhs32
  %11 = phi i8 [ 1, %land.lhs.true24 ], [ %phitmp, %lor.rhs32 ]
  br label %cleanup100, !dbg !2265

sw.bb43:                                          ; preds = %if.end
  %bf.clear46 = and i32 %bf.load, 134217728, !dbg !2266
  %tobool47 = icmp eq i32 %bf.clear46, 0, !dbg !2266
  br i1 %tobool47, label %sw.epilog, label %cleanup100, !dbg !2268

sw.epilog:                                        ; preds = %sw.bb43, %if.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !2269
  %arrayidx50 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2269
  %12 = load i8*, i8** %arrayidx50, align 8, !dbg !2269
  call void @llvm.dbg.value(metadata i8* %12, metadata !2224, metadata !DIExpression()), !dbg !2231
  %arrayidx52 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2270
  %13 = load i8, i8* %arrayidx52, align 1, !dbg !2270
  call void @llvm.dbg.value(metadata i8 %13, metadata !2223, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2231
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !2271
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !2271
  %14 = zext i8 %13 to i64, !dbg !2274
  br label %for.cond, !dbg !2274

for.cond:                                         ; preds = %for.inc98, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc98 ], [ %14, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2223, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2231
  %cmp54 = icmp sgt i64 %indvars.iv2, 0, !dbg !2276
  br i1 %cmp54, label %for.body, label %cleanup100.loopexit, !dbg !2277

for.body:                                         ; preds = %for.cond
  %arrayidx57 = getelementptr inbounds i8, i8* %12, i64 %indvars.iv.next3, !dbg !2278
  %15 = load i8, i8* %arrayidx57, align 1, !dbg !2278
  %cmp59 = icmp eq i8 %15, 101, !dbg !2279
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !2280

if.then61:                                        ; preds = %for.body
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %indvars.iv.next3, !dbg !2271
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !2271
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !2271
  %call67 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %16, i8 zeroext %for_alias) #7, !dbg !2281
  %tobool68 = icmp eq i8 %call67, 0, !dbg !2281
  br i1 %tobool68, label %for.inc98, label %cleanup100.loopexit, !dbg !2282

if.else:                                          ; preds = %for.body
  %cmp74 = icmp eq i8 %15, 69, !dbg !2283
  br i1 %cmp74, label %for.cond77.preheader, label %for.inc98, !dbg !2284

for.cond77.preheader:                             ; preds = %if.else
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %indvars.iv.next3, !dbg !2285
  %rt_rtvec89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtvec_def**, !dbg !2285
  br label %for.cond77, !dbg !2289

for.cond77:                                       ; preds = %for.cond77.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond77.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !2290
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2225, metadata !DIExpression()), !dbg !2291
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec89, align 8, !dbg !2292
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !2292
  %18 = load i32, i32* %num_elem, align 8, !dbg !2292
  %19 = sext i32 %18 to i64, !dbg !2293
  %cmp82 = icmp slt i64 %indvars.iv, %19, !dbg !2293
  br i1 %cmp82, label %for.body84, label %cleanup, !dbg !2289

for.body84:                                       ; preds = %for.cond77
  %arrayidx91 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv, !dbg !2285
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91, align 8, !dbg !2285
  %call92 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %20, i8 zeroext %for_alias) #7, !dbg !2294
  %tobool93 = icmp eq i8 %call92, 0, !dbg !2294
  br i1 %tobool93, label %for.inc, label %cleanup, !dbg !2295

for.inc:                                          ; preds = %for.body84
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2296
  call void @llvm.dbg.value(metadata i32 undef, metadata !2225, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2291
  br label %for.cond77, !dbg !2297, !llvm.loop !2298

cleanup:                                          ; preds = %for.body84, %for.cond77
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body84 ], [ true, %for.cond77 ]
  br i1 %cleanup.dest.slot.0, label %for.inc98, label %cleanup100.loopexit

for.inc98:                                        ; preds = %if.then61, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2223, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2231
  br label %for.cond, !dbg !2300, !llvm.loop !2301

cleanup100.loopexit:                              ; preds = %cleanup, %for.cond, %if.then61
  %retval.4.ph = phi i8 [ 0, %for.cond ], [ 1, %if.then61 ], [ 1, %cleanup ]
  br label %cleanup100, !dbg !2303

cleanup100:                                       ; preds = %cleanup100.loopexit, %land.lhs.true, %sw.bb43, %entry, %if.end17, %sw.bb7, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %lor.end40, %lor.end
  %retval.4 = phi i8 [ %11, %lor.end40 ], [ %2, %lor.end ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %sw.bb7 ], [ %., %if.end17 ], [ 1, %sw.bb43 ], [ %retval.4.ph, %cleanup100.loopexit ], !dbg !2231
  ret i8 %retval.4, !dbg !2303
}

; Function Attrs: nounwind uwtable
define dso_local i32 @rtx_addr_can_trap_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2304 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2306, metadata !DIExpression()), !dbg !2307
  %call = tail call fastcc i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %x, i64 0, i64 0, i32 0, i8 zeroext 0) #7, !dbg !2308
  ret i32 %call, !dbg !2309
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %x, i64 %offset, i64 %size, i32 %mode, i8 zeroext %unaligned_mems) unnamed_addr #4 !dbg !2310 {
entry:
  br label %tailrecurse, !dbg !2325

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %x.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2315, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata i64 %size, metadata !2316, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2317, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata i8 %unaligned_mems, metadata !2318, metadata !DIExpression()), !dbg !2326
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !2327
  %bf.load = load i32, i32* %0, align 8, !dbg !2327
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !2319, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2326
  %trunc = trunc i32 %bf.load to i16, !dbg !2328
  switch i16 %trunc, label %sw.epilog [
    i16 45, label %sw.bb
    i16 44, label %cleanup165.loopexit
    i16 37, label %sw.bb79
    i16 35, label %sw.bb104
    i16 49, label %sw.bb109
    i16 122, label %sw.bb153
    i16 78, label %sw.bb153
    i16 74, label %sw.bb159
    i16 75, label %sw.bb159
    i16 76, label %sw.bb159
    i16 77, label %sw.bb159
    i16 79, label %sw.bb159
  ], !dbg !2328

sw.bb:                                            ; preds = %tailrecurse
  %x.tr.lcssa21 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %bf.load.lcssa17 = phi i32 [ %bf.load, %tailrecurse ], !dbg !2327
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa21, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa21, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa21, metadata !2314, metadata !DIExpression()), !dbg !2326
  %tobool = icmp slt i32 %bf.load.lcssa17, 0, !dbg !2329
  br i1 %tobool, label %cleanup165, label %if.end, !dbg !2331

if.end:                                           ; preds = %sw.bb
  %bf.clear4 = and i32 %bf.load.lcssa17, 67108864, !dbg !2332
  %tobool5 = icmp eq i32 %bf.clear4, 0, !dbg !2332
  br i1 %tobool5, label %if.then6, label %cleanup165, !dbg !2333

if.then6:                                         ; preds = %if.end
  %cmp = icmp slt i64 %offset, 0, !dbg !2334
  br i1 %cmp, label %cleanup165, label %if.end8, !dbg !2336

if.end8:                                          ; preds = %if.then6
  %cmp9 = icmp eq i64 %size, 0, !dbg !2337
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2339

if.then10:                                        ; preds = %if.end8
  %idxprom = zext i32 %mode to i64, !dbg !2340
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2340
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2340
  %conv11 = zext i8 %1 to i64, !dbg !2340
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !2316, metadata !DIExpression()), !dbg !2326
  br label %if.end12, !dbg !2341

if.end12:                                         ; preds = %if.then10, %if.end8
  %size.addr.0 = phi i64 [ %conv11, %if.then10 ], [ %size, %if.end8 ]
  call void @llvm.dbg.value(metadata i64 %size.addr.0, metadata !2316, metadata !DIExpression()), !dbg !2326
  %cmp13 = icmp eq i64 %size.addr.0, 0, !dbg !2342
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !2344

if.then15:                                        ; preds = %if.end12
  %cmp16 = icmp ne i64 %offset, 0, !dbg !2345
  br label %cleanup165, !dbg !2346

if.end18:                                         ; preds = %if.end12
  br i1 true, label %cond.false, label %if.end18.cond.end_crit_edge, !dbg !2347

if.end18.cond.end_crit_edge:                      ; preds = %if.end18
  br label %cond.end, !dbg !2347

cond.false:                                       ; preds = %if.end18
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa21, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2347
  %rt_tree = bitcast %union.rtunion_def* %2 to %union.tree_node**, !dbg !2347
  %3 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !2347
  %4 = bitcast %union.tree_node* %3 to %struct.tree_string*, !dbg !2347
  br label %cond.end, !dbg !2347

cond.end:                                         ; preds = %if.end18.cond.end_crit_edge, %cond.false
  %5 = phi %struct.tree_string* [ %4, %cond.false ], [ undef, %if.end18.cond.end_crit_edge ], !dbg !2347
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ undef, %if.end18.cond.end_crit_edge ], !dbg !2347
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !2320, metadata !DIExpression()), !dbg !2348
  %tobool24 = icmp eq %union.tree_node* %cond, null, !dbg !2349
  br i1 %tobool24, label %if.end65, label %if.else, !dbg !2351

if.else:                                          ; preds = %cond.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2352
  %bf.load26 = load i64, i64* %6, align 8, !dbg !2352
  %bf.cast = and i64 %bf.load26, 65535, !dbg !2352
  %arrayidx29 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2352
  %7 = load i32, i32* %arrayidx29, align 4, !dbg !2352
  %cmp30 = icmp eq i32 %7, 3, !dbg !2352
  br i1 %cmp30, label %land.lhs.true, label %if.else44, !dbg !2354

land.lhs.true:                                    ; preds = %if.else
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2355
  %8 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !2355
  %tobool32 = icmp eq %union.tree_node* %8, null, !dbg !2355
  br i1 %tobool32, label %if.else44, label %if.then33, !dbg !2356

if.then33:                                        ; preds = %land.lhs.true
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %8, i32 0) #6, !dbg !2357
  %tobool36 = icmp eq i32 %call, 0, !dbg !2357
  br i1 %tobool36, label %if.end65, label %cond.true37, !dbg !2357

cond.true37:                                      ; preds = %if.then33
  %9 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !2358
  %call40 = tail call i64 @tree_low_cst(%union.tree_node* %9, i32 0) #6, !dbg !2359
  br label %if.end65, !dbg !2357

if.else44:                                        ; preds = %land.lhs.true, %if.else
  %cmp49 = icmp eq i64 %bf.cast, 28, !dbg !2360
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !2362

if.then51:                                        ; preds = %if.else44
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %5, i64 0, i32 1, !dbg !2363
  %10 = load i32, i32* %length, align 8, !dbg !2363
  %conv52 = sext i32 %10 to i64, !dbg !2363
  call void @llvm.dbg.value(metadata i64 %conv52, metadata !2324, metadata !DIExpression()), !dbg !2348
  br label %if.end65, !dbg !2364

if.else53:                                        ; preds = %if.else44
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2365
  %11 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !2365
  %12 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !2365
  %size_unit55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 3, !dbg !2365
  %13 = load %union.tree_node*, %union.tree_node** %size_unit55, align 8, !dbg !2365
  %tobool56 = icmp eq %union.tree_node* %13, null, !dbg !2365
  br i1 %tobool56, label %if.end65, label %if.then57, !dbg !2367

if.then57:                                        ; preds = %if.else53
  %14 = bitcast %struct.tree_type* %12 to %union.tree_node*, !dbg !2367
  %call60 = tail call i64 @int_size_in_bytes(%union.tree_node* %14) #6, !dbg !2368
  call void @llvm.dbg.value(metadata i64 %call60, metadata !2324, metadata !DIExpression()), !dbg !2348
  br label %if.end65, !dbg !2369

if.end65:                                         ; preds = %if.then33, %if.else53, %cond.end, %cond.true37, %if.then57, %if.then51
  %decl_size.3 = phi i64 [ -1, %cond.end ], [ %call40, %cond.true37 ], [ -1, %if.then33 ], [ %conv52, %if.then51 ], [ %call60, %if.then57 ], [ -1, %if.else53 ], !dbg !2370
  call void @llvm.dbg.value(metadata i64 %decl_size.3, metadata !2324, metadata !DIExpression()), !dbg !2348
  %cmp66 = icmp slt i64 %decl_size.3, 1, !dbg !2371
  br i1 %cmp66, label %cond.true68, label %cond.false71, !dbg !2372

cond.true68:                                      ; preds = %if.end65
  %cmp69 = icmp ne i64 %offset, 0, !dbg !2373
  br label %cleanup165, !dbg !2372

cond.false71:                                     ; preds = %if.end65
  %add = add nsw i64 %size.addr.0, %offset, !dbg !2374
  %cmp72 = icmp sgt i64 %add, %decl_size.3, !dbg !2375
  br label %cleanup165, !dbg !2372

sw.bb79:                                          ; preds = %tailrecurse
  %x.tr.lcssa23 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa23, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa23, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa23, metadata !2314, metadata !DIExpression()), !dbg !2326
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2376
  %cmp80 = icmp eq %struct.rtx_def* %15, %x.tr.lcssa23, !dbg !2378
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2379
  %cmp82 = icmp eq %struct.rtx_def* %16, %x.tr.lcssa23, !dbg !2380
  %or.cond = or i1 %cmp80, %cmp82, !dbg !2381
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2382
  %cmp85 = icmp eq %struct.rtx_def* %17, %x.tr.lcssa23, !dbg !2383
  %or.cond1 = or i1 %or.cond, %cmp85, !dbg !2381
  br i1 %or.cond1, label %cleanup165, label %lor.lhs.false87, !dbg !2381

lor.lhs.false87:                                  ; preds = %sw.bb79
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2384
  %cmp88 = icmp eq %struct.rtx_def* %18, %x.tr.lcssa23, !dbg !2385
  br i1 %cmp88, label %land.lhs.true90, label %if.end94, !dbg !2386

land.lhs.true90:                                  ; preds = %lor.lhs.false87
  %19 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2387
  %tobool92 = icmp eq i8 %19, 0, !dbg !2387
  br i1 %tobool92, label %if.end94, label %cleanup165, !dbg !2388

if.end94:                                         ; preds = %land.lhs.true90, %lor.lhs.false87
  %call95 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa23) #7, !dbg !2389
  %cmp96 = icmp ugt i32 %call95, 52, !dbg !2391
  br i1 %cmp96, label %land.lhs.true98, label %if.end103, !dbg !2392

land.lhs.true98:                                  ; preds = %if.end94
  %call99 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa23) #7, !dbg !2393
  %cmp100 = icmp ult i32 %call99, 58, !dbg !2394
  br i1 %cmp100, label %cleanup165, label %if.end103, !dbg !2395

if.end103:                                        ; preds = %land.lhs.true98, %if.end94
  br label %cleanup165, !dbg !2396

sw.bb104:                                         ; preds = %tailrecurse
  %arrayidx107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2397
  br label %tailrecurse.backedge, !dbg !2325

tailrecurse.backedge:                             ; preds = %sw.bb104, %sw.bb153, %sw.bb159
  %x.tr.be.in.in = phi %union.rtunion_def* [ %arrayidx107, %sw.bb104 ], [ %27, %sw.bb153 ], [ %arrayidx162, %sw.bb159 ]
  %x.tr.be.in = bitcast %union.rtunion_def* %x.tr.be.in.in to %struct.rtx_def**, !dbg !2398
  %x.tr.be = load %struct.rtx_def*, %struct.rtx_def** %x.tr.be.in, align 8, !dbg !2398
  br label %tailrecurse, !dbg !2326

sw.bb109:                                         ; preds = %tailrecurse
  %x.tr.lcssa24 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa24, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa24, metadata !2314, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa24, metadata !2314, metadata !DIExpression()), !dbg !2326
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2399
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !2399
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !2399
  %21 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2401
  %cmp114 = icmp eq %struct.rtx_def* %20, %21, !dbg !2402
  br i1 %cmp114, label %land.lhs.true116, label %sw.bb109.if.end128_crit_edge, !dbg !2403

sw.bb109.if.end128_crit_edge:                     ; preds = %sw.bb109
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa24, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2404
  %.phi.trans.insert7 = bitcast %union.rtunion_def* %.phi.trans.insert to i32**, !dbg !2404
  %.pre = load i32*, i32** %.phi.trans.insert7, align 8, !dbg !2406
  %bf.load133.pre = load i32, i32* %.pre, align 8, !dbg !2406
  br label %if.end128, !dbg !2403

land.lhs.true116:                                 ; preds = %sw.bb109
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa24, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2407
  %23 = bitcast %union.rtunion_def* %22 to i32**, !dbg !2407
  %24 = load i32*, i32** %23, align 8, !dbg !2407
  %bf.load121 = load i32, i32* %24, align 8, !dbg !2407
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !2407
  %idxprom123 = zext i32 %bf.clear122 to i64, !dbg !2407
  %arrayidx124 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom123, !dbg !2407
  %25 = load i32, i32* %arrayidx124, align 4, !dbg !2407
  %cmp125 = icmp eq i32 %25, 9, !dbg !2407
  br i1 %cmp125, label %cleanup165, label %if.end128, !dbg !2408

if.end128:                                        ; preds = %sw.bb109.if.end128_crit_edge, %land.lhs.true116
  %.in = phi i32* [ %.pre, %sw.bb109.if.end128_crit_edge ], [ %24, %land.lhs.true116 ]
  %bf.load133 = phi i32 [ %bf.load133.pre, %sw.bb109.if.end128_crit_edge ], [ %bf.load121, %land.lhs.true116 ], !dbg !2406
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !2406
  %cmp135 = icmp eq i32 %bf.clear134, 30, !dbg !2406
  br i1 %cmp135, label %land.lhs.true137, label %if.end152, !dbg !2409

land.lhs.true137:                                 ; preds = %if.end128
  %u146 = getelementptr inbounds i32, i32* %.in, i64 2, !dbg !2410
  %arrayidx147 = bitcast i32* %u146 to i64*, !dbg !2410
  %26 = load i64, i64* %arrayidx147, align 8, !dbg !2410
  %add148 = add nsw i64 %26, %offset, !dbg !2411
  %call149 = tail call fastcc i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %20, i64 %add148, i64 %size, i32 %mode, i8 zeroext %unaligned_mems) #7, !dbg !2412
  %tobool150 = icmp eq i32 %call149, 0, !dbg !2412
  br i1 %tobool150, label %cleanup165, label %if.end152, !dbg !2413

if.end152:                                        ; preds = %land.lhs.true137, %if.end128
  br label %cleanup165, !dbg !2414

sw.bb153:                                         ; preds = %tailrecurse, %tailrecurse
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2415
  br label %tailrecurse.backedge, !dbg !2416

sw.bb159:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2417
  br label %tailrecurse.backedge, !dbg !2418

sw.epilog:                                        ; preds = %tailrecurse
  br label %cleanup165, !dbg !2419

cleanup165.loopexit:                              ; preds = %tailrecurse
  br label %cleanup165, !dbg !2420

cleanup165:                                       ; preds = %cleanup165.loopexit, %if.end, %land.lhs.true90, %land.lhs.true137, %land.lhs.true116, %land.lhs.true98, %sw.bb79, %if.then15, %if.then6, %cond.false71, %cond.true68, %sw.bb, %sw.epilog, %if.end152, %if.end103
  %retval.1.shrunk = phi i1 [ true, %sw.epilog ], [ true, %if.end152 ], [ true, %if.end103 ], [ true, %sw.bb ], [ %cmp16, %if.then15 ], [ true, %if.then6 ], [ %cmp69, %cond.true68 ], [ %cmp72, %cond.false71 ], [ false, %if.end ], [ false, %land.lhs.true90 ], [ false, %sw.bb79 ], [ false, %land.lhs.true98 ], [ false, %land.lhs.true116 ], [ false, %land.lhs.true137 ], [ false, %cleanup165.loopexit ]
  %retval.1 = zext i1 %retval.1.shrunk to i32, !dbg !2326
  ret i32 %retval.1, !dbg !2420
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @nonzero_address_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2421 {
entry:
  br label %tailrecurse, !dbg !2427

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %x.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !2425, metadata !DIExpression()), !dbg !2429
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !2430
  %bf.load = load i32, i32* %0, align 8, !dbg !2430
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !2426, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2429
  %trunc = trunc i32 %bf.load to i16, !dbg !2431
  switch i16 %trunc, label %sw.epilog [
    i16 45, label %sw.bb
    i16 44, label %cleanup.loopexit
    i16 37, label %sw.bb3
    i16 35, label %sw.bb23
    i16 49, label %sw.bb25
    i16 78, label %sw.bb59
    i16 75, label %cleanup.loopexit
    i16 74, label %sw.bb85
    i16 76, label %sw.bb85
    i16 77, label %sw.bb85
    i16 79, label %sw.bb85
    i16 122, label %sw.bb91
  ], !dbg !2431

sw.bb:                                            ; preds = %tailrecurse
  %bf.load.lcssa14 = phi i32 [ %bf.load, %tailrecurse ], !dbg !2430
  %bf.load1.lobit = lshr i32 %bf.load.lcssa14, 31, !dbg !2432
  %1 = trunc i32 %bf.load1.lobit to i8, !dbg !2432
  %.not = xor i8 %1, 1, !dbg !2432
  br label %cleanup, !dbg !2433

sw.bb3:                                           ; preds = %tailrecurse
  %x.tr.lcssa20 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa20, metadata !2425, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa20, metadata !2425, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa20, metadata !2425, metadata !DIExpression()), !dbg !2429
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2434
  %cmp = icmp eq %struct.rtx_def* %2, %x.tr.lcssa20, !dbg !2436
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2437
  %cmp5 = icmp eq %struct.rtx_def* %3, %x.tr.lcssa20, !dbg !2438
  %or.cond = or i1 %cmp, %cmp5, !dbg !2439
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2440
  %cmp8 = icmp eq %struct.rtx_def* %4, %x.tr.lcssa20, !dbg !2441
  %or.cond1 = or i1 %or.cond, %cmp8, !dbg !2439
  br i1 %or.cond1, label %cleanup, label %lor.lhs.false10, !dbg !2439

lor.lhs.false10:                                  ; preds = %sw.bb3
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2442
  %cmp11 = icmp eq %struct.rtx_def* %5, %x.tr.lcssa20, !dbg !2443
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !2444

land.lhs.true:                                    ; preds = %lor.lhs.false10
  %6 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2445
  %tobool14 = icmp eq i8 %6, 0, !dbg !2445
  br i1 %tobool14, label %if.end, label %cleanup, !dbg !2446

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false10
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa20) #7, !dbg !2447
  %cmp15 = icmp ugt i32 %call, 52, !dbg !2449
  br i1 %cmp15, label %land.lhs.true17, label %if.end22, !dbg !2450

land.lhs.true17:                                  ; preds = %if.end
  %call18 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa20) #7, !dbg !2451
  %cmp19 = icmp ult i32 %call18, 58, !dbg !2452
  br i1 %cmp19, label %cleanup, label %if.end22, !dbg !2453

if.end22:                                         ; preds = %land.lhs.true17, %if.end
  br label %cleanup, !dbg !2454

sw.bb23:                                          ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2455
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2455
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2455
  br label %tailrecurse.backedge, !dbg !2427

tailrecurse.backedge:                             ; preds = %sw.bb23, %if.then34, %if.end78, %sw.bb85, %sw.bb91
  %x.tr.be = phi %struct.rtx_def* [ %7, %sw.bb23 ], [ %11, %if.then34 ], [ %18, %if.end78 ], [ %19, %sw.bb85 ], [ %21, %sw.bb91 ]
  br label %tailrecurse, !dbg !2429

sw.bb25:                                          ; preds = %tailrecurse
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2456
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !2456
  %10 = load i32*, i32** %9, align 8, !dbg !2456
  %bf.load30 = load i32, i32* %10, align 8, !dbg !2456
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !2456
  %cmp32 = icmp eq i32 %bf.clear31, 30, !dbg !2456
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2458
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !2458
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !2458
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !2459

if.then34:                                        ; preds = %sw.bb25
  br label %tailrecurse.backedge, !dbg !2460

if.else:                                          ; preds = %sw.bb25
  %bf.clear31.lcssa = phi i32 [ %bf.clear31, %sw.bb25 ], !dbg !2456
  %.lcssa = phi %struct.rtx_def* [ %11, %sw.bb25 ], !dbg !2458
  %12 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2461
  %cmp44 = icmp eq %struct.rtx_def* %.lcssa, %12, !dbg !2463
  br i1 %cmp44, label %land.lhs.true46, label %if.end58, !dbg !2464

land.lhs.true46:                                  ; preds = %if.else
  %idxprom = zext i32 %bf.clear31.lcssa to i64, !dbg !2465
  %arrayidx53 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2465
  %13 = load i32, i32* %arrayidx53, align 4, !dbg !2465
  %cmp54 = icmp eq i32 %13, 9, !dbg !2465
  br i1 %cmp54, label %cleanup, label %if.end58, !dbg !2466

if.end58:                                         ; preds = %if.else, %land.lhs.true46
  br label %cleanup, !dbg !2467

sw.bb59:                                          ; preds = %tailrecurse
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2468
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !2468
  %16 = load i32*, i32** %15, align 8, !dbg !2468
  %bf.load64 = load i32, i32* %16, align 8, !dbg !2468
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !2468
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !2468
  br i1 %cmp66, label %land.lhs.true68, label %if.end78, !dbg !2470

land.lhs.true68:                                  ; preds = %sw.bb59
  %u73 = getelementptr inbounds i32, i32* %16, i64 2, !dbg !2471
  %arrayidx74 = bitcast i32* %u73 to i64*, !dbg !2471
  %17 = load i64, i64* %arrayidx74, align 8, !dbg !2471
  %cmp75 = icmp sgt i64 %17, 0, !dbg !2472
  br i1 %cmp75, label %cleanup.loopexit, label %if.end78, !dbg !2473

if.end78:                                         ; preds = %land.lhs.true68, %sw.bb59
  %arrayidx81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2474
  %rt_rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**, !dbg !2474
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !2474
  br label %tailrecurse.backedge, !dbg !2475

sw.bb85:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2476
  %rt_rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !2476
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !2476
  br label %tailrecurse.backedge, !dbg !2477

sw.bb91:                                          ; preds = %tailrecurse
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2478
  %rt_rtx95 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !2478
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !2478
  br label %tailrecurse.backedge, !dbg !2479

sw.epilog:                                        ; preds = %tailrecurse
  br label %cleanup, !dbg !2480

cleanup.loopexit:                                 ; preds = %land.lhs.true68, %tailrecurse, %tailrecurse
  br label %cleanup, !dbg !2481

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %land.lhs.true46, %land.lhs.true17, %sw.bb3, %sw.epilog, %if.end58, %if.end22, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ 0, %if.end58 ], [ 0, %if.end22 ], [ %.not, %sw.bb ], [ 1, %land.lhs.true ], [ 1, %sw.bb3 ], [ 1, %land.lhs.true17 ], [ 1, %land.lhs.true46 ], [ 1, %cleanup.loopexit ], !dbg !2429
  ret i8 %retval.0, !dbg !2481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !2482 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2486, metadata !DIExpression()), !dbg !2487
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2488
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2488
  %0 = load i32, i32* %rt_uint, align 8, !dbg !2488
  ret i32 %0, !dbg !2489
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %x, i8 zeroext %for_alias) local_unnamed_addr #4 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2492, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.value(metadata i8 %for_alias, metadata !2493, metadata !DIExpression()), !dbg !2503
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !2504
  br i1 %cmp, label %cleanup58, label %if.end, !dbg !2506

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2507
  %bf.load = load i32, i32* %0, align 8, !dbg !2507
  %bf.clear = and i32 %bf.load, 65535, !dbg !2507
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2494, metadata !DIExpression()), !dbg !2503
  %cmp1 = icmp eq i32 %bf.clear, 43, !dbg !2508
  br i1 %cmp1, label %if.then2, label %if.end7, !dbg !2510

if.then2:                                         ; preds = %if.end
  %bf.clear4 = and i32 %bf.load, 16711680, !dbg !2511
  %cmp5 = icmp eq i32 %bf.clear4, 65536, !dbg !2512
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !2513

lor.rhs:                                          ; preds = %if.then2
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2514
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2514
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2514
  %call = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %1, i8 zeroext %for_alias) #7, !dbg !2515
  %tobool = icmp ne i8 %call, 0, !dbg !2513
  %phitmp = zext i1 %tobool to i8, !dbg !2513
  br label %lor.end, !dbg !2513

lor.end:                                          ; preds = %lor.rhs, %if.then2
  %2 = phi i8 [ 1, %if.then2 ], [ %phitmp, %lor.rhs ]
  br label %cleanup58, !dbg !2516

if.end7:                                          ; preds = %if.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !2517
  %arrayidx8 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2517
  %3 = load i8*, i8** %arrayidx8, align 8, !dbg !2517
  call void @llvm.dbg.value(metadata i8* %3, metadata !2496, metadata !DIExpression()), !dbg !2503
  %arrayidx10 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2518
  %4 = load i8, i8* %arrayidx10, align 1, !dbg !2518
  call void @llvm.dbg.value(metadata i8 %4, metadata !2495, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2503
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !2519
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !2519
  %5 = zext i8 %4 to i64, !dbg !2522
  br label %for.cond, !dbg !2522

for.cond:                                         ; preds = %for.inc56, %if.end7
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc56 ], [ %5, %if.end7 ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !2523
  call void @llvm.dbg.value(metadata i32 undef, metadata !2495, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2503
  %cmp12 = icmp sgt i64 %indvars.iv1, 0, !dbg !2524
  br i1 %cmp12, label %for.body, label %cleanup58.loopexit, !dbg !2525

for.body:                                         ; preds = %for.cond
  %arrayidx15 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv.next2, !dbg !2526
  %6 = load i8, i8* %arrayidx15, align 1, !dbg !2526
  %cmp17 = icmp eq i8 %6, 101, !dbg !2527
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !2528

if.then19:                                        ; preds = %for.body
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 %indvars.iv.next2, !dbg !2519
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !2519
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !2519
  %call25 = tail call zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %7, i8 zeroext %for_alias) #7, !dbg !2529
  %tobool26 = icmp eq i8 %call25, 0, !dbg !2529
  br i1 %tobool26, label %for.inc56, label %cleanup58.loopexit, !dbg !2530

if.else:                                          ; preds = %for.body
  %cmp32 = icmp eq i8 %6, 69, !dbg !2531
  br i1 %cmp32, label %for.cond35.preheader, label %for.inc56, !dbg !2532

for.cond35.preheader:                             ; preds = %if.else
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 %indvars.iv.next2, !dbg !2533
  %rt_rtvec47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtvec_def**, !dbg !2533
  br label %for.cond35, !dbg !2537

for.cond35:                                       ; preds = %for.cond35.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond35.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !2538
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2497, metadata !DIExpression()), !dbg !2539
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !2540
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !2540
  %9 = load i32, i32* %num_elem, align 8, !dbg !2540
  %10 = sext i32 %9 to i64, !dbg !2541
  %cmp40 = icmp slt i64 %indvars.iv, %10, !dbg !2541
  br i1 %cmp40, label %for.body42, label %cleanup, !dbg !2537

for.body42:                                       ; preds = %for.cond35
  %arrayidx49 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !2533
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !2533
  %call50 = tail call zeroext i8 @rtx_addr_varies_p(%struct.rtx_def* %11, i8 zeroext %for_alias) #7, !dbg !2542
  %tobool51 = icmp eq i8 %call50, 0, !dbg !2542
  br i1 %tobool51, label %for.inc, label %cleanup, !dbg !2543

for.inc:                                          ; preds = %for.body42
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2544
  call void @llvm.dbg.value(metadata i32 undef, metadata !2497, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2539
  br label %for.cond35, !dbg !2545, !llvm.loop !2546

cleanup:                                          ; preds = %for.body42, %for.cond35
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body42 ], [ true, %for.cond35 ]
  br i1 %cleanup.dest.slot.0, label %for.inc56, label %cleanup58.loopexit

for.inc56:                                        ; preds = %if.then19, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2495, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2503
  br label %for.cond, !dbg !2548, !llvm.loop !2549

cleanup58.loopexit:                               ; preds = %cleanup, %for.cond, %if.then19
  %retval.4.ph = phi i8 [ 0, %for.cond ], [ 1, %if.then19 ], [ 1, %cleanup ]
  br label %cleanup58, !dbg !2551

cleanup58:                                        ; preds = %cleanup58.loopexit, %entry, %lor.end
  %retval.4 = phi i8 [ %2, %lor.end ], [ 0, %entry ], [ %retval.4.ph, %cleanup58.loopexit ], !dbg !2503
  ret i8 %retval.4, !dbg !2551
}

; Function Attrs: nounwind uwtable
define dso_local i64 @get_integer_term(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2552 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2556, metadata !DIExpression()), !dbg !2557
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2558
  %bf.load = load i32, i32* %0, align 8, !dbg !2558
  %bf.clear = and i32 %bf.load, 65535, !dbg !2558
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !2560
  br i1 %cmp, label %if.then, label %if.end, !dbg !2561

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2562
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2562
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2556, metadata !DIExpression()), !dbg !2557
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2563
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !2565
  br label %if.end, !dbg !2566

if.end:                                           ; preds = %if.then, %entry
  %bf.load19 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !2565
  %x.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !2556, metadata !DIExpression()), !dbg !2557
  %bf.clear2 = and i32 %bf.load19, 65535, !dbg !2565
  %cmp3 = icmp eq i32 %bf.clear2, 50, !dbg !2567
  br i1 %cmp3, label %land.lhs.true, label %if.end18, !dbg !2568

land.lhs.true:                                    ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2569
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !2569
  %4 = load i32*, i32** %3, align 8, !dbg !2569
  %bf.load8 = load i32, i32* %4, align 8, !dbg !2569
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2569
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2569
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !2570

if.then11:                                        ; preds = %land.lhs.true
  %u16 = getelementptr inbounds i32, i32* %4, i64 2, !dbg !2571
  %arrayidx17 = bitcast i32* %u16 to i64*, !dbg !2571
  %5 = load i64, i64* %arrayidx17, align 8, !dbg !2571
  %sub = sub nsw i64 0, %5, !dbg !2572
  br label %return, !dbg !2573

if.end18:                                         ; preds = %land.lhs.true, %if.end
  %cmp21 = icmp eq i32 %bf.clear2, 49, !dbg !2574
  br i1 %cmp21, label %land.lhs.true22, label %return, !dbg !2576

land.lhs.true22:                                  ; preds = %if.end18
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2577
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !2577
  %8 = load i32*, i32** %7, align 8, !dbg !2577
  %bf.load27 = load i32, i32* %8, align 8, !dbg !2577
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !2577
  %cmp29 = icmp eq i32 %bf.clear28, 30, !dbg !2577
  br i1 %cmp29, label %if.then30, label %return, !dbg !2578

if.then30:                                        ; preds = %land.lhs.true22
  %u35 = getelementptr inbounds i32, i32* %8, i64 2, !dbg !2579
  %arrayidx37 = bitcast i32* %u35 to i64*, !dbg !2579
  %9 = load i64, i64* %arrayidx37, align 8, !dbg !2579
  br label %return, !dbg !2580

return:                                           ; preds = %if.end18, %land.lhs.true22, %if.then30, %if.then11
  %retval.0 = phi i64 [ %sub, %if.then11 ], [ %9, %if.then30 ], [ 0, %land.lhs.true22 ], [ 0, %if.end18 ], !dbg !2557
  ret i64 %retval.0, !dbg !2581
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_related_value(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2582 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2586, metadata !DIExpression()), !dbg !2587
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2588
  %bf.load = load i32, i32* %0, align 8, !dbg !2588
  %bf.clear = and i32 %bf.load, 65535, !dbg !2588
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !2590
  br i1 %cmp, label %if.end, label %return, !dbg !2591

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2592
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2592
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2586, metadata !DIExpression()), !dbg !2587
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2593
  %bf.load1 = load i32, i32* %2, align 8, !dbg !2593
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2593
  %cmp3 = icmp eq i32 %bf.clear2, 49, !dbg !2595
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !2596

land.lhs.true:                                    ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2597
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !2597
  %5 = load i32*, i32** %4, align 8, !dbg !2597
  %bf.load8 = load i32, i32* %5, align 8, !dbg !2597
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2597
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2597
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2598

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2599
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !2599
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !2599
  br label %return, !dbg !2600

if.else:                                          ; preds = %land.lhs.true, %if.end
  %cmp18 = icmp eq i32 %bf.clear2, 50, !dbg !2601
  br i1 %cmp18, label %land.lhs.true19, label %return, !dbg !2603

land.lhs.true19:                                  ; preds = %if.else
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2604
  %8 = bitcast %union.rtunion_def* %7 to i32**, !dbg !2604
  %9 = load i32*, i32** %8, align 8, !dbg !2604
  %bf.load24 = load i32, i32* %9, align 8, !dbg !2604
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !2604
  %cmp26 = icmp eq i32 %bf.clear25, 30, !dbg !2604
  br i1 %cmp26, label %if.then27, label %return, !dbg !2605

if.then27:                                        ; preds = %land.lhs.true19
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2606
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !2606
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !2606
  br label %return, !dbg !2607

return:                                           ; preds = %entry, %land.lhs.true19, %if.else, %if.then27, %if.then11
  %retval.0 = phi %struct.rtx_def* [ %6, %if.then11 ], [ %10, %if.then27 ], [ null, %entry ], [ null, %if.else ], [ null, %land.lhs.true19 ], !dbg !2587
  ret %struct.rtx_def* %retval.0, !dbg !2608
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @offset_within_block_p(%struct.rtx_def* %symbol, i64 %offset) local_unnamed_addr #4 !dbg !2609 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !2613, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.value(metadata i64 %offset, metadata !2614, metadata !DIExpression()), !dbg !2616
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 0, !dbg !2617
  %bf.load = load i32, i32* %0, align 8, !dbg !2617
  %bf.clear = and i32 %bf.load, 65535, !dbg !2617
  %cmp = icmp eq i32 %bf.clear, 45, !dbg !2619
  br i1 %cmp, label %if.end, label %cleanup, !dbg !2620

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %offset, 0, !dbg !2621
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !2623

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp sgt i64 %offset, 0, !dbg !2624
  br i1 %cmp4, label %if.then5, label %if.end26, !dbg !2626

if.then5:                                         ; preds = %if.end3
  %bf.clear7 = and i32 %bf.load, 67108864, !dbg !2627
  %tobool = icmp eq i32 %bf.clear7, 0, !dbg !2627
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !2630

land.lhs.true:                                    ; preds = %if.then5
  %call = tail call i32 @get_pool_mode(%struct.rtx_def* %symbol) #6, !dbg !2631
  %idxprom = zext i32 %call to i64, !dbg !2631
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2631
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2631
  %conv9 = zext i8 %1 to i64, !dbg !2632
  %cmp10 = icmp sgt i64 %conv9, %offset, !dbg !2633
  br i1 %cmp10, label %cleanup, label %land.lhs.true.if.end13_crit_edge, !dbg !2634

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  %bf.load14.pre = load i32, i32* %0, align 8, !dbg !2635
  br label %if.end13, !dbg !2634

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %if.then5
  %bf.load14 = phi i32 [ %bf.load14.pre, %land.lhs.true.if.end13_crit_edge ], [ %bf.load, %if.then5 ], !dbg !2635
  %bf.clear16 = and i32 %bf.load14, 67108864, !dbg !2635
  %tobool17 = icmp eq i32 %bf.clear16, 0, !dbg !2635
  br i1 %tobool17, label %cond.false, label %cond.end, !dbg !2635

cond.false:                                       ; preds = %if.end13
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2635
  %rt_tree = bitcast %union.rtunion_def* %2 to %union.tree_node**, !dbg !2635
  %3 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !2635
  br label %cond.end, !dbg !2635

cond.end:                                         ; preds = %if.end13, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ null, %if.end13 ], !dbg !2635
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !2615, metadata !DIExpression()), !dbg !2616
  %tobool19 = icmp eq %union.tree_node* %cond, null, !dbg !2636
  br i1 %tobool19, label %if.end26, label %land.lhs.true20, !dbg !2638

land.lhs.true20:                                  ; preds = %cond.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2639
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2639
  %call21 = tail call i64 @int_size_in_bytes(%union.tree_node* %4) #6, !dbg !2640
  %cmp22 = icmp sgt i64 %call21, %offset, !dbg !2641
  br i1 %cmp22, label %cleanup, label %if.end26, !dbg !2642

if.end26:                                         ; preds = %cond.end, %land.lhs.true20, %if.end3
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2643
  %rt_int = bitcast %union.rtunion_def* %5 to i32*, !dbg !2643
  %6 = load i32, i32* %rt_int, align 8, !dbg !2643
  %7 = trunc i32 %6 to i8, !dbg !2643
  %cmp30 = icmp slt i8 %7, 0, !dbg !2643
  br i1 %cmp30, label %land.lhs.true32, label %if.end51, !dbg !2645

land.lhs.true32:                                  ; preds = %if.end26
  %block = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 1, !dbg !2646
  %8 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !2646
  %tobool34 = icmp eq %struct.object_block* %8, null, !dbg !2646
  br i1 %tobool34, label %if.end51, label %land.lhs.true35, !dbg !2647

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %offset38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 2, !dbg !2648
  %9 = load i64, i64* %offset38, align 8, !dbg !2648
  %cmp39 = icmp sgt i64 %9, -1, !dbg !2649
  br i1 %cmp39, label %land.lhs.true41, label %if.end51, !dbg !2650

land.lhs.true41:                                  ; preds = %land.lhs.true35
  %add = add i64 %9, %offset, !dbg !2651
  %size = getelementptr inbounds %struct.object_block, %struct.object_block* %8, i64 0, i32 2, !dbg !2652
  %10 = load i64, i64* %size, align 8, !dbg !2652
  %cmp48 = icmp ult i64 %add, %10, !dbg !2653
  br i1 %cmp48, label %cleanup, label %if.end51, !dbg !2654

if.end51:                                         ; preds = %land.lhs.true32, %land.lhs.true41, %land.lhs.true35, %if.end26
  br label %cleanup, !dbg !2655

cleanup:                                          ; preds = %entry, %land.lhs.true41, %land.lhs.true20, %land.lhs.true, %if.end, %if.end51
  %retval.0 = phi i8 [ 0, %if.end51 ], [ 0, %entry ], [ 1, %if.end ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true20 ], [ 1, %land.lhs.true41 ], !dbg !2616
  ret i8 %retval.0, !dbg !2656
}

declare dso_local i32 @get_pool_mode(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @split_const(%struct.rtx_def* %x, %struct.rtx_def** %base_out, %struct.rtx_def** %offset_out) local_unnamed_addr #4 !dbg !2657 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2661, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.value(metadata %struct.rtx_def** %base_out, metadata !2662, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.value(metadata %struct.rtx_def** %offset_out, metadata !2663, metadata !DIExpression()), !dbg !2664
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2665
  %bf.load = load i32, i32* %0, align 8, !dbg !2665
  %bf.clear = and i32 %bf.load, 65535, !dbg !2665
  %cmp = icmp eq i32 %bf.clear, 35, !dbg !2667
  br i1 %cmp, label %if.then, label %if.end20, !dbg !2668

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2669
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2669
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2669
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2661, metadata !DIExpression()), !dbg !2664
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !2671
  %bf.load1 = load i32, i32* %2, align 8, !dbg !2671
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2671
  %cmp3 = icmp eq i32 %bf.clear2, 49, !dbg !2673
  br i1 %cmp3, label %land.lhs.true, label %if.end20, !dbg !2674

land.lhs.true:                                    ; preds = %if.then
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2675
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !2675
  %5 = load i32*, i32** %4, align 8, !dbg !2675
  %bf.load8 = load i32, i32* %5, align 8, !dbg !2675
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2675
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !2675
  br i1 %cmp10, label %if.then11, label %if.end20, !dbg !2676

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2677
  %6 = bitcast %union.rtunion_def* %arrayidx14 to i64*, !dbg !2677
  %7 = load i64, i64* %6, align 8, !dbg !2677
  %8 = bitcast %struct.rtx_def** %base_out to i64*, !dbg !2679
  store i64 %7, i64* %8, align 8, !dbg !2679
  %9 = bitcast %union.rtunion_def* %3 to i64*, !dbg !2680
  %10 = load i64, i64* %9, align 8, !dbg !2680
  %11 = bitcast %struct.rtx_def** %offset_out to i64*, !dbg !2681
  store i64 %10, i64* %11, align 8, !dbg !2681
  br label %return, !dbg !2682

if.end20:                                         ; preds = %if.then, %land.lhs.true, %entry
  %x.addr.0 = phi %struct.rtx_def* [ %x, %entry ], [ %1, %land.lhs.true ], [ %1, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !2661, metadata !DIExpression()), !dbg !2664
  store %struct.rtx_def* %x.addr.0, %struct.rtx_def** %base_out, align 8, !dbg !2683
  %12 = load i64, i64* bitcast (%struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64) to i64*), align 16, !dbg !2684
  %13 = bitcast %struct.rtx_def** %offset_out to i64*, !dbg !2685
  store i64 %12, i64* %13, align 8, !dbg !2685
  br label %return, !dbg !2686

return:                                           ; preds = %if.end20, %if.then11
  ret void, !dbg !2686
}

; Function Attrs: nounwind uwtable
define dso_local i32 @count_occurrences(%struct.rtx_def* %x, %struct.rtx_def* %find, i32 %count_dest) local_unnamed_addr #4 !dbg !2687 {
entry:
  %tobool28 = icmp eq i32 %count_dest, 0, !dbg !2699
  br i1 %tobool28, label %entry.entry.split_crit_edge, label %entry.split.us, !dbg !2702

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %tailrecurse, !dbg !2702

entry.split.us:                                   ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %find, metadata !2692, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count_dest, metadata !2693, metadata !DIExpression()), !dbg !2703
  %cmp.us = icmp eq %struct.rtx_def* %x, %find, !dbg !2704
  br i1 %cmp.us, label %cleanup.loopexit1.us-lcssa.us, label %if.end.us, !dbg !2706

if.end.us:                                        ; preds = %entry.split.us
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2707
  %bf.load.us = load i32, i32* %0, align 8, !dbg !2707
  %trunc.us = trunc i32 %bf.load.us to i16, !dbg !2708
  switch i16 %trunc.us, label %sw.epilog.loopexit.us-lcssa.us [
    i16 37, label %cleanup.loopexit1.us-lcssa.us
    i16 30, label %cleanup.loopexit1.us-lcssa.us
    i16 32, label %cleanup.loopexit1.us-lcssa.us
    i16 31, label %cleanup.loopexit1.us-lcssa.us
    i16 33, label %cleanup.loopexit1.us-lcssa.us
    i16 45, label %cleanup.loopexit1.us-lcssa.us
    i16 12, label %cleanup.loopexit1.us-lcssa.us
    i16 36, label %cleanup.loopexit1.us-lcssa.us
    i16 46, label %cleanup.loopexit1.us-lcssa.us
    i16 3, label %sw.bb1.us-lcssa.us
    i16 43, label %sw.bb13.us-lcssa.us
    i16 23, label %sw.bb21.us
  ], !dbg !2708

sw.bb21.us:                                       ; preds = %if.end.us
  br label %sw.epilog.loopexit.us-lcssa.us, !dbg !2709

cleanup.loopexit1.us-lcssa.us:                    ; preds = %if.end.us, %if.end.us, %if.end.us, %if.end.us, %if.end.us, %if.end.us, %if.end.us, %if.end.us, %if.end.us, %entry.split.us
  %retval.0.ph.ph.us = phi i32 [ 1, %entry.split.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ], [ 0, %if.end.us ]
  br label %cleanup.loopexit1, !dbg !2710

sw.epilog.loopexit.us-lcssa.us:                   ; preds = %sw.bb21.us, %if.end.us
  br label %sw.epilog.loopexit, !dbg !2707

sw.bb1.us-lcssa.us:                               ; preds = %if.end.us
  br label %sw.bb1, !dbg !2711

sw.bb13.us-lcssa.us:                              ; preds = %if.end.us
  br label %sw.bb13, !dbg !2707

tailrecurse:                                      ; preds = %if.then29, %entry.entry.split_crit_edge
  %x.tr = phi %struct.rtx_def* [ %x, %entry.entry.split_crit_edge ], [ %8, %if.then29 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %find, metadata !2692, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count_dest, metadata !2693, metadata !DIExpression()), !dbg !2703
  %cmp = icmp eq %struct.rtx_def* %x.tr, %find, !dbg !2704
  br i1 %cmp, label %cleanup.loopexit1.us-lcssa, label %if.end, !dbg !2706

if.end:                                           ; preds = %tailrecurse
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !2707
  %bf.load = load i32, i32* %1, align 8, !dbg !2707
  %trunc = trunc i32 %bf.load to i16, !dbg !2708
  switch i16 %trunc, label %sw.epilog.loopexit.us-lcssa [
    i16 37, label %cleanup.loopexit1.us-lcssa
    i16 30, label %cleanup.loopexit1.us-lcssa
    i16 32, label %cleanup.loopexit1.us-lcssa
    i16 31, label %cleanup.loopexit1.us-lcssa
    i16 33, label %cleanup.loopexit1.us-lcssa
    i16 45, label %cleanup.loopexit1.us-lcssa
    i16 12, label %cleanup.loopexit1.us-lcssa
    i16 36, label %cleanup.loopexit1.us-lcssa
    i16 46, label %cleanup.loopexit1.us-lcssa
    i16 3, label %sw.bb1.us-lcssa
    i16 43, label %sw.bb13.us-lcssa
    i16 23, label %sw.bb21
  ], !dbg !2708

sw.bb1.us-lcssa:                                  ; preds = %if.end
  %x.tr.lcssa20 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa20, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa20, metadata !2691, metadata !DIExpression()), !dbg !2703
  br label %sw.bb1, !dbg !2711

sw.bb1:                                           ; preds = %sw.bb1.us-lcssa.us, %sw.bb1.us-lcssa
  %x.tr.lcssa3 = phi %struct.rtx_def* [ %x.tr.lcssa20, %sw.bb1.us-lcssa ], [ %x, %sw.bb1.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa3, metadata !2691, metadata !DIExpression()), !dbg !2703
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2711
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2711
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2711
  %call = tail call i32 @count_occurrences(%struct.rtx_def* %2, %struct.rtx_def* %find, i32 %count_dest) #7, !dbg !2712
  call void @llvm.dbg.value(metadata i32 %call, metadata !2698, metadata !DIExpression()), !dbg !2703
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2713
  %rt_rtx5 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !2713
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !2713
  %tobool = icmp eq %struct.rtx_def* %4, null, !dbg !2713
  br i1 %tobool, label %cleanup, label %if.then6, !dbg !2715

if.then6:                                         ; preds = %sw.bb1
  %call11 = tail call i32 @count_occurrences(%struct.rtx_def* nonnull %4, %struct.rtx_def* %find, i32 %count_dest) #7, !dbg !2716
  %add = add nsw i32 %call, %call11, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %add, metadata !2698, metadata !DIExpression()), !dbg !2703
  ret i32 %add, !dbg !2710

sw.bb13.us-lcssa:                                 ; preds = %if.end
  %bf.load.lcssa24 = phi i32 [ %bf.load, %if.end ], !dbg !2707
  %x.tr.lcssa21 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa21, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa21, metadata !2691, metadata !DIExpression()), !dbg !2703
  br label %sw.bb13, !dbg !2707

sw.bb13:                                          ; preds = %sw.bb13.us-lcssa.us, %sw.bb13.us-lcssa
  %bf.load.lcssa = phi i32 [ %bf.load.lcssa24, %sw.bb13.us-lcssa ], [ %bf.load.us, %sw.bb13.us-lcssa.us ]
  %x.tr.lcssa4 = phi %struct.rtx_def* [ %x.tr.lcssa21, %sw.bb13.us-lcssa ], [ %x, %sw.bb13.us-lcssa.us ]
  %bf.clear.le = and i32 %bf.load.lcssa, 65535, !dbg !2707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa4, metadata !2691, metadata !DIExpression()), !dbg !2703
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %find, i64 0, i32 0, !dbg !2718
  %bf.load14 = load i32, i32* %5, align 8, !dbg !2718
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !2718
  %cmp16 = icmp eq i32 %bf.clear15, 43, !dbg !2718
  br i1 %cmp16, label %land.lhs.true, label %sw.epilog, !dbg !2720

land.lhs.true:                                    ; preds = %sw.bb13
  %call17 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x.tr.lcssa4, %struct.rtx_def* %find) #6, !dbg !2721
  %tobool18 = icmp eq i32 %call17, 0, !dbg !2721
  br i1 %tobool18, label %sw.epilog, label %cleanup, !dbg !2722

sw.bb21:                                          ; preds = %if.end
  %arrayidx24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2723
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !2723
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !2723
  %cmp26 = icmp eq %struct.rtx_def* %6, %find, !dbg !2724
  br i1 %cmp26, label %if.then29, label %sw.epilog.loopexit.us-lcssa, !dbg !2709

if.then29:                                        ; preds = %sw.bb21
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2725
  %rt_rtx33 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !2725
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2725
  br label %tailrecurse, !dbg !2702

sw.epilog.loopexit.us-lcssa:                      ; preds = %sw.bb21, %if.end
  %bf.load.lcssa22 = phi i32 [ %bf.load, %sw.bb21 ], [ %bf.load, %if.end ], !dbg !2707
  %x.tr.lcssa19 = phi %struct.rtx_def* [ %x.tr, %sw.bb21 ], [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !2691, metadata !DIExpression()), !dbg !2703
  br label %sw.epilog.loopexit, !dbg !2707

sw.epilog.loopexit:                               ; preds = %sw.epilog.loopexit.us-lcssa.us, %sw.epilog.loopexit.us-lcssa
  %bf.load.lcssa10 = phi i32 [ %bf.load.lcssa22, %sw.epilog.loopexit.us-lcssa ], [ %bf.load.us, %sw.epilog.loopexit.us-lcssa.us ]
  %x.tr.lcssa2 = phi %struct.rtx_def* [ %x.tr.lcssa19, %sw.epilog.loopexit.us-lcssa ], [ %x, %sw.epilog.loopexit.us-lcssa.us ]
  %bf.clear.le9 = and i32 %bf.load.lcssa10, 65535, !dbg !2707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa2, metadata !2691, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa2, metadata !2691, metadata !DIExpression()), !dbg !2703
  br label %sw.epilog, !dbg !2726

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %land.lhs.true, %sw.bb13
  %bf.clear8 = phi i32 [ %bf.clear.le9, %sw.epilog.loopexit ], [ %bf.clear.le, %land.lhs.true ], [ %bf.clear.le, %sw.bb13 ]
  %x.tr5 = phi %struct.rtx_def* [ %x.tr.lcssa2, %sw.epilog.loopexit ], [ %x.tr.lcssa4, %land.lhs.true ], [ %x.tr.lcssa4, %sw.bb13 ]
  %idxprom = zext i32 %bf.clear8 to i64, !dbg !2726
  %arrayidx36 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2726
  %9 = load i8*, i8** %arrayidx36, align 8, !dbg !2726
  call void @llvm.dbg.value(metadata i8* %9, metadata !2697, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 0, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 0, metadata !2694, metadata !DIExpression()), !dbg !2703
  %arrayidx38 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2727
  %10 = load i8, i8* %arrayidx38, align 1, !dbg !2727
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr5, i64 0, i32 1, !dbg !2730
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !2730
  %wide.trip.count = zext i8 %10 to i64, !dbg !2735
  br label %for.cond, !dbg !2736

for.cond:                                         ; preds = %for.inc69, %sw.epilog
  %indvars.iv17 = phi i64 [ %indvars.iv.next18, %for.inc69 ], [ 0, %sw.epilog ], !dbg !2737
  %format_ptr.0 = phi i8* [ %incdec.ptr, %for.inc69 ], [ %9, %sw.epilog ], !dbg !2703
  %count.1 = phi i32 [ %count.3, %for.inc69 ], [ 0, %sw.epilog ], !dbg !2738
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i8* %format_ptr.0, metadata !2697, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i64 %indvars.iv17, metadata !2694, metadata !DIExpression()), !dbg !2703
  %exitcond = icmp eq i64 %indvars.iv17, %wide.trip.count, !dbg !2735
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !2739

for.body:                                         ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %format_ptr.0, i64 1, !dbg !2740
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2697, metadata !DIExpression()), !dbg !2703
  %11 = load i8, i8* %format_ptr.0, align 1, !dbg !2741
  %conv41 = sext i8 %11 to i32, !dbg !2741
  switch i32 %conv41, label %for.inc69 [
    i32 101, label %sw.bb42
    i32 69, label %for.cond51.preheader
  ], !dbg !2742

for.cond51.preheader:                             ; preds = %for.body
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %indvars.iv17, !dbg !2730
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtvec_def**, !dbg !2730
  br label %for.cond51, !dbg !2743

sw.bb42:                                          ; preds = %for.body
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %indvars.iv17, !dbg !2744
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !2744
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !2744
  %call48 = tail call i32 @count_occurrences(%struct.rtx_def* %12, %struct.rtx_def* %find, i32 %count_dest) #7, !dbg !2745
  %add49 = add nsw i32 %count.1, %call48, !dbg !2746
  call void @llvm.dbg.value(metadata i32 %add49, metadata !2698, metadata !DIExpression()), !dbg !2703
  br label %for.inc69, !dbg !2747

for.cond51:                                       ; preds = %for.cond51.preheader, %for.body58
  %indvars.iv = phi i64 [ 0, %for.cond51.preheader ], [ %indvars.iv.next, %for.body58 ], !dbg !2748
  %count.2 = phi i32 [ %count.1, %for.cond51.preheader ], [ %add67, %for.body58 ], !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.2, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2695, metadata !DIExpression()), !dbg !2703
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2749
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !2749
  %14 = load i32, i32* %num_elem, align 8, !dbg !2749
  %15 = sext i32 %14 to i64, !dbg !2750
  %cmp56 = icmp slt i64 %indvars.iv, %15, !dbg !2750
  br i1 %cmp56, label %for.body58, label %for.inc69.loopexit, !dbg !2743

for.body58:                                       ; preds = %for.cond51
  %arrayidx65 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv, !dbg !2751
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8, !dbg !2751
  %call66 = tail call i32 @count_occurrences(%struct.rtx_def* %16, %struct.rtx_def* %find, i32 %count_dest) #7, !dbg !2752
  %add67 = add nsw i32 %count.2, %call66, !dbg !2753
  call void @llvm.dbg.value(metadata i32 %add67, metadata !2698, metadata !DIExpression()), !dbg !2703
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2754
  call void @llvm.dbg.value(metadata i32 undef, metadata !2695, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2703
  br label %for.cond51, !dbg !2755, !llvm.loop !2756

for.inc69.loopexit:                               ; preds = %for.cond51
  %count.2.lcssa = phi i32 [ %count.2, %for.cond51 ], !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.2.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.2.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.2.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  br label %for.inc69, !dbg !2758

for.inc69:                                        ; preds = %for.inc69.loopexit, %sw.bb42, %for.body
  %count.3 = phi i32 [ %count.1, %for.body ], [ %add49, %sw.bb42 ], [ %count.2.lcssa, %for.inc69.loopexit ], !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.3, metadata !2698, metadata !DIExpression()), !dbg !2703
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !2758
  call void @llvm.dbg.value(metadata i32 undef, metadata !2694, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2703
  br label %for.cond, !dbg !2759, !llvm.loop !2760

cleanup.loopexit:                                 ; preds = %for.cond
  %count.1.lcssa = phi i32 [ %count.1, %for.cond ], !dbg !2738
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !2698, metadata !DIExpression()), !dbg !2703
  br label %cleanup, !dbg !2710

cleanup.loopexit1.us-lcssa:                       ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %tailrecurse
  %retval.0.ph.ph = phi i32 [ 1, %tailrecurse ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ]
  br label %cleanup.loopexit1, !dbg !2710

cleanup.loopexit1:                                ; preds = %cleanup.loopexit1.us-lcssa.us, %cleanup.loopexit1.us-lcssa
  %retval.0.ph = phi i32 [ %retval.0.ph.ph, %cleanup.loopexit1.us-lcssa ], [ %retval.0.ph.ph.us, %cleanup.loopexit1.us-lcssa.us ]
  br label %cleanup, !dbg !2710

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %sw.bb1, %land.lhs.true
  %retval.0 = phi i32 [ %call, %sw.bb1 ], [ 1, %land.lhs.true ], [ %count.1.lcssa, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !2703
  ret i32 %retval.0, !dbg !2710
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %in) local_unnamed_addr #4 !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !2766, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in, metadata !2767, metadata !DIExpression()), !dbg !2777
  %cmp = icmp eq %struct.rtx_def* %in, null, !dbg !2778
  br i1 %cmp, label %cleanup77, label %if.end, !dbg !2780

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %struct.rtx_def* %reg, %in, !dbg !2781
  br i1 %cmp1, label %cleanup77, label %if.end3, !dbg !2783

if.end3:                                          ; preds = %if.end
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 0, !dbg !2784
  %bf.load = load i32, i32* %0, align 8, !dbg !2784
  %bf.clear = and i32 %bf.load, 65535, !dbg !2784
  %cmp4 = icmp eq i32 %bf.clear, 44, !dbg !2786
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2787

if.then5:                                         ; preds = %if.end3
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2788
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2788
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2788
  %cmp6 = icmp eq %struct.rtx_def* %1, %reg, !dbg !2789
  %conv = zext i1 %cmp6 to i32, !dbg !2789
  br label %cleanup77, !dbg !2790

if.end7:                                          ; preds = %if.end3
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2770, metadata !DIExpression()), !dbg !2777
  %trunc = trunc i32 %bf.load to i16, !dbg !2791
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %sw.bb
    i16 38, label %cleanup77
    i16 46, label %cleanup77
    i16 36, label %cleanup77
    i16 30, label %cleanup77
    i16 33, label %cleanup77
    i16 32, label %cleanup77
    i16 31, label %cleanup77
  ], !dbg !2791

sw.bb:                                            ; preds = %if.end7
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !2792
  %bf.load10 = load i32, i32* %2, align 8, !dbg !2792
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !2792
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !2792
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !2794

land.rhs:                                         ; preds = %sw.bb
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %in) #7, !dbg !2795
  %call14 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !2796
  %cmp15 = icmp eq i32 %call, %call14, !dbg !2797
  %phitmp = zext i1 %cmp15 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb
  %3 = phi i32 [ 0, %sw.bb ], [ %phitmp, %land.rhs ]
  br label %cleanup77, !dbg !2798

sw.epilog:                                        ; preds = %if.end7
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !2799
  %bf.load19 = load i32, i32* %4, align 8, !dbg !2799
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !2799
  %cmp21 = icmp eq i32 %bf.clear20, %bf.clear, !dbg !2801
  br i1 %cmp21, label %land.lhs.true, label %if.end25, !dbg !2802

land.lhs.true:                                    ; preds = %sw.epilog
  %call23 = tail call i32 @rtx_equal_p(%struct.rtx_def* %reg, %struct.rtx_def* nonnull %in) #6, !dbg !2803
  %tobool = icmp eq i32 %call23, 0, !dbg !2803
  br i1 %tobool, label %if.end25, label %cleanup77, !dbg !2804

if.end25:                                         ; preds = %land.lhs.true, %sw.epilog
  %idxprom = zext i32 %bf.clear to i64, !dbg !2805
  %arrayidx26 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2805
  %5 = load i8*, i8** %arrayidx26, align 8, !dbg !2805
  call void @llvm.dbg.value(metadata i8* %5, metadata !2768, metadata !DIExpression()), !dbg !2777
  %arrayidx28 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2806
  %6 = load i8, i8* %arrayidx28, align 1, !dbg !2806
  call void @llvm.dbg.value(metadata i8 %6, metadata !2769, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2777
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 1, !dbg !2807
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !2807
  %7 = zext i8 %6 to i64, !dbg !2809
  br label %for.cond, !dbg !2809

for.cond:                                         ; preds = %for.inc74, %if.end25
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc74 ], [ %7, %if.end25 ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !2810
  call void @llvm.dbg.value(metadata i32 undef, metadata !2769, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2777
  %cmp30 = icmp sgt i64 %indvars.iv1, 0, !dbg !2811
  br i1 %cmp30, label %for.body, label %cleanup77.loopexit, !dbg !2812

for.body:                                         ; preds = %for.cond
  %arrayidx33 = getelementptr inbounds i8, i8* %5, i64 %indvars.iv.next2, !dbg !2813
  %8 = load i8, i8* %arrayidx33, align 1, !dbg !2813
  %cmp35 = icmp eq i8 %8, 69, !dbg !2814
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !2815

if.then37:                                        ; preds = %for.body
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 %indvars.iv.next2, !dbg !2816
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtvec_def**, !dbg !2816
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2816
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 0, !dbg !2816
  %10 = load i32, i32* %num_elem, align 8, !dbg !2816
  call void @llvm.dbg.value(metadata i32 %10, metadata !2771, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2818
  %11 = sext i32 %10 to i64, !dbg !2819
  br label %for.cond43, !dbg !2819

for.cond43:                                       ; preds = %for.inc, %if.then37
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %11, %if.then37 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2820
  call void @llvm.dbg.value(metadata i32 undef, metadata !2771, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2818
  %cmp44 = icmp sgt i64 %indvars.iv, 0, !dbg !2821
  br i1 %cmp44, label %for.body46, label %cleanup, !dbg !2823

for.body46:                                       ; preds = %for.cond43
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2824
  %arrayidx53 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i64 0, i32 1, i64 %indvars.iv.next, !dbg !2824
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8, !dbg !2824
  %call54 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %13) #7, !dbg !2826
  %tobool55 = icmp eq i32 %call54, 0, !dbg !2826
  br i1 %tobool55, label %for.inc, label %cleanup, !dbg !2827

for.inc:                                          ; preds = %for.body46
  call void @llvm.dbg.value(metadata i32 undef, metadata !2771, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2818
  br label %for.cond43, !dbg !2828, !llvm.loop !2829

cleanup:                                          ; preds = %for.body46, %for.cond43
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body46 ], [ true, %for.cond43 ]
  br i1 %cleanup.dest.slot.0, label %for.inc74, label %cleanup77.loopexit

if.else:                                          ; preds = %for.body
  %cmp61 = icmp eq i8 %8, 101, !dbg !2831
  br i1 %cmp61, label %land.lhs.true63, label %for.inc74, !dbg !2832

land.lhs.true63:                                  ; preds = %if.else
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 %indvars.iv.next2, !dbg !2807
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !2807
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !2807
  %call69 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %14) #7, !dbg !2833
  %tobool70 = icmp eq i32 %call69, 0, !dbg !2833
  br i1 %tobool70, label %for.inc74, label %cleanup77.loopexit, !dbg !2834

for.inc74:                                        ; preds = %land.lhs.true63, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2769, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2777
  br label %for.cond, !dbg !2835, !llvm.loop !2836

cleanup77.loopexit:                               ; preds = %cleanup, %for.cond, %land.lhs.true63
  %retval.3.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true63 ], [ 1, %cleanup ]
  br label %cleanup77, !dbg !2838

cleanup77:                                        ; preds = %cleanup77.loopexit, %land.lhs.true, %if.end7, %if.end7, %if.end7, %if.end7, %if.end7, %if.end7, %if.end7, %if.end, %entry, %land.end, %if.then5
  %retval.3 = phi i32 [ %conv, %if.then5 ], [ %3, %land.end ], [ 0, %entry ], [ 1, %if.end ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 0, %if.end7 ], [ 1, %land.lhs.true ], [ %retval.3.ph, %cleanup77.loopexit ], !dbg !2777
  ret i32 %retval.3, !dbg !2838
}

; Function Attrs: nounwind uwtable
define dso_local i32 @no_labels_between_p(%struct.rtx_def* %beg, %struct.rtx_def* %end) local_unnamed_addr #4 !dbg !2839 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg, metadata !2841, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !2842, metadata !DIExpression()), !dbg !2844
  %cmp = icmp eq %struct.rtx_def* %beg, %end, !dbg !2845
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2847

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !2848

for.cond:                                         ; preds = %for.inc, %if.end
  %beg.pn = phi %struct.rtx_def* [ %beg, %if.end ], [ %p.0, %for.inc ]
  %p.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %beg.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2850
  %p.0.in = bitcast %union.rtunion_def* %p.0.in.in to %struct.rtx_def**, !dbg !2850
  %p.0 = load %struct.rtx_def*, %struct.rtx_def** %p.0.in, align 8, !dbg !2850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0, metadata !2843, metadata !DIExpression()), !dbg !2844
  %cmp1 = icmp eq %struct.rtx_def* %p.0, %end, !dbg !2851
  br i1 %cmp1, label %cleanup.loopexit, label %for.body, !dbg !2853

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 0, !dbg !2854
  %bf.load = load i32, i32* %0, align 8, !dbg !2854
  %bf.clear = and i32 %bf.load, 65535, !dbg !2854
  %cmp2 = icmp eq i32 %bf.clear, 12, !dbg !2854
  br i1 %cmp2, label %cleanup.loopexit, label %for.inc, !dbg !2856

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !2857, !llvm.loop !2858

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !2860

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !2844
  ret i32 %retval.0, !dbg !2860
}

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_used_between_p(%struct.rtx_def* %reg, %struct.rtx_def* %from_insn, %struct.rtx_def* %to_insn) local_unnamed_addr #4 !dbg !2861 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !2865, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_insn, metadata !2866, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_insn, metadata !2867, metadata !DIExpression()), !dbg !2869
  %cmp = icmp eq %struct.rtx_def* %from_insn, %to_insn, !dbg !2870
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2872

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !2873

for.cond:                                         ; preds = %for.inc, %if.end
  %from_insn.pn = phi %struct.rtx_def* [ %from_insn, %if.end ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from_insn.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2875
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !2875
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !2875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2868, metadata !DIExpression()), !dbg !2869
  %cmp1 = icmp eq %struct.rtx_def* %insn.0, %to_insn, !dbg !2876
  br i1 %cmp1, label %cleanup.loopexit, label %for.body, !dbg !2878

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2879
  %bf.load = load i32, i32* %0, align 8, !dbg !2879
  %bf.clear = and i32 %bf.load, 65535, !dbg !2879
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !2879
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !2879

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !2879
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !2879

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !2879
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !2879

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !2879
  br i1 %cmp13, label %land.lhs.true, label %for.inc, !dbg !2879

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %cmp16 = icmp eq i32 %bf.clear, 7, !dbg !2879
  br i1 %cmp16, label %for.inc, label %land.lhs.true17, !dbg !2881

land.lhs.true17:                                  ; preds = %land.lhs.true
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !2882
  %1 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 0, i64 0, !dbg !2882
  %rt_rtx21 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !2882
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !2882
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %2) #7, !dbg !2883
  %tobool = icmp eq i32 %call, 0, !dbg !2883
  br i1 %tobool, label %lor.lhs.false22, label %cleanup.loopexit, !dbg !2884

lor.lhs.false22:                                  ; preds = %land.lhs.true17
  %bf.load23 = load i32, i32* %0, align 8, !dbg !2885
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !2885
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !2885
  br i1 %cmp25, label %land.lhs.true26, label %for.inc, !dbg !2886

land.lhs.true26:                                  ; preds = %lor.lhs.false22
  %call27 = tail call i32 @find_reg_fusage(%struct.rtx_def* %insn.0, i32 24, %struct.rtx_def* %reg) #7, !dbg !2887
  %tobool28 = icmp eq i32 %call27, 0, !dbg !2887
  br i1 %tobool28, label %for.inc, label %cleanup.loopexit, !dbg !2888

for.inc:                                          ; preds = %land.lhs.true26, %lor.lhs.false10, %land.lhs.true, %lor.lhs.false22
  br label %for.cond, !dbg !2889, !llvm.loop !2890

cleanup.loopexit:                                 ; preds = %for.cond, %land.lhs.true17, %land.lhs.true26
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true17 ], [ 1, %land.lhs.true26 ]
  br label %cleanup, !dbg !2892

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !2869
  ret i32 %retval.0, !dbg !2892
}

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %in) local_unnamed_addr #4 !dbg !2893 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in, metadata !2896, metadata !DIExpression()), !dbg !2913
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 0, !dbg !2914
  %bf.load = load i32, i32* %0, align 8, !dbg !2914
  %bf.clear = and i32 %bf.load, 65535, !dbg !2914
  %idxprom = zext i32 %bf.clear to i64, !dbg !2914
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2914
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2914
  %cmp = icmp eq i32 %1, 9, !dbg !2914
  br i1 %cmp, label %cleanup149, label %recurse.preheader, !dbg !2916

recurse.preheader:                                ; preds = %entry
  br label %recurse, !dbg !2917

recurse:                                          ; preds = %recurse.preheader, %sw.bb
  %x.addr.0 = phi %struct.rtx_def* [ %3, %sw.bb ], [ %x, %recurse.preheader ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.label(metadata !2911), !dbg !2918
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !2919
  %bf.load1 = load i32, i32* %2, align 8, !dbg !2919
  %trunc = trunc i32 %bf.load1 to i16, !dbg !2917
  switch i16 %trunc, label %sw.default [
    i16 40, label %sw.bb
    i16 120, label %sw.bb
    i16 119, label %sw.bb
    i16 39, label %sw.bb4
    i16 37, label %sw.bb15
    i16 43, label %sw.bb30
    i16 38, label %sw.bb93
    i16 36, label %sw.bb93
    i16 46, label %sw.bb93
    i16 15, label %sw.bb95
  ], !dbg !2917

sw.bb:                                            ; preds = %recurse, %recurse, %recurse
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2920
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !2920
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2920
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !2895, metadata !DIExpression()), !dbg !2913
  br label %recurse, !dbg !2921

sw.bb4:                                           ; preds = %recurse
  %x.addr.0.lcssa38 = phi %struct.rtx_def* [ %x.addr.0, %recurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa38, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa38, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa38, metadata !2895, metadata !DIExpression()), !dbg !2913
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0.lcssa38, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2922
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !2922
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !2922
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !2922
  call void @llvm.dbg.value(metadata i32 %call, metadata !2897, metadata !DIExpression()), !dbg !2913
  %cmp9 = icmp ult i32 %call, 53, !dbg !2923
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2925

if.then10:                                        ; preds = %sw.bb4
  %call11 = tail call i32 @subreg_regno(%struct.rtx_def* %x.addr.0.lcssa38) #7, !dbg !2926
  call void @llvm.dbg.value(metadata i32 %call11, metadata !2897, metadata !DIExpression()), !dbg !2913
  br label %if.end12, !dbg !2927

if.end12:                                         ; preds = %if.then10, %sw.bb4
  %regno.0 = phi i32 [ %call11, %if.then10 ], [ %call, %sw.bb4 ], !dbg !2928
  call void @llvm.dbg.value(metadata i32 %regno.0, metadata !2897, metadata !DIExpression()), !dbg !2913
  %cmp13 = icmp ult i32 %regno.0, 53, !dbg !2929
  br i1 %cmp13, label %cond.true, label %cond.end, !dbg !2930

cond.true:                                        ; preds = %if.end12
  %call14 = tail call i32 @subreg_nregs(%struct.rtx_def* %x.addr.0.lcssa38) #7, !dbg !2931
  br label %cond.end, !dbg !2930

cond.end:                                         ; preds = %if.end12, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ 1, %if.end12 ], !dbg !2930
  %add = add i32 %regno.0, %cond, !dbg !2932
  call void @llvm.dbg.value(metadata i32 %add, metadata !2898, metadata !DIExpression()), !dbg !2913
  br label %do_reg, !dbg !2933

sw.bb15:                                          ; preds = %recurse
  %x.addr.0.lcssa39 = phi %struct.rtx_def* [ %x.addr.0, %recurse ]
  %.lcssa34 = phi i32* [ %2, %recurse ], !dbg !2919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa39, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa39, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa39, metadata !2895, metadata !DIExpression()), !dbg !2913
  %call16 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0.lcssa39) #7, !dbg !2934
  call void @llvm.dbg.value(metadata i32 %call16, metadata !2897, metadata !DIExpression()), !dbg !2913
  %call17 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0.lcssa39) #7, !dbg !2935
  %cmp18 = icmp ult i32 %call17, 53, !dbg !2935
  br i1 %cmp18, label %cond.true19, label %cond.false24, !dbg !2935

cond.true19:                                      ; preds = %sw.bb15
  %bf.load20 = load i32, i32* %.lcssa34, align 8, !dbg !2935
  %bf.lshr = lshr i32 %bf.load20, 16, !dbg !2935
  %bf.clear21 = and i32 %bf.lshr, 255, !dbg !2935
  %call22 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0.lcssa39) #7, !dbg !2935
  %call23 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear21, i32 %call22) #7, !dbg !2935
  br label %do_reg, !dbg !2935

cond.false24:                                     ; preds = %sw.bb15
  %call25 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0.lcssa39) #7, !dbg !2935
  %add26 = add i32 %call25, 1, !dbg !2935
  br label %do_reg, !dbg !2935

do_reg:                                           ; preds = %cond.true19, %cond.false24, %cond.end
  %endregno.0 = phi i32 [ %add, %cond.end ], [ %call23, %cond.true19 ], [ %add26, %cond.false24 ], !dbg !2928
  %regno.1 = phi i32 [ %regno.0, %cond.end ], [ %call16, %cond.true19 ], [ %call16, %cond.false24 ], !dbg !2928
  call void @llvm.dbg.value(metadata i32 %regno.1, metadata !2897, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata i32 %endregno.0, metadata !2898, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.label(metadata !2912), !dbg !2936
  %call29 = tail call i32 @refers_to_regno_p(i32 %regno.1, i32 %endregno.0, %struct.rtx_def* %in, %struct.rtx_def** null) #7, !dbg !2937
  br label %cleanup149, !dbg !2938

sw.bb30:                                          ; preds = %recurse
  %x.addr.0.lcssa40 = phi %struct.rtx_def* [ %x.addr.0, %recurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa40, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa40, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa40, metadata !2895, metadata !DIExpression()), !dbg !2913
  %cmp33 = icmp eq i32 %bf.clear, 43, !dbg !2939
  br i1 %cmp33, label %cleanup149, label %if.end35, !dbg !2941

if.end35:                                         ; preds = %sw.bb30
  %arrayidx39 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !2942
  %5 = load i8*, i8** %arrayidx39, align 8, !dbg !2942
  call void @llvm.dbg.value(metadata i8* %5, metadata !2899, metadata !DIExpression()), !dbg !2943
  %arrayidx43 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !2944
  %6 = load i8, i8* %arrayidx43, align 1, !dbg !2944
  call void @llvm.dbg.value(metadata i8 %6, metadata !2902, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2943
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 1, !dbg !2945
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !2945
  %7 = zext i8 %6 to i64, !dbg !2948
  br label %for.cond, !dbg !2948

for.cond:                                         ; preds = %for.inc88, %if.end35
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %for.inc88 ], [ %7, %if.end35 ]
  %indvars.iv.next25 = add nsw i64 %indvars.iv24, -1, !dbg !2949
  call void @llvm.dbg.value(metadata i32 undef, metadata !2902, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2943
  %cmp44 = icmp sgt i64 %indvars.iv24, 0, !dbg !2950
  br i1 %cmp44, label %for.body, label %cleanup149.loopexit, !dbg !2951

for.body:                                         ; preds = %for.cond
  %arrayidx47 = getelementptr inbounds i8, i8* %5, i64 %indvars.iv.next25, !dbg !2952
  %8 = load i8, i8* %arrayidx47, align 1, !dbg !2952
  %cmp49 = icmp eq i8 %8, 101, !dbg !2953
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !2954

if.then51:                                        ; preds = %for.body
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %indvars.iv.next25, !dbg !2945
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !2945
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !2945
  %call57 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x.addr.0.lcssa40, %struct.rtx_def* %9) #7, !dbg !2955
  %tobool = icmp eq i32 %call57, 0, !dbg !2955
  br i1 %tobool, label %for.inc88, label %cleanup149.loopexit, !dbg !2956

if.else:                                          ; preds = %for.body
  %cmp63 = icmp eq i8 %8, 69, !dbg !2957
  br i1 %cmp63, label %if.then65, label %for.inc88, !dbg !2958

if.then65:                                        ; preds = %if.else
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %indvars.iv.next25, !dbg !2959
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtvec_def**, !dbg !2959
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2959
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 0, !dbg !2959
  %11 = load i32, i32* %num_elem, align 8, !dbg !2959
  call void @llvm.dbg.value(metadata i32 %11, metadata !2903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2961
  %12 = sext i32 %11 to i64, !dbg !2962
  br label %for.cond71, !dbg !2962

for.cond71:                                       ; preds = %for.inc, %if.then65
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %12, %if.then65 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 undef, metadata !2903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2961
  %cmp72 = icmp sgt i64 %indvars.iv, 0, !dbg !2964
  br i1 %cmp72, label %for.body74, label %cleanup, !dbg !2966

for.body74:                                       ; preds = %for.cond71
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2967
  %arrayidx81 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv.next, !dbg !2967
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx81, align 8, !dbg !2967
  %call82 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x.addr.0.lcssa40, %struct.rtx_def* %14) #7, !dbg !2969
  %tobool83 = icmp eq i32 %call82, 0, !dbg !2969
  br i1 %tobool83, label %for.inc, label %cleanup, !dbg !2970

for.inc:                                          ; preds = %for.body74
  call void @llvm.dbg.value(metadata i32 undef, metadata !2903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2961
  br label %for.cond71, !dbg !2971, !llvm.loop !2972

cleanup:                                          ; preds = %for.body74, %for.cond71
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body74 ], [ true, %for.cond71 ]
  br i1 %cleanup.dest.slot.0, label %for.inc88, label %cleanup149.loopexit

for.inc88:                                        ; preds = %if.then51, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !2902, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2943
  br label %for.cond, !dbg !2974, !llvm.loop !2975

sw.bb93:                                          ; preds = %recurse, %recurse, %recurse
  %x.addr.0.lcssa41 = phi %struct.rtx_def* [ %x.addr.0, %recurse ], [ %x.addr.0, %recurse ], [ %x.addr.0, %recurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa41, metadata !2895, metadata !DIExpression()), !dbg !2913
  %call94 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %x.addr.0.lcssa41, %struct.rtx_def* %in) #7, !dbg !2977
  br label %cleanup149, !dbg !2978

sw.bb95:                                          ; preds = %recurse
  %x.addr.0.lcssa42 = phi %struct.rtx_def* [ %x.addr.0, %recurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa42, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa42, metadata !2895, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa42, metadata !2895, metadata !DIExpression()), !dbg !2913
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0.lcssa42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2979
  %rt_rtvec100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**, !dbg !2979
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec100, align 8, !dbg !2979
  %num_elem101 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 0, !dbg !2979
  %16 = load i32, i32* %num_elem101, align 8, !dbg !2979
  call void @llvm.dbg.value(metadata i32 %16, metadata !2909, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2981
  %17 = sext i32 %16 to i64, !dbg !2982
  br label %for.cond103, !dbg !2982

for.cond103:                                      ; preds = %for.inc135, %sw.bb95
  %indvars.iv26 = phi i64 [ %indvars.iv.next27, %for.inc135 ], [ %17, %sw.bb95 ]
  %indvars.iv.next27 = add nsw i64 %indvars.iv26, -1, !dbg !2983
  call void @llvm.dbg.value(metadata i32 undef, metadata !2909, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2981
  %cmp104 = icmp sgt i64 %indvars.iv26, 0, !dbg !2984
  br i1 %cmp104, label %for.body106, label %cleanup149.loopexit2, !dbg !2986

for.body106:                                      ; preds = %for.cond103
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec100, align 8, !dbg !2987
  %arrayidx113 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i64 0, i32 1, i64 %indvars.iv.next27, !dbg !2987
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx113, align 8, !dbg !2987
  %arrayidx116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2987
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !2987
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !2987
  %cmp118 = icmp eq %struct.rtx_def* %20, null, !dbg !2989
  br i1 %cmp118, label %for.inc135, label %land.lhs.true, !dbg !2990

land.lhs.true:                                    ; preds = %for.body106
  %call131 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* nonnull %20, %struct.rtx_def* %in) #7, !dbg !2991
  %tobool132 = icmp eq i32 %call131, 0, !dbg !2991
  br i1 %tobool132, label %for.inc135, label %cleanup149.loopexit2, !dbg !2992

for.inc135:                                       ; preds = %land.lhs.true, %for.body106
  call void @llvm.dbg.value(metadata i32 undef, metadata !2909, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2981
  br label %for.cond103, !dbg !2993, !llvm.loop !2994

sw.default:                                       ; preds = %recurse
  %bf.load1.lcssa = phi i32 [ %bf.load1, %recurse ], !dbg !2919
  %bf.clear140 = and i32 %bf.load1.lcssa, 65535, !dbg !2996
  %idxprom141 = zext i32 %bf.clear140 to i64, !dbg !2996
  %arrayidx142 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom141, !dbg !2996
  %21 = load i32, i32* %arrayidx142, align 4, !dbg !2996
  %cmp143 = icmp eq i32 %21, 9, !dbg !2996
  br i1 %cmp143, label %cleanup149, label %cond.true145, !dbg !2996

cond.true145:                                     ; preds = %sw.default
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2996
  br label %cleanup149, !dbg !2996

cleanup149.loopexit:                              ; preds = %for.cond, %cleanup, %if.then51
  %retval.6.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then51 ], [ 1, %cleanup ]
  br label %cleanup149, !dbg !2997

cleanup149.loopexit2:                             ; preds = %for.cond103, %land.lhs.true
  %retval.6.ph3 = phi i32 [ 0, %for.cond103 ], [ 1, %land.lhs.true ]
  br label %cleanup149, !dbg !2997

cleanup149:                                       ; preds = %cleanup149.loopexit2, %cleanup149.loopexit, %cond.true145, %sw.default, %sw.bb30, %entry, %sw.bb93, %do_reg
  %retval.6 = phi i32 [ %call94, %sw.bb93 ], [ %call29, %do_reg ], [ 0, %entry ], [ 1, %sw.bb30 ], [ 0, %sw.default ], [ 0, %cond.true145 ], [ %retval.6.ph, %cleanup149.loopexit ], [ %retval.6.ph3, %cleanup149.loopexit2 ], !dbg !2913
  ret i32 %retval.6, !dbg !2997
}

; Function Attrs: nounwind uwtable
define dso_local i32 @find_reg_fusage(%struct.rtx_def* %insn, i32 %code, %struct.rtx_def* %datum) local_unnamed_addr #4 !dbg !2998 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3002, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 %code, metadata !3003, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata %struct.rtx_def* %datum, metadata !3004, metadata !DIExpression()), !dbg !3014
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3015
  %bf.load = load i32, i32* %0, align 8, !dbg !3015
  %bf.clear = and i32 %bf.load, 65535, !dbg !3015
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3015
  br i1 %cmp, label %if.end, label %return, !dbg !3017

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.rtx_def* %datum, null, !dbg !3018
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3018

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1804, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3018
  br label %cond.end, !dbg !3018

cond.end:                                         ; preds = %if.end, %cond.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %datum, i64 0, i32 0, !dbg !3019
  %bf.load1 = load i32, i32* %1, align 8, !dbg !3019
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3019
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !3019
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !3020

if.then4:                                         ; preds = %cond.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3021
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !3021
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !3021
  br label %for.cond, !dbg !3023

for.cond:                                         ; preds = %for.inc, %if.then4
  %link.0.in = phi %struct.rtx_def** [ %rt_rtx, %if.then4 ], [ %rt_rtx27, %for.inc ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !3024
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !3005, metadata !DIExpression()), !dbg !3025
  %tobool5 = icmp eq %struct.rtx_def* %link.0, null, !dbg !3026
  br i1 %tobool5, label %cleanup, label %for.body, !dbg !3026

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3027
  %2 = bitcast %union.rtunion_def* %arrayidx8 to i32**, !dbg !3027
  %3 = load i32*, i32** %2, align 8, !dbg !3027
  %bf.load10 = load i32, i32* %3, align 8, !dbg !3027
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !3027
  %cmp12 = icmp eq i32 %bf.clear11, %code, !dbg !3030
  br i1 %cmp12, label %land.lhs.true, label %for.inc, !dbg !3031

land.lhs.true:                                    ; preds = %for.body
  %arrayidx19 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !3032
  %rt_rtx20 = bitcast i32* %arrayidx19 to %struct.rtx_def**, !dbg !3032
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !3032
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %datum, %struct.rtx_def* %4) #6, !dbg !3033
  %tobool21 = icmp eq i32 %call, 0, !dbg !3033
  br i1 %tobool21, label %for.inc, label %cleanup, !dbg !3034

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3035
  %rt_rtx27 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3035
  br label %for.cond, !dbg !3036, !llvm.loop !3037

cleanup:                                          ; preds = %land.lhs.true, %for.cond
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true ], [ true, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %if.end52, label %return

if.else:                                          ; preds = %cond.end
  %call28 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %datum) #7, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %call28, metadata !3008, metadata !DIExpression()), !dbg !3040
  %cmp29 = icmp ult i32 %call28, 53, !dbg !3041
  br i1 %cmp29, label %if.then30, label %if.end48, !dbg !3042

if.then30:                                        ; preds = %if.else
  %bf.load31 = load i32, i32* %1, align 8, !dbg !3043
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !3043
  %bf.clear32 = and i32 %bf.lshr, 255, !dbg !3043
  %call33 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %datum) #7, !dbg !3043
  %call34 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear32, i32 %call33) #7, !dbg !3043
  call void @llvm.dbg.value(metadata i32 %call34, metadata !3010, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata i32 %call28, metadata !3013, metadata !DIExpression()), !dbg !3044
  br label %for.cond35, !dbg !3045

for.cond35:                                       ; preds = %for.inc42, %if.then30
  %i.0 = phi i32 [ %call28, %if.then30 ], [ %inc, %for.inc42 ], !dbg !3047
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3013, metadata !DIExpression()), !dbg !3044
  %cmp36 = icmp ult i32 %i.0, %call34, !dbg !3048
  br i1 %cmp36, label %for.body37, label %cleanup44, !dbg !3050

for.body37:                                       ; preds = %for.cond35
  %call38 = tail call i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 %code, i32 %i.0) #7, !dbg !3051
  %tobool39 = icmp eq i32 %call38, 0, !dbg !3051
  br i1 %tobool39, label %for.inc42, label %cleanup44, !dbg !3053

for.inc42:                                        ; preds = %for.body37
  %inc = add i32 %i.0, 1, !dbg !3054
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3013, metadata !DIExpression()), !dbg !3044
  br label %for.cond35, !dbg !3055, !llvm.loop !3056

cleanup44:                                        ; preds = %for.body37, %for.cond35
  %cleanup.dest.slot.1 = phi i32 [ 1, %for.body37 ], [ 0, %for.cond35 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end48, label %cleanup49

if.end48:                                         ; preds = %cleanup44, %if.else
  br label %cleanup49, !dbg !3058

cleanup49:                                        ; preds = %cleanup44, %if.end48
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup44 ], [ 0, %if.end48 ]
  %switch2 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %switch2, label %if.end52, label %return

if.end52:                                         ; preds = %cleanup49, %cleanup
  br label %return, !dbg !3059

return:                                           ; preds = %cleanup49, %cleanup, %entry, %if.end52
  %retval.4 = phi i32 [ 1, %cleanup49 ], [ 0, %if.end52 ], [ 1, %cleanup ], [ 0, %entry ], !dbg !3014
  ret i32 %retval.4, !dbg !3060
}

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_referenced_p(%struct.rtx_def* %x, %struct.rtx_def* %body) local_unnamed_addr #4 !dbg !3061 {
entry:
  br label %tailrecurse, !dbg !3066

tailrecurse:                                      ; preds = %if.end190, %entry
  %body.tr = phi %struct.rtx_def* [ %body, %entry ], [ %32, %if.end190 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3063, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr, metadata !3064, metadata !DIExpression()), !dbg !3068
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr, i64 0, i32 0, !dbg !3069
  %bf.load = load i32, i32* %0, align 8, !dbg !3069
  %trunc = trunc i32 %bf.load to i16, !dbg !3070
  switch i16 %trunc, label %cleanup.loopexit5 [
    i16 23, label %sw.bb
    i16 17, label %sw.bb79
    i16 26, label %sw.bb95
    i16 24, label %sw.bb95
    i16 47, label %sw.bb95
    i16 29, label %sw.bb97
    i16 22, label %sw.bb103
    i16 18, label %sw.bb109
    i16 19, label %sw.bb109
    i16 15, label %sw.bb134
    i16 25, label %sw.bb159
    i16 14, label %sw.bb182
  ], !dbg !3070

sw.bb:                                            ; preds = %tailrecurse
  %body.tr.lcssa27 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa27, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa27, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa27, metadata !3064, metadata !DIExpression()), !dbg !3068
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3071
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3071
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3071
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %2) #7, !dbg !3073
  %tobool = icmp eq i32 %call, 0, !dbg !3073
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3074

if.end:                                           ; preds = %sw.bb
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3075
  %3 = bitcast %union.rtunion_def* %arrayidx3 to i32**, !dbg !3075
  %4 = load i32*, i32** %3, align 8, !dbg !3075
  %bf.load5 = load i32, i32* %4, align 8, !dbg !3075
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3075
  %cmp = icmp eq i32 %bf.clear6, 46, !dbg !3077
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !3078
  br i1 %cmp, label %if.end78, label %land.lhs.true, !dbg !3078

land.lhs.true:                                    ; preds = %if.end
  %cmp13 = icmp eq i32 %bf.clear6, 36, !dbg !3079
  br i1 %cmp13, label %if.end78, label %land.lhs.true14, !dbg !3080

land.lhs.true14:                                  ; preds = %land.lhs.true
  %cmp21 = icmp eq i32 %bf.clear6, 37, !dbg !3081
  br i1 %cmp21, label %if.end78, label %land.lhs.true22, !dbg !3082

land.lhs.true22:                                  ; preds = %land.lhs.true14
  %cmp29 = icmp eq i32 %bf.clear6, 39, !dbg !3083
  br i1 %cmp29, label %land.lhs.true30, label %land.lhs.true22.land.lhs.true70_crit_edge, !dbg !3084

land.lhs.true22.land.lhs.true70_crit_edge:        ; preds = %land.lhs.true22
  br label %land.lhs.true70, !dbg !3084

land.lhs.true30:                                  ; preds = %land.lhs.true22
  %arrayidx37 = getelementptr inbounds i32, i32* %4, i64 2, !dbg !3085
  %6 = bitcast i32* %arrayidx37 to i32**, !dbg !3085
  %7 = load i32*, i32** %6, align 8, !dbg !3085
  %bf.load39 = load i32, i32* %7, align 8, !dbg !3085
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !3085
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !3085
  br i1 %cmp41, label %land.lhs.true42, label %land.lhs.true70, !dbg !3086

land.lhs.true42:                                  ; preds = %land.lhs.true30
  %bf.lshr = lshr i32 %bf.load39, 16, !dbg !3087
  %bf.clear52 = and i32 %bf.lshr, 255, !dbg !3087
  %idxprom = zext i32 %bf.clear52 to i64, !dbg !3087
  %arrayidx53 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3087
  %8 = load i8, i8* %arrayidx53, align 1, !dbg !3087
  %conv54 = zext i8 %8 to i32, !dbg !3087
  %add = add nuw nsw i32 %conv54, 3, !dbg !3088
  %bf.lshr60 = lshr i32 %bf.load5, 16, !dbg !3089
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !3089
  %idxprom62 = zext i32 %bf.clear61 to i64, !dbg !3089
  %arrayidx63 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom62, !dbg !3089
  %9 = load i8, i8* %arrayidx63, align 1, !dbg !3089
  %conv65 = zext i8 %9 to i32, !dbg !3089
  %add66 = add nuw nsw i32 %conv65, 3, !dbg !3090
  %cmp68.unshifted = xor i32 %add, %add66, !dbg !3091
  %cmp68 = icmp ult i32 %cmp68.unshifted, 4, !dbg !3091
  br i1 %cmp68, label %if.end78, label %land.lhs.true70, !dbg !3092

land.lhs.true70:                                  ; preds = %land.lhs.true22.land.lhs.true70_crit_edge, %land.lhs.true42, %land.lhs.true30
  %call75 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %5) #7, !dbg !3093
  %tobool76 = icmp eq i32 %call75, 0, !dbg !3093
  br i1 %tobool76, label %if.end78, label %cleanup, !dbg !3094

if.end78:                                         ; preds = %land.lhs.true70, %land.lhs.true, %if.end, %land.lhs.true42, %land.lhs.true14
  br label %cleanup, !dbg !3095

sw.bb79:                                          ; preds = %tailrecurse
  %body.tr.lcssa28 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa28, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa28, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa28, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa28, i64 0, i32 1, i32 0, i32 1, !dbg !3096
  %rt_rtvec = bitcast %struct.object_block** %arrayidx82 to %struct.rtvec_def**, !dbg !3096
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3096
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 0, !dbg !3096
  %11 = load i32, i32* %num_elem, align 8, !dbg !3096
  call void @llvm.dbg.value(metadata i32 %11, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %12 = sext i32 %11 to i64, !dbg !3098
  br label %for.cond, !dbg !3098

for.cond:                                         ; preds = %for.inc, %sw.bb79
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %12, %sw.bb79 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3099
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %cmp83 = icmp sgt i64 %indvars.iv, 0, !dbg !3100
  br i1 %cmp83, label %for.body, label %cleanup.loopexit, !dbg !3102

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3103
  %arrayidx90 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv.next, !dbg !3103
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8, !dbg !3103
  %call91 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %14) #7, !dbg !3105
  %tobool92 = icmp eq i32 %call91, 0, !dbg !3105
  br i1 %tobool92, label %for.inc, label %cleanup.loopexit, !dbg !3106

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br label %for.cond, !dbg !3107, !llvm.loop !3108

sw.bb95:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %body.tr.lcssa29 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ], [ %body.tr, %tailrecurse ], [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa29, metadata !3064, metadata !DIExpression()), !dbg !3068
  %call96 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %body.tr.lcssa29) #7, !dbg !3110
  br label %cleanup, !dbg !3111

sw.bb97:                                          ; preds = %tailrecurse
  %body.tr.lcssa30 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa30, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa30, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa30, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa30, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3112
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !3112
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !3112
  %call102 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %15) #7, !dbg !3113
  br label %cleanup, !dbg !3114

sw.bb103:                                         ; preds = %tailrecurse
  %body.tr.lcssa31 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa31, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa31, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa31, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3115
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !3115
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !3115
  %call108 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %16) #7, !dbg !3116
  br label %cleanup, !dbg !3117

sw.bb109:                                         ; preds = %tailrecurse, %tailrecurse
  %body.tr.lcssa32 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ], [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa32, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa32, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3118
  %rt_rtvec113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtvec_def**, !dbg !3118
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec113, align 8, !dbg !3118
  %num_elem114 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !3118
  %18 = load i32, i32* %num_elem114, align 8, !dbg !3118
  call void @llvm.dbg.value(metadata i32 %18, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %19 = sext i32 %18 to i64, !dbg !3120
  br label %for.cond116, !dbg !3120

for.cond116:                                      ; preds = %for.inc131, %sw.bb109
  %indvars.iv23 = phi i64 [ %indvars.iv.next24, %for.inc131 ], [ %19, %sw.bb109 ]
  %indvars.iv.next24 = add nsw i64 %indvars.iv23, -1, !dbg !3121
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %cmp117 = icmp sgt i64 %indvars.iv23, 0, !dbg !3122
  br i1 %cmp117, label %for.body119, label %cleanup.loopexit1, !dbg !3124

for.body119:                                      ; preds = %for.cond116
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec113, align 8, !dbg !3125
  %arrayidx126 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next24, !dbg !3125
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx126, align 8, !dbg !3125
  %call127 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %21) #7, !dbg !3127
  %tobool128 = icmp eq i32 %call127, 0, !dbg !3127
  br i1 %tobool128, label %for.inc131, label %cleanup.loopexit1, !dbg !3128

for.inc131:                                       ; preds = %for.body119
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br label %for.cond116, !dbg !3129, !llvm.loop !3130

sw.bb134:                                         ; preds = %tailrecurse
  %body.tr.lcssa33 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa33, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa33, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa33, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3132
  %rt_rtvec138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtvec_def**, !dbg !3132
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec138, align 8, !dbg !3132
  %num_elem139 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i64 0, i32 0, !dbg !3132
  %23 = load i32, i32* %num_elem139, align 8, !dbg !3132
  call void @llvm.dbg.value(metadata i32 %23, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %24 = sext i32 %23 to i64, !dbg !3134
  br label %for.cond141, !dbg !3134

for.cond141:                                      ; preds = %for.inc156, %sw.bb134
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %for.inc156 ], [ %24, %sw.bb134 ]
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, -1, !dbg !3135
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  %cmp142 = icmp sgt i64 %indvars.iv25, 0, !dbg !3136
  br i1 %cmp142, label %for.body144, label %cleanup.loopexit3, !dbg !3138

for.body144:                                      ; preds = %for.cond141
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec138, align 8, !dbg !3139
  %arrayidx151 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 1, i64 %indvars.iv.next26, !dbg !3139
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx151, align 8, !dbg !3139
  %call152 = tail call i32 @reg_referenced_p(%struct.rtx_def* %x, %struct.rtx_def* %26) #7, !dbg !3141
  %tobool153 = icmp eq i32 %call152, 0, !dbg !3141
  br i1 %tobool153, label %for.inc156, label %cleanup.loopexit3, !dbg !3142

for.inc156:                                       ; preds = %for.body144
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br label %for.cond141, !dbg !3143, !llvm.loop !3144

sw.bb159:                                         ; preds = %tailrecurse
  %body.tr.lcssa34 = phi %struct.rtx_def* [ %body.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa34, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa34, metadata !3064, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.tr.lcssa34, metadata !3064, metadata !DIExpression()), !dbg !3068
  %arrayidx162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr.lcssa34, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3146
  %27 = bitcast %union.rtunion_def* %arrayidx162 to i32**, !dbg !3146
  %28 = load i32*, i32** %27, align 8, !dbg !3146
  %bf.load164 = load i32, i32* %28, align 8, !dbg !3146
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !3146
  %cmp166 = icmp eq i32 %bf.clear165, 43, !dbg !3146
  br i1 %cmp166, label %if.then168, label %if.end181, !dbg !3148

if.then168:                                       ; preds = %sw.bb159
  %arrayidx175 = getelementptr inbounds i32, i32* %28, i64 2, !dbg !3149
  %rt_rtx176 = bitcast i32* %arrayidx175 to %struct.rtx_def**, !dbg !3149
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !3149
  %call177 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %29) #7, !dbg !3151
  %tobool178 = icmp eq i32 %call177, 0, !dbg !3151
  br i1 %tobool178, label %if.end181, label %cleanup, !dbg !3152

if.end181:                                        ; preds = %if.then168, %sw.bb159
  br label %cleanup, !dbg !3153

sw.bb182:                                         ; preds = %tailrecurse
  %arrayidx185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3154
  %rt_rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**, !dbg !3154
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx186, align 8, !dbg !3154
  %call187 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %30) #7, !dbg !3156
  %tobool188 = icmp eq i32 %call187, 0, !dbg !3156
  br i1 %tobool188, label %if.end190, label %cleanup.loopexit5, !dbg !3157

if.end190:                                        ; preds = %sw.bb182
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3158
  %rt_rtx194 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !3158
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !3158
  br label %tailrecurse, !dbg !3066

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !3159

cleanup.loopexit1:                                ; preds = %for.cond116, %for.body119
  %retval.0.ph2 = phi i32 [ 0, %for.cond116 ], [ 1, %for.body119 ]
  br label %cleanup, !dbg !3159

cleanup.loopexit3:                                ; preds = %for.cond141, %for.body144
  %retval.0.ph4 = phi i32 [ 0, %for.cond141 ], [ 1, %for.body144 ]
  br label %cleanup, !dbg !3159

cleanup.loopexit5:                                ; preds = %tailrecurse, %sw.bb182
  %retval.0.ph6 = phi i32 [ 0, %tailrecurse ], [ 1, %sw.bb182 ]
  br label %cleanup, !dbg !3159

cleanup:                                          ; preds = %cleanup.loopexit5, %cleanup.loopexit3, %cleanup.loopexit1, %cleanup.loopexit, %land.lhs.true70, %sw.bb, %if.then168, %if.end181, %sw.bb103, %sw.bb97, %sw.bb95, %if.end78
  %retval.0 = phi i32 [ 0, %if.end181 ], [ %call108, %sw.bb103 ], [ %call102, %sw.bb97 ], [ %call96, %sw.bb95 ], [ 0, %if.end78 ], [ 1, %sw.bb ], [ 1, %land.lhs.true70 ], [ 1, %if.then168 ], [ %retval.0.ph, %cleanup.loopexit ], [ %retval.0.ph2, %cleanup.loopexit1 ], [ %retval.0.ph4, %cleanup.loopexit3 ], [ %retval.0.ph6, %cleanup.loopexit5 ], !dbg !3160
  ret i32 %retval.0, !dbg !3159
}

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_set_between_p(%struct.rtx_def* %reg, %struct.rtx_def* %from_insn, %struct.rtx_def* %to_insn) local_unnamed_addr #4 !dbg !3161 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3163, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_insn, metadata !3164, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_insn, metadata !3165, metadata !DIExpression()), !dbg !3167
  %cmp = icmp eq %struct.rtx_def* %from_insn, %to_insn, !dbg !3168
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3170

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !3171

for.cond:                                         ; preds = %for.inc, %if.end
  %from_insn.pn = phi %struct.rtx_def* [ %from_insn, %if.end ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from_insn.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3173
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !3173
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3173
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3166, metadata !DIExpression()), !dbg !3167
  %cmp1 = icmp eq %struct.rtx_def* %insn.0, %to_insn, !dbg !3174
  br i1 %cmp1, label %cleanup.loopexit, label %for.body, !dbg !3176

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3177
  %bf.load = load i32, i32* %0, align 8, !dbg !3177
  %bf.clear = and i32 %bf.load, 65535, !dbg !3177
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !3177
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !3177

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !3177
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !3177

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !3177
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !3177

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !3177
  br i1 %cmp13, label %land.lhs.true, label %for.inc, !dbg !3179

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %call = tail call i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn.0) #7, !dbg !3180
  %tobool = icmp eq i32 %call, 0, !dbg !3180
  br i1 %tobool, label %for.inc, label %cleanup.loopexit, !dbg !3181

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false10
  br label %for.cond, !dbg !3182, !llvm.loop !3183

cleanup.loopexit:                                 ; preds = %for.cond, %land.lhs.true
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true ]
  br label %cleanup, !dbg !3185

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3167
  ret i32 %retval.0, !dbg !3185
}

; Function Attrs: nounwind uwtable
define dso_local i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3186 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3189, metadata !DIExpression()), !dbg !3190
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3191
  %bf.load = load i32, i32* %0, align 8, !dbg !3191
  %bf.clear = and i32 %bf.load, 65535, !dbg !3191
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3191
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3191

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3191
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3191

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3191
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3191

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3191
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !3193

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !3194
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !3195

land.lhs.true15:                                  ; preds = %land.lhs.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !3196
  %bf.load16 = load i32, i32* %1, align 8, !dbg !3196
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !3196
  %cmp18 = icmp eq i32 %bf.clear17, 37, !dbg !3196
  br i1 %cmp18, label %land.lhs.true19, label %lor.lhs.false26, !dbg !3197

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !3198
  %cmp20 = icmp ult i32 %call, 53, !dbg !3199
  br i1 %cmp20, label %land.lhs.true21, label %lor.lhs.false26, !dbg !3200

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %2 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !3201
  %bf.load22 = load i32, i32* %1, align 8, !dbg !3202
  %bf.lshr = lshr i32 %bf.load22, 16, !dbg !3202
  %bf.clear23 = and i32 %bf.lshr, 255, !dbg !3202
  %call24 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !3203
  %call25 = tail call fastcc zeroext i8 @overlaps_hard_reg_set_p(i64 %2, i32 %bf.clear23, i32 %call24) #7, !dbg !3204
  %tobool = icmp eq i8 %call25, 0, !dbg !3204
  br i1 %tobool, label %lor.lhs.false26, label %return, !dbg !3205

lor.lhs.false26:                                  ; preds = %land.lhs.true21, %land.lhs.true19, %land.lhs.true15
  %bf.load27 = load i32, i32* %1, align 8, !dbg !3206
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3206
  %cmp29 = icmp eq i32 %bf.clear28, 43, !dbg !3206
  br i1 %cmp29, label %return, label %lor.lhs.false31, !dbg !3207

lor.lhs.false31:                                  ; preds = %lor.lhs.false26
  %call32 = tail call i32 @find_reg_fusage(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* %reg) #7, !dbg !3208
  %tobool33 = icmp eq i32 %call32, 0, !dbg !3208
  br i1 %tobool33, label %if.end, label %return, !dbg !3209

if.end:                                           ; preds = %lor.lhs.false31, %land.lhs.true, %lor.lhs.false8
  %call34 = tail call %struct.rtx_def* @set_of(%struct.rtx_def* %reg, %struct.rtx_def* %insn) #7, !dbg !3210
  %cmp35 = icmp ne %struct.rtx_def* %call34, null, !dbg !3211
  %conv36 = zext i1 %cmp35 to i32, !dbg !3211
  br label %return, !dbg !3212

return:                                           ; preds = %land.lhs.true21, %lor.lhs.false31, %lor.lhs.false26, %if.end
  %retval.0 = phi i32 [ %conv36, %if.end ], [ 1, %lor.lhs.false31 ], [ 1, %lor.lhs.false26 ], [ 1, %land.lhs.true21 ], !dbg !3190
  ret i32 %retval.0, !dbg !3213
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @overlaps_hard_reg_set_p(i64 %regs, i32 %mode, i32 %regno) unnamed_addr #0 !dbg !3214 {
entry:
  call void @llvm.dbg.value(metadata i64 %regs, metadata !3220, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3221, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3222, metadata !DIExpression()), !dbg !3224
  %sh_prom = zext i32 %regno to i64, !dbg !3225
  %shl = shl i64 1, %sh_prom, !dbg !3225
  %and = and i64 %shl, %regs, !dbg !3225
  %tobool = icmp eq i64 %and, 0, !dbg !3225
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3227

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) #7, !dbg !3228
  call void @llvm.dbg.value(metadata i32 %call, metadata !3223, metadata !DIExpression()), !dbg !3224
  br label %while.cond, !dbg !3229

while.cond:                                       ; preds = %while.body, %if.end
  %regno.addr.0 = phi i32 [ %regno, %if.end ], [ %inc, %while.body ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !3222, metadata !DIExpression()), !dbg !3224
  %inc = add i32 %regno.addr.0, 1, !dbg !3230
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3222, metadata !DIExpression()), !dbg !3224
  %cmp = icmp ult i32 %inc, %call, !dbg !3231
  br i1 %cmp, label %while.body, label %cleanup.loopexit, !dbg !3229

while.body:                                       ; preds = %while.cond
  %sh_prom1 = zext i32 %inc to i64, !dbg !3232
  %shl2 = shl i64 1, %sh_prom1, !dbg !3232
  %and3 = and i64 %shl2, %regs, !dbg !3232
  %tobool4 = icmp eq i64 %and3, 0, !dbg !3232
  br i1 %tobool4, label %while.cond, label %cleanup.loopexit, !dbg !3234, !llvm.loop !3235

cleanup.loopexit:                                 ; preds = %while.cond, %while.body
  %retval.0.ph = phi i8 [ 0, %while.cond ], [ 1, %while.body ]
  br label %cleanup, !dbg !3237

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3224
  ret i8 %retval.0, !dbg !3237
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @set_of(%struct.rtx_def* %pat, %struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3238 {
entry:
  %data = alloca %struct.set_of_data, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !3242, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3243, metadata !DIExpression()), !dbg !3245
  %0 = bitcast %struct.set_of_data* %data to i8*, !dbg !3246
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3246
  %found = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %data, i64 0, i32 0, !dbg !3247
  store %struct.rtx_def* null, %struct.rtx_def** %found, align 8, !dbg !3248
  %pat1 = getelementptr inbounds %struct.set_of_data, %struct.set_of_data* %data, i64 0, i32 1, !dbg !3249
  store %struct.rtx_def* %pat, %struct.rtx_def** %pat1, align 8, !dbg !3250
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3251
  %bf.load = load i32, i32* %1, align 8, !dbg !3251
  %bf.clear = and i32 %bf.load, 65535, !dbg !3251
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3251
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !3251

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !3251
  br i1 %cmp4, label %cond.true, label %lor.lhs.false5, !dbg !3251

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !3251
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !3251

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !3251
  br i1 %cmp12, label %cond.true, label %cond.end, !dbg !3251

cond.true:                                        ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3252
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3252
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3252
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3252
  br label %cond.end, !dbg !3251

cond.end:                                         ; preds = %lor.lhs.false9, %cond.true
  %cond = phi %struct.rtx_def* [ %3, %cond.true ], [ %insn, %lor.lhs.false9 ], !dbg !3251
  call void @note_stores(%struct.rtx_def* %cond, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @set_of_1, i8* nonnull %0) #7, !dbg !3253
  %4 = load %struct.rtx_def*, %struct.rtx_def** %found, align 8, !dbg !3254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3255
  ret %struct.rtx_def* %4, !dbg !3256
}

; Function Attrs: nounwind uwtable
define dso_local i32 @modified_between_p(%struct.rtx_def* %x, %struct.rtx_def* %start, %struct.rtx_def* %end) local_unnamed_addr #4 !dbg !3257 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3259, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start, metadata !3260, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !3261, metadata !DIExpression()), !dbg !3267
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3268
  %bf.load = load i32, i32* %0, align 8, !dbg !3268
  %bf.clear = and i32 %bf.load, 65535, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3262, metadata !DIExpression()), !dbg !3267
  %cmp = icmp eq %struct.rtx_def* %start, %end, !dbg !3269
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3271

if.end:                                           ; preds = %entry
  %trunc = trunc i32 %bf.load to i16, !dbg !3272
  switch i16 %trunc, label %sw.epilog [
    i16 30, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 35, label %cleanup
    i16 45, label %cleanup
    i16 44, label %cleanup
    i16 36, label %sw.bb1
    i16 46, label %sw.bb1
    i16 43, label %sw.bb2
    i16 37, label %sw.bb23
  ], !dbg !3272

sw.bb1:                                           ; preds = %if.end, %if.end
  br label %cleanup, !dbg !3273

sw.bb2:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3275
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3275
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3275
  %call = tail call i32 @modified_between_p(%struct.rtx_def* %1, %struct.rtx_def* %start, %struct.rtx_def* %end) #7, !dbg !3277
  %tobool = icmp eq i32 %call, 0, !dbg !3277
  br i1 %tobool, label %if.end4, label %cleanup, !dbg !3278

if.end4:                                          ; preds = %sw.bb2
  %bf.load5 = load i32, i32* %0, align 8, !dbg !3279
  %bf.clear6 = and i32 %bf.load5, 67108864, !dbg !3279
  %tobool7 = icmp eq i32 %bf.clear6, 0, !dbg !3279
  br i1 %tobool7, label %if.end9, label %cleanup, !dbg !3281

if.end9:                                          ; preds = %if.end4
  br label %for.cond, !dbg !3282

for.cond:                                         ; preds = %for.inc, %if.end9
  %start.pn = phi %struct.rtx_def* [ %start, %if.end9 ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3284
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !3284
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3266, metadata !DIExpression()), !dbg !3267
  %cmp14 = icmp eq %struct.rtx_def* %insn.0, %end, !dbg !3285
  br i1 %cmp14, label %cleanup.loopexit2, label %for.body, !dbg !3287

for.body:                                         ; preds = %for.cond
  %call15 = tail call zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %x, %struct.rtx_def* %insn.0) #6, !dbg !3288
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3288
  br i1 %tobool16, label %for.inc, label %cleanup.loopexit2, !dbg !3290

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !3291, !llvm.loop !3292

sw.bb23:                                          ; preds = %if.end
  %call24 = tail call i32 @reg_set_between_p(%struct.rtx_def* %x, %struct.rtx_def* %start, %struct.rtx_def* %end) #7, !dbg !3294
  br label %cleanup, !dbg !3295

sw.epilog:                                        ; preds = %if.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !3296
  %arrayidx25 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3296
  %2 = load i8*, i8** %arrayidx25, align 8, !dbg !3296
  call void @llvm.dbg.value(metadata i8* %2, metadata !3263, metadata !DIExpression()), !dbg !3267
  %arrayidx27 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !3297
  %3 = load i8, i8* %arrayidx27, align 1, !dbg !3297
  call void @llvm.dbg.value(metadata i8 %3, metadata !3264, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !3299
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !3299
  %4 = zext i8 %3 to i64, !dbg !3303
  br label %for.cond28, !dbg !3303

for.cond28:                                       ; preds = %for.inc75, %sw.epilog
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc75 ], [ %4, %sw.epilog ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !3304
  call void @llvm.dbg.value(metadata i32 undef, metadata !3264, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  %cmp29 = icmp sgt i64 %indvars.iv4, 0, !dbg !3305
  br i1 %cmp29, label %for.body31, label %cleanup.loopexit1, !dbg !3306

for.body31:                                       ; preds = %for.cond28
  %arrayidx33 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next5, !dbg !3307
  %5 = load i8, i8* %arrayidx33, align 1, !dbg !3307
  %cmp35 = icmp eq i8 %5, 101, !dbg !3308
  br i1 %cmp35, label %land.lhs.true, label %if.else, !dbg !3309

land.lhs.true:                                    ; preds = %for.body31
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 %indvars.iv.next5, !dbg !3310
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !3310
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !3310
  %call42 = tail call i32 @modified_between_p(%struct.rtx_def* %6, %struct.rtx_def* %start, %struct.rtx_def* %end) #7, !dbg !3311
  %tobool43 = icmp eq i32 %call42, 0, !dbg !3311
  br i1 %tobool43, label %land.lhs.true.if.else_crit_edge, label %cleanup.loopexit1, !dbg !3312

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  %.pre = load i8, i8* %arrayidx33, align 1, !dbg !3313
  br label %if.else, !dbg !3312

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %for.body31
  %7 = phi i8 [ %.pre, %land.lhs.true.if.else_crit_edge ], [ %5, %for.body31 ], !dbg !3313
  %cmp48 = icmp eq i8 %7, 69, !dbg !3315
  br i1 %cmp48, label %if.then50, label %for.inc75, !dbg !3316

if.then50:                                        ; preds = %if.else
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 %indvars.iv.next5, !dbg !3317
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtvec_def**, !dbg !3317
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3317
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !3317
  %9 = load i32, i32* %num_elem, align 8, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %9, metadata !3265, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  %10 = sext i32 %9 to i64, !dbg !3319
  br label %for.cond56, !dbg !3319

for.cond56:                                       ; preds = %for.inc71, %if.then50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc71 ], [ %10, %if.then50 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3320
  call void @llvm.dbg.value(metadata i32 undef, metadata !3265, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  %cmp57 = icmp sgt i64 %indvars.iv, 0, !dbg !3321
  br i1 %cmp57, label %for.body59, label %for.inc75.loopexit, !dbg !3323

for.body59:                                       ; preds = %for.cond56
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3324
  %arrayidx66 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv.next, !dbg !3324
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx66, align 8, !dbg !3324
  %call67 = tail call i32 @modified_between_p(%struct.rtx_def* %12, %struct.rtx_def* %start, %struct.rtx_def* %end) #7, !dbg !3326
  %tobool68 = icmp eq i32 %call67, 0, !dbg !3326
  br i1 %tobool68, label %for.inc71, label %cleanup.loopexit, !dbg !3327

for.inc71:                                        ; preds = %for.body59
  call void @llvm.dbg.value(metadata i32 undef, metadata !3265, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  br label %for.cond56, !dbg !3328, !llvm.loop !3329

for.inc75.loopexit:                               ; preds = %for.cond56
  br label %for.inc75, !dbg !3331

for.inc75:                                        ; preds = %for.inc75.loopexit, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !3264, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3267
  br label %for.cond28, !dbg !3331, !llvm.loop !3332

cleanup.loopexit:                                 ; preds = %for.body59
  br label %cleanup, !dbg !3334

cleanup.loopexit1:                                ; preds = %for.cond28, %land.lhs.true
  %retval.0.ph = phi i32 [ 0, %for.cond28 ], [ 1, %land.lhs.true ]
  br label %cleanup, !dbg !3334

cleanup.loopexit2:                                ; preds = %for.cond, %for.body
  %retval.0.ph3 = phi i32 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !3334

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %if.end4, %sw.bb2, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %entry, %sw.bb23, %sw.bb1
  %retval.0 = phi i32 [ %call24, %sw.bb23 ], [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 1, %sw.bb2 ], [ 0, %if.end4 ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], [ %retval.0.ph3, %cleanup.loopexit2 ], !dbg !3267
  ret i32 %retval.0, !dbg !3334
}

declare dso_local zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @modified_in_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3335 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3337, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3338, metadata !DIExpression()), !dbg !3343
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3344
  %bf.load = load i32, i32* %0, align 8, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !3339, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3343
  %trunc = trunc i32 %bf.load to i16, !dbg !3345
  switch i16 %trunc, label %sw.epilog [
    i16 30, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 35, label %cleanup
    i16 45, label %cleanup
    i16 44, label %cleanup
    i16 36, label %sw.bb1
    i16 46, label %sw.bb1
    i16 43, label %sw.bb2
    i16 37, label %sw.bb12
  ], !dbg !3345

sw.bb1:                                           ; preds = %entry, %entry
  br label %cleanup, !dbg !3346

sw.bb2:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3348
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3348
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3348
  %call = tail call i32 @modified_in_p(%struct.rtx_def* %1, %struct.rtx_def* %insn) #7, !dbg !3350
  %tobool = icmp eq i32 %call, 0, !dbg !3350
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3351

if.end:                                           ; preds = %sw.bb2
  %bf.load3 = load i32, i32* %0, align 8, !dbg !3352
  %bf.clear4 = and i32 %bf.load3, 67108864, !dbg !3352
  %tobool5 = icmp eq i32 %bf.clear4, 0, !dbg !3352
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !3354

if.end7:                                          ; preds = %if.end
  %call8 = tail call zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) #6, !dbg !3355
  %tobool9 = icmp ne i8 %call8, 0, !dbg !3355
  %. = zext i1 %tobool9 to i32, !dbg !3357
  br label %cleanup, !dbg !3357

sw.bb12:                                          ; preds = %entry
  %call13 = tail call i32 @reg_set_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) #7, !dbg !3358
  br label %cleanup, !dbg !3359

sw.epilog:                                        ; preds = %entry
  %bf.clear = and i32 %bf.load, 65535, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3339, metadata !DIExpression()), !dbg !3343
  %idxprom = zext i32 %bf.clear to i64, !dbg !3360
  %arrayidx14 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3360
  %2 = load i8*, i8** %arrayidx14, align 8, !dbg !3360
  call void @llvm.dbg.value(metadata i8* %2, metadata !3340, metadata !DIExpression()), !dbg !3343
  %arrayidx16 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !3361
  %3 = load i8, i8* %arrayidx16, align 1, !dbg !3361
  call void @llvm.dbg.value(metadata i8 %3, metadata !3341, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !3363
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !3363
  %4 = zext i8 %3 to i64, !dbg !3367
  br label %for.cond, !dbg !3367

for.cond:                                         ; preds = %for.inc59, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc59 ], [ %4, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 undef, metadata !3341, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  %cmp = icmp sgt i64 %indvars.iv2, 0, !dbg !3369
  br i1 %cmp, label %for.body, label %cleanup.loopexit1, !dbg !3370

for.body:                                         ; preds = %for.cond
  %arrayidx19 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next3, !dbg !3371
  %5 = load i8, i8* %arrayidx19, align 1, !dbg !3371
  %cmp21 = icmp eq i8 %5, 101, !dbg !3372
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !3373

land.lhs.true:                                    ; preds = %for.body
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 %indvars.iv.next3, !dbg !3374
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !3374
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3374
  %call28 = tail call i32 @modified_in_p(%struct.rtx_def* %6, %struct.rtx_def* %insn) #7, !dbg !3375
  %tobool29 = icmp eq i32 %call28, 0, !dbg !3375
  br i1 %tobool29, label %land.lhs.true.if.else_crit_edge, label %cleanup.loopexit1, !dbg !3376

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  %.pre = load i8, i8* %arrayidx19, align 1, !dbg !3377
  br label %if.else, !dbg !3376

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %for.body
  %7 = phi i8 [ %.pre, %land.lhs.true.if.else_crit_edge ], [ %5, %for.body ], !dbg !3377
  %cmp34 = icmp eq i8 %7, 69, !dbg !3379
  br i1 %cmp34, label %if.then36, label %for.inc59, !dbg !3380

if.then36:                                        ; preds = %if.else
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 %indvars.iv.next3, !dbg !3381
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**, !dbg !3381
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3381
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !3381
  %9 = load i32, i32* %num_elem, align 8, !dbg !3381
  call void @llvm.dbg.value(metadata i32 %9, metadata !3342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  %10 = sext i32 %9 to i64, !dbg !3383
  br label %for.cond42, !dbg !3383

for.cond42:                                       ; preds = %for.inc, %if.then36
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %10, %if.then36 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3384
  call void @llvm.dbg.value(metadata i32 undef, metadata !3342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  %cmp43 = icmp sgt i64 %indvars.iv, 0, !dbg !3385
  br i1 %cmp43, label %for.body45, label %for.inc59.loopexit, !dbg !3387

for.body45:                                       ; preds = %for.cond42
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3388
  %arrayidx52 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv.next, !dbg !3388
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx52, align 8, !dbg !3388
  %call53 = tail call i32 @modified_in_p(%struct.rtx_def* %12, %struct.rtx_def* %insn) #7, !dbg !3390
  %tobool54 = icmp eq i32 %call53, 0, !dbg !3390
  br i1 %tobool54, label %for.inc, label %cleanup.loopexit, !dbg !3391

for.inc:                                          ; preds = %for.body45
  call void @llvm.dbg.value(metadata i32 undef, metadata !3342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  br label %for.cond42, !dbg !3392, !llvm.loop !3393

for.inc59.loopexit:                               ; preds = %for.cond42
  br label %for.inc59, !dbg !3395

for.inc59:                                        ; preds = %for.inc59.loopexit, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !3341, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3343
  br label %for.cond, !dbg !3395, !llvm.loop !3396

cleanup.loopexit:                                 ; preds = %for.body45
  br label %cleanup, !dbg !3398

cleanup.loopexit1:                                ; preds = %for.cond, %land.lhs.true
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true ]
  br label %cleanup, !dbg !3398

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %if.end, %sw.bb2, %if.end7, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb12, %sw.bb1
  %retval.0 = phi i32 [ %call13, %sw.bb12 ], [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %sw.bb2 ], [ 0, %if.end ], [ %., %if.end7 ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !3343
  ret i32 %retval.0, !dbg !3398
}

; Function Attrs: nounwind uwtable
define dso_local void @note_stores(%struct.rtx_def* %x, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fun, i8* %data) local_unnamed_addr #4 !dbg !3399 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3406, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fun, metadata !3407, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %data, metadata !3408, metadata !DIExpression()), !dbg !3413
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3414
  %bf.load = load i32, i32* %0, align 8, !dbg !3414
  %bf.clear = and i32 %bf.load, 65535, !dbg !3414
  %cmp = icmp eq i32 %bf.clear, 14, !dbg !3416
  br i1 %cmp, label %if.then, label %if.end, !dbg !3417

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3418
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3418
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3406, metadata !DIExpression()), !dbg !3413
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !3419
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3420
  br label %if.end, !dbg !3421

if.end:                                           ; preds = %if.then, %entry
  %bf.load72 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !3420
  %x.addr.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3406, metadata !DIExpression()), !dbg !3413
  %bf.clear2 = and i32 %bf.load72, 65535, !dbg !3420
  %cmp3 = icmp eq i32 %bf.clear2, 23, !dbg !3422
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !3423

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i32 %bf.clear2, 25, !dbg !3424
  br i1 %cmp6, label %if.then7, label %if.else71, !dbg !3425

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  br label %while.cond, !dbg !3426

while.cond:                                       ; preds = %while.body, %if.then7
  %x.addr.0.pn = phi %struct.rtx_def* [ %x.addr.0, %if.then7 ], [ %dest.0, %while.body ]
  %dest.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0.pn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3427
  %dest.0.in = bitcast %union.rtunion_def* %dest.0.in.in to %struct.rtx_def**, !dbg !3427
  %dest.0 = load %struct.rtx_def*, %struct.rtx_def** %dest.0.in, align 8, !dbg !3427
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0, metadata !3410, metadata !DIExpression()), !dbg !3427
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 0, !dbg !3428
  %bf.load12 = load i32, i32* %3, align 8, !dbg !3428
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3428
  %cmp14 = icmp eq i32 %bf.clear13, 39, !dbg !3429
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false28, !dbg !3430

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3431
  %4 = bitcast %union.rtunion_def* %arrayidx17 to i32**, !dbg !3431
  %5 = load i32*, i32** %4, align 8, !dbg !3431
  %bf.load19 = load i32, i32* %5, align 8, !dbg !3431
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3431
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !3431
  br i1 %cmp21, label %lor.lhs.false22, label %while.body, !dbg !3432

lor.lhs.false22:                                  ; preds = %land.lhs.true
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !3432
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !3433
  %cmp27 = icmp ugt i32 %call, 52, !dbg !3434
  br i1 %cmp27, label %while.body, label %lor.lhs.false22.lor.lhs.false28_crit_edge, !dbg !3435

lor.lhs.false22.lor.lhs.false28_crit_edge:        ; preds = %lor.lhs.false22
  %bf.load29.pre = load i32, i32* %3, align 8, !dbg !3436
  br label %lor.lhs.false28, !dbg !3435

lor.lhs.false28:                                  ; preds = %lor.lhs.false22.lor.lhs.false28_crit_edge, %while.cond
  %bf.load39 = phi i32 [ %bf.load29.pre, %lor.lhs.false22.lor.lhs.false28_crit_edge ], [ %bf.load12, %while.cond ], !dbg !3436
  %bf.clear30 = and i32 %bf.load39, 65535, !dbg !3436
  %cmp31 = icmp eq i32 %bf.clear30, 120, !dbg !3437
  %cmp34 = icmp eq i32 %bf.clear30, 40, !dbg !3438
  %or.cond = or i1 %cmp31, %cmp34, !dbg !3439
  br i1 %or.cond, label %while.body, label %while.end, !dbg !3439

while.body:                                       ; preds = %land.lhs.true, %lor.lhs.false22, %lor.lhs.false28
  br label %while.cond, !dbg !3426, !llvm.loop !3440

while.end:                                        ; preds = %lor.lhs.false28
  %bf.clear30.lcssa = phi i32 [ %bf.clear30, %lor.lhs.false28 ], !dbg !3436
  %dest.0.lcssa = phi %struct.rtx_def* [ %dest.0, %lor.lhs.false28 ], !dbg !3427
  %cmp41 = icmp eq i32 %bf.clear30.lcssa, 15, !dbg !3442
  br i1 %cmp41, label %if.then42, label %if.else, !dbg !3444

if.then42:                                        ; preds = %while.end
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3445
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtvec_def**, !dbg !3445
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3445
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !3445
  %8 = load i32, i32* %num_elem, align 8, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %8, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  %9 = sext i32 %8 to i64, !dbg !3448
  br label %for.cond, !dbg !3448

for.cond:                                         ; preds = %for.inc, %if.then42
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %9, %if.then42 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3449
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  %cmp46 = icmp sgt i64 %indvars.iv, 0, !dbg !3450
  br i1 %cmp46, label %for.body, label %if.end96.loopexit, !dbg !3452

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3453
  %arrayidx51 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv.next, !dbg !3453
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx51, align 8, !dbg !3453
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3453
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !3453
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !3453
  %cmp56 = icmp eq %struct.rtx_def* %12, null, !dbg !3455
  br i1 %cmp56, label %for.inc, label %if.then57, !dbg !3456

if.then57:                                        ; preds = %for.body
  tail call void %fun(%struct.rtx_def* nonnull %12, %struct.rtx_def* %x.addr.0, i8* %data) #6, !dbg !3457
  br label %for.inc, !dbg !3457

for.inc:                                          ; preds = %for.body, %if.then57
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  br label %for.cond, !dbg !3458, !llvm.loop !3459

if.else:                                          ; preds = %while.end
  tail call void %fun(%struct.rtx_def* %dest.0.lcssa, %struct.rtx_def* %x.addr.0, i8* %data) #6, !dbg !3461
  br label %if.end96

if.else71:                                        ; preds = %lor.lhs.false
  %cmp74 = icmp eq i32 %bf.clear2, 15, !dbg !3462
  br i1 %cmp74, label %if.then75, label %if.end96, !dbg !3464

if.then75:                                        ; preds = %if.else71
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3465
  %rt_rtvec79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**, !dbg !3465
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec79, align 8, !dbg !3465
  %num_elem80 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !3465
  %14 = load i32, i32* %num_elem80, align 8, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %14, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  %15 = sext i32 %14 to i64, !dbg !3467
  br label %for.cond82, !dbg !3467

for.cond82:                                       ; preds = %for.body84, %if.then75
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.body84 ], [ %15, %if.then75 ]
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, -1, !dbg !3468
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  %cmp83 = icmp sgt i64 %indvars.iv6, 0, !dbg !3469
  br i1 %cmp83, label %for.body84, label %if.end96.loopexit3, !dbg !3471

for.body84:                                       ; preds = %for.cond82
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec79, align 8, !dbg !3472
  %arrayidx91 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv.next7, !dbg !3472
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91, align 8, !dbg !3472
  tail call void @note_stores(%struct.rtx_def* %17, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fun, i8* %data) #7, !dbg !3473
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3413
  br label %for.cond82, !dbg !3474, !llvm.loop !3475

if.end96.loopexit:                                ; preds = %for.cond
  br label %if.end96, !dbg !3477

if.end96.loopexit3:                               ; preds = %for.cond82
  br label %if.end96, !dbg !3477

if.end96:                                         ; preds = %if.end96.loopexit3, %if.end96.loopexit, %if.else71, %if.else
  ret void, !dbg !3477
}

; Function Attrs: nounwind uwtable
define internal void @set_of_1(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data1) #4 !dbg !3478 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3480, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !3481, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i8* %data1, metadata !3482, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i8* %data1, metadata !3483, metadata !DIExpression()), !dbg !3485
  %pat1 = getelementptr inbounds i8, i8* %data1, i64 8, !dbg !3486
  %0 = bitcast i8* %pat1 to %struct.rtx_def**, !dbg !3486
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !3486
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %x, %struct.rtx_def* %1) #6, !dbg !3488
  %tobool = icmp eq i32 %call, 0, !dbg !3488
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3489

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3490
  %bf.load = load i32, i32* %2, align 8, !dbg !3490
  %bf.clear = and i32 %bf.load, 65535, !dbg !3490
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !3490
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3491

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !3492
  %call3 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %3, %struct.rtx_def* %x) #7, !dbg !3493
  %tobool4 = icmp eq i32 %call3, 0, !dbg !3493
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3494

if.then:                                          ; preds = %land.lhs.true, %entry
  %found = bitcast i8* %data1 to %struct.rtx_def**, !dbg !3495
  store %struct.rtx_def* %pat, %struct.rtx_def** %found, align 8, !dbg !3496
  br label %if.end, !dbg !3497

if.end:                                           ; preds = %land.lhs.true, %if.then, %lor.lhs.false
  ret void, !dbg !3498
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %pat) local_unnamed_addr #4 !dbg !3499 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3503, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !3504, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 1, metadata !3506, metadata !DIExpression()), !dbg !3514
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !3515
  %bf.load = load i32, i32* %0, align 8, !dbg !3515
  %bf.clear = and i32 %bf.load, 65535, !dbg !3515
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !3516
  br i1 %cmp, label %for.cond.preheader, label %cleanup34, !dbg !3517

for.cond.preheader:                               ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3518
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !3518
  br label %for.cond, !dbg !3519

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3520
  %set_verified.0 = phi i32 [ 1, %for.cond.preheader ], [ %set_verified.5, %for.inc ], !dbg !3520
  %set.0 = phi %struct.rtx_def* [ null, %for.cond.preheader ], [ %set.5, %for.inc ], !dbg !3521
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3507, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %set_verified.0, metadata !3506, metadata !DIExpression()), !dbg !3514
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3522
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !3522
  %2 = load i32, i32* %num_elem, align 8, !dbg !3522
  %3 = sext i32 %2 to i64, !dbg !3523
  %cmp1 = icmp slt i64 %indvars.iv, %3, !dbg !3523
  br i1 %cmp1, label %for.body, label %cleanup34.loopexit, !dbg !3519

for.body:                                         ; preds = %for.cond
  %arrayidx6 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 %indvars.iv, !dbg !3524
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !3524
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3508, metadata !DIExpression()), !dbg !3525
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3526
  %bf.load7 = load i32, i32* %5, align 8, !dbg !3526
  %trunc = trunc i32 %bf.load7 to i16, !dbg !3527
  switch i16 %trunc, label %cleanup [
    i16 24, label %sw.epilog
    i16 25, label %sw.epilog
    i16 23, label %sw.bb9
  ], !dbg !3527

sw.bb9:                                           ; preds = %for.body
  %tobool = icmp eq i32 %set_verified.0, 0, !dbg !3528
  br i1 %tobool, label %if.then10, label %if.end18, !dbg !3531

if.then10:                                        ; preds = %sw.bb9
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3532
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !3532
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3532
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* %6) #7, !dbg !3535
  %tobool14 = icmp eq %struct.rtx_def* %call, null, !dbg !3535
  br i1 %tobool14, label %if.else, label %land.lhs.true, !dbg !3536

land.lhs.true:                                    ; preds = %if.then10
  %call15 = tail call i32 @side_effects_p(%struct.rtx_def* %set.0) #7, !dbg !3537
  %tobool16 = icmp eq i32 %call15, 0, !dbg !3537
  br i1 %tobool16, label %if.end18, label %if.else, !dbg !3538

if.else:                                          ; preds = %land.lhs.true, %if.then10
  call void @llvm.dbg.value(metadata i32 1, metadata !3506, metadata !DIExpression()), !dbg !3514
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true, %sw.bb9, %if.else
  %set_verified.2 = phi i32 [ %set_verified.0, %sw.bb9 ], [ 1, %if.else ], [ 0, %land.lhs.true ], !dbg !3514
  %set.2 = phi %struct.rtx_def* [ %set.0, %sw.bb9 ], [ %set.0, %if.else ], [ null, %land.lhs.true ], !dbg !3521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.2, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %set_verified.2, metadata !3506, metadata !DIExpression()), !dbg !3514
  %tobool19 = icmp eq %struct.rtx_def* %set.2, null, !dbg !3539
  br i1 %tobool19, label %sw.epilog, label %if.else21, !dbg !3541

if.else21:                                        ; preds = %if.end18
  %arrayidx24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3542
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !3542
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !3542
  %call26 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* %7) #7, !dbg !3544
  %tobool27 = icmp eq %struct.rtx_def* %call26, null, !dbg !3544
  br i1 %tobool27, label %cleanup, label %lor.lhs.false, !dbg !3545

lor.lhs.false:                                    ; preds = %if.else21
  %call28 = tail call i32 @side_effects_p(%struct.rtx_def* %4) #7, !dbg !3546
  %tobool29 = icmp eq i32 %call28, 0, !dbg !3546
  br i1 %tobool29, label %sw.epilog, label %cleanup, !dbg !3547

sw.epilog:                                        ; preds = %lor.lhs.false, %if.end18, %for.body, %for.body
  %set_verified.4 = phi i32 [ %set_verified.0, %for.body ], [ %set_verified.0, %for.body ], [ 0, %if.end18 ], [ %set_verified.2, %lor.lhs.false ], !dbg !3520
  %set.4 = phi %struct.rtx_def* [ %set.0, %for.body ], [ %set.0, %for.body ], [ %4, %if.end18 ], [ %set.2, %lor.lhs.false ], !dbg !3521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.4, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %set_verified.4, metadata !3506, metadata !DIExpression()), !dbg !3514
  br label %cleanup, !dbg !3548

cleanup:                                          ; preds = %lor.lhs.false, %if.else21, %for.body, %sw.epilog
  %set_verified.5 = phi i32 [ %set_verified.4, %sw.epilog ], [ %set_verified.2, %lor.lhs.false ], [ %set_verified.2, %if.else21 ], [ %set_verified.0, %for.body ], !dbg !3520
  %set.5 = phi %struct.rtx_def* [ %set.4, %sw.epilog ], [ %set.2, %lor.lhs.false ], [ %set.2, %if.else21 ], [ %set.0, %for.body ], !dbg !3521
  %cleanup.dest.slot.0 = phi i1 [ true, %sw.epilog ], [ false, %lor.lhs.false ], [ false, %if.else21 ], [ false, %for.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.5, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %set_verified.5, metadata !3506, metadata !DIExpression()), !dbg !3514
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup34.loopexit

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3549
  call void @llvm.dbg.value(metadata i32 undef, metadata !3507, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3514
  br label %for.cond, !dbg !3550, !llvm.loop !3551

cleanup34.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.2.ph = phi %struct.rtx_def* [ %set.0, %for.cond ], [ null, %cleanup ]
  br label %cleanup34, !dbg !3553

cleanup34:                                        ; preds = %cleanup34.loopexit, %entry
  %retval.2 = phi %struct.rtx_def* [ null, %entry ], [ %retval.2.ph, %cleanup34.loopexit ], !dbg !3514
  ret %struct.rtx_def* %retval.2, !dbg !3553
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) local_unnamed_addr #4 !dbg !3554 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3558, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %kind, metadata !3559, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %datum, metadata !3560, metadata !DIExpression()), !dbg !3562
  %tobool = icmp eq %struct.rtx_def* %insn, null, !dbg !3563
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3563

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1697, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3563
  br label %cond.end, !dbg !3563

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3564
  %bf.load = load i32, i32* %0, align 8, !dbg !3564
  %bf.clear = and i32 %bf.load, 65535, !dbg !3564
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3564
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3564

lor.lhs.false:                                    ; preds = %cond.end
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3564
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3564

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3564
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3564

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3564
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !3566

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %cond.end
  %cmp12 = icmp eq %struct.rtx_def* %datum, null, !dbg !3567
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3562
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3562
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3562
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3561, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3561, metadata !DIExpression()), !dbg !3562
  br i1 %cmp12, label %for.cond.preheader, label %for.cond29.preheader, !dbg !3569

for.cond29.preheader:                             ; preds = %if.end
  br label %for.cond29, !dbg !3570

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !3572

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %link.0 = phi %struct.rtx_def* [ %5, %for.inc ], [ %2, %for.cond.preheader ], !dbg !3575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !3561, metadata !DIExpression()), !dbg !3562
  %tobool14 = icmp eq %struct.rtx_def* %link.0, null, !dbg !3572
  br i1 %tobool14, label %cleanup.loopexit, label %for.body, !dbg !3572

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !3576
  %bf.load15 = load i32, i32* %3, align 8, !dbg !3576
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !3576
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !3576
  %cmp17 = icmp eq i32 %bf.clear16, %kind, !dbg !3579
  br i1 %cmp17, label %cleanup.loopexit, label %for.inc, !dbg !3580

for.inc:                                          ; preds = %for.body
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3581
  %rt_rtx23 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3581
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3581
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3561, metadata !DIExpression()), !dbg !3562
  br label %for.cond, !dbg !3582, !llvm.loop !3583

for.cond29:                                       ; preds = %for.cond29.preheader, %for.inc43
  %link.1 = phi %struct.rtx_def* [ %9, %for.inc43 ], [ %2, %for.cond29.preheader ], !dbg !3585
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.1, metadata !3561, metadata !DIExpression()), !dbg !3562
  %tobool30 = icmp eq %struct.rtx_def* %link.1, null, !dbg !3570
  br i1 %tobool30, label %cleanup.loopexit1, label %for.body31, !dbg !3570

for.body31:                                       ; preds = %for.cond29
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.1, i64 0, i32 0, !dbg !3586
  %bf.load32 = load i32, i32* %6, align 8, !dbg !3586
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !3586
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !3586
  %cmp35 = icmp eq i32 %bf.clear34, %kind, !dbg !3589
  br i1 %cmp35, label %land.lhs.true, label %for.inc43, !dbg !3590

land.lhs.true:                                    ; preds = %for.body31
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3591
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !3591
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !3591
  %cmp40 = icmp eq %struct.rtx_def* %7, %datum, !dbg !3592
  br i1 %cmp40, label %cleanup.loopexit1, label %for.inc43, !dbg !3593

for.inc43:                                        ; preds = %for.body31, %land.lhs.true
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3594
  %rt_rtx47 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !3594
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !3594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !3561, metadata !DIExpression()), !dbg !3562
  br label %for.cond29, !dbg !3595, !llvm.loop !3596

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi %struct.rtx_def* [ null, %for.cond ], [ %link.0, %for.body ]
  br label %cleanup, !dbg !3598

cleanup.loopexit1:                                ; preds = %land.lhs.true, %for.cond29
  %retval.0.ph2 = phi %struct.rtx_def* [ null, %for.cond29 ], [ %link.1, %land.lhs.true ]
  br label %cleanup, !dbg !3598

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %lor.lhs.false8
  %retval.0 = phi %struct.rtx_def* [ null, %lor.lhs.false8 ], [ %retval.0.ph, %cleanup.loopexit ], [ %retval.0.ph2, %cleanup.loopexit1 ], !dbg !3562
  ret %struct.rtx_def* %retval.0, !dbg !3598
}

; Function Attrs: nounwind uwtable
define dso_local i32 @side_effects_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3599 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3601, metadata !DIExpression()), !dbg !3613
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3614
  %bf.load = load i32, i32* %0, align 8, !dbg !3614
  %bf.clear = and i32 %bf.load, 65535, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3602, metadata !DIExpression()), !dbg !3613
  %trunc = trunc i32 %bf.load to i16, !dbg !3615
  switch i16 %trunc, label %sw.epilog [
    i16 44, label %cleanup58
    i16 45, label %cleanup58
    i16 30, label %cleanup58
    i16 35, label %cleanup58
    i16 32, label %cleanup58
    i16 31, label %cleanup58
    i16 33, label %cleanup58
    i16 46, label %cleanup58
    i16 36, label %cleanup58
    i16 37, label %cleanup58
    i16 38, label %cleanup58
    i16 20, label %cleanup58
    i16 21, label %cleanup58
    i16 138, label %cleanup58
    i16 25, label %sw.bb1
    i16 75, label %sw.bb4
    i16 74, label %sw.bb4
    i16 77, label %sw.bb4
    i16 76, label %sw.bb4
    i16 78, label %sw.bb4
    i16 79, label %sw.bb4
    i16 26, label %sw.bb4
    i16 19, label %sw.bb4
    i16 43, label %sw.bb5
    i16 16, label %sw.bb5
    i16 17, label %sw.bb5
  ], !dbg !3615

sw.bb1:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 16711680, !dbg !3616
  %cmp = icmp ne i32 %bf.clear3, 0, !dbg !3618
  %conv = zext i1 %cmp to i32, !dbg !3618
  br label %cleanup58, !dbg !3619

sw.bb4:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %cleanup58, !dbg !3620

sw.bb5:                                           ; preds = %entry, %entry, %entry
  %bf.clear8 = and i32 %bf.load, 134217728, !dbg !3621
  %tobool = icmp eq i32 %bf.clear8, 0, !dbg !3621
  br i1 %tobool, label %sw.epilog, label %cleanup58, !dbg !3623

sw.epilog:                                        ; preds = %sw.bb5, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !3624
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3624
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !3624
  call void @llvm.dbg.value(metadata i8* %1, metadata !3603, metadata !DIExpression()), !dbg !3625
  %arrayidx10 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !3626
  %2 = load i8, i8* %arrayidx10, align 1, !dbg !3626
  call void @llvm.dbg.value(metadata i8 %2, metadata !3605, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3625
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !3627
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3627
  %3 = zext i8 %2 to i64, !dbg !3630
  br label %for.cond, !dbg !3630

for.cond:                                         ; preds = %for.inc52, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc52 ], [ %3, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !3631
  call void @llvm.dbg.value(metadata i32 undef, metadata !3605, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3625
  %cmp12 = icmp sgt i64 %indvars.iv2, 0, !dbg !3632
  br i1 %cmp12, label %for.body, label %cleanup54, !dbg !3633

for.body:                                         ; preds = %for.cond
  %arrayidx15 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next3, !dbg !3634
  %4 = load i8, i8* %arrayidx15, align 1, !dbg !3634
  %cmp17 = icmp eq i8 %4, 101, !dbg !3635
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !3636

if.then19:                                        ; preds = %for.body
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !3627
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3627
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3627
  %call = tail call i32 @side_effects_p(%struct.rtx_def* %5) #7, !dbg !3637
  %tobool22 = icmp eq i32 %call, 0, !dbg !3637
  br i1 %tobool22, label %for.inc52, label %cleanup54, !dbg !3638

if.else:                                          ; preds = %for.body
  %cmp28 = icmp eq i8 %4, 69, !dbg !3639
  br i1 %cmp28, label %for.cond31.preheader, label %for.inc52, !dbg !3640

for.cond31.preheader:                             ; preds = %if.else
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !3641
  %rt_rtvec43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtvec_def**, !dbg !3641
  br label %for.cond31, !dbg !3645

for.cond31:                                       ; preds = %for.cond31.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond31.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3646
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3606, metadata !DIExpression()), !dbg !3647
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec43, align 8, !dbg !3648
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !3648
  %7 = load i32, i32* %num_elem, align 8, !dbg !3648
  %8 = sext i32 %7 to i64, !dbg !3649
  %cmp36 = icmp slt i64 %indvars.iv, %8, !dbg !3649
  br i1 %cmp36, label %for.body38, label %cleanup, !dbg !3645

for.body38:                                       ; preds = %for.cond31
  %arrayidx45 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv, !dbg !3641
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx45, align 8, !dbg !3641
  %call46 = tail call i32 @side_effects_p(%struct.rtx_def* %9) #7, !dbg !3650
  %tobool47 = icmp eq i32 %call46, 0, !dbg !3650
  br i1 %tobool47, label %for.inc, label %cleanup, !dbg !3651

for.inc:                                          ; preds = %for.body38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 undef, metadata !3606, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3647
  br label %for.cond31, !dbg !3653, !llvm.loop !3654

cleanup:                                          ; preds = %for.body38, %for.cond31
  %cleanup.dest.slot.0 = phi i32 [ 1, %for.body38 ], [ 0, %for.cond31 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc52, label %cleanup54

for.inc52:                                        ; preds = %if.then19, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !3605, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3625
  br label %for.cond, !dbg !3656, !llvm.loop !3657

cleanup54:                                        ; preds = %if.then19, %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then19 ], [ 0, %for.cond ]
  %cond = icmp ne i32 %cleanup.dest.slot.1, 0
  %spec.select = zext i1 %cond to i32
  ret i32 %spec.select

cleanup58:                                        ; preds = %sw.bb5, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb4, %sw.bb1
  %retval.5 = phi i32 [ 1, %sw.bb4 ], [ %conv, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %sw.bb5 ], !dbg !3613
  ret i32 %retval.5, !dbg !3659
}

; Function Attrs: nounwind uwtable
define dso_local i32 @multiple_sets(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3660 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3662, metadata !DIExpression()), !dbg !3665
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3666
  %bf.load = load i32, i32* %0, align 8, !dbg !3666
  %bf.clear = and i32 %bf.load, 65535, !dbg !3666
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3666
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3666

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3666
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3666

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3666
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3666

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3666
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !3668

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3669
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3669
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !3669
  %3 = load i32*, i32** %2, align 8, !dbg !3669
  %bf.load12 = load i32, i32* %3, align 8, !dbg !3669
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3669
  %cmp14 = icmp eq i32 %bf.clear13, 15, !dbg !3671
  br i1 %cmp14, label %for.cond.preheader, label %cleanup, !dbg !3672

for.cond.preheader:                               ; preds = %if.end
  %arrayidx22 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !3673
  %rt_rtvec = bitcast i32* %arrayidx22 to %struct.rtvec_def**, !dbg !3673
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3673
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !3673
  %5 = load i32, i32* %num_elem, align 8, !dbg !3673
  %6 = sext i32 %5 to i64, !dbg !3677
  br label %for.cond, !dbg !3677

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3678
  %found.0 = phi i32 [ 0, %for.cond.preheader ], [ %found.1, %for.inc ], !dbg !3678
  call void @llvm.dbg.value(metadata i32 %found.0, metadata !3663, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3664, metadata !DIExpression()), !dbg !3665
  %cmp23 = icmp slt i64 %indvars.iv, %6, !dbg !3679
  br i1 %cmp23, label %for.body, label %cleanup.loopexit, !dbg !3677

for.body:                                         ; preds = %for.cond
  %arrayidx32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv, !dbg !3680
  %7 = bitcast %struct.rtx_def** %arrayidx32 to i32**, !dbg !3680
  %8 = load i32*, i32** %7, align 8, !dbg !3680
  %bf.load33 = load i32, i32* %8, align 8, !dbg !3680
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !3680
  %cmp35 = icmp eq i32 %bf.clear34, 23, !dbg !3682
  br i1 %cmp35, label %if.then36, label %for.inc, !dbg !3683

if.then36:                                        ; preds = %for.body
  %tobool = icmp eq i32 %found.0, 0, !dbg !3684
  br i1 %tobool, label %for.inc, label %cleanup.loopexit, !dbg !3687

for.inc:                                          ; preds = %if.then36, %for.body
  %found.1 = phi i32 [ %found.0, %for.body ], [ 1, %if.then36 ], !dbg !3678
  call void @llvm.dbg.value(metadata i32 %found.1, metadata !3663, metadata !DIExpression()), !dbg !3665
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3688
  call void @llvm.dbg.value(metadata i32 undef, metadata !3664, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3665
  br label %for.cond, !dbg !3689, !llvm.loop !3690

cleanup.loopexit:                                 ; preds = %for.cond, %if.then36
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then36 ]
  br label %cleanup, !dbg !3692

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %lor.lhs.false8
  %retval.0 = phi i32 [ 0, %lor.lhs.false8 ], [ 0, %if.end ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3665
  ret i32 %retval.0, !dbg !3692
}

; Function Attrs: nounwind uwtable
define dso_local i32 @set_noop_p(%struct.rtx_def* %set) local_unnamed_addr #4 !dbg !3693 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set, metadata !3695, metadata !DIExpression()), !dbg !3698
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3699
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3699
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3699
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3696, metadata !DIExpression()), !dbg !3698
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3700
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3700
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3697, metadata !DIExpression()), !dbg !3698
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3701
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !3703
  %cmp5 = icmp eq %struct.rtx_def* %1, %3, !dbg !3704
  %or.cond = and i1 %cmp, %cmp5, !dbg !3705
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !3705

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !3706
  %bf.load = load i32, i32* %4, align 8, !dbg !3706
  %bf.clear = and i32 %bf.load, 65535, !dbg !3706
  %cmp6 = icmp eq i32 %bf.clear, 43, !dbg !3706
  br i1 %cmp6, label %land.lhs.true7, label %if.end14, !dbg !3708

land.lhs.true7:                                   ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3709
  %bf.load8 = load i32, i32* %5, align 8, !dbg !3709
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !3709
  %cmp10 = icmp eq i32 %bf.clear9, 43, !dbg !3709
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !3710

if.then11:                                        ; preds = %land.lhs.true7
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %1) #6, !dbg !3711
  %tobool = icmp eq i32 %call, 0, !dbg !3711
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3712

land.rhs:                                         ; preds = %if.then11
  %call12 = tail call i32 @side_effects_p(%struct.rtx_def* %2) #7, !dbg !3713
  %tobool13 = icmp eq i32 %call12, 0, !dbg !3714
  %phitmp2 = zext i1 %tobool13 to i32
  br label %land.end

land.end:                                         ; preds = %if.then11, %land.rhs
  %6 = phi i32 [ 0, %if.then11 ], [ %phitmp2, %land.rhs ]
  br label %cleanup, !dbg !3715

if.end14:                                         ; preds = %land.lhs.true7, %if.end
  %cmp17 = icmp eq i32 %bf.clear, 120, !dbg !3716
  br i1 %cmp17, label %if.then18, label %if.end37, !dbg !3718

if.then18:                                        ; preds = %if.end14
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3719
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3719
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3719
  %call23 = tail call i32 @rtx_equal_p(%struct.rtx_def* %7, %struct.rtx_def* %1) #6, !dbg !3720
  %tobool24 = icmp eq i32 %call23, 0, !dbg !3720
  br i1 %tobool24, label %land.end35, label %land.lhs.true25, !dbg !3721

land.lhs.true25:                                  ; preds = %if.then18
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3722
  %rt_rtx29 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !3722
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !3722
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3723
  %cmp30 = icmp eq %struct.rtx_def* %9, %10, !dbg !3724
  br i1 %cmp30, label %land.rhs31, label %land.end35, !dbg !3725

land.rhs31:                                       ; preds = %land.lhs.true25
  %call32 = tail call i32 @side_effects_p(%struct.rtx_def* %1) #7, !dbg !3726
  %tobool33 = icmp eq i32 %call32, 0, !dbg !3727
  %phitmp1 = zext i1 %tobool33 to i32
  br label %land.end35

land.end35:                                       ; preds = %if.then18, %land.rhs31, %land.lhs.true25
  %11 = phi i32 [ 0, %land.lhs.true25 ], [ 0, %if.then18 ], [ %phitmp1, %land.rhs31 ]
  br label %cleanup, !dbg !3728

if.end37:                                         ; preds = %if.end14
  %cmp40 = icmp eq i32 %bf.clear, 40, !dbg !3729
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !3731

if.then41:                                        ; preds = %if.end37
  %arrayidx44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3732
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !3732
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !3732
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !3697, metadata !DIExpression()), !dbg !3698
  br label %if.end46, !dbg !3733

if.end46:                                         ; preds = %if.then41, %if.end37
  %dst.0 = phi %struct.rtx_def* [ %12, %if.then41 ], [ %2, %if.end37 ], !dbg !3698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.0, metadata !3697, metadata !DIExpression()), !dbg !3698
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3734
  %bf.load47 = load i32, i32* %13, align 8, !dbg !3734
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !3734
  %cmp49 = icmp eq i32 %bf.clear48, 39, !dbg !3736
  br i1 %cmp49, label %land.lhs.true50, label %if.end73, !dbg !3737

land.lhs.true50:                                  ; preds = %if.end46
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.0, i64 0, i32 0, !dbg !3738
  %bf.load51 = load i32, i32* %14, align 8, !dbg !3738
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !3738
  %cmp53 = icmp eq i32 %bf.clear52, 39, !dbg !3739
  br i1 %cmp53, label %if.then54, label %if.end73, !dbg !3740

if.then54:                                        ; preds = %land.lhs.true50
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3741
  %rt_uint = bitcast %union.rtunion_def* %15 to i32*, !dbg !3741
  %16 = load i32, i32* %rt_uint, align 8, !dbg !3741
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3744
  %rt_uint61 = bitcast %union.rtunion_def* %17 to i32*, !dbg !3744
  %18 = load i32, i32* %rt_uint61, align 8, !dbg !3744
  %cmp62 = icmp eq i32 %16, %18, !dbg !3745
  br i1 %cmp62, label %if.end64, label %cleanup, !dbg !3746

if.end64:                                         ; preds = %if.then54
  %arrayidx67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3747
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !3747
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !3747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !3696, metadata !DIExpression()), !dbg !3698
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3748
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !3748
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !3748
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !3697, metadata !DIExpression()), !dbg !3698
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !3698
  %bf.load74.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3749
  br label %if.end73, !dbg !3750

if.end73:                                         ; preds = %if.end64, %land.lhs.true50, %if.end46
  %bf.load74 = phi i32 [ %bf.load74.pre, %if.end64 ], [ %bf.load47, %land.lhs.true50 ], [ %bf.load47, %if.end46 ], !dbg !3749
  %dst.1 = phi %struct.rtx_def* [ %20, %if.end64 ], [ %dst.0, %land.lhs.true50 ], [ %dst.0, %if.end46 ], !dbg !3698
  %src.0 = phi %struct.rtx_def* [ %19, %if.end64 ], [ %1, %land.lhs.true50 ], [ %1, %if.end46 ], !dbg !3698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !3696, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.1, metadata !3697, metadata !DIExpression()), !dbg !3698
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !3749
  %cmp76 = icmp eq i32 %bf.clear75, 37, !dbg !3749
  br i1 %cmp76, label %land.lhs.true77, label %land.end85, !dbg !3751

land.lhs.true77:                                  ; preds = %if.end73
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.1, i64 0, i32 0, !dbg !3752
  %bf.load78 = load i32, i32* %21, align 8, !dbg !3752
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3752
  %cmp80 = icmp eq i32 %bf.clear79, 37, !dbg !3752
  br i1 %cmp80, label %land.rhs81, label %land.end85, !dbg !3753

land.rhs81:                                       ; preds = %land.lhs.true77
  %call82 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %src.0) #7, !dbg !3754
  %call83 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dst.1) #7, !dbg !3755
  %cmp84 = icmp eq i32 %call82, %call83, !dbg !3756
  %phitmp = zext i1 %cmp84 to i32
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true77, %if.end73
  %22 = phi i32 [ 0, %land.lhs.true77 ], [ 0, %if.end73 ], [ %phitmp, %land.rhs81 ]
  br label %cleanup, !dbg !3757

cleanup:                                          ; preds = %if.then54, %entry, %land.end85, %land.end35, %land.end
  %retval.0 = phi i32 [ %6, %land.end ], [ %11, %land.end35 ], [ %22, %land.end85 ], [ 1, %entry ], [ 0, %if.then54 ], !dbg !3698
  ret i32 %retval.0, !dbg !3758
}

; Function Attrs: nounwind uwtable
define dso_local i32 @noop_move_p(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !3759 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3761, metadata !DIExpression()), !dbg !3770
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3771
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3771
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3771
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3762, metadata !DIExpression()), !dbg !3770
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !3772
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !3772
  %3 = load i32, i32* %rt_int, align 8, !dbg !3772
  %cmp = icmp eq i32 %3, 2147483647, !dbg !3774
  br i1 %cmp, label %cleanup42, label %if.end, !dbg !3775

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* null) #7, !dbg !3776
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3776
  br i1 %tobool, label %if.end5, label %cleanup42, !dbg !3778

if.end5:                                          ; preds = %if.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3779
  %bf.load = load i32, i32* %4, align 8, !dbg !3779
  %bf.clear = and i32 %bf.load, 65535, !dbg !3779
  %cmp6 = icmp eq i32 %bf.clear, 23, !dbg !3781
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !3782

land.lhs.true:                                    ; preds = %if.end5
  %call7 = tail call i32 @set_noop_p(%struct.rtx_def* %1) #7, !dbg !3783
  %tobool8 = icmp eq i32 %call7, 0, !dbg !3783
  br i1 %tobool8, label %land.lhs.true.if.end10_crit_edge, label %cleanup42, !dbg !3784

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  %bf.load11.pre = load i32, i32* %4, align 8, !dbg !3785
  br label %if.end10, !dbg !3784

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %if.end5
  %bf.load11 = phi i32 [ %bf.load11.pre, %land.lhs.true.if.end10_crit_edge ], [ %bf.load, %if.end5 ], !dbg !3785
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3785
  %cmp13 = icmp eq i32 %bf.clear12, 15, !dbg !3786
  br i1 %cmp13, label %for.cond.preheader, label %cleanup42, !dbg !3787

for.cond.preheader:                               ; preds = %if.end10
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3788
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !3788
  br label %for.cond, !dbg !3789

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3790
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3763, metadata !DIExpression()), !dbg !3791
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3792
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 0, !dbg !3792
  %6 = load i32, i32* %num_elem, align 8, !dbg !3792
  %7 = sext i32 %6 to i64, !dbg !3793
  %cmp18 = icmp slt i64 %indvars.iv, %7, !dbg !3793
  br i1 %cmp18, label %for.body, label %cleanup42.loopexit, !dbg !3789

for.body:                                         ; preds = %for.cond
  %arrayidx23 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv, !dbg !3794
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8, !dbg !3794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !3766, metadata !DIExpression()), !dbg !3795
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !3796
  %bf.load24 = load i32, i32* %9, align 8, !dbg !3796
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !3796
  %cmp26 = icmp eq i32 %bf.clear25, 24, !dbg !3798
  br i1 %cmp26, label %cleanup, label %lor.lhs.false, !dbg !3799

lor.lhs.false:                                    ; preds = %for.body
  %cmp29 = icmp eq i32 %bf.clear25, 25, !dbg !3800
  br i1 %cmp29, label %cleanup, label %if.end31, !dbg !3801

if.end31:                                         ; preds = %lor.lhs.false
  %cmp34 = icmp eq i32 %bf.clear25, 23, !dbg !3802
  br i1 %cmp34, label %lor.lhs.false35, label %cleanup, !dbg !3804

lor.lhs.false35:                                  ; preds = %if.end31
  %call36 = tail call i32 @set_noop_p(%struct.rtx_def* %8) #7, !dbg !3805
  %tobool37 = icmp eq i32 %call36, 0, !dbg !3805
  %spec.select = zext i1 %tobool37 to i32, !dbg !3806
  br label %cleanup, !dbg !3806

cleanup:                                          ; preds = %if.end31, %lor.lhs.false35, %for.body, %lor.lhs.false
  %cleanup.dest.slot.0 = phi i32 [ 4, %lor.lhs.false ], [ 4, %for.body ], [ 1, %if.end31 ], [ %spec.select, %lor.lhs.false35 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup42.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3807
  call void @llvm.dbg.value(metadata i32 undef, metadata !3763, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3791
  br label %for.cond, !dbg !3808, !llvm.loop !3809

cleanup42.loopexit:                               ; preds = %for.cond, %cleanup
  %retval.3.ph = phi i32 [ 1, %for.cond ], [ 0, %cleanup ]
  br label %cleanup42, !dbg !3811

cleanup42:                                        ; preds = %cleanup42.loopexit, %land.lhs.true, %if.end, %if.end10, %entry
  %retval.3 = phi i32 [ 1, %entry ], [ 0, %if.end ], [ 1, %land.lhs.true ], [ 0, %if.end10 ], [ %retval.3.ph, %cleanup42.loopexit ]
  ret i32 %retval.3, !dbg !3811
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_last_value(%struct.rtx_def* %x, %struct.rtx_def** %pinsn, %struct.rtx_def* %valid_to, i32 %allow_hwreg) local_unnamed_addr #4 !dbg !3812 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3816, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pinsn, metadata !3817, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valid_to, metadata !3818, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %allow_hwreg, metadata !3819, metadata !DIExpression()), !dbg !3830
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pinsn, align 8, !dbg !3831
  %cmp76 = icmp eq %struct.rtx_def* %valid_to, null, !dbg !3832
  %tobool92 = icmp ne i32 %allow_hwreg, 0, !dbg !3832
  br i1 %cmp76, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !3834

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !3834

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !3834

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %.pn.us = phi %struct.rtx_def* [ %0, %entry.split.us ], [ %p.0.us, %for.inc.us ]
  %retval.0.us = phi %struct.rtx_def* [ undef, %entry.split.us ], [ %retval.4.us, %for.inc.us ]
  %p.0.in.in.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3835
  %p.0.in.us = bitcast %union.rtunion_def* %p.0.in.in.us to %struct.rtx_def**, !dbg !3835
  %p.0.us = load %struct.rtx_def*, %struct.rtx_def** %p.0.in.us, align 8, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0.us, metadata !3820, metadata !DIExpression()), !dbg !3830
  %tobool.us = icmp eq %struct.rtx_def* %p.0.us, null, !dbg !3836
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %land.rhs.us, !dbg !3837

land.rhs.us:                                      ; preds = %for.cond.us
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0.us, i64 0, i32 0, !dbg !3838
  %bf.load.us = load i32, i32* %1, align 8, !dbg !3838
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !3838
  %cmp.us = icmp eq i32 %bf.clear.us, 12, !dbg !3838
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !3839

for.body.us:                                      ; preds = %land.rhs.us
  %cmp3.us = icmp eq i32 %bf.clear.us, 8, !dbg !3840
  br i1 %cmp3.us, label %if.then.us, label %lor.lhs.false.us, !dbg !3840

lor.lhs.false.us:                                 ; preds = %for.body.us
  %cmp6.us = icmp eq i32 %bf.clear.us, 7, !dbg !3840
  br i1 %cmp6.us, label %if.then.us, label %lor.lhs.false7.us, !dbg !3840

lor.lhs.false7.us:                                ; preds = %lor.lhs.false.us
  %cmp10.us = icmp eq i32 %bf.clear.us, 9, !dbg !3840
  br i1 %cmp10.us, label %if.then.us, label %lor.lhs.false11.us, !dbg !3840

lor.lhs.false11.us:                               ; preds = %lor.lhs.false7.us
  %cmp14.us = icmp eq i32 %bf.clear.us, 10, !dbg !3840
  br i1 %cmp14.us, label %if.then.us, label %for.inc.us, !dbg !3841

if.then.us:                                       ; preds = %lor.lhs.false11.us, %lor.lhs.false7.us, %lor.lhs.false.us, %for.body.us
  br i1 %cmp3.us, label %cond.true.us, label %lor.lhs.false18.us, !dbg !3842

lor.lhs.false18.us:                               ; preds = %if.then.us
  %cmp21.us = icmp eq i32 %bf.clear.us, 7, !dbg !3842
  br i1 %cmp21.us, label %cond.true.us, label %lor.lhs.false22.us, !dbg !3842

lor.lhs.false22.us:                               ; preds = %lor.lhs.false18.us
  %cmp25.us = icmp eq i32 %bf.clear.us, 9, !dbg !3842
  br i1 %cmp25.us, label %cond.true.us, label %lor.lhs.false26.us, !dbg !3842

lor.lhs.false26.us:                               ; preds = %lor.lhs.false22.us
  %cmp29.us = icmp eq i32 %bf.clear.us, 10, !dbg !3842
  br i1 %cmp29.us, label %cond.true.us, label %cond.end47.us, !dbg !3842

cond.true.us:                                     ; preds = %lor.lhs.false26.us, %lor.lhs.false22.us, %lor.lhs.false18.us, %if.then.us
  %u30.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0.us, i64 0, i32 1, !dbg !3842
  %2 = getelementptr inbounds %union.u, %union.u* %u30.us, i64 1, i32 0, i32 0, i64 0, !dbg !3842
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !3842
  %4 = load i32*, i32** %3, align 8, !dbg !3842
  %bf.load34.us = load i32, i32* %4, align 8, !dbg !3842
  %bf.clear35.us = and i32 %bf.load34.us, 65535, !dbg !3842
  %cmp36.us = icmp eq i32 %bf.clear35.us, 23, !dbg !3842
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !3842
  br i1 %cmp36.us, label %cond.end47.us, label %cond.false.us, !dbg !3842

cond.false.us:                                    ; preds = %cond.true.us
  %call.us = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %p.0.us, %struct.rtx_def* %5) #7, !dbg !3842
  br label %cond.end47.us, !dbg !3842

cond.end47.us:                                    ; preds = %cond.false.us, %cond.true.us, %lor.lhs.false26.us
  %cond48.us = phi %struct.rtx_def* [ %call.us, %cond.false.us ], [ %5, %cond.true.us ], [ null, %lor.lhs.false26.us ], !dbg !3842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond48.us, metadata !3821, metadata !DIExpression()), !dbg !3843
  %call49.us = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %p.0.us, i32 4, %struct.rtx_def* null) #7, !dbg !3844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49.us, metadata !3826, metadata !DIExpression()), !dbg !3843
  %tobool50.us = icmp eq %struct.rtx_def* %cond48.us, null, !dbg !3845
  br i1 %tobool50.us, label %if.end95.us, label %land.lhs.true.us, !dbg !3846

land.lhs.true.us:                                 ; preds = %cond.end47.us
  %arrayidx53.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3847
  %rt_rtx54.us = bitcast %union.rtunion_def* %arrayidx53.us to %struct.rtx_def**, !dbg !3847
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54.us, align 8, !dbg !3847
  %call55.us = tail call i32 @rtx_equal_p(%struct.rtx_def* %x, %struct.rtx_def* %6) #6, !dbg !3848
  %tobool56.us = icmp eq i32 %call55.us, 0, !dbg !3848
  br i1 %tobool56.us, label %if.end95.us, label %if.then57.us, !dbg !3849

if.then57.us:                                     ; preds = %land.lhs.true.us
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3850
  %rt_rtx61.us = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3850
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61.us, align 8, !dbg !3850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !3827, metadata !DIExpression()), !dbg !3851
  %tobool62.us = icmp eq %struct.rtx_def* %call49.us, null, !dbg !3852
  br i1 %tobool62.us, label %if.end.us, label %land.lhs.true63.us, !dbg !3854

land.lhs.true63.us:                               ; preds = %if.then57.us
  %arrayidx66.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call49.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3855
  %9 = bitcast %union.rtunion_def* %arrayidx66.us to i32**, !dbg !3855
  %10 = load i32*, i32** %9, align 8, !dbg !3855
  %bf.load68.us = load i32, i32* %10, align 8, !dbg !3855
  %bf.clear69.us = and i32 %bf.load68.us, 65535, !dbg !3855
  %cmp70.us = icmp eq i32 %bf.clear69.us, 3, !dbg !3856
  br i1 %cmp70.us, label %if.end.us, label %if.then71.us, !dbg !3857

if.then71.us:                                     ; preds = %land.lhs.true63.us
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !3857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !3827, metadata !DIExpression()), !dbg !3851
  br label %if.end.us, !dbg !3858

if.end.us:                                        ; preds = %if.then71.us, %land.lhs.true63.us, %if.then57.us
  %src.0.us = phi %struct.rtx_def* [ %11, %if.then71.us ], [ %8, %land.lhs.true63.us ], [ %8, %if.then57.us ], !dbg !3851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0.us, metadata !3827, metadata !DIExpression()), !dbg !3851
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.0.us, i64 0, i32 0, !dbg !3859
  %bf.load85.us = load i32, i32* %12, align 8, !dbg !3859
  %bf.clear86.us = and i32 %bf.load85.us, 65535, !dbg !3859
  %cmp87.us = icmp eq i32 %bf.clear86.us, 37, !dbg !3859
  br i1 %cmp87.us, label %land.lhs.true88.us, label %if.then93.us, !dbg !3860

land.lhs.true88.us:                               ; preds = %if.end.us
  %call89.us = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %src.0.us) #7, !dbg !3861
  %cmp90.us = icmp ugt i32 %call89.us, 52, !dbg !3862
  %or.cond.us = or i1 %cmp90.us, %tobool92, !dbg !3863
  br i1 %or.cond.us, label %if.then93.us, label %cleanup.us, !dbg !3863

if.then93.us:                                     ; preds = %land.lhs.true88.us, %if.end.us
  store %struct.rtx_def* %p.0.us, %struct.rtx_def** %pinsn, align 8, !dbg !3864
  br label %cleanup.us, !dbg !3866

cleanup.us:                                       ; preds = %if.then93.us, %land.lhs.true88.us
  %cleanup.dest.slot.0.us = phi i32 [ 1, %if.then93.us ], [ 0, %land.lhs.true88.us ]
  %retval.1.us = phi %struct.rtx_def* [ %src.0.us, %if.then93.us ], [ %retval.0.us, %land.lhs.true88.us ]
  %cond1.us = icmp eq i32 %cleanup.dest.slot.0.us, 0
  br i1 %cond1.us, label %if.end95.us, label %cleanup100.us

if.end95.us:                                      ; preds = %cleanup.us, %land.lhs.true.us, %cond.end47.us
  %retval.2.us = phi %struct.rtx_def* [ %retval.0.us, %land.lhs.true.us ], [ %retval.0.us, %cond.end47.us ], [ %retval.1.us, %cleanup.us ]
  %call96.us = tail call i32 @reg_set_p(%struct.rtx_def* %x, %struct.rtx_def* nonnull %p.0.us) #7, !dbg !3867
  %tobool97.us = icmp eq i32 %call96.us, 0, !dbg !3867
  %..us = select i1 %tobool97.us, i32 0, i32 2, !dbg !3869
  br label %cleanup100.us, !dbg !3869

cleanup100.us:                                    ; preds = %if.end95.us, %cleanup.us
  %cleanup.dest.slot.1.us = phi i32 [ %cleanup.dest.slot.0.us, %cleanup.us ], [ %..us, %if.end95.us ]
  %retval.3.us = phi %struct.rtx_def* [ %retval.1.us, %cleanup.us ], [ %retval.2.us, %if.end95.us ], !dbg !3866
  switch i32 %cleanup.dest.slot.1.us, label %cleanup109.loopexit.us-lcssa.us [
    i32 0, label %for.inc.us
    i32 2, label %for.end.us-lcssa.us
  ]

for.inc.us:                                       ; preds = %cleanup100.us, %lor.lhs.false11.us
  %retval.4.us = phi %struct.rtx_def* [ %retval.0.us, %lor.lhs.false11.us ], [ %retval.3.us, %cleanup100.us ]
  br label %for.cond.us, !dbg !3870, !llvm.loop !3871

for.end.us-lcssa.us:                              ; preds = %cleanup100.us, %land.rhs.us, %for.cond.us
  br label %for.end, !dbg !3873

cleanup109.loopexit.us-lcssa.us:                  ; preds = %cleanup100.us
  %retval.3.us.lcssa = phi %struct.rtx_def* [ %retval.3.us, %cleanup100.us ], !dbg !3866
  br label %cleanup109.loopexit, !dbg !3874

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %.pn = phi %struct.rtx_def* [ %0, %entry.entry.split_crit_edge ], [ %p.0, %for.inc ]
  %retval.0 = phi %struct.rtx_def* [ undef, %entry.entry.split_crit_edge ], [ %retval.4, %for.inc ]
  %p.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3835
  %p.0.in = bitcast %union.rtunion_def* %p.0.in.in to %struct.rtx_def**, !dbg !3835
  %p.0 = load %struct.rtx_def*, %struct.rtx_def** %p.0.in, align 8, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0, metadata !3820, metadata !DIExpression()), !dbg !3830
  %tobool = icmp eq %struct.rtx_def* %p.0, null, !dbg !3836
  br i1 %tobool, label %for.end.us-lcssa, label %land.rhs, !dbg !3837

land.rhs:                                         ; preds = %for.cond
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 0, !dbg !3838
  %bf.load = load i32, i32* %13, align 8, !dbg !3838
  %bf.clear = and i32 %bf.load, 65535, !dbg !3838
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !3838
  br i1 %cmp, label %for.end.us-lcssa, label %for.body, !dbg !3839

for.body:                                         ; preds = %land.rhs
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !3840
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !3840

lor.lhs.false:                                    ; preds = %for.body
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !3840
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !3840

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !3840
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !3840

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !3840
  br i1 %cmp14, label %if.then, label %for.inc, !dbg !3841

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false7, %lor.lhs.false, %for.body
  br i1 %cmp3, label %cond.true, label %lor.lhs.false18, !dbg !3842

lor.lhs.false18:                                  ; preds = %if.then
  %cmp21 = icmp eq i32 %bf.clear, 7, !dbg !3842
  br i1 %cmp21, label %cond.true, label %lor.lhs.false22, !dbg !3842

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 9, !dbg !3842
  br i1 %cmp25, label %cond.true, label %lor.lhs.false26, !dbg !3842

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %cmp29 = icmp eq i32 %bf.clear, 10, !dbg !3842
  br i1 %cmp29, label %cond.true, label %cond.end47, !dbg !3842

cond.true:                                        ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false18, %if.then
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, !dbg !3842
  %14 = getelementptr inbounds %union.u, %union.u* %u30, i64 1, i32 0, i32 0, i64 0, !dbg !3842
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !3842
  %16 = load i32*, i32** %15, align 8, !dbg !3842
  %bf.load34 = load i32, i32* %16, align 8, !dbg !3842
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !3842
  %cmp36 = icmp eq i32 %bf.clear35, 23, !dbg !3842
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !3842
  br i1 %cmp36, label %cond.end47, label %cond.false, !dbg !3842

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %p.0, %struct.rtx_def* %17) #7, !dbg !3842
  br label %cond.end47, !dbg !3842

cond.end47:                                       ; preds = %lor.lhs.false26, %cond.false, %cond.true
  %cond48 = phi %struct.rtx_def* [ %call, %cond.false ], [ %17, %cond.true ], [ null, %lor.lhs.false26 ], !dbg !3842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond48, metadata !3821, metadata !DIExpression()), !dbg !3843
  %call49 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %p.0, i32 4, %struct.rtx_def* null) #7, !dbg !3844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !3826, metadata !DIExpression()), !dbg !3843
  %tobool50 = icmp eq %struct.rtx_def* %cond48, null, !dbg !3845
  br i1 %tobool50, label %if.end95, label %land.lhs.true, !dbg !3846

land.lhs.true:                                    ; preds = %cond.end47
  %arrayidx53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3847
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !3847
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !3847
  %call55 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x, %struct.rtx_def* %18) #6, !dbg !3848
  %tobool56 = icmp eq i32 %call55, 0, !dbg !3848
  br i1 %tobool56, label %if.end95, label %if.then57, !dbg !3849

if.then57:                                        ; preds = %land.lhs.true
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3850
  %rt_rtx61 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !3850
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !3850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !3827, metadata !DIExpression()), !dbg !3851
  %tobool62 = icmp eq %struct.rtx_def* %call49, null, !dbg !3852
  br i1 %tobool62, label %if.end, label %land.lhs.true63, !dbg !3854

land.lhs.true63:                                  ; preds = %if.then57
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call49, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3855
  %21 = bitcast %union.rtunion_def* %arrayidx66 to i32**, !dbg !3855
  %22 = load i32*, i32** %21, align 8, !dbg !3855
  %bf.load68 = load i32, i32* %22, align 8, !dbg !3855
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !3855
  %cmp70 = icmp eq i32 %bf.clear69, 3, !dbg !3856
  br i1 %cmp70, label %if.end, label %if.then71, !dbg !3857

if.then71:                                        ; preds = %land.lhs.true63
  %23 = bitcast i32* %22 to %struct.rtx_def*, !dbg !3857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !3827, metadata !DIExpression()), !dbg !3851
  br label %if.end, !dbg !3858

if.end:                                           ; preds = %land.lhs.true63, %if.then57, %if.then71
  %src.0 = phi %struct.rtx_def* [ %23, %if.then71 ], [ %20, %land.lhs.true63 ], [ %20, %if.then57 ], !dbg !3851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !3827, metadata !DIExpression()), !dbg !3851
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3875
  %rt_rtx81 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3875
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !3875
  %call82 = tail call i32 @modified_between_p(%struct.rtx_def* %src.0, %struct.rtx_def* %25, %struct.rtx_def* nonnull %valid_to) #7, !dbg !3876
  %tobool83 = icmp eq i32 %call82, 0, !dbg !3876
  br i1 %tobool83, label %land.lhs.true84, label %cleanup, !dbg !3877

land.lhs.true84:                                  ; preds = %if.end
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.0, i64 0, i32 0, !dbg !3859
  %bf.load85 = load i32, i32* %26, align 8, !dbg !3859
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !3859
  %cmp87 = icmp eq i32 %bf.clear86, 37, !dbg !3859
  br i1 %cmp87, label %land.lhs.true88, label %if.then93, !dbg !3860

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %call89 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %src.0) #7, !dbg !3861
  %cmp90 = icmp ugt i32 %call89, 52, !dbg !3862
  %or.cond = or i1 %cmp90, %tobool92, !dbg !3863
  br i1 %or.cond, label %if.then93, label %cleanup, !dbg !3863

if.then93:                                        ; preds = %land.lhs.true88, %land.lhs.true84
  store %struct.rtx_def* %p.0, %struct.rtx_def** %pinsn, align 8, !dbg !3864
  br label %cleanup, !dbg !3866

cleanup:                                          ; preds = %if.end, %land.lhs.true88, %if.then93
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then93 ], [ 0, %land.lhs.true88 ], [ 0, %if.end ]
  %retval.1 = phi %struct.rtx_def* [ %src.0, %if.then93 ], [ %retval.0, %land.lhs.true88 ], [ %retval.0, %if.end ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end95, label %cleanup100

if.end95:                                         ; preds = %land.lhs.true, %cond.end47, %cleanup
  %retval.2 = phi %struct.rtx_def* [ %retval.0, %land.lhs.true ], [ %retval.0, %cond.end47 ], [ %retval.1, %cleanup ]
  %call96 = tail call i32 @reg_set_p(%struct.rtx_def* %x, %struct.rtx_def* nonnull %p.0) #7, !dbg !3867
  %tobool97 = icmp eq i32 %call96, 0, !dbg !3867
  %. = select i1 %tobool97, i32 0, i32 2, !dbg !3869
  br label %cleanup100, !dbg !3869

cleanup100:                                       ; preds = %if.end95, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ %., %if.end95 ]
  %retval.3 = phi %struct.rtx_def* [ %retval.1, %cleanup ], [ %retval.2, %if.end95 ], !dbg !3866
  switch i32 %cleanup.dest.slot.1, label %cleanup109.loopexit.us-lcssa [
    i32 0, label %for.inc
    i32 2, label %for.end.us-lcssa
  ]

for.inc:                                          ; preds = %lor.lhs.false11, %cleanup100
  %retval.4 = phi %struct.rtx_def* [ %retval.0, %lor.lhs.false11 ], [ %retval.3, %cleanup100 ]
  br label %for.cond, !dbg !3870, !llvm.loop !3871

for.end.us-lcssa:                                 ; preds = %cleanup100, %for.cond, %land.rhs
  br label %for.end, !dbg !3873

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  br label %cleanup109, !dbg !3873

cleanup109.loopexit.us-lcssa:                     ; preds = %cleanup100
  %retval.3.lcssa3 = phi %struct.rtx_def* [ %retval.3, %cleanup100 ], !dbg !3866
  br label %cleanup109.loopexit, !dbg !3874

cleanup109.loopexit:                              ; preds = %cleanup109.loopexit.us-lcssa.us, %cleanup109.loopexit.us-lcssa
  %retval.3.lcssa = phi %struct.rtx_def* [ %retval.3.lcssa3, %cleanup109.loopexit.us-lcssa ], [ %retval.3.us.lcssa, %cleanup109.loopexit.us-lcssa.us ], !dbg !3866
  br label %cleanup109, !dbg !3874

cleanup109:                                       ; preds = %cleanup109.loopexit, %for.end
  %retval.5 = phi %struct.rtx_def* [ %x, %for.end ], [ %retval.3.lcssa, %cleanup109.loopexit ], !dbg !3830
  ret %struct.rtx_def* %retval.5, !dbg !3874
}

; Function Attrs: nounwind uwtable
define dso_local i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %x, %struct.rtx_def** %loc) local_unnamed_addr #4 !dbg !3878 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3882, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %endregno, metadata !3883, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !3885, metadata !DIExpression()), !dbg !3903
  br label %repeat.outer, !dbg !3904

repeat.outer:                                     ; preds = %if.then153, %entry
  %x.addr.0.ph = phi %struct.rtx_def* [ %27, %if.then153 ], [ %x, %entry ]
  br label %repeat, !dbg !3905

repeat:                                           ; preds = %repeat.outer, %if.end127
  %x.addr.0 = phi %struct.rtx_def* [ %21, %if.end127 ], [ %x.addr.0.ph, %repeat.outer ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.label(metadata !3902), !dbg !3906
  %cmp = icmp eq %struct.rtx_def* %x.addr.0, null, !dbg !3907
  br i1 %cmp, label %cleanup211.loopexit2, label %if.end, !dbg !3905

if.end:                                           ; preds = %repeat
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !3909
  %bf.load = load i32, i32* %0, align 8, !dbg !3909
  %bf.clear = and i32 %bf.load, 65535, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3888, metadata !DIExpression()), !dbg !3903
  %1 = add nsw i32 %bf.clear, -23, !dbg !3910
  %2 = lshr i32 %1, 1, !dbg !3910
  %3 = shl i32 %1, 31, !dbg !3910
  %4 = or i32 %2, %3, !dbg !3910
  switch i32 %4, label %sw.epilog.loopexit [
    i32 7, label %sw.bb
    i32 8, label %sw.bb19
    i32 1, label %sw.bb45
    i32 0, label %sw.bb45
  ], !dbg !3910

sw.bb:                                            ; preds = %if.end
  %x.addr.0.lcssa30 = phi %struct.rtx_def* [ %x.addr.0, %if.end ]
  %.lcssa27 = phi i32* [ %0, %if.end ], !dbg !3909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa30, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa30, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa30, metadata !3884, metadata !DIExpression()), !dbg !3903
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa30) #7, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %call, metadata !3887, metadata !DIExpression()), !dbg !3903
  switch i32 %call, label %if.end9 [
    i32 7, label %land.lhs.true
    i32 16, label %land.lhs.true
    i32 20, label %land.lhs.true
  ], !dbg !3912

land.lhs.true:                                    ; preds = %sw.bb, %sw.bb, %sw.bb
  %regno.off = add i32 %regno, -53, !dbg !3914
  %5 = icmp ult i32 %regno.off, 5, !dbg !3914
  br i1 %5, label %cleanup211, label %if.end9, !dbg !3914

if.end9:                                          ; preds = %sw.bb, %land.lhs.true
  %cmp10 = icmp ult i32 %call, %endregno, !dbg !3915
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !3916

land.rhs:                                         ; preds = %if.end9
  %call11 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa30) #7, !dbg !3917
  %cmp12 = icmp ult i32 %call11, 53, !dbg !3917
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !3917

cond.true:                                        ; preds = %land.rhs
  %bf.load13 = load i32, i32* %.lcssa27, align 8, !dbg !3917
  %bf.lshr = lshr i32 %bf.load13, 16, !dbg !3917
  %bf.clear14 = and i32 %bf.lshr, 255, !dbg !3917
  %call15 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa30) #7, !dbg !3917
  %call16 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear14, i32 %call15) #7, !dbg !3917
  br label %cond.end, !dbg !3917

cond.false:                                       ; preds = %land.rhs
  %call17 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa30) #7, !dbg !3917
  %add = add i32 %call17, 1, !dbg !3917
  br label %cond.end, !dbg !3917

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call16, %cond.true ], [ %add, %cond.false ], !dbg !3917
  %cmp18 = icmp ugt i32 %cond, %regno, !dbg !3918
  %phitmp = zext i1 %cmp18 to i32
  br label %land.end

land.end:                                         ; preds = %cond.end, %if.end9
  %6 = phi i32 [ 0, %if.end9 ], [ %phitmp, %cond.end ]
  br label %cleanup211, !dbg !3919

sw.bb19:                                          ; preds = %if.end
  %x.addr.0.lcssa31 = phi %struct.rtx_def* [ %x.addr.0, %if.end ]
  %bf.clear.lcssa25 = phi i32 [ %bf.clear, %if.end ], !dbg !3909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31, metadata !3884, metadata !DIExpression()), !dbg !3903
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0.lcssa31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3920
  %7 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3920
  %8 = load i32*, i32** %7, align 8, !dbg !3920
  %bf.load20 = load i32, i32* %8, align 8, !dbg !3920
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !3920
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !3920
  br i1 %cmp22, label %land.lhs.true23, label %sw.epilog, !dbg !3921

land.lhs.true23:                                  ; preds = %sw.bb19
  %9 = bitcast i32* %8 to %struct.rtx_def*, !dbg !3921
  %call28 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %9) #7, !dbg !3922
  %cmp29 = icmp ult i32 %call28, 53, !dbg !3923
  br i1 %cmp29, label %if.then30, label %sw.epilog, !dbg !3924

if.then30:                                        ; preds = %land.lhs.true23
  %x.addr.0.lcssa31.lcssa = phi %struct.rtx_def* [ %x.addr.0.lcssa31, %land.lhs.true23 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31.lcssa, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31.lcssa, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa31.lcssa, metadata !3884, metadata !DIExpression()), !dbg !3903
  %call31 = tail call i32 @subreg_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa31.lcssa) #7, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %call31, metadata !3890, metadata !DIExpression()), !dbg !3926
  %cmp32 = icmp ult i32 %call31, 53, !dbg !3927
  br i1 %cmp32, label %cond.true33, label %cond.end36, !dbg !3928

cond.true33:                                      ; preds = %if.then30
  %call34 = tail call i32 @subreg_nregs(%struct.rtx_def* nonnull %x.addr.0.lcssa31.lcssa) #7, !dbg !3929
  br label %cond.end36, !dbg !3928

cond.end36:                                       ; preds = %if.then30, %cond.true33
  %cond37 = phi i32 [ %call34, %cond.true33 ], [ 1, %if.then30 ], !dbg !3928
  %add38 = add i32 %call31, %cond37, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %add38, metadata !3894, metadata !DIExpression()), !dbg !3926
  %cmp39 = icmp ult i32 %call31, %endregno, !dbg !3931
  %cmp41 = icmp ugt i32 %add38, %regno, !dbg !3932
  %10 = and i1 %cmp39, %cmp41, !dbg !3932
  %land.ext43 = zext i1 %10 to i32, !dbg !3932
  br label %cleanup211

sw.bb45:                                          ; preds = %if.end, %if.end
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3933
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !3933
  %cmp50 = icmp eq %struct.rtx_def** %rt_rtx49, %loc, !dbg !3935
  br i1 %cmp50, label %if.end118, label %land.lhs.true51, !dbg !3936

land.lhs.true51:                                  ; preds = %sw.bb45
  %11 = bitcast %union.rtunion_def* %arrayidx48 to i32**, !dbg !3937
  %12 = load i32*, i32** %11, align 8, !dbg !3937
  %bf.load56 = load i32, i32* %12, align 8, !dbg !3937
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !3937
  %cmp58 = icmp eq i32 %bf.clear57, 39, !dbg !3938
  br i1 %cmp58, label %land.lhs.true59, label %lor.lhs.false102, !dbg !3939

land.lhs.true59:                                  ; preds = %land.lhs.true51
  %arrayidx66 = getelementptr inbounds i32, i32* %12, i64 2, !dbg !3940
  %rt_rtx67 = bitcast i32* %arrayidx66 to %struct.rtx_def**, !dbg !3940
  %cmp68 = icmp eq %struct.rtx_def** %rt_rtx67, %loc, !dbg !3941
  br i1 %cmp68, label %lor.lhs.false102, label %land.lhs.true69, !dbg !3942

land.lhs.true69:                                  ; preds = %land.lhs.true59
  %13 = bitcast i32* %arrayidx66 to i32**, !dbg !3943
  %14 = load i32*, i32** %13, align 8, !dbg !3943
  %bf.load78 = load i32, i32* %14, align 8, !dbg !3943
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3943
  %cmp80 = icmp eq i32 %bf.clear79, 37, !dbg !3943
  br i1 %cmp80, label %land.lhs.true81, label %lor.lhs.false102, !dbg !3944

land.lhs.true81:                                  ; preds = %land.lhs.true69
  %15 = bitcast i32* %14 to %struct.rtx_def*, !dbg !3944
  %call90 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %15) #7, !dbg !3945
  %cmp91 = icmp ugt i32 %call90, 52, !dbg !3946
  br i1 %cmp91, label %land.lhs.true92, label %lor.lhs.false102, !dbg !3947

land.lhs.true92:                                  ; preds = %land.lhs.true81
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !3948
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3948
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !3948
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !3948
  %call101 = tail call i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %17, %struct.rtx_def** %loc) #7, !dbg !3949
  %tobool = icmp eq i32 %call101, 0, !dbg !3949
  br i1 %tobool, label %lor.lhs.false102, label %cleanup211.loopexit2, !dbg !3950

lor.lhs.false102:                                 ; preds = %land.lhs.true92, %land.lhs.true59, %land.lhs.true81, %land.lhs.true69, %land.lhs.true51
  %18 = load i32*, i32** %11, align 8, !dbg !3951
  %bf.load107 = load i32, i32* %18, align 8, !dbg !3951
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !3951
  %cmp109 = icmp eq i32 %bf.clear108, 37, !dbg !3951
  br i1 %cmp109, label %if.end118, label %land.lhs.true110, !dbg !3952

land.lhs.true110:                                 ; preds = %lor.lhs.false102
  %19 = bitcast i32* %18 to %struct.rtx_def*, !dbg !3952
  %call115 = tail call i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %19, %struct.rtx_def** %loc) #7, !dbg !3953
  %tobool116 = icmp eq i32 %call115, 0, !dbg !3953
  br i1 %tobool116, label %if.end118, label %cleanup211.loopexit2, !dbg !3954

if.end118:                                        ; preds = %land.lhs.true110, %sw.bb45, %lor.lhs.false102
  %cmp119 = icmp eq i32 %bf.clear, 25, !dbg !3955
  br i1 %cmp119, label %cleanup211.loopexit2, label %lor.lhs.false120, !dbg !3957

lor.lhs.false120:                                 ; preds = %if.end118
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3958
  %rt_rtx124 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !3958
  %cmp125 = icmp eq %struct.rtx_def** %rt_rtx124, %loc, !dbg !3959
  br i1 %cmp125, label %cleanup211.loopexit2, label %if.end127, !dbg !3960

if.end127:                                        ; preds = %lor.lhs.false120
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx124, align 8, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !3884, metadata !DIExpression()), !dbg !3903
  br label %repeat, !dbg !3962

sw.epilog.loopexit:                               ; preds = %if.end
  %x.addr.0.lcssa29 = phi %struct.rtx_def* [ %x.addr.0, %if.end ]
  %bf.clear.lcssa = phi i32 [ %bf.clear, %if.end ], !dbg !3909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa29, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa29, metadata !3884, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa29, metadata !3884, metadata !DIExpression()), !dbg !3903
  br label %sw.epilog, !dbg !3963

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb19, %land.lhs.true23
  %x.addr.032 = phi %struct.rtx_def* [ %x.addr.0.lcssa29, %sw.epilog.loopexit ], [ %x.addr.0.lcssa31, %sw.bb19 ], [ %x.addr.0.lcssa31, %land.lhs.true23 ]
  %bf.clear26 = phi i32 [ %bf.clear.lcssa, %sw.epilog.loopexit ], [ %bf.clear.lcssa25, %sw.bb19 ], [ %bf.clear.lcssa25, %land.lhs.true23 ]
  %idxprom = zext i32 %bf.clear26 to i64, !dbg !3963
  %arrayidx132 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !3963
  %22 = load i8*, i8** %arrayidx132, align 8, !dbg !3963
  call void @llvm.dbg.value(metadata i8* %22, metadata !3889, metadata !DIExpression()), !dbg !3903
  %arrayidx134 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !3964
  %23 = load i8, i8* %arrayidx134, align 1, !dbg !3964
  call void @llvm.dbg.value(metadata i8 %23, metadata !3886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3903
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.032, i64 0, i32 1, !dbg !3965
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !3965
  %24 = zext i8 %23 to i64, !dbg !3966
  br label %for.cond, !dbg !3966

for.cond:                                         ; preds = %for.inc208, %sw.epilog
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc208 ], [ %24, %sw.epilog ]
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, -1, !dbg !3967
  call void @llvm.dbg.value(metadata i32 undef, metadata !3886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3903
  %cmp135 = icmp sgt i64 %indvars.iv22, 0, !dbg !3968
  br i1 %cmp135, label %for.body, label %cleanup211.loopexit, !dbg !3969

for.body:                                         ; preds = %for.cond
  %arrayidx138 = getelementptr inbounds i8, i8* %22, i64 %indvars.iv.next23, !dbg !3970
  %25 = load i8, i8* %arrayidx138, align 1, !dbg !3970
  %cmp140 = icmp eq i8 %25, 101, !dbg !3971
  br i1 %cmp140, label %land.lhs.true142, label %if.else168, !dbg !3972

land.lhs.true142:                                 ; preds = %for.body
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 %indvars.iv.next23, !dbg !3973
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !3973
  %cmp148 = icmp eq %struct.rtx_def** %rt_rtx147, %loc, !dbg !3974
  br i1 %cmp148, label %if.else168, label %if.then150, !dbg !3975

if.then150:                                       ; preds = %land.lhs.true142
  %26 = icmp eq i64 %indvars.iv.next23, 0
  br i1 %26, label %if.then153, label %if.else, !dbg !3976

if.then153:                                       ; preds = %if.then150
  %rt_rtx157 = bitcast %union.u* %u143 to %struct.rtx_def**, !dbg !3978
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !3884, metadata !DIExpression()), !dbg !3903
  br label %repeat.outer, !dbg !3981

if.else:                                          ; preds = %if.then150
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !3982
  %call163 = tail call i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %28, %struct.rtx_def** %loc) #7, !dbg !3984
  %tobool164 = icmp eq i32 %call163, 0, !dbg !3984
  br i1 %tobool164, label %for.inc208, label %cleanup211.loopexit, !dbg !3985

if.else168:                                       ; preds = %land.lhs.true142, %for.body
  %cmp172 = icmp eq i8 %25, 69, !dbg !3986
  br i1 %cmp172, label %if.then174, label %for.inc208, !dbg !3987

if.then174:                                       ; preds = %if.else168
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 %indvars.iv.next23, !dbg !3988
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtvec_def**, !dbg !3988
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3988
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i64 0, i32 0, !dbg !3988
  %30 = load i32, i32* %num_elem, align 8, !dbg !3988
  call void @llvm.dbg.value(metadata i32 %30, metadata !3895, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3990
  %31 = sext i32 %30 to i64, !dbg !3991
  br label %for.cond180, !dbg !3991

for.cond180:                                      ; preds = %for.inc, %if.then174
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %31, %if.then174 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3992
  call void @llvm.dbg.value(metadata i32 undef, metadata !3895, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3990
  %cmp181 = icmp sgt i64 %indvars.iv, 0, !dbg !3993
  br i1 %cmp181, label %for.body183, label %cleanup, !dbg !3995

for.body183:                                      ; preds = %for.cond180
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3996
  %arrayidx190 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i64 0, i32 1, i64 %indvars.iv.next, !dbg !3996
  %cmp191 = icmp eq %struct.rtx_def** %arrayidx190, %loc, !dbg !3998
  br i1 %cmp191, label %for.inc, label %land.lhs.true193, !dbg !3999

land.lhs.true193:                                 ; preds = %for.body183
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx190, align 8, !dbg !4000
  %call202 = tail call i32 @refers_to_regno_p(i32 %regno, i32 %endregno, %struct.rtx_def* %33, %struct.rtx_def** %loc) #7, !dbg !4001
  %tobool203 = icmp eq i32 %call202, 0, !dbg !4001
  br i1 %tobool203, label %for.inc, label %cleanup, !dbg !4002

for.inc:                                          ; preds = %land.lhs.true193, %for.body183
  call void @llvm.dbg.value(metadata i32 undef, metadata !3895, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3990
  br label %for.cond180, !dbg !4003, !llvm.loop !4004

cleanup:                                          ; preds = %land.lhs.true193, %for.cond180
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true193 ], [ true, %for.cond180 ]
  br i1 %cleanup.dest.slot.0, label %for.inc208, label %cleanup211.loopexit

for.inc208:                                       ; preds = %if.else, %cleanup, %if.else168
  call void @llvm.dbg.value(metadata i32 undef, metadata !3886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3903
  br label %for.cond, !dbg !4006, !llvm.loop !4007

cleanup211.loopexit:                              ; preds = %cleanup, %for.cond, %if.else
  %retval.5.ph = phi i32 [ 0, %for.cond ], [ 1, %if.else ], [ 1, %cleanup ]
  br label %cleanup211, !dbg !4009

cleanup211.loopexit2:                             ; preds = %repeat, %lor.lhs.false120, %if.end118, %land.lhs.true110, %land.lhs.true92
  %retval.5.ph3 = phi i32 [ 0, %if.end118 ], [ 0, %lor.lhs.false120 ], [ 1, %land.lhs.true92 ], [ 1, %land.lhs.true110 ], [ 0, %repeat ]
  br label %cleanup211, !dbg !4009

cleanup211:                                       ; preds = %cleanup211.loopexit2, %cleanup211.loopexit, %land.lhs.true, %cond.end36, %land.end
  %retval.5 = phi i32 [ %land.ext43, %cond.end36 ], [ %6, %land.end ], [ 1, %land.lhs.true ], [ %retval.5.ph, %cleanup211.loopexit ], [ %retval.5.ph3, %cleanup211.loopexit2 ], !dbg !3903
  ret i32 %retval.5, !dbg !4009
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) unnamed_addr #0 !dbg !4010 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4014, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4015, metadata !DIExpression()), !dbg !4016
  %idxprom = zext i32 %regno to i64, !dbg !4017
  %idxprom1 = sext i32 %mode to i64, !dbg !4017
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !4017
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !4017
  %conv = zext i8 %0 to i32, !dbg !4017
  %add = add i32 %conv, %regno, !dbg !4018
  ret i32 %add, !dbg !4019
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_regno(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4020 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4022, metadata !DIExpression()), !dbg !4026
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4027
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4027
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4024, metadata !DIExpression()), !dbg !4026
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %call, metadata !4025, metadata !DIExpression()), !dbg !4026
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4029
  %bf.load = load i32, i32* %1, align 8, !dbg !4029
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4029
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4029
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4030
  %rt_uint = bitcast %union.rtunion_def* %2 to i32*, !dbg !4030
  %3 = load i32, i32* %rt_uint, align 8, !dbg !4030
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4031
  %bf.load4 = load i32, i32* %4, align 8, !dbg !4031
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !4031
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !4031
  %call7 = tail call i32 @subreg_regno_offset(i32 %call, i32 %bf.clear, i32 %3, i32 %bf.clear6) #7, !dbg !4032
  %add = add i32 %call, %call7, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %add, metadata !4023, metadata !DIExpression()), !dbg !4026
  ret i32 %add, !dbg !4034
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_nregs(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4035 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4037, metadata !DIExpression()), !dbg !4038
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4039
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4039
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4039
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !4039
  %call1 = tail call i32 @subreg_nregs_with_regno(i32 %call, %struct.rtx_def* %x) #7, !dbg !4040
  ret i32 %call1, !dbg !4041
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @note_uses(%struct.rtx_def** %pbody, void (%struct.rtx_def**, i8*)* %fun, i8* %data) local_unnamed_addr #4 !dbg !4042 {
entry:
  br label %tailrecurse, !dbg !4057

tailrecurse:                                      ; preds = %sw.bb, %entry
  %pbody.tr = phi %struct.rtx_def** [ %pbody, %entry ], [ %rt_rtx4, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pbody.tr, metadata !4049, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata void (%struct.rtx_def**, i8*)* %fun, metadata !4050, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i8* %data, metadata !4051, metadata !DIExpression()), !dbg !4058
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pbody.tr, align 8, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4052, metadata !DIExpression()), !dbg !4058
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4060
  %bf.load = load i32, i32* %1, align 8, !dbg !4060
  %trunc = trunc i32 %bf.load to i16, !dbg !4061
  switch i16 %trunc, label %sw.default [
    i16 14, label %sw.bb
    i16 15, label %sw.bb5
    i16 5, label %sw.bb14
    i16 24, label %sw.bb38
    i16 17, label %sw.bb43
    i16 29, label %sw.bb63
    i16 22, label %sw.bb68
    i16 18, label %sw.bb73
    i16 19, label %sw.bb73
    i16 25, label %sw.bb93
    i16 23, label %sw.bb109
  ], !dbg !4061

sw.bb:                                            ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4062
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4062
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx, i8* %data) #6, !dbg !4063
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4064
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4064
  br label %tailrecurse, !dbg !4057

sw.bb5:                                           ; preds = %tailrecurse
  %.lcssa46 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa46, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4065
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtvec_def**, !dbg !4065
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4065
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !4065
  %4 = load i32, i32* %num_elem, align 8, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %4, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %5 = sext i32 %4 to i64, !dbg !4067
  br label %for.cond, !dbg !4067

for.cond:                                         ; preds = %for.body, %sw.bb5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %5, %sw.bb5 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4068
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !4069
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !4071

for.body:                                         ; preds = %for.cond
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4072
  %arrayidx13 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4072
  tail call void @note_uses(%struct.rtx_def** nonnull %arrayidx13, void (%struct.rtx_def**, i8*)* %fun, i8* %data) #7, !dbg !4073
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  br label %for.cond, !dbg !4074, !llvm.loop !4075

sw.bb14:                                          ; preds = %tailrecurse
  %.lcssa47 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa47, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4077
  %rt_rtvec18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**, !dbg !4077
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec18, align 8, !dbg !4077
  %num_elem19 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !4077
  %8 = load i32, i32* %num_elem19, align 8, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %8, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %9 = sext i32 %8 to i64, !dbg !4079
  br label %for.cond21, !dbg !4079

for.cond21:                                       ; preds = %for.body23, %sw.bb14
  %indvars.iv40 = phi i64 [ %indvars.iv.next41, %for.body23 ], [ %9, %sw.bb14 ]
  %indvars.iv.next41 = add nsw i64 %indvars.iv40, -1, !dbg !4080
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %cmp22 = icmp sgt i64 %indvars.iv40, 0, !dbg !4081
  br i1 %cmp22, label %for.body23, label %cleanup.loopexit1, !dbg !4083

for.body23:                                       ; preds = %for.cond21
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec18, align 8, !dbg !4084
  %arrayidx30 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv.next41, !dbg !4084
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30, align 8, !dbg !4084
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, !dbg !4084
  %12 = getelementptr inbounds %union.u, %union.u* %u31, i64 1, i32 0, i32 0, i64 0, !dbg !4084
  %rt_rtx34 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4084
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx34, void (%struct.rtx_def**, i8*)* %fun, i8* %data) #7, !dbg !4085
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  br label %for.cond21, !dbg !4086, !llvm.loop !4087

sw.bb38:                                          ; preds = %tailrecurse
  %.lcssa48 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4089
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !4089
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx42, i8* %data) #6, !dbg !4090
  br label %cleanup, !dbg !4091

sw.bb43:                                          ; preds = %tailrecurse
  %.lcssa49 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa49, i64 0, i32 1, i32 0, i32 1, !dbg !4092
  %rt_rtvec47 = bitcast %struct.object_block** %arrayidx46 to %struct.rtvec_def**, !dbg !4092
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !4092
  %num_elem48 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !4092
  %14 = load i32, i32* %num_elem48, align 8, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %14, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %15 = sext i32 %14 to i64, !dbg !4094
  br label %for.cond50, !dbg !4094

for.cond50:                                       ; preds = %for.body52, %sw.bb43
  %indvars.iv42 = phi i64 [ %indvars.iv.next43, %for.body52 ], [ %15, %sw.bb43 ]
  %indvars.iv.next43 = add nsw i64 %indvars.iv42, -1, !dbg !4095
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %cmp51 = icmp sgt i64 %indvars.iv42, 0, !dbg !4096
  br i1 %cmp51, label %for.body52, label %cleanup.loopexit2, !dbg !4098

for.body52:                                       ; preds = %for.cond50
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !4099
  %arrayidx59 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv.next43, !dbg !4099
  tail call void %fun(%struct.rtx_def** nonnull %arrayidx59, i8* %data) #6, !dbg !4100
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  br label %for.cond50, !dbg !4101, !llvm.loop !4102

sw.bb63:                                          ; preds = %tailrecurse
  %.lcssa50 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4104
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4104
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx67, i8* %data) #6, !dbg !4105
  br label %cleanup, !dbg !4106

sw.bb68:                                          ; preds = %tailrecurse
  %.lcssa51 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa51, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4107
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !4107
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx72, i8* %data) #6, !dbg !4108
  br label %cleanup, !dbg !4109

sw.bb73:                                          ; preds = %tailrecurse, %tailrecurse
  %.lcssa52 = phi %struct.rtx_def* [ %0, %tailrecurse ], [ %0, %tailrecurse ], !dbg !4059
  %arrayidx76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4110
  %rt_rtvec77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtvec_def**, !dbg !4110
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec77, align 8, !dbg !4110
  %num_elem78 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !4110
  %18 = load i32, i32* %num_elem78, align 8, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %18, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %19 = sext i32 %18 to i64, !dbg !4112
  br label %for.cond80, !dbg !4112

for.cond80:                                       ; preds = %for.body82, %sw.bb73
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %for.body82 ], [ %19, %sw.bb73 ]
  %indvars.iv.next45 = add nsw i64 %indvars.iv44, -1, !dbg !4113
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  %cmp81 = icmp sgt i64 %indvars.iv44, 0, !dbg !4114
  br i1 %cmp81, label %for.body82, label %cleanup.loopexit3, !dbg !4116

for.body82:                                       ; preds = %for.cond80
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec77, align 8, !dbg !4117
  %arrayidx89 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next45, !dbg !4117
  tail call void %fun(%struct.rtx_def** nonnull %arrayidx89, i8* %data) #6, !dbg !4118
  call void @llvm.dbg.value(metadata i32 undef, metadata !4053, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4058
  br label %for.cond80, !dbg !4119, !llvm.loop !4120

sw.bb93:                                          ; preds = %tailrecurse
  %.lcssa53 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4122
  %21 = bitcast %union.rtunion_def* %arrayidx96 to i32**, !dbg !4122
  %22 = load i32*, i32** %21, align 8, !dbg !4122
  %bf.load98 = load i32, i32* %22, align 8, !dbg !4122
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !4122
  %cmp100 = icmp eq i32 %bf.clear99, 43, !dbg !4122
  br i1 %cmp100, label %if.then, label %cleanup, !dbg !4124

if.then:                                          ; preds = %sw.bb93
  %arrayidx107 = getelementptr inbounds i32, i32* %22, i64 2, !dbg !4125
  %rt_rtx108 = bitcast i32* %arrayidx107 to %struct.rtx_def**, !dbg !4125
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx108, i8* %data) #6, !dbg !4126
  br label %cleanup, !dbg !4126

sw.bb109:                                         ; preds = %tailrecurse
  %.lcssa54 = phi %struct.rtx_def* [ %0, %tailrecurse ], !dbg !4059
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa54, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4127
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !4127
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !4054, metadata !DIExpression()), !dbg !4128
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa54, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4129
  %rt_rtx117 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !4129
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx117, i8* %data) #6, !dbg !4130
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !4131
  %bf.load118 = load i32, i32* %25, align 8, !dbg !4131
  %bf.clear119 = and i32 %bf.load118, 65535, !dbg !4131
  %cmp120 = icmp eq i32 %bf.clear119, 120, !dbg !4133
  br i1 %cmp120, label %if.then121, label %if.end130, !dbg !4134

if.then121:                                       ; preds = %sw.bb109
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4135
  %rt_rtx125 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !4135
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx125, i8* %data) #6, !dbg !4137
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4138
  %rt_rtx129 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !4138
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx129, i8* %data) #6, !dbg !4139
  br label %if.end130, !dbg !4140

if.end130:                                        ; preds = %if.then121, %sw.bb109
  br label %while.cond, !dbg !4141

while.cond:                                       ; preds = %while.body, %if.end130
  %dest.0 = phi %struct.rtx_def* [ %23, %if.end130 ], [ %31, %while.body ], !dbg !4128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0, metadata !4054, metadata !DIExpression()), !dbg !4128
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 0, !dbg !4142
  %bf.load131 = load i32, i32* %28, align 8, !dbg !4142
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !4142
  %29 = add nsw i32 %bf.clear132, -39, !dbg !4143
  %30 = icmp ult i32 %29, 2, !dbg !4143
  br i1 %30, label %while.body, label %while.end, !dbg !4143

while.body:                                       ; preds = %while.cond
  %arrayidx139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4144
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !4144
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !4144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !4054, metadata !DIExpression()), !dbg !4128
  br label %while.cond, !dbg !4141, !llvm.loop !4145

while.end:                                        ; preds = %while.cond
  %dest.0.lcssa = phi %struct.rtx_def* [ %dest.0, %while.cond ], !dbg !4128
  %bf.clear132.lcssa = phi i32 [ %bf.clear132, %while.cond ], !dbg !4142
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !4054, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !4054, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0.lcssa, metadata !4054, metadata !DIExpression()), !dbg !4128
  %cmp143 = icmp eq i32 %bf.clear132.lcssa, 43, !dbg !4146
  br i1 %cmp143, label %if.then144, label %cleanup, !dbg !4148

if.then144:                                       ; preds = %while.end
  %arrayidx147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4149
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !4149
  tail call void %fun(%struct.rtx_def** nonnull %rt_rtx148, i8* %data) #6, !dbg !4150
  br label %cleanup, !dbg !4150

sw.default:                                       ; preds = %tailrecurse
  %pbody.tr.lcssa = phi %struct.rtx_def** [ %pbody.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pbody.tr.lcssa, metadata !4049, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pbody.tr.lcssa, metadata !4049, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pbody.tr.lcssa, metadata !4049, metadata !DIExpression()), !dbg !4058
  tail call void %fun(%struct.rtx_def** %pbody.tr.lcssa, i8* %data) #6, !dbg !4151
  br label %cleanup, !dbg !4152

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4153

cleanup.loopexit1:                                ; preds = %for.cond21
  br label %cleanup, !dbg !4153

cleanup.loopexit2:                                ; preds = %for.cond50
  br label %cleanup, !dbg !4153

cleanup.loopexit3:                                ; preds = %for.cond80
  br label %cleanup, !dbg !4153

cleanup:                                          ; preds = %cleanup.loopexit3, %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %while.end, %if.then144, %sw.bb93, %if.then, %sw.default, %sw.bb68, %sw.bb63, %sw.bb38
  ret void, !dbg !4153
}

; Function Attrs: nounwind uwtable
define dso_local i32 @dead_or_set_p(%struct.rtx_def* %insn, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4154 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4156, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4157, metadata !DIExpression()), !dbg !4161
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4162
  %bf.load = load i32, i32* %0, align 8, !dbg !4162
  %bf.clear = and i32 %bf.load, 65535, !dbg !4162
  %cmp = icmp eq i32 %bf.clear, 46, !dbg !4164
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4165

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !4166
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !4166

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4166
  br label %cond.end, !dbg !4166

cond.end:                                         ; preds = %if.end, %cond.true
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %call, metadata !4158, metadata !DIExpression()), !dbg !4161
  %call4 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !4168
  %cmp5 = icmp ult i32 %call4, 53, !dbg !4168
  br i1 %cmp5, label %cond.true6, label %cond.false11, !dbg !4168

cond.true6:                                       ; preds = %cond.end
  %bf.load7 = load i32, i32* %0, align 8, !dbg !4168
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !4168
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !4168
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !4168
  %call10 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear8, i32 %call9) #7, !dbg !4168
  br label %cond.end13, !dbg !4168

cond.false11:                                     ; preds = %cond.end
  %call12 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !4168
  %add = add i32 %call12, 1, !dbg !4168
  br label %cond.end13, !dbg !4168

cond.end13:                                       ; preds = %cond.false11, %cond.true6
  %cond14 = phi i32 [ %call10, %cond.true6 ], [ %add, %cond.false11 ], !dbg !4168
  call void @llvm.dbg.value(metadata i32 %cond14, metadata !4159, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %call, metadata !4160, metadata !DIExpression()), !dbg !4161
  br label %for.cond, !dbg !4169

for.cond:                                         ; preds = %for.inc, %cond.end13
  %i.0 = phi i32 [ %call, %cond.end13 ], [ %inc, %for.inc ], !dbg !4171
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4160, metadata !DIExpression()), !dbg !4161
  %cmp15 = icmp ult i32 %i.0, %cond14, !dbg !4172
  br i1 %cmp15, label %for.body, label %cleanup.loopexit, !dbg !4174

for.body:                                         ; preds = %for.cond
  %call16 = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %i.0) #7, !dbg !4175
  %tobool = icmp eq i32 %call16, 0, !dbg !4175
  br i1 %tobool, label %cleanup.loopexit, label %for.inc, !dbg !4177

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4160, metadata !DIExpression()), !dbg !4161
  br label %for.cond, !dbg !4179, !llvm.loop !4180

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !4182

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !4161
  ret i32 %retval.0, !dbg !4182
}

; Function Attrs: nounwind uwtable
define dso_local i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %test_regno) local_unnamed_addr #4 !dbg !4183 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4187, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %test_regno, metadata !4188, metadata !DIExpression()), !dbg !4198
  %call = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %test_regno) #7, !dbg !4199
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4199
  br i1 %tobool, label %if.end, label %cleanup71, !dbg !4201

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4202
  %bf.load = load i32, i32* %0, align 8, !dbg !4202
  %bf.clear = and i32 %bf.load, 65535, !dbg !4202
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !4202
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !4204

land.lhs.true:                                    ; preds = %if.end
  %call1 = tail call i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 25, i32 %test_regno) #7, !dbg !4205
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4205
  br i1 %tobool2, label %if.end4, label %cleanup71, !dbg !4206

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4207
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4207
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4207
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4189, metadata !DIExpression()), !dbg !4198
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4208
  %bf.load5 = load i32, i32* %3, align 8, !dbg !4208
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4208
  %cmp7 = icmp eq i32 %bf.clear6, 14, !dbg !4210
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !4211

if.then8:                                         ; preds = %if.end4
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4212
  %rt_rtx12 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !4212
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !4189, metadata !DIExpression()), !dbg !4198
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !4213
  %bf.load14.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4214
  br label %if.end13, !dbg !4215

if.end13:                                         ; preds = %if.then8, %if.end4
  %bf.load23 = phi i32 [ %bf.load14.pre, %if.then8 ], [ %bf.load5, %if.end4 ], !dbg !4214
  %pattern.0 = phi %struct.rtx_def* [ %5, %if.then8 ], [ %2, %if.end4 ], !dbg !4198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern.0, metadata !4189, metadata !DIExpression()), !dbg !4198
  %bf.clear15 = and i32 %bf.load23, 65535, !dbg !4214
  %cmp16 = icmp eq i32 %bf.clear15, 23, !dbg !4216
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !4217

if.then17:                                        ; preds = %if.end13
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pattern.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4218
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !4218
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4218
  %call22 = tail call fastcc zeroext i8 @covers_regno_p(%struct.rtx_def* %6, i32 %test_regno) #7, !dbg !4219
  %conv = zext i8 %call22 to i32, !dbg !4219
  br label %cleanup71, !dbg !4220

if.else:                                          ; preds = %if.end13
  %cmp25 = icmp eq i32 %bf.clear15, 15, !dbg !4221
  br i1 %cmp25, label %if.then27, label %if.end70, !dbg !4222

if.then27:                                        ; preds = %if.else
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pattern.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4223
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !4223
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4223
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !4223
  %8 = load i32, i32* %num_elem, align 8, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %8, metadata !4190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4224
  %9 = sext i32 %8 to i64, !dbg !4225
  br label %for.cond, !dbg !4225

for.cond:                                         ; preds = %for.inc, %if.then27
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %9, %if.then27 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4226
  call void @llvm.dbg.value(metadata i32 undef, metadata !4190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4224
  %cmp31 = icmp sgt i64 %indvars.iv, 0, !dbg !4227
  br i1 %cmp31, label %for.body, label %cleanup66, !dbg !4228

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4229
  %arrayidx37 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4229
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !4194, metadata !DIExpression()), !dbg !4230
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !4231
  %bf.load38 = load i32, i32* %12, align 8, !dbg !4231
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !4231
  %cmp40 = icmp eq i32 %bf.clear39, 14, !dbg !4233
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !4234

if.then42:                                        ; preds = %for.body
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4235
  %rt_rtx46 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4235
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !4194, metadata !DIExpression()), !dbg !4230
  %.phi.trans.insert3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !4236
  %bf.load48.pre = load i32, i32* %.phi.trans.insert3, align 8, !dbg !4238
  %.pre = and i32 %bf.load48.pre, 65535, !dbg !4238
  br label %if.end47, !dbg !4239

if.end47:                                         ; preds = %if.then42, %for.body
  %bf.clear49.pre-phi = phi i32 [ %.pre, %if.then42 ], [ %bf.clear39, %for.body ], !dbg !4238
  %body.0 = phi %struct.rtx_def* [ %14, %if.then42 ], [ %11, %for.body ], !dbg !4230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body.0, metadata !4194, metadata !DIExpression()), !dbg !4230
  %cmp50 = icmp eq i32 %bf.clear49.pre-phi, 23, !dbg !4240
  br i1 %cmp50, label %land.lhs.true56, label %lor.lhs.false, !dbg !4241

lor.lhs.false:                                    ; preds = %if.end47
  %cmp54 = icmp eq i32 %bf.clear49.pre-phi, 25, !dbg !4242
  br i1 %cmp54, label %land.lhs.true56, label %if.end65, !dbg !4243

land.lhs.true56:                                  ; preds = %lor.lhs.false, %if.end47
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %body.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4244
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !4244
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !4244
  %call61 = tail call fastcc zeroext i8 @covers_regno_p(%struct.rtx_def* %15, i32 %test_regno) #7, !dbg !4245
  %tobool63 = icmp eq i8 %call61, 0, !dbg !4245
  br i1 %tobool63, label %if.end65, label %cleanup, !dbg !4246

if.end65:                                         ; preds = %land.lhs.true56, %lor.lhs.false
  br label %cleanup, !dbg !4247

cleanup:                                          ; preds = %land.lhs.true56, %if.end65
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end65 ], [ 1, %land.lhs.true56 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc, label %cleanup66

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32 undef, metadata !4190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4224
  br label %for.cond, !dbg !4248, !llvm.loop !4249

cleanup66:                                        ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end70, label %cleanup71

if.end70:                                         ; preds = %if.else, %cleanup66
  br label %cleanup71, !dbg !4251

cleanup71:                                        ; preds = %land.lhs.true, %entry, %cleanup66, %if.end70, %if.then17
  %retval.3 = phi i32 [ %conv, %if.then17 ], [ 1, %cleanup66 ], [ 0, %if.end70 ], [ 1, %entry ], [ 1, %land.lhs.true ], !dbg !4198
  ret i32 %retval.3, !dbg !4252
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 %kind, i32 %regno) local_unnamed_addr #4 !dbg !4253 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4257, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata i32 %kind, metadata !4258, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4259, metadata !DIExpression()), !dbg !4261
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4262
  %bf.load = load i32, i32* %0, align 8, !dbg !4262
  %bf.clear = and i32 %bf.load, 65535, !dbg !4262
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4262
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4262

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4262
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4262

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4262
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4262

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4262
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !4264

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4265
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4265
  br label %for.cond, !dbg !4267

for.cond:                                         ; preds = %for.inc, %if.end
  %link.0.in.in = phi %union.rtunion_def* [ %1, %if.end ], [ %9, %for.inc ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !4268
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4260, metadata !DIExpression()), !dbg !4261
  %tobool = icmp eq %struct.rtx_def* %link.0, null, !dbg !4269
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !4269

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !4270
  %bf.load12 = load i32, i32* %2, align 8, !dbg !4270
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !4270
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !4270
  %cmp14 = icmp eq i32 %bf.clear13, %kind, !dbg !4273
  br i1 %cmp14, label %land.lhs.true, label %for.inc, !dbg !4274

land.lhs.true:                                    ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4275
  %3 = bitcast %union.rtunion_def* %arrayidx17 to i32**, !dbg !4275
  %4 = load i32*, i32** %3, align 8, !dbg !4275
  %bf.load19 = load i32, i32* %4, align 8, !dbg !4275
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4275
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !4275
  br i1 %cmp21, label %land.lhs.true22, label %for.inc, !dbg !4276

land.lhs.true22:                                  ; preds = %land.lhs.true
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !4276
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !4277
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !4277
  %cmp27 = icmp ugt i32 %call, %regno, !dbg !4278
  br i1 %cmp27, label %for.inc, label %land.lhs.true28, !dbg !4279

land.lhs.true28:                                  ; preds = %land.lhs.true22
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !4280
  %call33 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !4280
  %cmp34 = icmp ult i32 %call33, 53, !dbg !4280
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !4280
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !4280

cond.true:                                        ; preds = %land.lhs.true28
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !4280
  %bf.load39 = load i32, i32* %8, align 8, !dbg !4280
  %bf.lshr40 = lshr i32 %bf.load39, 16, !dbg !4280
  %bf.clear41 = and i32 %bf.lshr40, 255, !dbg !4280
  %call46 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !4280
  %call47 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear41, i32 %call46) #7, !dbg !4280
  br label %cond.end, !dbg !4280

cond.false:                                       ; preds = %land.lhs.true28
  %call52 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !4280
  %add = add i32 %call52, 1, !dbg !4280
  br label %cond.end, !dbg !4280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call47, %cond.true ], [ %add, %cond.false ], !dbg !4280
  %cmp53 = icmp ugt i32 %cond, %regno, !dbg !4281
  br i1 %cmp53, label %cleanup.loopexit, label %for.inc, !dbg !4282

for.inc:                                          ; preds = %land.lhs.true22, %for.body, %land.lhs.true, %cond.end
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4283
  br label %for.cond, !dbg !4284, !llvm.loop !4285

cleanup.loopexit:                                 ; preds = %cond.end, %for.cond
  %retval.0.ph = phi %struct.rtx_def* [ null, %for.cond ], [ %link.0, %cond.end ]
  br label %cleanup, !dbg !4287

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false8
  %retval.0 = phi %struct.rtx_def* [ null, %lor.lhs.false8 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !4261
  ret %struct.rtx_def* %retval.0, !dbg !4287
}

; Function Attrs: nounwind uwtable
define dso_local i32 @find_regno_fusage(%struct.rtx_def* %insn, i32 %code, i32 %regno) local_unnamed_addr #4 !dbg !4288 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4292, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i32 %code, metadata !4293, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4294, metadata !DIExpression()), !dbg !4301
  %cmp = icmp ugt i32 %regno, 52, !dbg !4302
  br i1 %cmp, label %cleanup31, label %lor.lhs.false, !dbg !4304

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4305
  %bf.load = load i32, i32* %0, align 8, !dbg !4305
  %bf.clear = and i32 %bf.load, 65535, !dbg !4305
  %cmp1 = icmp eq i32 %bf.clear, 10, !dbg !4305
  br i1 %cmp1, label %if.end, label %cleanup31, !dbg !4306

if.end:                                           ; preds = %lor.lhs.false
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4307
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !4307
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !4307
  br label %for.cond, !dbg !4308

for.cond:                                         ; preds = %for.inc, %if.end
  %link.0.in = phi %struct.rtx_def** [ %rt_rtx, %if.end ], [ %rt_rtx30, %for.inc ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4295, metadata !DIExpression()), !dbg !4301
  %tobool = icmp eq %struct.rtx_def* %link.0, null, !dbg !4310
  br i1 %tobool, label %cleanup31.loopexit, label %for.body, !dbg !4310

for.body:                                         ; preds = %for.cond
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4311
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !4311
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !4311
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4296, metadata !DIExpression()), !dbg !4313
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4311
  %bf.load6 = load i32, i32* %2, align 8, !dbg !4311
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !4311
  %cmp8 = icmp eq i32 %bf.clear7, %code, !dbg !4314
  br i1 %cmp8, label %land.lhs.true, label %if.end25, !dbg !4315

land.lhs.true:                                    ; preds = %for.body
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4316
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4316
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !4316
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4300, metadata !DIExpression()), !dbg !4313
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !4316
  %bf.load13 = load i32, i32* %4, align 8, !dbg !4316
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4316
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !4316
  br i1 %cmp15, label %land.lhs.true16, label %if.end25, !dbg !4317

land.lhs.true16:                                  ; preds = %land.lhs.true
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !4318
  %cmp17 = icmp ugt i32 %call, %regno, !dbg !4319
  br i1 %cmp17, label %if.end25, label %land.lhs.true18, !dbg !4320

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %bf.load19 = load i32, i32* %4, align 8, !dbg !4321
  %bf.lshr = lshr i32 %bf.load19, 16, !dbg !4321
  %bf.clear20 = and i32 %bf.lshr, 255, !dbg !4321
  %call21 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !4321
  %call22 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear20, i32 %call21) #7, !dbg !4321
  %cmp23 = icmp ugt i32 %call22, %regno, !dbg !4322
  br i1 %cmp23, label %cleanup, label %if.end25, !dbg !4323

if.end25:                                         ; preds = %land.lhs.true16, %land.lhs.true18, %land.lhs.true, %for.body
  br label %cleanup, !dbg !4324

cleanup:                                          ; preds = %land.lhs.true18, %if.end25
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end25 ], [ false, %land.lhs.true18 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup31.loopexit

for.inc:                                          ; preds = %cleanup
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4325
  %rt_rtx30 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !4325
  br label %for.cond, !dbg !4326, !llvm.loop !4327

cleanup31.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.2.ph = phi i32 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %cleanup31, !dbg !4329

cleanup31:                                        ; preds = %cleanup31.loopexit, %entry, %lor.lhs.false
  %retval.2 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %retval.2.ph, %cleanup31.loopexit ], !dbg !4301
  ret i32 %retval.2, !dbg !4329
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @covers_regno_p(%struct.rtx_def* %dest, i32 %test_regno) unnamed_addr #4 !dbg !4330 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !4334, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %test_regno, metadata !4335, metadata !DIExpression()), !dbg !4343
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 0, !dbg !4344
  %bf.load = load i32, i32* %0, align 8, !dbg !4344
  %bf.clear = and i32 %bf.load, 65535, !dbg !4344
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !4345
  br i1 %cmp, label %if.then, label %if.else, !dbg !4346

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4347
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !4347
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4347
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !4347
  %2 = load i32, i32* %num_elem, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %2, metadata !4336, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4348
  %3 = sext i32 %2 to i64, !dbg !4349
  br label %for.cond, !dbg !4349

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %if.then ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4350
  call void @llvm.dbg.value(metadata i32 undef, metadata !4336, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4348
  %cmp1 = icmp sgt i64 %indvars.iv, 0, !dbg !4351
  br i1 %cmp1, label %for.body, label %return.loopexit, !dbg !4352

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4353
  %arrayidx6 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4353
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !4353
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4353
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !4353
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4339, metadata !DIExpression()), !dbg !4354
  %cmp10 = icmp eq %struct.rtx_def* %6, null, !dbg !4355
  br i1 %cmp10, label %if.end, label %land.lhs.true, !dbg !4357

land.lhs.true:                                    ; preds = %for.body
  %call = tail call fastcc zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* nonnull %6, i32 %test_regno) #7, !dbg !4358
  %tobool = icmp eq i8 %call, 0, !dbg !4358
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4359

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %cleanup, !dbg !4360

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %return.loopexit

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32 undef, metadata !4336, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4348
  br label %for.cond, !dbg !4361, !llvm.loop !4362

if.else:                                          ; preds = %entry
  %call13 = tail call fastcc zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* %dest, i32 %test_regno) #7, !dbg !4364
  br label %return, !dbg !4365

return.loopexit:                                  ; preds = %for.cond, %cleanup
  %retval.3.ph = phi i8 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %return, !dbg !4366

return:                                           ; preds = %return.loopexit, %if.else
  %retval.3 = phi i8 [ %call13, %if.else ], [ %retval.3.ph, %return.loopexit ], !dbg !4367
  ret i8 %retval.3, !dbg !4366
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !4368 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4370, metadata !DIExpression()), !dbg !4372
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4373
  %bf.load = load i32, i32* %0, align 8, !dbg !4373
  %bf.clear = and i32 %bf.load, 65535, !dbg !4373
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4373
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4373

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4373
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4373

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4373
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4373

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4373
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !4375

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4376
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4376
  br label %for.cond, !dbg !4378

for.cond:                                         ; preds = %for.inc, %if.end
  %link.0.in.in = phi %union.rtunion_def* [ %1, %if.end ], [ %6, %for.inc ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !4379
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4371, metadata !DIExpression()), !dbg !4372
  %tobool = icmp eq %struct.rtx_def* %link.0, null, !dbg !4380
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !4380

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !4381
  %bf.load12 = load i32, i32* %2, align 8, !dbg !4381
  %bf.clear13 = and i32 %bf.load12, 16711680, !dbg !4381
  %cmp14 = icmp eq i32 %bf.clear13, 262144, !dbg !4384
  br i1 %cmp14, label %if.then20, label %lor.lhs.false15, !dbg !4385

lor.lhs.false15:                                  ; preds = %for.body
  %cmp19 = icmp eq i32 %bf.clear13, 196608, !dbg !4386
  br i1 %cmp19, label %if.then20, label %for.inc, !dbg !4387

if.then20:                                        ; preds = %lor.lhs.false15, %for.body
  %link.0.lcssa3 = phi %struct.rtx_def* [ %link.0, %lor.lhs.false15 ], [ %link.0, %for.body ], !dbg !4379
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4388
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !4388
  %5 = load i32*, i32** %4, align 8, !dbg !4388
  %bf.load25 = load i32, i32* %5, align 8, !dbg !4388
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4388
  %cmp27 = icmp eq i32 %bf.clear26, 15, !dbg !4391
  br i1 %cmp27, label %land.lhs.true, label %if.end30, !dbg !4392

land.lhs.true:                                    ; preds = %if.then20
  %call = tail call i32 @multiple_sets(%struct.rtx_def* %insn) #7, !dbg !4393
  %tobool28 = icmp eq i32 %call, 0, !dbg !4393
  br i1 %tobool28, label %if.end30, label %cleanup, !dbg !4394

if.end30:                                         ; preds = %land.lhs.true, %if.then20
  br label %cleanup, !dbg !4395

for.inc:                                          ; preds = %lor.lhs.false15
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4396
  br label %for.cond, !dbg !4397, !llvm.loop !4398

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4400

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %lor.lhs.false8, %if.end30
  %retval.0 = phi %struct.rtx_def* [ %link.0.lcssa3, %if.end30 ], [ null, %lor.lhs.false8 ], [ null, %land.lhs.true ], [ null, %cleanup.loopexit ], !dbg !4372
  ret %struct.rtx_def* %retval.0, !dbg !4400
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_constant_src(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !4401 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4403, metadata !DIExpression()), !dbg !4407
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4408
  %bf.load = load i32, i32* %0, align 8, !dbg !4408
  %bf.clear = and i32 %bf.load, 65535, !dbg !4408
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4408
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !4408

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4408
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !4408

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4408
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !4408

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4408
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !4408

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4408
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4408
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !4408
  %3 = load i32*, i32** %2, align 8, !dbg !4408
  %bf.load12 = load i32, i32* %3, align 8, !dbg !4408
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4408
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !4408
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !4408
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !4408

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #7, !dbg !4408
  br label %cond.end25, !dbg !4408

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !4405, metadata !DIExpression()), !dbg !4407
  %tobool = icmp eq %struct.rtx_def* %cond26, null, !dbg !4409
  br i1 %tobool, label %if.end37, label %if.then, !dbg !4411

if.then:                                          ; preds = %cond.end25
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4412
  %rt_rtx30 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !4412
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !4412
  %call31 = tail call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %6) #6, !dbg !4414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !4406, metadata !DIExpression()), !dbg !4407
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !4415
  %bf.load32 = load i32, i32* %7, align 8, !dbg !4415
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4415
  %idxprom = zext i32 %bf.clear33 to i64, !dbg !4415
  %arrayidx34 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4415
  %8 = load i32, i32* %arrayidx34, align 4, !dbg !4415
  %cmp35 = icmp eq i32 %8, 9, !dbg !4415
  br i1 %cmp35, label %cleanup, label %if.end37, !dbg !4417

if.end37:                                         ; preds = %cond.end25, %if.then
  %call38 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #7, !dbg !4418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !4404, metadata !DIExpression()), !dbg !4407
  %tobool39 = icmp eq %struct.rtx_def* %call38, null, !dbg !4419
  br i1 %tobool39, label %cleanup, label %land.lhs.true, !dbg !4421

land.lhs.true:                                    ; preds = %if.end37
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call38, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4422
  %9 = bitcast %union.rtunion_def* %arrayidx42 to i32**, !dbg !4422
  %10 = load i32*, i32** %9, align 8, !dbg !4422
  %bf.load44 = load i32, i32* %10, align 8, !dbg !4422
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4422
  %idxprom46 = zext i32 %bf.clear45 to i64, !dbg !4422
  %arrayidx47 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom46, !dbg !4422
  %11 = load i32, i32* %arrayidx47, align 4, !dbg !4422
  %cmp48 = icmp eq i32 %11, 9, !dbg !4422
  br i1 %cmp48, label %if.then49, label %cleanup, !dbg !4423

if.then49:                                        ; preds = %land.lhs.true
  %12 = bitcast i32* %10 to %struct.rtx_def*, !dbg !4423
  br label %cleanup, !dbg !4424

cleanup:                                          ; preds = %if.end37, %land.lhs.true, %if.then, %if.then49
  %retval.0 = phi %struct.rtx_def* [ %12, %if.then49 ], [ %call31, %if.then ], [ null, %land.lhs.true ], [ null, %if.end37 ], !dbg !4407
  ret %struct.rtx_def* %retval.0, !dbg !4425
}

declare dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @alloc_reg_note(i32 %kind, %struct.rtx_def* %datum, %struct.rtx_def* %list) local_unnamed_addr #4 !dbg !4426 {
entry:
  call void @llvm.dbg.value(metadata i32 %kind, metadata !4430, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata %struct.rtx_def* %datum, metadata !4431, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list, metadata !4432, metadata !DIExpression()), !dbg !4434
  %kind.off = add i32 %kind, -7, !dbg !4435
  %switch = icmp ult i32 %kind.off, 4, !dbg !4435
  br i1 %switch, label %sw.bb, label %sw.default, !dbg !4435

sw.bb:                                            ; preds = %entry
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %datum, %struct.rtx_def* %list) #6, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4433, metadata !DIExpression()), !dbg !4434
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4438
  %bf.load = load i32, i32* %0, align 8, !dbg !4438
  %bf.value = shl i32 %kind, 16, !dbg !4438
  %bf.shl = and i32 %bf.value, 16711680, !dbg !4438
  %bf.clear = and i32 %bf.load, -16711681, !dbg !4438
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !4438
  store i32 %bf.set, i32* %0, align 8, !dbg !4438
  br label %sw.epilog, !dbg !4439

sw.default:                                       ; preds = %entry
  %call1 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 %kind, %struct.rtx_def* %datum, %struct.rtx_def* %list) #6, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4433, metadata !DIExpression()), !dbg !4434
  br label %sw.epilog, !dbg !4441

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %note.0 = phi %struct.rtx_def* [ %call1, %sw.default ], [ %call, %sw.bb ], !dbg !4442
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4433, metadata !DIExpression()), !dbg !4434
  ret %struct.rtx_def* %note.0, !dbg !4443
}

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @add_reg_note(%struct.rtx_def* %insn, i32 %kind, %struct.rtx_def* %datum) local_unnamed_addr #4 !dbg !4444 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4448, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.value(metadata i32 %kind, metadata !4449, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.value(metadata %struct.rtx_def* %datum, metadata !4450, metadata !DIExpression()), !dbg !4451
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4452
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4452
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4452
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4452
  %call = tail call %struct.rtx_def* @alloc_reg_note(i32 %kind, %struct.rtx_def* %datum, %struct.rtx_def* %1) #7, !dbg !4453
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx, align 8, !dbg !4454
  ret void, !dbg !4455
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* %note) local_unnamed_addr #4 !dbg !4456 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4460, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note, metadata !4461, metadata !DIExpression()), !dbg !4463
  %cmp = icmp eq %struct.rtx_def* %note, null, !dbg !4464
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !4466

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4467
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4467
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4467
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4467
  %cmp1 = icmp eq %struct.rtx_def* %1, %note, !dbg !4469
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4470

if.then2:                                         ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4471
  %3 = bitcast %union.rtunion_def* %2 to i64*, !dbg !4471
  %4 = load i64, i64* %3, align 8, !dbg !4471
  %5 = bitcast %union.rtunion_def* %0 to i64*, !dbg !4472
  store i64 %4, i64* %5, align 8, !dbg !4472
  br label %if.end34, !dbg !4473

if.else:                                          ; preds = %if.end
  br label %for.cond, !dbg !4474

for.cond:                                         ; preds = %for.inc, %if.else
  %link.0 = phi %struct.rtx_def* [ %1, %if.else ], [ %7, %for.inc ], !dbg !4476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4462, metadata !DIExpression()), !dbg !4463
  %tobool = icmp eq %struct.rtx_def* %link.0, null, !dbg !4477
  br i1 %tobool, label %if.end34.loopexit, label %for.body, !dbg !4477

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4478
  %rt_rtx18 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4478
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !4478
  %cmp19 = icmp eq %struct.rtx_def* %7, %note, !dbg !4481
  br i1 %cmp19, label %if.then20, label %for.inc, !dbg !4482

if.then20:                                        ; preds = %for.body
  %.lcssa = phi %union.rtunion_def* [ %6, %for.body ], !dbg !4478
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4483
  %9 = bitcast %union.rtunion_def* %8 to i64*, !dbg !4483
  %10 = load i64, i64* %9, align 8, !dbg !4483
  %11 = bitcast %union.rtunion_def* %.lcssa to i64*, !dbg !4485
  store i64 %10, i64* %11, align 8, !dbg !4485
  br label %if.end34, !dbg !4486

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !4487, !llvm.loop !4488

if.end34.loopexit:                                ; preds = %for.cond
  br label %if.end34, !dbg !4490

if.end34:                                         ; preds = %if.end34.loopexit, %if.then20, %if.then2
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 0, !dbg !4490
  %bf.load = load i32, i32* %12, align 8, !dbg !4490
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4490
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4490
  %bf.clear.off = add nsw i32 %bf.clear, -3, !dbg !4491
  %switch = icmp ult i32 %bf.clear.off, 2, !dbg !4491
  br i1 %switch, label %sw.bb, label %cleanup.cont, !dbg !4491

sw.bb:                                            ; preds = %if.end34
  tail call void @df_notes_rescan(%struct.rtx_def* %insn) #6, !dbg !4492
  br label %cleanup.cont, !dbg !4494

cleanup.cont:                                     ; preds = %entry, %if.end34, %sw.bb
  ret void, !dbg !4495
}

declare dso_local void @df_notes_rescan(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @remove_reg_equal_equiv_notes(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !4496 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4500, metadata !DIExpression()), !dbg !4504
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4505
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4505
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4505
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx, metadata !4501, metadata !DIExpression()), !dbg !4504
  br label %while.cond, !dbg !4506

while.cond:                                       ; preds = %if.end, %entry
  %loc.0 = phi %struct.rtx_def** [ %rt_rtx, %entry ], [ %loc.1, %if.end ], !dbg !4507
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc.0, metadata !4501, metadata !DIExpression()), !dbg !4504
  %1 = load %struct.rtx_def*, %struct.rtx_def** %loc.0, align 8, !dbg !4508
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !4506
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4506
  br i1 %tobool, label %while.end, label %while.body, !dbg !4506

while.body:                                       ; preds = %while.cond
  %bf.load = load i32, i32* %2, align 8, !dbg !4509
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4509
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4502, metadata !DIExpression()), !dbg !4510
  %bf.clear.off = add nsw i32 %bf.clear, -3, !dbg !4511
  %switch = icmp ult i32 %bf.clear.off, 2, !dbg !4511
  %arrayidx4 = getelementptr inbounds i32, i32* %2, i64 4, !dbg !4513
  %rt_rtx5 = bitcast i32* %arrayidx4 to %struct.rtx_def**, !dbg !4513
  br i1 %switch, label %if.then, label %if.end, !dbg !4511

if.then:                                          ; preds = %while.body
  %3 = bitcast i32* %arrayidx4 to i64*, !dbg !4514
  %4 = load i64, i64* %3, align 8, !dbg !4514
  %5 = bitcast %struct.rtx_def** %loc.0 to i64*, !dbg !4515
  store i64 %4, i64* %5, align 8, !dbg !4515
  br label %if.end, !dbg !4516

if.end:                                           ; preds = %while.body, %if.then
  %loc.1 = phi %struct.rtx_def** [ %loc.0, %if.then ], [ %rt_rtx5, %while.body ], !dbg !4504
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc.1, metadata !4501, metadata !DIExpression()), !dbg !4504
  br label %while.cond, !dbg !4506, !llvm.loop !4517

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4519
}

; Function Attrs: nounwind uwtable
define dso_local i32 @in_expr_list_p(%struct.rtx_def* %listp, %struct.rtx_def* %node) local_unnamed_addr #4 !dbg !4520 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %listp, metadata !4522, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %node, metadata !4523, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %listp, metadata !4524, metadata !DIExpression()), !dbg !4525
  br label %for.cond, !dbg !4526

for.cond:                                         ; preds = %for.inc, %entry
  %x.0 = phi %struct.rtx_def* [ %listp, %entry ], [ %2, %for.inc ], !dbg !4528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !4524, metadata !DIExpression()), !dbg !4525
  %tobool = icmp eq %struct.rtx_def* %x.0, null, !dbg !4529
  br i1 %tobool, label %cleanup, label %for.body, !dbg !4529

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4530
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4530
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4530
  %cmp = icmp eq %struct.rtx_def* %0, %node, !dbg !4533
  br i1 %cmp, label %cleanup, label %for.inc, !dbg !4534

for.inc:                                          ; preds = %for.body
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4535
  %rt_rtx4 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4535
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4535
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4524, metadata !DIExpression()), !dbg !4525
  br label %for.cond, !dbg !4536, !llvm.loop !4537

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i32 [ 1, %for.body ], [ 0, %for.cond ], !dbg !4525
  ret i32 %retval.0, !dbg !4539
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_node_from_expr_list(%struct.rtx_def* %node, %struct.rtx_def** %listp) local_unnamed_addr #4 !dbg !4540 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %node, metadata !4544, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp, metadata !4545, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4547, metadata !DIExpression()), !dbg !4548
  br label %while.cond, !dbg !4549

while.cond:                                       ; preds = %if.end15, %entry
  %temp.0.in = phi %struct.rtx_def** [ %listp, %entry ], [ %rt_rtx19, %if.end15 ]
  %prev.0 = phi %struct.rtx_def* [ null, %entry ], [ %temp.0, %if.end15 ], !dbg !4548
  %temp.0 = load %struct.rtx_def*, %struct.rtx_def** %temp.0.in, align 8, !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !4546, metadata !DIExpression()), !dbg !4548
  %tobool = icmp eq %struct.rtx_def* %temp.0, null, !dbg !4549
  br i1 %tobool, label %cleanup.cont.loopexit, label %while.body, !dbg !4549

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4550
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4550
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4550
  %cmp = icmp eq %struct.rtx_def* %0, %node, !dbg !4553
  br i1 %cmp, label %if.then, label %if.end15, !dbg !4554

if.then:                                          ; preds = %while.body
  %prev.0.lcssa6 = phi %struct.rtx_def* [ %prev.0, %while.body ], !dbg !4548
  %temp.0.lcssa5 = phi %struct.rtx_def* [ %temp.0, %while.body ], !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa6, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa6, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa6, metadata !4547, metadata !DIExpression()), !dbg !4548
  %tobool1 = icmp eq %struct.rtx_def* %prev.0.lcssa6, null, !dbg !4555
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0.lcssa5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4558
  %2 = bitcast %union.rtunion_def* %1 to i64*, !dbg !4558
  %3 = load i64, i64* %2, align 8, !dbg !4558
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !4559

if.then2:                                         ; preds = %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0.lcssa6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4560
  %5 = bitcast %union.rtunion_def* %4 to i64*, !dbg !4561
  store i64 %3, i64* %5, align 8, !dbg !4561
  br label %cleanup.cont, !dbg !4560

if.else:                                          ; preds = %if.then
  %6 = bitcast %struct.rtx_def** %listp to i64*, !dbg !4562
  store i64 %3, i64* %6, align 8, !dbg !4562
  br label %cleanup.cont

if.end15:                                         ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !4547, metadata !DIExpression()), !dbg !4548
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4563
  %rt_rtx19 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !4563
  br label %while.cond, !dbg !4549, !llvm.loop !4564

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !4566

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.else, %if.then2
  ret void, !dbg !4566
}

; Function Attrs: nounwind uwtable
define dso_local i32 @volatile_insn_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4567 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4569, metadata !DIExpression()), !dbg !4582
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4583
  %bf.load = load i32, i32* %0, align 8, !dbg !4583
  %bf.clear = and i32 %bf.load, 65535, !dbg !4583
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4570, metadata !DIExpression()), !dbg !4582
  %trunc = trunc i32 %bf.load to i16, !dbg !4584
  switch i16 %trunc, label %sw.epilog [
    i16 44, label %cleanup52
    i16 45, label %cleanup52
    i16 30, label %cleanup52
    i16 35, label %cleanup52
    i16 32, label %cleanup52
    i16 31, label %cleanup52
    i16 33, label %cleanup52
    i16 46, label %cleanup52
    i16 36, label %cleanup52
    i16 37, label %cleanup52
    i16 38, label %cleanup52
    i16 25, label %cleanup52
    i16 20, label %cleanup52
    i16 21, label %cleanup52
    i16 26, label %cleanup52
    i16 43, label %cleanup52
    i16 19, label %sw.bb1
    i16 16, label %sw.bb2
    i16 17, label %sw.bb2
  ], !dbg !4584

sw.bb1:                                           ; preds = %entry
  br label %cleanup52, !dbg !4585

sw.bb2:                                           ; preds = %entry, %entry
  %bf.clear4 = and i32 %bf.load, 134217728, !dbg !4587
  %tobool = icmp eq i32 %bf.clear4, 0, !dbg !4587
  br i1 %tobool, label %sw.epilog, label %cleanup52, !dbg !4589

sw.epilog:                                        ; preds = %sw.bb2, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !4590
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4590
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !4590
  call void @llvm.dbg.value(metadata i8* %1, metadata !4571, metadata !DIExpression()), !dbg !4591
  %arrayidx6 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4592
  %2 = load i8, i8* %arrayidx6, align 1, !dbg !4592
  call void @llvm.dbg.value(metadata i8 %2, metadata !4574, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !4593
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4593
  %3 = zext i8 %2 to i64, !dbg !4596
  br label %for.cond, !dbg !4596

for.cond:                                         ; preds = %for.inc46, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc46 ], [ %3, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !4597
  call void @llvm.dbg.value(metadata i32 undef, metadata !4574, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  %cmp = icmp sgt i64 %indvars.iv2, 0, !dbg !4598
  br i1 %cmp, label %for.body, label %cleanup48, !dbg !4599

for.body:                                         ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next3, !dbg !4600
  %4 = load i8, i8* %arrayidx9, align 1, !dbg !4600
  %cmp11 = icmp eq i8 %4, 101, !dbg !4601
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !4602

if.then13:                                        ; preds = %for.body
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !4593
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !4593
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4593
  %call = tail call i32 @volatile_insn_p(%struct.rtx_def* %5) #7, !dbg !4603
  %tobool16 = icmp eq i32 %call, 0, !dbg !4603
  br i1 %tobool16, label %for.inc46, label %cleanup48, !dbg !4604

if.else:                                          ; preds = %for.body
  %cmp22 = icmp eq i8 %4, 69, !dbg !4605
  br i1 %cmp22, label %for.cond25.preheader, label %for.inc46, !dbg !4606

for.cond25.preheader:                             ; preds = %if.else
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !4607
  %rt_rtvec37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !4607
  br label %for.cond25, !dbg !4611

for.cond25:                                       ; preds = %for.cond25.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond25.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4612
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4575, metadata !DIExpression()), !dbg !4613
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec37, align 8, !dbg !4614
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !4614
  %7 = load i32, i32* %num_elem, align 8, !dbg !4614
  %8 = sext i32 %7 to i64, !dbg !4615
  %cmp30 = icmp slt i64 %indvars.iv, %8, !dbg !4615
  br i1 %cmp30, label %for.body32, label %cleanup, !dbg !4611

for.body32:                                       ; preds = %for.cond25
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv, !dbg !4607
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !4607
  %call40 = tail call i32 @volatile_insn_p(%struct.rtx_def* %9) #7, !dbg !4616
  %tobool41 = icmp eq i32 %call40, 0, !dbg !4616
  br i1 %tobool41, label %for.inc, label %cleanup, !dbg !4617

for.inc:                                          ; preds = %for.body32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4618
  call void @llvm.dbg.value(metadata i32 undef, metadata !4575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4613
  br label %for.cond25, !dbg !4619, !llvm.loop !4620

cleanup:                                          ; preds = %for.body32, %for.cond25
  %cleanup.dest.slot.0 = phi i32 [ 1, %for.body32 ], [ 0, %for.cond25 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc46, label %cleanup48

for.inc46:                                        ; preds = %if.then13, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !4574, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  br label %for.cond, !dbg !4622, !llvm.loop !4623

cleanup48:                                        ; preds = %if.then13, %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then13 ], [ 0, %for.cond ]
  %cond = icmp ne i32 %cleanup.dest.slot.1, 0
  %spec.select = zext i1 %cond to i32
  ret i32 %spec.select

cleanup52:                                        ; preds = %sw.bb2, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.5 = phi i32 [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %sw.bb2 ], !dbg !4582
  ret i32 %retval.5, !dbg !4625
}

; Function Attrs: nounwind uwtable
define dso_local i32 @volatile_refs_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4626 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4628, metadata !DIExpression()), !dbg !4640
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4641
  %bf.load = load i32, i32* %0, align 8, !dbg !4641
  %bf.clear = and i32 %bf.load, 65535, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4629, metadata !DIExpression()), !dbg !4640
  %trunc = trunc i32 %bf.load to i16, !dbg !4642
  switch i16 %trunc, label %sw.epilog [
    i16 44, label %cleanup52
    i16 45, label %cleanup52
    i16 30, label %cleanup52
    i16 35, label %cleanup52
    i16 32, label %cleanup52
    i16 31, label %cleanup52
    i16 33, label %cleanup52
    i16 46, label %cleanup52
    i16 36, label %cleanup52
    i16 37, label %cleanup52
    i16 38, label %cleanup52
    i16 25, label %cleanup52
    i16 20, label %cleanup52
    i16 21, label %cleanup52
    i16 19, label %sw.bb1
    i16 43, label %sw.bb2
    i16 16, label %sw.bb2
    i16 17, label %sw.bb2
  ], !dbg !4642

sw.bb1:                                           ; preds = %entry
  br label %cleanup52, !dbg !4643

sw.bb2:                                           ; preds = %entry, %entry, %entry
  %bf.clear4 = and i32 %bf.load, 134217728, !dbg !4645
  %tobool = icmp eq i32 %bf.clear4, 0, !dbg !4645
  br i1 %tobool, label %sw.epilog, label %cleanup52, !dbg !4647

sw.epilog:                                        ; preds = %sw.bb2, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !4648
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4648
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %1, metadata !4630, metadata !DIExpression()), !dbg !4649
  %arrayidx6 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4650
  %2 = load i8, i8* %arrayidx6, align 1, !dbg !4650
  call void @llvm.dbg.value(metadata i8 %2, metadata !4632, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !4651
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4651
  %3 = zext i8 %2 to i64, !dbg !4654
  br label %for.cond, !dbg !4654

for.cond:                                         ; preds = %for.inc46, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc46 ], [ %3, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !4655
  call void @llvm.dbg.value(metadata i32 undef, metadata !4632, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  %cmp = icmp sgt i64 %indvars.iv2, 0, !dbg !4656
  br i1 %cmp, label %for.body, label %cleanup48, !dbg !4657

for.body:                                         ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next3, !dbg !4658
  %4 = load i8, i8* %arrayidx9, align 1, !dbg !4658
  %cmp11 = icmp eq i8 %4, 101, !dbg !4659
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !4660

if.then13:                                        ; preds = %for.body
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !4651
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !4651
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4651
  %call = tail call i32 @volatile_refs_p(%struct.rtx_def* %5) #7, !dbg !4661
  %tobool16 = icmp eq i32 %call, 0, !dbg !4661
  br i1 %tobool16, label %for.inc46, label %cleanup48, !dbg !4662

if.else:                                          ; preds = %for.body
  %cmp22 = icmp eq i8 %4, 69, !dbg !4663
  br i1 %cmp22, label %for.cond25.preheader, label %for.inc46, !dbg !4664

for.cond25.preheader:                             ; preds = %if.else
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv.next3, !dbg !4665
  %rt_rtvec37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !4665
  br label %for.cond25, !dbg !4669

for.cond25:                                       ; preds = %for.cond25.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond25.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4670
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4633, metadata !DIExpression()), !dbg !4671
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec37, align 8, !dbg !4672
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !4672
  %7 = load i32, i32* %num_elem, align 8, !dbg !4672
  %8 = sext i32 %7 to i64, !dbg !4673
  %cmp30 = icmp slt i64 %indvars.iv, %8, !dbg !4673
  br i1 %cmp30, label %for.body32, label %cleanup, !dbg !4669

for.body32:                                       ; preds = %for.cond25
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv, !dbg !4665
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !4665
  %call40 = tail call i32 @volatile_refs_p(%struct.rtx_def* %9) #7, !dbg !4674
  %tobool41 = icmp eq i32 %call40, 0, !dbg !4674
  br i1 %tobool41, label %for.inc, label %cleanup, !dbg !4675

for.inc:                                          ; preds = %for.body32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4676
  call void @llvm.dbg.value(metadata i32 undef, metadata !4633, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4671
  br label %for.cond25, !dbg !4677, !llvm.loop !4678

cleanup:                                          ; preds = %for.body32, %for.cond25
  %cleanup.dest.slot.0 = phi i32 [ 1, %for.body32 ], [ 0, %for.cond25 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %for.inc46, label %cleanup48

for.inc46:                                        ; preds = %if.then13, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !4632, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  br label %for.cond, !dbg !4680, !llvm.loop !4681

cleanup48:                                        ; preds = %if.then13, %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then13 ], [ 0, %for.cond ]
  %cond = icmp ne i32 %cleanup.dest.slot.1, 0
  %spec.select = zext i1 %cond to i32
  ret i32 %spec.select

cleanup52:                                        ; preds = %sw.bb2, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.5 = phi i32 [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %sw.bb2 ], !dbg !4640
  ret i32 %retval.5, !dbg !4683
}

; Function Attrs: nounwind uwtable
define dso_local i32 @may_trap_p_1(%struct.rtx_def* %x, i32 %flags) local_unnamed_addr #4 !dbg !4684 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4686, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4687, metadata !DIExpression()), !dbg !4703
  %cmp = icmp ne i32 %flags, 0, !dbg !4704
  %conv1 = zext i1 %cmp to i8, !dbg !4705
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !4691, metadata !DIExpression()), !dbg !4703
  %cmp2 = icmp eq %struct.rtx_def* %x, null, !dbg !4706
  br i1 %cmp2, label %cleanup1718, label %if.end, !dbg !4708

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4709
  %bf.load = load i32, i32* %0, align 8, !dbg !4709
  %bf.clear = and i32 %bf.load, 65535, !dbg !4709
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4689, metadata !DIExpression()), !dbg !4703
  %trunc = trunc i32 %bf.load to i16, !dbg !4710
  switch i16 %trunc, label %sw.default [
    i16 30, label %cleanup1718
    i16 32, label %cleanup1718
    i16 31, label %cleanup1718
    i16 33, label %cleanup1718
    i16 45, label %cleanup1718
    i16 44, label %cleanup1718
    i16 35, label %cleanup1718
    i16 36, label %cleanup1718
    i16 46, label %cleanup1718
    i16 37, label %cleanup1718
    i16 38, label %cleanup1718
    i16 18, label %sw.bb4
    i16 19, label %sw.bb4
    i16 16, label %sw.bb5
    i16 29, label %sw.bb5
    i16 17, label %sw.bb6
    i16 43, label %sw.bb9
    i16 55, label %sw.bb97
    i16 58, label %sw.bb97
    i16 59, label %sw.bb97
    i16 60, label %sw.bb97
    i16 3, label %sw.bb282
    i16 82, label %sw.bb283
    i16 83, label %sw.bb283
    i16 84, label %sw.bb283
    i16 85, label %sw.bb283
    i16 97, label %sw.bb283
    i16 48, label %sw.bb283
    i16 81, label %sw.bb855
    i16 80, label %sw.bb855
    i16 104, label %sw.bb1430
    i16 51, label %sw.epilog
    i16 111, label %sw.epilog
    i16 39, label %sw.epilog
  ], !dbg !4710

sw.bb4:                                           ; preds = %if.end, %if.end
  %1 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 63), align 8, !dbg !4711
  %call = tail call i32 %1(%struct.rtx_def* nonnull %x, i32 %flags) #6, !dbg !4712
  br label %cleanup1718, !dbg !4713

sw.bb5:                                           ; preds = %if.end, %if.end
  br label %cleanup1718, !dbg !4714

sw.bb6:                                           ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load, 27, !dbg !4715
  %bf.clear8 = and i32 %bf.lshr, 1, !dbg !4715
  br label %cleanup1718, !dbg !4716

sw.bb9:                                           ; preds = %if.end
  %2 = load i32, i32* @flag_stack_check, align 4, !dbg !4717
  %tobool = icmp eq i32 %2, 0, !dbg !4717
  br i1 %tobool, label %if.end18, label %land.lhs.true, !dbg !4719

land.lhs.true:                                    ; preds = %sw.bb9
  %bf.clear12 = and i32 %bf.load, 134217728, !dbg !4720
  %tobool13 = icmp eq i32 %bf.clear12, 0, !dbg !4720
  br i1 %tobool13, label %if.end18, label %land.lhs.true14, !dbg !4721

land.lhs.true14:                                  ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4722
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4722
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4722
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4723
  %cmp15 = icmp eq %struct.rtx_def* %3, %4, !dbg !4724
  br i1 %cmp15, label %cleanup1718, label %if.end18, !dbg !4725

if.end18:                                         ; preds = %land.lhs.true, %sw.bb9, %land.lhs.true14
  br i1 %cmp, label %if.then25, label %lor.lhs.false, !dbg !4726

lor.lhs.false:                                    ; preds = %if.end18
  %bf.clear23 = and i32 %bf.load, 33554432, !dbg !4727
  %tobool24 = icmp eq i32 %bf.clear23, 0, !dbg !4727
  br i1 %tobool24, label %if.then25, label %cleanup1718, !dbg !4728

if.then25:                                        ; preds = %lor.lhs.false, %if.end18
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4729
  %rt_mem = bitcast %union.rtunion_def* %5 to %struct.mem_attrs**, !dbg !4729
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4729
  %cmp29 = icmp eq %struct.mem_attrs* %6, null, !dbg !4729
  br i1 %cmp29, label %cond.false, label %cond.true, !dbg !4729

cond.true:                                        ; preds = %if.then25
  %size35 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 2, !dbg !4729
  %7 = load %struct.rtx_def*, %struct.rtx_def** %size35, align 8, !dbg !4729
  %tobool36 = icmp eq %struct.rtx_def* %7, null, !dbg !4729
  br i1 %tobool36, label %cond.end86, label %cond.true52, !dbg !4729

cond.false:                                       ; preds = %if.then25
  %bf.clear39 = and i32 %bf.load, 16711680, !dbg !4729
  %cmp40 = icmp eq i32 %bf.clear39, 65536, !dbg !4729
  br i1 %cmp40, label %cond.end86, label %cond.true42, !dbg !4729

cond.true42:                                      ; preds = %cond.false
  %bf.lshr44 = lshr i32 %bf.load, 16, !dbg !4729
  %bf.clear45 = and i32 %bf.lshr44, 255, !dbg !4729
  %idxprom = zext i32 %bf.clear45 to i64, !dbg !4729
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4729
  %8 = load i8, i8* %arrayidx46, align 1, !dbg !4729
  %conv48 = zext i8 %8 to i64, !dbg !4729
  %call49 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv48) #6, !dbg !4729
  %tobool50 = icmp eq %struct.rtx_def* %call49, null, !dbg !4729
  br i1 %tobool50, label %cond.end86, label %cond.true42.cond.true52_crit_edge, !dbg !4729

cond.true42.cond.true52_crit_edge:                ; preds = %cond.true42
  %.pre24 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4730
  br label %cond.true52, !dbg !4729

cond.true52:                                      ; preds = %cond.true42.cond.true52_crit_edge, %cond.true
  %9 = phi %struct.mem_attrs* [ %.pre24, %cond.true42.cond.true52_crit_edge ], [ %6, %cond.true ], !dbg !4730
  %cmp57 = icmp eq %struct.mem_attrs* %9, null, !dbg !4730
  br i1 %cmp57, label %cond.false65, label %cond.true59, !dbg !4730

cond.true59:                                      ; preds = %cond.true52
  %size64 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 2, !dbg !4730
  %10 = load %struct.rtx_def*, %struct.rtx_def** %size64, align 8, !dbg !4730
  br label %cond.end81, !dbg !4730

cond.false65:                                     ; preds = %cond.true52
  %bf.load72 = load i32, i32* %0, align 8, !dbg !4730
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !4730
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !4730
  %idxprom75 = zext i32 %bf.clear74 to i64, !dbg !4730
  %arrayidx76 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom75, !dbg !4730
  %11 = load i8, i8* %arrayidx76, align 1, !dbg !4730
  %conv78 = zext i8 %11 to i64, !dbg !4730
  %call79 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv78) #6, !dbg !4730
  br label %cond.end81, !dbg !4730

cond.end81:                                       ; preds = %cond.false65, %cond.true59
  %cond82 = phi %struct.rtx_def* [ %10, %cond.true59 ], [ %call79, %cond.false65 ], !dbg !4730
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond82, i64 0, i32 1, !dbg !4730
  %arrayidx84 = bitcast %union.u* %u83 to i64*, !dbg !4730
  %12 = load i64, i64* %arrayidx84, align 8, !dbg !4730
  br label %cond.end86, !dbg !4729

cond.end86:                                       ; preds = %cond.true, %cond.true42, %cond.false, %cond.end81
  %cond87 = phi i64 [ %12, %cond.end81 ], [ 0, %cond.false ], [ 0, %cond.true42 ], [ 0, %cond.true ], !dbg !4729
  call void @llvm.dbg.value(metadata i64 %cond87, metadata !4692, metadata !DIExpression()), !dbg !4731
  %arrayidx90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4732
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !4732
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !4732
  %bf.load92 = load i32, i32* %0, align 8, !dbg !4733
  %bf.lshr93 = lshr i32 %bf.load92, 16, !dbg !4733
  %bf.clear94 = and i32 %bf.lshr93, 255, !dbg !4733
  %call95 = tail call fastcc i32 @rtx_addr_can_trap_p_1(%struct.rtx_def* %13, i64 0, i64 %cond87, i32 %bf.clear94, i8 zeroext %conv1) #7, !dbg !4734
  br label %cleanup1718

sw.bb97:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %14 = load i32, i32* @flag_signaling_nans, align 4, !dbg !4735
  %tobool98 = icmp eq i32 %14, 0, !dbg !4735
  br i1 %tobool98, label %sw.bb97.if.end243_crit_edge, label %land.lhs.true99, !dbg !4735

sw.bb97.if.end243_crit_edge:                      ; preds = %sw.bb97
  %.pre25 = lshr i32 %bf.load, 16, !dbg !4737
  %.pre26 = and i32 %.pre25, 255, !dbg !4737
  %.pre27 = zext i32 %.pre26 to i64, !dbg !4737
  br label %if.end243, !dbg !4735

land.lhs.true99:                                  ; preds = %sw.bb97
  %bf.lshr101 = lshr i32 %bf.load, 16, !dbg !4735
  %bf.clear102 = and i32 %bf.lshr101, 255, !dbg !4735
  %idxprom103 = zext i32 %bf.clear102 to i64, !dbg !4735
  %arrayidx104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom103, !dbg !4735
  %15 = load i8, i8* %arrayidx104, align 1, !dbg !4735
  %cmp106 = icmp eq i8 %15, 8, !dbg !4735
  br i1 %cmp106, label %land.lhs.true135, label %lor.lhs.false108, !dbg !4735

lor.lhs.false108:                                 ; preds = %land.lhs.true99
  %cmp115 = icmp eq i8 %15, 9, !dbg !4735
  br i1 %cmp115, label %land.lhs.true135, label %lor.lhs.false117, !dbg !4735

lor.lhs.false117:                                 ; preds = %lor.lhs.false108
  %cmp124 = icmp eq i8 %15, 11, !dbg !4735
  br i1 %cmp124, label %land.lhs.true135, label %lor.lhs.false126, !dbg !4735

lor.lhs.false126:                                 ; preds = %lor.lhs.false117
  %cmp133 = icmp eq i8 %15, 17, !dbg !4735
  br i1 %cmp133, label %land.lhs.true135, label %if.end243, !dbg !4735

land.lhs.true135:                                 ; preds = %lor.lhs.false126, %lor.lhs.false117, %lor.lhs.false108, %land.lhs.true99
  br i1 %cmp106, label %cond.true153, label %lor.lhs.false144, !dbg !4735

lor.lhs.false144:                                 ; preds = %land.lhs.true135
  %cmp151 = icmp eq i8 %15, 9, !dbg !4735
  br i1 %cmp151, label %cond.true153, label %cond.false157, !dbg !4735

cond.true153:                                     ; preds = %lor.lhs.false144, %land.lhs.true135
  br label %cond.end164, !dbg !4735

cond.false157:                                    ; preds = %lor.lhs.false144
  %arrayidx162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom103, !dbg !4735
  %16 = load i8, i8* %arrayidx162, align 1, !dbg !4735
  %.pre22 = zext i8 %16 to i64, !dbg !4735
  %arrayidx167.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre22, !dbg !4739
  %.pre23 = load i8, i8* %arrayidx167.phi.trans.insert, align 1, !dbg !4735
  br label %cond.end164, !dbg !4735

cond.end164:                                      ; preds = %cond.false157, %cond.true153
  %17 = phi i8 [ %.pre23, %cond.false157 ], [ %15, %cond.true153 ], !dbg !4735
  %cmp169 = icmp eq i8 %17, 9, !dbg !4735
  br i1 %cmp169, label %cond.true171, label %cond.false202, !dbg !4735

cond.true171:                                     ; preds = %cond.end164
  br i1 %cmp106, label %cond.true189, label %lor.lhs.false180, !dbg !4735

lor.lhs.false180:                                 ; preds = %cond.true171
  %cmp187 = icmp eq i8 %15, 9, !dbg !4735
  br i1 %cmp187, label %cond.true189, label %cond.false193, !dbg !4735

cond.true189:                                     ; preds = %lor.lhs.false180, %cond.true171
  br label %cond.end200, !dbg !4735

cond.false193:                                    ; preds = %lor.lhs.false180
  %arrayidx198 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom103, !dbg !4735
  %18 = load i8, i8* %arrayidx198, align 1, !dbg !4735
  %conv199 = zext i8 %18 to i32, !dbg !4735
  br label %cond.end200, !dbg !4735

cond.end200:                                      ; preds = %cond.false193, %cond.true189
  %cond201 = phi i32 [ %bf.clear102, %cond.true189 ], [ %conv199, %cond.false193 ], !dbg !4735
  br label %cond.end234, !dbg !4735

cond.false202:                                    ; preds = %cond.end164
  br i1 %cmp106, label %cond.true220, label %lor.lhs.false211, !dbg !4735

lor.lhs.false211:                                 ; preds = %cond.false202
  %cmp218 = icmp eq i8 %15, 9, !dbg !4735
  br i1 %cmp218, label %cond.true220, label %cond.false224, !dbg !4735

cond.true220:                                     ; preds = %lor.lhs.false211, %cond.false202
  br label %cond.end231, !dbg !4735

cond.false224:                                    ; preds = %lor.lhs.false211
  %arrayidx229 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom103, !dbg !4735
  %19 = load i8, i8* %arrayidx229, align 1, !dbg !4735
  %conv230 = zext i8 %19 to i32, !dbg !4735
  br label %cond.end231, !dbg !4735

cond.end231:                                      ; preds = %cond.false224, %cond.true220
  %cond232 = phi i32 [ %bf.clear102, %cond.true220 ], [ %conv230, %cond.false224 ], !dbg !4735
  br label %cond.end234, !dbg !4735

cond.end234:                                      ; preds = %cond.end231, %cond.end200
  %cond235.in = phi i32 [ %cond201, %cond.end200 ], [ %cond232, %cond.end231 ]
  %cond235 = add nsw i32 %cond235.in, -38, !dbg !4735
  %idxprom236 = zext i32 %cond235 to i64, !dbg !4735
  %arrayidx237 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom236, !dbg !4735
  %20 = load %struct.real_format*, %struct.real_format** %arrayidx237, align 8, !dbg !4735
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %20, i64 0, i32 11, !dbg !4735
  %21 = load i8, i8* %has_nans, align 2, !dbg !4735
  %tobool239 = icmp eq i8 %21, 0, !dbg !4735
  %22 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4735
  %tobool241 = icmp ne i32 %22, 0, !dbg !4735
  %or.cond = or i1 %tobool239, %tobool241, !dbg !4735
  br i1 %or.cond, label %if.end243, label %cleanup1718, !dbg !4735

if.end243:                                        ; preds = %sw.bb97.if.end243_crit_edge, %cond.end234, %lor.lhs.false126
  %idxprom247.pre-phi = phi i64 [ %.pre27, %sw.bb97.if.end243_crit_edge ], [ %idxprom103, %cond.end234 ], [ %idxprom103, %lor.lhs.false126 ], !dbg !4737
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom247.pre-phi, !dbg !4737
  %23 = load i8, i8* %arrayidx248, align 1, !dbg !4737
  %cmp250 = icmp eq i8 %23, 8, !dbg !4737
  br i1 %cmp250, label %if.then261, label %lor.lhs.false252, !dbg !4737

lor.lhs.false252:                                 ; preds = %if.end243
  %cmp259 = icmp eq i8 %23, 9, !dbg !4737
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !4740

if.then261:                                       ; preds = %lor.lhs.false252, %if.end243
  %24 = load i32, i32* @flag_trapping_math, align 4, !dbg !4741
  br label %cleanup1718, !dbg !4742

if.end262:                                        ; preds = %lor.lhs.false252
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4743
  %26 = bitcast %union.rtunion_def* %25 to i32**, !dbg !4743
  %27 = load i32*, i32** %26, align 8, !dbg !4743
  %bf.load267 = load i32, i32* %27, align 8, !dbg !4743
  %bf.clear268 = and i32 %bf.load267, 65535, !dbg !4743
  %idxprom269 = zext i32 %bf.clear268 to i64, !dbg !4743
  %arrayidx270 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom269, !dbg !4743
  %28 = load i32, i32* %arrayidx270, align 4, !dbg !4743
  %cmp271 = icmp eq i32 %28, 9, !dbg !4743
  br i1 %cmp271, label %lor.lhs.false273, label %cleanup1718, !dbg !4745

lor.lhs.false273:                                 ; preds = %if.end262
  %29 = bitcast i32* %27 to %struct.rtx_def*, !dbg !4745
  %30 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4746
  %cmp278 = icmp eq %struct.rtx_def* %30, %29, !dbg !4747
  br i1 %cmp278, label %cleanup1718, label %sw.epilog, !dbg !4748

sw.bb282:                                         ; preds = %if.end
  br label %cleanup1718, !dbg !4749

sw.bb283:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %31 = load i32, i32* @flag_trapping_math, align 4, !dbg !4750
  %tobool284 = icmp eq i32 %31, 0, !dbg !4750
  br i1 %tobool284, label %sw.epilog, label %if.end286, !dbg !4752

if.end286:                                        ; preds = %sw.bb283
  %bf.lshr288 = lshr i32 %bf.load, 16, !dbg !4753
  %bf.clear289 = and i32 %bf.lshr288, 255, !dbg !4753
  %idxprom290 = zext i32 %bf.clear289 to i64, !dbg !4753
  %arrayidx291 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom290, !dbg !4753
  %32 = load i8, i8* %arrayidx291, align 1, !dbg !4753
  %cmp293 = icmp eq i8 %32, 8, !dbg !4753
  br i1 %cmp293, label %land.lhs.true322, label %lor.lhs.false295, !dbg !4753

lor.lhs.false295:                                 ; preds = %if.end286
  %cmp302 = icmp eq i8 %32, 9, !dbg !4753
  br i1 %cmp302, label %land.lhs.true322, label %lor.lhs.false304, !dbg !4753

lor.lhs.false304:                                 ; preds = %lor.lhs.false295
  %cmp311 = icmp eq i8 %32, 11, !dbg !4753
  br i1 %cmp311, label %land.lhs.true322, label %lor.lhs.false313, !dbg !4753

lor.lhs.false313:                                 ; preds = %lor.lhs.false304
  %cmp320 = icmp eq i8 %32, 17, !dbg !4753
  br i1 %cmp320, label %land.lhs.true322, label %if.end433, !dbg !4753

land.lhs.true322:                                 ; preds = %lor.lhs.false313, %lor.lhs.false304, %lor.lhs.false295, %if.end286
  br i1 %cmp293, label %cond.true340, label %lor.lhs.false331, !dbg !4753

lor.lhs.false331:                                 ; preds = %land.lhs.true322
  %cmp338 = icmp eq i8 %32, 9, !dbg !4753
  br i1 %cmp338, label %cond.true340, label %cond.false344, !dbg !4753

cond.true340:                                     ; preds = %lor.lhs.false331, %land.lhs.true322
  br label %cond.end351, !dbg !4753

cond.false344:                                    ; preds = %lor.lhs.false331
  %arrayidx349 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom290, !dbg !4753
  %33 = load i8, i8* %arrayidx349, align 1, !dbg !4753
  %.pre16 = zext i8 %33 to i64, !dbg !4753
  %arrayidx354.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre16, !dbg !4755
  %.pre17 = load i8, i8* %arrayidx354.phi.trans.insert, align 1, !dbg !4753
  br label %cond.end351, !dbg !4753

cond.end351:                                      ; preds = %cond.false344, %cond.true340
  %34 = phi i8 [ %.pre17, %cond.false344 ], [ %32, %cond.true340 ], !dbg !4753
  %cmp356 = icmp eq i8 %34, 9, !dbg !4753
  br i1 %cmp356, label %cond.true358, label %cond.false391, !dbg !4753

cond.true358:                                     ; preds = %cond.end351
  br i1 %cmp293, label %cond.true376, label %lor.lhs.false367, !dbg !4753

lor.lhs.false367:                                 ; preds = %cond.true358
  %cmp374 = icmp eq i8 %32, 9, !dbg !4753
  br i1 %cmp374, label %cond.true376, label %cond.false380, !dbg !4753

cond.true376:                                     ; preds = %lor.lhs.false367, %cond.true358
  br label %cond.end387, !dbg !4753

cond.false380:                                    ; preds = %lor.lhs.false367
  %arrayidx385 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom290, !dbg !4753
  %35 = load i8, i8* %arrayidx385, align 1, !dbg !4753
  %conv386 = zext i8 %35 to i32, !dbg !4753
  br label %cond.end387, !dbg !4753

cond.end387:                                      ; preds = %cond.false380, %cond.true376
  %cond388 = phi i32 [ %bf.clear289, %cond.true376 ], [ %conv386, %cond.false380 ], !dbg !4753
  br label %cond.end423, !dbg !4753

cond.false391:                                    ; preds = %cond.end351
  br i1 %cmp293, label %cond.true409, label %lor.lhs.false400, !dbg !4753

lor.lhs.false400:                                 ; preds = %cond.false391
  %cmp407 = icmp eq i8 %32, 9, !dbg !4753
  br i1 %cmp407, label %cond.true409, label %cond.false413, !dbg !4753

cond.true409:                                     ; preds = %lor.lhs.false400, %cond.false391
  br label %cond.end420, !dbg !4753

cond.false413:                                    ; preds = %lor.lhs.false400
  %arrayidx418 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom290, !dbg !4753
  %36 = load i8, i8* %arrayidx418, align 1, !dbg !4753
  %conv419 = zext i8 %36 to i32, !dbg !4753
  br label %cond.end420, !dbg !4753

cond.end420:                                      ; preds = %cond.false413, %cond.true409
  %cond421 = phi i32 [ %bf.clear289, %cond.true409 ], [ %conv419, %cond.false413 ], !dbg !4753
  br label %cond.end423, !dbg !4753

cond.end423:                                      ; preds = %cond.end420, %cond.end387
  %cond424.in = phi i32 [ %cond388, %cond.end387 ], [ %cond421, %cond.end420 ]
  %cond424 = add nsw i32 %cond424.in, -38, !dbg !4753
  %idxprom425 = zext i32 %cond424 to i64, !dbg !4753
  %arrayidx426 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom425, !dbg !4753
  %37 = load %struct.real_format*, %struct.real_format** %arrayidx426, align 8, !dbg !4753
  %has_nans427 = getelementptr inbounds %struct.real_format, %struct.real_format* %37, i64 0, i32 11, !dbg !4753
  %38 = load i8, i8* %has_nans427, align 2, !dbg !4753
  %tobool429 = icmp eq i8 %38, 0, !dbg !4753
  %39 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4753
  %tobool431 = icmp ne i32 %39, 0, !dbg !4753
  %or.cond2 = or i1 %tobool429, %tobool431, !dbg !4753
  br i1 %or.cond2, label %if.end433, label %cleanup1718, !dbg !4753

if.end433:                                        ; preds = %cond.end423, %lor.lhs.false313
  %arrayidx436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4756
  %40 = bitcast %union.rtunion_def* %arrayidx436 to i32**, !dbg !4756
  %41 = load i32*, i32** %40, align 8, !dbg !4756
  %bf.load438 = load i32, i32* %41, align 8, !dbg !4756
  %bf.lshr439 = lshr i32 %bf.load438, 16, !dbg !4756
  %bf.clear440 = and i32 %bf.lshr439, 255, !dbg !4756
  %idxprom441 = zext i32 %bf.clear440 to i64, !dbg !4756
  %arrayidx442 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom441, !dbg !4756
  %42 = load i8, i8* %arrayidx442, align 1, !dbg !4756
  %cmp444 = icmp eq i8 %42, 8, !dbg !4756
  br i1 %cmp444, label %land.lhs.true485, label %lor.lhs.false446, !dbg !4756

lor.lhs.false446:                                 ; preds = %if.end433
  %cmp457 = icmp eq i8 %42, 9, !dbg !4756
  br i1 %cmp457, label %land.lhs.true485, label %lor.lhs.false459, !dbg !4756

lor.lhs.false459:                                 ; preds = %lor.lhs.false446
  %cmp470 = icmp eq i8 %42, 11, !dbg !4756
  br i1 %cmp470, label %land.lhs.true485, label %lor.lhs.false472, !dbg !4756

lor.lhs.false472:                                 ; preds = %lor.lhs.false459
  %cmp483 = icmp eq i8 %42, 17, !dbg !4756
  br i1 %cmp483, label %land.lhs.true485, label %lor.lhs.false643, !dbg !4756

land.lhs.true485:                                 ; preds = %lor.lhs.false472, %lor.lhs.false459, %lor.lhs.false446, %if.end433
  br i1 %cmp444, label %cond.true511, label %lor.lhs.false498, !dbg !4756

lor.lhs.false498:                                 ; preds = %land.lhs.true485
  %cmp509 = icmp eq i8 %42, 9, !dbg !4756
  br i1 %cmp509, label %cond.true511, label %cond.false519, !dbg !4756

cond.true511:                                     ; preds = %lor.lhs.false498, %land.lhs.true485
  br label %cond.end530, !dbg !4756

cond.false519:                                    ; preds = %lor.lhs.false498
  %arrayidx528 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom441, !dbg !4756
  %43 = load i8, i8* %arrayidx528, align 1, !dbg !4756
  %.pre18 = zext i8 %43 to i64, !dbg !4756
  %arrayidx533.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre18, !dbg !4758
  %.pre19 = load i8, i8* %arrayidx533.phi.trans.insert, align 1, !dbg !4756
  br label %cond.end530, !dbg !4756

cond.end530:                                      ; preds = %cond.false519, %cond.true511
  %44 = phi i8 [ %.pre19, %cond.false519 ], [ %42, %cond.true511 ], !dbg !4756
  %cmp535 = icmp eq i8 %44, 9, !dbg !4756
  br i1 %cmp535, label %cond.true537, label %cond.false586, !dbg !4756

cond.true537:                                     ; preds = %cond.end530
  br i1 %cmp444, label %cond.true563, label %lor.lhs.false550, !dbg !4756

lor.lhs.false550:                                 ; preds = %cond.true537
  %cmp561 = icmp eq i8 %42, 9, !dbg !4756
  br i1 %cmp561, label %cond.true563, label %cond.false571, !dbg !4756

cond.true563:                                     ; preds = %lor.lhs.false550, %cond.true537
  br label %cond.end582, !dbg !4756

cond.false571:                                    ; preds = %lor.lhs.false550
  %arrayidx580 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom441, !dbg !4756
  %45 = load i8, i8* %arrayidx580, align 1, !dbg !4756
  %conv581 = zext i8 %45 to i32, !dbg !4756
  br label %cond.end582, !dbg !4756

cond.end582:                                      ; preds = %cond.false571, %cond.true563
  %cond583 = phi i32 [ %bf.clear440, %cond.true563 ], [ %conv581, %cond.false571 ], !dbg !4756
  br label %cond.end634, !dbg !4756

cond.false586:                                    ; preds = %cond.end530
  br i1 %cmp444, label %cond.true612, label %lor.lhs.false599, !dbg !4756

lor.lhs.false599:                                 ; preds = %cond.false586
  %cmp610 = icmp eq i8 %42, 9, !dbg !4756
  br i1 %cmp610, label %cond.true612, label %cond.false620, !dbg !4756

cond.true612:                                     ; preds = %lor.lhs.false599, %cond.false586
  br label %cond.end631, !dbg !4756

cond.false620:                                    ; preds = %lor.lhs.false599
  %arrayidx629 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom441, !dbg !4756
  %46 = load i8, i8* %arrayidx629, align 1, !dbg !4756
  %conv630 = zext i8 %46 to i32, !dbg !4756
  br label %cond.end631, !dbg !4756

cond.end631:                                      ; preds = %cond.false620, %cond.true612
  %cond632 = phi i32 [ %bf.clear440, %cond.true612 ], [ %conv630, %cond.false620 ], !dbg !4756
  br label %cond.end634, !dbg !4756

cond.end634:                                      ; preds = %cond.end631, %cond.end582
  %cond635.in = phi i32 [ %cond583, %cond.end582 ], [ %cond632, %cond.end631 ]
  %cond635 = add nsw i32 %cond635.in, -38, !dbg !4756
  %idxprom636 = zext i32 %cond635 to i64, !dbg !4756
  %arrayidx637 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom636, !dbg !4756
  %47 = load %struct.real_format*, %struct.real_format** %arrayidx637, align 8, !dbg !4756
  %has_nans638 = getelementptr inbounds %struct.real_format, %struct.real_format* %47, i64 0, i32 11, !dbg !4756
  %48 = load i8, i8* %has_nans638, align 2, !dbg !4756
  %tobool640 = icmp eq i8 %48, 0, !dbg !4756
  %49 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4756
  %tobool642 = icmp ne i32 %49, 0, !dbg !4756
  %or.cond3 = or i1 %tobool640, %tobool642, !dbg !4756
  br i1 %or.cond3, label %lor.lhs.false643, label %cleanup1718, !dbg !4756

lor.lhs.false643:                                 ; preds = %cond.end634, %lor.lhs.false472
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4759
  %51 = bitcast %union.rtunion_def* %50 to i32**, !dbg !4759
  %52 = load i32*, i32** %51, align 8, !dbg !4759
  %bf.load648 = load i32, i32* %52, align 8, !dbg !4759
  %bf.lshr649 = lshr i32 %bf.load648, 16, !dbg !4759
  %bf.clear650 = and i32 %bf.lshr649, 255, !dbg !4759
  %idxprom651 = zext i32 %bf.clear650 to i64, !dbg !4759
  %arrayidx652 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom651, !dbg !4759
  %53 = load i8, i8* %arrayidx652, align 1, !dbg !4759
  %cmp654 = icmp eq i8 %53, 8, !dbg !4759
  br i1 %cmp654, label %land.lhs.true695, label %lor.lhs.false656, !dbg !4759

lor.lhs.false656:                                 ; preds = %lor.lhs.false643
  %cmp667 = icmp eq i8 %53, 9, !dbg !4759
  br i1 %cmp667, label %land.lhs.true695, label %lor.lhs.false669, !dbg !4759

lor.lhs.false669:                                 ; preds = %lor.lhs.false656
  %cmp680 = icmp eq i8 %53, 11, !dbg !4759
  br i1 %cmp680, label %land.lhs.true695, label %lor.lhs.false682, !dbg !4759

lor.lhs.false682:                                 ; preds = %lor.lhs.false669
  %cmp693 = icmp eq i8 %53, 17, !dbg !4759
  br i1 %cmp693, label %land.lhs.true695, label %sw.epilog, !dbg !4759

land.lhs.true695:                                 ; preds = %lor.lhs.false682, %lor.lhs.false669, %lor.lhs.false656, %lor.lhs.false643
  br i1 %cmp654, label %cond.true721, label %lor.lhs.false708, !dbg !4759

lor.lhs.false708:                                 ; preds = %land.lhs.true695
  %cmp719 = icmp eq i8 %53, 9, !dbg !4759
  br i1 %cmp719, label %cond.true721, label %cond.false729, !dbg !4759

cond.true721:                                     ; preds = %lor.lhs.false708, %land.lhs.true695
  br label %cond.end740, !dbg !4759

cond.false729:                                    ; preds = %lor.lhs.false708
  %arrayidx738 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom651, !dbg !4759
  %54 = load i8, i8* %arrayidx738, align 1, !dbg !4759
  %.pre20 = zext i8 %54 to i64, !dbg !4759
  %arrayidx743.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre20, !dbg !4758
  %.pre21 = load i8, i8* %arrayidx743.phi.trans.insert, align 1, !dbg !4759
  br label %cond.end740, !dbg !4759

cond.end740:                                      ; preds = %cond.false729, %cond.true721
  %55 = phi i8 [ %.pre21, %cond.false729 ], [ %53, %cond.true721 ], !dbg !4759
  %cmp745 = icmp eq i8 %55, 9, !dbg !4759
  br i1 %cmp745, label %cond.true747, label %cond.false796, !dbg !4759

cond.true747:                                     ; preds = %cond.end740
  br i1 %cmp654, label %cond.true773, label %lor.lhs.false760, !dbg !4759

lor.lhs.false760:                                 ; preds = %cond.true747
  %cmp771 = icmp eq i8 %53, 9, !dbg !4759
  br i1 %cmp771, label %cond.true773, label %cond.false781, !dbg !4759

cond.true773:                                     ; preds = %lor.lhs.false760, %cond.true747
  br label %cond.end792, !dbg !4759

cond.false781:                                    ; preds = %lor.lhs.false760
  %arrayidx790 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom651, !dbg !4759
  %56 = load i8, i8* %arrayidx790, align 1, !dbg !4759
  %conv791 = zext i8 %56 to i32, !dbg !4759
  br label %cond.end792, !dbg !4759

cond.end792:                                      ; preds = %cond.false781, %cond.true773
  %cond793 = phi i32 [ %bf.clear650, %cond.true773 ], [ %conv791, %cond.false781 ], !dbg !4759
  br label %cond.end844, !dbg !4759

cond.false796:                                    ; preds = %cond.end740
  br i1 %cmp654, label %cond.true822, label %lor.lhs.false809, !dbg !4759

lor.lhs.false809:                                 ; preds = %cond.false796
  %cmp820 = icmp eq i8 %53, 9, !dbg !4759
  br i1 %cmp820, label %cond.true822, label %cond.false830, !dbg !4759

cond.true822:                                     ; preds = %lor.lhs.false809, %cond.false796
  br label %cond.end841, !dbg !4759

cond.false830:                                    ; preds = %lor.lhs.false809
  %arrayidx839 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom651, !dbg !4759
  %57 = load i8, i8* %arrayidx839, align 1, !dbg !4759
  %conv840 = zext i8 %57 to i32, !dbg !4759
  br label %cond.end841, !dbg !4759

cond.end841:                                      ; preds = %cond.false830, %cond.true822
  %cond842 = phi i32 [ %bf.clear650, %cond.true822 ], [ %conv840, %cond.false830 ], !dbg !4759
  br label %cond.end844, !dbg !4759

cond.end844:                                      ; preds = %cond.end841, %cond.end792
  %cond845.in = phi i32 [ %cond793, %cond.end792 ], [ %cond842, %cond.end841 ]
  %cond845 = add nsw i32 %cond845.in, -38, !dbg !4759
  %idxprom846 = zext i32 %cond845 to i64, !dbg !4759
  %arrayidx847 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom846, !dbg !4759
  %58 = load %struct.real_format*, %struct.real_format** %arrayidx847, align 8, !dbg !4759
  %has_nans848 = getelementptr inbounds %struct.real_format, %struct.real_format* %58, i64 0, i32 11, !dbg !4759
  %59 = load i8, i8* %has_nans848, align 2, !dbg !4759
  %tobool850 = icmp eq i8 %59, 0, !dbg !4759
  %60 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4759
  %tobool852 = icmp ne i32 %60, 0, !dbg !4759
  %or.cond4 = or i1 %tobool850, %tobool852, !dbg !4759
  br i1 %or.cond4, label %sw.epilog, label %cleanup1718, !dbg !4759

sw.bb855:                                         ; preds = %if.end, %if.end
  %61 = load i32, i32* @flag_signaling_nans, align 4, !dbg !4760
  %tobool856 = icmp eq i32 %61, 0, !dbg !4760
  br i1 %tobool856, label %if.end1004, label %land.lhs.true857, !dbg !4760

land.lhs.true857:                                 ; preds = %sw.bb855
  %bf.lshr859 = lshr i32 %bf.load, 16, !dbg !4760
  %bf.clear860 = and i32 %bf.lshr859, 255, !dbg !4760
  %idxprom861 = zext i32 %bf.clear860 to i64, !dbg !4760
  %arrayidx862 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom861, !dbg !4760
  %62 = load i8, i8* %arrayidx862, align 1, !dbg !4760
  %cmp864 = icmp eq i8 %62, 8, !dbg !4760
  br i1 %cmp864, label %land.lhs.true893, label %lor.lhs.false866, !dbg !4760

lor.lhs.false866:                                 ; preds = %land.lhs.true857
  %cmp873 = icmp eq i8 %62, 9, !dbg !4760
  br i1 %cmp873, label %land.lhs.true893, label %lor.lhs.false875, !dbg !4760

lor.lhs.false875:                                 ; preds = %lor.lhs.false866
  %cmp882 = icmp eq i8 %62, 11, !dbg !4760
  br i1 %cmp882, label %land.lhs.true893, label %lor.lhs.false884, !dbg !4760

lor.lhs.false884:                                 ; preds = %lor.lhs.false875
  %cmp891 = icmp eq i8 %62, 17, !dbg !4760
  br i1 %cmp891, label %land.lhs.true893, label %if.end1004, !dbg !4760

land.lhs.true893:                                 ; preds = %lor.lhs.false884, %lor.lhs.false875, %lor.lhs.false866, %land.lhs.true857
  br i1 %cmp864, label %cond.true911, label %lor.lhs.false902, !dbg !4760

lor.lhs.false902:                                 ; preds = %land.lhs.true893
  %cmp909 = icmp eq i8 %62, 9, !dbg !4760
  br i1 %cmp909, label %cond.true911, label %cond.false915, !dbg !4760

cond.true911:                                     ; preds = %lor.lhs.false902, %land.lhs.true893
  br label %cond.end922, !dbg !4760

cond.false915:                                    ; preds = %lor.lhs.false902
  %arrayidx920 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom861, !dbg !4760
  %63 = load i8, i8* %arrayidx920, align 1, !dbg !4760
  %.pre10 = zext i8 %63 to i64, !dbg !4760
  %arrayidx925.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre10, !dbg !4762
  %.pre11 = load i8, i8* %arrayidx925.phi.trans.insert, align 1, !dbg !4760
  br label %cond.end922, !dbg !4760

cond.end922:                                      ; preds = %cond.false915, %cond.true911
  %64 = phi i8 [ %.pre11, %cond.false915 ], [ %62, %cond.true911 ], !dbg !4760
  %cmp927 = icmp eq i8 %64, 9, !dbg !4760
  br i1 %cmp927, label %cond.true929, label %cond.false962, !dbg !4760

cond.true929:                                     ; preds = %cond.end922
  br i1 %cmp864, label %cond.true947, label %lor.lhs.false938, !dbg !4760

lor.lhs.false938:                                 ; preds = %cond.true929
  %cmp945 = icmp eq i8 %62, 9, !dbg !4760
  br i1 %cmp945, label %cond.true947, label %cond.false951, !dbg !4760

cond.true947:                                     ; preds = %lor.lhs.false938, %cond.true929
  br label %cond.end958, !dbg !4760

cond.false951:                                    ; preds = %lor.lhs.false938
  %arrayidx956 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom861, !dbg !4760
  %65 = load i8, i8* %arrayidx956, align 1, !dbg !4760
  %conv957 = zext i8 %65 to i32, !dbg !4760
  br label %cond.end958, !dbg !4760

cond.end958:                                      ; preds = %cond.false951, %cond.true947
  %cond959 = phi i32 [ %bf.clear860, %cond.true947 ], [ %conv957, %cond.false951 ], !dbg !4760
  br label %cond.end994, !dbg !4760

cond.false962:                                    ; preds = %cond.end922
  br i1 %cmp864, label %cond.true980, label %lor.lhs.false971, !dbg !4760

lor.lhs.false971:                                 ; preds = %cond.false962
  %cmp978 = icmp eq i8 %62, 9, !dbg !4760
  br i1 %cmp978, label %cond.true980, label %cond.false984, !dbg !4760

cond.true980:                                     ; preds = %lor.lhs.false971, %cond.false962
  br label %cond.end991, !dbg !4760

cond.false984:                                    ; preds = %lor.lhs.false971
  %arrayidx989 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom861, !dbg !4760
  %66 = load i8, i8* %arrayidx989, align 1, !dbg !4760
  %conv990 = zext i8 %66 to i32, !dbg !4760
  br label %cond.end991, !dbg !4760

cond.end991:                                      ; preds = %cond.false984, %cond.true980
  %cond992 = phi i32 [ %bf.clear860, %cond.true980 ], [ %conv990, %cond.false984 ], !dbg !4760
  br label %cond.end994, !dbg !4760

cond.end994:                                      ; preds = %cond.end991, %cond.end958
  %cond995.in = phi i32 [ %cond959, %cond.end958 ], [ %cond992, %cond.end991 ]
  %cond995 = add nsw i32 %cond995.in, -38, !dbg !4760
  %idxprom996 = zext i32 %cond995 to i64, !dbg !4760
  %arrayidx997 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom996, !dbg !4760
  %67 = load %struct.real_format*, %struct.real_format** %arrayidx997, align 8, !dbg !4760
  %has_nans998 = getelementptr inbounds %struct.real_format, %struct.real_format* %67, i64 0, i32 11, !dbg !4760
  %68 = load i8, i8* %has_nans998, align 2, !dbg !4760
  %tobool1000 = icmp eq i8 %68, 0, !dbg !4760
  %69 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4760
  %tobool1002 = icmp ne i32 %69, 0, !dbg !4760
  %or.cond5 = or i1 %tobool1000, %tobool1002, !dbg !4760
  br i1 %or.cond5, label %if.end1004, label %cleanup1718, !dbg !4760

if.end1004:                                       ; preds = %sw.bb855, %cond.end994, %lor.lhs.false884
  br i1 %tobool856, label %lor.lhs.false1216, label %land.lhs.true1006, !dbg !4763

land.lhs.true1006:                                ; preds = %if.end1004
  %arrayidx1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4763
  %70 = bitcast %union.rtunion_def* %arrayidx1009 to i32**, !dbg !4763
  %71 = load i32*, i32** %70, align 8, !dbg !4763
  %bf.load1011 = load i32, i32* %71, align 8, !dbg !4763
  %bf.lshr1012 = lshr i32 %bf.load1011, 16, !dbg !4763
  %bf.clear1013 = and i32 %bf.lshr1012, 255, !dbg !4763
  %idxprom1014 = zext i32 %bf.clear1013 to i64, !dbg !4763
  %arrayidx1015 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1014, !dbg !4763
  %72 = load i8, i8* %arrayidx1015, align 1, !dbg !4763
  %cmp1017 = icmp eq i8 %72, 8, !dbg !4763
  br i1 %cmp1017, label %land.lhs.true1058, label %lor.lhs.false1019, !dbg !4763

lor.lhs.false1019:                                ; preds = %land.lhs.true1006
  %cmp1030 = icmp eq i8 %72, 9, !dbg !4763
  br i1 %cmp1030, label %land.lhs.true1058, label %lor.lhs.false1032, !dbg !4763

lor.lhs.false1032:                                ; preds = %lor.lhs.false1019
  %cmp1043 = icmp eq i8 %72, 11, !dbg !4763
  br i1 %cmp1043, label %land.lhs.true1058, label %lor.lhs.false1045, !dbg !4763

lor.lhs.false1045:                                ; preds = %lor.lhs.false1032
  %cmp1056 = icmp eq i8 %72, 17, !dbg !4763
  br i1 %cmp1056, label %land.lhs.true1058, label %lor.lhs.false1216, !dbg !4763

land.lhs.true1058:                                ; preds = %lor.lhs.false1045, %lor.lhs.false1032, %lor.lhs.false1019, %land.lhs.true1006
  br i1 %cmp1017, label %cond.true1084, label %lor.lhs.false1071, !dbg !4763

lor.lhs.false1071:                                ; preds = %land.lhs.true1058
  %cmp1082 = icmp eq i8 %72, 9, !dbg !4763
  br i1 %cmp1082, label %cond.true1084, label %cond.false1092, !dbg !4763

cond.true1084:                                    ; preds = %lor.lhs.false1071, %land.lhs.true1058
  br label %cond.end1103, !dbg !4763

cond.false1092:                                   ; preds = %lor.lhs.false1071
  %arrayidx1101 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1014, !dbg !4763
  %73 = load i8, i8* %arrayidx1101, align 1, !dbg !4763
  %.pre12 = zext i8 %73 to i64, !dbg !4763
  %arrayidx1106.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre12, !dbg !4765
  %.pre13 = load i8, i8* %arrayidx1106.phi.trans.insert, align 1, !dbg !4763
  br label %cond.end1103, !dbg !4763

cond.end1103:                                     ; preds = %cond.false1092, %cond.true1084
  %74 = phi i8 [ %.pre13, %cond.false1092 ], [ %72, %cond.true1084 ], !dbg !4763
  %cmp1108 = icmp eq i8 %74, 9, !dbg !4763
  br i1 %cmp1108, label %cond.true1110, label %cond.false1159, !dbg !4763

cond.true1110:                                    ; preds = %cond.end1103
  br i1 %cmp1017, label %cond.true1136, label %lor.lhs.false1123, !dbg !4763

lor.lhs.false1123:                                ; preds = %cond.true1110
  %cmp1134 = icmp eq i8 %72, 9, !dbg !4763
  br i1 %cmp1134, label %cond.true1136, label %cond.false1144, !dbg !4763

cond.true1136:                                    ; preds = %lor.lhs.false1123, %cond.true1110
  br label %cond.end1155, !dbg !4763

cond.false1144:                                   ; preds = %lor.lhs.false1123
  %arrayidx1153 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1014, !dbg !4763
  %75 = load i8, i8* %arrayidx1153, align 1, !dbg !4763
  %conv1154 = zext i8 %75 to i32, !dbg !4763
  br label %cond.end1155, !dbg !4763

cond.end1155:                                     ; preds = %cond.false1144, %cond.true1136
  %cond1156 = phi i32 [ %bf.clear1013, %cond.true1136 ], [ %conv1154, %cond.false1144 ], !dbg !4763
  br label %cond.end1207, !dbg !4763

cond.false1159:                                   ; preds = %cond.end1103
  br i1 %cmp1017, label %cond.true1185, label %lor.lhs.false1172, !dbg !4763

lor.lhs.false1172:                                ; preds = %cond.false1159
  %cmp1183 = icmp eq i8 %72, 9, !dbg !4763
  br i1 %cmp1183, label %cond.true1185, label %cond.false1193, !dbg !4763

cond.true1185:                                    ; preds = %lor.lhs.false1172, %cond.false1159
  br label %cond.end1204, !dbg !4763

cond.false1193:                                   ; preds = %lor.lhs.false1172
  %arrayidx1202 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1014, !dbg !4763
  %76 = load i8, i8* %arrayidx1202, align 1, !dbg !4763
  %conv1203 = zext i8 %76 to i32, !dbg !4763
  br label %cond.end1204, !dbg !4763

cond.end1204:                                     ; preds = %cond.false1193, %cond.true1185
  %cond1205 = phi i32 [ %bf.clear1013, %cond.true1185 ], [ %conv1203, %cond.false1193 ], !dbg !4763
  br label %cond.end1207, !dbg !4763

cond.end1207:                                     ; preds = %cond.end1204, %cond.end1155
  %cond1208.in = phi i32 [ %cond1156, %cond.end1155 ], [ %cond1205, %cond.end1204 ]
  %cond1208 = add nsw i32 %cond1208.in, -38, !dbg !4763
  %idxprom1209 = zext i32 %cond1208 to i64, !dbg !4763
  %arrayidx1210 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1209, !dbg !4763
  %77 = load %struct.real_format*, %struct.real_format** %arrayidx1210, align 8, !dbg !4763
  %has_nans1211 = getelementptr inbounds %struct.real_format, %struct.real_format* %77, i64 0, i32 11, !dbg !4763
  %78 = load i8, i8* %has_nans1211, align 2, !dbg !4763
  %tobool1213 = icmp eq i8 %78, 0, !dbg !4763
  %79 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4763
  %tobool1215 = icmp ne i32 %79, 0, !dbg !4763
  %or.cond6 = or i1 %tobool1213, %tobool1215, !dbg !4763
  br i1 %or.cond6, label %lor.lhs.false1216, label %cleanup1718, !dbg !4763

lor.lhs.false1216:                                ; preds = %if.end1004, %cond.end1207, %lor.lhs.false1045
  br i1 %tobool856, label %sw.epilog, label %land.lhs.true1218, !dbg !4766

land.lhs.true1218:                                ; preds = %lor.lhs.false1216
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4766
  %81 = bitcast %union.rtunion_def* %80 to i32**, !dbg !4766
  %82 = load i32*, i32** %81, align 8, !dbg !4766
  %bf.load1223 = load i32, i32* %82, align 8, !dbg !4766
  %bf.lshr1224 = lshr i32 %bf.load1223, 16, !dbg !4766
  %bf.clear1225 = and i32 %bf.lshr1224, 255, !dbg !4766
  %idxprom1226 = zext i32 %bf.clear1225 to i64, !dbg !4766
  %arrayidx1227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1226, !dbg !4766
  %83 = load i8, i8* %arrayidx1227, align 1, !dbg !4766
  %cmp1229 = icmp eq i8 %83, 8, !dbg !4766
  br i1 %cmp1229, label %land.lhs.true1270, label %lor.lhs.false1231, !dbg !4766

lor.lhs.false1231:                                ; preds = %land.lhs.true1218
  %cmp1242 = icmp eq i8 %83, 9, !dbg !4766
  br i1 %cmp1242, label %land.lhs.true1270, label %lor.lhs.false1244, !dbg !4766

lor.lhs.false1244:                                ; preds = %lor.lhs.false1231
  %cmp1255 = icmp eq i8 %83, 11, !dbg !4766
  br i1 %cmp1255, label %land.lhs.true1270, label %lor.lhs.false1257, !dbg !4766

lor.lhs.false1257:                                ; preds = %lor.lhs.false1244
  %cmp1268 = icmp eq i8 %83, 17, !dbg !4766
  br i1 %cmp1268, label %land.lhs.true1270, label %sw.epilog, !dbg !4766

land.lhs.true1270:                                ; preds = %lor.lhs.false1257, %lor.lhs.false1244, %lor.lhs.false1231, %land.lhs.true1218
  br i1 %cmp1229, label %cond.true1296, label %lor.lhs.false1283, !dbg !4766

lor.lhs.false1283:                                ; preds = %land.lhs.true1270
  %cmp1294 = icmp eq i8 %83, 9, !dbg !4766
  br i1 %cmp1294, label %cond.true1296, label %cond.false1304, !dbg !4766

cond.true1296:                                    ; preds = %lor.lhs.false1283, %land.lhs.true1270
  br label %cond.end1315, !dbg !4766

cond.false1304:                                   ; preds = %lor.lhs.false1283
  %arrayidx1313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1226, !dbg !4766
  %84 = load i8, i8* %arrayidx1313, align 1, !dbg !4766
  %.pre14 = zext i8 %84 to i64, !dbg !4766
  %arrayidx1318.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre14, !dbg !4765
  %.pre15 = load i8, i8* %arrayidx1318.phi.trans.insert, align 1, !dbg !4766
  br label %cond.end1315, !dbg !4766

cond.end1315:                                     ; preds = %cond.false1304, %cond.true1296
  %85 = phi i8 [ %.pre15, %cond.false1304 ], [ %83, %cond.true1296 ], !dbg !4766
  %cmp1320 = icmp eq i8 %85, 9, !dbg !4766
  br i1 %cmp1320, label %cond.true1322, label %cond.false1371, !dbg !4766

cond.true1322:                                    ; preds = %cond.end1315
  br i1 %cmp1229, label %cond.true1348, label %lor.lhs.false1335, !dbg !4766

lor.lhs.false1335:                                ; preds = %cond.true1322
  %cmp1346 = icmp eq i8 %83, 9, !dbg !4766
  br i1 %cmp1346, label %cond.true1348, label %cond.false1356, !dbg !4766

cond.true1348:                                    ; preds = %lor.lhs.false1335, %cond.true1322
  br label %cond.end1367, !dbg !4766

cond.false1356:                                   ; preds = %lor.lhs.false1335
  %arrayidx1365 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1226, !dbg !4766
  %86 = load i8, i8* %arrayidx1365, align 1, !dbg !4766
  %conv1366 = zext i8 %86 to i32, !dbg !4766
  br label %cond.end1367, !dbg !4766

cond.end1367:                                     ; preds = %cond.false1356, %cond.true1348
  %cond1368 = phi i32 [ %bf.clear1225, %cond.true1348 ], [ %conv1366, %cond.false1356 ], !dbg !4766
  br label %cond.end1419, !dbg !4766

cond.false1371:                                   ; preds = %cond.end1315
  br i1 %cmp1229, label %cond.true1397, label %lor.lhs.false1384, !dbg !4766

lor.lhs.false1384:                                ; preds = %cond.false1371
  %cmp1395 = icmp eq i8 %83, 9, !dbg !4766
  br i1 %cmp1395, label %cond.true1397, label %cond.false1405, !dbg !4766

cond.true1397:                                    ; preds = %lor.lhs.false1384, %cond.false1371
  br label %cond.end1416, !dbg !4766

cond.false1405:                                   ; preds = %lor.lhs.false1384
  %arrayidx1414 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1226, !dbg !4766
  %87 = load i8, i8* %arrayidx1414, align 1, !dbg !4766
  %conv1415 = zext i8 %87 to i32, !dbg !4766
  br label %cond.end1416, !dbg !4766

cond.end1416:                                     ; preds = %cond.false1405, %cond.true1397
  %cond1417 = phi i32 [ %bf.clear1225, %cond.true1397 ], [ %conv1415, %cond.false1405 ], !dbg !4766
  br label %cond.end1419, !dbg !4766

cond.end1419:                                     ; preds = %cond.end1416, %cond.end1367
  %cond1420.in = phi i32 [ %cond1368, %cond.end1367 ], [ %cond1417, %cond.end1416 ]
  %cond1420 = add nsw i32 %cond1420.in, -38, !dbg !4766
  %idxprom1421 = zext i32 %cond1420 to i64, !dbg !4766
  %arrayidx1422 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1421, !dbg !4766
  %88 = load %struct.real_format*, %struct.real_format** %arrayidx1422, align 8, !dbg !4766
  %has_nans1423 = getelementptr inbounds %struct.real_format, %struct.real_format* %88, i64 0, i32 11, !dbg !4766
  %89 = load i8, i8* %has_nans1423, align 2, !dbg !4766
  %tobool1425 = icmp eq i8 %89, 0, !dbg !4766
  %90 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4766
  %tobool1427 = icmp ne i32 %90, 0, !dbg !4766
  %or.cond7 = or i1 %tobool1425, %tobool1427, !dbg !4766
  br i1 %or.cond7, label %sw.epilog, label %cleanup1718, !dbg !4766

sw.bb1430:                                        ; preds = %if.end
  %91 = load i32, i32* @flag_trapping_math, align 4, !dbg !4767
  %tobool1431 = icmp eq i32 %91, 0, !dbg !4767
  br i1 %tobool1431, label %sw.epilog, label %land.lhs.true1432, !dbg !4769

land.lhs.true1432:                                ; preds = %sw.bb1430
  %arrayidx1435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4770
  %92 = bitcast %union.rtunion_def* %arrayidx1435 to i32**, !dbg !4770
  %93 = load i32*, i32** %92, align 8, !dbg !4770
  %bf.load1437 = load i32, i32* %93, align 8, !dbg !4770
  %bf.lshr1438 = lshr i32 %bf.load1437, 16, !dbg !4770
  %bf.clear1439 = and i32 %bf.lshr1438, 255, !dbg !4770
  %idxprom1440 = zext i32 %bf.clear1439 to i64, !dbg !4770
  %arrayidx1441 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1440, !dbg !4770
  %94 = load i8, i8* %arrayidx1441, align 1, !dbg !4770
  %cmp1443 = icmp eq i8 %94, 8, !dbg !4770
  br i1 %cmp1443, label %land.lhs.true1484, label %lor.lhs.false1445, !dbg !4770

lor.lhs.false1445:                                ; preds = %land.lhs.true1432
  %cmp1456 = icmp eq i8 %94, 9, !dbg !4770
  br i1 %cmp1456, label %land.lhs.true1484, label %lor.lhs.false1458, !dbg !4770

lor.lhs.false1458:                                ; preds = %lor.lhs.false1445
  %cmp1469 = icmp eq i8 %94, 11, !dbg !4770
  br i1 %cmp1469, label %land.lhs.true1484, label %lor.lhs.false1471, !dbg !4770

lor.lhs.false1471:                                ; preds = %lor.lhs.false1458
  %cmp1482 = icmp eq i8 %94, 17, !dbg !4770
  br i1 %cmp1482, label %land.lhs.true1484, label %sw.epilog, !dbg !4770

land.lhs.true1484:                                ; preds = %lor.lhs.false1471, %lor.lhs.false1458, %lor.lhs.false1445, %land.lhs.true1432
  br i1 %cmp1443, label %cond.true1510, label %lor.lhs.false1497, !dbg !4770

lor.lhs.false1497:                                ; preds = %land.lhs.true1484
  %cmp1508 = icmp eq i8 %94, 9, !dbg !4770
  br i1 %cmp1508, label %cond.true1510, label %cond.false1518, !dbg !4770

cond.true1510:                                    ; preds = %lor.lhs.false1497, %land.lhs.true1484
  br label %cond.end1529, !dbg !4770

cond.false1518:                                   ; preds = %lor.lhs.false1497
  %arrayidx1527 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1440, !dbg !4770
  %95 = load i8, i8* %arrayidx1527, align 1, !dbg !4770
  %.pre = zext i8 %95 to i64, !dbg !4770
  %arrayidx1532.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !4771
  %.pre9 = load i8, i8* %arrayidx1532.phi.trans.insert, align 1, !dbg !4770
  br label %cond.end1529, !dbg !4770

cond.end1529:                                     ; preds = %cond.false1518, %cond.true1510
  %96 = phi i8 [ %.pre9, %cond.false1518 ], [ %94, %cond.true1510 ], !dbg !4770
  %cmp1534 = icmp eq i8 %96, 9, !dbg !4770
  br i1 %cmp1534, label %cond.true1536, label %cond.false1585, !dbg !4770

cond.true1536:                                    ; preds = %cond.end1529
  br i1 %cmp1443, label %cond.true1562, label %lor.lhs.false1549, !dbg !4770

lor.lhs.false1549:                                ; preds = %cond.true1536
  %cmp1560 = icmp eq i8 %94, 9, !dbg !4770
  br i1 %cmp1560, label %cond.true1562, label %cond.false1570, !dbg !4770

cond.true1562:                                    ; preds = %lor.lhs.false1549, %cond.true1536
  br label %cond.end1581, !dbg !4770

cond.false1570:                                   ; preds = %lor.lhs.false1549
  %arrayidx1579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1440, !dbg !4770
  %97 = load i8, i8* %arrayidx1579, align 1, !dbg !4770
  %conv1580 = zext i8 %97 to i32, !dbg !4770
  br label %cond.end1581, !dbg !4770

cond.end1581:                                     ; preds = %cond.false1570, %cond.true1562
  %cond1582 = phi i32 [ %bf.clear1439, %cond.true1562 ], [ %conv1580, %cond.false1570 ], !dbg !4770
  br label %cond.end1633, !dbg !4770

cond.false1585:                                   ; preds = %cond.end1529
  br i1 %cmp1443, label %cond.true1611, label %lor.lhs.false1598, !dbg !4770

lor.lhs.false1598:                                ; preds = %cond.false1585
  %cmp1609 = icmp eq i8 %94, 9, !dbg !4770
  br i1 %cmp1609, label %cond.true1611, label %cond.false1619, !dbg !4770

cond.true1611:                                    ; preds = %lor.lhs.false1598, %cond.false1585
  br label %cond.end1630, !dbg !4770

cond.false1619:                                   ; preds = %lor.lhs.false1598
  %arrayidx1628 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1440, !dbg !4770
  %98 = load i8, i8* %arrayidx1628, align 1, !dbg !4770
  %conv1629 = zext i8 %98 to i32, !dbg !4770
  br label %cond.end1630, !dbg !4770

cond.end1630:                                     ; preds = %cond.false1619, %cond.true1611
  %cond1631 = phi i32 [ %bf.clear1439, %cond.true1611 ], [ %conv1629, %cond.false1619 ], !dbg !4770
  br label %cond.end1633, !dbg !4770

cond.end1633:                                     ; preds = %cond.end1630, %cond.end1581
  %cond1634.in = phi i32 [ %cond1582, %cond.end1581 ], [ %cond1631, %cond.end1630 ]
  %cond1634 = add nsw i32 %cond1634.in, -38, !dbg !4770
  %idxprom1635 = zext i32 %cond1634 to i64, !dbg !4770
  %arrayidx1636 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1635, !dbg !4770
  %99 = load %struct.real_format*, %struct.real_format** %arrayidx1636, align 8, !dbg !4770
  %has_nans1637 = getelementptr inbounds %struct.real_format, %struct.real_format* %99, i64 0, i32 11, !dbg !4770
  %100 = load i8, i8* %has_nans1637, align 2, !dbg !4770
  %tobool1639 = icmp eq i8 %100, 0, !dbg !4770
  %101 = load i32, i32* @flag_finite_math_only, align 4, !dbg !4770
  %tobool1641 = icmp ne i32 %101, 0, !dbg !4770
  %or.cond8 = or i1 %tobool1639, %tobool1641, !dbg !4770
  br i1 %or.cond8, label %sw.epilog, label %cleanup1718, !dbg !4770

sw.default:                                       ; preds = %if.end
  %bf.lshr1646 = lshr i32 %bf.load, 16, !dbg !4772
  %bf.clear1647 = and i32 %bf.lshr1646, 255, !dbg !4772
  %idxprom1648 = zext i32 %bf.clear1647 to i64, !dbg !4772
  %arrayidx1649 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1648, !dbg !4772
  %102 = load i8, i8* %arrayidx1649, align 1, !dbg !4772
  %cmp1651 = icmp eq i8 %102, 8, !dbg !4772
  br i1 %cmp1651, label %land.lhs.true1662, label %lor.lhs.false1653, !dbg !4772

lor.lhs.false1653:                                ; preds = %sw.default
  %cmp1660 = icmp eq i8 %102, 9, !dbg !4772
  br i1 %cmp1660, label %land.lhs.true1662, label %sw.epilog, !dbg !4774

land.lhs.true1662:                                ; preds = %lor.lhs.false1653, %sw.default
  %103 = load i32, i32* @flag_trapping_math, align 4, !dbg !4775
  %tobool1663 = icmp eq i32 %103, 0, !dbg !4775
  br i1 %tobool1663, label %sw.epilog, label %cleanup1718, !dbg !4776

sw.epilog:                                        ; preds = %land.lhs.true1662, %sw.bb283, %lor.lhs.false1216, %sw.bb1430, %lor.lhs.false1653, %if.end, %if.end, %if.end, %lor.lhs.false1471, %cond.end1633, %lor.lhs.false1257, %cond.end1419, %lor.lhs.false682, %cond.end844, %lor.lhs.false273
  %idxprom1666 = zext i32 %bf.clear to i64, !dbg !4777
  %arrayidx1667 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom1666, !dbg !4777
  %104 = load i8*, i8** %arrayidx1667, align 8, !dbg !4777
  call void @llvm.dbg.value(metadata i8* %104, metadata !4690, metadata !DIExpression()), !dbg !4703
  %arrayidx1669 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom1666, !dbg !4778
  %105 = load i8, i8* %arrayidx1669, align 1, !dbg !4778
  call void @llvm.dbg.value(metadata i8 %105, metadata !4688, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4703
  %u1680 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !4779
  %fld1681 = bitcast %union.u* %u1680 to [1 x %union.rtunion_def]*, !dbg !4779
  %106 = zext i8 %105 to i64, !dbg !4782
  br label %for.cond, !dbg !4782

for.cond:                                         ; preds = %for.inc1716, %sw.epilog
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc1716 ], [ %106, %sw.epilog ]
  %indvars.iv.next29 = add nsw i64 %indvars.iv28, -1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4688, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4703
  %cmp1672 = icmp sgt i64 %indvars.iv28, 0, !dbg !4784
  br i1 %cmp1672, label %for.body, label %cleanup1718.loopexit, !dbg !4785

for.body:                                         ; preds = %for.cond
  %arrayidx1675 = getelementptr inbounds i8, i8* %104, i64 %indvars.iv.next29, !dbg !4786
  %107 = load i8, i8* %arrayidx1675, align 1, !dbg !4786
  %cmp1677 = icmp eq i8 %107, 101, !dbg !4787
  br i1 %cmp1677, label %if.then1679, label %if.else, !dbg !4788

if.then1679:                                      ; preds = %for.body
  %arrayidx1683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1681, i64 0, i64 %indvars.iv.next29, !dbg !4779
  %rt_rtx1684 = bitcast %union.rtunion_def* %arrayidx1683 to %struct.rtx_def**, !dbg !4779
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1684, align 8, !dbg !4779
  %call1685 = tail call i32 @may_trap_p_1(%struct.rtx_def* %108, i32 %flags) #7, !dbg !4789
  %tobool1686 = icmp eq i32 %call1685, 0, !dbg !4789
  br i1 %tobool1686, label %for.inc1716, label %cleanup1718.loopexit, !dbg !4790

if.else:                                          ; preds = %for.body
  %cmp1692 = icmp eq i8 %107, 69, !dbg !4791
  br i1 %cmp1692, label %for.cond1695.preheader, label %for.inc1716, !dbg !4792

for.cond1695.preheader:                           ; preds = %if.else
  %arrayidx1706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1681, i64 0, i64 %indvars.iv.next29, !dbg !4793
  %rt_rtvec1707 = bitcast %union.rtunion_def* %arrayidx1706 to %struct.rtvec_def**, !dbg !4793
  br label %for.cond1695, !dbg !4797

for.cond1695:                                     ; preds = %for.cond1695.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond1695.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4798
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4696, metadata !DIExpression()), !dbg !4799
  %109 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec1707, align 8, !dbg !4800
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %109, i64 0, i32 0, !dbg !4800
  %110 = load i32, i32* %num_elem, align 8, !dbg !4800
  %111 = sext i32 %110 to i64, !dbg !4801
  %cmp1700 = icmp slt i64 %indvars.iv, %111, !dbg !4801
  br i1 %cmp1700, label %for.body1702, label %cleanup, !dbg !4797

for.body1702:                                     ; preds = %for.cond1695
  %arrayidx1709 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %109, i64 0, i32 1, i64 %indvars.iv, !dbg !4793
  %112 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1709, align 8, !dbg !4793
  %call1710 = tail call i32 @may_trap_p_1(%struct.rtx_def* %112, i32 %flags) #7, !dbg !4802
  %tobool1711 = icmp eq i32 %call1710, 0, !dbg !4802
  br i1 %tobool1711, label %for.inc, label %cleanup, !dbg !4803

for.inc:                                          ; preds = %for.body1702
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 undef, metadata !4696, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4799
  br label %for.cond1695, !dbg !4805, !llvm.loop !4806

cleanup:                                          ; preds = %for.body1702, %for.cond1695
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body1702 ], [ true, %for.cond1695 ]
  br i1 %cleanup.dest.slot.0, label %for.inc1716, label %cleanup1718.loopexit

for.inc1716:                                      ; preds = %if.then1679, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !4688, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4703
  br label %for.cond, !dbg !4808, !llvm.loop !4809

cleanup1718.loopexit:                             ; preds = %cleanup, %for.cond, %if.then1679
  %retval.4.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then1679 ], [ 1, %cleanup ]
  br label %cleanup1718, !dbg !4811

cleanup1718:                                      ; preds = %cleanup1718.loopexit, %land.lhs.true1662, %lor.lhs.false, %cond.end1633, %cond.end1207, %cond.end1419, %cond.end994, %cond.end634, %cond.end844, %cond.end423, %if.end262, %lor.lhs.false273, %cond.end234, %land.lhs.true14, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %entry, %sw.bb282, %if.then261, %cond.end86, %sw.bb6, %sw.bb5, %sw.bb4
  %retval.4 = phi i32 [ 1, %sw.bb282 ], [ %24, %if.then261 ], [ %call95, %cond.end86 ], [ %bf.clear8, %sw.bb6 ], [ 1, %sw.bb5 ], [ %call, %sw.bb4 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 1, %land.lhs.true14 ], [ 0, %lor.lhs.false ], [ 1, %cond.end234 ], [ 1, %lor.lhs.false273 ], [ 1, %if.end262 ], [ 1, %cond.end423 ], [ 1, %cond.end844 ], [ 1, %cond.end634 ], [ 1, %cond.end994 ], [ 1, %cond.end1419 ], [ 1, %cond.end1207 ], [ 1, %cond.end1633 ], [ 1, %land.lhs.true1662 ], [ %retval.4.ph, %cleanup1718.loopexit ], !dbg !4703
  ret i32 %retval.4, !dbg !4811
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @may_trap_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4812 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4814, metadata !DIExpression()), !dbg !4815
  %call = tail call i32 @may_trap_p_1(%struct.rtx_def* %x, i32 0) #7, !dbg !4816
  ret i32 %call, !dbg !4817
}

; Function Attrs: nounwind uwtable
define dso_local i32 @may_trap_or_fault_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4818 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4820, metadata !DIExpression()), !dbg !4821
  %call = tail call i32 @may_trap_p_1(%struct.rtx_def* %x, i32 1) #7, !dbg !4822
  ret i32 %call, !dbg !4823
}

; Function Attrs: nounwind uwtable
define dso_local i32 @inequality_comparisons_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4824 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4826, metadata !DIExpression()), !dbg !4838
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4839
  %bf.load = load i32, i32* %0, align 8, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !4830, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4838
  %trunc = trunc i32 %bf.load to i16, !dbg !4840
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %cleanup42
    i16 38, label %cleanup42
    i16 36, label %cleanup42
    i16 46, label %cleanup42
    i16 30, label %cleanup42
    i16 32, label %cleanup42
    i16 31, label %cleanup42
    i16 33, label %cleanup42
    i16 35, label %cleanup42
    i16 44, label %cleanup42
    i16 45, label %cleanup42
    i16 85, label %sw.bb1
    i16 89, label %sw.bb1
    i16 83, label %sw.bb1
    i16 87, label %sw.bb1
    i16 84, label %sw.bb1
    i16 88, label %sw.bb1
    i16 82, label %sw.bb1
    i16 86, label %sw.bb1
  ], !dbg !4840

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %cleanup42, !dbg !4841

sw.epilog:                                        ; preds = %entry
  %bf.clear = and i32 %bf.load, 65535, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4830, metadata !DIExpression()), !dbg !4838
  %idxprom = zext i32 %bf.clear to i64, !dbg !4843
  %arrayidx = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4843
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4843
  call void @llvm.dbg.value(metadata i8 %1, metadata !4828, metadata !DIExpression()), !dbg !4838
  %arrayidx3 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4844
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %2, metadata !4827, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata i32 0, metadata !4829, metadata !DIExpression()), !dbg !4838
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !4845
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4845
  %wide.trip.count = zext i8 %1 to i64, !dbg !4848
  br label %for.cond, !dbg !4849

for.cond:                                         ; preds = %for.inc40, %sw.epilog
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc40 ], [ 0, %sw.epilog ], !dbg !4850
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4829, metadata !DIExpression()), !dbg !4838
  %exitcond = icmp eq i64 %indvars.iv1, %wide.trip.count, !dbg !4848
  br i1 %exitcond, label %cleanup42.loopexit, label %for.body, !dbg !4851

for.body:                                         ; preds = %for.cond
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv1, !dbg !4852
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !4852
  %cmp8 = icmp eq i8 %3, 101, !dbg !4853
  br i1 %cmp8, label %if.then, label %if.else, !dbg !4854

if.then:                                          ; preds = %for.body
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv1, !dbg !4845
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4845
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4845
  %call = tail call i32 @inequality_comparisons_p(%struct.rtx_def* %4) #7, !dbg !4855
  %tobool = icmp eq i32 %call, 0, !dbg !4855
  br i1 %tobool, label %for.inc40, label %cleanup42.loopexit, !dbg !4856

if.else:                                          ; preds = %for.body
  %cmp16 = icmp eq i8 %3, 69, !dbg !4857
  br i1 %cmp16, label %if.then18, label %for.inc40, !dbg !4858

if.then18:                                        ; preds = %if.else
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %indvars.iv1, !dbg !4859
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !4859
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4859
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 0, !dbg !4859
  %6 = load i32, i32* %num_elem, align 8, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %6, metadata !4831, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4861
  %7 = sext i32 %6 to i64, !dbg !4862
  br label %for.cond23, !dbg !4862

for.cond23:                                       ; preds = %for.inc, %if.then18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %7, %if.then18 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4863
  call void @llvm.dbg.value(metadata i32 undef, metadata !4831, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4861
  %cmp24 = icmp sgt i64 %indvars.iv, 0, !dbg !4864
  br i1 %cmp24, label %for.body26, label %cleanup, !dbg !4866

for.body26:                                       ; preds = %for.cond23
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4867
  %arrayidx33 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4867
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8, !dbg !4867
  %call34 = tail call i32 @inequality_comparisons_p(%struct.rtx_def* %9) #7, !dbg !4869
  %tobool35 = icmp eq i32 %call34, 0, !dbg !4869
  br i1 %tobool35, label %for.inc, label %cleanup, !dbg !4870

for.inc:                                          ; preds = %for.body26
  call void @llvm.dbg.value(metadata i32 undef, metadata !4831, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4861
  br label %for.cond23, !dbg !4871, !llvm.loop !4872

cleanup:                                          ; preds = %for.body26, %for.cond23
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body26 ], [ true, %for.cond23 ]
  br i1 %cleanup.dest.slot.0, label %for.inc40, label %cleanup42.loopexit

for.inc40:                                        ; preds = %if.then, %cleanup, %if.else
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !4874
  call void @llvm.dbg.value(metadata i32 undef, metadata !4829, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4838
  br label %for.cond, !dbg !4875, !llvm.loop !4876

cleanup42.loopexit:                               ; preds = %for.cond, %cleanup, %if.then
  %retval.4.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then ], [ 1, %cleanup ]
  br label %cleanup42, !dbg !4878

cleanup42:                                        ; preds = %cleanup42.loopexit, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.4 = phi i32 [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ %retval.4.ph, %cleanup42.loopexit ], !dbg !4838
  ret i32 %retval.4, !dbg !4878
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @replace_rtx(%struct.rtx_def* %x, %struct.rtx_def* %from, %struct.rtx_def* %to) local_unnamed_addr #4 !dbg !4879 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4883, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !4884, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !4885, metadata !DIExpression()), !dbg !4895
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !4896
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !4898

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4899
  %bf.load = load i32, i32* %0, align 8, !dbg !4899
  %bf.clear = and i32 %bf.load, 65535, !dbg !4899
  %cmp1 = icmp eq i32 %bf.clear, 32, !dbg !4900
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !4901

if.end:                                           ; preds = %entry, %land.lhs.true
  %cmp2 = icmp eq %struct.rtx_def* %x, %from, !dbg !4902
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !4904

if.end4:                                          ; preds = %if.end
  br i1 %cmp, label %cleanup, label %if.end7, !dbg !4905

if.end7:                                          ; preds = %if.end4
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4906
  %bf.load8 = load i32, i32* %1, align 8, !dbg !4906
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4906
  %cmp10 = icmp eq i32 %bf.clear9, 39, !dbg !4907
  br i1 %cmp10, label %if.then11, label %if.else34, !dbg !4908

if.then11:                                        ; preds = %if.end7
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4909
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4909
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4909
  %call = tail call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %2, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !4910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4889, metadata !DIExpression()), !dbg !4911
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4912
  %bf.load12 = load i32, i32* %3, align 8, !dbg !4912
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4912
  %cmp14 = icmp eq i32 %bf.clear13, 30, !dbg !4912
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !4914

if.then15:                                        ; preds = %if.then11
  %bf.load16 = load i32, i32* %1, align 8, !dbg !4915
  %bf.lshr = lshr i32 %bf.load16, 16, !dbg !4915
  %bf.clear17 = and i32 %bf.lshr, 255, !dbg !4915
  %4 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4917
  %5 = load i32*, i32** %4, align 8, !dbg !4917
  %bf.load22 = load i32, i32* %5, align 8, !dbg !4917
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !4917
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !4917
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4918
  %rt_uint = bitcast %union.rtunion_def* %6 to i32*, !dbg !4918
  %7 = load i32, i32* %rt_uint, align 8, !dbg !4918
  %call28 = tail call %struct.rtx_def* @simplify_subreg(i32 %bf.clear17, %struct.rtx_def* %call, i32 %bf.clear24, i32 %7) #6, !dbg !4919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !4883, metadata !DIExpression()), !dbg !4895
  %tobool = icmp eq %struct.rtx_def* %call28, null, !dbg !4920
  br i1 %tobool, label %cond.true, label %cleanup, !dbg !4920

cond.true:                                        ; preds = %if.then15
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4920
  br label %cleanup, !dbg !4920

if.else:                                          ; preds = %if.then11
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx, align 8, !dbg !4921
  br label %cleanup

if.else34:                                        ; preds = %if.end7
  %cmp37 = icmp eq i32 %bf.clear9, 99, !dbg !4922
  br i1 %cmp37, label %if.then38, label %if.end72, !dbg !4923

if.then38:                                        ; preds = %if.else34
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4924
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !4924
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !4924
  %call44 = tail call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %8, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !4925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !4892, metadata !DIExpression()), !dbg !4926
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call44, i64 0, i32 0, !dbg !4927
  %bf.load45 = load i32, i32* %9, align 8, !dbg !4927
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !4927
  %cmp47 = icmp eq i32 %bf.clear46, 30, !dbg !4927
  br i1 %cmp47, label %if.then48, label %if.else65, !dbg !4929

if.then48:                                        ; preds = %if.then38
  %bf.load49 = load i32, i32* %1, align 8, !dbg !4930
  %bf.lshr50 = lshr i32 %bf.load49, 16, !dbg !4930
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !4930
  %10 = bitcast %union.rtunion_def* %arrayidx42 to i32**, !dbg !4932
  %11 = load i32*, i32** %10, align 8, !dbg !4932
  %bf.load56 = load i32, i32* %11, align 8, !dbg !4932
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !4932
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !4932
  %call59 = tail call %struct.rtx_def* @simplify_unary_operation(i32 99, i32 %bf.clear51, %struct.rtx_def* %call44, i32 %bf.clear58) #6, !dbg !4933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !4883, metadata !DIExpression()), !dbg !4895
  %tobool60 = icmp eq %struct.rtx_def* %call59, null, !dbg !4934
  br i1 %tobool60, label %cond.true61, label %cleanup, !dbg !4934

cond.true61:                                      ; preds = %if.then48
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4934
  br label %cleanup, !dbg !4934

if.else65:                                        ; preds = %if.then38
  store %struct.rtx_def* %call44, %struct.rtx_def** %rt_rtx43, align 8, !dbg !4935
  br label %cleanup

if.end72:                                         ; preds = %if.else34
  %idxprom = zext i32 %bf.clear9 to i64, !dbg !4936
  %arrayidx75 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4936
  %12 = load i8*, i8** %arrayidx75, align 8, !dbg !4936
  call void @llvm.dbg.value(metadata i8* %12, metadata !4888, metadata !DIExpression()), !dbg !4895
  %arrayidx79 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !4937
  %13 = load i8, i8* %arrayidx79, align 1, !dbg !4937
  call void @llvm.dbg.value(metadata i8 %13, metadata !4886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !4939
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !4939
  %14 = zext i8 %13 to i64, !dbg !4945
  br label %for.cond, !dbg !4945

for.cond:                                         ; preds = %for.inc133, %if.end72
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc133 ], [ %14, %if.end72 ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !4946
  call void @llvm.dbg.value(metadata i32 undef, metadata !4886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %cmp80 = icmp sgt i64 %indvars.iv1, 0, !dbg !4947
  br i1 %cmp80, label %for.body, label %cleanup.loopexit, !dbg !4948

for.body:                                         ; preds = %for.cond
  %arrayidx83 = getelementptr inbounds i8, i8* %12, i64 %indvars.iv.next2, !dbg !4949
  %15 = load i8, i8* %arrayidx83, align 1, !dbg !4949
  %cmp85 = icmp eq i8 %15, 101, !dbg !4950
  br i1 %cmp85, label %if.then87, label %if.else99, !dbg !4951

if.then87:                                        ; preds = %for.body
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 %indvars.iv.next2, !dbg !4952
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !4952
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !4952
  %call93 = tail call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %16, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !4953
  store %struct.rtx_def* %call93, %struct.rtx_def** %rt_rtx92, align 8, !dbg !4954
  br label %for.inc133, !dbg !4955

if.else99:                                        ; preds = %for.body
  %cmp103 = icmp eq i8 %15, 69, !dbg !4956
  br i1 %cmp103, label %if.then105, label %for.inc133, !dbg !4957

if.then105:                                       ; preds = %if.else99
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 %indvars.iv.next2, !dbg !4958
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtvec_def**, !dbg !4958
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4958
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 0, !dbg !4958
  %18 = load i32, i32* %num_elem, align 8, !dbg !4958
  call void @llvm.dbg.value(metadata i32 %18, metadata !4887, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %19 = sext i32 %18 to i64, !dbg !4959
  br label %for.cond111, !dbg !4959

for.cond111:                                      ; preds = %for.body114, %if.then105
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body114 ], [ %19, %if.then105 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4887, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %cmp112 = icmp sgt i64 %indvars.iv, 0, !dbg !4960
  br i1 %cmp112, label %for.body114, label %for.inc133.loopexit, !dbg !4962

for.body114:                                      ; preds = %for.cond111
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4963
  %arrayidx121 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4963
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx121, align 8, !dbg !4963
  %call122 = tail call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %21, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !4964
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4965
  %arrayidx130 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4965
  store %struct.rtx_def* %call122, %struct.rtx_def** %arrayidx130, align 8, !dbg !4966
  call void @llvm.dbg.value(metadata i32 undef, metadata !4887, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  br label %for.cond111, !dbg !4967, !llvm.loop !4968

for.inc133.loopexit:                              ; preds = %for.cond111
  br label %for.inc133, !dbg !4970

for.inc133:                                       ; preds = %for.inc133.loopexit, %if.then87, %if.else99
  call void @llvm.dbg.value(metadata i32 undef, metadata !4886, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  br label %for.cond, !dbg !4970, !llvm.loop !4971

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4973

cleanup:                                          ; preds = %cleanup.loopexit, %if.then15, %if.then48, %if.else65, %cond.true61, %if.else, %cond.true, %if.end4, %if.end, %land.lhs.true
  %retval.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %to, %if.end ], [ null, %if.end4 ], [ %x, %if.else ], [ %call28, %if.then15 ], [ null, %cond.true ], [ %x, %if.else65 ], [ %call59, %if.then48 ], [ null, %cond.true61 ], [ %x, %cleanup.loopexit ], !dbg !4895
  ret %struct.rtx_def* %retval.0, !dbg !4973
}

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @replace_label(%struct.rtx_def** %x, i8* %data) #4 !dbg !4974 {
entry:
  %new_c = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !4978, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.value(metadata i8* %data, metadata !4979, metadata !DIExpression()), !dbg !4992
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4980, metadata !DIExpression()), !dbg !4992
  %r1 = bitcast i8* %data to %struct.rtx_def**, !dbg !4994
  %1 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !4994
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4981, metadata !DIExpression()), !dbg !4992
  %r2 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !4995
  %2 = bitcast i8* %r2 to %struct.rtx_def**, !dbg !4995
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !4995
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4982, metadata !DIExpression()), !dbg !4992
  %4 = getelementptr inbounds i8, i8* %data, i64 16, !dbg !4996
  %5 = load i8, i8* %4, align 8, !dbg !4996
  call void @llvm.dbg.value(metadata i8 %5, metadata !4983, metadata !DIExpression()), !dbg !4992
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !4997
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4999

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5000
  %bf.load = load i32, i32* %6, align 8, !dbg !5000
  %bf.clear = and i32 %bf.load, 65535, !dbg !5000
  %cmp2 = icmp eq i32 %bf.clear, 45, !dbg !5001
  br i1 %cmp2, label %land.lhs.true, label %if.end17, !dbg !5002

land.lhs.true:                                    ; preds = %if.end
  %bf.clear4 = and i32 %bf.load, 67108864, !dbg !5003
  %tobool = icmp eq i32 %bf.clear4, 0, !dbg !5003
  br i1 %tobool, label %if.end17, label %if.then5, !dbg !5004

if.then5:                                         ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* nonnull %0) #6, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4984, metadata !DIExpression()), !dbg !5006
  %call6 = tail call i32 @rtx_referenced_p(%struct.rtx_def* %1, %struct.rtx_def* %call) #7, !dbg !5007
  %tobool7 = icmp eq i32 %call6, 0, !dbg !5007
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !5008

if.then8:                                         ; preds = %if.then5
  %7 = bitcast %struct.rtx_def** %new_c to i8*, !dbg !5009
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5009
  call void @llvm.dbg.value(metadata i8* %data, metadata !4991, metadata !DIExpression()), !dbg !5010
  %call9 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call) #6, !dbg !5011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !4987, metadata !DIExpression()), !dbg !5010
  store %struct.rtx_def* %call9, %struct.rtx_def** %new_c, align 8, !dbg !5012
  store i8 0, i8* %4, align 8, !dbg !5013
  call void @llvm.dbg.value(metadata %struct.rtx_def** %new_c, metadata !4987, metadata !DIExpression(DW_OP_deref)), !dbg !5010
  %call11 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %new_c, i32 (%struct.rtx_def**, i8*)* nonnull @replace_label, i8* %data) #7, !dbg !5014
  store i8 %5, i8* %4, align 8, !dbg !5015
  %call13 = call i32 @get_pool_mode(%struct.rtx_def* nonnull %0) #6, !dbg !5016
  %8 = load %struct.rtx_def*, %struct.rtx_def** %new_c, align 8, !dbg !5016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4987, metadata !DIExpression()), !dbg !5010
  %call14 = call %struct.rtx_def* @force_const_mem(i32 %call13, %struct.rtx_def* %8) #6, !dbg !5016
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5016
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5016
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !4990, metadata !DIExpression()), !dbg !5010
  %call15 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* nonnull %0, %struct.rtx_def* nonnull %0, %struct.rtx_def* %9) #7, !dbg !5017
  store %struct.rtx_def* %call15, %struct.rtx_def** %x, align 8, !dbg !5018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5019
  br label %cleanup, !dbg !5020

if.end17:                                         ; preds = %land.lhs.true, %if.end
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !5021
  br i1 %cmp20, label %land.lhs.true21, label %if.end32, !dbg !5023

land.lhs.true21:                                  ; preds = %if.end17
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !5024
  %arrayidx24 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 1, !dbg !5024
  %rt_rtx25 = bitcast %struct.object_block** %arrayidx24 to %struct.rtx_def**, !dbg !5024
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !5024
  %cmp26 = icmp eq %struct.rtx_def* %10, %1, !dbg !5025
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !5026

if.then27:                                        ; preds = %land.lhs.true21
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx25, align 8, !dbg !5027
  br label %if.end32, !dbg !5028

if.end32:                                         ; preds = %if.then27, %land.lhs.true21, %if.end17
  %cmp35 = icmp eq i32 %bf.clear, 44, !dbg !5029
  br i1 %cmp35, label %land.lhs.true39, label %lor.lhs.false, !dbg !5031

lor.lhs.false:                                    ; preds = %if.end32
  %cmp38 = icmp eq i32 %bf.clear, 4, !dbg !5032
  br i1 %cmp38, label %land.lhs.true39, label %cleanup, !dbg !5033

land.lhs.true39:                                  ; preds = %lor.lhs.false, %if.end32
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5034
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !5034
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5034
  %cmp44 = icmp eq %struct.rtx_def* %11, %1, !dbg !5035
  br i1 %cmp44, label %if.then45, label %cleanup, !dbg !5036

if.then45:                                        ; preds = %land.lhs.true39
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5037
  %tobool50 = icmp eq i8 %5, 0, !dbg !5039
  br i1 %tobool50, label %cleanup, label %if.then51, !dbg !5041

if.then51:                                        ; preds = %if.then45
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 2, !dbg !5042
  %rt_int = bitcast i64* %arrayidx54 to i32*, !dbg !5042
  %12 = load i32, i32* %rt_int, align 8, !dbg !5044
  %inc = add nsw i32 %12, 1, !dbg !5044
  store i32 %inc, i32* %rt_int, align 8, !dbg !5044
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 2, !dbg !5045
  %rt_int58 = bitcast i64* %arrayidx57 to i32*, !dbg !5045
  %13 = load i32, i32* %rt_int58, align 8, !dbg !5046
  %dec = add nsw i32 %13, -1, !dbg !5046
  store i32 %dec, i32* %rt_int58, align 8, !dbg !5046
  br label %cleanup, !dbg !5047

cleanup:                                          ; preds = %if.then5, %if.then45, %lor.lhs.false, %land.lhs.true39, %if.then51, %if.then8, %entry
  ret i32 0, !dbg !5048
}

declare dso_local %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @rtx_referenced_p(%struct.rtx_def* %x, %struct.rtx_def* %body) local_unnamed_addr #4 !dbg !5049 {
entry:
  %body.addr = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5053, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %body, metadata !5054, metadata !DIExpression()), !dbg !5055
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  %0 = bitcast %struct.rtx_def* %x to i8*, !dbg !5056
  call void @llvm.dbg.value(metadata %struct.rtx_def** %body.addr, metadata !5054, metadata !DIExpression(DW_OP_deref)), !dbg !5055
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %body.addr, i32 (%struct.rtx_def**, i8*)* nonnull @rtx_referenced_p_1, i8* %0) #7, !dbg !5057
  ret i32 %call, !dbg !5058
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @for_each_rtx(%struct.rtx_def** %x, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) local_unnamed_addr #4 !dbg !5059 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !5065, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def**, i8*)* %f, metadata !5066, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %data, metadata !5067, metadata !DIExpression()), !dbg !5070
  %call = tail call i32 %f(%struct.rtx_def** %x, i8* %data) #6, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %call, metadata !5068, metadata !DIExpression()), !dbg !5070
  switch i32 %call, label %if.then2 [
    i32 -1, label %cleanup
    i32 0, label %if.end3
  ], !dbg !5072

if.then2:                                         ; preds = %entry
  br label %cleanup, !dbg !5073

if.end3:                                          ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5076
  %cmp4 = icmp eq %struct.rtx_def* %0, null, !dbg !5078
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !5079

if.end6:                                          ; preds = %if.end3
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5079
  %bf.load = load i32, i32* %1, align 8, !dbg !5080
  %bf.clear = and i32 %bf.load, 65535, !dbg !5080
  %idxprom = zext i32 %bf.clear to i64, !dbg !5081
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom, !dbg !5081
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5081
  call void @llvm.dbg.value(metadata i32 %2, metadata !5069, metadata !DIExpression()), !dbg !5070
  %cmp7 = icmp slt i32 %2, 0, !dbg !5082
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !5084

if.end9:                                          ; preds = %if.end6
  %call10 = tail call fastcc i32 @for_each_rtx_1(%struct.rtx_def* nonnull %0, i32 %2, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) #7, !dbg !5085
  br label %cleanup, !dbg !5086

cleanup:                                          ; preds = %if.end6, %if.end3, %entry, %if.end9, %if.then2
  %retval.0 = phi i32 [ %call, %if.then2 ], [ %call10, %if.end9 ], [ 0, %entry ], [ 0, %if.end3 ], [ 0, %if.end6 ], !dbg !5070
  ret i32 %retval.0, !dbg !5087
}

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @rtx_referenced_p_1(%struct.rtx_def** %body, i8* %x) #4 !dbg !5088 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %body, metadata !5090, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8* %x, metadata !5091, metadata !DIExpression()), !dbg !5093
  %0 = bitcast i8* %x to %struct.rtx_def*, !dbg !5094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5092, metadata !DIExpression()), !dbg !5093
  %1 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !5095
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !5097
  br i1 %cmp, label %if.then, label %if.end, !dbg !5098

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i8* %x, null, !dbg !5099
  %conv = zext i1 %cmp1 to i32, !dbg !5099
  br label %cleanup, !dbg !5100

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5098
  %bf.load = load i32, i32* %2, align 8, !dbg !5101
  %bf.clear = and i32 %bf.load, 65535, !dbg !5101
  %cmp2 = icmp eq i32 %bf.clear, 44, !dbg !5103
  br i1 %cmp2, label %land.lhs.true, label %if.end11, !dbg !5104

land.lhs.true:                                    ; preds = %if.end
  %3 = bitcast i8* %x to i32*, !dbg !5105
  %bf.load4 = load i32, i32* %3, align 8, !dbg !5105
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5105
  %cmp6 = icmp eq i32 %bf.clear5, 12, !dbg !5105
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !5106

if.then8:                                         ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5107
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5107
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5107
  %cmp9 = icmp eq %struct.rtx_def* %4, %0, !dbg !5108
  %conv10 = zext i1 %cmp9 to i32, !dbg !5108
  br label %cleanup, !dbg !5109

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %cmp14 = icmp eq i32 %bf.clear, 45, !dbg !5110
  br i1 %cmp14, label %land.lhs.true16, label %if.end21, !dbg !5112

land.lhs.true16:                                  ; preds = %if.end11
  %bf.clear18 = and i32 %bf.load, 67108864, !dbg !5113
  %tobool = icmp eq i32 %bf.clear18, 0, !dbg !5113
  br i1 %tobool, label %if.end21, label %if.then19, !dbg !5114

if.then19:                                        ; preds = %land.lhs.true16
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* nonnull %1) #6, !dbg !5115
  %call20 = tail call i32 @rtx_referenced_p(%struct.rtx_def* %0, %struct.rtx_def* %call) #7, !dbg !5116
  br label %cleanup, !dbg !5117

if.end21:                                         ; preds = %land.lhs.true16, %if.end11
  %call22 = tail call i32 @rtx_equal_p(%struct.rtx_def* nonnull %1, %struct.rtx_def* %0) #6, !dbg !5118
  br label %cleanup, !dbg !5119

cleanup:                                          ; preds = %if.end21, %if.then19, %if.then8, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv10, %if.then8 ], [ %call20, %if.then19 ], [ %call22, %if.end21 ], !dbg !5093
  ret i32 %retval.0, !dbg !5120
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tablejump_p(%struct.rtx_def* %insn, %struct.rtx_def** %labelp, %struct.rtx_def** %tablep) local_unnamed_addr #4 !dbg !5121 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5125, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %struct.rtx_def** %labelp, metadata !5126, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tablep, metadata !5127, metadata !DIExpression()), !dbg !5130
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5131
  %bf.load = load i32, i32* %0, align 8, !dbg !5131
  %bf.clear = and i32 %bf.load, 65535, !dbg !5131
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5131
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !5133

land.lhs.true:                                    ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5134
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !5134
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !5134
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5128, metadata !DIExpression()), !dbg !5130
  %cmp1 = icmp eq %struct.rtx_def* %1, null, !dbg !5135
  br i1 %cmp1, label %cleanup, label %land.lhs.true2, !dbg !5136

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* nonnull %1) #6, !dbg !5137
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5129, metadata !DIExpression()), !dbg !5130
  %cmp3 = icmp eq %struct.rtx_def* %call, null, !dbg !5138
  br i1 %cmp3, label %cleanup, label %land.lhs.true4, !dbg !5139

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5140
  %bf.load5 = load i32, i32* %2, align 8, !dbg !5140
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5140
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !5140
  br i1 %cmp7, label %land.lhs.true8, label %cleanup, !dbg !5140

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !5140
  %3 = getelementptr inbounds %union.u, %union.u* %u9, i64 1, i32 0, i32 0, i64 0, !dbg !5140
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !5140
  %5 = load i32*, i32** %4, align 8, !dbg !5140
  %bf.load13 = load i32, i32* %5, align 8, !dbg !5140
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5140
  %cmp15 = icmp eq i32 %bf.clear14, 20, !dbg !5140
  br i1 %cmp15, label %if.then, label %lor.lhs.false, !dbg !5140

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %cmp22 = icmp eq i32 %bf.clear14, 21, !dbg !5140
  br i1 %cmp22, label %if.then, label %cleanup, !dbg !5141

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true8
  %tobool = icmp eq %struct.rtx_def** %labelp, null, !dbg !5142
  br i1 %tobool, label %if.end, label %if.then23, !dbg !5145

if.then23:                                        ; preds = %if.then
  store %struct.rtx_def* %1, %struct.rtx_def** %labelp, align 8, !dbg !5146
  br label %if.end, !dbg !5147

if.end:                                           ; preds = %if.then, %if.then23
  %tobool24 = icmp eq %struct.rtx_def** %tablep, null, !dbg !5148
  br i1 %tobool24, label %cleanup, label %if.then25, !dbg !5150

if.then25:                                        ; preds = %if.end
  store %struct.rtx_def* %call, %struct.rtx_def** %tablep, align 8, !dbg !5151
  br label %cleanup, !dbg !5152

cleanup:                                          ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry, %land.lhs.true4, %lor.lhs.false, %if.then25
  %retval.0 = phi i8 [ 1, %if.then25 ], [ 1, %if.end ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true4 ], [ 0, %land.lhs.true2 ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5130
  ret i8 %retval.0, !dbg !5153
}

declare dso_local %struct.rtx_def* @next_active_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @computed_jump_p(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !5154 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5156, metadata !DIExpression()), !dbg !5165
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5166
  %bf.load = load i32, i32* %0, align 8, !dbg !5166
  %bf.clear = and i32 %bf.load, 65535, !dbg !5166
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5166
  br i1 %cmp, label %if.then, label %if.end109, !dbg !5167

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5168
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5168
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !5168
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5168
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5158, metadata !DIExpression()), !dbg !5169
  %arrayidx3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !5170
  %rt_rtx4 = bitcast %struct.object_block** %arrayidx3 to %struct.rtx_def**, !dbg !5170
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5170
  %cmp5 = icmp eq %struct.rtx_def* %3, null, !dbg !5172
  br i1 %cmp5, label %if.end, label %cleanup106, !dbg !5173

if.end:                                           ; preds = %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !5174
  %bf.load7 = load i32, i32* %4, align 8, !dbg !5174
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5174
  %cmp9 = icmp eq i32 %bf.clear8, 15, !dbg !5175
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5176

if.then10:                                        ; preds = %if.end
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5177
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !5177
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5177
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 0, !dbg !5177
  %6 = load i32, i32* %num_elem, align 8, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %6, metadata !5161, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 0, metadata !5164, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 %6, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  %7 = sext i32 %6 to i64, !dbg !5179
  br label %for.cond, !dbg !5179

for.cond:                                         ; preds = %for.inc, %if.then10
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc ], [ %7, %if.then10 ]
  %has_use_labelref.0 = phi i32 [ %has_use_labelref.1, %for.inc ], [ 0, %if.then10 ], !dbg !5178
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %has_use_labelref.0, metadata !5164, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 undef, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  %cmp14 = icmp sgt i64 %indvars.iv2, 0, !dbg !5182
  br i1 %cmp14, label %for.body, label %for.end, !dbg !5184

for.body:                                         ; preds = %for.cond
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.next3, !dbg !5185
  %8 = bitcast %struct.rtx_def** %arrayidx19 to i32**, !dbg !5185
  %9 = load i32*, i32** %8, align 8, !dbg !5185
  %bf.load20 = load i32, i32* %9, align 8, !dbg !5185
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5185
  %cmp22 = icmp eq i32 %bf.clear21, 24, !dbg !5187
  br i1 %cmp22, label %land.lhs.true, label %for.inc, !dbg !5188

land.lhs.true:                                    ; preds = %for.body
  %arrayidx29 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv.next3, !dbg !5189
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8, !dbg !5189
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5189
  %11 = bitcast %union.rtunion_def* %arrayidx32 to i32**, !dbg !5189
  %12 = load i32*, i32** %11, align 8, !dbg !5189
  %bf.load34 = load i32, i32* %12, align 8, !dbg !5189
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5189
  %cmp36 = icmp eq i32 %bf.clear35, 44, !dbg !5190
  %spec.select = select i1 %cmp36, i32 1, i32 %has_use_labelref.0, !dbg !5191
  br label %for.inc, !dbg !5191

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %has_use_labelref.1 = phi i32 [ %has_use_labelref.0, %for.body ], [ %spec.select, %land.lhs.true ], !dbg !5178
  call void @llvm.dbg.value(metadata i32 %has_use_labelref.1, metadata !5164, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 undef, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  br label %for.cond, !dbg !5192, !llvm.loop !5193

for.end:                                          ; preds = %for.cond
  %has_use_labelref.0.lcssa = phi i32 [ %has_use_labelref.0, %for.cond ], !dbg !5178
  call void @llvm.dbg.value(metadata i32 %has_use_labelref.0.lcssa, metadata !5164, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 %has_use_labelref.0.lcssa, metadata !5164, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.value(metadata i32 %has_use_labelref.0.lcssa, metadata !5164, metadata !DIExpression()), !dbg !5178
  %tobool = icmp eq i32 %has_use_labelref.0.lcssa, 0, !dbg !5195
  br i1 %tobool, label %if.then39, label %cleanup, !dbg !5197

if.then39:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 %6, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  %13 = sext i32 %6 to i64, !dbg !5198
  br label %for.cond41, !dbg !5198

for.cond41:                                       ; preds = %for.inc82, %if.then39
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc82 ], [ %13, %if.then39 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5200
  call void @llvm.dbg.value(metadata i32 undef, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  %cmp42 = icmp sgt i64 %indvars.iv, 0, !dbg !5201
  br i1 %cmp42, label %for.body43, label %cleanup.loopexit, !dbg !5203

for.body43:                                       ; preds = %for.cond41
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5204
  %arrayidx50 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv.next, !dbg !5204
  %15 = bitcast %struct.rtx_def** %arrayidx50 to i32**, !dbg !5204
  %16 = load i32*, i32** %15, align 8, !dbg !5204
  %bf.load51 = load i32, i32* %16, align 8, !dbg !5204
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !5204
  %cmp53 = icmp eq i32 %bf.clear52, 23, !dbg !5206
  br i1 %cmp53, label %land.lhs.true54, label %for.inc82, !dbg !5207

land.lhs.true54:                                  ; preds = %for.body43
  %arrayidx64 = getelementptr inbounds i32, i32* %16, i64 2, !dbg !5208
  %rt_rtx65 = bitcast i32* %arrayidx64 to %struct.rtx_def**, !dbg !5208
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !5208
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5209
  %cmp66 = icmp eq %struct.rtx_def* %17, %18, !dbg !5210
  br i1 %cmp66, label %land.lhs.true67, label %for.inc82, !dbg !5211

land.lhs.true67:                                  ; preds = %land.lhs.true54
  %19 = getelementptr inbounds i32, i32* %16, i64 4, !dbg !5212
  %rt_rtx78 = bitcast i32* %19 to %struct.rtx_def**, !dbg !5212
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !5212
  %call = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %20) #7, !dbg !5213
  %tobool79 = icmp eq i32 %call, 0, !dbg !5213
  br i1 %tobool79, label %for.inc82, label %cleanup.loopexit, !dbg !5214

for.inc82:                                        ; preds = %land.lhs.true67, %for.body43, %land.lhs.true54
  call void @llvm.dbg.value(metadata i32 undef, metadata !5157, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5165
  br label %for.cond41, !dbg !5215, !llvm.loop !5216

cleanup.loopexit:                                 ; preds = %for.cond41, %land.lhs.true67
  %cleanup.dest.slot.0.ph = phi i32 [ 0, %for.cond41 ], [ 1, %land.lhs.true67 ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %cleanup.dest.slot.0 = phi i32 [ 0, %for.end ], [ %cleanup.dest.slot.0.ph, %cleanup.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end105, label %cleanup106

if.else:                                          ; preds = %if.end
  %cmp89 = icmp eq i32 %bf.clear8, 23, !dbg !5218
  br i1 %cmp89, label %land.lhs.true90, label %if.end105, !dbg !5220

land.lhs.true90:                                  ; preds = %if.else
  %arrayidx93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5221
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !5221
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !5221
  %22 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5222
  %cmp95 = icmp eq %struct.rtx_def* %21, %22, !dbg !5223
  br i1 %cmp95, label %land.lhs.true96, label %if.end105, !dbg !5224

land.lhs.true96:                                  ; preds = %land.lhs.true90
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5225
  %rt_rtx100 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5225
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !5225
  %call101 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %24) #7, !dbg !5226
  %tobool102 = icmp eq i32 %call101, 0, !dbg !5226
  br i1 %tobool102, label %if.end105, label %cleanup106, !dbg !5227

if.end105:                                        ; preds = %land.lhs.true96, %if.else, %land.lhs.true90, %cleanup
  br label %cleanup106, !dbg !5228

cleanup106:                                       ; preds = %land.lhs.true96, %if.then, %cleanup, %if.end105
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end105 ], [ 1, %if.then ], [ 1, %land.lhs.true96 ]
  %retval.2 = phi i32 [ 1, %cleanup ], [ 1, %if.end105 ], [ 0, %if.then ], [ 1, %land.lhs.true96 ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end109, label %cleanup110

if.end109:                                        ; preds = %cleanup106, %entry
  br label %cleanup110, !dbg !5229

cleanup110:                                       ; preds = %cleanup106, %if.end109
  %retval.3 = phi i32 [ %retval.2, %cleanup106 ], [ 0, %if.end109 ], !dbg !5165
  ret i32 %retval.3, !dbg !5230
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @computed_jump_p_1(%struct.rtx_def* %x) unnamed_addr #4 !dbg !5231 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5233, metadata !DIExpression()), !dbg !5238
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5239
  %bf.load = load i32, i32* %0, align 8, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !5234, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !5238
  %trunc = trunc i32 %bf.load to i16, !dbg !5240
  switch i16 %trunc, label %sw.epilog [
    i16 44, label %cleanup
    i16 36, label %cleanup
    i16 35, label %sw.bb1
    i16 30, label %sw.bb1
    i16 32, label %sw.bb1
    i16 31, label %sw.bb1
    i16 33, label %sw.bb1
    i16 45, label %sw.bb1
    i16 37, label %sw.bb1
    i16 43, label %sw.bb2
    i16 47, label %sw.bb11
  ], !dbg !5240

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %cleanup, !dbg !5241

sw.bb2:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5243
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5243
  %2 = load i32*, i32** %1, align 8, !dbg !5243
  %bf.load3 = load i32, i32* %2, align 8, !dbg !5243
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5243
  %cmp = icmp eq i32 %bf.clear4, 45, !dbg !5244
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5245

land.rhs:                                         ; preds = %sw.bb2
  %bf.lshr = lshr i32 %bf.load3, 26, !dbg !5246
  %bf.clear10 = and i32 %bf.lshr, 1, !dbg !5246
  %3 = xor i32 %bf.clear10, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb2
  %4 = phi i32 [ 1, %sw.bb2 ], [ %3, %land.rhs ]
  br label %cleanup, !dbg !5247

sw.bb11:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5248
  %rt_rtx15 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5248
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !5248
  %call = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %6) #7, !dbg !5249
  %tobool16 = icmp eq i32 %call, 0, !dbg !5249
  br i1 %tobool16, label %lor.rhs, label %lor.end, !dbg !5250

lor.rhs:                                          ; preds = %sw.bb11
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5251
  %rt_rtx20 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !5251
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5251
  %call21 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %8) #7, !dbg !5252
  %tobool22 = icmp ne i32 %call21, 0, !dbg !5250
  %phitmp = zext i1 %tobool22 to i32, !dbg !5250
  br label %lor.end, !dbg !5250

lor.end:                                          ; preds = %sw.bb11, %lor.rhs
  %9 = phi i32 [ 1, %sw.bb11 ], [ %phitmp, %lor.rhs ]
  br label %cleanup, !dbg !5253

sw.epilog:                                        ; preds = %entry
  %bf.clear = and i32 %bf.load, 65535, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5234, metadata !DIExpression()), !dbg !5238
  %idxprom = zext i32 %bf.clear to i64, !dbg !5254
  %arrayidx23 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5254
  %10 = load i8*, i8** %arrayidx23, align 8, !dbg !5254
  call void @llvm.dbg.value(metadata i8* %10, metadata !5237, metadata !DIExpression()), !dbg !5238
  %arrayidx25 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5255
  %11 = load i8, i8* %arrayidx25, align 1, !dbg !5255
  call void @llvm.dbg.value(metadata i8 %11, metadata !5235, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5238
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !5257
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5257
  %12 = zext i8 %11 to i64, !dbg !5261
  br label %for.cond, !dbg !5261

for.cond:                                         ; preds = %for.inc66, %sw.epilog
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc66 ], [ %12, %sw.epilog ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !5262
  call void @llvm.dbg.value(metadata i32 undef, metadata !5235, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5238
  %cmp26 = icmp sgt i64 %indvars.iv4, 0, !dbg !5263
  br i1 %cmp26, label %for.body, label %cleanup.loopexit3, !dbg !5264

for.body:                                         ; preds = %for.cond
  %arrayidx29 = getelementptr inbounds i8, i8* %10, i64 %indvars.iv.next5, !dbg !5265
  %13 = load i8, i8* %arrayidx29, align 1, !dbg !5265
  %cmp31 = icmp eq i8 %13, 101, !dbg !5266
  br i1 %cmp31, label %land.lhs.true, label %if.else, !dbg !5267

land.lhs.true:                                    ; preds = %for.body
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next5, !dbg !5268
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !5268
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !5268
  %call38 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %14) #7, !dbg !5269
  %tobool39 = icmp eq i32 %call38, 0, !dbg !5269
  br i1 %tobool39, label %land.lhs.true.if.else_crit_edge, label %cleanup.loopexit3, !dbg !5270

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  %.pre = load i8, i8* %arrayidx29, align 1, !dbg !5271
  br label %if.else, !dbg !5270

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %for.body
  %15 = phi i8 [ %.pre, %land.lhs.true.if.else_crit_edge ], [ %13, %for.body ], !dbg !5271
  %cmp43 = icmp eq i8 %15, 69, !dbg !5273
  br i1 %cmp43, label %for.cond46.preheader, label %for.inc66, !dbg !5274

for.cond46.preheader:                             ; preds = %if.else
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv.next5, !dbg !5275
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtvec_def**, !dbg !5275
  br label %for.cond46, !dbg !5278

for.cond46:                                       ; preds = %for.cond46.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond46.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5279
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5236, metadata !DIExpression()), !dbg !5238
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5280
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 0, !dbg !5280
  %17 = load i32, i32* %num_elem, align 8, !dbg !5280
  %18 = sext i32 %17 to i64, !dbg !5281
  %cmp51 = icmp slt i64 %indvars.iv, %18, !dbg !5281
  br i1 %cmp51, label %for.body53, label %for.inc66.loopexit, !dbg !5278

for.body53:                                       ; preds = %for.cond46
  %arrayidx60 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv, !dbg !5282
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx60, align 8, !dbg !5282
  %call61 = tail call fastcc i32 @computed_jump_p_1(%struct.rtx_def* %19) #7, !dbg !5284
  %tobool62 = icmp eq i32 %call61, 0, !dbg !5284
  br i1 %tobool62, label %for.inc, label %cleanup.loopexit, !dbg !5285

for.inc:                                          ; preds = %for.body53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5286
  call void @llvm.dbg.value(metadata i32 undef, metadata !5236, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5238
  br label %for.cond46, !dbg !5287, !llvm.loop !5288

for.inc66.loopexit:                               ; preds = %for.cond46
  br label %for.inc66, !dbg !5290

for.inc66:                                        ; preds = %for.inc66.loopexit, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !5235, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5238
  br label %for.cond, !dbg !5290, !llvm.loop !5291

cleanup.loopexit:                                 ; preds = %for.body53
  br label %cleanup, !dbg !5293

cleanup.loopexit3:                                ; preds = %for.cond, %land.lhs.true
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true ]
  br label %cleanup, !dbg !5293

cleanup:                                          ; preds = %cleanup.loopexit3, %cleanup.loopexit, %entry, %entry, %lor.end, %land.end, %sw.bb1
  %retval.0 = phi i32 [ %9, %lor.end ], [ %4, %land.end ], [ 1, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit3 ], !dbg !5238
  ret i32 %retval.0, !dbg !5293
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @for_each_rtx_1(%struct.rtx_def* %exp, i32 %n, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) unnamed_addr #4 !dbg !5294 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp, metadata !5298, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 %n, metadata !5299, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def**, i8*)* %f, metadata !5300, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %data, metadata !5301, metadata !DIExpression()), !dbg !5307
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !5308
  %bf.load = load i32, i32* %0, align 8, !dbg !5308
  %bf.clear = and i32 %bf.load, 65535, !dbg !5308
  %idxprom = zext i32 %bf.clear to i64, !dbg !5308
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5308
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !5308
  call void @llvm.dbg.value(metadata i8* %1, metadata !5305, metadata !DIExpression()), !dbg !5307
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 1, !dbg !5309
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5309
  %2 = sext i32 %n to i64, !dbg !5315
  br label %for.cond, !dbg !5315

for.cond:                                         ; preds = %for.inc84, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc84 ], [ %2, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !5299, metadata !DIExpression()), !dbg !5307
  %arrayidx2 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv4, !dbg !5316
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !5316
  %cmp = icmp eq i8 %3, 0, !dbg !5317
  br i1 %cmp, label %cleanup.loopexit1, label %for.body, !dbg !5318

for.body:                                         ; preds = %for.cond
  %conv6 = sext i8 %3 to i32, !dbg !5319
  switch i32 %conv6, label %for.inc84 [
    i32 101, label %sw.bb
    i32 86, label %sw.bb32
    i32 69, label %sw.bb32
  ], !dbg !5320

sw.bb:                                            ; preds = %for.body
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv4, !dbg !5321
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5321
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx, metadata !5306, metadata !DIExpression()), !dbg !5307
  %call = tail call i32 %f(%struct.rtx_def** nonnull %rt_rtx, i8* %data) #6, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %call, metadata !5302, metadata !DIExpression()), !dbg !5307
  switch i32 %call, label %cleanup.loopexit1 [
    i32 -1, label %for.inc84
    i32 0, label %if.end14
  ], !dbg !5323

if.end14:                                         ; preds = %sw.bb
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5324
  %cmp15 = icmp eq %struct.rtx_def* %4, null, !dbg !5326
  br i1 %cmp15, label %for.inc84, label %if.end18, !dbg !5327

if.end18:                                         ; preds = %if.end14
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5327
  %bf.load19 = load i32, i32* %5, align 8, !dbg !5328
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !5328
  %idxprom21 = zext i32 %bf.clear20 to i64, !dbg !5329
  %arrayidx22 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom21, !dbg !5329
  %6 = load i32, i32* %arrayidx22, align 4, !dbg !5329
  call void @llvm.dbg.value(metadata i32 %6, metadata !5303, metadata !DIExpression()), !dbg !5307
  %cmp23 = icmp sgt i32 %6, -1, !dbg !5330
  br i1 %cmp23, label %if.then25, label %for.inc84, !dbg !5332

if.then25:                                        ; preds = %if.end18
  %call26 = tail call fastcc i32 @for_each_rtx_1(%struct.rtx_def* nonnull %4, i32 %6, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) #7, !dbg !5333
  call void @llvm.dbg.value(metadata i32 %call26, metadata !5302, metadata !DIExpression()), !dbg !5307
  %cmp27 = icmp eq i32 %call26, 0, !dbg !5335
  br i1 %cmp27, label %for.inc84, label %cleanup.loopexit1, !dbg !5337

sw.bb32:                                          ; preds = %for.body, %for.body
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv4, !dbg !5338
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !5338
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5338
  %cmp37 = icmp eq %struct.rtvec_def* %7, null, !dbg !5339
  br i1 %cmp37, label %for.inc84, label %for.cond41.preheader, !dbg !5340

for.cond41.preheader:                             ; preds = %sw.bb32
  br label %for.cond41, !dbg !5341

for.cond41:                                       ; preds = %for.cond41.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond41.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5343
  %8 = phi %struct.rtvec_def* [ %7, %for.cond41.preheader ], [ %.pre, %for.inc ], !dbg !5343
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5304, metadata !DIExpression()), !dbg !5307
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !5343
  %9 = load i32, i32* %num_elem, align 8, !dbg !5343
  %10 = sext i32 %9 to i64, !dbg !5345
  %cmp47 = icmp slt i64 %indvars.iv, %10, !dbg !5345
  br i1 %cmp47, label %for.body49, label %for.inc84.loopexit, !dbg !5341

for.body49:                                       ; preds = %for.cond41
  %arrayidx56 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !5346
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx56, metadata !5306, metadata !DIExpression()), !dbg !5307
  %call57 = tail call i32 %f(%struct.rtx_def** nonnull %arrayidx56, i8* %data) #6, !dbg !5348
  call void @llvm.dbg.value(metadata i32 %call57, metadata !5302, metadata !DIExpression()), !dbg !5307
  switch i32 %call57, label %cleanup.loopexit [
    i32 -1, label %for.inc
    i32 0, label %if.end66
  ], !dbg !5349

if.end66:                                         ; preds = %for.body49
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8, !dbg !5350
  %cmp67 = icmp eq %struct.rtx_def* %11, null, !dbg !5352
  br i1 %cmp67, label %for.inc, label %if.end70, !dbg !5353

if.end70:                                         ; preds = %if.end66
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !5353
  %bf.load71 = load i32, i32* %12, align 8, !dbg !5354
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !5354
  %idxprom73 = zext i32 %bf.clear72 to i64, !dbg !5355
  %arrayidx74 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %idxprom73, !dbg !5355
  %13 = load i32, i32* %arrayidx74, align 4, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %13, metadata !5303, metadata !DIExpression()), !dbg !5307
  %cmp75 = icmp sgt i32 %13, -1, !dbg !5356
  br i1 %cmp75, label %if.then77, label %for.inc, !dbg !5358

if.then77:                                        ; preds = %if.end70
  %call78 = tail call fastcc i32 @for_each_rtx_1(%struct.rtx_def* nonnull %11, i32 %13, i32 (%struct.rtx_def**, i8*)* %f, i8* %data) #7, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %call78, metadata !5302, metadata !DIExpression()), !dbg !5307
  %cmp79 = icmp eq i32 %call78, 0, !dbg !5361
  br i1 %cmp79, label %for.inc, label %cleanup.loopexit, !dbg !5363

for.inc:                                          ; preds = %if.then77, %if.end70, %if.end66, %for.body49
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5364
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5307
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5343
  br label %for.cond41, !dbg !5365, !llvm.loop !5366

for.inc84.loopexit:                               ; preds = %for.cond41
  br label %for.inc84, !dbg !5368

for.inc84:                                        ; preds = %for.inc84.loopexit, %if.then25, %if.end18, %for.body, %sw.bb32, %if.end14, %sw.bb
  %indvars.iv.next5 = add i64 %indvars.iv4, 1, !dbg !5368
  call void @llvm.dbg.value(metadata i32 undef, metadata !5299, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5307
  br label %for.cond, !dbg !5369, !llvm.loop !5370

cleanup.loopexit:                                 ; preds = %for.body49, %if.then77
  %retval.0.ph = phi i32 [ %call78, %if.then77 ], [ %call57, %for.body49 ]
  br label %cleanup, !dbg !5372

cleanup.loopexit1:                                ; preds = %sw.bb, %for.cond, %if.then25
  %retval.0.ph2 = phi i32 [ 0, %for.cond ], [ %call26, %if.then25 ], [ %call, %sw.bb ]
  br label %cleanup, !dbg !5372

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit
  %retval.0 = phi i32 [ %retval.0.ph, %cleanup.loopexit ], [ %retval.0.ph2, %cleanup.loopexit1 ], !dbg !5307
  ret i32 %retval.0, !dbg !5372
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @regno_use_in(i32 %regno, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !5373 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5377, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5378, metadata !DIExpression()), !dbg !5383
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5384
  %bf.load = load i32, i32* %0, align 8, !dbg !5384
  %bf.clear = and i32 %bf.load, 65535, !dbg !5384
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5384
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5386

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !5387
  %cmp1 = icmp eq i32 %call, %regno, !dbg !5388
  br i1 %cmp1, label %cleanup, label %land.lhs.true.if.end_crit_edge, !dbg !5389

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %bf.load2.pre = load i32, i32* %0, align 8, !dbg !5390
  %.pre = and i32 %bf.load2.pre, 65535, !dbg !5390
  br label %if.end, !dbg !5389

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %bf.clear3.pre-phi = phi i32 [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %bf.clear, %entry ], !dbg !5390
  %idxprom = zext i32 %bf.clear3.pre-phi to i64, !dbg !5390
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5390
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !5390
  call void @llvm.dbg.value(metadata i8* %1, metadata !5379, metadata !DIExpression()), !dbg !5383
  %arrayidx7 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5391
  %2 = load i8, i8* %arrayidx7, align 1, !dbg !5391
  call void @llvm.dbg.value(metadata i8 %2, metadata !5380, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !5393
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !5393
  %3 = zext i8 %2 to i64, !dbg !5399
  br label %for.cond, !dbg !5399

for.cond:                                         ; preds = %for.inc49, %if.end
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc49 ], [ %3, %if.end ]
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !5400
  call void @llvm.dbg.value(metadata i32 undef, metadata !5380, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  %cmp8 = icmp sgt i64 %indvars.iv3, 0, !dbg !5401
  br i1 %cmp8, label %for.body, label %cleanup.loopexit1, !dbg !5402

for.body:                                         ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next4, !dbg !5403
  %4 = load i8, i8* %arrayidx11, align 1, !dbg !5403
  %cmp13 = icmp eq i8 %4, 101, !dbg !5404
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !5405

if.then15:                                        ; preds = %for.body
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 %indvars.iv.next4, !dbg !5406
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !5406
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5406
  %call18 = tail call %struct.rtx_def* @regno_use_in(i32 %regno, %struct.rtx_def* %5) #7, !dbg !5409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !5382, metadata !DIExpression()), !dbg !5383
  %tobool = icmp eq %struct.rtx_def* %call18, null, !dbg !5410
  br i1 %tobool, label %for.inc49, label %cleanup.loopexit1, !dbg !5411

if.else:                                          ; preds = %for.body
  %cmp24 = icmp eq i8 %4, 69, !dbg !5412
  br i1 %cmp24, label %if.then26, label %for.inc49, !dbg !5413

if.then26:                                        ; preds = %if.else
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 %indvars.iv.next4, !dbg !5414
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !5414
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5414
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !5414
  %7 = load i32, i32* %num_elem, align 8, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %7, metadata !5381, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  %8 = sext i32 %7 to i64, !dbg !5415
  br label %for.cond32, !dbg !5415

for.cond32:                                       ; preds = %for.inc, %if.then26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %8, %if.then26 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5393
  call void @llvm.dbg.value(metadata i32 undef, metadata !5381, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  %cmp33 = icmp sgt i64 %indvars.iv, 0, !dbg !5416
  br i1 %cmp33, label %for.body35, label %for.inc49.loopexit, !dbg !5418

for.body35:                                       ; preds = %for.cond32
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5419
  %arrayidx42 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !5419
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !5419
  %call43 = tail call %struct.rtx_def* @regno_use_in(i32 %regno, %struct.rtx_def* %10) #7, !dbg !5421
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !5382, metadata !DIExpression()), !dbg !5383
  %tobool44 = icmp eq %struct.rtx_def* %call43, null, !dbg !5422
  br i1 %tobool44, label %for.inc, label %cleanup.loopexit, !dbg !5423

for.inc:                                          ; preds = %for.body35
  call void @llvm.dbg.value(metadata i32 undef, metadata !5381, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  br label %for.cond32, !dbg !5424, !llvm.loop !5425

for.inc49.loopexit:                               ; preds = %for.cond32
  br label %for.inc49, !dbg !5427

for.inc49:                                        ; preds = %for.inc49.loopexit, %if.then15, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !5380, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5383
  br label %for.cond, !dbg !5427, !llvm.loop !5428

cleanup.loopexit:                                 ; preds = %for.body35
  %call43.lcssa = phi %struct.rtx_def* [ %call43, %for.body35 ], !dbg !5421
  br label %cleanup, !dbg !5430

cleanup.loopexit1:                                ; preds = %for.cond, %if.then15
  %retval.0.ph = phi %struct.rtx_def* [ null, %for.cond ], [ %call18, %if.then15 ]
  br label %cleanup, !dbg !5430

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %land.lhs.true
  %retval.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %call43.lcssa, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !5383
  ret %struct.rtx_def* %retval.0, !dbg !5430
}

; Function Attrs: nounwind uwtable
define dso_local i32 @commutative_operand_precedence(%struct.rtx_def* %op) local_unnamed_addr #4 !dbg !5431 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !5435, metadata !DIExpression()), !dbg !5437
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !5438
  %bf.load = load i32, i32* %0, align 8, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !5436, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !5437
  %trunc = trunc i32 %bf.load to i16, !dbg !5439
  switch i16 %trunc, label %if.end6 [
    i16 30, label %cleanup
    i16 32, label %if.then2
    i16 31, label %if.then5
  ], !dbg !5439

if.then2:                                         ; preds = %entry
  br label %cleanup, !dbg !5440

if.then5:                                         ; preds = %entry
  br label %cleanup, !dbg !5442

if.end6:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %op) #6, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5435, metadata !DIExpression()), !dbg !5437
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5445
  %bf.load7 = load i32, i32* %1, align 8, !dbg !5445
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5445
  call void @llvm.dbg.value(metadata i32 %bf.clear8, metadata !5436, metadata !DIExpression()), !dbg !5437
  %idxprom = zext i32 %bf.clear8 to i64, !dbg !5446
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5446
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5446
  switch i32 %2, label %sw.default [
    i32 9, label %sw.bb
    i32 5, label %sw.bb18
    i32 8, label %sw.bb28
    i32 3, label %cleanup
    i32 2, label %sw.bb46
    i32 4, label %sw.bb47
  ], !dbg !5447

sw.bb:                                            ; preds = %if.end6
  %trunc2 = trunc i32 %bf.load7 to i16, !dbg !5448
  switch i16 %trunc2, label %if.end17 [
    i16 30, label %cleanup
    i16 32, label %if.then13
    i16 31, label %if.then16
  ], !dbg !5448

if.then13:                                        ; preds = %sw.bb
  br label %cleanup, !dbg !5450

if.then16:                                        ; preds = %sw.bb
  br label %cleanup, !dbg !5452

if.end17:                                         ; preds = %sw.bb
  br label %cleanup, !dbg !5454

sw.bb18:                                          ; preds = %if.end6
  %cmp19 = icmp eq i32 %bf.clear8, 39, !dbg !5455
  br i1 %cmp19, label %land.lhs.true, label %if.end27, !dbg !5457

land.lhs.true:                                    ; preds = %sw.bb18
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5458
  %3 = bitcast %union.rtunion_def* %arrayidx20 to i32**, !dbg !5458
  %4 = load i32*, i32** %3, align 8, !dbg !5458
  %bf.load21 = load i32, i32* %4, align 8, !dbg !5458
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !5458
  %idxprom23 = zext i32 %bf.clear22 to i64, !dbg !5458
  %arrayidx24 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom23, !dbg !5458
  %5 = load i32, i32* %arrayidx24, align 4, !dbg !5458
  %and = and i32 %5, -2, !dbg !5458
  %cmp25 = icmp eq i32 %and, 8, !dbg !5458
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !5459

if.end27:                                         ; preds = %land.lhs.true, %sw.bb18
  br label %cleanup, !dbg !5460

sw.bb28:                                          ; preds = %if.end6
  %cmp31 = icmp eq i32 %bf.clear8, 37, !dbg !5461
  br i1 %cmp31, label %land.lhs.true32, label %lor.lhs.false, !dbg !5463

land.lhs.true32:                                  ; preds = %sw.bb28
  %bf.clear34 = and i32 %bf.load7, 1073741824, !dbg !5464
  %tobool = icmp eq i32 %bf.clear34, 0, !dbg !5464
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !5465

lor.lhs.false:                                    ; preds = %land.lhs.true32, %sw.bb28
  %cmp37 = icmp eq i32 %bf.clear8, 43, !dbg !5466
  br i1 %cmp37, label %land.lhs.true38, label %if.end44, !dbg !5467

land.lhs.true38:                                  ; preds = %lor.lhs.false
  %bf.clear41 = and i32 %bf.load7, 1073741824, !dbg !5468
  %tobool42 = icmp eq i32 %bf.clear41, 0, !dbg !5468
  br i1 %tobool42, label %if.end44, label %cleanup, !dbg !5469

if.end44:                                         ; preds = %land.lhs.true38, %lor.lhs.false
  br label %cleanup, !dbg !5470

sw.bb46:                                          ; preds = %if.end6
  br label %cleanup, !dbg !5471

sw.bb47:                                          ; preds = %if.end6
  %trunc1 = trunc i32 %bf.load7 to i16, !dbg !5472
  switch i16 %trunc1, label %sw.default [
    i16 51, label %cleanup
    i16 64, label %cleanup
  ], !dbg !5472

sw.default:                                       ; preds = %sw.bb47, %if.end6
  br label %cleanup, !dbg !5474

cleanup:                                          ; preds = %land.lhs.true32, %land.lhs.true38, %sw.bb47, %sw.bb47, %if.end6, %land.lhs.true, %sw.bb, %entry, %sw.default, %sw.bb46, %if.end44, %if.end27, %if.end17, %if.then16, %if.then13, %if.then5, %if.then2
  %retval.0 = phi i32 [ -7, %if.then2 ], [ -7, %if.then5 ], [ 0, %sw.default ], [ 2, %sw.bb46 ], [ -2, %if.end44 ], [ 0, %if.end27 ], [ -5, %if.then13 ], [ -5, %if.then16 ], [ -4, %if.end17 ], [ -8, %entry ], [ -6, %sw.bb ], [ -3, %land.lhs.true ], [ -1, %land.lhs.true38 ], [ -1, %land.lhs.true32 ], [ 4, %if.end6 ], [ 1, %sw.bb47 ], [ 1, %sw.bb47 ], !dbg !5437
  ret i32 %retval.0, !dbg !5475
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !5476 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5480, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5481, metadata !DIExpression()), !dbg !5482
  %call = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %x) #7, !dbg !5483
  %call1 = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %y) #7, !dbg !5484
  %cmp = icmp slt i32 %call, %call1, !dbg !5485
  %conv2 = zext i1 %cmp to i8, !dbg !5486
  ret i8 %conv2, !dbg !5487
}

; Function Attrs: nounwind uwtable
define dso_local i32 @auto_inc_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !5488 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5492
  %bf.load = load i32, i32* %0, align 8, !dbg !5492
  %bf.clear = and i32 %bf.load, 65535, !dbg !5492
  %bf.clear.off = add nsw i32 %bf.clear, -74, !dbg !5493
  %switch = icmp ult i32 %bf.clear.off, 6, !dbg !5493
  br i1 %switch, label %sw.bb, label %sw.epilog, !dbg !5493

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5494
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5494
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5494
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5497
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !5498
  br i1 %cmp, label %sw.epilog, label %return, !dbg !5499

sw.epilog:                                        ; preds = %sw.bb, %entry
  br label %return, !dbg !5500

return:                                           ; preds = %sw.bb, %sw.epilog
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ 1, %sw.bb ], !dbg !5491
  ret i32 %retval.0, !dbg !5501
}

; Function Attrs: nounwind uwtable
define dso_local i32 @loc_mentioned_in_p(%struct.rtx_def** %loc, %struct.rtx_def* %in) local_unnamed_addr #4 !dbg !5502 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !5506, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in, metadata !5507, metadata !DIExpression()), !dbg !5512
  %tobool = icmp eq %struct.rtx_def* %in, null, !dbg !5513
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5515

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 0, !dbg !5516
  %bf.load = load i32, i32* %0, align 8, !dbg !5516
  %bf.clear = and i32 %bf.load, 65535, !dbg !5516
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5508, metadata !DIExpression()), !dbg !5512
  %idxprom = zext i32 %bf.clear to i64, !dbg !5517
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !5517
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !5517
  call void @llvm.dbg.value(metadata i8* %1, metadata !5509, metadata !DIExpression()), !dbg !5512
  %arrayidx2 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !5518
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !5518
  call void @llvm.dbg.value(metadata i8 %2, metadata !5510, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 1, !dbg !5520
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !5520
  %3 = zext i8 %2 to i64, !dbg !5526
  br label %for.cond, !dbg !5526

for.cond:                                         ; preds = %for.inc61, %if.end
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc61 ], [ %3, %if.end ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !5527
  call void @llvm.dbg.value(metadata i32 undef, metadata !5510, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  %cmp = icmp sgt i64 %indvars.iv2, 0, !dbg !5528
  br i1 %cmp, label %for.body, label %cleanup.loopexit1, !dbg !5529

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next3, !dbg !5530
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !5530
  %cmp7 = icmp eq i8 %4, 101, !dbg !5531
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5532

if.then9:                                         ; preds = %for.body
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 %indvars.iv.next3, !dbg !5533
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5533
  %cmp12 = icmp eq %struct.rtx_def** %rt_rtx, %loc, !dbg !5536
  br i1 %cmp12, label %cleanup.loopexit1, label %lor.lhs.false, !dbg !5537

lor.lhs.false:                                    ; preds = %if.then9
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5538
  %call = tail call i32 @loc_mentioned_in_p(%struct.rtx_def** %loc, %struct.rtx_def* %5) #7, !dbg !5539
  %tobool19 = icmp eq i32 %call, 0, !dbg !5539
  br i1 %tobool19, label %for.inc61, label %cleanup.loopexit1, !dbg !5540

if.else:                                          ; preds = %for.body
  %cmp25 = icmp eq i8 %4, 69, !dbg !5541
  br i1 %cmp25, label %if.then27, label %for.inc61, !dbg !5542

if.then27:                                        ; preds = %if.else
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 %indvars.iv.next3, !dbg !5543
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !5543
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5543
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !5543
  %7 = load i32, i32* %num_elem, align 8, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %7, metadata !5511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  %8 = sext i32 %7 to i64, !dbg !5544
  br label %for.cond33, !dbg !5544

for.cond33:                                       ; preds = %for.inc, %if.then27
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %8, %if.then27 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5520
  call void @llvm.dbg.value(metadata i32 undef, metadata !5511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  %cmp34 = icmp sgt i64 %indvars.iv, 0, !dbg !5545
  br i1 %cmp34, label %for.body36, label %for.inc61.loopexit, !dbg !5547

for.body36:                                       ; preds = %for.cond33
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5548
  %arrayidx43 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !5548
  %cmp44 = icmp eq %struct.rtx_def** %arrayidx43, %loc, !dbg !5550
  br i1 %cmp44, label %cleanup.loopexit, label %lor.lhs.false46, !dbg !5551

lor.lhs.false46:                                  ; preds = %for.body36
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8, !dbg !5552
  %call55 = tail call i32 @loc_mentioned_in_p(%struct.rtx_def** %loc, %struct.rtx_def* %10) #7, !dbg !5553
  %tobool56 = icmp eq i32 %call55, 0, !dbg !5553
  br i1 %tobool56, label %for.inc, label %cleanup.loopexit, !dbg !5554

for.inc:                                          ; preds = %lor.lhs.false46
  call void @llvm.dbg.value(metadata i32 undef, metadata !5511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  br label %for.cond33, !dbg !5555, !llvm.loop !5556

for.inc61.loopexit:                               ; preds = %for.cond33
  br label %for.inc61, !dbg !5558

for.inc61:                                        ; preds = %for.inc61.loopexit, %lor.lhs.false, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !5510, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5512
  br label %for.cond, !dbg !5558, !llvm.loop !5559

cleanup.loopexit:                                 ; preds = %for.body36, %lor.lhs.false46
  br label %cleanup, !dbg !5561

cleanup.loopexit1:                                ; preds = %if.then9, %for.cond, %lor.lhs.false
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then9 ], [ 1, %lor.lhs.false ]
  br label %cleanup, !dbg !5561

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !5512
  ret i32 %retval.0, !dbg !5561
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_lsb_1(i32 %outer_mode, i32 %inner_mode, i32 %subreg_byte) local_unnamed_addr #4 !dbg !5562 {
entry:
  call void @llvm.dbg.value(metadata i32 %outer_mode, metadata !5566, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata i32 %inner_mode, metadata !5567, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata i32 %subreg_byte, metadata !5568, metadata !DIExpression()), !dbg !5572
  %idxprom = zext i32 %outer_mode to i64, !dbg !5573
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5573
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5573
  %idxprom4 = zext i32 %inner_mode to i64, !dbg !5575
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom4, !dbg !5575
  %1 = load i8, i8* %arrayidx5, align 1, !dbg !5575
  %cmp = icmp ugt i8 %0, %1, !dbg !5576
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5577

if.end:                                           ; preds = %entry
  %div = lshr i32 %subreg_byte, 2, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %div, metadata !5571, metadata !DIExpression()), !dbg !5572
  %mul12 = shl i32 %div, 5, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %mul12, metadata !5569, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata i32 %subreg_byte, metadata !5570, metadata !DIExpression(DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !5572
  %rem = shl i32 %subreg_byte, 3, !dbg !5581
  %mul13 = and i32 %rem, 24, !dbg !5581
  %add = or i32 %mul12, %mul13, !dbg !5582
  call void @llvm.dbg.value(metadata i32 %add, metadata !5569, metadata !DIExpression()), !dbg !5572
  br label %cleanup, !dbg !5583

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %add, %if.end ], [ 0, %entry ], !dbg !5572
  ret i32 %retval.0, !dbg !5584
}

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_lsb(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !5585 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5589
  %bf.load = load i32, i32* %0, align 8, !dbg !5589
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5589
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5589
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5590
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5590
  %2 = load i32*, i32** %1, align 8, !dbg !5590
  %bf.load1 = load i32, i32* %2, align 8, !dbg !5590
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !5590
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !5590
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5591
  %rt_uint = bitcast %union.rtunion_def* %3 to i32*, !dbg !5591
  %4 = load i32, i32* %rt_uint, align 8, !dbg !5591
  %call = tail call i32 @subreg_lsb_1(i32 %bf.clear, i32 %bf.clear3, i32 %4) #7, !dbg !5592
  ret i32 %call, !dbg !5593
}

; Function Attrs: nounwind uwtable
define dso_local void @subreg_get_info(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode, %struct.subreg_info* %info) local_unnamed_addr #4 !dbg !5594 {
entry:
  call void @llvm.dbg.value(metadata i32 %xregno, metadata !5604, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i32 %xmode, metadata !5605, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5606, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i32 %ymode, metadata !5607, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %struct.subreg_info* %info, metadata !5608, metadata !DIExpression()), !dbg !5622
  %cmp = icmp ult i32 %xregno, 53, !dbg !5623
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5623

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5623
  br label %cond.end, !dbg !5623

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i8 0, metadata !5618, metadata !DIExpression()), !dbg !5622
  %0 = load i32, i32* @target_flags, align 4, !dbg !5624
  %and = and i32 %0, 1, !dbg !5624
  %cmp1 = icmp eq i32 %and, 0, !dbg !5624
  br i1 %cmp1, label %if.else133, label %cond.true2, !dbg !5625

cond.true2:                                       ; preds = %cond.end
  %1 = and i32 %xregno, -8, !dbg !5624
  %cmp3 = icmp eq i32 %1, 8, !dbg !5624
  br i1 %cmp3, label %if.else133, label %lor.lhs.false, !dbg !5624

lor.lhs.false:                                    ; preds = %cond.true2
  %conv5 = zext i32 %xregno to i64, !dbg !5624
  %sub6 = add nsw i64 %conv5, -21, !dbg !5624
  %cmp7 = icmp ult i64 %sub6, 8, !dbg !5624
  br i1 %cmp7, label %if.else133, label %lor.lhs.false9, !dbg !5624

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %sub11 = add nsw i64 %conv5, -45, !dbg !5624
  %cmp12 = icmp ult i64 %sub11, 8, !dbg !5624
  br i1 %cmp12, label %if.else133, label %lor.lhs.false14, !dbg !5624

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %sub16 = add nsw i64 %conv5, -29, !dbg !5624
  %cmp17 = icmp ult i64 %sub16, 8, !dbg !5624
  br i1 %cmp17, label %if.else133, label %cond.false20, !dbg !5624

cond.false20:                                     ; preds = %lor.lhs.false14
  switch i32 %xmode, label %if.else133 [
    i32 40, label %if.then
    i32 53, label %if.then
  ], !dbg !5624

if.then:                                          ; preds = %cond.false20, %cond.false20
  %cmp27 = icmp eq i32 %xmode, 40, !dbg !5626
  %cond29 = select i1 %cmp27, i32 4, i32 8, !dbg !5626
  call void @llvm.dbg.value(metadata i32 %cond29, metadata !5609, metadata !DIExpression()), !dbg !5622
  %idxprom = zext i32 %xmode to i64, !dbg !5627
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5627
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5627
  %cmp31 = icmp eq i8 %2, 0, !dbg !5629
  br i1 %cmp31, label %if.end, label %if.else, !dbg !5630

if.else:                                          ; preds = %if.then
  %conv36 = zext i8 %2 to i32, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %conv36, metadata !5619, metadata !DIExpression()), !dbg !5632
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %xmode_unit.0 = phi i32 [ %conv36, %if.else ], [ %xmode, %if.then ], !dbg !5633
  call void @llvm.dbg.value(metadata i32 %xmode_unit.0, metadata !5619, metadata !DIExpression()), !dbg !5632
  br i1 false, label %if.end.cond.true68_crit_edge, label %cond.true40, !dbg !5634

if.end.cond.true68_crit_edge:                     ; preds = %if.end
  br label %cond.true68, !dbg !5634

cond.true40:                                      ; preds = %if.end
  br i1 false, label %cond.true40.cond.true68_crit_edge, label %lor.lhs.false45, !dbg !5634

cond.true40.cond.true68_crit_edge:                ; preds = %cond.true40
  br label %cond.true68, !dbg !5634

lor.lhs.false45:                                  ; preds = %cond.true40
  br i1 false, label %lor.lhs.false45.cond.true68_crit_edge, label %lor.lhs.false50, !dbg !5634

lor.lhs.false45.cond.true68_crit_edge:            ; preds = %lor.lhs.false45
  br label %cond.true68, !dbg !5634

lor.lhs.false50:                                  ; preds = %lor.lhs.false45
  br i1 false, label %lor.lhs.false50.cond.true68_crit_edge, label %lor.lhs.false55, !dbg !5634

lor.lhs.false50.cond.true68_crit_edge:            ; preds = %lor.lhs.false50
  br label %cond.true68, !dbg !5634

lor.lhs.false55:                                  ; preds = %lor.lhs.false50
  br i1 false, label %lor.lhs.false55.cond.true68_crit_edge, label %cond.false61, !dbg !5634

lor.lhs.false55.cond.true68_crit_edge:            ; preds = %lor.lhs.false55
  br label %cond.true68, !dbg !5634

cond.false61:                                     ; preds = %lor.lhs.false55
  switch i32 %xmode_unit.0, label %cond.true68 [
    i32 40, label %cond.end70
    i32 53, label %cond.end70
  ], !dbg !5634

cond.true68:                                      ; preds = %lor.lhs.false55.cond.true68_crit_edge, %lor.lhs.false50.cond.true68_crit_edge, %lor.lhs.false45.cond.true68_crit_edge, %cond.true40.cond.true68_crit_edge, %if.end.cond.true68_crit_edge, %cond.false61
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5634
  br label %cond.end70, !dbg !5634

cond.end70:                                       ; preds = %cond.false61, %cond.false61, %cond.true68
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom, !dbg !5635
  %3 = load i8, i8* %arrayidx73, align 1, !dbg !5635
  %conv74 = zext i8 %3 to i32, !dbg !5635
  %cmp75 = icmp eq i32 %xmode_unit.0, 40, !dbg !5635
  %cond77 = select i1 %cmp75, i32 4, i32 8, !dbg !5635
  %mul = mul nuw nsw i32 %cond77, %conv74, !dbg !5635
  %cmp78 = icmp eq i32 %cond29, %mul, !dbg !5635
  br i1 %cmp78, label %cond.end82, label %cond.true80, !dbg !5635

cond.true80:                                      ; preds = %cond.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5635
  br label %cond.end82, !dbg !5635

cond.end82:                                       ; preds = %cond.end70, %cond.true80
  %arrayidx87 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %conv5, i64 %idxprom, !dbg !5636
  %4 = load i8, i8* %arrayidx87, align 1, !dbg !5636
  %conv88 = zext i8 %4 to i32, !dbg !5636
  %idxprom91 = zext i32 %xmode_unit.0 to i64, !dbg !5636
  %arrayidx92 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %conv5, i64 %idxprom91, !dbg !5636
  %5 = load i8, i8* %arrayidx92, align 1, !dbg !5636
  %conv93 = zext i8 %5 to i32, !dbg !5636
  %mul97 = mul nuw nsw i32 %conv93, %conv74, !dbg !5636
  %cmp98 = icmp eq i32 %mul97, %conv88, !dbg !5636
  br i1 %cmp98, label %cond.end102, label %cond.true100, !dbg !5636

cond.true100:                                     ; preds = %cond.end82
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3123, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5636
  br label %cond.end102, !dbg !5636

cond.end102:                                      ; preds = %cond.end82, %cond.true100
  %arrayidx105 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom91, !dbg !5637
  %6 = load i8, i8* %arrayidx105, align 1, !dbg !5637
  %conv107 = zext i8 %6 to i32, !dbg !5637
  %div = udiv i32 %offset, %conv107, !dbg !5639
  %add = add i32 %div, 1, !dbg !5640
  %cmp111 = icmp ult i32 %add, %conv74, !dbg !5641
  br i1 %cmp111, label %land.lhs.true, label %if.end139, !dbg !5642

land.lhs.true:                                    ; preds = %cond.end102
  %idxprom118 = zext i32 %ymode to i64, !dbg !5643
  %arrayidx119 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom118, !dbg !5643
  %7 = load i8, i8* %arrayidx119, align 1, !dbg !5643
  %conv121 = zext i8 %7 to i32, !dbg !5643
  %add122 = add i32 %conv121, %offset, !dbg !5644
  %sub123 = add i32 %add122, -1, !dbg !5645
  %div128 = udiv i32 %sub123, %conv107, !dbg !5646
  %cmp129 = icmp eq i32 %div, %div128, !dbg !5647
  br i1 %cmp129, label %if.end139, label %if.then131, !dbg !5648

if.then131:                                       ; preds = %land.lhs.true
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5649
  store i8 0, i8* %representable_p, align 4, !dbg !5651
  call void @llvm.dbg.value(metadata i8 1, metadata !5618, metadata !DIExpression()), !dbg !5622
  br label %if.end139, !dbg !5652

if.else133:                                       ; preds = %cond.end, %cond.false20, %cond.true2, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false14
  %idxprom134 = zext i32 %xregno to i64, !dbg !5653
  %idxprom136 = zext i32 %xmode to i64, !dbg !5653
  %arrayidx137 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom134, i64 %idxprom136, !dbg !5653
  %8 = load i8, i8* %arrayidx137, align 1, !dbg !5653
  %conv138 = zext i8 %8 to i32, !dbg !5653
  call void @llvm.dbg.value(metadata i32 %conv138, metadata !5609, metadata !DIExpression()), !dbg !5622
  br label %if.end139

if.end139:                                        ; preds = %land.lhs.true, %cond.end102, %if.then131, %if.else133
  %idxprom140.pre-phi = phi i64 [ %conv5, %land.lhs.true ], [ %conv5, %cond.end102 ], [ %conv5, %if.then131 ], [ %idxprom134, %if.else133 ], !dbg !5654
  %nregs_xmode.0 = phi i32 [ %cond29, %land.lhs.true ], [ %cond29, %cond.end102 ], [ %cond29, %if.then131 ], [ %conv138, %if.else133 ], !dbg !5655
  %rknown.1 = phi i8 [ 0, %land.lhs.true ], [ 0, %cond.end102 ], [ 1, %if.then131 ], [ 0, %if.else133 ], !dbg !5622
  call void @llvm.dbg.value(metadata i8 %rknown.1, metadata !5618, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i32 %nregs_xmode.0, metadata !5609, metadata !DIExpression()), !dbg !5622
  %idxprom142 = zext i32 %ymode to i64, !dbg !5654
  %arrayidx143 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom140.pre-phi, i64 %idxprom142, !dbg !5654
  %9 = load i8, i8* %arrayidx143, align 1, !dbg !5654
  %conv144 = zext i8 %9 to i32, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %conv144, metadata !5610, metadata !DIExpression()), !dbg !5622
  %tobool = icmp eq i8 %rknown.1, 0, !dbg !5656
  %cmp146 = icmp eq i32 %offset, 0, !dbg !5658
  %or.cond = and i1 %tobool, %cmp146, !dbg !5659
  br i1 %or.cond, label %land.lhs.true148, label %if.end175, !dbg !5659

land.lhs.true148:                                 ; preds = %if.end139
  %arrayidx150 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom142, !dbg !5660
  %10 = load i8, i8* %arrayidx150, align 1, !dbg !5660
  %idxprom153 = zext i32 %xmode to i64, !dbg !5661
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom153, !dbg !5661
  %11 = load i8, i8* %arrayidx154, align 1, !dbg !5661
  %cmp157 = icmp ugt i8 %10, %11, !dbg !5662
  br i1 %cmp157, label %if.then159, label %if.end175, !dbg !5663

if.then159:                                       ; preds = %land.lhs.true148
  %representable_p160 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5664
  store i8 1, i8* %representable_p160, align 4, !dbg !5666
  %offset173 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5667
  store i32 0, i32* %offset173, align 4, !dbg !5669
  %nregs = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5670
  store i32 %conv144, i32* %nregs, align 4, !dbg !5671
  br label %cleanup.cont, !dbg !5672

if.end175:                                        ; preds = %if.end139, %land.lhs.true148
  %12 = load i32, i32* @target_flags, align 4, !dbg !5673
  %and176 = and i32 %12, 1, !dbg !5673
  %cmp177 = icmp eq i32 %and176, 0, !dbg !5673
  br i1 %cmp177, label %land.lhs.true207, label %cond.true179, !dbg !5675

cond.true179:                                     ; preds = %if.end175
  %13 = and i32 %xregno, -8, !dbg !5673
  %cmp182 = icmp eq i32 %13, 8, !dbg !5673
  br i1 %cmp182, label %land.lhs.true207, label %lor.lhs.false184, !dbg !5673

lor.lhs.false184:                                 ; preds = %cond.true179
  %sub186 = add nsw i64 %idxprom140.pre-phi, -21, !dbg !5673
  %cmp187 = icmp ult i64 %sub186, 8, !dbg !5673
  br i1 %cmp187, label %land.lhs.true207, label %lor.lhs.false189, !dbg !5673

lor.lhs.false189:                                 ; preds = %lor.lhs.false184
  %sub191 = add nsw i64 %idxprom140.pre-phi, -45, !dbg !5673
  %cmp192 = icmp ult i64 %sub191, 8, !dbg !5673
  br i1 %cmp192, label %land.lhs.true207, label %lor.lhs.false194, !dbg !5673

lor.lhs.false194:                                 ; preds = %lor.lhs.false189
  %sub196 = add nsw i64 %idxprom140.pre-phi, -29, !dbg !5673
  %cmp197 = icmp ult i64 %sub196, 8, !dbg !5673
  br i1 %cmp197, label %land.lhs.true207, label %cond.false200, !dbg !5673

cond.false200:                                    ; preds = %lor.lhs.false194
  switch i32 %xmode, label %land.lhs.true207 [
    i32 40, label %if.end305
    i32 53, label %if.end305
  ], !dbg !5673

land.lhs.true207:                                 ; preds = %if.end175, %cond.false200, %cond.true179, %lor.lhs.false184, %lor.lhs.false189, %lor.lhs.false194
  br i1 %cmp177, label %land.lhs.true239, label %cond.true211, !dbg !5676

cond.true211:                                     ; preds = %land.lhs.true207
  %14 = and i32 %xregno, -8, !dbg !5677
  %cmp214 = icmp eq i32 %14, 8, !dbg !5677
  br i1 %cmp214, label %land.lhs.true239, label %lor.lhs.false216, !dbg !5677

lor.lhs.false216:                                 ; preds = %cond.true211
  %sub218 = add nsw i64 %idxprom140.pre-phi, -21, !dbg !5677
  %cmp219 = icmp ult i64 %sub218, 8, !dbg !5677
  br i1 %cmp219, label %land.lhs.true239, label %lor.lhs.false221, !dbg !5677

lor.lhs.false221:                                 ; preds = %lor.lhs.false216
  %sub223 = add nsw i64 %idxprom140.pre-phi, -45, !dbg !5677
  %cmp224 = icmp ult i64 %sub223, 8, !dbg !5677
  br i1 %cmp224, label %land.lhs.true239, label %lor.lhs.false226, !dbg !5677

lor.lhs.false226:                                 ; preds = %lor.lhs.false221
  %sub228 = add nsw i64 %idxprom140.pre-phi, -29, !dbg !5677
  %cmp229 = icmp ult i64 %sub228, 8, !dbg !5677
  br i1 %cmp229, label %land.lhs.true239, label %cond.false232, !dbg !5677

cond.false232:                                    ; preds = %lor.lhs.false226
  switch i32 %ymode, label %land.lhs.true239 [
    i32 40, label %if.end305
    i32 53, label %if.end305
  ], !dbg !5677

land.lhs.true239:                                 ; preds = %land.lhs.true207, %cond.false232, %cond.true211, %lor.lhs.false216, %lor.lhs.false221, %lor.lhs.false226
  %idxprom240 = zext i32 %xmode to i64, !dbg !5678
  %arrayidx241 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom240, !dbg !5678
  %15 = load i8, i8* %arrayidx241, align 1, !dbg !5678
  %conv243 = zext i8 %15 to i32, !dbg !5678
  %rem = urem i32 %conv243, %nregs_xmode.0, !dbg !5679
  %cmp244 = icmp eq i32 %rem, 0, !dbg !5680
  br i1 %cmp244, label %land.lhs.true246, label %if.end305, !dbg !5681

land.lhs.true246:                                 ; preds = %land.lhs.true239
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom142, !dbg !5682
  %16 = load i8, i8* %arrayidx248, align 1, !dbg !5682
  %17 = urem i8 %16, %9, !dbg !5683
  %cmp252 = icmp eq i8 %17, 0, !dbg !5684
  br i1 %cmp252, label %if.then254, label %if.end305, !dbg !5685

if.then254:                                       ; preds = %land.lhs.true246
  %div259 = udiv i32 %conv243, %nregs_xmode.0, !dbg !5686
  call void @llvm.dbg.value(metadata i32 %div259, metadata !5616, metadata !DIExpression()), !dbg !5622
  %18 = udiv i8 %16, %9, !dbg !5688
  %div264 = zext i8 %18 to i32, !dbg !5688
  call void @llvm.dbg.value(metadata i32 %div264, metadata !5617, metadata !DIExpression()), !dbg !5622
  %cmp267 = icmp sgt i32 %div259, %div264, !dbg !5689
  %or.cond1 = and i1 %tobool, %cmp267, !dbg !5691
  %cmp270 = icmp ugt i8 %9, 1, !dbg !5692
  %or.cond2 = and i1 %or.cond1, %cmp270, !dbg !5691
  br i1 %or.cond2, label %if.then272, label %if.end284, !dbg !5691

if.then272:                                       ; preds = %if.then254
  %representable_p273 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5693
  store i8 0, i8* %representable_p273, align 4, !dbg !5695
  %19 = load i8, i8* %arrayidx248, align 1, !dbg !5696
  %conv277 = zext i8 %19 to i32, !dbg !5696
  %add278 = add nuw nsw i32 %div259, %conv277, !dbg !5697
  %sub279 = add nsw i32 %add278, -1, !dbg !5698
  %div280 = sdiv i32 %sub279, %div259, !dbg !5699
  %nregs281 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5700
  store i32 %div280, i32* %nregs281, align 4, !dbg !5701
  %div282 = udiv i32 %offset, %div259, !dbg !5702
  %offset283 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5703
  store i32 %div282, i32* %offset283, align 4, !dbg !5704
  br label %cleanup.cont, !dbg !5705

if.end284:                                        ; preds = %if.then254
  %cmp287 = icmp slt i32 %div259, %div264, !dbg !5706
  %or.cond3 = and i1 %tobool, %cmp287, !dbg !5708
  %cmp290 = icmp ugt i32 %nregs_xmode.0, 1, !dbg !5709
  %or.cond4 = and i1 %or.cond3, %cmp290, !dbg !5708
  br i1 %or.cond4, label %if.then292, label %if.end305, !dbg !5708

if.then292:                                       ; preds = %if.end284
  %representable_p293 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5710
  store i8 0, i8* %representable_p293, align 4, !dbg !5712
  %20 = load i8, i8* %arrayidx248, align 1, !dbg !5713
  %conv297 = zext i8 %20 to i32, !dbg !5713
  %add298 = add nuw nsw i32 %div259, %conv297, !dbg !5714
  %sub299 = add nsw i32 %add298, -1, !dbg !5715
  %div300 = sdiv i32 %sub299, %div259, !dbg !5716
  %nregs301 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5717
  store i32 %div300, i32* %nregs301, align 4, !dbg !5718
  %div302 = udiv i32 %offset, %div259, !dbg !5719
  %offset303 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5720
  store i32 %div302, i32* %offset303, align 4, !dbg !5721
  br label %cleanup.cont, !dbg !5722

if.end305:                                        ; preds = %if.end284, %cond.false232, %cond.false232, %cond.false200, %cond.false200, %land.lhs.true246, %land.lhs.true239
  br i1 %tobool, label %land.lhs.true307, label %if.end321, !dbg !5723

land.lhs.true307:                                 ; preds = %if.end305
  %call = tail call i32 @subreg_lowpart_offset(i32 %ymode, i32 %xmode) #6, !dbg !5725
  %cmp308 = icmp eq i32 %call, %offset, !dbg !5726
  br i1 %cmp308, label %if.then310, label %if.end321, !dbg !5727

if.then310:                                       ; preds = %land.lhs.true307
  %representable_p311 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5728
  store i8 1, i8* %representable_p311, align 4, !dbg !5730
  call void @llvm.dbg.value(metadata i8 1, metadata !5618, metadata !DIExpression()), !dbg !5622
  %cmp315 = icmp eq i32 %nregs_xmode.0, %conv144, !dbg !5731
  %or.cond5 = or i1 %cmp146, %cmp315, !dbg !5733
  br i1 %or.cond5, label %if.then317, label %if.end321, !dbg !5733

if.then317:                                       ; preds = %if.then310
  %offset318 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5734
  store i32 0, i32* %offset318, align 4, !dbg !5736
  %nregs319 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5737
  store i32 %conv144, i32* %nregs319, align 4, !dbg !5738
  br label %cleanup.cont, !dbg !5739

if.end321:                                        ; preds = %if.end305, %if.then310, %land.lhs.true307
  %rknown.2 = phi i8 [ %rknown.1, %if.end305 ], [ 0, %land.lhs.true307 ], [ 1, %if.then310 ], !dbg !5622
  call void @llvm.dbg.value(metadata i8 %rknown.2, metadata !5618, metadata !DIExpression()), !dbg !5622
  %idxprom322 = zext i32 %xmode to i64, !dbg !5740
  %arrayidx323 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom322, !dbg !5740
  %21 = load i8, i8* %arrayidx323, align 1, !dbg !5740
  %arrayidx327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom142, !dbg !5740
  %22 = load i8, i8* %arrayidx327, align 1, !dbg !5740
  %23 = urem i8 %21, %22, !dbg !5740
  %cmp331 = icmp eq i8 %23, 0, !dbg !5740
  br i1 %cmp331, label %cond.end335, label %cond.true333, !dbg !5740

cond.true333:                                     ; preds = %if.end321
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5740
  br label %cond.end335, !dbg !5740

cond.end335:                                      ; preds = %if.end321, %cond.true333
  %rem337 = urem i32 %nregs_xmode.0, %conv144, !dbg !5741
  %cmp338 = icmp eq i32 %rem337, 0, !dbg !5741
  br i1 %cmp338, label %cond.end342, label %cond.true340, !dbg !5741

cond.true340:                                     ; preds = %cond.end335
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5741
  br label %cond.end342, !dbg !5741

cond.end342:                                      ; preds = %cond.end335, %cond.true340
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5613, metadata !DIExpression()), !dbg !5622
  %24 = load i8, i8* %arrayidx323, align 1, !dbg !5742
  %conv347 = zext i8 %24 to i32, !dbg !5742
  %mul348 = shl nuw nsw i32 %conv347, 3, !dbg !5742
  %div351 = udiv i32 %mul348, %nregs_xmode.0, !dbg !5743
  %call352 = tail call i32 @mode_for_size(i32 %div351, i32 2, i32 0) #6, !dbg !5744
  %call353 = tail call i32 @subreg_lowpart_offset(i32 %ymode, i32 %call352) #6, !dbg !5745
  %sub354 = sub i32 %offset, %call353, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %sub354, metadata !5613, metadata !DIExpression()), !dbg !5622
  %25 = load i8, i8* %arrayidx323, align 1, !dbg !5747
  %26 = load i8, i8* %arrayidx327, align 1, !dbg !5748
  %27 = udiv i8 %25, %26, !dbg !5749
  %div363 = zext i8 %27 to i32, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %div363, metadata !5611, metadata !DIExpression()), !dbg !5622
  %cmp364 = icmp ugt i8 %26, %25, !dbg !5750
  br i1 %cmp364, label %cond.true366, label %cond.end368, !dbg !5750

cond.true366:                                     ; preds = %cond.end342
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3225, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5750
  %.pre = load i8, i8* %arrayidx327, align 1, !dbg !5751
  br label %cond.end368, !dbg !5750

cond.end368:                                      ; preds = %cond.end342, %cond.true366
  %28 = phi i8 [ %26, %cond.end342 ], [ %.pre, %cond.true366 ], !dbg !5752
  %conv373 = zext i8 %28 to i32, !dbg !5751
  %div374 = udiv i32 %offset, %conv373, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %div374, metadata !5614, metadata !DIExpression()), !dbg !5622
  %div379 = sdiv i32 %sub354, %conv373, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %div379, metadata !5615, metadata !DIExpression()), !dbg !5622
  %div380 = udiv i32 %nregs_xmode.0, %conv144, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %div380, metadata !5612, metadata !DIExpression()), !dbg !5622
  %rem385 = srem i32 %sub354, %conv373, !dbg !5752
  %cmp386 = icmp eq i32 %rem385, 0, !dbg !5752
  br i1 %cmp386, label %cond.end390, label %cond.true388, !dbg !5752

cond.true388:                                     ; preds = %cond.end368
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5752
  br label %cond.end390, !dbg !5752

cond.end390:                                      ; preds = %cond.end368, %cond.true388
  %rem392 = urem i32 %div363, %div380, !dbg !5756
  %cmp393 = icmp eq i32 %rem392, 0, !dbg !5756
  br i1 %cmp393, label %cond.end397, label %cond.true395, !dbg !5756

cond.true395:                                     ; preds = %cond.end390
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5756
  br label %cond.end397, !dbg !5756

cond.end397:                                      ; preds = %cond.end390, %cond.true395
  %tobool399 = icmp eq i8 %rknown.2, 0, !dbg !5757
  br i1 %tobool399, label %if.then400, label %cond.end397.if.end406_crit_edge, !dbg !5759

cond.end397.if.end406_crit_edge:                  ; preds = %cond.end397
  %.pre6 = udiv i32 %div363, %div380, !dbg !5760
  br label %if.end406, !dbg !5759

if.then400:                                       ; preds = %cond.end397
  %div401 = udiv i32 %div363, %div380, !dbg !5761
  %rem402 = srem i32 %div379, %div401, !dbg !5763
  %tobool403 = icmp eq i32 %rem402, 0, !dbg !5764
  %conv404 = zext i1 %tobool403 to i8, !dbg !5765
  %representable_p405 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5766
  store i8 %conv404, i8* %representable_p405, align 4, !dbg !5767
  call void @llvm.dbg.value(metadata i8 1, metadata !5618, metadata !DIExpression()), !dbg !5622
  br label %if.end406, !dbg !5768

if.end406:                                        ; preds = %cond.end397.if.end406_crit_edge, %if.then400
  %div407.pre-phi = phi i32 [ %.pre6, %cond.end397.if.end406_crit_edge ], [ %div401, %if.then400 ], !dbg !5760
  %div408 = sdiv i32 %div374, %div407.pre-phi, !dbg !5769
  %mul409 = mul nsw i32 %div408, %conv144, !dbg !5770
  %offset410 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5771
  store i32 %mul409, i32* %offset410, align 4, !dbg !5772
  %nregs411 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5773
  store i32 %conv144, i32* %nregs411, align 4, !dbg !5774
  br label %cleanup.cont, !dbg !5775

cleanup.cont:                                     ; preds = %if.then159, %if.then272, %if.then292, %if.then317, %if.end406
  ret void, !dbg !5775
}

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #1

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_regno_offset(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) local_unnamed_addr #4 !dbg !5776 {
entry:
  %info = alloca %struct.subreg_info, align 4
  call void @llvm.dbg.value(metadata i32 %xregno, metadata !5780, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %xmode, metadata !5781, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5782, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %ymode, metadata !5783, metadata !DIExpression()), !dbg !5785
  %0 = bitcast %struct.subreg_info* %info to i8*, !dbg !5786
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5786
  call void @llvm.dbg.value(metadata %struct.subreg_info* %info, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5785
  call void @subreg_get_info(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode, %struct.subreg_info* nonnull %info) #7, !dbg !5787
  %offset1 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5788
  %1 = load i32, i32* %offset1, align 4, !dbg !5788
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5789
  ret i32 %1, !dbg !5790
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @subreg_offset_representable_p(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) local_unnamed_addr #4 !dbg !5791 {
entry:
  %info = alloca %struct.subreg_info, align 4
  call void @llvm.dbg.value(metadata i32 %xregno, metadata !5795, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 %xmode, metadata !5796, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5797, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 %ymode, metadata !5798, metadata !DIExpression()), !dbg !5800
  %0 = bitcast %struct.subreg_info* %info to i8*, !dbg !5801
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5801
  call void @llvm.dbg.value(metadata %struct.subreg_info* %info, metadata !5799, metadata !DIExpression(DW_OP_deref)), !dbg !5800
  call void @subreg_get_info(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode, %struct.subreg_info* nonnull %info) #7, !dbg !5802
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5803
  %1 = load i8, i8* %representable_p, align 4, !dbg !5803
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5804
  ret i8 %1, !dbg !5805
}

; Function Attrs: nounwind uwtable
define dso_local i32 @simplify_subreg_regno(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode) local_unnamed_addr #4 !dbg !5806 {
entry:
  %info = alloca %struct.subreg_info, align 4
  call void @llvm.dbg.value(metadata i32 %xregno, metadata !5810, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %xmode, metadata !5811, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %offset, metadata !5812, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %ymode, metadata !5813, metadata !DIExpression()), !dbg !5816
  %0 = bitcast %struct.subreg_info* %info to i8*, !dbg !5817
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5817
  %idxprom = zext i32 %xmode to i64, !dbg !5818
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5818
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5818
  %cmp = icmp eq i8 %1, 10, !dbg !5820
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5821

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i8 %1, 11, !dbg !5822
  br i1 %cmp5, label %if.end, label %land.lhs.true7, !dbg !5823

land.lhs.true7:                                   ; preds = %land.lhs.true
  %idxprom8 = zext i32 %xregno to i64, !dbg !5824
  %arrayidx9 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom8, !dbg !5824
  %2 = load i32, i32* %arrayidx9, align 4, !dbg !5824
  %call = tail call zeroext i8 @ix86_cannot_change_mode_class(i32 %xmode, i32 %ymode, i32 %2) #6, !dbg !5824
  %tobool = icmp eq i8 %call, 0, !dbg !5824
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5825

if.end:                                           ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %3 = load i32, i32* @reload_completed, align 4, !dbg !5826
  %tobool11 = icmp eq i32 %3, 0, !dbg !5826
  br i1 %tobool11, label %land.lhs.true14, label %lor.lhs.false, !dbg !5828

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !5829
  %tobool13 = icmp eq i8 %4, 0, !dbg !5829
  br i1 %tobool13, label %if.end21, label %land.lhs.true14, !dbg !5830

land.lhs.true14:                                  ; preds = %lor.lhs.false, %if.end
  switch i32 %xregno, label %if.end29 [
    i32 20, label %cleanup
    i32 6, label %cleanup
    i32 16, label %cleanup
    i32 7, label %cleanup
  ], !dbg !5831

if.end21:                                         ; preds = %lor.lhs.false
  switch i32 %xregno, label %if.end29 [
    i32 16, label %cleanup
    i32 7, label %cleanup
  ], !dbg !5832

if.end29:                                         ; preds = %land.lhs.true14, %if.end21
  call void @llvm.dbg.value(metadata %struct.subreg_info* %info, metadata !5814, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @subreg_get_info(i32 %xregno, i32 %xmode, i32 %offset, i32 %ymode, %struct.subreg_info* nonnull %info) #7, !dbg !5833
  %representable_p = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 2, !dbg !5834
  %5 = load i8, i8* %representable_p, align 4, !dbg !5834
  %tobool30 = icmp eq i8 %5, 0, !dbg !5836
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !5837

if.end32:                                         ; preds = %if.end29
  %offset33 = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 0, !dbg !5838
  %6 = load i32, i32* %offset33, align 4, !dbg !5838
  %add = add i32 %6, %xregno, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %add, metadata !5815, metadata !DIExpression()), !dbg !5816
  %cmp34 = icmp ult i32 %add, 53, !dbg !5840
  br i1 %cmp34, label %if.end37, label %cleanup, !dbg !5842

if.end37:                                         ; preds = %if.end32
  %call38 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %add, i32 %ymode) #6, !dbg !5843
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5843
  br i1 %tobool39, label %land.lhs.true40, label %if.end45, !dbg !5845

land.lhs.true40:                                  ; preds = %if.end37
  %call41 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %xregno, i32 %xmode) #6, !dbg !5846
  %tobool43 = icmp eq i8 %call41, 0, !dbg !5846
  br i1 %tobool43, label %if.end45, label %cleanup, !dbg !5847

if.end45:                                         ; preds = %land.lhs.true40, %if.end37
  br label %cleanup, !dbg !5848

cleanup:                                          ; preds = %land.lhs.true7, %land.lhs.true40, %if.end29, %if.end32, %if.end21, %land.lhs.true14, %land.lhs.true14, %land.lhs.true14, %land.lhs.true14, %if.end21, %if.end45
  %retval.0 = phi i32 [ %add, %if.end45 ], [ -1, %land.lhs.true7 ], [ -1, %land.lhs.true14 ], [ -1, %land.lhs.true14 ], [ -1, %land.lhs.true14 ], [ -1, %if.end21 ], [ -1, %land.lhs.true14 ], [ -1, %if.end21 ], [ -1, %if.end29 ], [ -1, %if.end32 ], [ -1, %land.lhs.true40 ], !dbg !5816
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5849
  ret i32 %retval.0, !dbg !5849
}

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @subreg_nregs_with_regno(i32 %regno, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !5850 {
entry:
  %info = alloca %struct.subreg_info, align 4
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5854, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5855, metadata !DIExpression()), !dbg !5858
  %0 = bitcast %struct.subreg_info* %info to i8*, !dbg !5859
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5859
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5860
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5860
  %2 = load i32*, i32** %1, align 8, !dbg !5860
  %bf.load = load i32, i32* %2, align 8, !dbg !5861
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5861
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5861
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5862
  %rt_uint = bitcast %union.rtunion_def* %3 to i32*, !dbg !5862
  %4 = load i32, i32* %rt_uint, align 8, !dbg !5862
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5863
  %bf.load4 = load i32, i32* %5, align 8, !dbg !5863
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !5863
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !5863
  call void @llvm.dbg.value(metadata %struct.subreg_info* %info, metadata !5856, metadata !DIExpression(DW_OP_deref)), !dbg !5858
  call void @subreg_get_info(i32 %regno, i32 %bf.clear, i32 %4, i32 %bf.clear6, %struct.subreg_info* nonnull %info) #7, !dbg !5864
  %nregs = getelementptr inbounds %struct.subreg_info, %struct.subreg_info* %info, i64 0, i32 1, !dbg !5865
  %6 = load i32, i32* %nregs, align 4, !dbg !5865
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #8, !dbg !5866
  ret i32 %6, !dbg !5867
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def* %call_insn, %struct.rtx_def* %boundary) local_unnamed_addr #4 !dbg !5868 {
entry:
  %parm = alloca %struct.parms_set_data, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call_insn, metadata !5872, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %boundary, metadata !5873, metadata !DIExpression()), !dbg !5882
  %0 = bitcast %struct.parms_set_data* %parm to i8*, !dbg !5883
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5883
  %regs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i64 0, i32 1, !dbg !5884
  store i64 0, i64* %regs, align 8, !dbg !5884
  %nregs = getelementptr inbounds %struct.parms_set_data, %struct.parms_set_data* %parm, i64 0, i32 0, !dbg !5885
  store i32 0, i32* %nregs, align 8, !dbg !5886
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call_insn, i64 0, i32 1, !dbg !5887
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !5887
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !5887
  br label %for.cond, !dbg !5889

for.cond:                                         ; preds = %for.inc, %entry
  %1 = phi i32 [ 0, %entry ], [ %12, %for.inc ]
  %2 = phi i64 [ 0, %entry ], [ %13, %for.inc ]
  %p.0.in = phi %struct.rtx_def** [ %rt_rtx, %entry ], [ %rt_rtx52, %for.inc ]
  %p.0 = load %struct.rtx_def*, %struct.rtx_def** %p.0.in, align 8, !dbg !5890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %p.0, metadata !5875, metadata !DIExpression()), !dbg !5882
  %tobool = icmp eq %struct.rtx_def* %p.0, null, !dbg !5891
  br i1 %tobool, label %while.cond.preheader, label %for.body, !dbg !5891

while.cond.preheader:                             ; preds = %for.cond
  %.lcssa5 = phi i32 [ %1, %for.cond ]
  br label %while.cond, !dbg !5892

for.body:                                         ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5893
  %3 = bitcast %union.rtunion_def* %arrayidx3 to i32**, !dbg !5893
  %4 = load i32*, i32** %3, align 8, !dbg !5893
  %bf.load = load i32, i32* %4, align 8, !dbg !5893
  %bf.clear = and i32 %bf.load, 65535, !dbg !5893
  %cmp = icmp eq i32 %bf.clear, 24, !dbg !5896
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !5897

land.lhs.true:                                    ; preds = %for.body
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5898
  %arrayidx11 = getelementptr inbounds i32, i32* %4, i64 2, !dbg !5898
  %5 = bitcast i32* %arrayidx11 to i32**, !dbg !5898
  %6 = load i32*, i32** %5, align 8, !dbg !5898
  %bf.load13 = load i32, i32* %6, align 8, !dbg !5898
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5898
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !5898
  br i1 %cmp15, label %if.then, label %for.inc, !dbg !5899

if.then:                                          ; preds = %land.lhs.true
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !5899
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !5900
  %cmp24 = icmp ult i32 %call, 53, !dbg !5900
  br i1 %cmp24, label %cond.end, label %cond.true, !dbg !5900

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5900
  br label %cond.end, !dbg !5900

cond.end:                                         ; preds = %if.then, %cond.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !5902
  %arrayidx31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5902
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5902
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5902
  %call33 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %9) #7, !dbg !5902
  %call34 = tail call zeroext i8 @ix86_function_arg_regno_p(i32 %call33) #6, !dbg !5902
  %tobool35 = icmp eq i8 %call34, 0, !dbg !5902
  br i1 %tobool35, label %for.inc, label %if.end, !dbg !5904

if.end:                                           ; preds = %cond.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !5905
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5905
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !5905
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !5905
  %call45 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !5905
  %sh_prom = zext i32 %call45 to i64, !dbg !5905
  %shl = shl i64 1, %sh_prom, !dbg !5905
  %or = or i64 %2, %shl, !dbg !5905
  store i64 %or, i64* %regs, align 8, !dbg !5905
  %inc = add nsw i32 %1, 1, !dbg !5906
  store i32 %inc, i32* %nregs, align 8, !dbg !5906
  br label %for.inc, !dbg !5907

for.inc:                                          ; preds = %cond.end, %for.body, %land.lhs.true, %if.end
  %12 = phi i32 [ %1, %cond.end ], [ %1, %for.body ], [ %1, %land.lhs.true ], [ %inc, %if.end ]
  %13 = phi i64 [ %2, %cond.end ], [ %2, %for.body ], [ %2, %land.lhs.true ], [ %or, %if.end ]
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %p.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5908
  %rt_rtx52 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5908
  br label %for.cond, !dbg !5909, !llvm.loop !5910

while.cond:                                       ; preds = %while.cond.preheader, %if.end99
  %15 = phi i32 [ %22, %if.end99 ], [ %.lcssa5, %while.cond.preheader ], !dbg !5912
  %before.0 = phi %struct.rtx_def* [ %17, %if.end99 ], [ %call_insn, %while.cond.preheader ], !dbg !5882
  %first_set.0 = phi %struct.rtx_def* [ %first_set.2, %if.end99 ], [ %call_insn, %while.cond.preheader ], !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.0, metadata !5877, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %before.0, metadata !5876, metadata !DIExpression()), !dbg !5882
  %tobool54 = icmp ne i32 %15, 0, !dbg !5913
  %cmp55 = icmp ne %struct.rtx_def* %before.0, %boundary, !dbg !5914
  %spec.select = and i1 %cmp55, %tobool54, !dbg !5915
  br i1 %spec.select, label %while.body, label %while.end.loopexit, !dbg !5892

while.body:                                       ; preds = %while.cond
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %before.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5916
  %rt_rtx59 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !5916
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !5916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !5876, metadata !DIExpression()), !dbg !5882
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !5917
  %bf.load60 = load i32, i32* %18, align 8, !dbg !5917
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !5917
  %cmp62 = icmp eq i32 %bf.clear61, 10, !dbg !5917
  br i1 %cmp62, label %while.end.loopexit, label %if.end64, !dbg !5919

if.end64:                                         ; preds = %while.body
  %cmp67 = icmp eq i32 %bf.clear61, 12, !dbg !5920
  br i1 %cmp67, label %if.then68, label %if.end74, !dbg !5922

if.then68:                                        ; preds = %if.end64
  %first_set.0.lcssa4 = phi %struct.rtx_def* [ %first_set.0, %if.end64 ], !dbg !5882
  %.lcssa = phi %struct.rtx_def* [ %17, %if.end64 ], !dbg !5916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.0.lcssa4, metadata !5877, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.0.lcssa4, metadata !5877, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.0.lcssa4, metadata !5877, metadata !DIExpression()), !dbg !5882
  %cmp69 = icmp eq %struct.rtx_def* %.lcssa, %boundary, !dbg !5923
  br i1 %cmp69, label %while.end, label %cond.true70, !dbg !5923

cond.true70:                                      ; preds = %if.then68
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3440, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5923
  br label %while.end, !dbg !5923

if.end74:                                         ; preds = %if.end64
  %cmp77 = icmp eq i32 %bf.clear61, 8, !dbg !5925
  br i1 %cmp77, label %if.then89, label %lor.lhs.false, !dbg !5925

lor.lhs.false:                                    ; preds = %if.end74
  %cmp80 = icmp eq i32 %bf.clear61, 7, !dbg !5925
  br i1 %cmp80, label %if.then89, label %lor.lhs.false81, !dbg !5925

lor.lhs.false81:                                  ; preds = %lor.lhs.false
  %cmp84 = icmp eq i32 %bf.clear61, 9, !dbg !5925
  br i1 %cmp84, label %if.then89, label %lor.lhs.false85, !dbg !5925

lor.lhs.false85:                                  ; preds = %lor.lhs.false81
  br i1 false, label %lor.lhs.false85.if.then89_crit_edge, label %if.end99, !dbg !5926

lor.lhs.false85.if.then89_crit_edge:              ; preds = %lor.lhs.false85
  br label %if.then89, !dbg !5926

if.then89:                                        ; preds = %lor.lhs.false85.if.then89_crit_edge, %lor.lhs.false81, %lor.lhs.false, %if.end74
  call void @llvm.dbg.value(metadata i32 %15, metadata !5878, metadata !DIExpression()), !dbg !5927
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !5928
  %19 = getelementptr inbounds %union.u, %union.u* %u91, i64 1, i32 0, i32 0, i64 0, !dbg !5928
  %rt_rtx94 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5928
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !5928
  call void @note_stores(%struct.rtx_def* %20, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @parms_set, i8* nonnull %0) #7, !dbg !5929
  %21 = load i32, i32* %nregs, align 8, !dbg !5930
  %cmp96 = icmp ne i32 %15, %21, !dbg !5932
  %first_set.1 = select i1 %cmp96, %struct.rtx_def* %17, %struct.rtx_def* %first_set.0, !dbg !5933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.1, metadata !5877, metadata !DIExpression()), !dbg !5882
  br i1 %cmp96, label %if.end99, label %while.end.loopexit

if.end99:                                         ; preds = %if.then89, %lor.lhs.false85
  %22 = phi i32 [ %15, %lor.lhs.false85 ], [ %21, %if.then89 ]
  %first_set.2 = phi %struct.rtx_def* [ %first_set.0, %lor.lhs.false85 ], [ %first_set.1, %if.then89 ], !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.2, metadata !5877, metadata !DIExpression()), !dbg !5882
  br label %while.cond, !dbg !5892, !llvm.loop !5934

while.end.loopexit:                               ; preds = %while.cond, %while.body, %if.then89
  %first_set.3.ph = phi %struct.rtx_def* [ %first_set.0, %while.body ], [ %first_set.0, %while.cond ], [ %first_set.1, %if.then89 ]
  br label %while.end, !dbg !5936

while.end:                                        ; preds = %while.end.loopexit, %cond.true70, %if.then68
  %first_set.3 = phi %struct.rtx_def* [ %first_set.0.lcssa4, %if.then68 ], [ %first_set.0.lcssa4, %cond.true70 ], [ %first_set.3.ph, %while.end.loopexit ], !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.3, metadata !5877, metadata !DIExpression()), !dbg !5882
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5936
  ret %struct.rtx_def* %first_set.3, !dbg !5937
}

declare dso_local zeroext i8 @ix86_function_arg_regno_p(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @parms_set(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #4 !dbg !5938 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5940, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5941, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.value(metadata i8* %data, metadata !5942, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.value(metadata i8* %data, metadata !5943, metadata !DIExpression()), !dbg !5945
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5946
  %bf.load = load i32, i32* %0, align 8, !dbg !5946
  %bf.clear = and i32 %bf.load, 65535, !dbg !5946
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5946
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5948

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !5949
  %cmp1 = icmp ult i32 %call, 53, !dbg !5950
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !5951

land.lhs.true2:                                   ; preds = %land.lhs.true
  %regs = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5952
  %1 = bitcast i8* %regs to i64*, !dbg !5952
  %2 = load i64, i64* %1, align 8, !dbg !5952
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !5952
  %sh_prom = zext i32 %call3 to i64, !dbg !5952
  %shl = shl i64 1, %sh_prom, !dbg !5952
  %and = and i64 %2, %shl, !dbg !5952
  %tobool = icmp eq i64 %and, 0, !dbg !5952
  br i1 %tobool, label %if.end, label %if.then, !dbg !5953

if.then:                                          ; preds = %land.lhs.true2
  %call4 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !5954
  %sh_prom5 = zext i32 %call4 to i64, !dbg !5954
  %shl6 = shl i64 1, %sh_prom5, !dbg !5954
  %neg = xor i64 %shl6, -1, !dbg !5954
  %3 = load i64, i64* %1, align 8, !dbg !5954
  %and8 = and i64 %3, %neg, !dbg !5954
  store i64 %and8, i64* %1, align 8, !dbg !5954
  %nregs = bitcast i8* %data to i32*, !dbg !5956
  %4 = load i32, i32* %nregs, align 8, !dbg !5957
  %dec = add nsw i32 %4, -1, !dbg !5957
  store i32 %dec, i32* %nregs, align 8, !dbg !5957
  br label %if.end, !dbg !5958

if.end:                                           ; preds = %land.lhs.true2, %if.then, %land.lhs.true, %entry
  ret void, !dbg !5959
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @keep_with_call_p(%struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5962, metadata !DIExpression()), !dbg !5969
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5970
  %bf.load = load i32, i32* %0, align 8, !dbg !5970
  %bf.clear = and i32 %bf.load, 65535, !dbg !5970
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5970
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5970

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5970
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !5970

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5970
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !5970

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5970
  br i1 %cmp11, label %land.lhs.true, label %if.end124, !dbg !5971

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br i1 %cmp, label %cond.true, label %lor.lhs.false15, !dbg !5972

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %cmp18 = icmp eq i32 %bf.clear, 7, !dbg !5972
  br i1 %cmp18, label %cond.true, label %lor.lhs.false19, !dbg !5972

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear, 9, !dbg !5972
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !5972

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %cmp26 = icmp eq i32 %bf.clear, 10, !dbg !5972
  br i1 %cmp26, label %cond.true, label %cond.end40, !dbg !5972

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5972
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5972
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !5972
  %3 = load i32*, i32** %2, align 8, !dbg !5972
  %bf.load27 = load i32, i32* %3, align 8, !dbg !5972
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !5972
  %cmp29 = icmp eq i32 %bf.clear28, 23, !dbg !5972
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !5972
  br i1 %cmp29, label %cond.end40, label %cond.false, !dbg !5972

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #7, !dbg !5972
  br label %cond.end40, !dbg !5972

cond.end40:                                       ; preds = %lor.lhs.false23, %cond.false, %cond.true
  %cond41 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false23 ], !dbg !5972
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond41, metadata !5963, metadata !DIExpression()), !dbg !5969
  %cmp42 = icmp eq %struct.rtx_def* %cond41, null, !dbg !5973
  br i1 %cmp42, label %if.end124, label %if.then, !dbg !5974

if.then:                                          ; preds = %cond.end40
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond41, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5975
  %5 = bitcast %union.rtunion_def* %arrayidx45 to i32**, !dbg !5975
  %6 = load i32*, i32** %5, align 8, !dbg !5975
  %bf.load47 = load i32, i32* %6, align 8, !dbg !5975
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !5975
  %cmp49 = icmp eq i32 %bf.clear48, 37, !dbg !5975
  br i1 %cmp49, label %land.lhs.true50, label %if.end, !dbg !5977

land.lhs.true50:                                  ; preds = %if.then
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !5977
  %call55 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %7) #7, !dbg !5978
  %cmp56 = icmp ult i32 %call55, 53, !dbg !5979
  br i1 %cmp56, label %land.lhs.true57, label %if.end, !dbg !5980

land.lhs.true57:                                  ; preds = %land.lhs.true50
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !5978
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !5981
  %call62 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !5981
  %idxprom = zext i32 %call62 to i64, !dbg !5982
  %arrayidx63 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !5982
  %9 = load i8, i8* %arrayidx63, align 1, !dbg !5982
  %tobool = icmp eq i8 %9, 0, !dbg !5982
  br i1 %tobool, label %if.end, label %land.lhs.true64, !dbg !5983

land.lhs.true64:                                  ; preds = %land.lhs.true57
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond41, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5984
  %rt_rtx68 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5984
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !5984
  %call69 = tail call i32 @general_operand(%struct.rtx_def* %11, i32 0) #6, !dbg !5985
  %tobool70 = icmp eq i32 %call69, 0, !dbg !5985
  br i1 %tobool70, label %if.end, label %cleanup125, !dbg !5986

if.end:                                           ; preds = %land.lhs.true64, %land.lhs.true57, %land.lhs.true50, %if.then
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond41, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5987
  %13 = bitcast %union.rtunion_def* %12 to i32**, !dbg !5987
  %14 = load i32*, i32** %13, align 8, !dbg !5987
  %bf.load76 = load i32, i32* %14, align 8, !dbg !5987
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !5987
  %cmp78 = icmp eq i32 %bf.clear77, 37, !dbg !5987
  br i1 %cmp78, label %land.lhs.true80, label %if.end107, !dbg !5989

land.lhs.true80:                                  ; preds = %if.end
  %15 = bitcast i32* %14 to %struct.rtx_def*, !dbg !5989
  %call85 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %15) #7, !dbg !5990
  %call86 = tail call zeroext i8 @ix86_function_value_regno_p(i32 %call85) #6, !dbg !5990
  %tobool88 = icmp eq i8 %call86, 0, !dbg !5990
  br i1 %tobool88, label %if.end107, label %land.lhs.true89, !dbg !5991

land.lhs.true89:                                  ; preds = %land.lhs.true80
  %16 = load i32*, i32** %5, align 8, !dbg !5992
  %bf.load94 = load i32, i32* %16, align 8, !dbg !5992
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !5992
  %cmp96 = icmp eq i32 %bf.clear95, 37, !dbg !5992
  br i1 %cmp96, label %land.lhs.true98, label %if.end107, !dbg !5993

land.lhs.true98:                                  ; preds = %land.lhs.true89
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5993
  %call103 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !5994
  %cmp104 = icmp ugt i32 %call103, 52, !dbg !5995
  br i1 %cmp104, label %cleanup125, label %if.end107, !dbg !5996

if.end107:                                        ; preds = %land.lhs.true80, %land.lhs.true98, %land.lhs.true89, %if.end
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !5997
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !5997
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5998
  %cmp112 = icmp eq %struct.rtx_def* %18, %19, !dbg !5999
  br i1 %cmp112, label %if.then114, label %if.end124, !dbg !6000

if.then114:                                       ; preds = %if.end107
  %call115 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) #6, !dbg !6001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call115, metadata !5964, metadata !DIExpression()), !dbg !6002
  %tobool116 = icmp eq %struct.rtx_def* %call115, null, !dbg !6003
  br i1 %tobool116, label %if.end122, label %land.lhs.true117, !dbg !6005

land.lhs.true117:                                 ; preds = %if.then114
  %call118 = tail call zeroext i8 @keep_with_call_p(%struct.rtx_def* nonnull %call115) #7, !dbg !6006
  %tobool120 = icmp eq i8 %call118, 0, !dbg !6006
  br i1 %tobool120, label %if.end122, label %cleanup, !dbg !6007

if.end122:                                        ; preds = %land.lhs.true117, %if.then114
  br label %cleanup, !dbg !6008

cleanup:                                          ; preds = %land.lhs.true117, %if.end122
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end122 ], [ false, %land.lhs.true117 ]
  br i1 %cleanup.dest.slot.0, label %if.end124, label %cleanup125

if.end124:                                        ; preds = %cond.end40, %if.end107, %cleanup, %lor.lhs.false8
  br label %cleanup125, !dbg !6009

cleanup125:                                       ; preds = %land.lhs.true64, %land.lhs.true98, %cleanup, %if.end124
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end124 ], [ 1, %land.lhs.true64 ], [ 1, %land.lhs.true98 ], !dbg !5969
  ret i8 %retval.1, !dbg !6010
}

declare dso_local i32 @general_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @ix86_function_value_regno_p(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @label_is_jump_target_p(%struct.rtx_def* %label, %struct.rtx_def* %jump_insn) local_unnamed_addr #4 !dbg !6011 {
entry:
  %tmp = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !6015, metadata !DIExpression()), !dbg !6023
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump_insn, metadata !6016, metadata !DIExpression()), !dbg !6023
  %0 = bitcast %struct.rtx_def** %tmp to i8*, !dbg !6024
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6024
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump_insn, i64 0, i32 1, !dbg !6025
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !6025
  %1 = bitcast %struct.object_block** %arrayidx to i64*, !dbg !6025
  %2 = load i64, i64* %1, align 8, !dbg !6025
  %3 = bitcast %struct.rtx_def** %tmp to i64*, !dbg !6026
  store i64 %2, i64* %3, align 8, !dbg !6026
  %.cast = inttoptr i64 %2 to %struct.rtx_def*, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.cast, metadata !6017, metadata !DIExpression()), !dbg !6023
  %cmp = icmp eq %struct.rtx_def* %.cast, %label, !dbg !6029
  br i1 %cmp, label %cleanup33, label %if.end, !dbg !6030

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tmp, metadata !6017, metadata !DIExpression(DW_OP_deref)), !dbg !6023
  %call = call zeroext i8 @tablejump_p(%struct.rtx_def* %jump_insn, %struct.rtx_def** null, %struct.rtx_def** nonnull %tmp) #7, !dbg !6031
  %tobool = icmp eq i8 %call, 0, !dbg !6031
  br i1 %tobool, label %if.end28, label %if.then1, !dbg !6032

if.then1:                                         ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6017, metadata !DIExpression()), !dbg !6023
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, !dbg !6033
  %5 = getelementptr inbounds %union.u, %union.u* %u2, i64 1, i32 0, i32 0, i64 0, !dbg !6033
  %rt_rtx5 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !6033
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6033
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !6033
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6017, metadata !DIExpression()), !dbg !6023
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !6033
  %bf.load = load i32, i32* %7, align 8, !dbg !6033
  %bf.clear = and i32 %bf.load, 65535, !dbg !6033
  %cmp12 = icmp eq i32 %bf.clear, 21, !dbg !6033
  %idxprom = zext i1 %cmp12 to i64, !dbg !6033
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 %idxprom, !dbg !6033
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !6033
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %8, metadata !6018, metadata !DIExpression()), !dbg !6034
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !6035
  %9 = load i32, i32* %num_elem, align 8, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %9, metadata !6022, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i32 0, metadata !6021, metadata !DIExpression()), !dbg !6034
  %10 = sext i32 %9 to i64, !dbg !6036
  br label %for.cond, !dbg !6036

for.cond:                                         ; preds = %for.inc, %if.then1
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then1 ], !dbg !6038
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6021, metadata !DIExpression()), !dbg !6034
  %cmp14 = icmp slt i64 %indvars.iv, %10, !dbg !6039
  br i1 %cmp14, label %for.body, label %cleanup, !dbg !6041

for.body:                                         ; preds = %for.cond
  %arrayidx17 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !6042
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8, !dbg !6042
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6042
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !6042
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !6042
  %cmp22 = icmp eq %struct.rtx_def* %12, %label, !dbg !6044
  br i1 %cmp22, label %cleanup, label %for.inc, !dbg !6045

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6046
  call void @llvm.dbg.value(metadata i32 undef, metadata !6021, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6034
  br label %for.cond, !dbg !6047, !llvm.loop !6048

cleanup:                                          ; preds = %for.cond, %for.body
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body ], [ true, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %if.end28, label %cleanup33

if.end28:                                         ; preds = %if.end, %cleanup
  %call29 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %jump_insn, i32 9, %struct.rtx_def* %label) #7, !dbg !6050
  %tobool30 = icmp ne %struct.rtx_def* %call29, null, !dbg !6050
  %. = zext i1 %tobool30 to i8, !dbg !6023
  br label %cleanup33, !dbg !6023

cleanup33:                                        ; preds = %if.end28, %entry, %cleanup
  %retval.1 = phi i8 [ 1, %cleanup ], [ 1, %entry ], [ %., %if.end28 ], !dbg !6023
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6052
  ret i8 %retval.1, !dbg !6052
}

; Function Attrs: nounwind uwtable
define dso_local i32 @rtx_cost(%struct.rtx_def* %x, i32 %outer_code, i8 zeroext %speed) local_unnamed_addr #4 !dbg !6053 {
entry:
  %total = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6057, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i32 %outer_code, metadata !6058, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.value(metadata i8 %speed, metadata !6059, metadata !DIExpression()), !dbg !6065
  %0 = bitcast i32* %total to i8*, !dbg !6066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6066
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !6067
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6069

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6070
  %bf.load = load i32, i32* %1, align 8, !dbg !6070
  %bf.clear = and i32 %bf.load, 65535, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6062, metadata !DIExpression()), !dbg !6065
  %trunc = trunc i32 %bf.load to i16, !dbg !6071
  switch i16 %trunc, label %sw.default [
    i16 52, label %sw.bb
    i16 55, label %sw.bb1
    i16 59, label %sw.bb1
    i16 58, label %sw.bb1
    i16 60, label %sw.bb1
    i16 24, label %sw.bb2
  ], !dbg !6071

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 20, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 20, i32* %total, align 4, !dbg !6072
  br label %sw.epilog, !dbg !6074

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  call void @llvm.dbg.value(metadata i32 28, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 28, i32* %total, align 4, !dbg !6075
  br label %sw.epilog, !dbg !6076

sw.bb2:                                           ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 0, i32* %total, align 4, !dbg !6077
  br label %sw.epilog, !dbg !6078

sw.default:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 4, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 4, i32* %total, align 4, !dbg !6079
  br label %sw.epilog, !dbg !6080

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  switch i16 %trunc, label %sw.default17 [
    i16 37, label %cleanup
    i16 39, label %sw.bb4
  ], !dbg !6081

sw.bb4:                                           ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata i32 0, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 0, i32* %total, align 4, !dbg !6082
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6084
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !6084
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6084
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !6084
  %3 = load i32*, i32** %2, align 8, !dbg !6084
  %bf.load7 = load i32, i32* %3, align 8, !dbg !6084
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !6084
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !6084
  %call = tail call zeroext i8 @ix86_modes_tieable_p(i32 %bf.clear6, i32 %bf.clear9) #6, !dbg !6084
  %tobool = icmp eq i8 %call, 0, !dbg !6084
  br i1 %tobool, label %if.then10, label %sw.epilog22, !dbg !6086

if.then10:                                        ; preds = %sw.bb4
  %bf.load11 = load i32, i32* %1, align 8, !dbg !6087
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !6087
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !6087
  %idxprom = zext i32 %bf.clear13 to i64, !dbg !6087
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6087
  %4 = load i8, i8* %arrayidx14, align 1, !dbg !6087
  %5 = lshr i8 %4, 2, !dbg !6087
  %narrow = add nuw nsw i8 %5, 2, !dbg !6087
  %add = zext i8 %narrow to i32, !dbg !6087
  %mul = shl nuw nsw i32 %add, 2, !dbg !6087
  br label %cleanup, !dbg !6088

sw.default17:                                     ; preds = %sw.epilog
  %6 = load i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 60), align 8, !dbg !6089
  call void @llvm.dbg.value(metadata i32* %total, metadata !6064, metadata !DIExpression(DW_OP_deref)), !dbg !6065
  %call18 = call zeroext i8 %6(%struct.rtx_def* nonnull %x, i32 %bf.clear, i32 %outer_code, i32* nonnull %total, i8 zeroext %speed) #6, !dbg !6091
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6091
  br i1 %tobool19, label %sw.epilog22, label %if.then20, !dbg !6092

if.then20:                                        ; preds = %sw.default17
  %7 = load i32, i32* %total, align 4, !dbg !6093
  call void @llvm.dbg.value(metadata i32 %7, metadata !6064, metadata !DIExpression()), !dbg !6065
  br label %cleanup, !dbg !6094

sw.epilog22:                                      ; preds = %sw.default17, %sw.bb4
  %idxprom23 = zext i32 %bf.clear to i64, !dbg !6095
  %arrayidx24 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom23, !dbg !6095
  %8 = load i8*, i8** %arrayidx24, align 8, !dbg !6095
  call void @llvm.dbg.value(metadata i8* %8, metadata !6063, metadata !DIExpression()), !dbg !6065
  %arrayidx26 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom23, !dbg !6096
  %9 = load i8, i8* %arrayidx26, align 1, !dbg !6096
  call void @llvm.dbg.value(metadata i8 %9, metadata !6060, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6065
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6098
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !6098
  %10 = zext i8 %9 to i64, !dbg !6104
  br label %for.cond, !dbg !6104

for.cond:                                         ; preds = %for.inc68, %sw.epilog22
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc68 ], [ %10, %sw.epilog22 ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !6105
  call void @llvm.dbg.value(metadata i32 undef, metadata !6060, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6065
  %cmp28 = icmp sgt i64 %indvars.iv2, 0, !dbg !6106
  br i1 %cmp28, label %for.body, label %for.end69, !dbg !6107

for.body:                                         ; preds = %for.cond
  %arrayidx31 = getelementptr inbounds i8, i8* %8, i64 %indvars.iv.next3, !dbg !6108
  %11 = load i8, i8* %arrayidx31, align 1, !dbg !6108
  %cmp33 = icmp eq i8 %11, 101, !dbg !6109
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !6110

if.then35:                                        ; preds = %for.body
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 %indvars.iv.next3, !dbg !6111
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !6111
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !6111
  %call41 = call i32 @rtx_cost(%struct.rtx_def* %12, i32 %bf.clear, i8 zeroext %speed) #7, !dbg !6112
  %13 = load i32, i32* %total, align 4, !dbg !6113
  call void @llvm.dbg.value(metadata i32 %13, metadata !6064, metadata !DIExpression()), !dbg !6065
  %add42 = add nsw i32 %13, %call41, !dbg !6113
  call void @llvm.dbg.value(metadata i32 %add42, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 %add42, i32* %total, align 4, !dbg !6113
  br label %for.inc68, !dbg !6114

if.else:                                          ; preds = %for.body
  %cmp46 = icmp eq i8 %11, 69, !dbg !6115
  br i1 %cmp46, label %for.cond49.preheader, label %for.inc68, !dbg !6116

for.cond49.preheader:                             ; preds = %if.else
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 %indvars.iv.next3, !dbg !6098
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtvec_def**, !dbg !6098
  br label %for.cond49, !dbg !6117

for.cond49:                                       ; preds = %for.cond49.preheader, %for.body56
  %indvars.iv = phi i64 [ 0, %for.cond49.preheader ], [ %indvars.iv.next, %for.body56 ], !dbg !6118
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6061, metadata !DIExpression()), !dbg !6065
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6119
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 0, !dbg !6119
  %15 = load i32, i32* %num_elem, align 8, !dbg !6119
  %16 = sext i32 %15 to i64, !dbg !6120
  %cmp54 = icmp slt i64 %indvars.iv, %16, !dbg !6120
  br i1 %cmp54, label %for.body56, label %for.inc68.loopexit, !dbg !6117

for.body56:                                       ; preds = %for.cond49
  %arrayidx63 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv, !dbg !6121
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx63, align 8, !dbg !6121
  %call64 = call i32 @rtx_cost(%struct.rtx_def* %17, i32 %bf.clear, i8 zeroext %speed) #7, !dbg !6122
  %18 = load i32, i32* %total, align 4, !dbg !6123
  call void @llvm.dbg.value(metadata i32 %18, metadata !6064, metadata !DIExpression()), !dbg !6065
  %add65 = add nsw i32 %18, %call64, !dbg !6123
  call void @llvm.dbg.value(metadata i32 %add65, metadata !6064, metadata !DIExpression()), !dbg !6065
  store i32 %add65, i32* %total, align 4, !dbg !6123
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 undef, metadata !6061, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6065
  br label %for.cond49, !dbg !6125, !llvm.loop !6126

for.inc68.loopexit:                               ; preds = %for.cond49
  br label %for.inc68, !dbg !6128

for.inc68:                                        ; preds = %for.inc68.loopexit, %if.then35, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !6060, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6065
  br label %for.cond, !dbg !6128, !llvm.loop !6129

for.end69:                                        ; preds = %for.cond
  %19 = load i32, i32* %total, align 4, !dbg !6131
  call void @llvm.dbg.value(metadata i32 %19, metadata !6064, metadata !DIExpression()), !dbg !6065
  br label %cleanup, !dbg !6132

cleanup:                                          ; preds = %sw.epilog, %entry, %for.end69, %if.then20, %if.then10
  %retval.0 = phi i32 [ %7, %if.then20 ], [ %19, %for.end69 ], [ %mul, %if.then10 ], [ 0, %entry ], [ 0, %sw.epilog ], !dbg !6065
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6133
  ret i32 %retval.0, !dbg !6133
}

declare dso_local zeroext i8 @ix86_modes_tieable_p(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @address_cost(%struct.rtx_def* %x, i32 %mode, i8 zeroext %as, i8 zeroext %speed) local_unnamed_addr #4 !dbg !6134 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6139, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6140, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8 %as, metadata !6141, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8 %speed, metadata !6142, metadata !DIExpression()), !dbg !6143
  %call = tail call i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %x, i8 zeroext %as) #6, !dbg !6144
  %tobool = icmp eq i32 %call, 0, !dbg !6144
  br i1 %tobool, label %return, label %if.end, !dbg !6146

if.end:                                           ; preds = %entry
  %0 = load i32 (%struct.rtx_def*, i8)*, i32 (%struct.rtx_def*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 61), align 8, !dbg !6147
  %call1 = tail call i32 %0(%struct.rtx_def* %x, i8 zeroext %speed) #6, !dbg !6148
  br label %return, !dbg !6149

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call1, %if.end ], [ 1000, %entry ], !dbg !6143
  ret i32 %retval.0, !dbg !6150
}

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @default_address_cost(%struct.rtx_def* %x, i8 zeroext %speed) local_unnamed_addr #4 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6155, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8 %speed, metadata !6156, metadata !DIExpression()), !dbg !6157
  %call = tail call i32 @rtx_cost(%struct.rtx_def* %x, i32 43, i8 zeroext %speed) #7, !dbg !6158
  ret i32 %call, !dbg !6159
}

; Function Attrs: nounwind uwtable
define dso_local i64 @nonzero_bits(%struct.rtx_def* %x, i32 %mode) local_unnamed_addr #4 !dbg !6160 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6165, metadata !DIExpression()), !dbg !6166
  %call = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* null, i32 0, i64 0) #7, !dbg !6167
  ret i64 %call, !dbg !6168
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) unnamed_addr #4 !dbg !6169 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6173, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6174, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata %struct.rtx_def* %known_x, metadata !6175, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i32 %known_mode, metadata !6176, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i64 %known_ret, metadata !6177, metadata !DIExpression()), !dbg !6182
  %cmp = icmp eq %struct.rtx_def* %x, %known_x, !dbg !6183
  %cmp1 = icmp eq i32 %mode, %known_mode, !dbg !6185
  %or.cond = and i1 %cmp, %cmp1, !dbg !6186
  br i1 %or.cond, label %return, label %if.end, !dbg !6186

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6187
  %bf.load = load i32, i32* %0, align 8, !dbg !6187
  %bf.clear = and i32 %bf.load, 65535, !dbg !6187
  %idxprom = zext i32 %bf.clear to i64, !dbg !6187
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6187
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6187
  %and = and i32 %1, -2, !dbg !6187
  %cmp2 = icmp eq i32 %and, 2, !dbg !6187
  br i1 %cmp2, label %if.then3, label %if.end57, !dbg !6188

if.then3:                                         ; preds = %if.end
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6189
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !6189
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6178, metadata !DIExpression()), !dbg !6190
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6191
  %rt_rtx8 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6191
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6181, metadata !DIExpression()), !dbg !6190
  %cmp9 = icmp eq %struct.rtx_def* %2, %4, !dbg !6192
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6194

if.then10:                                        ; preds = %if.then3
  %call = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %2, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6195
  %call11 = tail call fastcc i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %2, i32 %mode, i64 %call) #7, !dbg !6196
  br label %cleanup, !dbg !6197

if.end12:                                         ; preds = %if.then3
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !6198
  %bf.load13 = load i32, i32* %5, align 8, !dbg !6198
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6198
  %idxprom15 = zext i32 %bf.clear14 to i64, !dbg !6198
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !6198
  %6 = load i32, i32* %arrayidx16, align 4, !dbg !6198
  %and17 = and i32 %6, -2, !dbg !6198
  %cmp18 = icmp eq i32 %and17, 2, !dbg !6198
  br i1 %cmp18, label %land.lhs.true19, label %if.end33, !dbg !6200

land.lhs.true19:                                  ; preds = %if.end12
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6201
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6201
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6201
  %cmp24 = icmp eq %struct.rtx_def* %4, %7, !dbg !6202
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !6203

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6204
  %rt_rtx28 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6204
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !6204
  %cmp29 = icmp eq %struct.rtx_def* %4, %9, !dbg !6205
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !6206

if.then30:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %call31 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %4, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6207
  %call32 = tail call fastcc i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %4, i32 %mode, i64 %call31) #7, !dbg !6208
  br label %cleanup, !dbg !6209

if.end33:                                         ; preds = %lor.lhs.false, %if.end12
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6210
  %bf.load34 = load i32, i32* %10, align 8, !dbg !6210
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6210
  %idxprom36 = zext i32 %bf.clear35 to i64, !dbg !6210
  %arrayidx37 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom36, !dbg !6210
  %11 = load i32, i32* %arrayidx37, align 4, !dbg !6210
  %and38 = and i32 %11, -2, !dbg !6210
  %cmp39 = icmp eq i32 %and38, 2, !dbg !6210
  br i1 %cmp39, label %land.lhs.true40, label %cleanup, !dbg !6212

land.lhs.true40:                                  ; preds = %if.end33
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6213
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !6213
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !6213
  %cmp45 = icmp eq %struct.rtx_def* %2, %12, !dbg !6214
  br i1 %cmp45, label %if.then52, label %lor.lhs.false46, !dbg !6215

lor.lhs.false46:                                  ; preds = %land.lhs.true40
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6216
  %rt_rtx50 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6216
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !6216
  %cmp51 = icmp eq %struct.rtx_def* %2, %14, !dbg !6217
  br i1 %cmp51, label %if.then52, label %cleanup, !dbg !6218

if.then52:                                        ; preds = %lor.lhs.false46, %land.lhs.true40
  %call53 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %2, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6219
  %call54 = tail call fastcc i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %2, i32 %mode, i64 %call53) #7, !dbg !6220
  br label %cleanup, !dbg !6221

cleanup:                                          ; preds = %if.end33, %lor.lhs.false46, %if.then52, %if.then30, %if.then10
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then10 ], [ false, %if.then30 ], [ false, %if.then52 ], [ true, %lor.lhs.false46 ], [ true, %if.end33 ]
  %retval.0 = phi i64 [ %call11, %if.then10 ], [ %call32, %if.then30 ], [ %call54, %if.then52 ], [ undef, %lor.lhs.false46 ], [ undef, %if.end33 ]
  br i1 %cleanup.dest.slot.0, label %if.end57, label %return

if.end57:                                         ; preds = %cleanup, %if.end
  %call58 = tail call fastcc i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6222
  br label %return, !dbg !6223

return:                                           ; preds = %cleanup, %entry, %if.end57
  %retval.1 = phi i64 [ %retval.0, %cleanup ], [ %call58, %if.end57 ], [ %known_ret, %entry ], !dbg !6182
  ret i64 %retval.1, !dbg !6224
}

; Function Attrs: nounwind uwtable
define dso_local i32 @num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode) local_unnamed_addr #4 !dbg !6225 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6229, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6230, metadata !DIExpression()), !dbg !6231
  %call = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* null, i32 0, i32 0) #7, !dbg !6232
  ret i32 %call, !dbg !6233
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) unnamed_addr #4 !dbg !6234 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6238, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6239, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %known_x, metadata !6240, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %known_mode, metadata !6241, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %known_ret, metadata !6242, metadata !DIExpression()), !dbg !6247
  %cmp = icmp eq %struct.rtx_def* %x, %known_x, !dbg !6248
  %cmp1 = icmp eq i32 %mode, %known_mode, !dbg !6250
  %or.cond = and i1 %cmp, %cmp1, !dbg !6251
  br i1 %or.cond, label %return, label %if.end, !dbg !6251

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6252
  %bf.load = load i32, i32* %0, align 8, !dbg !6252
  %bf.clear = and i32 %bf.load, 65535, !dbg !6252
  %idxprom = zext i32 %bf.clear to i64, !dbg !6252
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6252
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6252
  %and = and i32 %1, -2, !dbg !6252
  %cmp2 = icmp eq i32 %and, 2, !dbg !6252
  br i1 %cmp2, label %if.then3, label %if.end57, !dbg !6253

if.then3:                                         ; preds = %if.end
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6254
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !6254
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6254
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6243, metadata !DIExpression()), !dbg !6255
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6256
  %rt_rtx8 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6256
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6246, metadata !DIExpression()), !dbg !6255
  %cmp9 = icmp eq %struct.rtx_def* %2, %4, !dbg !6257
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6259

if.then10:                                        ; preds = %if.then3
  %call = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %2, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !6260
  %call11 = tail call fastcc i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %2, i32 %mode, i32 %call) #7, !dbg !6261
  br label %cleanup, !dbg !6262

if.end12:                                         ; preds = %if.then3
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !6263
  %bf.load13 = load i32, i32* %5, align 8, !dbg !6263
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6263
  %idxprom15 = zext i32 %bf.clear14 to i64, !dbg !6263
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !6263
  %6 = load i32, i32* %arrayidx16, align 4, !dbg !6263
  %and17 = and i32 %6, -2, !dbg !6263
  %cmp18 = icmp eq i32 %and17, 2, !dbg !6263
  br i1 %cmp18, label %land.lhs.true19, label %if.end33, !dbg !6265

land.lhs.true19:                                  ; preds = %if.end12
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6266
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6266
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6266
  %cmp24 = icmp eq %struct.rtx_def* %4, %7, !dbg !6267
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !6268

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6269
  %rt_rtx28 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6269
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !6269
  %cmp29 = icmp eq %struct.rtx_def* %4, %9, !dbg !6270
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !6271

if.then30:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %call31 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %4, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !6272
  %call32 = tail call fastcc i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %4, i32 %mode, i32 %call31) #7, !dbg !6273
  br label %cleanup, !dbg !6274

if.end33:                                         ; preds = %lor.lhs.false, %if.end12
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6275
  %bf.load34 = load i32, i32* %10, align 8, !dbg !6275
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6275
  %idxprom36 = zext i32 %bf.clear35 to i64, !dbg !6275
  %arrayidx37 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom36, !dbg !6275
  %11 = load i32, i32* %arrayidx37, align 4, !dbg !6275
  %and38 = and i32 %11, -2, !dbg !6275
  %cmp39 = icmp eq i32 %and38, 2, !dbg !6275
  br i1 %cmp39, label %land.lhs.true40, label %cleanup, !dbg !6277

land.lhs.true40:                                  ; preds = %if.end33
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6278
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !6278
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !6278
  %cmp45 = icmp eq %struct.rtx_def* %2, %12, !dbg !6279
  br i1 %cmp45, label %if.then52, label %lor.lhs.false46, !dbg !6280

lor.lhs.false46:                                  ; preds = %land.lhs.true40
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6281
  %rt_rtx50 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6281
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !6281
  %cmp51 = icmp eq %struct.rtx_def* %2, %14, !dbg !6282
  br i1 %cmp51, label %if.then52, label %cleanup, !dbg !6283

if.then52:                                        ; preds = %lor.lhs.false46, %land.lhs.true40
  %call53 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %2, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !6284
  %call54 = tail call fastcc i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %2, i32 %mode, i32 %call53) #7, !dbg !6285
  br label %cleanup, !dbg !6286

cleanup:                                          ; preds = %if.end33, %lor.lhs.false46, %if.then52, %if.then30, %if.then10
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then10 ], [ false, %if.then30 ], [ false, %if.then52 ], [ true, %lor.lhs.false46 ], [ true, %if.end33 ]
  %retval.0 = phi i32 [ %call11, %if.then10 ], [ %call32, %if.then30 ], [ %call54, %if.then52 ], [ undef, %lor.lhs.false46 ], [ undef, %if.end33 ]
  br i1 %cleanup.dest.slot.0, label %if.end57, label %return

if.end57:                                         ; preds = %cleanup, %if.end
  %call58 = tail call fastcc i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !6287
  br label %return, !dbg !6288

return:                                           ; preds = %cleanup, %entry, %if.end57
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ %call58, %if.end57 ], [ %known_ret, %entry ], !dbg !6247
  ret i32 %retval.1, !dbg !6289
}

; Function Attrs: nounwind uwtable
define dso_local i32 @insn_rtx_cost(%struct.rtx_def* %pat, i8 zeroext %speed) local_unnamed_addr #4 !dbg !6290 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !6292, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.value(metadata i8 %speed, metadata !6293, metadata !DIExpression()), !dbg !6304
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 0, !dbg !6305
  %bf.load = load i32, i32* %0, align 8, !dbg !6305
  %bf.clear = and i32 %bf.load, 65535, !dbg !6305
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !6306
  br i1 %cmp, label %if.end22, label %if.else, !dbg !6307

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 15, !dbg !6308
  br i1 %cmp3, label %for.cond.preheader, label %cleanup27, !dbg !6309

for.cond.preheader:                               ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6310
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !6310
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6310
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !6310
  %2 = load i32, i32* %num_elem, align 8, !dbg !6310
  %3 = sext i32 %2 to i64, !dbg !6311
  br label %for.cond, !dbg !6311

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !6312
  %set.0 = phi %struct.rtx_def* [ null, %for.cond.preheader ], [ %set.2, %for.inc ], !dbg !6313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0, metadata !6296, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6294, metadata !DIExpression()), !dbg !6304
  %cmp5 = icmp slt i64 %indvars.iv, %3, !dbg !6314
  br i1 %cmp5, label %for.body, label %for.end, !dbg !6311

for.body:                                         ; preds = %for.cond
  %arrayidx10 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 %indvars.iv, !dbg !6315
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !6315
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6297, metadata !DIExpression()), !dbg !6316
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6317
  %bf.load11 = load i32, i32* %5, align 8, !dbg !6317
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !6317
  %cmp13 = icmp eq i32 %bf.clear12, 23, !dbg !6319
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6320

if.then14:                                        ; preds = %for.body
  %tobool = icmp eq %struct.rtx_def* %set.0, null, !dbg !6321
  br i1 %tobool, label %if.end16, label %cleanup, !dbg !6324

if.end16:                                         ; preds = %if.then14, %for.body
  %set.1 = phi %struct.rtx_def* [ %set.0, %for.body ], [ %4, %if.then14 ], !dbg !6325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.1, metadata !6296, metadata !DIExpression()), !dbg !6304
  br label %cleanup, !dbg !6326

cleanup:                                          ; preds = %if.then14, %if.end16
  %set.2 = phi %struct.rtx_def* [ %set.1, %if.end16 ], [ %set.0, %if.then14 ], !dbg !6325
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end16 ], [ false, %if.then14 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.2, metadata !6296, metadata !DIExpression()), !dbg !6304
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup27.loopexit

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6327
  call void @llvm.dbg.value(metadata i32 undef, metadata !6294, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6304
  br label %for.cond, !dbg !6328, !llvm.loop !6329

for.end:                                          ; preds = %for.cond
  %set.0.lcssa = phi %struct.rtx_def* [ %set.0, %for.cond ], !dbg !6313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0.lcssa, metadata !6296, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0.lcssa, metadata !6296, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0.lcssa, metadata !6296, metadata !DIExpression()), !dbg !6304
  %tobool17 = icmp eq %struct.rtx_def* %set.0.lcssa, null, !dbg !6331
  br i1 %tobool17, label %cleanup27, label %if.end22, !dbg !6333

if.end22:                                         ; preds = %for.end, %entry
  %set.3 = phi %struct.rtx_def* [ %pat, %entry ], [ %set.0.lcssa, %for.end ], !dbg !6334
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.3, metadata !6296, metadata !DIExpression()), !dbg !6304
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6335
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6335
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6335
  %call = tail call i32 @rtx_cost(%struct.rtx_def* %7, i32 23, i8 zeroext %speed) #7, !dbg !6336
  call void @llvm.dbg.value(metadata i32 %call, metadata !6295, metadata !DIExpression()), !dbg !6304
  %cmp26 = icmp sgt i32 %call, 0, !dbg !6337
  %call. = select i1 %cmp26, i32 %call, i32 4, !dbg !6338
  br label %cleanup27, !dbg !6339

cleanup27.loopexit:                               ; preds = %cleanup
  br label %cleanup27, !dbg !6340

cleanup27:                                        ; preds = %cleanup27.loopexit, %for.end, %if.else, %if.end22
  %retval.2 = phi i32 [ %call., %if.end22 ], [ 0, %for.end ], [ 0, %if.else ], [ 0, %cleanup27.loopexit ], !dbg !6304
  ret i32 %retval.2, !dbg !6340
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %insn, %struct.rtx_def* %cond, i32 %reverse, %struct.rtx_def** %earliest, %struct.rtx_def* %want_reg, i32 %allow_cc_mode, i32 %valid_at_insn_p) local_unnamed_addr #4 !dbg !6341 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6345, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !6346, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %reverse, metadata !6347, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !6348, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %want_reg, metadata !6349, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %allow_cc_mode, metadata !6350, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %valid_at_insn_p, metadata !6351, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6353, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 0, metadata !6358, metadata !DIExpression()), !dbg !6371
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6372
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6372
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !6360, metadata !DIExpression()), !dbg !6371
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !6373
  %bf.load = load i32, i32* %1, align 8, !dbg !6373
  %bf.clear = and i32 %bf.load, 65535, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6352, metadata !DIExpression()), !dbg !6371
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6374
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !6374
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !6359, metadata !DIExpression()), !dbg !6371
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6375
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !6375
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6356, metadata !DIExpression()), !dbg !6371
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6376
  %rt_rtx9 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6376
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6376
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6357, metadata !DIExpression()), !dbg !6371
  %tobool = icmp eq i32 %reverse, 0, !dbg !6377
  br i1 %tobool, label %if.end, label %if.then, !dbg !6379

if.then:                                          ; preds = %entry
  %call = tail call i32 @reversed_comparison_code(%struct.rtx_def* %cond, %struct.rtx_def* %insn) #6, !dbg !6380
  call void @llvm.dbg.value(metadata i32 %call, metadata !6352, metadata !DIExpression()), !dbg !6371
  br label %if.end, !dbg !6381

if.end:                                           ; preds = %entry, %if.then
  %code.0 = phi i32 [ %call, %if.then ], [ %bf.clear, %entry ], !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6352, metadata !DIExpression()), !dbg !6371
  %cmp = icmp eq i32 %code.0, 0, !dbg !6382
  br i1 %cmp, label %cleanup403, label %if.end11, !dbg !6384

if.end11:                                         ; preds = %if.end
  %tobool12 = icmp eq %struct.rtx_def** %earliest, null, !dbg !6385
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6387

if.then13:                                        ; preds = %if.end11
  store %struct.rtx_def* %insn, %struct.rtx_def** %earliest, align 8, !dbg !6388
  br label %if.end14, !dbg !6389

if.end14:                                         ; preds = %if.end11, %if.then13
  %idxprom136 = zext i32 %bf.clear2 to i64, !dbg !6390
  %arrayidx137 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom136, !dbg !6390
  %cmp149 = icmp eq i32 %bf.clear2, 0, !dbg !6390
  %tobool241 = icmp eq i32 %valid_at_insn_p, 0, !dbg !6392
  br label %while.cond, !dbg !6396

while.cond:                                       ; preds = %while.cond.backedge, %if.end14
  %code.1 = phi i32 [ %code.0, %if.end14 ], [ %code.5, %while.cond.backedge ], !dbg !6397
  %prev.0 = phi %struct.rtx_def* [ %insn, %if.end14 ], [ %prev.2, %while.cond.backedge ], !dbg !6398
  %op0.0 = phi %struct.rtx_def* [ %2, %if.end14 ], [ %op0.2, %while.cond.backedge ], !dbg !6371
  %op1.0 = phi %struct.rtx_def* [ %4, %if.end14 ], [ %op1.2, %while.cond.backedge ], !dbg !6371
  %reverse_code.0 = phi i32 [ 0, %if.end14 ], [ %reverse_code.6, %while.cond.backedge ], !dbg !6399
  call void @llvm.dbg.value(metadata i32 %reverse_code.0, metadata !6358, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.0, metadata !6357, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.0, metadata !6356, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !6353, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !6352, metadata !DIExpression()), !dbg !6371
  %idxprom = sext i32 %code.1 to i64, !dbg !6400
  %arrayidx15 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6400
  %5 = load i32, i32* %arrayidx15, align 4, !dbg !6400
  %cmp16 = icmp eq i32 %5, 0, !dbg !6401
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false, !dbg !6402

lor.lhs.false:                                    ; preds = %while.cond
  %cmp19 = icmp eq i32 %5, 1, !dbg !6403
  br i1 %cmp19, label %land.lhs.true, label %while.end, !dbg !6404

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 0, !dbg !6405
  %bf.load20 = load i32, i32* %6, align 8, !dbg !6405
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !6405
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !6405
  %idxprom23 = zext i32 %bf.clear22 to i64, !dbg !6405
  %arrayidx24 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom23, !dbg !6405
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !6405
  %cmp25 = icmp eq %struct.rtx_def* %op1.0, %7, !dbg !6406
  %cmp26 = icmp ne %struct.rtx_def* %op0.0, %want_reg, !dbg !6407
  %spec.select = and i1 %cmp25, %cmp26, !dbg !6408
  br i1 %spec.select, label %while.body, label %while.end, !dbg !6396

while.body:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6361, metadata !DIExpression()), !dbg !6409
  %bf.clear28 = and i32 %bf.load20, 65535, !dbg !6410
  %cmp29 = icmp eq i32 %bf.clear28, 48, !dbg !6412
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !6413

if.then30:                                        ; preds = %while.body
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6414
  %rt_rtx34 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6414
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !6414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !6357, metadata !DIExpression()), !dbg !6371
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6416
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !6416
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !6416
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !6356, metadata !DIExpression()), !dbg !6371
  br label %cleanup282, !dbg !6417, !llvm.loop !6418

if.else:                                          ; preds = %while.body
  %cmp41 = icmp eq i32 %bf.clear28, 37, !dbg !6420
  br i1 %cmp41, label %do.body.preheader, label %cleanup282, !dbg !6422

do.body.preheader:                                ; preds = %if.else
  br label %do.body, !dbg !6423

do.body:                                          ; preds = %do.body.preheader, %land.rhs47
  %prev.1 = phi %struct.rtx_def* [ %call45, %land.rhs47 ], [ %prev.0, %do.body.preheader ], !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.1, metadata !6353, metadata !DIExpression()), !dbg !6371
  %call45 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %prev.1) #6, !dbg !6424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !6353, metadata !DIExpression()), !dbg !6371
  %cond7 = icmp eq %struct.rtx_def* %call45, null, !dbg !6425
  br i1 %cond7, label %cleanup282.loopexit, label %land.rhs47, !dbg !6425

land.rhs47:                                       ; preds = %do.body
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call45, i64 0, i32 0, !dbg !6426
  %bf.load48 = load i32, i32* %11, align 8, !dbg !6426
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !6426
  %cmp50 = icmp eq i32 %bf.clear49, 7, !dbg !6426
  br i1 %cmp50, label %do.body, label %do.end, !dbg !6427, !llvm.loop !6428

do.end:                                           ; preds = %land.rhs47
  %bf.clear49.lcssa = phi i32 [ %bf.clear49, %land.rhs47 ], !dbg !6426
  %call45.lcssa14 = phi %struct.rtx_def* [ %call45, %land.rhs47 ], !dbg !6424
  %cmp56 = icmp eq i32 %bf.clear49.lcssa, 8, !dbg !6430
  br i1 %cmp56, label %lor.lhs.false57, label %cleanup282, !dbg !6432

lor.lhs.false57:                                  ; preds = %do.end
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call45.lcssa14, i64 0, i32 1, i32 0, i32 1, !dbg !6433
  %rt_bb61 = bitcast %struct.object_block** %arrayidx60 to %struct.basic_block_def**, !dbg !6433
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb61, align 8, !dbg !6433
  %cmp62 = icmp eq %struct.basic_block_def* %12, %0, !dbg !6434
  br i1 %cmp62, label %if.end64, label %cleanup282, !dbg !6435

if.end64:                                         ; preds = %lor.lhs.false57
  %call65 = tail call %struct.rtx_def* @set_of(%struct.rtx_def* %op0.0, %struct.rtx_def* nonnull %call45.lcssa14) #7, !dbg !6436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !6354, metadata !DIExpression()), !dbg !6371
  %cond6 = icmp eq %struct.rtx_def* %call65, null, !dbg !6437
  br i1 %cond6, label %if.else233, label %land.lhs.true67, !dbg !6437

land.lhs.true67:                                  ; preds = %if.end64
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call65, i64 0, i32 0, !dbg !6439
  %bf.load68 = load i32, i32* %13, align 8, !dbg !6439
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !6439
  %cmp70 = icmp eq i32 %bf.clear69, 23, !dbg !6440
  br i1 %cmp70, label %lor.lhs.false71, label %cleanup282, !dbg !6441

lor.lhs.false71:                                  ; preds = %land.lhs.true67
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call65, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6442
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !6442
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !6442
  %call76 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %op0.0) #6, !dbg !6443
  %tobool77 = icmp eq i32 %call76, 0, !dbg !6443
  br i1 %tobool77, label %cleanup282, label %if.end79, !dbg !6444

if.end79:                                         ; preds = %lor.lhs.false71
  %15 = bitcast %union.rtunion_def* %arrayidx74 to i32**, !dbg !6445
  %16 = load i32*, i32** %15, align 8, !dbg !6445
  %bf.load86 = load i32, i32* %16, align 8, !dbg !6445
  %bf.lshr87 = lshr i32 %bf.load86, 16, !dbg !6445
  %bf.clear88 = and i32 %bf.lshr87, 255, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %bf.clear88, metadata !6363, metadata !DIExpression()), !dbg !6446
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call65, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6447
  %18 = bitcast %union.rtunion_def* %17 to i32**, !dbg !6447
  %19 = load i32*, i32** %18, align 8, !dbg !6447
  %bf.load93 = load i32, i32* %19, align 8, !dbg !6447
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !6447
  %cmp95 = icmp eq i32 %bf.clear94, 48, !dbg !6448
  %20 = bitcast i32* %19 to %struct.rtx_def*, !dbg !6449
  br i1 %cmp95, label %land.lhs.true135, label %lor.lhs.false96, !dbg !6449

lor.lhs.false96:                                  ; preds = %if.end79
  switch i32 %code.1, label %cleanup [
    i32 80, label %land.lhs.true123
    i32 85, label %land.lhs.true100
    i32 81, label %land.lhs.true194
    i32 82, label %land.lhs.true165
  ], !dbg !6450

land.lhs.true100:                                 ; preds = %lor.lhs.false96
  br label %if.else159, !dbg !6451

land.lhs.true105:                                 ; No predecessors!
  unreachable, !dbg !6452

land.lhs.true114:                                 ; No predecessors!
  unreachable, !dbg !6453

land.lhs.true123:                                 ; preds = %lor.lhs.false96
  %idxprom130 = zext i32 %bf.clear94 to i64, !dbg !6454
  %arrayidx131 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom130, !dbg !6454
  %21 = load i32, i32* %arrayidx131, align 4, !dbg !6454
  %cmp133 = icmp ult i32 %21, 2, !dbg !6454
  br i1 %cmp133, label %land.lhs.true135, label %if.else159, !dbg !6455

land.lhs.true135:                                 ; preds = %land.lhs.true123, %if.end79
  %22 = load i8, i8* %arrayidx137, align 1, !dbg !6456
  %cmp139 = icmp ne i8 %22, 1, !dbg !6457
  %idxprom141 = zext i32 %bf.clear88 to i64, !dbg !6458
  %arrayidx142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom141, !dbg !6458
  %23 = load i8, i8* %arrayidx142, align 1, !dbg !6458
  %cmp144 = icmp eq i8 %23, 1, !dbg !6459
  %cmp146 = xor i1 %cmp144, %cmp139, !dbg !6460
  %or.cond = or i1 %cmp146, %cmp149, !dbg !6461
  %cmp152 = icmp eq i32 %bf.clear88, 0, !dbg !6462
  %or.cond2 = or i1 %or.cond, %cmp152, !dbg !6461
  br i1 %or.cond2, label %if.then154, label %if.else159, !dbg !6461

if.then154:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6361, metadata !DIExpression()), !dbg !6409
  br label %cleanup, !dbg !6463

if.else159:                                       ; preds = %land.lhs.true100, %land.lhs.true135, %land.lhs.true123
  switch i32 %code.1, label %cleanup [
    i32 81, label %land.lhs.true194
    i32 82, label %land.lhs.true165
  ], !dbg !6464

land.lhs.true165:                                 ; preds = %lor.lhs.false96, %if.else159
  %idxprom166 = zext i32 %bf.clear88 to i64, !dbg !6466
  %arrayidx167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom166, !dbg !6466
  %24 = load i8, i8* %arrayidx167, align 1, !dbg !6466
  %cmp173 = icmp ult i8 %24, 9, !dbg !6467
  br i1 %cmp173, label %land.lhs.true175, label %cleanup, !dbg !6468

land.lhs.true175:                                 ; preds = %land.lhs.true165
  %arrayidx177 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom166, !dbg !6469
  %25 = load i8, i8* %arrayidx177, align 1, !dbg !6469
  %cmp179 = icmp eq i8 %25, 2, !dbg !6470
  br i1 %cmp179, label %land.lhs.true181, label %cleanup, !dbg !6471

land.lhs.true181:                                 ; preds = %land.lhs.true175
  br label %cleanup, !dbg !6472

land.lhs.true194:                                 ; preds = %lor.lhs.false96, %if.else159
  %idxprom201 = zext i32 %bf.clear94 to i64, !dbg !6473
  %arrayidx202 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom201, !dbg !6473
  %26 = load i32, i32* %arrayidx202, align 4, !dbg !6473
  %cmp204 = icmp ult i32 %26, 2, !dbg !6473
  br i1 %cmp204, label %land.lhs.true206, label %cleanup, !dbg !6474

land.lhs.true206:                                 ; preds = %land.lhs.true194
  %27 = load i8, i8* %arrayidx137, align 1, !dbg !6475
  %cmp210 = icmp ne i8 %27, 1, !dbg !6476
  %idxprom212 = zext i32 %bf.clear88 to i64, !dbg !6477
  %arrayidx213 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom212, !dbg !6477
  %28 = load i8, i8* %arrayidx213, align 1, !dbg !6477
  %cmp215 = icmp eq i8 %28, 1, !dbg !6478
  %cmp217 = xor i1 %cmp215, %cmp210, !dbg !6479
  %or.cond3 = or i1 %cmp217, %cmp149, !dbg !6480
  %cmp223 = icmp eq i32 %bf.clear88, 0, !dbg !6481
  %or.cond4 = or i1 %or.cond3, %cmp223, !dbg !6480
  br i1 %or.cond4, label %if.then225, label %cleanup, !dbg !6480

if.then225:                                       ; preds = %land.lhs.true206
  call void @llvm.dbg.value(metadata i32 1, metadata !6358, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6361, metadata !DIExpression()), !dbg !6409
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true181, %if.then154, %if.then225, %land.lhs.true165, %land.lhs.true175, %land.lhs.true194, %if.else159, %lor.lhs.false96, %land.lhs.true206
  %reverse_code.2 = phi i32 [ %reverse_code.0, %land.lhs.true206 ], [ %reverse_code.0, %lor.lhs.false96 ], [ %reverse_code.0, %if.else159 ], [ %reverse_code.0, %land.lhs.true194 ], [ %reverse_code.0, %land.lhs.true181 ], [ %reverse_code.0, %land.lhs.true175 ], [ %reverse_code.0, %land.lhs.true165 ], [ %reverse_code.0, %if.then154 ], [ 1, %if.then225 ], !dbg !6399
  %cleanup.dest.slot.0 = phi i32 [ 3, %land.lhs.true206 ], [ 3, %lor.lhs.false96 ], [ 3, %if.else159 ], [ 3, %land.lhs.true194 ], [ 3, %land.lhs.true181 ], [ 3, %land.lhs.true175 ], [ 3, %land.lhs.true165 ], [ 0, %if.then154 ], [ 0, %if.then225 ]
  %x.1 = phi %struct.rtx_def* [ null, %land.lhs.true206 ], [ null, %lor.lhs.false96 ], [ null, %if.else159 ], [ null, %land.lhs.true194 ], [ null, %land.lhs.true181 ], [ null, %land.lhs.true175 ], [ null, %land.lhs.true165 ], [ %20, %if.then154 ], [ %20, %if.then225 ], !dbg !6409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !6361, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %reverse_code.2, metadata !6358, metadata !DIExpression()), !dbg !6371
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end238, label %cleanup282

if.else233:                                       ; preds = %if.end64
  %call234 = tail call i32 @reg_set_p(%struct.rtx_def* %op0.0, %struct.rtx_def* nonnull %call45.lcssa14) #7, !dbg !6482
  %tobool235 = icmp eq i32 %call234, 0, !dbg !6482
  br i1 %tobool235, label %if.end238, label %cleanup282, !dbg !6484

if.end238:                                        ; preds = %if.else233, %cleanup
  %reverse_code.3 = phi i32 [ %reverse_code.2, %cleanup ], [ %reverse_code.0, %if.else233 ], !dbg !6399
  %x.2 = phi %struct.rtx_def* [ %x.1, %cleanup ], [ null, %if.else233 ], !dbg !6409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.2, metadata !6361, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %reverse_code.3, metadata !6358, metadata !DIExpression()), !dbg !6371
  %tobool239 = icmp eq %struct.rtx_def* %x.2, null, !dbg !6485
  br i1 %tobool239, label %cleanup282, label %if.then240, !dbg !6486

if.then240:                                       ; preds = %if.end238
  br i1 %tobool241, label %if.end250, label %if.then242, !dbg !6487

if.then242:                                       ; preds = %if.then240
  %call243 = tail call i32 @modified_in_p(%struct.rtx_def* nonnull %x.2, %struct.rtx_def* nonnull %call45.lcssa14) #7, !dbg !6488
  %tobool244 = icmp eq i32 %call243, 0, !dbg !6488
  br i1 %tobool244, label %lor.lhs.false245, label %cleanup282, !dbg !6490

lor.lhs.false245:                                 ; preds = %if.then242
  %call246 = tail call i32 @modified_between_p(%struct.rtx_def* nonnull %x.2, %struct.rtx_def* nonnull %call45.lcssa14, %struct.rtx_def* %insn) #7, !dbg !6491
  %tobool247 = icmp eq i32 %call246, 0, !dbg !6491
  br i1 %tobool247, label %if.end250, label %cleanup282, !dbg !6492

if.end250:                                        ; preds = %lor.lhs.false245, %if.then240
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 0, !dbg !6493
  %bf.load251 = load i32, i32* %29, align 8, !dbg !6493
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !6493
  %idxprom253 = zext i32 %bf.clear252 to i64, !dbg !6493
  %arrayidx254 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom253, !dbg !6493
  %30 = load i32, i32* %arrayidx254, align 4, !dbg !6493
  %cmp256 = icmp ult i32 %30, 2, !dbg !6493
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !6495

if.then258:                                       ; preds = %if.end250
  call void @llvm.dbg.value(metadata i32 %bf.clear252, metadata !6352, metadata !DIExpression()), !dbg !6371
  br label %if.end261, !dbg !6496

if.end261:                                        ; preds = %if.then258, %if.end250
  %code.2 = phi i32 [ %bf.clear252, %if.then258 ], [ %code.1, %if.end250 ], !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.2, metadata !6352, metadata !DIExpression()), !dbg !6371
  %tobool262 = icmp eq i32 %reverse_code.3, 0, !dbg !6497
  br i1 %tobool262, label %if.end269, label %if.then263, !dbg !6499

if.then263:                                       ; preds = %if.end261
  %call264 = tail call i32 @reversed_comparison_code(%struct.rtx_def* nonnull %x.2, %struct.rtx_def* nonnull %call45.lcssa14) #6, !dbg !6500
  call void @llvm.dbg.value(metadata i32 %call264, metadata !6352, metadata !DIExpression()), !dbg !6371
  %cmp265 = icmp eq i32 %call264, 0, !dbg !6502
  br i1 %cmp265, label %cleanup282, label %if.end269, !dbg !6504

if.end269:                                        ; preds = %if.end261, %if.then263
  %code.3 = phi i32 [ %code.2, %if.end261 ], [ %call264, %if.then263 ], !dbg !6505
  call void @llvm.dbg.value(metadata i32 0, metadata !6358, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.3, metadata !6352, metadata !DIExpression()), !dbg !6371
  %arrayidx272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6506
  %rt_rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**, !dbg !6506
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx273, align 8, !dbg !6506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !6356, metadata !DIExpression()), !dbg !6371
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6507
  %rt_rtx277 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !6507
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx277, align 8, !dbg !6507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !6357, metadata !DIExpression()), !dbg !6371
  br i1 %tobool12, label %cleanup282, label %if.then279, !dbg !6508

if.then279:                                       ; preds = %if.end269
  store %struct.rtx_def* %call45.lcssa14, %struct.rtx_def** %earliest, align 8, !dbg !6509
  br label %cleanup282, !dbg !6511

cleanup282.loopexit:                              ; preds = %do.body
  br label %cleanup282

cleanup282:                                       ; preds = %cleanup282.loopexit, %lor.lhs.false245, %if.then242, %if.end269, %if.end238, %if.else233, %lor.lhs.false71, %land.lhs.true67, %lor.lhs.false57, %if.then279, %if.then263, %do.end, %if.else, %cleanup, %if.then30
  %code.5 = phi i32 [ %code.1, %if.then30 ], [ %code.1, %cleanup ], [ %code.1, %if.else ], [ %code.1, %lor.lhs.false57 ], [ %code.1, %do.end ], [ %code.1, %lor.lhs.false71 ], [ %code.1, %land.lhs.true67 ], [ %code.1, %if.else233 ], [ %code.1, %lor.lhs.false245 ], [ %code.1, %if.then242 ], [ 0, %if.then263 ], [ %code.1, %if.end238 ], [ %code.3, %if.then279 ], [ %code.3, %if.end269 ], [ %code.1, %cleanup282.loopexit ], !dbg !6371
  %prev.2 = phi %struct.rtx_def* [ %prev.0, %if.then30 ], [ %call45.lcssa14, %cleanup ], [ %prev.0, %if.else ], [ %call45.lcssa14, %lor.lhs.false57 ], [ %call45.lcssa14, %do.end ], [ %call45.lcssa14, %lor.lhs.false71 ], [ %call45.lcssa14, %land.lhs.true67 ], [ %call45.lcssa14, %if.else233 ], [ %call45.lcssa14, %lor.lhs.false245 ], [ %call45.lcssa14, %if.then242 ], [ %call45.lcssa14, %if.then263 ], [ %call45.lcssa14, %if.end238 ], [ %call45.lcssa14, %if.then279 ], [ %call45.lcssa14, %if.end269 ], [ null, %cleanup282.loopexit ], !dbg !6371
  %op0.2 = phi %struct.rtx_def* [ %10, %if.then30 ], [ %op0.0, %cleanup ], [ %op0.0, %if.else ], [ %op0.0, %lor.lhs.false57 ], [ %op0.0, %do.end ], [ %op0.0, %lor.lhs.false71 ], [ %op0.0, %land.lhs.true67 ], [ %op0.0, %if.else233 ], [ %op0.0, %lor.lhs.false245 ], [ %op0.0, %if.then242 ], [ %op0.0, %if.then263 ], [ %op0.0, %if.end238 ], [ %31, %if.then279 ], [ %31, %if.end269 ], [ %op0.0, %cleanup282.loopexit ], !dbg !6371
  %op1.2 = phi %struct.rtx_def* [ %9, %if.then30 ], [ %op1.0, %cleanup ], [ %op1.0, %if.else ], [ %op1.0, %lor.lhs.false57 ], [ %op1.0, %do.end ], [ %op1.0, %lor.lhs.false71 ], [ %op1.0, %land.lhs.true67 ], [ %op1.0, %if.else233 ], [ %op1.0, %lor.lhs.false245 ], [ %op1.0, %if.then242 ], [ %op1.0, %if.then263 ], [ %op1.0, %if.end238 ], [ %33, %if.then279 ], [ %33, %if.end269 ], [ %op1.0, %cleanup282.loopexit ], !dbg !6371
  %reverse_code.6 = phi i32 [ %reverse_code.0, %if.then30 ], [ %reverse_code.2, %cleanup ], [ %reverse_code.0, %if.else ], [ %reverse_code.0, %lor.lhs.false57 ], [ %reverse_code.0, %do.end ], [ %reverse_code.0, %lor.lhs.false71 ], [ %reverse_code.0, %land.lhs.true67 ], [ %reverse_code.0, %if.else233 ], [ %reverse_code.3, %lor.lhs.false245 ], [ %reverse_code.3, %if.then242 ], [ %reverse_code.3, %if.then263 ], [ %reverse_code.3, %if.end238 ], [ 0, %if.then279 ], [ 0, %if.end269 ], [ %reverse_code.0, %cleanup282.loopexit ], !dbg !6371
  %cleanup.dest.slot.1 = phi i32 [ 2, %if.then30 ], [ %cleanup.dest.slot.0, %cleanup ], [ 3, %if.else ], [ 3, %lor.lhs.false57 ], [ 3, %do.end ], [ 3, %lor.lhs.false71 ], [ 3, %land.lhs.true67 ], [ 3, %if.else233 ], [ 3, %lor.lhs.false245 ], [ 3, %if.then242 ], [ 1, %if.then263 ], [ 0, %if.end238 ], [ 0, %if.then279 ], [ 0, %if.end269 ], [ 3, %cleanup282.loopexit ]
  call void @llvm.dbg.value(metadata i32 %reverse_code.6, metadata !6358, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.2, metadata !6357, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.2, metadata !6356, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.2, metadata !6353, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.5, metadata !6352, metadata !DIExpression()), !dbg !6371
  switch i32 %cleanup.dest.slot.1, label %cleanup403.loopexit [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
    i32 3, label %while.end
  ]

while.cond.backedge:                              ; preds = %cleanup282, %cleanup282
  br label %while.cond, !dbg !6371, !llvm.loop !6418

while.end:                                        ; preds = %lor.lhs.false, %cleanup282, %land.lhs.true
  %code.6 = phi i32 [ %code.5, %cleanup282 ], [ %code.1, %land.lhs.true ], [ %code.1, %lor.lhs.false ], !dbg !6397
  %op0.3 = phi %struct.rtx_def* [ %op0.2, %cleanup282 ], [ %op0.0, %land.lhs.true ], [ %op0.0, %lor.lhs.false ], !dbg !6371
  %op1.3 = phi %struct.rtx_def* [ %op1.2, %cleanup282 ], [ %op1.0, %land.lhs.true ], [ %op1.0, %lor.lhs.false ], !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.3, metadata !6357, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.3, metadata !6356, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.6, metadata !6352, metadata !DIExpression()), !dbg !6371
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.3, i64 0, i32 0, !dbg !6512
  %bf.load285 = load i32, i32* %34, align 8, !dbg !6512
  %bf.clear286 = and i32 %bf.load285, 65535, !dbg !6512
  %idxprom287 = zext i32 %bf.clear286 to i64, !dbg !6512
  %arrayidx288 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom287, !dbg !6512
  %35 = load i32, i32* %arrayidx288, align 4, !dbg !6512
  %cmp289 = icmp eq i32 %35, 9, !dbg !6512
  br i1 %cmp289, label %if.then291, label %if.end293, !dbg !6514

if.then291:                                       ; preds = %while.end
  %call292 = tail call i32 @swap_condition(i32 %code.6) #6, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %call292, metadata !6352, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.3, metadata !6355, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.3, metadata !6356, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.3, metadata !6357, metadata !DIExpression()), !dbg !6371
  br label %if.end293, !dbg !6516

if.end293:                                        ; preds = %if.then291, %while.end
  %code.7 = phi i32 [ %call292, %if.then291 ], [ %code.6, %while.end ], !dbg !6371
  %op0.4 = phi %struct.rtx_def* [ %op1.3, %if.then291 ], [ %op0.3, %while.end ], !dbg !6371
  %op1.4 = phi %struct.rtx_def* [ %op0.3, %if.then291 ], [ %op1.3, %while.end ], !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.4, metadata !6357, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0.4, metadata !6356, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.7, metadata !6352, metadata !DIExpression()), !dbg !6371
  %tobool294 = icmp eq i32 %allow_cc_mode, 0, !dbg !6517
  br i1 %tobool294, label %land.lhs.true295, label %if.end293.if.end305_crit_edge, !dbg !6519

if.end293.if.end305_crit_edge:                    ; preds = %if.end293
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.4, i64 0, i32 0, !dbg !6520
  %bf.load306.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6521
  %.pre = lshr i32 %bf.load306.pre, 16, !dbg !6521
  %.pre10 = and i32 %.pre, 255, !dbg !6521
  %.pre11 = zext i32 %.pre10 to i64, !dbg !6521
  br label %if.end305, !dbg !6519

land.lhs.true295:                                 ; preds = %if.end293
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op0.4, i64 0, i32 0, !dbg !6522
  %bf.load296 = load i32, i32* %36, align 8, !dbg !6522
  %bf.lshr297 = lshr i32 %bf.load296, 16, !dbg !6522
  %bf.clear298 = and i32 %bf.lshr297, 255, !dbg !6522
  %idxprom299 = zext i32 %bf.clear298 to i64, !dbg !6522
  %arrayidx300 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom299, !dbg !6522
  %37 = load i8, i8* %arrayidx300, align 1, !dbg !6522
  %cmp302 = icmp eq i8 %37, 1, !dbg !6523
  br i1 %cmp302, label %cleanup403, label %if.end305, !dbg !6524

if.end305:                                        ; preds = %if.end293.if.end305_crit_edge, %land.lhs.true295
  %idxprom309.pre-phi = phi i64 [ %.pre11, %if.end293.if.end305_crit_edge ], [ %idxprom299, %land.lhs.true295 ], !dbg !6521
  %bf.clear308.pre-phi = phi i32 [ %.pre10, %if.end293.if.end305_crit_edge ], [ %bf.clear298, %land.lhs.true295 ], !dbg !6521
  %bf.load349 = phi i32 [ %bf.load306.pre, %if.end293.if.end305_crit_edge ], [ %bf.load296, %land.lhs.true295 ], !dbg !6521
  %arrayidx310 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom309.pre-phi, !dbg !6521
  %38 = load i8, i8* %arrayidx310, align 1, !dbg !6521
  %cmp312 = icmp eq i8 %38, 1, !dbg !6525
  br i1 %cmp312, label %if.end398, label %land.lhs.true314, !dbg !6526

land.lhs.true314:                                 ; preds = %if.end305
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.4, i64 0, i32 0, !dbg !6527
  %bf.load315 = load i32, i32* %39, align 8, !dbg !6527
  %bf.clear316 = and i32 %bf.load315, 65535, !dbg !6527
  %cmp317 = icmp eq i32 %bf.clear316, 30, !dbg !6527
  br i1 %cmp317, label %land.lhs.true319, label %if.end398, !dbg !6528

land.lhs.true319:                                 ; preds = %land.lhs.true314
  %bf.clear322 = and i32 %bf.load349, 16711680, !dbg !6529
  %cmp323 = icmp eq i32 %bf.clear322, 0, !dbg !6530
  br i1 %cmp323, label %if.end398, label %land.lhs.true325, !dbg !6531

land.lhs.true325:                                 ; preds = %land.lhs.true319
  %arrayidx330 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom309.pre-phi, !dbg !6532
  %40 = load i8, i8* %arrayidx330, align 1, !dbg !6532
  %cmp336 = icmp ult i8 %40, 9, !dbg !6533
  br i1 %cmp336, label %if.then338, label %if.end398, !dbg !6534

if.then338:                                       ; preds = %land.lhs.true325
  %u339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op1.4, i64 0, i32 1, !dbg !6535
  %arrayidx340 = bitcast %union.u* %u339 to i64*, !dbg !6535
  %41 = load i64, i64* %arrayidx340, align 8, !dbg !6535
  call void @llvm.dbg.value(metadata i64 %41, metadata !6366, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i64 %41, metadata !6369, metadata !DIExpression()), !dbg !6536
  %arrayidx345 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom309.pre-phi, !dbg !6537
  %42 = load i64, i64* %arrayidx345, align 8, !dbg !6537
  call void @llvm.dbg.value(metadata i64 %42, metadata !6370, metadata !DIExpression()), !dbg !6536
  switch i32 %code.7, label %if.end398 [
    i32 84, label %sw.bb
    i32 82, label %sw.bb354
    i32 88, label %sw.bb378
    i32 86, label %sw.bb388
  ], !dbg !6538

sw.bb:                                            ; preds = %if.then338
  %shr = lshr i64 %42, 1, !dbg !6539
  %cmp346 = icmp eq i64 %41, %shr, !dbg !6542
  br i1 %cmp346, label %if.end398, label %if.then348, !dbg !6543

if.then348:                                       ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i32 85, metadata !6352, metadata !DIExpression()), !dbg !6371
  %add = add nsw i64 %41, 1, !dbg !6544
  %call352 = tail call %struct.rtx_def* @gen_int_mode(i64 %add, i32 %bf.clear308.pre-phi) #6, !dbg !6545
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call352, metadata !6357, metadata !DIExpression()), !dbg !6371
  br label %if.end398, !dbg !6546

sw.bb354:                                         ; preds = %if.then338
  %and355 = and i64 %41, %42, !dbg !6547
  %conv362 = zext i8 %40 to i64, !dbg !6549
  %mul363 = shl nuw nsw i64 %conv362, 3, !dbg !6549
  %sub366 = add nuw nsw i64 %mul363, 4294967295, !dbg !6550
  %sh_prom367 = and i64 %sub366, 4294967295, !dbg !6551
  %shl368 = shl i64 1, %sh_prom367, !dbg !6551
  %cmp369 = icmp eq i64 %and355, %shl368, !dbg !6552
  br i1 %cmp369, label %if.end398, label %if.then371, !dbg !6553

if.then371:                                       ; preds = %sw.bb354
  call void @llvm.dbg.value(metadata i32 83, metadata !6352, metadata !DIExpression()), !dbg !6371
  %sub372 = add nsw i64 %41, -1, !dbg !6554
  %call376 = tail call %struct.rtx_def* @gen_int_mode(i64 %sub372, i32 %bf.clear308.pre-phi) #6, !dbg !6555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call376, metadata !6357, metadata !DIExpression()), !dbg !6371
  br label %if.end398, !dbg !6556

sw.bb378:                                         ; preds = %if.then338
  %cmp379 = icmp ult i64 %41, %42, !dbg !6557
  br i1 %cmp379, label %if.then381, label %if.end398, !dbg !6559

if.then381:                                       ; preds = %sw.bb378
  call void @llvm.dbg.value(metadata i32 89, metadata !6352, metadata !DIExpression()), !dbg !6371
  %add382 = add i64 %41, 1, !dbg !6560
  %call386 = tail call %struct.rtx_def* @gen_int_mode(i64 %add382, i32 %bf.clear308.pre-phi) #6, !dbg !6561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call386, metadata !6357, metadata !DIExpression()), !dbg !6371
  br label %if.end398, !dbg !6562

sw.bb388:                                         ; preds = %if.then338
  %cmp389 = icmp eq i64 %41, 0, !dbg !6563
  br i1 %cmp389, label %if.end398, label %if.then391, !dbg !6565

if.then391:                                       ; preds = %sw.bb388
  call void @llvm.dbg.value(metadata i32 87, metadata !6352, metadata !DIExpression()), !dbg !6371
  %sub392 = add i64 %41, -1, !dbg !6566
  %call396 = tail call %struct.rtx_def* @gen_int_mode(i64 %sub392, i32 %bf.clear308.pre-phi) #6, !dbg !6567
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call396, metadata !6357, metadata !DIExpression()), !dbg !6371
  br label %if.end398, !dbg !6568

if.end398:                                        ; preds = %sw.bb, %sw.bb354, %sw.bb388, %land.lhs.true319, %if.end305, %if.then348, %if.then371, %if.then381, %sw.bb378, %if.then391, %if.then338, %land.lhs.true325, %land.lhs.true314
  %code.13 = phi i32 [ %code.7, %land.lhs.true325 ], [ %code.7, %land.lhs.true319 ], [ %code.7, %land.lhs.true314 ], [ %code.7, %if.end305 ], [ 85, %if.then348 ], [ 84, %sw.bb ], [ 83, %if.then371 ], [ 82, %sw.bb354 ], [ 89, %if.then381 ], [ 88, %sw.bb378 ], [ 87, %if.then391 ], [ 86, %sw.bb388 ], [ %code.7, %if.then338 ], !dbg !6569
  %op1.10 = phi %struct.rtx_def* [ %op1.4, %land.lhs.true325 ], [ %op1.4, %land.lhs.true319 ], [ %op1.4, %land.lhs.true314 ], [ %op1.4, %if.end305 ], [ %call352, %if.then348 ], [ %op1.4, %sw.bb ], [ %call376, %if.then371 ], [ %op1.4, %sw.bb354 ], [ %call386, %if.then381 ], [ %op1.4, %sw.bb378 ], [ %call396, %if.then391 ], [ %op1.4, %sw.bb388 ], [ %op1.4, %if.then338 ], !dbg !6570
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1.10, metadata !6357, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %code.13, metadata !6352, metadata !DIExpression()), !dbg !6371
  %call402 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code.13, i32 0, %struct.rtx_def* %op0.4, %struct.rtx_def* %op1.10) #6, !dbg !6571
  br label %cleanup403, !dbg !6572

cleanup403.loopexit:                              ; preds = %cleanup282
  br label %cleanup403, !dbg !6573

cleanup403:                                       ; preds = %cleanup403.loopexit, %land.lhs.true295, %if.end, %if.end398
  %retval.2 = phi %struct.rtx_def* [ %call402, %if.end398 ], [ null, %if.end ], [ null, %land.lhs.true295 ], [ null, %cleanup403.loopexit ]
  ret %struct.rtx_def* %retval.2, !dbg !6573
}

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_condition(%struct.rtx_def* %jump, %struct.rtx_def** %earliest, i32 %allow_cc_mode, i32 %valid_at_insn_p) local_unnamed_addr #4 !dbg !6574 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !6578, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !6579, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 %allow_cc_mode, metadata !6580, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 %valid_at_insn_p, metadata !6581, metadata !DIExpression()), !dbg !6585
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 0, !dbg !6586
  %bf.load = load i32, i32* %0, align 8, !dbg !6586
  %bf.clear = and i32 %bf.load, 65535, !dbg !6586
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !6586
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !6588

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %jump) #6, !dbg !6589
  %tobool = icmp eq i32 %call, 0, !dbg !6589
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6590

if.end:                                           ; preds = %lor.lhs.false
  %call1 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %jump) #6, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !6584, metadata !DIExpression()), !dbg !6585
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6592
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6592
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6592
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6592
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !6592
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6582, metadata !DIExpression()), !dbg !6585
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6593
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !6593
  %6 = load i32*, i32** %5, align 8, !dbg !6593
  %bf.load14 = load i32, i32* %6, align 8, !dbg !6593
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !6593
  %cmp16 = icmp eq i32 %bf.clear15, 44, !dbg !6594
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !6595

land.rhs:                                         ; preds = %if.end
  %arrayidx27 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !6596
  %rt_rtx28 = bitcast i32* %arrayidx27 to %struct.rtx_def**, !dbg !6596
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !6596
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, !dbg !6597
  %arrayidx31 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 1, !dbg !6597
  %rt_rtx32 = bitcast %struct.object_block** %arrayidx31 to %struct.rtx_def**, !dbg !6597
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !6597
  %cmp33 = icmp eq %struct.rtx_def* %7, %8, !dbg !6598
  %phitmp = zext i1 %cmp33 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i32 [ 0, %if.end ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6583, metadata !DIExpression()), !dbg !6585
  %call34 = tail call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %jump, %struct.rtx_def* %3, i32 %9, %struct.rtx_def** %earliest, %struct.rtx_def* null, i32 %allow_cc_mode, i32 %valid_at_insn_p) #7, !dbg !6599
  br label %cleanup, !dbg !6600

cleanup:                                          ; preds = %lor.lhs.false, %entry, %land.end
  %retval.0 = phi %struct.rtx_def* [ %call34, %land.end ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !6585
  ret %struct.rtx_def* %retval.0, !dbg !6601
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @truncated_to_mode(i32 %mode, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !6602 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6606, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6607, metadata !DIExpression()), !dbg !6608
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6609
  %bf.load = load i32, i32* %0, align 8, !dbg !6609
  %bf.clear = and i32 %bf.load, 65535, !dbg !6609
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6609
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6611

land.lhs.true:                                    ; preds = %entry
  %1 = load i8 (i32, %struct.rtx_def*)*, i8 (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 4), align 8, !dbg !6612
  %call = tail call zeroext i8 %1(i32 %mode, %struct.rtx_def* %x) #6, !dbg !6613
  %tobool = icmp eq i8 %call, 0, !dbg !6613
  br i1 %tobool, label %land.lhs.true.if.end_crit_edge, label %return, !dbg !6614

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %bf.load1.pre = load i32, i32* %0, align 8, !dbg !6615
  br label %if.end, !dbg !6614

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %bf.load7 = phi i32 [ %bf.load1.pre, %land.lhs.true.if.end_crit_edge ], [ %bf.load, %entry ], !dbg !6615
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !6615
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !6615
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !6617
  %idxprom3 = zext i32 %mode to i64, !dbg !6617
  %arrayidx4 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom, i64 %idxprom3, !dbg !6617
  %2 = load i32, i32* %arrayidx4, align 4, !dbg !6617
  %tobool5 = icmp eq i32 %2, 0, !dbg !6617
  br i1 %tobool5, label %if.end21, label %land.lhs.true6, !dbg !6618

land.lhs.true6:                                   ; preds = %if.end
  %call10 = tail call i32 @num_sign_bit_copies(%struct.rtx_def* %x, i32 %bf.clear2) #7, !dbg !6619
  %bf.load11 = load i32, i32* %0, align 8, !dbg !6620
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !6620
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !6620
  %idxprom14 = zext i32 %bf.clear13 to i64, !dbg !6621
  %arrayidx17 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom14, i64 %idxprom3, !dbg !6621
  %3 = load i32, i32* %arrayidx17, align 4, !dbg !6621
  %add = add i32 %3, 1, !dbg !6622
  %cmp18 = icmp ult i32 %call10, %add, !dbg !6623
  br i1 %cmp18, label %if.end21, label %return, !dbg !6624

if.end21:                                         ; preds = %land.lhs.true6, %if.end
  br label %return, !dbg !6625

return:                                           ; preds = %land.lhs.true, %land.lhs.true6, %if.end21
  %retval.0 = phi i8 [ 0, %if.end21 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true6 ], !dbg !6608
  ret i8 %retval.0, !dbg !6626
}

; Function Attrs: nounwind uwtable
define dso_local void @init_rtlanal() local_unnamed_addr #4 !dbg !6627 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6631, metadata !DIExpression()), !dbg !6637
  br label %for.cond, !dbg !6638

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6639
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6631, metadata !DIExpression()), !dbg !6637
  %exitcond = icmp eq i64 %indvars.iv, 139, !dbg !6640
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6641

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %indvars.iv, !dbg !6642
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !6642
  call void @llvm.dbg.value(metadata i8* %0, metadata !6632, metadata !DIExpression()), !dbg !6643
  %call = tail call i8* @strpbrk(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6644
  call void @llvm.dbg.value(metadata i8* %call, metadata !6636, metadata !DIExpression()), !dbg !6643
  %tobool = icmp eq i8* %call, null, !dbg !6645
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !6645
  %sub.ptr.rhs.cast = ptrtoint i8* %0 to i64, !dbg !6645
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6645
  %1 = trunc i64 %sub.ptr.sub to i32, !dbg !6645
  %conv = select i1 %tobool, i32 -1, i32 %1, !dbg !6645
  %arrayidx2 = getelementptr inbounds [139 x i32], [139 x i32]* @non_rtx_starting_operands, i64 0, i64 %indvars.iv, !dbg !6646
  store i32 %conv, i32* %arrayidx2, align 4, !dbg !6647
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6648
  call void @llvm.dbg.value(metadata i32 undef, metadata !6631, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6637
  br label %for.cond, !dbg !6649, !llvm.loop !6650

for.end:                                          ; preds = %for.cond
  tail call fastcc void @init_num_sign_bit_copies_in_rep() #7, !dbg !6652
  ret void, !dbg !6653
}

declare dso_local i8* @strpbrk(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @init_num_sign_bit_copies_in_rep() unnamed_addr #4 !dbg !6654 {
entry:
  br label %for.cond, !dbg !6668

for.cond:                                         ; preds = %for.inc52, %entry
  %in_mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %entry ], [ %arrayidx54, %for.inc52 ]
  %in_mode.0.in = load i8, i8* %in_mode.0.in.in, align 1, !dbg !6669
  %in_mode.0 = zext i8 %in_mode.0.in to i32, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %in_mode.0, metadata !6657, metadata !DIExpression()), !dbg !6670
  %cmp = icmp eq i8 %in_mode.0.in, 0, !dbg !6671
  br i1 %cmp, label %for.end56, label %for.body, !dbg !6672

for.body:                                         ; preds = %for.cond
  %idxprom23 = zext i8 %in_mode.0.in to i64, !dbg !6673
  br label %for.cond3, !dbg !6675

for.cond3:                                        ; preds = %for.inc47, %for.body
  %mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %for.body ], [ %arrayidx49, %for.inc47 ]
  %mode.0.in = load i8, i8* %mode.0.in.in, align 1, !dbg !6676
  %mode.0 = zext i8 %mode.0.in to i32, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !6656, metadata !DIExpression()), !dbg !6670
  %cmp4 = icmp eq i8 %mode.0.in, %in_mode.0.in, !dbg !6677
  br i1 %cmp4, label %for.inc52, label %for.body6, !dbg !6678

for.body6:                                        ; preds = %for.cond3
  %0 = load i32 (i32, i32)*, i32 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 55), align 8, !dbg !6679
  %call = tail call i32 %0(i32 %mode.0, i32 %in_mode.0) #6, !dbg !6679
  %cmp7 = icmp eq i32 %call, 0, !dbg !6679
  br i1 %cmp7, label %for.body6.cond.end_crit_edge, label %lor.lhs.false, !dbg !6679

for.body6.cond.end_crit_edge:                     ; preds = %for.body6
  %.pre2 = zext i8 %mode.0.in to i64, !dbg !6673
  br label %cond.end, !dbg !6679

lor.lhs.false:                                    ; preds = %for.body6
  %idxprom = zext i8 %mode.0.in to i64, !dbg !6679
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !6679
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6679
  %cmp10 = icmp eq i8 %1, %in_mode.0.in, !dbg !6679
  br i1 %cmp10, label %cond.end, label %cond.true, !dbg !6679

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 5004, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6679
  br label %cond.end, !dbg !6679

cond.end:                                         ; preds = %for.body6.cond.end_crit_edge, %lor.lhs.false, %cond.true
  %idxprom25.pre-phi = phi i64 [ %.pre2, %for.body6.cond.end_crit_edge ], [ %idxprom, %lor.lhs.false ], [ %idxprom, %cond.true ], !dbg !6673
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !6658, metadata !DIExpression()), !dbg !6680
  %arrayidx26 = getelementptr inbounds [20 x [20 x i32]], [20 x [20 x i32]]* @num_sign_bit_copies_in_rep, i64 0, i64 %idxprom23, i64 %idxprom25.pre-phi, !dbg !6673
  br label %for.cond12, !dbg !6681

for.cond12:                                       ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ %mode.0, %cond.end ], [ %conv18, %for.inc ], !dbg !6682
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6658, metadata !DIExpression()), !dbg !6680
  %cmp13 = icmp eq i32 %i.0, %in_mode.0, !dbg !6683
  br i1 %cmp13, label %for.inc47, label %for.body15, !dbg !6684

for.body15:                                       ; preds = %for.cond12
  %idxprom16 = zext i32 %i.0 to i64, !dbg !6685
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom16, !dbg !6685
  %2 = load i8, i8* %arrayidx17, align 1, !dbg !6685
  %conv18 = zext i8 %2 to i32, !dbg !6685
  call void @llvm.dbg.value(metadata i32 %conv18, metadata !6664, metadata !DIExpression()), !dbg !6686
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 55), align 8, !dbg !6687
  %call19 = tail call i32 %3(i32 %i.0, i32 %conv18) #6, !dbg !6688
  %cmp20 = icmp eq i32 %call19, 98, !dbg !6689
  br i1 %cmp20, label %for.body15.if.then_crit_edge, label %lor.lhs.false22, !dbg !6690

for.body15.if.then_crit_edge:                     ; preds = %for.body15
  %.pre = load i32, i32* %arrayidx26, align 4, !dbg !6691
  br label %if.then, !dbg !6690

lor.lhs.false22:                                  ; preds = %for.body15
  %4 = load i32, i32* %arrayidx26, align 4, !dbg !6692
  %tobool = icmp eq i32 %4, 0, !dbg !6692
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6693

if.then:                                          ; preds = %for.body15.if.then_crit_edge, %lor.lhs.false22
  %5 = phi i32 [ %.pre, %for.body15.if.then_crit_edge ], [ %4, %lor.lhs.false22 ], !dbg !6691
  %idxprom27 = zext i8 %2 to i64, !dbg !6694
  %arrayidx28 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27, !dbg !6694
  %6 = load i8, i8* %arrayidx28, align 1, !dbg !6694
  %conv30 = zext i8 %6 to i32, !dbg !6694
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom16, !dbg !6695
  %7 = load i8, i8* %arrayidx34, align 1, !dbg !6695
  %conv36 = zext i8 %7 to i32, !dbg !6695
  %mul1 = sub nsw i32 %conv30, %conv36, !dbg !6696
  %sub = shl nsw i32 %mul1, 3, !dbg !6696
  %add = add i32 %5, %sub, !dbg !6691
  store i32 %add, i32* %arrayidx26, align 4, !dbg !6691
  br label %for.inc, !dbg !6697

for.inc:                                          ; preds = %lor.lhs.false22, %if.then
  call void @llvm.dbg.value(metadata i32 %conv18, metadata !6658, metadata !DIExpression()), !dbg !6680
  br label %for.cond12, !dbg !6698, !llvm.loop !6699

for.inc47:                                        ; preds = %for.cond12
  %arrayidx49 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom25.pre-phi, !dbg !6701
  br label %for.cond3, !dbg !6702, !llvm.loop !6703

for.inc52:                                        ; preds = %for.cond3
  %arrayidx54 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom23, !dbg !6705
  br label %for.cond, !dbg !6706, !llvm.loop !6707

for.end56:                                        ; preds = %for.cond
  ret void, !dbg !6709
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @constant_pool_constant_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !6710 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6714, metadata !DIExpression()), !dbg !6715
  %call = tail call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %x) #6, !dbg !6716
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6714, metadata !DIExpression()), !dbg !6715
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !6717
  %bf.load = load i32, i32* %0, align 8, !dbg !6717
  %bf.clear = and i32 %bf.load, 65535, !dbg !6717
  %cmp = icmp eq i32 %bf.clear, 32, !dbg !6718
  %conv1 = zext i1 %cmp to i8, !dbg !6717
  ret i8 %conv1, !dbg !6719
}

; Function Attrs: nounwind uwtable
define dso_local i32 @low_bitmask_len(i32 %mode, i64 %m) local_unnamed_addr #4 !dbg !6720 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6724, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i64 %m, metadata !6725, metadata !DIExpression()), !dbg !6726
  %cmp = icmp eq i32 %mode, 0, !dbg !6727
  br i1 %cmp, label %if.end9, label %if.then, !dbg !6729

if.then:                                          ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !6730
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6730
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6730
  %cmp4 = icmp ugt i8 %0, 8, !dbg !6733
  br i1 %cmp4, label %return, label %if.end, !dbg !6734

if.end:                                           ; preds = %if.then
  %arrayidx8 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !6735
  %1 = load i64, i64* %arrayidx8, align 8, !dbg !6735
  %and = and i64 %1, %m, !dbg !6736
  call void @llvm.dbg.value(metadata i64 %and, metadata !6725, metadata !DIExpression()), !dbg !6726
  br label %if.end9, !dbg !6737

if.end9:                                          ; preds = %entry, %if.end
  %m.addr.0 = phi i64 [ %and, %if.end ], [ %m, %entry ]
  call void @llvm.dbg.value(metadata i64 %m.addr.0, metadata !6725, metadata !DIExpression()), !dbg !6726
  %add = add i64 %m.addr.0, 1, !dbg !6738
  %call = tail call i32 @exact_log2(i64 %add) #6, !dbg !6739
  br label %return, !dbg !6740

return:                                           ; preds = %if.then, %if.end9
  %retval.0 = phi i32 [ %call, %if.end9 ], [ -1, %if.then ], !dbg !6726
  ret i32 %retval.0, !dbg !6741
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #1

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @covers_regno_no_parallel_p(%struct.rtx_def* %dest, i32 %test_regno) unnamed_addr #4 !dbg !6742 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !6744, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32 %test_regno, metadata !6745, metadata !DIExpression()), !dbg !6748
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 0, !dbg !6749
  %bf.load = load i32, i32* %0, align 8, !dbg !6749
  %bf.clear = and i32 %bf.load, 65535, !dbg !6749
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !6751
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6752

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6753
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !6753
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !6753
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6753
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6753
  %conv3 = zext i8 %1 to i32, !dbg !6753
  %sub = add nuw nsw i32 %conv3, 3, !dbg !6754
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6755
  %2 = bitcast %union.rtunion_def* %arrayidx4 to i32**, !dbg !6755
  %3 = load i32*, i32** %2, align 8, !dbg !6755
  %bf.load5 = load i32, i32* %3, align 8, !dbg !6755
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !6755
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !6755
  %idxprom8 = zext i32 %bf.clear7 to i64, !dbg !6755
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom8, !dbg !6755
  %4 = load i8, i8* %arrayidx9, align 1, !dbg !6755
  %conv11 = zext i8 %4 to i32, !dbg !6755
  %sub13 = add nuw nsw i32 %conv11, 3, !dbg !6756
  %cmp15.unshifted = xor i32 %sub, %sub13, !dbg !6757
  %cmp15 = icmp ult i32 %cmp15.unshifted, 4, !dbg !6757
  br i1 %cmp15, label %if.then, label %if.end, !dbg !6758

if.then:                                          ; preds = %land.lhs.true
  %5 = bitcast i32* %3 to %struct.rtx_def*, !dbg !6758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6744, metadata !DIExpression()), !dbg !6748
  br label %if.end, !dbg !6759

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %bf.load21 = phi i32 [ %bf.load5, %if.then ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ], !dbg !6760
  %dest.addr.0 = phi %struct.rtx_def* [ %5, %if.then ], [ %dest, %land.lhs.true ], [ %dest, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0, metadata !6744, metadata !DIExpression()), !dbg !6748
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0, i64 0, i32 0, !dbg !6760
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6760
  %cmp23 = icmp eq i32 %bf.clear22, 37, !dbg !6760
  br i1 %cmp23, label %if.end26, label %cleanup, !dbg !6762

if.end26:                                         ; preds = %if.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.addr.0) #7, !dbg !6763
  call void @llvm.dbg.value(metadata i32 %call, metadata !6746, metadata !DIExpression()), !dbg !6748
  %call27 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.addr.0) #7, !dbg !6764
  %cmp28 = icmp ult i32 %call27, 53, !dbg !6764
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !6764

cond.true:                                        ; preds = %if.end26
  %bf.load30 = load i32, i32* %6, align 8, !dbg !6764
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !6764
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !6764
  %call33 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.addr.0) #7, !dbg !6764
  %call34 = tail call fastcc i32 @end_hard_regno(i32 %bf.clear32, i32 %call33) #7, !dbg !6764
  br label %cond.end, !dbg !6764

cond.false:                                       ; preds = %if.end26
  %call35 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.addr.0) #7, !dbg !6764
  %add36 = add i32 %call35, 1, !dbg !6764
  br label %cond.end, !dbg !6764

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ %add36, %cond.false ], !dbg !6764
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6747, metadata !DIExpression()), !dbg !6748
  %cmp37 = icmp ule i32 %call, %test_regno, !dbg !6765
  %cmp39 = icmp ugt i32 %cond, %test_regno, !dbg !6766
  %7 = and i1 %cmp39, %cmp37, !dbg !6766
  %conv41 = zext i1 %7 to i8, !dbg !6767
  br label %cleanup, !dbg !6768

cleanup:                                          ; preds = %if.end, %cond.end
  %retval.0 = phi i8 [ %conv41, %cond.end ], [ 0, %if.end ], !dbg !6748
  ret i8 %retval.0, !dbg !6769
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @nonzero_bits1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) unnamed_addr #4 !dbg !6770 {
entry:
  %nonzero_for_hook = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6772, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6773, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %known_x, metadata !6774, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %known_mode, metadata !6775, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i64 %known_ret, metadata !6776, metadata !DIExpression()), !dbg !6813
  %idxprom = zext i32 %mode to i64, !dbg !6814
  %arrayidx = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !6814
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6814
  call void @llvm.dbg.value(metadata i64 %0, metadata !6777, metadata !DIExpression()), !dbg !6813
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6815
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !6815
  %conv3 = zext i8 %1 to i32, !dbg !6815
  %mul = shl nuw nsw i32 %conv3, 3, !dbg !6815
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6780, metadata !DIExpression()), !dbg !6813
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6816
  %bf.load = load i32, i32* %2, align 8, !dbg !6816
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6816
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6816
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !6816
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !6816
  %3 = load i8, i8* %arrayidx7, align 1, !dbg !6816
  %cmp = icmp eq i8 %3, 8, !dbg !6816
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !6816

lor.lhs.false:                                    ; preds = %entry
  %cmp16 = icmp eq i8 %3, 9, !dbg !6816
  br i1 %cmp16, label %cleanup, label %lor.lhs.false18, !dbg !6816

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp eq i8 %3, 11, !dbg !6816
  br i1 %cmp25, label %cleanup, label %lor.lhs.false27, !dbg !6816

lor.lhs.false27:                                  ; preds = %lor.lhs.false18
  %cmp34 = icmp eq i8 %3, 17, !dbg !6816
  br i1 %cmp34, label %cleanup, label %lor.lhs.false36, !dbg !6818

lor.lhs.false36:                                  ; preds = %lor.lhs.false27
  %arrayidx38 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6819
  %4 = load i8, i8* %arrayidx38, align 1, !dbg !6819
  %cmp40 = icmp eq i8 %4, 8, !dbg !6819
  br i1 %cmp40, label %cleanup, label %lor.lhs.false42, !dbg !6819

lor.lhs.false42:                                  ; preds = %lor.lhs.false36
  %cmp46 = icmp eq i8 %4, 9, !dbg !6819
  br i1 %cmp46, label %cleanup, label %lor.lhs.false48, !dbg !6819

lor.lhs.false48:                                  ; preds = %lor.lhs.false42
  %cmp52 = icmp eq i8 %4, 11, !dbg !6819
  br i1 %cmp52, label %cleanup, label %lor.lhs.false54, !dbg !6819

lor.lhs.false54:                                  ; preds = %lor.lhs.false48
  %cmp58 = icmp eq i8 %4, 17, !dbg !6819
  br i1 %cmp58, label %cleanup, label %lor.lhs.false60, !dbg !6820

lor.lhs.false60:                                  ; preds = %lor.lhs.false54
  %cmp67 = icmp eq i8 %3, 12, !dbg !6821
  br i1 %cmp67, label %cleanup, label %lor.lhs.false69, !dbg !6821

lor.lhs.false69:                                  ; preds = %lor.lhs.false60
  br i1 false, label %lor.lhs.false69.cleanup_crit_edge, label %lor.lhs.false78, !dbg !6821

lor.lhs.false69.cleanup_crit_edge:                ; preds = %lor.lhs.false69
  br label %cleanup, !dbg !6821

lor.lhs.false78:                                  ; preds = %lor.lhs.false69
  %cmp85 = icmp eq i8 %3, 13, !dbg !6821
  br i1 %cmp85, label %cleanup, label %lor.lhs.false87, !dbg !6821

lor.lhs.false87:                                  ; preds = %lor.lhs.false78
  %cmp94 = icmp eq i8 %3, 14, !dbg !6821
  br i1 %cmp94, label %cleanup, label %lor.lhs.false96, !dbg !6821

lor.lhs.false96:                                  ; preds = %lor.lhs.false87
  %cmp103 = icmp eq i8 %3, 15, !dbg !6821
  br i1 %cmp103, label %cleanup, label %lor.lhs.false105, !dbg !6821

lor.lhs.false105:                                 ; preds = %lor.lhs.false96
  %cmp112 = icmp eq i8 %3, 16, !dbg !6821
  br i1 %cmp112, label %cleanup, label %lor.lhs.false114, !dbg !6822

lor.lhs.false114:                                 ; preds = %lor.lhs.false105
  %cmp118 = icmp eq i8 %4, 12, !dbg !6823
  br i1 %cmp118, label %cleanup, label %lor.lhs.false120, !dbg !6823

lor.lhs.false120:                                 ; preds = %lor.lhs.false114
  br i1 false, label %lor.lhs.false120.cleanup_crit_edge, label %lor.lhs.false126, !dbg !6823

lor.lhs.false120.cleanup_crit_edge:               ; preds = %lor.lhs.false120
  br label %cleanup, !dbg !6823

lor.lhs.false126:                                 ; preds = %lor.lhs.false120
  %cmp130 = icmp eq i8 %4, 13, !dbg !6823
  br i1 %cmp130, label %cleanup, label %lor.lhs.false132, !dbg !6823

lor.lhs.false132:                                 ; preds = %lor.lhs.false126
  %cmp136 = icmp eq i8 %4, 14, !dbg !6823
  br i1 %cmp136, label %cleanup, label %lor.lhs.false138, !dbg !6823

lor.lhs.false138:                                 ; preds = %lor.lhs.false132
  %cmp142 = icmp eq i8 %4, 15, !dbg !6823
  br i1 %cmp142, label %cleanup, label %lor.lhs.false144, !dbg !6823

lor.lhs.false144:                                 ; preds = %lor.lhs.false138
  %cmp148 = icmp eq i8 %4, 16, !dbg !6823
  br i1 %cmp148, label %cleanup, label %if.end, !dbg !6824

if.end:                                           ; preds = %lor.lhs.false144
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom6, !dbg !6825
  %5 = load i8, i8* %arrayidx154, align 1, !dbg !6825
  %conv156 = zext i8 %5 to i32, !dbg !6825
  %mul157 = shl nuw nsw i32 %conv156, 3, !dbg !6825
  %cmp160 = icmp ugt i32 %mul157, %mul, !dbg !6827
  br i1 %cmp160, label %if.then162, label %if.end175, !dbg !6828

if.then162:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6773, metadata !DIExpression()), !dbg !6813
  %arrayidx167 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom6, !dbg !6829
  %6 = load i64, i64* %arrayidx167, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata i64 %6, metadata !6777, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %mul157, metadata !6780, metadata !DIExpression()), !dbg !6813
  br label %if.end175, !dbg !6831

if.end175:                                        ; preds = %if.then162, %if.end
  %mode_width.0 = phi i32 [ %mul157, %if.then162 ], [ %mul, %if.end ], !dbg !6813
  %7 = phi i64 [ %6, %if.then162 ], [ %0, %if.end ], !dbg !6813
  %mode.addr.0 = phi i32 [ %bf.clear, %if.then162 ], [ %mode, %if.end ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !6773, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i64 %7, metadata !6777, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %mode_width.0, metadata !6780, metadata !DIExpression()), !dbg !6813
  %cmp176 = icmp ugt i32 %mode_width.0, 64, !dbg !6832
  br i1 %cmp176, label %cleanup, label %if.end179, !dbg !6834

if.end179:                                        ; preds = %if.end175
  %bf.clear182 = and i32 %bf.load, 16711680, !dbg !6835
  %cmp183 = icmp eq i32 %bf.clear182, 0, !dbg !6837
  br i1 %cmp183, label %if.end248, label %land.lhs.true, !dbg !6838

land.lhs.true:                                    ; preds = %if.end179
  %cmp188 = icmp eq i32 %bf.clear, %mode.addr.0, !dbg !6839
  br i1 %cmp188, label %if.end248, label %land.lhs.true190, !dbg !6840

land.lhs.true190:                                 ; preds = %land.lhs.true
  %cmp201 = icmp ult i8 %5, 5, !dbg !6841
  br i1 %cmp201, label %land.lhs.true203, label %if.end248, !dbg !6842

land.lhs.true203:                                 ; preds = %land.lhs.true190
  br i1 true, label %land.lhs.true216, label %if.end248, !dbg !6843

land.lhs.true216:                                 ; preds = %land.lhs.true203
  %idxprom217 = zext i32 %mode.addr.0 to i64, !dbg !6844
  %arrayidx218 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom217, !dbg !6844
  %8 = load i8, i8* %arrayidx218, align 1, !dbg !6844
  %cmp234 = icmp ugt i8 %8, %5, !dbg !6845
  br i1 %cmp234, label %if.then236, label %if.end248, !dbg !6846

if.then236:                                       ; preds = %land.lhs.true216
  %call = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %x, i32 %bf.clear, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6847
  %bf.load242 = load i32, i32* %2, align 8, !dbg !6849
  %bf.lshr243 = lshr i32 %bf.load242, 16, !dbg !6849
  %bf.clear244 = and i32 %bf.lshr243, 255, !dbg !6849
  %idxprom245 = zext i32 %bf.clear244 to i64, !dbg !6849
  %arrayidx246 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom245, !dbg !6849
  %9 = load i64, i64* %arrayidx246, align 8, !dbg !6849
  %neg = xor i64 %9, -1, !dbg !6850
  %and24713 = or i64 %call, %neg, !dbg !6851
  %or = and i64 %7, %and24713, !dbg !6851
  call void @llvm.dbg.value(metadata i64 %or, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6852

if.end248:                                        ; preds = %land.lhs.true, %if.end179, %land.lhs.true216, %land.lhs.true203, %land.lhs.true190
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !6779, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !6813
  %trunc = trunc i32 %bf.load to i16, !dbg !6853
  switch i16 %trunc, label %cleanup [
    i16 37, label %sw.bb
    i16 30, label %sw.bb297
    i16 47, label %sw.bb878
    i16 81, label %sw.bb299
    i16 80, label %sw.bb299
    i16 92, label %sw.bb299
    i16 97, label %sw.bb299
    i16 83, label %sw.bb299
    i16 87, label %sw.bb299
    i16 94, label %sw.bb299
    i16 85, label %sw.bb299
    i16 89, label %sw.bb299
    i16 96, label %sw.bb299
    i16 82, label %sw.bb299
    i16 86, label %sw.bb299
    i16 93, label %sw.bb299
    i16 84, label %sw.bb299
    i16 88, label %sw.bb299
    i16 95, label %sw.bb299
    i16 90, label %sw.bb299
    i16 91, label %sw.bb299
    i16 51, label %sw.bb313
    i16 118, label %sw.bb877
    i16 100, label %sw.bb335
    i16 99, label %sw.bb343
    i16 98, label %sw.bb371
    i16 61, label %sw.bb432
    i16 63, label %sw.bb445
    i16 62, label %sw.bb445
    i16 72, label %sw.bb445
    i16 73, label %sw.bb445
    i16 70, label %sw.bb445
    i16 71, label %sw.bb445
    i16 49, label %sw.bb463
    i16 50, label %sw.bb463
    i16 52, label %sw.bb463
    i16 55, label %sw.bb463
    i16 59, label %sw.bb463
    i16 58, label %sw.bb463
    i16 60, label %sw.bb463
    i16 120, label %sw.bb595
    i16 39, label %sw.bb626
    i16 67, label %sw.bb741
    i16 68, label %sw.bb741
    i16 65, label %sw.bb741
    i16 66, label %sw.bb741
    i16 114, label %sw.bb869
    i16 117, label %sw.bb869
    i16 115, label %sw.bb875
    i16 116, label %sw.bb876
  ], !dbg !6853

sw.bb:                                            ; preds = %if.end248
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !6854
  %cmp251 = icmp eq %struct.rtx_def* %10, %x, !dbg !6855
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !6856
  %cmp254 = icmp eq %struct.rtx_def* %11, %x, !dbg !6857
  %or.cond = or i1 %cmp251, %cmp254, !dbg !6858
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !6859
  %cmp257 = icmp eq %struct.rtx_def* %12, %x, !dbg !6860
  %or.cond1 = or i1 %or.cond, %cmp257, !dbg !6858
  br i1 %or.cond1, label %land.lhs.true259, label %if.end290, !dbg !6858

land.lhs.true259:                                 ; preds = %sw.bb
  %13 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !6861
  %call260 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !6861
  %idxprom261 = zext i32 %call260 to i64, !dbg !6861
  %arrayidx262 = getelementptr inbounds i8, i8* %13, i64 %idxprom261, !dbg !6861
  %14 = load i8, i8* %arrayidx262, align 1, !dbg !6861
  %tobool = icmp eq i8 %14, 0, !dbg !6861
  br i1 %tobool, label %if.end290, label %if.then264, !dbg !6862

if.then264:                                       ; preds = %land.lhs.true259
  %15 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 1, i32 9), align 8, !dbg !6863
  %call265 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !6863
  %idxprom266 = zext i32 %call265 to i64, !dbg !6863
  %arrayidx267 = getelementptr inbounds i8, i8* %15, i64 %idxprom266, !dbg !6863
  %16 = load i8, i8* %arrayidx267, align 1, !dbg !6863
  %17 = lshr i8 %16, 3, !dbg !6864
  %conv269 = zext i8 %17 to i64, !dbg !6863
  call void @llvm.dbg.value(metadata i64 %conv269, metadata !6781, metadata !DIExpression()), !dbg !6865
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !6866
  %cmp270 = icmp eq %struct.rtx_def* %18, %x, !dbg !6868
  br i1 %cmp270, label %land.lhs.true272, label %if.end287, !dbg !6869

land.lhs.true272:                                 ; preds = %if.then264
  %19 = load i32, i32* @target_flags, align 4, !dbg !6870
  %and273 = and i32 %19, 8192, !dbg !6870
  %cmp274 = icmp eq i32 %and273, 0, !dbg !6870
  br i1 %cmp274, label %land.lhs.true276, label %if.end287, !dbg !6870

land.lhs.true276:                                 ; preds = %land.lhs.true272
  %and277 = and i32 %19, 4, !dbg !6870
  %cmp278 = icmp eq i32 %and277, 0, !dbg !6870
  br i1 %cmp278, label %lor.lhs.false280, label %if.end287, !dbg !6870

lor.lhs.false280:                                 ; preds = %land.lhs.true276
  %call281 = tail call i32 @ix86_cfun_abi() #6, !dbg !6870
  %cmp282 = icmp eq i32 %call281, 1, !dbg !6870
  br i1 %cmp282, label %if.end287, label %if.then284, !dbg !6871

if.then284:                                       ; preds = %lor.lhs.false280
  %20 = icmp ult i64 %conv269, 4, !dbg !6872
  %.conv269 = select i1 %20, i64 %conv269, i64 4, !dbg !6872
  call void @llvm.dbg.value(metadata i64 %.conv269, metadata !6781, metadata !DIExpression()), !dbg !6865
  br label %if.end287, !dbg !6873

if.end287:                                        ; preds = %land.lhs.true276, %if.then284, %lor.lhs.false280, %land.lhs.true272, %if.then264
  %alignment.0 = phi i64 [ %conv269, %land.lhs.true276 ], [ %conv269, %lor.lhs.false280 ], [ %.conv269, %if.then284 ], [ %conv269, %land.lhs.true272 ], [ %conv269, %if.then264 ], !dbg !6865
  call void @llvm.dbg.value(metadata i64 %alignment.0, metadata !6781, metadata !DIExpression()), !dbg !6865
  %neg288 = sub nsw i64 0, %alignment.0, !dbg !6874
  %and289 = and i64 %7, %neg288, !dbg !6875
  call void @llvm.dbg.value(metadata i64 %and289, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %if.end290, !dbg !6876

if.end290:                                        ; preds = %land.lhs.true259, %sw.bb, %if.end287
  %nonzero.1 = phi i64 [ %and289, %if.end287 ], [ %7, %land.lhs.true259 ], [ %7, %sw.bb ], !dbg !6813
  call void @llvm.dbg.value(metadata i64 %nonzero.1, metadata !6777, metadata !DIExpression()), !dbg !6813
  %21 = bitcast i64* %nonzero_for_hook to i8*, !dbg !6877
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8, !dbg !6877
  call void @llvm.dbg.value(metadata i64 %nonzero.1, metadata !6785, metadata !DIExpression()), !dbg !6878
  store i64 %nonzero.1, i64* %nonzero_for_hook, align 8, !dbg !6879
  %22 = load %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 2), align 8, !dbg !6880
  call void @llvm.dbg.value(metadata i64* %nonzero_for_hook, metadata !6785, metadata !DIExpression(DW_OP_deref)), !dbg !6878
  %call291 = call %struct.rtx_def* %22(%struct.rtx_def* %x, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret, i64* nonnull %nonzero_for_hook) #6, !dbg !6881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call291, metadata !6787, metadata !DIExpression()), !dbg !6878
  %tobool292 = icmp eq %struct.rtx_def* %call291, null, !dbg !6882
  br i1 %tobool292, label %if.end290.if.end296_crit_edge, label %if.then293, !dbg !6884

if.end290.if.end296_crit_edge:                    ; preds = %if.end290
  %.pre = load i64, i64* %nonzero_for_hook, align 8, !dbg !6885
  br label %if.end296, !dbg !6884

if.then293:                                       ; preds = %if.end290
  %call294 = call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* nonnull %call291, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6886
  %23 = load i64, i64* %nonzero_for_hook, align 8, !dbg !6887
  call void @llvm.dbg.value(metadata i64 %23, metadata !6785, metadata !DIExpression()), !dbg !6878
  %and295 = and i64 %23, %call294, !dbg !6887
  call void @llvm.dbg.value(metadata i64 %and295, metadata !6785, metadata !DIExpression()), !dbg !6878
  store i64 %and295, i64* %nonzero_for_hook, align 8, !dbg !6887
  br label %if.end296, !dbg !6888

if.end296:                                        ; preds = %if.end290.if.end296_crit_edge, %if.then293
  %24 = phi i64 [ %.pre, %if.end290.if.end296_crit_edge ], [ %and295, %if.then293 ], !dbg !6885
  call void @llvm.dbg.value(metadata i64 %24, metadata !6785, metadata !DIExpression()), !dbg !6878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8, !dbg !6889
  br label %cleanup

sw.bb297:                                         ; preds = %if.end248
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6890
  %arrayidx298 = bitcast %union.u* %u to i64*, !dbg !6890
  %25 = load i64, i64* %arrayidx298, align 8, !dbg !6890
  br label %cleanup, !dbg !6891

sw.bb299:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  %cmp306 = icmp eq i8 %3, 2, !dbg !6892
  %cmp309 = icmp ult i32 %mode_width.0, 65, !dbg !6894
  %or.cond2 = and i1 %cmp306, %cmp309, !dbg !6895
  %nonzero.2 = select i1 %or.cond2, i64 1, i64 %7, !dbg !6895
  br label %cleanup, !dbg !6895

sw.bb313:                                         ; preds = %if.end248
  %cmp321 = icmp ugt i32 %mode_width.0, %conv156, !dbg !6896
  br i1 %cmp321, label %if.then323, label %cleanup, !dbg !6898

if.then323:                                       ; preds = %sw.bb313
  call void @llvm.dbg.value(metadata i64 %7, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6899

sw.bb335:                                         ; preds = %if.end248
  %arrayidx337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6900
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**, !dbg !6900
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6900
  %call338 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %26, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6901
  %and341 = and i64 %call338, %7, !dbg !6902
  call void @llvm.dbg.value(metadata i64 %and341, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6903

sw.bb343:                                         ; preds = %if.end248
  %arrayidx346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6904
  %rt_rtx347 = bitcast %union.rtunion_def* %arrayidx346 to %struct.rtx_def**, !dbg !6904
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx347, align 8, !dbg !6904
  %call348 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %27, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6905
  %and349 = and i64 %7, %call348, !dbg !6906
  call void @llvm.dbg.value(metadata i64 %and349, metadata !6777, metadata !DIExpression()), !dbg !6813
  %28 = bitcast %union.rtunion_def* %arrayidx346 to i32**, !dbg !6907
  %29 = load i32*, i32** %28, align 8, !dbg !6907
  %bf.load354 = load i32, i32* %29, align 8, !dbg !6907
  %bf.clear356 = and i32 %bf.load354, 16711680, !dbg !6907
  %cmp357 = icmp eq i32 %bf.clear356, 0, !dbg !6909
  br i1 %cmp357, label %cleanup, label %if.then359, !dbg !6910

if.then359:                                       ; preds = %sw.bb343
  %bf.lshr365 = lshr i32 %bf.load354, 16, !dbg !6911
  %bf.clear366 = and i32 %bf.lshr365, 255, !dbg !6911
  %idxprom367 = zext i32 %bf.clear366 to i64, !dbg !6911
  %arrayidx368 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom367, !dbg !6911
  %30 = load i64, i64* %arrayidx368, align 8, !dbg !6911
  %and369 = and i64 %and349, %30, !dbg !6912
  call void @llvm.dbg.value(metadata i64 %and369, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6913

sw.bb371:                                         ; preds = %if.end248
  %arrayidx374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6914
  %rt_rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**, !dbg !6914
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx375, align 8, !dbg !6914
  %call376 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %31, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6915
  call void @llvm.dbg.value(metadata i64 %call376, metadata !6778, metadata !DIExpression()), !dbg !6813
  %32 = bitcast %union.rtunion_def* %arrayidx374 to i32**, !dbg !6916
  %33 = load i32*, i32** %32, align 8, !dbg !6916
  %bf.load381 = load i32, i32* %33, align 8, !dbg !6916
  %bf.clear383 = and i32 %bf.load381, 16711680, !dbg !6916
  %cmp384 = icmp eq i32 %bf.clear383, 0, !dbg !6918
  br i1 %cmp384, label %if.end430, label %if.then386, !dbg !6919

if.then386:                                       ; preds = %sw.bb371
  %bf.lshr392 = lshr i32 %bf.load381, 16, !dbg !6920
  %bf.clear393 = and i32 %bf.lshr392, 255, !dbg !6920
  %idxprom394 = zext i32 %bf.clear393 to i64, !dbg !6920
  %arrayidx395 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom394, !dbg !6920
  %34 = load i64, i64* %arrayidx395, align 8, !dbg !6920
  %and396 = and i64 %call376, %34, !dbg !6922
  call void @llvm.dbg.value(metadata i64 %and396, metadata !6778, metadata !DIExpression()), !dbg !6813
  %arrayidx405 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom394, !dbg !6923
  %35 = load i8, i8* %arrayidx405, align 1, !dbg !6923
  %conv407 = zext i8 %35 to i64, !dbg !6923
  %mul408 = shl nuw nsw i64 %conv407, 3, !dbg !6923
  %sub411 = add nuw nsw i64 %mul408, 4294967295, !dbg !6925
  %sh_prom = and i64 %sub411, 4294967295, !dbg !6926
  %shl = shl i64 1, %sh_prom, !dbg !6926
  %and412 = and i64 %and396, %shl, !dbg !6927
  %tobool413 = icmp eq i64 %and412, 0, !dbg !6927
  br i1 %tobool413, label %if.end430, label %if.then414, !dbg !6928

if.then414:                                       ; preds = %if.then386
  %neg426 = xor i64 %34, -1, !dbg !6929
  %and427 = and i64 %7, %neg426, !dbg !6930
  %or428 = or i64 %and396, %and427, !dbg !6931
  call void @llvm.dbg.value(metadata i64 %or428, metadata !6778, metadata !DIExpression()), !dbg !6813
  br label %if.end430, !dbg !6932

if.end430:                                        ; preds = %if.then386, %sw.bb371, %if.then414
  %inner_nz.1 = phi i64 [ %call376, %sw.bb371 ], [ %or428, %if.then414 ], [ %and396, %if.then386 ], !dbg !6933
  call void @llvm.dbg.value(metadata i64 %inner_nz.1, metadata !6778, metadata !DIExpression()), !dbg !6813
  %and431 = and i64 %7, %inner_nz.1, !dbg !6934
  call void @llvm.dbg.value(metadata i64 %and431, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6935

sw.bb432:                                         ; preds = %if.end248
  %arrayidx435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6936
  %rt_rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**, !dbg !6936
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx436, align 8, !dbg !6936
  %call437 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %36, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6937
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6938
  %rt_rtx441 = bitcast %union.rtunion_def* %37 to %struct.rtx_def**, !dbg !6938
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx441, align 8, !dbg !6938
  %call442 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %38, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6939
  %and443 = and i64 %call437, %call442, !dbg !6940
  %and444 = and i64 %7, %and443, !dbg !6941
  call void @llvm.dbg.value(metadata i64 %and444, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6942

sw.bb445:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  %arrayidx448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6943
  %rt_rtx449 = bitcast %union.rtunion_def* %arrayidx448 to %struct.rtx_def**, !dbg !6943
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx449, align 8, !dbg !6943
  %call450 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %39, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6944
  call void @llvm.dbg.value(metadata i64 %call450, metadata !6788, metadata !DIExpression()), !dbg !6945
  %and451 = and i64 %7, %call450, !dbg !6946
  %cmp452 = icmp eq i64 %and451, %7, !dbg !6948
  br i1 %cmp452, label %cleanup, label %if.then454, !dbg !6949

if.then454:                                       ; preds = %sw.bb445
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6950
  %rt_rtx458 = bitcast %union.rtunion_def* %40 to %struct.rtx_def**, !dbg !6950
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx458, align 8, !dbg !6950
  %call459 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %41, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6951
  %or460 = or i64 %call450, %call459, !dbg !6952
  %and461 = and i64 %7, %or460, !dbg !6953
  call void @llvm.dbg.value(metadata i64 %and461, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !6954

sw.bb463:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248
  %arrayidx466 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6955
  %rt_rtx467 = bitcast %union.rtunion_def* %arrayidx466 to %struct.rtx_def**, !dbg !6955
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx467, align 8, !dbg !6955
  %call468 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %42, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6956
  call void @llvm.dbg.value(metadata i64 %call468, metadata !6790, metadata !DIExpression()), !dbg !6957
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6958
  %rt_rtx472 = bitcast %union.rtunion_def* %43 to %struct.rtx_def**, !dbg !6958
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx472, align 8, !dbg !6958
  %call473 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %44, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !6959
  call void @llvm.dbg.value(metadata i64 %call473, metadata !6792, metadata !DIExpression()), !dbg !6957
  %bf.load474 = load i32, i32* %2, align 8, !dbg !6960
  %bf.lshr475 = lshr i32 %bf.load474, 16, !dbg !6960
  %bf.clear476 = and i32 %bf.lshr475, 255, !dbg !6960
  %idxprom477 = zext i32 %bf.clear476 to i64, !dbg !6960
  %arrayidx478 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom477, !dbg !6960
  %45 = load i8, i8* %arrayidx478, align 1, !dbg !6960
  %conv480 = zext i8 %45 to i64, !dbg !6960
  %mul481 = shl nuw nsw i64 %conv480, 3, !dbg !6960
  %sub484 = add nuw nsw i64 %mul481, 4294967295, !dbg !6961
  call void @llvm.dbg.value(metadata i8 %45, metadata !6793, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6957
  %call485 = tail call i32 @floor_log2(i64 %call468) #6, !dbg !6962
  %add = add nsw i32 %call485, 1, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %add, metadata !6794, metadata !DIExpression()), !dbg !6957
  %call486 = tail call i32 @floor_log2(i64 %call473) #6, !dbg !6964
  %add487 = add nsw i32 %call486, 1, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %add487, metadata !6795, metadata !DIExpression()), !dbg !6957
  %sub488 = sub i64 0, %call468, !dbg !6966
  %and489 = and i64 %call468, %sub488, !dbg !6967
  %call490 = tail call i32 @floor_log2(i64 %and489) #6, !dbg !6968
  call void @llvm.dbg.value(metadata i32 %call490, metadata !6796, metadata !DIExpression()), !dbg !6957
  %sub491 = sub i64 0, %call473, !dbg !6969
  %and492 = and i64 %call473, %sub491, !dbg !6970
  %call493 = tail call i32 @floor_log2(i64 %and492) #6, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %call493, metadata !6797, metadata !DIExpression()), !dbg !6957
  %sh_prom494 = and i64 %sub484, 4294967295, !dbg !6972
  %shl495 = shl i64 1, %sh_prom494, !dbg !6972
  %and496 = and i64 %call468, %shl495, !dbg !6973
  call void @llvm.dbg.value(metadata i64 %and496, metadata !6798, metadata !DIExpression()), !dbg !6957
  %and499 = and i64 %call473, %shl495, !dbg !6974
  call void @llvm.dbg.value(metadata i64 %and499, metadata !6799, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %mode_width.0, metadata !6800, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 0, metadata !6801, metadata !DIExpression()), !dbg !6957
  switch i16 %trunc, label %sw.default [
    i16 49, label %sw.bb500
    i16 50, label %sw.bb514
    i16 52, label %sw.bb521
    i16 55, label %sw.bb524
    i16 59, label %sw.bb534
    i16 58, label %sw.bb539
    i16 60, label %sw.bb561
  ], !dbg !6975

sw.bb500:                                         ; preds = %sw.bb463
  %cmp501 = icmp sgt i32 %add, %add487, !dbg !6976
  %add.add487 = select i1 %cmp501, i32 %add, i32 %add487, !dbg !6976
  %add507 = add nsw i32 %add.add487, 1, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %add507, metadata !6800, metadata !DIExpression()), !dbg !6957
  %cmp508 = icmp slt i32 %call490, %call493, !dbg !6979
  %cond513 = select i1 %cmp508, i32 %call490, i32 %call493, !dbg !6979
  br label %sw.epilog, !dbg !6979

sw.bb514:                                         ; preds = %sw.bb463
  %cmp515 = icmp slt i32 %call490, %call493, !dbg !6980
  %call490.call493 = select i1 %cmp515, i32 %call490, i32 %call493, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %call490.call493, metadata !6801, metadata !DIExpression()), !dbg !6957
  br label %sw.epilog, !dbg !6981

sw.bb521:                                         ; preds = %sw.bb463
  %add522 = add nsw i32 %add, %add487, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %add522, metadata !6800, metadata !DIExpression()), !dbg !6957
  %add523 = add nsw i32 %call490, %call493, !dbg !6983
  call void @llvm.dbg.value(metadata i32 %add523, metadata !6801, metadata !DIExpression()), !dbg !6957
  br label %sw.epilog, !dbg !6984

sw.bb524:                                         ; preds = %sw.bb463
  %cmp525 = icmp eq i32 %add487, 0, !dbg !6985
  br i1 %cmp525, label %sw.epilog, label %if.end528, !dbg !6987

if.end528:                                        ; preds = %sw.bb524
  %46 = or i64 %and496, %and499, !dbg !6988
  %47 = icmp eq i64 %46, 0, !dbg !6988
  %result_width.0 = select i1 %47, i32 %add, i32 %mode_width.0, !dbg !6988
  br label %sw.epilog, !dbg !6988

sw.bb534:                                         ; preds = %sw.bb463
  %cmp535 = icmp eq i32 %add487, 0, !dbg !6990
  %mode_width.0.add = select i1 %cmp535, i32 %mode_width.0, i32 %add, !dbg !6992
  br label %sw.epilog, !dbg !6992

sw.bb539:                                         ; preds = %sw.bb463
  %cmp540 = icmp eq i32 %add487, 0, !dbg !6993
  br i1 %cmp540, label %sw.epilog, label %if.end543, !dbg !6995

if.end543:                                        ; preds = %sw.bb539
  %48 = or i64 %and496, %and499, !dbg !6996
  %49 = icmp eq i64 %48, 0, !dbg !6996
  %cmp548 = icmp slt i32 %add, %add487, !dbg !6996
  %add.add4875 = select i1 %cmp548, i32 %add, i32 %add487, !dbg !6996
  %result_width.1 = select i1 %49, i32 %add.add4875, i32 %mode_width.0, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %result_width.1, metadata !6800, metadata !DIExpression()), !dbg !6957
  %cmp555 = icmp slt i32 %call490, %call493, !dbg !6998
  %call490.call4936 = select i1 %cmp555, i32 %call490, i32 %call493, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %call490.call4936, metadata !6801, metadata !DIExpression()), !dbg !6957
  br label %sw.epilog, !dbg !6999

sw.bb561:                                         ; preds = %sw.bb463
  %cmp562 = icmp eq i32 %add487, 0, !dbg !7000
  br i1 %cmp562, label %sw.epilog, label %if.end565, !dbg !7002

if.end565:                                        ; preds = %sw.bb561
  %cmp566 = icmp slt i32 %add, %add487, !dbg !7003
  %add.add4877 = select i1 %cmp566, i32 %add, i32 %add487, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %add.add4877, metadata !6800, metadata !DIExpression()), !dbg !6957
  %cmp572 = icmp slt i32 %call490, %call493, !dbg !7004
  %cond577 = select i1 %cmp572, i32 %call490, i32 %call493, !dbg !7004
  br label %sw.epilog, !dbg !7004

sw.default:                                       ; preds = %sw.bb463
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3984, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7005
  br label %sw.epilog, !dbg !7006

sw.epilog:                                        ; preds = %if.end565, %sw.bb561, %sw.bb539, %sw.bb534, %if.end528, %sw.bb524, %sw.bb500, %sw.default, %if.end543, %sw.bb521, %sw.bb514
  %result_width.2 = phi i32 [ %mode_width.0, %sw.default ], [ %result_width.1, %if.end543 ], [ %add522, %sw.bb521 ], [ %mode_width.0, %sw.bb514 ], [ %add507, %sw.bb500 ], [ %mode_width.0, %sw.bb524 ], [ %result_width.0, %if.end528 ], [ %mode_width.0.add, %sw.bb534 ], [ %mode_width.0, %sw.bb539 ], [ %mode_width.0, %sw.bb561 ], [ %add.add4877, %if.end565 ], !dbg !6957
  %result_low.0 = phi i32 [ 0, %sw.default ], [ %call490.call4936, %if.end543 ], [ %add523, %sw.bb521 ], [ %call490.call493, %sw.bb514 ], [ %cond513, %sw.bb500 ], [ 0, %sw.bb524 ], [ 0, %if.end528 ], [ 0, %sw.bb534 ], [ 0, %sw.bb539 ], [ 0, %sw.bb561 ], [ %cond577, %if.end565 ], !dbg !6957
  call void @llvm.dbg.value(metadata i32 %result_low.0, metadata !6801, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %result_width.2, metadata !6800, metadata !DIExpression()), !dbg !6957
  %cmp578 = icmp ult i32 %result_width.2, %mode_width.0, !dbg !7007
  br i1 %cmp578, label %if.then580, label %if.end585, !dbg !7009

if.then580:                                       ; preds = %sw.epilog
  %sh_prom581 = zext i32 %result_width.2 to i64, !dbg !7010
  %notmask12 = shl nsw i64 -1, %sh_prom581, !dbg !7011
  %sub583 = xor i64 %notmask12, -1, !dbg !7011
  %and584 = and i64 %7, %sub583, !dbg !7012
  call void @llvm.dbg.value(metadata i64 %and584, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %if.end585, !dbg !7013

if.end585:                                        ; preds = %if.then580, %sw.epilog
  %nonzero.6 = phi i64 [ %and584, %if.then580 ], [ %7, %sw.epilog ], !dbg !6813
  call void @llvm.dbg.value(metadata i64 %nonzero.6, metadata !6777, metadata !DIExpression()), !dbg !6813
  %cmp586 = icmp sgt i32 %result_low.0, 0, !dbg !7014
  br i1 %cmp586, label %if.then588, label %cleanup, !dbg !7016

if.then588:                                       ; preds = %if.end585
  %sh_prom589 = zext i32 %result_low.0 to i64, !dbg !7017
  %notmask11 = shl nsw i64 -1, %sh_prom589, !dbg !7018
  %and593 = and i64 %nonzero.6, %notmask11, !dbg !7019
  call void @llvm.dbg.value(metadata i64 %and593, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7020

sw.bb595:                                         ; preds = %if.end248
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7021
  %51 = bitcast %union.rtunion_def* %50 to i32**, !dbg !7021
  %52 = load i32*, i32** %51, align 8, !dbg !7021
  %bf.load600 = load i32, i32* %52, align 8, !dbg !7021
  %bf.clear601 = and i32 %bf.load600, 65535, !dbg !7021
  %cmp602 = icmp eq i32 %bf.clear601, 30, !dbg !7021
  br i1 %cmp602, label %land.lhs.true604, label %cleanup, !dbg !7023

land.lhs.true604:                                 ; preds = %sw.bb595
  %u609 = getelementptr inbounds i32, i32* %52, i64 2, !dbg !7024
  %arrayidx611 = bitcast i32* %u609 to i64*, !dbg !7024
  %53 = load i64, i64* %arrayidx611, align 8, !dbg !7024
  %cmp612 = icmp slt i64 %53, 64, !dbg !7025
  br i1 %cmp612, label %if.then614, label %cleanup, !dbg !7026

if.then614:                                       ; preds = %land.lhs.true604
  %notmask9 = shl nsw i64 -1, %53, !dbg !7027
  %sub623 = xor i64 %notmask9, -1, !dbg !7027
  %and624 = and i64 %7, %sub623, !dbg !7028
  call void @llvm.dbg.value(metadata i64 %and624, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7029

sw.bb626:                                         ; preds = %if.end248
  %bf.clear629 = and i32 %bf.load, 268435456, !dbg !7030
  %tobool630 = icmp eq i32 %bf.clear629, 0, !dbg !7030
  br i1 %tobool630, label %if.end660, label %land.lhs.true631, !dbg !7032

land.lhs.true631:                                 ; preds = %sw.bb626
  %bf.clear634 = and i32 %bf.load, 134217728, !dbg !7033
  %tobool635 = icmp eq i32 %bf.clear634, 0, !dbg !7033
  br i1 %tobool635, label %cond.false637, label %cond.end641, !dbg !7033

cond.false637:                                    ; preds = %land.lhs.true631
  %bf.clear640 = and i32 %bf.load, 67108864, !dbg !7033
  %phitmp = icmp ne i32 %bf.clear640, 0, !dbg !7033
  br label %cond.end641, !dbg !7033

cond.end641:                                      ; preds = %land.lhs.true631, %cond.false637
  %cond642 = phi i1 [ %phitmp, %cond.false637 ], [ false, %land.lhs.true631 ]
  br i1 %cond642, label %if.then645, label %if.end660, !dbg !7034

if.then645:                                       ; preds = %cond.end641
  %arrayidx650 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom6, !dbg !7035
  %54 = load i64, i64* %arrayidx650, align 8, !dbg !7035
  %arrayidx653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7036
  %rt_rtx654 = bitcast %union.rtunion_def* %arrayidx653 to %struct.rtx_def**, !dbg !7036
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx654, align 8, !dbg !7036
  %call658 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %55, i32 %bf.clear, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !7037
  %and659 = and i64 %54, %call658, !dbg !7038
  call void @llvm.dbg.value(metadata i64 %and659, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %if.end660, !dbg !7039

if.end660:                                        ; preds = %sw.bb626, %if.then645, %cond.end641
  %nonzero.9 = phi i64 [ %and659, %if.then645 ], [ %7, %cond.end641 ], [ %7, %sw.bb626 ], !dbg !6813
  call void @llvm.dbg.value(metadata i64 %nonzero.9, metadata !6777, metadata !DIExpression()), !dbg !6813
  %arrayidx663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7040
  %56 = bitcast %union.rtunion_def* %arrayidx663 to i32**, !dbg !7040
  %57 = load i32*, i32** %56, align 8, !dbg !7040
  %bf.load665 = load i32, i32* %57, align 8, !dbg !7040
  %bf.lshr666 = lshr i32 %bf.load665, 16, !dbg !7040
  %bf.clear667 = and i32 %bf.lshr666, 255, !dbg !7040
  %idxprom668 = zext i32 %bf.clear667 to i64, !dbg !7040
  %arrayidx669 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom668, !dbg !7040
  %58 = load i8, i8* %arrayidx669, align 1, !dbg !7040
  %cmp675 = icmp ult i8 %58, 5, !dbg !7042
  %59 = bitcast i32* %57 to %struct.rtx_def*, !dbg !7043
  br i1 %cmp675, label %land.lhs.true677, label %cleanup, !dbg !7043

land.lhs.true677:                                 ; preds = %if.end660
  br i1 true, label %if.then694, label %cleanup, !dbg !7044

if.then694:                                       ; preds = %land.lhs.true677
  %call699 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %59, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !7045
  %and700 = and i64 %nonzero.9, %call699, !dbg !7047
  call void @llvm.dbg.value(metadata i64 %and700, metadata !6777, metadata !DIExpression()), !dbg !6813
  %bf.load701 = load i32, i32* %2, align 8, !dbg !7048
  %bf.lshr702 = lshr i32 %bf.load701, 16, !dbg !7048
  %bf.clear703 = and i32 %bf.lshr702, 255, !dbg !7048
  %idxprom704 = zext i32 %bf.clear703 to i64, !dbg !7048
  %arrayidx705 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom704, !dbg !7048
  %60 = load i8, i8* %arrayidx705, align 1, !dbg !7048
  %61 = load i32*, i32** %56, align 8, !dbg !7051
  %bf.load712 = load i32, i32* %61, align 8, !dbg !7051
  %bf.lshr713 = lshr i32 %bf.load712, 16, !dbg !7051
  %bf.clear714 = and i32 %bf.lshr713, 255, !dbg !7051
  %idxprom715 = zext i32 %bf.clear714 to i64, !dbg !7051
  %arrayidx716 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom715, !dbg !7051
  %62 = load i8, i8* %arrayidx716, align 1, !dbg !7051
  %cmp719 = icmp ugt i8 %60, %62, !dbg !7052
  br i1 %cmp719, label %if.then721, label %cleanup, !dbg !7053

if.then721:                                       ; preds = %if.then694
  %arrayidx726 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom704, !dbg !7054
  %63 = load i64, i64* %arrayidx726, align 8, !dbg !7054
  %arrayidx735 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom715, !dbg !7055
  %64 = load i64, i64* %arrayidx735, align 8, !dbg !7055
  %neg736 = xor i64 %64, -1, !dbg !7056
  %and737 = and i64 %63, %neg736, !dbg !7057
  %or738 = or i64 %and700, %and737, !dbg !7058
  call void @llvm.dbg.value(metadata i64 %or738, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7059

sw.bb741:                                         ; preds = %if.end248, %if.end248, %if.end248, %if.end248
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7060
  %66 = bitcast %union.rtunion_def* %65 to i32**, !dbg !7060
  %67 = load i32*, i32** %66, align 8, !dbg !7060
  %bf.load746 = load i32, i32* %67, align 8, !dbg !7060
  %bf.clear747 = and i32 %bf.load746, 65535, !dbg !7060
  %cmp748 = icmp eq i32 %bf.clear747, 30, !dbg !7060
  br i1 %cmp748, label %land.lhs.true750, label %cleanup, !dbg !7061

land.lhs.true750:                                 ; preds = %sw.bb741
  %u755 = getelementptr inbounds i32, i32* %67, i64 2, !dbg !7062
  %arrayidx757 = bitcast i32* %u755 to i64*, !dbg !7062
  %68 = load i64, i64* %arrayidx757, align 8, !dbg !7062
  %cmp758 = icmp sgt i64 %68, -1, !dbg !7063
  br i1 %cmp758, label %land.lhs.true760, label %cleanup, !dbg !7064

land.lhs.true760:                                 ; preds = %land.lhs.true750
  %cmp768 = icmp slt i64 %68, 64, !dbg !7065
  br i1 %cmp768, label %land.lhs.true770, label %cleanup, !dbg !7066

land.lhs.true770:                                 ; preds = %land.lhs.true760
  %conv784 = zext i8 %5 to i64, !dbg !7067
  %mul785 = shl nuw nsw i64 %conv784, 3, !dbg !7067
  %cmp788 = icmp slt i64 %68, %mul785, !dbg !7068
  br i1 %cmp788, label %if.then790, label %cleanup, !dbg !7069

if.then790:                                       ; preds = %land.lhs.true770
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6802, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i32 %mul157, metadata !6805, metadata !DIExpression()), !dbg !7070
  %conv808 = trunc i64 %68 to i32, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %conv808, metadata !6806, metadata !DIExpression()), !dbg !7070
  %arrayidx810 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom6, !dbg !7072
  %69 = load i64, i64* %arrayidx810, align 8, !dbg !7072
  call void @llvm.dbg.value(metadata i64 %69, metadata !6807, metadata !DIExpression()), !dbg !7070
  %arrayidx813 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7073
  %rt_rtx814 = bitcast %union.rtunion_def* %arrayidx813 to %struct.rtx_def**, !dbg !7073
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx814, align 8, !dbg !7073
  %call815 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %70, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !7074
  call void @llvm.dbg.value(metadata i64 %call815, metadata !6808, metadata !DIExpression()), !dbg !7070
  %and816 = and i64 %call815, %69, !dbg !7075
  call void @llvm.dbg.value(metadata i64 %and816, metadata !6809, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i64 0, metadata !6810, metadata !DIExpression()), !dbg !7070
  %cmp817 = icmp ugt i32 %mode_width.0, %mul157, !dbg !7076
  br i1 %cmp817, label %if.then819, label %if.end823, !dbg !7078

if.then819:                                       ; preds = %if.then790
  %and820 = and i64 %call815, %7, !dbg !7079
  %neg821 = xor i64 %69, -1, !dbg !7080
  %and822 = and i64 %and820, %neg821, !dbg !7081
  call void @llvm.dbg.value(metadata i64 %and822, metadata !6810, metadata !DIExpression()), !dbg !7070
  br label %if.end823, !dbg !7082

if.end823:                                        ; preds = %if.then819, %if.then790
  %outer.0 = phi i64 [ %and822, %if.then819 ], [ 0, %if.then790 ], !dbg !7070
  call void @llvm.dbg.value(metadata i64 %outer.0, metadata !6810, metadata !DIExpression()), !dbg !7070
  switch i16 %trunc, label %if.else854 [
    i16 68, label %if.then826
    i16 67, label %if.then830
    i16 65, label %if.then851
  ], !dbg !7083

if.then826:                                       ; preds = %if.end823
  %sh_prom827 = and i64 %68, 4294967295, !dbg !7084
  %shr = lshr i64 %and816, %sh_prom827, !dbg !7084
  call void @llvm.dbg.value(metadata i64 %shr, metadata !6809, metadata !DIExpression()), !dbg !7070
  br label %if.end865, !dbg !7086

if.then830:                                       ; preds = %if.end823
  %sh_prom831 = and i64 %68, 4294967295, !dbg !7087
  %shr832 = lshr i64 %and816, %sh_prom831, !dbg !7087
  call void @llvm.dbg.value(metadata i64 %shr832, metadata !6809, metadata !DIExpression()), !dbg !7070
  %71 = xor i32 %conv808, -1, !dbg !7090
  %sub834 = add i32 %mul157, %71, !dbg !7090
  %sh_prom835 = zext i32 %sub834 to i64, !dbg !7092
  %shl836 = shl i64 1, %sh_prom835, !dbg !7092
  %and837 = and i64 %shr832, %shl836, !dbg !7093
  %tobool838 = icmp eq i64 %and837, 0, !dbg !7093
  br i1 %tobool838, label %if.end865, label %if.then839, !dbg !7094

if.then839:                                       ; preds = %if.then830
  %notmask = shl nsw i64 -1, %sh_prom831, !dbg !7095
  %sub842 = xor i64 %notmask, -1, !dbg !7095
  %sub843 = sub i32 %mul157, %conv808, !dbg !7096
  %sh_prom844 = zext i32 %sub843 to i64, !dbg !7097
  %shl845 = shl i64 %sub842, %sh_prom844, !dbg !7097
  %or846 = or i64 %shr832, %shl845, !dbg !7098
  call void @llvm.dbg.value(metadata i64 %or846, metadata !6809, metadata !DIExpression()), !dbg !7070
  br label %if.end865, !dbg !7099

if.then851:                                       ; preds = %if.end823
  %sh_prom852 = and i64 %68, 4294967295, !dbg !7100
  %shl853 = shl i64 %and816, %sh_prom852, !dbg !7100
  call void @llvm.dbg.value(metadata i64 %shl853, metadata !6809, metadata !DIExpression()), !dbg !7070
  br label %if.end865, !dbg !7102

if.else854:                                       ; preds = %if.end823
  %rem = urem i32 %conv808, %mul157, !dbg !7103
  %sh_prom855 = zext i32 %rem to i64, !dbg !7104
  %shl856 = shl i64 %and816, %sh_prom855, !dbg !7104
  %sub858 = sub nsw i32 %mul157, %rem, !dbg !7105
  %sh_prom859 = zext i32 %sub858 to i64, !dbg !7106
  %shr860 = lshr i64 %and816, %sh_prom859, !dbg !7106
  %or861 = or i64 %shl856, %shr860, !dbg !7107
  %and862 = and i64 %or861, %69, !dbg !7108
  call void @llvm.dbg.value(metadata i64 %and862, metadata !6809, metadata !DIExpression()), !dbg !7070
  br label %if.end865

if.end865:                                        ; preds = %if.then830, %if.then839, %if.else854, %if.then851, %if.then826
  %inner.3 = phi i64 [ %shr, %if.then826 ], [ %or846, %if.then839 ], [ %shr832, %if.then830 ], [ %shl853, %if.then851 ], [ %and862, %if.else854 ], !dbg !7109
  call void @llvm.dbg.value(metadata i64 %inner.3, metadata !6809, metadata !DIExpression()), !dbg !7070
  %or866 = or i64 %outer.0, %inner.3, !dbg !7110
  %and867 = and i64 %7, %or866, !dbg !7111
  call void @llvm.dbg.value(metadata i64 %and867, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7112

sw.bb869:                                         ; preds = %if.end248, %if.end248
  %conv870 = zext i32 %mode_width.0 to i64, !dbg !7113
  %call871 = tail call i32 @floor_log2(i64 %conv870) #6, !dbg !7114
  %sh_prom872 = zext i32 %call871 to i64, !dbg !7115
  %shl873 = shl i64 2, %sh_prom872, !dbg !7115
  %sub874 = add nsw i64 %shl873, -1, !dbg !7116
  call void @llvm.dbg.value(metadata i64 %sub874, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7117

sw.bb875:                                         ; preds = %if.end248
  call void @llvm.dbg.value(metadata i64 -1, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7118

sw.bb876:                                         ; preds = %if.end248
  call void @llvm.dbg.value(metadata i64 -1, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7119

sw.bb877:                                         ; preds = %if.end248
  call void @llvm.dbg.value(metadata i64 1, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7120

sw.bb878:                                         ; preds = %if.end248
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7121
  %rt_rtx882 = bitcast %union.rtunion_def* %72 to %struct.rtx_def**, !dbg !7121
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx882, align 8, !dbg !7121
  %call883 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %73, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !7122
  call void @llvm.dbg.value(metadata i64 %call883, metadata !6811, metadata !DIExpression()), !dbg !7123
  %and884 = and i64 %7, %call883, !dbg !7124
  %cmp885 = icmp eq i64 %and884, %7, !dbg !7126
  br i1 %cmp885, label %cleanup, label %if.then887, !dbg !7127

if.then887:                                       ; preds = %sw.bb878
  %74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7128
  %rt_rtx891 = bitcast %union.rtunion_def* %74 to %struct.rtx_def**, !dbg !7128
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx891, align 8, !dbg !7128
  %call892 = tail call fastcc i64 @cached_nonzero_bits(%struct.rtx_def* %75, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i64 %known_ret) #7, !dbg !7129
  %or893 = or i64 %call883, %call892, !dbg !7130
  %and894 = and i64 %7, %or893, !dbg !7131
  call void @llvm.dbg.value(metadata i64 %and894, metadata !6777, metadata !DIExpression()), !dbg !6813
  br label %cleanup, !dbg !7132

cleanup:                                          ; preds = %lor.lhs.false120.cleanup_crit_edge, %lor.lhs.false69.cleanup_crit_edge, %sw.bb878, %sw.bb343, %sw.bb445, %sw.bb335, %if.end430, %sw.bb432, %sw.bb869, %sw.bb875, %sw.bb876, %sw.bb877, %sw.bb299, %if.then323, %sw.bb313, %if.then359, %if.then454, %if.then588, %if.end585, %if.then614, %land.lhs.true604, %sw.bb595, %if.then694, %if.then721, %land.lhs.true677, %if.end660, %if.end865, %land.lhs.true770, %land.lhs.true760, %land.lhs.true750, %sw.bb741, %if.then887, %if.end248, %if.end175, %entry, %lor.lhs.false, %lor.lhs.false18, %lor.lhs.false27, %lor.lhs.false36, %lor.lhs.false42, %lor.lhs.false48, %lor.lhs.false54, %lor.lhs.false60, %lor.lhs.false78, %lor.lhs.false87, %lor.lhs.false96, %lor.lhs.false105, %lor.lhs.false114, %lor.lhs.false126, %lor.lhs.false132, %lor.lhs.false138, %lor.lhs.false144, %sw.bb297, %if.end296, %if.then236
  %retval.0 = phi i64 [ %or, %if.then236 ], [ %25, %sw.bb297 ], [ %24, %if.end296 ], [ %0, %lor.lhs.false144 ], [ %0, %lor.lhs.false138 ], [ %0, %lor.lhs.false132 ], [ %0, %lor.lhs.false126 ], [ undef, %lor.lhs.false120.cleanup_crit_edge ], [ %0, %lor.lhs.false114 ], [ %0, %lor.lhs.false105 ], [ %0, %lor.lhs.false96 ], [ %0, %lor.lhs.false87 ], [ %0, %lor.lhs.false78 ], [ undef, %lor.lhs.false69.cleanup_crit_edge ], [ %0, %lor.lhs.false60 ], [ %0, %lor.lhs.false54 ], [ %0, %lor.lhs.false48 ], [ %0, %lor.lhs.false42 ], [ %0, %lor.lhs.false36 ], [ %0, %lor.lhs.false27 ], [ %0, %lor.lhs.false18 ], [ %0, %lor.lhs.false ], [ %0, %entry ], [ %7, %if.end175 ], [ 1, %sw.bb877 ], [ -1, %sw.bb876 ], [ -1, %sw.bb875 ], [ %sub874, %sw.bb869 ], [ %and444, %sw.bb432 ], [ %and431, %if.end430 ], [ %and341, %sw.bb335 ], [ %nonzero.2, %sw.bb299 ], [ %7, %if.then323 ], [ %7, %sw.bb313 ], [ %and369, %if.then359 ], [ %and349, %sw.bb343 ], [ %and461, %if.then454 ], [ %7, %sw.bb445 ], [ %and593, %if.then588 ], [ %nonzero.6, %if.end585 ], [ %and624, %if.then614 ], [ %7, %land.lhs.true604 ], [ %7, %sw.bb595 ], [ %nonzero.9, %land.lhs.true677 ], [ %nonzero.9, %if.end660 ], [ %or738, %if.then721 ], [ %and700, %if.then694 ], [ %and867, %if.end865 ], [ %7, %land.lhs.true770 ], [ %7, %land.lhs.true760 ], [ %7, %land.lhs.true750 ], [ %7, %sw.bb741 ], [ %and894, %if.then887 ], [ %7, %sw.bb878 ], [ %7, %if.end248 ], !dbg !6813
  ret i64 %retval.0, !dbg !7133
}

declare dso_local i32 @ix86_cfun_abi() local_unnamed_addr #1

declare dso_local i32 @floor_log2(i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @num_sign_bit_copies1(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) unnamed_addr #4 !dbg !7134 {
entry:
  %copies_for_hook = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7136, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7137, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %known_x, metadata !7138, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %known_mode, metadata !7139, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %known_ret, metadata !7140, metadata !DIExpression()), !dbg !7152
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7153
  %bf.load = load i32, i32* %0, align 8, !dbg !7153
  %bf.clear = and i32 %bf.load, 65535, !dbg !7153
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7141, metadata !DIExpression()), !dbg !7152
  %idxprom = zext i32 %mode to i64, !dbg !7154
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7154
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7154
  %conv1 = zext i8 %1 to i32, !dbg !7154
  %mul = shl nuw nsw i32 %conv1, 3, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7142, metadata !DIExpression()), !dbg !7152
  %cmp = icmp eq i32 %mode, 0, !dbg !7155
  br i1 %cmp, label %if.then, label %if.end, !dbg !7157

if.then:                                          ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7158
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !7158
  call void @llvm.dbg.value(metadata i32 %bf.clear6, metadata !7137, metadata !DIExpression()), !dbg !7152
  br label %if.end, !dbg !7159

if.end:                                           ; preds = %if.then, %entry
  %mode.addr.0 = phi i32 [ %bf.clear6, %if.then ], [ %mode, %entry ]
  call void @llvm.dbg.value(metadata i32 %mode.addr.0, metadata !7137, metadata !DIExpression()), !dbg !7152
  %cmp7 = icmp eq i32 %mode.addr.0, 0, !dbg !7160
  br i1 %cmp7, label %cleanup1134, label %lor.lhs.false, !dbg !7162

lor.lhs.false:                                    ; preds = %if.end
  %idxprom9 = zext i32 %mode.addr.0 to i64, !dbg !7163
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom9, !dbg !7163
  %2 = load i8, i8* %arrayidx10, align 1, !dbg !7163
  %cmp12 = icmp eq i8 %2, 8, !dbg !7163
  br i1 %cmp12, label %cleanup1134, label %lor.lhs.false14, !dbg !7163

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i8 %2, 9, !dbg !7163
  br i1 %cmp18, label %cleanup1134, label %lor.lhs.false20, !dbg !7163

lor.lhs.false20:                                  ; preds = %lor.lhs.false14
  %cmp24 = icmp eq i8 %2, 11, !dbg !7163
  br i1 %cmp24, label %cleanup1134, label %lor.lhs.false26, !dbg !7163

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp30 = icmp eq i8 %2, 17, !dbg !7163
  br i1 %cmp30, label %cleanup1134, label %lor.lhs.false32, !dbg !7164

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %bf.lshr34 = lshr i32 %bf.load, 16, !dbg !7165
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !7165
  %idxprom36 = zext i32 %bf.clear35 to i64, !dbg !7165
  %arrayidx37 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom36, !dbg !7165
  %3 = load i8, i8* %arrayidx37, align 1, !dbg !7165
  %cmp39 = icmp eq i8 %3, 8, !dbg !7165
  br i1 %cmp39, label %cleanup1134, label %lor.lhs.false41, !dbg !7165

lor.lhs.false41:                                  ; preds = %lor.lhs.false32
  %cmp48 = icmp eq i8 %3, 9, !dbg !7165
  br i1 %cmp48, label %cleanup1134, label %lor.lhs.false50, !dbg !7165

lor.lhs.false50:                                  ; preds = %lor.lhs.false41
  %cmp57 = icmp eq i8 %3, 11, !dbg !7165
  br i1 %cmp57, label %cleanup1134, label %lor.lhs.false59, !dbg !7165

lor.lhs.false59:                                  ; preds = %lor.lhs.false50
  %cmp66 = icmp eq i8 %3, 17, !dbg !7165
  br i1 %cmp66, label %cleanup1134, label %lor.lhs.false68, !dbg !7166

lor.lhs.false68:                                  ; preds = %lor.lhs.false59
  %cmp75 = icmp eq i8 %3, 12, !dbg !7167
  br i1 %cmp75, label %cleanup1134, label %lor.lhs.false77, !dbg !7167

lor.lhs.false77:                                  ; preds = %lor.lhs.false68
  br i1 false, label %lor.lhs.false77.cleanup1134_crit_edge, label %lor.lhs.false86, !dbg !7167

lor.lhs.false77.cleanup1134_crit_edge:            ; preds = %lor.lhs.false77
  br label %cleanup1134, !dbg !7167

lor.lhs.false86:                                  ; preds = %lor.lhs.false77
  %cmp93 = icmp eq i8 %3, 13, !dbg !7167
  br i1 %cmp93, label %cleanup1134, label %lor.lhs.false95, !dbg !7167

lor.lhs.false95:                                  ; preds = %lor.lhs.false86
  %cmp102 = icmp eq i8 %3, 14, !dbg !7167
  br i1 %cmp102, label %cleanup1134, label %lor.lhs.false104, !dbg !7167

lor.lhs.false104:                                 ; preds = %lor.lhs.false95
  %cmp111 = icmp eq i8 %3, 15, !dbg !7167
  br i1 %cmp111, label %cleanup1134, label %lor.lhs.false113, !dbg !7167

lor.lhs.false113:                                 ; preds = %lor.lhs.false104
  %cmp120 = icmp eq i8 %3, 16, !dbg !7167
  br i1 %cmp120, label %cleanup1134, label %lor.lhs.false122, !dbg !7168

lor.lhs.false122:                                 ; preds = %lor.lhs.false113
  %cmp126 = icmp eq i8 %2, 12, !dbg !7169
  br i1 %cmp126, label %cleanup1134, label %lor.lhs.false128, !dbg !7169

lor.lhs.false128:                                 ; preds = %lor.lhs.false122
  br i1 false, label %lor.lhs.false128.cleanup1134_crit_edge, label %lor.lhs.false134, !dbg !7169

lor.lhs.false128.cleanup1134_crit_edge:           ; preds = %lor.lhs.false128
  br label %cleanup1134, !dbg !7169

lor.lhs.false134:                                 ; preds = %lor.lhs.false128
  %cmp138 = icmp eq i8 %2, 13, !dbg !7169
  br i1 %cmp138, label %cleanup1134, label %lor.lhs.false140, !dbg !7169

lor.lhs.false140:                                 ; preds = %lor.lhs.false134
  %cmp144 = icmp eq i8 %2, 14, !dbg !7169
  br i1 %cmp144, label %cleanup1134, label %lor.lhs.false146, !dbg !7169

lor.lhs.false146:                                 ; preds = %lor.lhs.false140
  %cmp150 = icmp eq i8 %2, 15, !dbg !7169
  br i1 %cmp150, label %cleanup1134, label %lor.lhs.false152, !dbg !7169

lor.lhs.false152:                                 ; preds = %lor.lhs.false146
  %cmp156 = icmp eq i8 %2, 16, !dbg !7169
  br i1 %cmp156, label %cleanup1134, label %if.end159, !dbg !7170

if.end159:                                        ; preds = %lor.lhs.false152
  %arrayidx164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom36, !dbg !7171
  %4 = load i8, i8* %arrayidx164, align 1, !dbg !7171
  %conv166 = zext i8 %4 to i32, !dbg !7171
  %mul167 = shl nuw nsw i32 %conv166, 3, !dbg !7171
  %cmp170 = icmp ult i32 %mul, %mul167, !dbg !7173
  br i1 %cmp170, label %if.then172, label %if.end201, !dbg !7174

if.then172:                                       ; preds = %if.end159
  %call = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %x, i32 %bf.clear35, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7175
  call void @llvm.dbg.value(metadata i32 %call, metadata !7143, metadata !DIExpression()), !dbg !7152
  %bf.load176 = load i32, i32* %0, align 8, !dbg !7177
  %bf.lshr177 = lshr i32 %bf.load176, 16, !dbg !7177
  %bf.clear178 = and i32 %bf.lshr177, 255, !dbg !7177
  %idxprom179 = zext i32 %bf.clear178 to i64, !dbg !7177
  %arrayidx180 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom179, !dbg !7177
  %5 = load i8, i8* %arrayidx180, align 1, !dbg !7177
  %conv182 = zext i8 %5 to i32, !dbg !7177
  %mul183 = shl nuw nsw i32 %conv182, 3, !dbg !7177
  %sub17 = sub nsw i32 %mul, %mul183, !dbg !7177
  %sub186 = add i32 %call, %sub17, !dbg !7177
  %cmp187 = icmp slt i32 %sub186, 1, !dbg !7177
  br i1 %cmp187, label %cleanup1134, label %cond.false, !dbg !7177

cond.false:                                       ; preds = %if.then172
  br label %cleanup1134, !dbg !7177

if.end201:                                        ; preds = %if.end159
  %cmp205 = icmp eq i32 %bf.clear35, 0, !dbg !7178
  br i1 %cmp205, label %if.end220, label %land.lhs.true, !dbg !7180

land.lhs.true:                                    ; preds = %if.end201
  %cmp217 = icmp ugt i32 %mul, %mul167, !dbg !7181
  br i1 %cmp217, label %cleanup1134, label %if.end220, !dbg !7182

if.end220:                                        ; preds = %if.end201, %land.lhs.true
  %trunc = trunc i32 %bf.load to i16, !dbg !7183
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %sw.bb
    i16 91, label %sw.bb1085
    i16 30, label %sw.bb240
    i16 39, label %sw.bb265
    i16 119, label %sw.bb376
    i16 98, label %sw.bb412
    i16 100, label %sw.bb434
    i16 64, label %sw.bb478
    i16 66, label %sw.bb484
    i16 69, label %sw.bb484
    i16 51, label %sw.bb576
    i16 62, label %sw.bb612
    i16 61, label %sw.bb612
    i16 63, label %sw.bb612
    i16 70, label %sw.bb612
    i16 71, label %sw.bb612
    i16 72, label %sw.bb612
    i16 73, label %sw.bb612
    i16 49, label %sw.bb693
    i16 50, label %sw.bb693
    i16 52, label %sw.bb763
    i16 59, label %sw.bb816
    i16 60, label %sw.bb838
    i16 55, label %sw.bb861
    i16 58, label %sw.bb887
    i16 67, label %sw.bb913
    i16 65, label %sw.bb986
    i16 47, label %sw.bb1068
    i16 81, label %sw.bb1085
    i16 80, label %sw.bb1085
    i16 82, label %sw.bb1085
    i16 83, label %sw.bb1085
    i16 84, label %sw.bb1085
    i16 85, label %sw.bb1085
    i16 92, label %sw.bb1085
    i16 97, label %sw.bb1085
    i16 93, label %sw.bb1085
    i16 94, label %sw.bb1085
    i16 95, label %sw.bb1085
    i16 96, label %sw.bb1085
    i16 86, label %sw.bb1085
    i16 87, label %sw.bb1085
    i16 88, label %sw.bb1085
    i16 89, label %sw.bb1085
    i16 90, label %sw.bb1085
  ], !dbg !7183

sw.bb:                                            ; preds = %if.end220
  %6 = bitcast i32* %copies_for_hook to i8*, !dbg !7184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !7184
  call void @llvm.dbg.value(metadata i32 1, metadata !7147, metadata !DIExpression()), !dbg !7185
  store i32 1, i32* %copies_for_hook, align 4, !dbg !7186
  call void @llvm.dbg.value(metadata i32 1, metadata !7150, metadata !DIExpression()), !dbg !7185
  %7 = load %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 3), align 8, !dbg !7187
  call void @llvm.dbg.value(metadata i32* %copies_for_hook, metadata !7147, metadata !DIExpression(DW_OP_deref)), !dbg !7185
  %call221 = call %struct.rtx_def* %7(%struct.rtx_def* %x, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret, i32* nonnull %copies_for_hook) #6, !dbg !7188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call221, metadata !7151, metadata !DIExpression()), !dbg !7185
  %tobool = icmp eq %struct.rtx_def* %call221, null, !dbg !7189
  br i1 %tobool, label %if.end224, label %if.then222, !dbg !7191

if.then222:                                       ; preds = %sw.bb
  %call223 = call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* nonnull %call221, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7192
  call void @llvm.dbg.value(metadata i32 %call223, metadata !7150, metadata !DIExpression()), !dbg !7185
  br label %if.end224, !dbg !7193

if.end224:                                        ; preds = %sw.bb, %if.then222
  %copies.0 = phi i32 [ %call223, %if.then222 ], [ 1, %sw.bb ], !dbg !7185
  call void @llvm.dbg.value(metadata i32 %copies.0, metadata !7150, metadata !DIExpression()), !dbg !7185
  %8 = load i32, i32* %copies_for_hook, align 4, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %8, metadata !7147, metadata !DIExpression()), !dbg !7185
  %9 = or i32 %copies.0, %8, !dbg !7196
  %10 = icmp ugt i32 %9, 1, !dbg !7196
  br i1 %10, label %if.then230, label %cleanup, !dbg !7196

if.then230:                                       ; preds = %if.end224
  call void @llvm.dbg.value(metadata i32 %8, metadata !7147, metadata !DIExpression()), !dbg !7185
  %cmp231 = icmp ugt i32 %copies.0, %8, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %8, metadata !7147, metadata !DIExpression()), !dbg !7185
  %cond236 = select i1 %cmp231, i32 %copies.0, i32 %8, !dbg !7197
  br label %cleanup, !dbg !7197

cleanup:                                          ; preds = %if.end224, %if.then230
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then230 ], [ true, %if.end224 ]
  %retval.0 = phi i32 [ %cond236, %if.then230 ], [ undef, %if.end224 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !7198
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup1134

sw.bb240:                                         ; preds = %if.end220
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !7199
  %arrayidx241 = bitcast %union.u* %u to i64*, !dbg !7199
  %11 = load i64, i64* %arrayidx241, align 8, !dbg !7199
  %arrayidx243 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom9, !dbg !7200
  %12 = load i64, i64* %arrayidx243, align 8, !dbg !7200
  %and = and i64 %11, %12, !dbg !7201
  call void @llvm.dbg.value(metadata i64 %and, metadata !7146, metadata !DIExpression()), !dbg !7152
  %cmp244 = icmp ult i8 %1, 9, !dbg !7202
  br i1 %cmp244, label %land.lhs.true246, label %if.end255, !dbg !7204

land.lhs.true246:                                 ; preds = %sw.bb240
  %sub247 = add nsw i32 %mul, -1, !dbg !7205
  %sh_prom = zext i32 %sub247 to i64, !dbg !7206
  %shl = shl i64 1, %sh_prom, !dbg !7206
  %and248 = and i64 %and, %shl, !dbg !7207
  %cmp249 = icmp eq i64 %and248, 0, !dbg !7208
  br i1 %cmp249, label %if.end255, label %if.then251, !dbg !7209

if.then251:                                       ; preds = %land.lhs.true246
  %and254 = xor i64 %and, %12, !dbg !7210
  call void @llvm.dbg.value(metadata i64 %and254, metadata !7146, metadata !DIExpression()), !dbg !7152
  br label %if.end255, !dbg !7211

if.end255:                                        ; preds = %land.lhs.true246, %if.then251, %sw.bb240
  %nonzero.0 = phi i64 [ %and254, %if.then251 ], [ %and, %land.lhs.true246 ], [ %and, %sw.bb240 ], !dbg !7212
  call void @llvm.dbg.value(metadata i64 %nonzero.0, metadata !7146, metadata !DIExpression()), !dbg !7152
  %cmp256 = icmp eq i64 %nonzero.0, 0, !dbg !7213
  br i1 %cmp256, label %cleanup1134, label %cond.false259, !dbg !7214

cond.false259:                                    ; preds = %if.end255
  %call260 = tail call i32 @floor_log2(i64 %nonzero.0) #6, !dbg !7215
  %13 = xor i32 %call260, -1, !dbg !7216
  %sub262 = add i32 %mul, %13, !dbg !7216
  br label %cleanup1134, !dbg !7214

sw.bb265:                                         ; preds = %if.end220
  %bf.clear268 = and i32 %bf.load, 268435456, !dbg !7217
  %tobool269 = icmp eq i32 %bf.clear268, 0, !dbg !7217
  br i1 %tobool269, label %if.end314, label %land.lhs.true270, !dbg !7219

land.lhs.true270:                                 ; preds = %sw.bb265
  %bf.clear273 = and i32 %bf.load, 134217728, !dbg !7220
  %tobool274 = icmp eq i32 %bf.clear273, 0, !dbg !7220
  br i1 %tobool274, label %cond.false276, label %if.end314, !dbg !7221

cond.false276:                                    ; preds = %land.lhs.true270
  %bf.clear279 = and i32 %bf.load, 67108864, !dbg !7220
  %tobool280 = icmp eq i32 %bf.clear279, 0, !dbg !7220
  br i1 %tobool280, label %if.then281, label %if.end314, !dbg !7221

if.then281:                                       ; preds = %cond.false276
  %arrayidx283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7222
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx283 to %struct.rtx_def**, !dbg !7222
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7222
  %call284 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %14, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7224
  call void @llvm.dbg.value(metadata i32 %call284, metadata !7143, metadata !DIExpression()), !dbg !7152
  %bf.load285 = load i32, i32* %0, align 8, !dbg !7225
  %bf.lshr286 = lshr i32 %bf.load285, 16, !dbg !7225
  %bf.clear287 = and i32 %bf.lshr286, 255, !dbg !7225
  %idxprom288 = zext i32 %bf.clear287 to i64, !dbg !7225
  %arrayidx289 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom288, !dbg !7225
  %15 = load i8, i8* %arrayidx289, align 1, !dbg !7225
  %conv291 = zext i8 %15 to i32, !dbg !7225
  %mul292 = shl nuw nsw i32 %conv291, 3, !dbg !7225
  %sub295 = sub nsw i32 %mul, %mul292, !dbg !7225
  %add = or i32 %sub295, 1, !dbg !7225
  %cmp296 = icmp sgt i32 %add, %call284, !dbg !7225
  br i1 %cmp296, label %cond.true298, label %cleanup1134, !dbg !7225

cond.true298:                                     ; preds = %if.then281
  br label %cleanup1134, !dbg !7225

if.end314:                                        ; preds = %cond.false276, %land.lhs.true270, %sw.bb265
  %arrayidx317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7226
  %16 = bitcast %union.rtunion_def* %arrayidx317 to i32**, !dbg !7226
  %17 = load i32*, i32** %16, align 8, !dbg !7226
  %bf.load319 = load i32, i32* %17, align 8, !dbg !7226
  %bf.lshr320 = lshr i32 %bf.load319, 16, !dbg !7226
  %bf.clear321 = and i32 %bf.lshr320, 255, !dbg !7226
  %idxprom322 = zext i32 %bf.clear321 to i64, !dbg !7226
  %arrayidx323 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom322, !dbg !7226
  %18 = load i8, i8* %arrayidx323, align 1, !dbg !7226
  %conv325 = zext i8 %18 to i32, !dbg !7226
  %mul326 = shl nuw nsw i32 %conv325, 3, !dbg !7226
  %cmp329 = icmp ugt i32 %mul, %mul326, !dbg !7228
  br i1 %cmp329, label %sw.epilog, label %if.then331, !dbg !7229

if.then331:                                       ; preds = %if.end314
  %19 = bitcast i32* %17 to %struct.rtx_def*, !dbg !7229
  %call336 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %19, i32 0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7230
  call void @llvm.dbg.value(metadata i32 %call336, metadata !7143, metadata !DIExpression()), !dbg !7152
  %20 = load i32*, i32** %16, align 8, !dbg !7232
  %bf.load341 = load i32, i32* %20, align 8, !dbg !7232
  %bf.lshr342 = lshr i32 %bf.load341, 16, !dbg !7232
  %bf.clear343 = and i32 %bf.lshr342, 255, !dbg !7232
  %idxprom344 = zext i32 %bf.clear343 to i64, !dbg !7232
  %arrayidx345 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom344, !dbg !7232
  %21 = load i8, i8* %arrayidx345, align 1, !dbg !7232
  %conv347 = zext i8 %21 to i32, !dbg !7232
  %mul348 = shl nuw nsw i32 %conv347, 3, !dbg !7232
  %sub35115 = sub nsw i32 %mul, %mul348, !dbg !7232
  %sub352 = add i32 %call336, %sub35115, !dbg !7232
  %cmp353 = icmp slt i32 %sub352, 1, !dbg !7232
  br i1 %cmp353, label %cleanup1134, label %cond.false356, !dbg !7232

cond.false356:                                    ; preds = %if.then331
  br label %cleanup1134, !dbg !7232

sw.bb376:                                         ; preds = %if.end220
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7233
  %23 = bitcast %union.rtunion_def* %22 to i32**, !dbg !7233
  %24 = load i32*, i32** %23, align 8, !dbg !7233
  %bf.load381 = load i32, i32* %24, align 8, !dbg !7233
  %bf.clear382 = and i32 %bf.load381, 65535, !dbg !7233
  %cmp383 = icmp eq i32 %bf.clear382, 30, !dbg !7233
  br i1 %cmp383, label %if.then385, label %sw.epilog, !dbg !7235

if.then385:                                       ; preds = %sw.bb376
  %conv386 = zext i32 %mul to i64, !dbg !7236
  %u391 = getelementptr inbounds i32, i32* %24, i64 2, !dbg !7236
  %arrayidx393 = bitcast i32* %u391 to i64*, !dbg !7236
  %25 = load i64, i64* %arrayidx393, align 8, !dbg !7236
  %cmp395 = icmp slt i64 %25, %conv386, !dbg !7236
  br i1 %cmp395, label %cond.false398, label %cond.end408, !dbg !7236

cond.false398:                                    ; preds = %if.then385
  %26 = trunc i64 %25 to i32, !dbg !7236
  %phitmp14 = sub i32 %mul, %26, !dbg !7236
  br label %cond.end408, !dbg !7236

cond.end408:                                      ; preds = %if.then385, %cond.false398
  %cond409 = phi i32 [ %phitmp14, %cond.false398 ], [ 1, %if.then385 ]
  br label %cleanup1134, !dbg !7237

sw.bb412:                                         ; preds = %if.end220
  %arrayidx415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7238
  %27 = bitcast %union.rtunion_def* %arrayidx415 to i32**, !dbg !7238
  %28 = load i32*, i32** %27, align 8, !dbg !7238
  %bf.load417 = load i32, i32* %28, align 8, !dbg !7238
  %bf.lshr418 = lshr i32 %bf.load417, 16, !dbg !7238
  %bf.clear419 = and i32 %bf.lshr418, 255, !dbg !7238
  %idxprom420 = zext i32 %bf.clear419 to i64, !dbg !7238
  %arrayidx421 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom420, !dbg !7238
  %29 = load i8, i8* %arrayidx421, align 1, !dbg !7238
  %conv423 = zext i8 %29 to i32, !dbg !7238
  %mul424 = shl nuw nsw i32 %conv423, 3, !dbg !7238
  %sub427 = sub nsw i32 %mul, %mul424, !dbg !7239
  %30 = bitcast i32* %28 to %struct.rtx_def*, !dbg !7240
  %call432 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %30, i32 0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7241
  %add433 = add i32 %sub427, %call432, !dbg !7242
  br label %cleanup1134, !dbg !7243

sw.bb434:                                         ; preds = %if.end220
  %arrayidx437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7244
  %rt_rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**, !dbg !7244
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx438, align 8, !dbg !7244
  %call439 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %31, i32 0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %call439, metadata !7143, metadata !DIExpression()), !dbg !7152
  %32 = bitcast %union.rtunion_def* %arrayidx437 to i32**, !dbg !7246
  %33 = load i32*, i32** %32, align 8, !dbg !7246
  %bf.load444 = load i32, i32* %33, align 8, !dbg !7246
  %bf.lshr445 = lshr i32 %bf.load444, 16, !dbg !7246
  %bf.clear446 = and i32 %bf.lshr445, 255, !dbg !7246
  %idxprom447 = zext i32 %bf.clear446 to i64, !dbg !7246
  %arrayidx448 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom447, !dbg !7246
  %34 = load i8, i8* %arrayidx448, align 1, !dbg !7246
  %conv450 = zext i8 %34 to i32, !dbg !7246
  %mul451 = shl nuw nsw i32 %conv450, 3, !dbg !7246
  %sub45412 = sub nsw i32 %mul, %mul451, !dbg !7246
  %sub455 = add i32 %call439, %sub45412, !dbg !7246
  %cmp456 = icmp slt i32 %sub455, 1, !dbg !7246
  br i1 %cmp456, label %cleanup1134, label %cond.false459, !dbg !7246

cond.false459:                                    ; preds = %sw.bb434
  br label %cleanup1134, !dbg !7246

sw.bb478:                                         ; preds = %if.end220
  %arrayidx481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7247
  %rt_rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**, !dbg !7247
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx482, align 8, !dbg !7247
  %call483 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %35, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7248
  br label %cleanup1134, !dbg !7249

sw.bb484:                                         ; preds = %if.end220, %if.end220
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7250
  %37 = bitcast %union.rtunion_def* %36 to i32**, !dbg !7250
  %38 = load i32*, i32** %37, align 8, !dbg !7250
  %bf.load489 = load i32, i32* %38, align 8, !dbg !7250
  %bf.clear490 = and i32 %bf.load489, 65535, !dbg !7250
  %cmp491 = icmp eq i32 %bf.clear490, 30, !dbg !7250
  br i1 %cmp491, label %land.lhs.true493, label %sw.epilog, !dbg !7252

land.lhs.true493:                                 ; preds = %sw.bb484
  %rt_rtx497 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !7253
  %u498 = getelementptr inbounds i32, i32* %38, i64 2, !dbg !7253
  %arrayidx500 = bitcast i32* %u498 to i64*, !dbg !7253
  %39 = load i64, i64* %arrayidx500, align 8, !dbg !7253
  %cmp501 = icmp sgt i64 %39, -1, !dbg !7254
  br i1 %cmp501, label %land.lhs.true503, label %sw.epilog, !dbg !7255

land.lhs.true503:                                 ; preds = %land.lhs.true493
  %conv511 = zext i32 %mul to i64, !dbg !7256
  %cmp512 = icmp slt i64 %39, %conv511, !dbg !7257
  br i1 %cmp512, label %if.then514, label %sw.epilog, !dbg !7258

if.then514:                                       ; preds = %land.lhs.true503
  %arrayidx517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7259
  %rt_rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**, !dbg !7259
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx518, align 8, !dbg !7259
  %call519 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %40, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7261
  call void @llvm.dbg.value(metadata i32 %call519, metadata !7143, metadata !DIExpression()), !dbg !7152
  %conv520 = sext i32 %call519 to i64, !dbg !7262
  %cmp521 = icmp eq i32 %bf.clear, 66, !dbg !7262
  br i1 %cmp521, label %cond.true523, label %cond.false531, !dbg !7262

cond.true523:                                     ; preds = %if.then514
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx497, align 8, !dbg !7262
  %u528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, !dbg !7262
  %arrayidx530 = bitcast %union.u* %u528 to i64*, !dbg !7262
  %42 = load i64, i64* %arrayidx530, align 8, !dbg !7262
  br label %cond.end541, !dbg !7262

cond.false531:                                    ; preds = %if.then514
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx497, align 8, !dbg !7262
  %u537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, !dbg !7262
  %arrayidx539 = bitcast %union.u* %u537 to i64*, !dbg !7262
  %44 = load i64, i64* %arrayidx539, align 8, !dbg !7262
  %sub540 = sub nsw i64 %conv511, %44, !dbg !7262
  br label %cond.end541, !dbg !7262

cond.end541:                                      ; preds = %cond.false531, %cond.true523
  %45 = phi i64 [ %42, %cond.true523 ], [ %44, %cond.false531 ]
  %cond542 = phi i64 [ %42, %cond.true523 ], [ %sub540, %cond.false531 ], !dbg !7262
  %cmp544 = icmp slt i64 %cond542, %conv520, !dbg !7262
  br i1 %cmp544, label %cond.false547, label %cond.end572, !dbg !7262

cond.false547:                                    ; preds = %cond.end541
  br i1 %cmp521, label %cond.true551, label %cond.false559, !dbg !7262

cond.true551:                                     ; preds = %cond.false547
  br label %cond.end569, !dbg !7262

cond.false559:                                    ; preds = %cond.false547
  %sub568 = sub nsw i64 %conv511, %45, !dbg !7262
  br label %cond.end569, !dbg !7262

cond.end569:                                      ; preds = %cond.false559, %cond.true551
  %cond570 = phi i64 [ %45, %cond.true551 ], [ %sub568, %cond.false559 ], !dbg !7262
  %46 = trunc i64 %cond570 to i32, !dbg !7262
  %phitmp10 = sub i32 %call519, %46, !dbg !7262
  br label %cond.end572, !dbg !7262

cond.end572:                                      ; preds = %cond.end541, %cond.end569
  %cond573 = phi i32 [ %phitmp10, %cond.end569 ], [ 1, %cond.end541 ]
  br label %cleanup1134, !dbg !7263

sw.bb576:                                         ; preds = %if.end220
  %arrayidx579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7264
  %rt_rtx580 = bitcast %union.rtunion_def* %arrayidx579 to %struct.rtx_def**, !dbg !7264
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx580, align 8, !dbg !7264
  %call581 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %47, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %call581, metadata !7143, metadata !DIExpression()), !dbg !7152
  %cmp582 = icmp ugt i8 %1, 8, !dbg !7266
  br i1 %cmp582, label %if.then584, label %if.end592, !dbg !7268

if.then584:                                       ; preds = %sw.bb576
  %cmp585 = icmp sgt i32 %call581, 1, !dbg !7269
  %sub588 = add nsw i32 %call581, -1, !dbg !7270
  %cond591 = select i1 %cmp585, i32 %sub588, i32 1, !dbg !7270
  br label %cleanup1134, !dbg !7270

if.end592:                                        ; preds = %sw.bb576
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx580, align 8, !dbg !7271
  %call597 = tail call i64 @nonzero_bits(%struct.rtx_def* %48, i32 %mode.addr.0) #7, !dbg !7272
  call void @llvm.dbg.value(metadata i64 %call597, metadata !7146, metadata !DIExpression()), !dbg !7152
  %cmp598 = icmp eq i64 %call597, 1, !dbg !7273
  br i1 %cmp598, label %cleanup1134, label %if.end601, !dbg !7275

if.end601:                                        ; preds = %if.end592
  %cmp602 = icmp sgt i32 %call581, 1, !dbg !7276
  br i1 %cmp602, label %land.lhs.true604, label %cleanup1134, !dbg !7278

land.lhs.true604:                                 ; preds = %if.end601
  %sub605 = add nsw i32 %mul, -1, !dbg !7279
  %sh_prom606 = zext i32 %sub605 to i64, !dbg !7280
  %shl607 = shl i64 1, %sh_prom606, !dbg !7280
  %and608 = and i64 %shl607, %call597, !dbg !7281
  %tobool609 = icmp ne i64 %and608, 0, !dbg !7281
  %49 = zext i1 %tobool609 to i32, !dbg !7282
  %spec.select = sub i32 %call581, %49, !dbg !7282
  ret i32 %spec.select, !dbg !7282

sw.bb612:                                         ; preds = %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220
  %arrayidx615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7283
  %rt_rtx616 = bitcast %union.rtunion_def* %arrayidx615 to %struct.rtx_def**, !dbg !7283
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx616, align 8, !dbg !7283
  %call617 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %50, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %call617, metadata !7143, metadata !DIExpression()), !dbg !7152
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7285
  %rt_rtx621 = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !7285
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx621, align 8, !dbg !7285
  %call622 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %52, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7286
  call void @llvm.dbg.value(metadata i32 %call622, metadata !7144, metadata !DIExpression()), !dbg !7152
  %cmp623 = icmp eq i32 %bf.clear, 61, !dbg !7287
  %cmp626 = icmp sgt i32 %call622, 1, !dbg !7289
  %or.cond2 = and i1 %cmp623, %cmp626, !dbg !7290
  %cmp629 = icmp ult i8 %1, 9, !dbg !7291
  %or.cond3 = and i1 %or.cond2, %cmp629, !dbg !7290
  br i1 %or.cond3, label %land.lhs.true631, label %if.end654, !dbg !7290

land.lhs.true631:                                 ; preds = %sw.bb612
  %53 = bitcast %union.rtunion_def* %51 to i32**, !dbg !7292
  %54 = load i32*, i32** %53, align 8, !dbg !7292
  %bf.load636 = load i32, i32* %54, align 8, !dbg !7292
  %bf.clear637 = and i32 %bf.load636, 65535, !dbg !7292
  %cmp638 = icmp eq i32 %bf.clear637, 30, !dbg !7292
  br i1 %cmp638, label %land.lhs.true640, label %if.end654, !dbg !7293

land.lhs.true640:                                 ; preds = %land.lhs.true631
  %u645 = getelementptr inbounds i32, i32* %54, i64 2, !dbg !7294
  %arrayidx647 = bitcast i32* %u645 to i64*, !dbg !7294
  %55 = load i64, i64* %arrayidx647, align 8, !dbg !7294
  %sub648 = add nsw i32 %mul, -1, !dbg !7295
  %sh_prom649 = zext i32 %sub648 to i64, !dbg !7296
  %shl650 = shl i64 1, %sh_prom649, !dbg !7296
  %and651 = and i64 %55, %shl650, !dbg !7297
  %tobool652 = icmp eq i64 %and651, 0, !dbg !7297
  br i1 %tobool652, label %cleanup1134, label %if.end654, !dbg !7298

if.end654:                                        ; preds = %land.lhs.true640, %land.lhs.true631, %sw.bb612
  %cmp655 = icmp eq i32 %bf.clear, 62, !dbg !7299
  %or.cond4 = and i1 %cmp655, %cmp626, !dbg !7301
  %or.cond5 = and i1 %or.cond4, %cmp629, !dbg !7301
  br i1 %or.cond5, label %land.lhs.true663, label %if.end686, !dbg !7301

land.lhs.true663:                                 ; preds = %if.end654
  %56 = bitcast %union.rtunion_def* %51 to i32**, !dbg !7302
  %57 = load i32*, i32** %56, align 8, !dbg !7302
  %bf.load668 = load i32, i32* %57, align 8, !dbg !7302
  %bf.clear669 = and i32 %bf.load668, 65535, !dbg !7302
  %cmp670 = icmp eq i32 %bf.clear669, 30, !dbg !7302
  br i1 %cmp670, label %land.lhs.true672, label %if.end686, !dbg !7303

land.lhs.true672:                                 ; preds = %land.lhs.true663
  %u677 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !7304
  %arrayidx679 = bitcast i32* %u677 to i64*, !dbg !7304
  %58 = load i64, i64* %arrayidx679, align 8, !dbg !7304
  %sub680 = add nsw i32 %mul, -1, !dbg !7305
  %sh_prom681 = zext i32 %sub680 to i64, !dbg !7306
  %shl682 = shl i64 1, %sh_prom681, !dbg !7306
  %and683 = and i64 %58, %shl682, !dbg !7307
  %tobool684 = icmp eq i64 %and683, 0, !dbg !7307
  br i1 %tobool684, label %if.end686, label %cleanup1134, !dbg !7308

if.end686:                                        ; preds = %land.lhs.true672, %land.lhs.true663, %if.end654
  %cmp687 = icmp slt i32 %call617, %call622, !dbg !7309
  %call617.call622 = select i1 %cmp687, i32 %call617, i32 %call622, !dbg !7309
  br label %cleanup1134, !dbg !7310

sw.bb693:                                         ; preds = %if.end220, %if.end220
  %cmp694 = icmp eq i32 %bf.clear, 49, !dbg !7311
  br i1 %cmp694, label %land.lhs.true696, label %sw.bb693.if.end732_crit_edge, !dbg !7313

sw.bb693.if.end732_crit_edge:                     ; preds = %sw.bb693
  br label %if.end732, !dbg !7313

land.lhs.true696:                                 ; preds = %sw.bb693
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7314
  %rt_rtx700 = bitcast %union.rtunion_def* %59 to %struct.rtx_def**, !dbg !7314
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx700, align 8, !dbg !7314
  %61 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !7315
  %cmp701 = icmp eq %struct.rtx_def* %60, %61, !dbg !7316
  %cmp704 = icmp ult i8 %1, 9, !dbg !7317
  %or.cond6 = and i1 %cmp701, %cmp704, !dbg !7318
  br i1 %or.cond6, label %if.then706, label %if.end732, !dbg !7318

if.then706:                                       ; preds = %land.lhs.true696
  %arrayidx709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7319
  %rt_rtx710 = bitcast %union.rtunion_def* %arrayidx709 to %struct.rtx_def**, !dbg !7319
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx710, align 8, !dbg !7319
  %call711 = tail call i64 @nonzero_bits(%struct.rtx_def* %62, i32 %mode.addr.0) #7, !dbg !7321
  call void @llvm.dbg.value(metadata i64 %call711, metadata !7146, metadata !DIExpression()), !dbg !7152
  %sub712 = add nsw i32 %mul, -1, !dbg !7322
  %sh_prom713 = zext i32 %sub712 to i64, !dbg !7324
  %shl714 = shl i64 1, %sh_prom713, !dbg !7324
  %and715 = and i64 %shl714, %call711, !dbg !7325
  %cmp716 = icmp eq i64 %and715, 0, !dbg !7326
  br i1 %cmp716, label %if.then718, label %if.end732, !dbg !7327

if.then718:                                       ; preds = %if.then706
  %switch = icmp ult i64 %call711, 2, !dbg !7328
  br i1 %switch, label %cleanup1134, label %cond.false725, !dbg !7328

cond.false725:                                    ; preds = %if.then718
  %call726 = tail call i32 @floor_log2(i64 %call711) #6, !dbg !7329
  %63 = xor i32 %call726, -1, !dbg !7330
  %sub728 = add i32 %mul, %63, !dbg !7330
  br label %cleanup1134, !dbg !7331

if.end732:                                        ; preds = %sw.bb693.if.end732_crit_edge, %if.then706, %land.lhs.true696
  %arrayidx735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7332
  %rt_rtx736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtx_def**, !dbg !7332
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx736, align 8, !dbg !7332
  %call737 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %64, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7333
  call void @llvm.dbg.value(metadata i32 %call737, metadata !7143, metadata !DIExpression()), !dbg !7152
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7334
  %rt_rtx741 = bitcast %union.rtunion_def* %65 to %struct.rtx_def**, !dbg !7334
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx741, align 8, !dbg !7334
  %call742 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %66, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %call742, metadata !7144, metadata !DIExpression()), !dbg !7152
  %cmp743 = icmp slt i32 %call737, %call742, !dbg !7336
  %call737.call742 = select i1 %cmp743, i32 %call737, i32 %call742, !dbg !7336
  %cmp750 = icmp slt i32 %call737.call742, 2, !dbg !7336
  br i1 %cmp750, label %cleanup1134, label %cond.false753, !dbg !7336

cond.false753:                                    ; preds = %if.end732
  %sub760 = add nsw i32 %call737.call742, -1, !dbg !7336
  br label %cleanup1134, !dbg !7336

sw.bb763:                                         ; preds = %if.end220
  %arrayidx766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7337
  %rt_rtx767 = bitcast %union.rtunion_def* %arrayidx766 to %struct.rtx_def**, !dbg !7337
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx767, align 8, !dbg !7337
  %call768 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %67, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7338
  call void @llvm.dbg.value(metadata i32 %call768, metadata !7143, metadata !DIExpression()), !dbg !7152
  %68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7339
  %rt_rtx772 = bitcast %union.rtunion_def* %68 to %struct.rtx_def**, !dbg !7339
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx772, align 8, !dbg !7339
  %call773 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %69, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7340
  call void @llvm.dbg.value(metadata i32 %call773, metadata !7144, metadata !DIExpression()), !dbg !7152
  %sub7769 = sub i32 %call773, %mul, !dbg !7341
  %sub777 = add i32 %call768, %sub7769, !dbg !7341
  call void @llvm.dbg.value(metadata i32 %sub777, metadata !7145, metadata !DIExpression()), !dbg !7152
  %cmp778 = icmp sgt i32 %sub777, 0, !dbg !7342
  br i1 %cmp778, label %land.lhs.true780, label %if.end809, !dbg !7344

land.lhs.true780:                                 ; preds = %sw.bb763
  %cmp781 = icmp ugt i8 %1, 8, !dbg !7345
  br i1 %cmp781, label %if.then807, label %lor.lhs.false783, !dbg !7346

lor.lhs.false783:                                 ; preds = %land.lhs.true780
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx767, align 8, !dbg !7347
  %call788 = tail call i64 @nonzero_bits(%struct.rtx_def* %70, i32 %mode.addr.0) #7, !dbg !7348
  %sub789 = add nsw i32 %mul, -1, !dbg !7349
  %sh_prom790 = zext i32 %sub789 to i64, !dbg !7350
  %shl791 = shl i64 1, %sh_prom790, !dbg !7350
  %and792 = and i64 %call788, %shl791, !dbg !7351
  %cmp793 = icmp eq i64 %and792, 0, !dbg !7352
  br i1 %cmp793, label %if.end809, label %land.lhs.true795, !dbg !7353

land.lhs.true795:                                 ; preds = %lor.lhs.false783
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx772, align 8, !dbg !7354
  %call800 = tail call i64 @nonzero_bits(%struct.rtx_def* %71, i32 %mode.addr.0) #7, !dbg !7355
  %and804 = and i64 %call800, %shl791, !dbg !7356
  %cmp805 = icmp eq i64 %and804, 0, !dbg !7357
  br i1 %cmp805, label %if.end809, label %if.then807, !dbg !7358

if.then807:                                       ; preds = %land.lhs.true795, %land.lhs.true780
  %dec808 = add nsw i32 %sub777, -1, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %dec808, metadata !7145, metadata !DIExpression()), !dbg !7152
  br label %if.end809, !dbg !7360

if.end809:                                        ; preds = %land.lhs.true795, %lor.lhs.false783, %if.then807, %sw.bb763
  %result.0 = phi i32 [ %dec808, %if.then807 ], [ %sub777, %land.lhs.true795 ], [ %sub777, %lor.lhs.false783 ], [ %sub777, %sw.bb763 ], !dbg !7212
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !7145, metadata !DIExpression()), !dbg !7152
  %72 = icmp sgt i32 %result.0, 1, !dbg !7361
  %.result.0 = select i1 %72, i32 %result.0, i32 1, !dbg !7361
  br label %cleanup1134, !dbg !7362

sw.bb816:                                         ; preds = %if.end220
  %cmp817 = icmp ugt i8 %1, 8, !dbg !7363
  br i1 %cmp817, label %cleanup1134, label %if.else, !dbg !7365

if.else:                                          ; preds = %sw.bb816
  %arrayidx822 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7366
  %rt_rtx823 = bitcast %union.rtunion_def* %arrayidx822 to %struct.rtx_def**, !dbg !7366
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx823, align 8, !dbg !7366
  %call824 = tail call i64 @nonzero_bits(%struct.rtx_def* %73, i32 %mode.addr.0) #7, !dbg !7368
  %sub825 = add nsw i32 %mul, -1, !dbg !7369
  %sh_prom826 = zext i32 %sub825 to i64, !dbg !7370
  %shl827 = shl i64 1, %sh_prom826, !dbg !7370
  %and828 = and i64 %call824, %shl827, !dbg !7371
  %cmp829 = icmp eq i64 %and828, 0, !dbg !7372
  br i1 %cmp829, label %if.else832, label %cleanup1134, !dbg !7373

if.else832:                                       ; preds = %if.else
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx823, align 8, !dbg !7374
  %call837 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %74, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7375
  br label %cleanup1134, !dbg !7376

sw.bb838:                                         ; preds = %if.end220
  %cmp839 = icmp ugt i8 %1, 8, !dbg !7377
  br i1 %cmp839, label %cleanup1134, label %if.else842, !dbg !7379

if.else842:                                       ; preds = %sw.bb838
  %75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7380
  %rt_rtx846 = bitcast %union.rtunion_def* %75 to %struct.rtx_def**, !dbg !7380
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx846, align 8, !dbg !7380
  %call847 = tail call i64 @nonzero_bits(%struct.rtx_def* %76, i32 %mode.addr.0) #7, !dbg !7382
  %sub848 = add nsw i32 %mul, -1, !dbg !7383
  %sh_prom849 = zext i32 %sub848 to i64, !dbg !7384
  %shl850 = shl i64 1, %sh_prom849, !dbg !7384
  %and851 = and i64 %call847, %shl850, !dbg !7385
  %cmp852 = icmp eq i64 %and851, 0, !dbg !7386
  br i1 %cmp852, label %if.else855, label %cleanup1134, !dbg !7387

if.else855:                                       ; preds = %if.else842
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx846, align 8, !dbg !7388
  %call860 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %77, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7389
  br label %cleanup1134, !dbg !7390

sw.bb861:                                         ; preds = %if.end220
  %arrayidx864 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7391
  %rt_rtx865 = bitcast %union.rtunion_def* %arrayidx864 to %struct.rtx_def**, !dbg !7391
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx865, align 8, !dbg !7391
  %call866 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %78, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7392
  call void @llvm.dbg.value(metadata i32 %call866, metadata !7145, metadata !DIExpression()), !dbg !7152
  %cmp867 = icmp sgt i32 %call866, 1, !dbg !7393
  br i1 %cmp867, label %land.lhs.true869, label %cleanup1134, !dbg !7395

land.lhs.true869:                                 ; preds = %sw.bb861
  %cmp870 = icmp ugt i8 %1, 8, !dbg !7396
  br i1 %cmp870, label %if.then884, label %lor.lhs.false872, !dbg !7397

lor.lhs.false872:                                 ; preds = %land.lhs.true869
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7398
  %rt_rtx876 = bitcast %union.rtunion_def* %79 to %struct.rtx_def**, !dbg !7398
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx876, align 8, !dbg !7398
  %call877 = tail call i64 @nonzero_bits(%struct.rtx_def* %80, i32 %mode.addr.0) #7, !dbg !7399
  %sub878 = add nsw i32 %mul, -1, !dbg !7400
  %sh_prom879 = zext i32 %sub878 to i64, !dbg !7401
  %shl880 = shl i64 1, %sh_prom879, !dbg !7401
  %and881 = and i64 %call877, %shl880, !dbg !7402
  %cmp882 = icmp eq i64 %and881, 0, !dbg !7403
  br i1 %cmp882, label %cleanup1134, label %if.then884, !dbg !7404

if.then884:                                       ; preds = %lor.lhs.false872, %land.lhs.true869
  %dec885 = add nsw i32 %call866, -1, !dbg !7405
  call void @llvm.dbg.value(metadata i32 %dec885, metadata !7145, metadata !DIExpression()), !dbg !7152
  br label %cleanup1134, !dbg !7406

sw.bb887:                                         ; preds = %if.end220
  %81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7407
  %rt_rtx891 = bitcast %union.rtunion_def* %81 to %struct.rtx_def**, !dbg !7407
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx891, align 8, !dbg !7407
  %call892 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %82, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %call892, metadata !7145, metadata !DIExpression()), !dbg !7152
  %cmp893 = icmp sgt i32 %call892, 1, !dbg !7409
  br i1 %cmp893, label %land.lhs.true895, label %cleanup1134, !dbg !7411

land.lhs.true895:                                 ; preds = %sw.bb887
  %cmp896 = icmp ugt i8 %1, 8, !dbg !7412
  br i1 %cmp896, label %if.then910, label %lor.lhs.false898, !dbg !7413

lor.lhs.false898:                                 ; preds = %land.lhs.true895
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx891, align 8, !dbg !7414
  %call903 = tail call i64 @nonzero_bits(%struct.rtx_def* %83, i32 %mode.addr.0) #7, !dbg !7415
  %sub904 = add nsw i32 %mul, -1, !dbg !7416
  %sh_prom905 = zext i32 %sub904 to i64, !dbg !7417
  %shl906 = shl i64 1, %sh_prom905, !dbg !7417
  %and907 = and i64 %call903, %shl906, !dbg !7418
  %cmp908 = icmp eq i64 %and907, 0, !dbg !7419
  br i1 %cmp908, label %cleanup1134, label %if.then910, !dbg !7420

if.then910:                                       ; preds = %lor.lhs.false898, %land.lhs.true895
  %dec911 = add nsw i32 %call892, -1, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %dec911, metadata !7145, metadata !DIExpression()), !dbg !7152
  br label %cleanup1134, !dbg !7422

sw.bb913:                                         ; preds = %if.end220
  %arrayidx916 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7423
  %rt_rtx917 = bitcast %union.rtunion_def* %arrayidx916 to %struct.rtx_def**, !dbg !7423
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx917, align 8, !dbg !7423
  %call918 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %84, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %call918, metadata !7143, metadata !DIExpression()), !dbg !7152
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7425
  %86 = bitcast %union.rtunion_def* %85 to i32**, !dbg !7425
  %87 = load i32*, i32** %86, align 8, !dbg !7425
  %bf.load923 = load i32, i32* %87, align 8, !dbg !7425
  %bf.clear924 = and i32 %bf.load923, 65535, !dbg !7425
  %cmp925 = icmp eq i32 %bf.clear924, 30, !dbg !7425
  br i1 %cmp925, label %land.lhs.true927, label %cleanup1134, !dbg !7427

land.lhs.true927:                                 ; preds = %sw.bb913
  %u932 = getelementptr inbounds i32, i32* %87, i64 2, !dbg !7428
  %arrayidx934 = bitcast i32* %u932 to i64*, !dbg !7428
  %88 = load i64, i64* %arrayidx934, align 8, !dbg !7428
  %cmp935 = icmp sgt i64 %88, 0, !dbg !7429
  br i1 %cmp935, label %land.lhs.true937, label %cleanup1134, !dbg !7430

land.lhs.true937:                                 ; preds = %land.lhs.true927
  %bf.load945 = load i32, i32* %0, align 8, !dbg !7431
  %bf.lshr946 = lshr i32 %bf.load945, 16, !dbg !7431
  %bf.clear947 = and i32 %bf.lshr946, 255, !dbg !7431
  %idxprom948 = zext i32 %bf.clear947 to i64, !dbg !7431
  %arrayidx949 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom948, !dbg !7431
  %89 = load i8, i8* %arrayidx949, align 1, !dbg !7431
  %conv951 = zext i8 %89 to i64, !dbg !7431
  %mul952 = shl nuw nsw i64 %conv951, 3, !dbg !7431
  %cmp955 = icmp slt i64 %88, %mul952, !dbg !7432
  br i1 %cmp955, label %if.then957, label %cleanup1134, !dbg !7433

if.then957:                                       ; preds = %land.lhs.true937
  %conv958 = zext i32 %mul to i64, !dbg !7434
  %conv959 = sext i32 %call918 to i64, !dbg !7434
  %add967 = add nsw i64 %88, %conv959, !dbg !7434
  %cmp968 = icmp sgt i64 %add967, %conv958, !dbg !7434
  br i1 %cmp968, label %cond.true970, label %cond.false972, !dbg !7434

cond.true970:                                     ; preds = %if.then957
  br label %cond.end982, !dbg !7434

cond.false972:                                    ; preds = %if.then957
  br label %cond.end982, !dbg !7434

cond.end982:                                      ; preds = %cond.false972, %cond.true970
  %cond983 = phi i64 [ %conv958, %cond.true970 ], [ %add967, %cond.false972 ], !dbg !7434
  %conv984 = trunc i64 %cond983 to i32, !dbg !7434
  call void @llvm.dbg.value(metadata i32 %conv984, metadata !7143, metadata !DIExpression()), !dbg !7152
  br label %cleanup1134, !dbg !7435

sw.bb986:                                         ; preds = %if.end220
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7436
  %91 = bitcast %union.rtunion_def* %90 to i32**, !dbg !7436
  %92 = load i32*, i32** %91, align 8, !dbg !7436
  %bf.load991 = load i32, i32* %92, align 8, !dbg !7436
  %bf.clear992 = and i32 %bf.load991, 65535, !dbg !7436
  %cmp993 = icmp eq i32 %bf.clear992, 30, !dbg !7436
  br i1 %cmp993, label %lor.lhs.false995, label %cleanup1134, !dbg !7438

lor.lhs.false995:                                 ; preds = %sw.bb986
  %rt_rtx999 = bitcast %union.rtunion_def* %90 to %struct.rtx_def**, !dbg !7439
  %u1000 = getelementptr inbounds i32, i32* %92, i64 2, !dbg !7439
  %arrayidx1002 = bitcast i32* %u1000 to i64*, !dbg !7439
  %93 = load i64, i64* %arrayidx1002, align 8, !dbg !7439
  %cmp1003 = icmp slt i64 %93, 0, !dbg !7440
  br i1 %cmp1003, label %cleanup1134, label %lor.lhs.false1005, !dbg !7441

lor.lhs.false1005:                                ; preds = %lor.lhs.false995
  %conv1013 = zext i32 %mul to i64, !dbg !7442
  %cmp1014 = icmp slt i64 %93, %conv1013, !dbg !7443
  br i1 %cmp1014, label %lor.lhs.false1016, label %cleanup1134, !dbg !7444

lor.lhs.false1016:                                ; preds = %lor.lhs.false1005
  %conv1030 = zext i8 %4 to i64, !dbg !7445
  %mul1031 = shl nuw nsw i64 %conv1030, 3, !dbg !7445
  %cmp1034 = icmp slt i64 %93, %mul1031, !dbg !7446
  br i1 %cmp1034, label %if.end1037, label %cleanup1134, !dbg !7447

if.end1037:                                       ; preds = %lor.lhs.false1016
  %arrayidx1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7448
  %rt_rtx1041 = bitcast %union.rtunion_def* %arrayidx1040 to %struct.rtx_def**, !dbg !7448
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1041, align 8, !dbg !7448
  %call1042 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %94, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7449
  call void @llvm.dbg.value(metadata i32 %call1042, metadata !7143, metadata !DIExpression()), !dbg !7152
  %conv1043 = sext i32 %call1042 to i64, !dbg !7450
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx999, align 8, !dbg !7450
  %u1048 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i64 0, i32 1, !dbg !7450
  %arrayidx1050 = bitcast %union.u* %u1048 to i64*, !dbg !7450
  %96 = load i64, i64* %arrayidx1050, align 8, !dbg !7450
  %cmp1052 = icmp slt i64 %96, %conv1043, !dbg !7450
  br i1 %cmp1052, label %cond.false1055, label %cond.end1065, !dbg !7450

cond.false1055:                                   ; preds = %if.end1037
  %97 = trunc i64 %96 to i32, !dbg !7450
  %phitmp = sub i32 %call1042, %97, !dbg !7450
  br label %cond.end1065, !dbg !7450

cond.end1065:                                     ; preds = %if.end1037, %cond.false1055
  %cond1066 = phi i32 [ %phitmp, %cond.false1055 ], [ 1, %if.end1037 ]
  br label %cleanup1134, !dbg !7451

sw.bb1068:                                        ; preds = %if.end220
  %98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7452
  %rt_rtx1072 = bitcast %union.rtunion_def* %98 to %struct.rtx_def**, !dbg !7452
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1072, align 8, !dbg !7452
  %call1073 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %99, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7453
  call void @llvm.dbg.value(metadata i32 %call1073, metadata !7143, metadata !DIExpression()), !dbg !7152
  %100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7454
  %rt_rtx1077 = bitcast %union.rtunion_def* %100 to %struct.rtx_def**, !dbg !7454
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1077, align 8, !dbg !7454
  %call1078 = tail call fastcc i32 @cached_num_sign_bit_copies(%struct.rtx_def* %101, i32 %mode.addr.0, %struct.rtx_def* %known_x, i32 %known_mode, i32 %known_ret) #7, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %call1078, metadata !7144, metadata !DIExpression()), !dbg !7152
  %cmp1079 = icmp slt i32 %call1073, %call1078, !dbg !7456
  %call1073.call1078 = select i1 %cmp1079, i32 %call1073, i32 %call1078, !dbg !7456
  br label %cleanup1134, !dbg !7457

sw.bb1085:                                        ; preds = %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220, %if.end220
  call void @llvm.dbg.value(metadata i64 1, metadata !7146, metadata !DIExpression()), !dbg !7152
  br label %if.end1100, !dbg !7458

land.lhs.true1088:                                ; No predecessors!
  br label %if.end1100, !dbg !7460

if.end1100:                                       ; preds = %sw.bb1085, %land.lhs.true1088
  call void @llvm.dbg.value(metadata i64 1, metadata !7146, metadata !DIExpression()), !dbg !7152
  %call1105 = tail call i32 @floor_log2(i64 1) #6, !dbg !7461
  %102 = xor i32 %call1105, -1, !dbg !7462
  %sub1107 = add i32 %mul, %102, !dbg !7462
  br label %cleanup1134, !dbg !7463

sw.epilog:                                        ; preds = %if.end314, %if.end220, %sw.bb484, %land.lhs.true493, %land.lhs.true503, %sw.bb376, %cleanup
  %arrayidx1111 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom9, !dbg !7464
  %103 = load i8, i8* %arrayidx1111, align 1, !dbg !7464
  %conv1113 = zext i8 %103 to i32, !dbg !7464
  %mul1114 = shl nuw nsw i32 %conv1113, 3, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %mul1114, metadata !7142, metadata !DIExpression()), !dbg !7152
  %cmp1117 = icmp ugt i8 %103, 8, !dbg !7465
  br i1 %cmp1117, label %cleanup1134, label %if.end1120, !dbg !7467

if.end1120:                                       ; preds = %sw.epilog
  %call1121 = call i64 @nonzero_bits(%struct.rtx_def* %x, i32 %mode.addr.0) #7, !dbg !7468
  call void @llvm.dbg.value(metadata i64 %call1121, metadata !7146, metadata !DIExpression()), !dbg !7152
  %sub1122 = add nsw i32 %mul1114, -1, !dbg !7469
  %sh_prom1123 = zext i32 %sub1122 to i64, !dbg !7470
  %shl1124 = shl i64 1, %sh_prom1123, !dbg !7470
  %and1125 = and i64 %call1121, %shl1124, !dbg !7471
  %tobool1126 = icmp eq i64 %and1125, 0, !dbg !7471
  br i1 %tobool1126, label %cond.false1128, label %cleanup1134, !dbg !7472

cond.false1128:                                   ; preds = %if.end1120
  %call1129 = call i32 @floor_log2(i64 %call1121) #6, !dbg !7473
  %104 = xor i32 %call1129, -1, !dbg !7474
  %sub1131 = add i32 %mul1114, %104, !dbg !7474
  br label %cleanup1134, !dbg !7472

cleanup1134:                                      ; preds = %lor.lhs.false128.cleanup1134_crit_edge, %lor.lhs.false77.cleanup1134_crit_edge, %if.end1120, %land.lhs.true640, %land.lhs.true672, %if.else, %if.else842, %lor.lhs.false872, %lor.lhs.false898, %lor.lhs.false1016, %lor.lhs.false1005, %if.then718, %cond.false1128, %sw.epilog, %if.end1100, %sw.bb986, %lor.lhs.false995, %sw.bb913, %land.lhs.true927, %land.lhs.true937, %cond.end982, %sw.bb887, %if.then910, %sw.bb861, %if.then884, %sw.bb838, %sw.bb816, %cond.false753, %if.end732, %cond.false725, %if.end601, %if.end592, %if.then584, %cond.false459, %sw.bb434, %cond.false356, %if.then331, %cond.true298, %if.then281, %cond.false259, %if.end255, %land.lhs.true, %cond.false, %if.then172, %if.end, %lor.lhs.false, %lor.lhs.false14, %lor.lhs.false20, %lor.lhs.false26, %lor.lhs.false32, %lor.lhs.false41, %lor.lhs.false50, %lor.lhs.false59, %lor.lhs.false68, %lor.lhs.false86, %lor.lhs.false95, %lor.lhs.false104, %lor.lhs.false113, %lor.lhs.false122, %lor.lhs.false134, %lor.lhs.false140, %lor.lhs.false146, %lor.lhs.false152, %cleanup, %sw.bb1068, %cond.end1065, %if.else855, %if.else832, %if.end809, %if.end686, %cond.end572, %sw.bb478, %sw.bb412, %cond.end408
  %retval.1 = phi i32 [ %call1073.call1078, %sw.bb1068 ], [ %cond1066, %cond.end1065 ], [ %call860, %if.else855 ], [ %call837, %if.else832 ], [ %.result.0, %if.end809 ], [ %call617.call622, %if.end686 ], [ %cond573, %cond.end572 ], [ %call483, %sw.bb478 ], [ %add433, %sw.bb412 ], [ %cond409, %cond.end408 ], [ %retval.0, %cleanup ], [ 1, %lor.lhs.false152 ], [ 1, %lor.lhs.false146 ], [ 1, %lor.lhs.false140 ], [ 1, %lor.lhs.false134 ], [ undef, %lor.lhs.false128.cleanup1134_crit_edge ], [ 1, %lor.lhs.false122 ], [ 1, %lor.lhs.false113 ], [ 1, %lor.lhs.false104 ], [ 1, %lor.lhs.false95 ], [ 1, %lor.lhs.false86 ], [ undef, %lor.lhs.false77.cleanup1134_crit_edge ], [ 1, %lor.lhs.false68 ], [ 1, %lor.lhs.false59 ], [ 1, %lor.lhs.false50 ], [ 1, %lor.lhs.false41 ], [ 1, %lor.lhs.false32 ], [ 1, %lor.lhs.false26 ], [ 1, %lor.lhs.false20 ], [ 1, %lor.lhs.false14 ], [ 1, %lor.lhs.false ], [ 1, %if.end ], [ %sub186, %cond.false ], [ 1, %if.then172 ], [ 1, %land.lhs.true ], [ %sub262, %cond.false259 ], [ %mul, %if.end255 ], [ %add, %cond.true298 ], [ %call284, %if.then281 ], [ %sub352, %cond.false356 ], [ 1, %if.then331 ], [ %sub455, %cond.false459 ], [ 1, %sw.bb434 ], [ %cond591, %if.then584 ], [ %mul, %if.end592 ], [ %call581, %if.end601 ], [ %call622, %land.lhs.true640 ], [ %call622, %land.lhs.true672 ], [ %sub728, %cond.false725 ], [ %mul, %if.then718 ], [ %sub760, %cond.false753 ], [ 1, %if.end732 ], [ 1, %sw.bb816 ], [ 1, %if.else ], [ 1, %sw.bb838 ], [ 1, %if.else842 ], [ %dec885, %if.then884 ], [ %call866, %lor.lhs.false872 ], [ %call866, %sw.bb861 ], [ %dec911, %if.then910 ], [ %call892, %lor.lhs.false898 ], [ %call892, %sw.bb887 ], [ %conv984, %cond.end982 ], [ %call918, %land.lhs.true937 ], [ %call918, %land.lhs.true927 ], [ %call918, %sw.bb913 ], [ 1, %lor.lhs.false1016 ], [ 1, %lor.lhs.false1005 ], [ 1, %lor.lhs.false995 ], [ 1, %sw.bb986 ], [ %sub1107, %if.end1100 ], [ 1, %sw.epilog ], [ %sub1131, %cond.false1128 ], [ 1, %if.end1120 ], !dbg !7152
  ret i32 %retval.1, !dbg !7475
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1691, !1692, !1693}
!llvm.ident = !{!1694}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "non_rtx_starting_operands", scope: !2, file: !3, line: 64, type: !1688, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !576, globals: !1680, nameTableKind: None)
!3 = !DIFile(filename: "rtlanal.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !554}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553}
!522 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!526 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!527 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!528 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!529 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!530 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!532 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!533 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!534 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!535 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!536 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!537 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!538 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!539 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!540 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!541 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!542 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!543 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!544 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!545 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!546 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!547 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!548 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!549 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!550 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!551 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!552 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!553 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !555, line: 36, baseType: !7, size: 32, elements: !556)
!555 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!556 = !{!557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575}
!557 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!558 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!559 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!560 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!561 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!562 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!563 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!564 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!565 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!566 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!567 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!568 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!569 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!570 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!571 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!572 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!573 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!574 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!575 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!576 = !{!577, !578, !579, !580, !583, !584, !377, !5, !586, !587, !588, !1657, !520, !554, !1658, !1665, !590, !1667, !674, !183, !1669, !1675}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!579 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !582)
!586 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!587 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !589, line: 50, baseType: !590)
!589 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !592)
!592 = !{!593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !591, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !591, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !591, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !591, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !591, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !591, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !591, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !591, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !591, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !591, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !591, file: !378, line: 321, baseType: !604, size: 320, offset: 64)
!604 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !605)
!605 = !{!606, !1592, !1594, !1655, !1656}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !604, file: !378, line: 316, baseType: !607, size: 64)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 64, elements: !623)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !625, !626, !638, !641, !702, !1570, !1571, !1582, !1589}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !609, file: !378, line: 168, baseType: !579, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !609, file: !378, line: 169, baseType: !7, size: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !609, file: !378, line: 170, baseType: !584, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !609, file: !378, line: 171, baseType: !588, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !609, file: !378, line: 172, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !589, line: 53, baseType: !617)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !619)
!619 = !{!620, !621}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !618, file: !378, line: 360, baseType: !579, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !618, file: !378, line: 361, baseType: !622, size: 64, offset: 64)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 64, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 1)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !609, file: !378, line: 173, baseType: !5, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !609, file: !378, line: 174, baseType: !627, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !635, !636, !637}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !628, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !628, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !628, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !628, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !628, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !628, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !628, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !628, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !609, file: !378, line: 175, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !609, file: !378, line: 176, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !644, line: 75, size: 256, elements: !645)
!644 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!645 = !{!646, !660, !661, !662}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !643, file: !644, line: 76, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !644, line: 68, baseType: !649)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !644, line: 63, size: 320, elements: !650)
!650 = !{!651, !653, !654, !655}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !649, file: !644, line: 64, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !649, file: !644, line: 65, baseType: !652, size: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !649, file: !644, line: 66, baseType: !7, size: 32, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !649, file: !644, line: 67, baseType: !656, size: 128, offset: 192)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 128, elements: !658)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !644, line: 29, baseType: !587)
!658 = !{!659}
!659 = !DISubrange(count: 2)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !643, file: !644, line: 77, baseType: !647, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !643, file: !644, line: 78, baseType: !7, size: 32, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !643, file: !644, line: 79, baseType: !663, size: 64, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !644, line: 49, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !644, line: 45, size: 832, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !665, file: !644, line: 46, baseType: !652, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !665, file: !644, line: 47, baseType: !642, size: 64, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !665, file: !644, line: 48, baseType: !670, size: 704, offset: 128)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !671, line: 164, size: 704, elements: !672)
!671 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!672 = !{!673, !675, !685, !686, !687, !688, !689, !690, !694, !698, !699, !700, !701}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !670, file: !671, line: 166, baseType: !674, size: 64)
!674 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !670, file: !671, line: 167, baseType: !676, size: 64, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !671, line: 157, size: 192, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !677, file: !671, line: 159, baseType: !581, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !677, file: !671, line: 160, baseType: !676, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !677, file: !671, line: 161, baseType: !682, size: 32, offset: 128)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 32, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 4)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !670, file: !671, line: 168, baseType: !581, size: 64, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !670, file: !671, line: 169, baseType: !581, size: 64, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !670, file: !671, line: 170, baseType: !581, size: 64, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !670, file: !671, line: 171, baseType: !674, size: 64, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !670, file: !671, line: 172, baseType: !579, size: 32, offset: 384)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !670, file: !671, line: 176, baseType: !691, size: 64, offset: 448)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!676, !583, !674}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !670, file: !671, line: 177, baseType: !695, size: 64, offset: 512)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{null, !583, !676}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !670, file: !671, line: 178, baseType: !583, size: 64, offset: 576)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !670, file: !671, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !670, file: !671, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !670, file: !671, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !609, file: !378, line: 177, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !589, line: 56, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !706)
!706 = !{!707, !740, !746, !757, !776, !787, !792, !799, !805, !818, !830, !868, !873, !901, !909, !910, !915, !924, !930, !935, !939, !943, !1194, !1243, !1249, !1256, !1263, !1289, !1314, !1331, !1343, !1365, !1380, !1552}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !705, file: !151, line: 3372, baseType: !708, size: 64)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !709)
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !708, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !708, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !708, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !708, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !708, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !708, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !708, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !708, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !708, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !708, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !708, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !708, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !708, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !708, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !708, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !708, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !708, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !708, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !708, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !708, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !708, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !708, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !708, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !708, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !708, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !708, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !708, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !708, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !708, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !708, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !705, file: !151, line: 3373, baseType: !741, size: 192)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !742)
!742 = !{!743, !744, !745}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !741, file: !151, line: 403, baseType: !708, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !741, file: !151, line: 404, baseType: !703, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !741, file: !151, line: 405, baseType: !703, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !705, file: !151, line: 3374, baseType: !747, size: 320)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !748)
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !747, file: !151, line: 1385, baseType: !741, size: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !747, file: !151, line: 1386, baseType: !751, size: 128, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !752, line: 58, baseType: !753)
!752 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 54, size: 128, elements: !754)
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !753, file: !752, line: 56, baseType: !587, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !753, file: !752, line: 57, baseType: !674, size: 64, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !705, file: !151, line: 3375, baseType: !758, size: 256)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !759)
!759 = !{!760, !761}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !758, file: !151, line: 1398, baseType: !741, size: 192)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !758, file: !151, line: 1399, baseType: !762, size: 64, offset: 192)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !764, line: 52, size: 256, elements: !765)
!764 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!765 = !{!766, !767, !768, !769, !770, !771, !772}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !763, file: !764, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !763, file: !764, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !763, file: !764, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !763, file: !764, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !763, file: !764, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !763, file: !764, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !763, file: !764, line: 62, baseType: !773, size: 192, offset: 64)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 192, elements: !774)
!774 = !{!775}
!775 = !DISubrange(count: 3)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !705, file: !151, line: 3376, baseType: !777, size: 256)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !778)
!778 = !{!779, !780}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !777, file: !151, line: 1409, baseType: !741, size: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !777, file: !151, line: 1410, baseType: !781, size: 64, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !783, line: 27, size: 192, elements: !784)
!783 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !782, file: !783, line: 29, baseType: !751, size: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !782, file: !783, line: 30, baseType: !5, size: 32, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !705, file: !151, line: 3377, baseType: !788, size: 256)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !788, file: !151, line: 1438, baseType: !741, size: 192)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !788, file: !151, line: 1439, baseType: !703, size: 64, offset: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !705, file: !151, line: 3378, baseType: !793, size: 256)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !794)
!794 = !{!795, !796, !797}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !793, file: !151, line: 1419, baseType: !741, size: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !793, file: !151, line: 1420, baseType: !579, size: 32, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !793, file: !151, line: 1421, baseType: !798, size: 8, offset: 224)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 8, elements: !623)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !705, file: !151, line: 3379, baseType: !800, size: 320)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !801)
!801 = !{!802, !803, !804}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !800, file: !151, line: 1429, baseType: !741, size: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !800, file: !151, line: 1430, baseType: !703, size: 64, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !800, file: !151, line: 1431, baseType: !703, size: 64, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !705, file: !151, line: 3380, baseType: !806, size: 320)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !151, line: 1461, baseType: !741, size: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !806, file: !151, line: 1462, baseType: !810, size: 128, offset: 192)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !811, line: 31, size: 128, elements: !812)
!811 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!812 = !{!813, !816, !817}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !810, file: !811, line: 32, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !810, file: !811, line: 33, baseType: !7, size: 32, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !810, file: !811, line: 34, baseType: !7, size: 32, offset: 96)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !705, file: !151, line: 3381, baseType: !819, size: 384)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !820)
!820 = !{!821, !822, !827, !828, !829}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !819, file: !151, line: 2508, baseType: !741, size: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !819, file: !151, line: 2509, baseType: !823, size: 32, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !824, line: 58, baseType: !825)
!824 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !826, line: 44, baseType: !7)
!826 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!827 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !819, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !151, line: 2511, baseType: !703, size: 64, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !819, file: !151, line: 2512, baseType: !703, size: 64, offset: 320)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !705, file: !151, line: 3382, baseType: !831, size: 896)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !832)
!832 = !{!833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !831, file: !151, line: 2653, baseType: !819, size: 384)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !831, file: !151, line: 2654, baseType: !703, size: 64, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !831, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !831, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !831, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !831, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !831, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !831, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !831, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !831, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !831, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !831, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !831, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !831, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !831, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !831, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !831, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !831, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !831, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !831, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !831, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !831, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !831, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !831, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !831, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !831, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !831, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !831, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !831, file: !151, line: 2705, baseType: !703, size: 64, offset: 576)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !831, file: !151, line: 2706, baseType: !703, size: 64, offset: 640)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !831, file: !151, line: 2707, baseType: !703, size: 64, offset: 704)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !831, file: !151, line: 2708, baseType: !703, size: 64, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !831, file: !151, line: 2711, baseType: !866, size: 64, offset: 832)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !705, file: !151, line: 3383, baseType: !869, size: 960)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !869, file: !151, line: 2757, baseType: !831, size: 896)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !869, file: !151, line: 2758, baseType: !588, size: 64, offset: 896)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !705, file: !151, line: 3384, baseType: !874, size: 1472)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !875)
!875 = !{!876, !897, !898, !899, !900}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !874, file: !151, line: 3115, baseType: !877, size: 1216)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !878)
!878 = !{!879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !877, file: !151, line: 2985, baseType: !869, size: 960)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !877, file: !151, line: 2986, baseType: !703, size: 64, offset: 960)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !877, file: !151, line: 2987, baseType: !703, size: 64, offset: 1024)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !877, file: !151, line: 2988, baseType: !703, size: 64, offset: 1088)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !877, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !877, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !877, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !877, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !877, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !877, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !877, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !877, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !877, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !877, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !877, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !877, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !877, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !877, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !874, file: !151, line: 3117, baseType: !703, size: 64, offset: 1216)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !874, file: !151, line: 3119, baseType: !703, size: 64, offset: 1280)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !874, file: !151, line: 3121, baseType: !703, size: 64, offset: 1344)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !874, file: !151, line: 3123, baseType: !703, size: 64, offset: 1408)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !705, file: !151, line: 3385, baseType: !902, size: 1088)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !903)
!903 = !{!904, !905, !906}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !902, file: !151, line: 2875, baseType: !869, size: 960)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !902, file: !151, line: 2876, baseType: !588, size: 64, offset: 960)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !902, file: !151, line: 2877, baseType: !907, size: 64, offset: 1024)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !705, file: !151, line: 3386, baseType: !877, size: 1216)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !705, file: !151, line: 3387, baseType: !911, size: 1280)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !912)
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !911, file: !151, line: 3094, baseType: !877, size: 1216)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !911, file: !151, line: 3095, baseType: !907, size: 64, offset: 1216)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !705, file: !151, line: 3388, baseType: !916, size: 1216)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !916, file: !151, line: 2825, baseType: !831, size: 896)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !916, file: !151, line: 2827, baseType: !703, size: 64, offset: 896)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !916, file: !151, line: 2828, baseType: !703, size: 64, offset: 960)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !916, file: !151, line: 2829, baseType: !703, size: 64, offset: 1024)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !916, file: !151, line: 2830, baseType: !703, size: 64, offset: 1088)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !916, file: !151, line: 2831, baseType: !703, size: 64, offset: 1152)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !705, file: !151, line: 3389, baseType: !925, size: 1024)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !925, file: !151, line: 2851, baseType: !869, size: 960)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !925, file: !151, line: 2852, baseType: !579, size: 32, offset: 960)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !925, file: !151, line: 2853, baseType: !579, size: 32, offset: 992)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !705, file: !151, line: 3390, baseType: !931, size: 1024)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !931, file: !151, line: 2858, baseType: !869, size: 960)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !931, file: !151, line: 2859, baseType: !907, size: 64, offset: 960)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !705, file: !151, line: 3391, baseType: !936, size: 960)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !936, file: !151, line: 2863, baseType: !869, size: 960)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !705, file: !151, line: 3392, baseType: !940, size: 1472)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !941)
!941 = !{!942}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !940, file: !151, line: 3305, baseType: !874, size: 1472)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !705, file: !151, line: 3393, baseType: !944, size: 1792)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !945)
!945 = !{!946, !947, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !944, file: !151, line: 3249, baseType: !874, size: 1472)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !944, file: !151, line: 3251, baseType: !948, size: 64, offset: 1472)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !950, line: 463, size: 1152, elements: !951)
!950 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!951 = !{!952, !955, !1059, !1060, !1063, !1066, !1118, !1119, !1120, !1121, !1122, !1146, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !949, file: !950, line: 464, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !950, line: 464, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !949, file: !950, line: 467, baseType: !956, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !958)
!958 = !{!959, !1034, !1035, !1048, !1049, !1050, !1051, !1052, !1053, !1055, !1057, !1058}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !957, file: !135, line: 377, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !589, line: 111, baseType: !961)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !963)
!963 = !{!964, !999, !1000, !1001, !1004, !1008, !1009, !1010, !1028, !1029, !1030, !1031, !1032, !1033}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !962, file: !135, line: 219, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !967, file: !135, line: 151, baseType: !970, size: 128)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !972)
!972 = !{!973, !974, !975}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !971, file: !135, line: 150, baseType: !7, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !971, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !971, file: !135, line: 150, baseType: !976, size: 64, offset: 64)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 64, elements: !623)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !589, line: 108, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !980)
!980 = !{!981, !982, !983, !991, !992, !993, !994, !995, !996, !997}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !979, file: !135, line: 124, baseType: !961, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !979, file: !135, line: 125, baseType: !961, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !979, file: !135, line: 131, baseType: !984, size: 64, offset: 128)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !985)
!985 = !{!986, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !984, file: !135, line: 129, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !589, line: 66, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !589, line: 65, flags: DIFlagFwdDecl)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !984, file: !135, line: 130, baseType: !588, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !979, file: !135, line: 134, baseType: !583, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !979, file: !135, line: 137, baseType: !703, size: 64, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !979, file: !135, line: 138, baseType: !823, size: 32, offset: 320)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !979, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !979, file: !135, line: 144, baseType: !579, size: 32, offset: 384)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !979, file: !135, line: 145, baseType: !579, size: 32, offset: 416)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !979, file: !135, line: 146, baseType: !998, size: 64, offset: 448)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !674)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !962, file: !135, line: 220, baseType: !965, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !962, file: !135, line: 223, baseType: !583, size: 64, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !962, file: !135, line: 226, baseType: !1002, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !962, file: !135, line: 229, baseType: !1005, size: 128, offset: 256)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 128, elements: !658)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !962, file: !135, line: 232, baseType: !961, size: 64, offset: 384)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !962, file: !135, line: 233, baseType: !961, size: 64, offset: 448)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !962, file: !135, line: 238, baseType: !1011, size: 64, offset: 512)
!1011 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1012)
!1012 = !{!1013, !1019}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1011, file: !135, line: 236, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1015, file: !135, line: 275, baseType: !987, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1015, file: !135, line: 278, baseType: !987, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1011, file: !135, line: 237, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1021, file: !135, line: 261, baseType: !588, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1021, file: !135, line: 262, baseType: !588, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1021, file: !135, line: 266, baseType: !588, size: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1021, file: !135, line: 267, baseType: !588, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1021, file: !135, line: 270, baseType: !579, size: 32, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !962, file: !135, line: 241, baseType: !998, size: 64, offset: 576)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !962, file: !135, line: 244, baseType: !579, size: 32, offset: 640)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !962, file: !135, line: 247, baseType: !579, size: 32, offset: 672)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !962, file: !135, line: 250, baseType: !579, size: 32, offset: 704)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !962, file: !135, line: 253, baseType: !579, size: 32, offset: 736)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !962, file: !135, line: 256, baseType: !579, size: 32, offset: 768)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !957, file: !135, line: 378, baseType: !960, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !957, file: !135, line: 381, baseType: !1036, size: 64, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1038, file: !135, line: 282, baseType: !1041, size: 128)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1043)
!1043 = !{!1044, !1045, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1042, file: !135, line: 281, baseType: !7, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1042, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1042, file: !135, line: 281, baseType: !1047, size: 64, offset: 64)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 64, elements: !623)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !957, file: !135, line: 384, baseType: !579, size: 32, offset: 192)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !957, file: !135, line: 387, baseType: !579, size: 32, offset: 224)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !957, file: !135, line: 390, baseType: !579, size: 32, offset: 256)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !957, file: !135, line: 394, baseType: !1036, size: 64, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !957, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !957, file: !135, line: 399, baseType: !1054, size: 64, offset: 416)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !658)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !957, file: !135, line: 402, baseType: !1056, size: 64, offset: 480)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !658)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !957, file: !135, line: 406, baseType: !579, size: 32, offset: 544)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !957, file: !135, line: 409, baseType: !579, size: 32, offset: 576)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !949, file: !950, line: 470, baseType: !988, size: 64, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !949, file: !950, line: 473, baseType: !1061, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !950, line: 166, flags: DIFlagFwdDecl)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !949, file: !950, line: 476, baseType: !1064, size: 64, offset: 256)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !950, line: 476, flags: DIFlagFwdDecl)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !949, file: !950, line: 479, baseType: !1067, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1068, line: 144, baseType: !1069)
!1068 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1068, line: 100, size: 896, elements: !1071)
!1071 = !{!1072, !1080, !1085, !1090, !1092, !1095, !1096, !1097, !1098, !1099, !1104, !1106, !1107, !1112, !1117}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1070, file: !1068, line: 102, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1068, line: 52, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1068, line: 47, baseType: !7)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1070, file: !1068, line: 105, baseType: !1081, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1068, line: 59, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!579, !1078, !1078}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1070, file: !1068, line: 108, baseType: !1086, size: 64, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1068, line: 63, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{null, !583}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1070, file: !1068, line: 111, baseType: !1091, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1070, file: !1068, line: 114, baseType: !1093, size: 64, offset: 256)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1094, line: 46, baseType: !587)
!1094 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1070, file: !1068, line: 117, baseType: !1093, size: 64, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1070, file: !1068, line: 120, baseType: !1093, size: 64, offset: 384)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1070, file: !1068, line: 124, baseType: !7, size: 32, offset: 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1070, file: !1068, line: 128, baseType: !7, size: 32, offset: 480)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1070, file: !1068, line: 131, baseType: !1100, size: 64, offset: 512)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1068, line: 75, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!583, !1093, !1093}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1070, file: !1068, line: 132, baseType: !1105, size: 64, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1068, line: 78, baseType: !1087)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1070, file: !1068, line: 135, baseType: !583, size: 64, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1070, file: !1068, line: 136, baseType: !1108, size: 64, offset: 704)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1068, line: 82, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!583, !583, !1093, !1093}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1070, file: !1068, line: 137, baseType: !1113, size: 64, offset: 768)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1068, line: 83, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !583, !583}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1070, file: !1068, line: 141, baseType: !7, size: 32, offset: 832)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !949, file: !950, line: 484, baseType: !703, size: 64, offset: 384)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !949, file: !950, line: 488, baseType: !703, size: 64, offset: 448)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !949, file: !950, line: 493, baseType: !703, size: 64, offset: 512)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !949, file: !950, line: 496, baseType: !703, size: 64, offset: 576)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !949, file: !950, line: 501, baseType: !1123, size: 64, offset: 640)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1125)
!1125 = !{!1126, !1129, !1130, !1131, !1132, !1134, !1135, !1140, !1141, !1142, !1143, !1144, !1145}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1124, file: !146, line: 2356, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1124, file: !146, line: 2357, baseType: !584, size: 64, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1124, file: !146, line: 2358, baseType: !579, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1124, file: !146, line: 2359, baseType: !579, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1124, file: !146, line: 2360, baseType: !1133, size: 128, offset: 192)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 128, elements: !683)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1124, file: !146, line: 2364, baseType: !579, size: 32, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1124, file: !146, line: 2367, baseType: !1136, size: 128, offset: 384)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1136, file: !146, line: 2351, baseType: !588, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1136, file: !146, line: 2352, baseType: !674, size: 64, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1124, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1124, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1124, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1124, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1124, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1124, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !949, file: !950, line: 504, baseType: !1147, size: 64, offset: 704)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !950, line: 504, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !949, file: !950, line: 507, baseType: !1067, size: 64, offset: 768)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !949, file: !950, line: 510, baseType: !579, size: 32, offset: 832)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !949, file: !950, line: 513, baseType: !579, size: 32, offset: 864)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !949, file: !950, line: 516, baseType: !823, size: 32, offset: 896)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !949, file: !950, line: 519, baseType: !823, size: 32, offset: 928)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !949, file: !950, line: 522, baseType: !7, size: 32, offset: 960)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !949, file: !950, line: 523, baseType: !7, size: 32, offset: 992)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !949, file: !950, line: 528, baseType: !584, size: 64, offset: 1024)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !949, file: !950, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !949, file: !950, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !949, file: !950, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !949, file: !950, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !949, file: !950, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !949, file: !950, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !949, file: !950, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !949, file: !950, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !949, file: !950, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !949, file: !950, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !949, file: !950, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !949, file: !950, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !949, file: !950, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !949, file: !950, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !949, file: !950, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !949, file: !950, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !944, file: !151, line: 3254, baseType: !703, size: 64, offset: 1536)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !944, file: !151, line: 3257, baseType: !703, size: 64, offset: 1600)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !944, file: !151, line: 3258, baseType: !703, size: 64, offset: 1664)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !944, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !944, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !944, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !944, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !944, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !944, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !944, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !944, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !944, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !944, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !944, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !944, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !944, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !944, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !944, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !944, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !944, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !944, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !705, file: !151, line: 3394, baseType: !1195, size: 1344)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1222, !1223, !1224, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1195, file: !151, line: 2280, baseType: !741, size: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1195, file: !151, line: 2281, baseType: !703, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1195, file: !151, line: 2282, baseType: !703, size: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1195, file: !151, line: 2283, baseType: !703, size: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1195, file: !151, line: 2284, baseType: !703, size: 64, offset: 384)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1195, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1195, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1195, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1195, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1195, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1195, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1195, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1195, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1195, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1195, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1195, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1195, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1195, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1195, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1195, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1195, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1195, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1195, file: !151, line: 2306, baseType: !1220, size: 32, offset: 544)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1221, line: 31, baseType: !579)
!1221 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1195, file: !151, line: 2307, baseType: !703, size: 64, offset: 576)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1195, file: !151, line: 2308, baseType: !703, size: 64, offset: 640)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1195, file: !151, line: 2314, baseType: !1225, size: 64, offset: 704)
!1225 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1226)
!1226 = !{!1227, !1228, !1229}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1225, file: !151, line: 2310, baseType: !579, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1225, file: !151, line: 2311, baseType: !584, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1225, file: !151, line: 2312, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !151, line: 2315, baseType: !703, size: 64, offset: 768)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1195, file: !151, line: 2316, baseType: !703, size: 64, offset: 832)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1195, file: !151, line: 2317, baseType: !703, size: 64, offset: 896)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1195, file: !151, line: 2318, baseType: !703, size: 64, offset: 960)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1195, file: !151, line: 2319, baseType: !703, size: 64, offset: 1024)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1195, file: !151, line: 2320, baseType: !703, size: 64, offset: 1088)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1195, file: !151, line: 2321, baseType: !703, size: 64, offset: 1152)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1195, file: !151, line: 2322, baseType: !703, size: 64, offset: 1216)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1195, file: !151, line: 2324, baseType: !1241, size: 64, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !705, file: !151, line: 3395, baseType: !1244, size: 320)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1245)
!1245 = !{!1246, !1247, !1248}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1244, file: !151, line: 1470, baseType: !741, size: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1244, file: !151, line: 1471, baseType: !703, size: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1244, file: !151, line: 1472, baseType: !703, size: 64, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !705, file: !151, line: 3396, baseType: !1250, size: 320)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1251)
!1251 = !{!1252, !1253, !1254}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1250, file: !151, line: 1483, baseType: !741, size: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1250, file: !151, line: 1484, baseType: !579, size: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1250, file: !151, line: 1485, baseType: !1255, size: 64, offset: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 64, elements: !623)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !705, file: !151, line: 3397, baseType: !1257, size: 384)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1257, file: !151, line: 1830, baseType: !741, size: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1257, file: !151, line: 1831, baseType: !823, size: 32, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1257, file: !151, line: 1832, baseType: !703, size: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1257, file: !151, line: 1835, baseType: !1255, size: 64, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !705, file: !151, line: 3398, baseType: !1264, size: 704)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1272, !1273, !1276}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1264, file: !151, line: 1899, baseType: !741, size: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1264, file: !151, line: 1902, baseType: !703, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1264, file: !151, line: 1905, baseType: !1269, size: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !589, line: 58, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !589, line: 57, flags: DIFlagFwdDecl)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1264, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1264, file: !151, line: 1911, baseType: !1274, size: 64, offset: 384)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1264, file: !151, line: 1914, baseType: !1277, size: 256, offset: 448)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1278)
!1278 = !{!1279, !1281, !1282, !1287}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1277, file: !151, line: 1884, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1277, file: !151, line: 1885, baseType: !1280, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1277, file: !151, line: 1891, baseType: !1283, size: 64, offset: 128)
!1283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1277, file: !151, line: 1891, size: 64, elements: !1284)
!1284 = !{!1285, !1286}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1283, file: !151, line: 1891, baseType: !1269, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1283, file: !151, line: 1891, baseType: !703, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1277, file: !151, line: 1892, baseType: !1288, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !705, file: !151, line: 3399, baseType: !1290, size: 704)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1309, !1310, !1311, !1312, !1313}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1290, file: !151, line: 2009, baseType: !741, size: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1290, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1290, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1290, file: !151, line: 2014, baseType: !823, size: 32, offset: 224)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1290, file: !151, line: 2016, baseType: !703, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1290, file: !151, line: 2017, baseType: !1298, size: 64, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1301)
!1301 = !{!1302}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1300, file: !151, line: 183, baseType: !1303, size: 128)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1305)
!1305 = !{!1306, !1307, !1308}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1304, file: !151, line: 182, baseType: !7, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1304, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1304, file: !151, line: 182, baseType: !1255, size: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1290, file: !151, line: 2019, baseType: !703, size: 64, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1290, file: !151, line: 2020, baseType: !703, size: 64, offset: 448)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1290, file: !151, line: 2021, baseType: !703, size: 64, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1290, file: !151, line: 2022, baseType: !703, size: 64, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1290, file: !151, line: 2023, baseType: !703, size: 64, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !705, file: !151, line: 3400, baseType: !1315, size: 832)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1315, file: !151, line: 2431, baseType: !741, size: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1315, file: !151, line: 2433, baseType: !703, size: 64, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1315, file: !151, line: 2434, baseType: !703, size: 64, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1315, file: !151, line: 2435, baseType: !703, size: 64, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1315, file: !151, line: 2436, baseType: !703, size: 64, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1315, file: !151, line: 2437, baseType: !1298, size: 64, offset: 448)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1315, file: !151, line: 2438, baseType: !703, size: 64, offset: 512)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1315, file: !151, line: 2440, baseType: !703, size: 64, offset: 576)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1315, file: !151, line: 2441, baseType: !703, size: 64, offset: 640)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1315, file: !151, line: 2443, baseType: !1327, size: 128, offset: 704)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1329)
!1329 = !{!1330}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1328, file: !151, line: 182, baseType: !1303, size: 128)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !705, file: !151, line: 3401, baseType: !1332, size: 320)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1333)
!1333 = !{!1334, !1335, !1342}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1332, file: !151, line: 3329, baseType: !741, size: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1332, file: !151, line: 3330, baseType: !1336, size: 64, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1338)
!1338 = !{!1339, !1340, !1341}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1337, file: !151, line: 3322, baseType: !1336, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1337, file: !151, line: 3323, baseType: !1336, size: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1337, file: !151, line: 3324, baseType: !703, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1332, file: !151, line: 3331, baseType: !1336, size: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !705, file: !151, line: 3402, baseType: !1344, size: 256)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1345)
!1345 = !{!1346, !1347}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1344, file: !151, line: 1541, baseType: !741, size: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1344, file: !151, line: 1542, baseType: !1348, size: 64, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1350, file: !151, line: 1538, baseType: !1353, size: 192)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1355)
!1355 = !{!1356, !1357, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1354, file: !151, line: 1537, baseType: !7, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1354, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1354, file: !151, line: 1537, baseType: !1359, size: 128, offset: 64)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1360, size: 128, elements: !623)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1362)
!1362 = !{!1363, !1364}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1361, file: !151, line: 1533, baseType: !703, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1361, file: !151, line: 1534, baseType: !703, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !705, file: !151, line: 3403, baseType: !1366, size: 512)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1377, !1378, !1379}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1366, file: !151, line: 1939, baseType: !741, size: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1366, file: !151, line: 1940, baseType: !823, size: 32, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1366, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1366, file: !151, line: 1946, baseType: !1372, size: 32, offset: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1373)
!1373 = !{!1374, !1375, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1372, file: !151, line: 1943, baseType: !169, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1372, file: !151, line: 1944, baseType: !176, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1372, file: !151, line: 1945, baseType: !183, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1366, file: !151, line: 1950, baseType: !987, size: 64, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1366, file: !151, line: 1951, baseType: !987, size: 64, offset: 384)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1366, file: !151, line: 1953, baseType: !1255, size: 64, offset: 448)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !705, file: !151, line: 3404, baseType: !1381, size: 1664)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1382)
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1381, file: !151, line: 3338, baseType: !741, size: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1381, file: !151, line: 3341, baseType: !1385, size: 1472, offset: 192)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1386, line: 410, size: 1472, elements: !1387)
!1386 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1387 = !{!1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1385, file: !1386, line: 412, baseType: !579, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1385, file: !1386, line: 413, baseType: !579, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1385, file: !1386, line: 414, baseType: !579, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1385, file: !1386, line: 415, baseType: !579, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1385, file: !1386, line: 416, baseType: !579, size: 32, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1385, file: !1386, line: 417, baseType: !579, size: 32, offset: 160)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1385, file: !1386, line: 418, baseType: !578, size: 8, offset: 192)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1385, file: !1386, line: 419, baseType: !578, size: 8, offset: 200)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1385, file: !1386, line: 420, baseType: !1397, size: 8, offset: 208)
!1397 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1385, file: !1386, line: 421, baseType: !1397, size: 8, offset: 216)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1385, file: !1386, line: 422, baseType: !1397, size: 8, offset: 224)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1385, file: !1386, line: 423, baseType: !1397, size: 8, offset: 232)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1385, file: !1386, line: 424, baseType: !1397, size: 8, offset: 240)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1385, file: !1386, line: 425, baseType: !1397, size: 8, offset: 248)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1385, file: !1386, line: 426, baseType: !1397, size: 8, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1385, file: !1386, line: 427, baseType: !1397, size: 8, offset: 264)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1385, file: !1386, line: 428, baseType: !1397, size: 8, offset: 272)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1385, file: !1386, line: 429, baseType: !1397, size: 8, offset: 280)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1385, file: !1386, line: 430, baseType: !1397, size: 8, offset: 288)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1385, file: !1386, line: 431, baseType: !1397, size: 8, offset: 296)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1385, file: !1386, line: 432, baseType: !1397, size: 8, offset: 304)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1385, file: !1386, line: 433, baseType: !1397, size: 8, offset: 312)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1385, file: !1386, line: 434, baseType: !1397, size: 8, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1385, file: !1386, line: 435, baseType: !1397, size: 8, offset: 328)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1385, file: !1386, line: 436, baseType: !1397, size: 8, offset: 336)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1385, file: !1386, line: 437, baseType: !1397, size: 8, offset: 344)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1385, file: !1386, line: 438, baseType: !1397, size: 8, offset: 352)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1385, file: !1386, line: 439, baseType: !1397, size: 8, offset: 360)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1385, file: !1386, line: 440, baseType: !1397, size: 8, offset: 368)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1385, file: !1386, line: 441, baseType: !1397, size: 8, offset: 376)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1385, file: !1386, line: 442, baseType: !1397, size: 8, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1385, file: !1386, line: 443, baseType: !1397, size: 8, offset: 392)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1385, file: !1386, line: 444, baseType: !1397, size: 8, offset: 400)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1385, file: !1386, line: 445, baseType: !1397, size: 8, offset: 408)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1385, file: !1386, line: 446, baseType: !1397, size: 8, offset: 416)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1385, file: !1386, line: 447, baseType: !1397, size: 8, offset: 424)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1385, file: !1386, line: 448, baseType: !1397, size: 8, offset: 432)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1385, file: !1386, line: 449, baseType: !1397, size: 8, offset: 440)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1385, file: !1386, line: 450, baseType: !1397, size: 8, offset: 448)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1385, file: !1386, line: 451, baseType: !1397, size: 8, offset: 456)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1385, file: !1386, line: 452, baseType: !1397, size: 8, offset: 464)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1385, file: !1386, line: 453, baseType: !1397, size: 8, offset: 472)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1385, file: !1386, line: 454, baseType: !1397, size: 8, offset: 480)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1385, file: !1386, line: 455, baseType: !1397, size: 8, offset: 488)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1385, file: !1386, line: 456, baseType: !1397, size: 8, offset: 496)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1385, file: !1386, line: 457, baseType: !1397, size: 8, offset: 504)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1385, file: !1386, line: 458, baseType: !1397, size: 8, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1385, file: !1386, line: 459, baseType: !1397, size: 8, offset: 520)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1385, file: !1386, line: 460, baseType: !1397, size: 8, offset: 528)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1385, file: !1386, line: 461, baseType: !1397, size: 8, offset: 536)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1385, file: !1386, line: 462, baseType: !1397, size: 8, offset: 544)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1385, file: !1386, line: 463, baseType: !1397, size: 8, offset: 552)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1385, file: !1386, line: 464, baseType: !1397, size: 8, offset: 560)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1385, file: !1386, line: 465, baseType: !1397, size: 8, offset: 568)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1385, file: !1386, line: 466, baseType: !1397, size: 8, offset: 576)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1385, file: !1386, line: 467, baseType: !1397, size: 8, offset: 584)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1385, file: !1386, line: 468, baseType: !1397, size: 8, offset: 592)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1385, file: !1386, line: 469, baseType: !1397, size: 8, offset: 600)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1385, file: !1386, line: 470, baseType: !1397, size: 8, offset: 608)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1385, file: !1386, line: 471, baseType: !1397, size: 8, offset: 616)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1385, file: !1386, line: 472, baseType: !1397, size: 8, offset: 624)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1385, file: !1386, line: 473, baseType: !1397, size: 8, offset: 632)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1385, file: !1386, line: 474, baseType: !1397, size: 8, offset: 640)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1385, file: !1386, line: 475, baseType: !1397, size: 8, offset: 648)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1385, file: !1386, line: 476, baseType: !1397, size: 8, offset: 656)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1385, file: !1386, line: 477, baseType: !1397, size: 8, offset: 664)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1385, file: !1386, line: 478, baseType: !1397, size: 8, offset: 672)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1385, file: !1386, line: 479, baseType: !1397, size: 8, offset: 680)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1385, file: !1386, line: 480, baseType: !1397, size: 8, offset: 688)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1385, file: !1386, line: 481, baseType: !1397, size: 8, offset: 696)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1385, file: !1386, line: 482, baseType: !1397, size: 8, offset: 704)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1385, file: !1386, line: 483, baseType: !1397, size: 8, offset: 712)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1385, file: !1386, line: 484, baseType: !1397, size: 8, offset: 720)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1385, file: !1386, line: 485, baseType: !1397, size: 8, offset: 728)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1385, file: !1386, line: 486, baseType: !1397, size: 8, offset: 736)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1385, file: !1386, line: 487, baseType: !1397, size: 8, offset: 744)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1385, file: !1386, line: 488, baseType: !1397, size: 8, offset: 752)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1385, file: !1386, line: 489, baseType: !1397, size: 8, offset: 760)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1385, file: !1386, line: 490, baseType: !1397, size: 8, offset: 768)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1385, file: !1386, line: 491, baseType: !1397, size: 8, offset: 776)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1385, file: !1386, line: 492, baseType: !1397, size: 8, offset: 784)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1385, file: !1386, line: 493, baseType: !1397, size: 8, offset: 792)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1385, file: !1386, line: 494, baseType: !1397, size: 8, offset: 800)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1385, file: !1386, line: 495, baseType: !1397, size: 8, offset: 808)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1385, file: !1386, line: 496, baseType: !1397, size: 8, offset: 816)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1385, file: !1386, line: 497, baseType: !1397, size: 8, offset: 824)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1385, file: !1386, line: 498, baseType: !1397, size: 8, offset: 832)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1385, file: !1386, line: 499, baseType: !1397, size: 8, offset: 840)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1385, file: !1386, line: 500, baseType: !1397, size: 8, offset: 848)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1385, file: !1386, line: 501, baseType: !1397, size: 8, offset: 856)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1385, file: !1386, line: 502, baseType: !1397, size: 8, offset: 864)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1385, file: !1386, line: 503, baseType: !1397, size: 8, offset: 872)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1385, file: !1386, line: 504, baseType: !1397, size: 8, offset: 880)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1385, file: !1386, line: 505, baseType: !1397, size: 8, offset: 888)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1385, file: !1386, line: 506, baseType: !1397, size: 8, offset: 896)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1385, file: !1386, line: 507, baseType: !1397, size: 8, offset: 904)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1385, file: !1386, line: 508, baseType: !1397, size: 8, offset: 912)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1385, file: !1386, line: 509, baseType: !1397, size: 8, offset: 920)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1385, file: !1386, line: 510, baseType: !1397, size: 8, offset: 928)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1385, file: !1386, line: 511, baseType: !1397, size: 8, offset: 936)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1385, file: !1386, line: 512, baseType: !1397, size: 8, offset: 944)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1385, file: !1386, line: 513, baseType: !1397, size: 8, offset: 952)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1385, file: !1386, line: 514, baseType: !1397, size: 8, offset: 960)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1385, file: !1386, line: 515, baseType: !1397, size: 8, offset: 968)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1385, file: !1386, line: 516, baseType: !1397, size: 8, offset: 976)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1385, file: !1386, line: 517, baseType: !1397, size: 8, offset: 984)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1385, file: !1386, line: 518, baseType: !1397, size: 8, offset: 992)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1385, file: !1386, line: 519, baseType: !1397, size: 8, offset: 1000)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1385, file: !1386, line: 520, baseType: !1397, size: 8, offset: 1008)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1385, file: !1386, line: 521, baseType: !1397, size: 8, offset: 1016)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1385, file: !1386, line: 522, baseType: !1397, size: 8, offset: 1024)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1385, file: !1386, line: 523, baseType: !1397, size: 8, offset: 1032)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1385, file: !1386, line: 524, baseType: !1397, size: 8, offset: 1040)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1385, file: !1386, line: 525, baseType: !1397, size: 8, offset: 1048)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1385, file: !1386, line: 526, baseType: !1397, size: 8, offset: 1056)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1385, file: !1386, line: 527, baseType: !1397, size: 8, offset: 1064)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1385, file: !1386, line: 528, baseType: !1397, size: 8, offset: 1072)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1385, file: !1386, line: 529, baseType: !1397, size: 8, offset: 1080)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1385, file: !1386, line: 530, baseType: !1397, size: 8, offset: 1088)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1385, file: !1386, line: 531, baseType: !1397, size: 8, offset: 1096)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1385, file: !1386, line: 532, baseType: !1397, size: 8, offset: 1104)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1385, file: !1386, line: 533, baseType: !1397, size: 8, offset: 1112)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1385, file: !1386, line: 534, baseType: !1397, size: 8, offset: 1120)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1385, file: !1386, line: 535, baseType: !1397, size: 8, offset: 1128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1385, file: !1386, line: 536, baseType: !1397, size: 8, offset: 1136)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1385, file: !1386, line: 537, baseType: !1397, size: 8, offset: 1144)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1385, file: !1386, line: 538, baseType: !1397, size: 8, offset: 1152)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1385, file: !1386, line: 539, baseType: !1397, size: 8, offset: 1160)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1385, file: !1386, line: 540, baseType: !1397, size: 8, offset: 1168)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1385, file: !1386, line: 541, baseType: !1397, size: 8, offset: 1176)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1385, file: !1386, line: 542, baseType: !1397, size: 8, offset: 1184)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1385, file: !1386, line: 543, baseType: !1397, size: 8, offset: 1192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1385, file: !1386, line: 544, baseType: !1397, size: 8, offset: 1200)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1385, file: !1386, line: 545, baseType: !1397, size: 8, offset: 1208)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1385, file: !1386, line: 546, baseType: !1397, size: 8, offset: 1216)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1385, file: !1386, line: 547, baseType: !1397, size: 8, offset: 1224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1385, file: !1386, line: 548, baseType: !1397, size: 8, offset: 1232)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1385, file: !1386, line: 549, baseType: !1397, size: 8, offset: 1240)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1385, file: !1386, line: 550, baseType: !1397, size: 8, offset: 1248)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1385, file: !1386, line: 551, baseType: !1397, size: 8, offset: 1256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1385, file: !1386, line: 552, baseType: !1397, size: 8, offset: 1264)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1385, file: !1386, line: 553, baseType: !1397, size: 8, offset: 1272)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1385, file: !1386, line: 554, baseType: !1397, size: 8, offset: 1280)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1385, file: !1386, line: 555, baseType: !1397, size: 8, offset: 1288)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1385, file: !1386, line: 556, baseType: !1397, size: 8, offset: 1296)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1385, file: !1386, line: 557, baseType: !1397, size: 8, offset: 1304)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1385, file: !1386, line: 558, baseType: !1397, size: 8, offset: 1312)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1385, file: !1386, line: 559, baseType: !1397, size: 8, offset: 1320)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1385, file: !1386, line: 560, baseType: !1397, size: 8, offset: 1328)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1385, file: !1386, line: 561, baseType: !1397, size: 8, offset: 1336)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1385, file: !1386, line: 562, baseType: !1397, size: 8, offset: 1344)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1385, file: !1386, line: 563, baseType: !1397, size: 8, offset: 1352)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1385, file: !1386, line: 564, baseType: !1397, size: 8, offset: 1360)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1385, file: !1386, line: 565, baseType: !1397, size: 8, offset: 1368)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1385, file: !1386, line: 566, baseType: !1397, size: 8, offset: 1376)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1385, file: !1386, line: 567, baseType: !1397, size: 8, offset: 1384)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1385, file: !1386, line: 568, baseType: !1397, size: 8, offset: 1392)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1385, file: !1386, line: 569, baseType: !1397, size: 8, offset: 1400)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1385, file: !1386, line: 570, baseType: !1397, size: 8, offset: 1408)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1385, file: !1386, line: 571, baseType: !1397, size: 8, offset: 1416)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1385, file: !1386, line: 572, baseType: !1397, size: 8, offset: 1424)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1385, file: !1386, line: 573, baseType: !1397, size: 8, offset: 1432)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1385, file: !1386, line: 574, baseType: !1397, size: 8, offset: 1440)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !705, file: !151, line: 3405, baseType: !1553, size: 384)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1553, file: !151, line: 3353, baseType: !741, size: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1553, file: !151, line: 3356, baseType: !1557, size: 192, offset: 192)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1386, line: 578, size: 192, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1557, file: !1386, line: 580, baseType: !579, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1557, file: !1386, line: 581, baseType: !579, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1557, file: !1386, line: 582, baseType: !579, size: 32, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1557, file: !1386, line: 583, baseType: !579, size: 32, offset: 96)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1557, file: !1386, line: 584, baseType: !578, size: 8, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1557, file: !1386, line: 585, baseType: !578, size: 8, offset: 136)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1557, file: !1386, line: 586, baseType: !578, size: 8, offset: 144)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1557, file: !1386, line: 587, baseType: !578, size: 8, offset: 152)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1557, file: !1386, line: 588, baseType: !578, size: 8, offset: 160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1557, file: !1386, line: 589, baseType: !578, size: 8, offset: 168)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1557, file: !1386, line: 590, baseType: !578, size: 8, offset: 176)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !609, file: !378, line: 178, baseType: !961, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !609, file: !378, line: 179, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579, !1580, !1581}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1574, file: !378, line: 144, baseType: !703, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1574, file: !378, line: 145, baseType: !588, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1574, file: !378, line: 146, baseType: !588, size: 64, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1574, file: !378, line: 147, baseType: !1220, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1574, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1574, file: !378, line: 149, baseType: !578, size: 8, offset: 256)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !609, file: !378, line: 180, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1585, file: !378, line: 160, baseType: !703, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1585, file: !378, line: 161, baseType: !674, size: 64, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !609, file: !378, line: 181, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !604, file: !378, line: 317, baseType: !1593, size: 64)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 64, elements: !623)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !604, file: !378, line: 318, baseType: !1595, size: 320)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1596)
!1596 = !{!1597, !1599, !1654}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1595, file: !378, line: 190, baseType: !1598, size: 192)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 192, elements: !774)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1595, file: !378, line: 193, baseType: !1600, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1602)
!1602 = !{!1603, !1639, !1640, !1641, !1653}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1601, file: !378, line: 208, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !589, line: 62, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1607, line: 538, size: 256, elements: !1608)
!1607 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1608 = !{!1609, !1613, !1619, !1630}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1606, file: !1607, line: 539, baseType: !1610, size: 32)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1607, line: 482, size: 32, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1610, file: !1607, line: 484, baseType: !7, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1606, file: !1607, line: 540, baseType: !1614, size: 192)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1607, line: 488, size: 192, elements: !1615)
!1615 = !{!1616, !1617, !1618}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1614, file: !1607, line: 489, baseType: !1610, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1614, file: !1607, line: 492, baseType: !584, size: 64, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1614, file: !1607, line: 496, baseType: !703, size: 64, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1606, file: !1607, line: 541, baseType: !1620, size: 256)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1607, line: 504, size: 256, elements: !1621)
!1621 = !{!1622, !1623, !1628, !1629}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1620, file: !1607, line: 505, baseType: !1610, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1620, file: !1607, line: 509, baseType: !1624, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1607, line: 501, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{null, !1078}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1620, file: !1607, line: 510, baseType: !1078, size: 64, offset: 128)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1620, file: !1607, line: 513, baseType: !1604, size: 64, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1606, file: !1607, line: 542, baseType: !1631, size: 128)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1607, line: 530, size: 128, elements: !1632)
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1631, file: !1607, line: 531, baseType: !1610, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1631, file: !1607, line: 534, baseType: !1635, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1607, line: 525, baseType: !1636)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!578, !703, !584, !587, !587}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1601, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1601, file: !378, line: 214, baseType: !674, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1601, file: !378, line: 224, baseType: !1642, size: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1645)
!1645 = !{!1646}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1644, file: !378, line: 202, baseType: !1647, size: 128)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1649)
!1649 = !{!1650, !1651, !1652}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1648, file: !378, line: 200, baseType: !7, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1648, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1648, file: !378, line: 200, baseType: !622, size: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1601, file: !378, line: 234, baseType: !1642, size: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1595, file: !378, line: 197, baseType: !674, size: 64, offset: 256)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !604, file: !378, line: 319, baseType: !763, size: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !604, file: !378, line: 320, baseType: !782, size: 192)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "replace_label_data", file: !378, line: 1811, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "replace_label_data", file: !378, line: 1806, size: 192, elements: !1661)
!1661 = !{!1662, !1663, !1664}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1660, file: !378, line: 1808, baseType: !588, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1660, file: !378, line: 1809, baseType: !588, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "update_label_nuses", scope: !1660, file: !378, line: 1810, baseType: !578, size: 8, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1666, line: 42, baseType: !587)
!1666 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "set_of_data", file: !3, line: 987, size: 128, elements: !1671)
!1671 = !{!1672, !1674}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !1670, file: !3, line: 989, baseType: !1673, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !589, line: 51, baseType: !1667)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pat", scope: !1670, file: !3, line: 990, baseType: !1673, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parms_set_data", file: !3, line: 3372, size: 128, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !1676, file: !3, line: 3374, baseType: !579, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1676, file: !3, line: 3375, baseType: !1665, size: 64, offset: 64)
!1680 = !{!0, !1681, !1683}
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "target_flags", scope: !2, file: !3, line: 70, type: !579, isLocal: false, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "num_sign_bit_copies_in_rep", scope: !2, file: !3, line: 86, type: !1685, isLocal: true, isDefinition: true)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 12800, elements: !1686)
!1686 = !{!1687, !1687}
!1687 = !DISubrange(count: 20)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 4448, elements: !1689)
!1689 = !{!1690}
!1690 = !DISubrange(count: 139)
!1691 = !{i32 2, !"Dwarf Version", i32 4}
!1692 = !{i32 2, !"Debug Info Version", i32 3}
!1693 = !{i32 1, !"wchar_size", i32 4}
!1694 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1695 = distinct !DISubprogram(name: "vprintf", scope: !1696, file: !1696, line: 39, type: !1697, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1707)
!1696 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!579, !1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !584)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1706}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1701, file: !3, baseType: !7, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1701, file: !3, baseType: !7, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1701, file: !3, baseType: !583, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1701, file: !3, baseType: !583, size: 64, offset: 128)
!1707 = !{!1708, !1709}
!1708 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1695, file: !1696, line: 39, type: !1699)
!1709 = !DILocalVariable(name: "__arg", arg: 2, scope: !1695, file: !1696, line: 39, type: !1700)
!1710 = !DILocation(line: 0, scope: !1695)
!1711 = !DILocation(line: 41, column: 20, scope: !1695)
!1712 = !DILocation(line: 41, column: 10, scope: !1695)
!1713 = !DILocation(line: 41, column: 3, scope: !1695)
!1714 = distinct !DISubprogram(name: "getchar", scope: !1696, file: !1696, line: 47, type: !1715, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!579}
!1717 = !{}
!1718 = !DILocation(line: 49, column: 16, scope: !1714)
!1719 = !DILocation(line: 49, column: 10, scope: !1714)
!1720 = !DILocation(line: 49, column: 3, scope: !1714)
!1721 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1696, file: !1696, line: 56, type: !1722, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1773)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!579, !1724}
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1726, line: 7, baseType: !1727)
!1726 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1728, line: 49, size: 1728, elements: !1729)
!1728 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1745, !1747, !1748, !1749, !1752, !1753, !1754, !1755, !1758, !1760, !1763, !1766, !1767, !1768, !1769, !1770}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1727, file: !1728, line: 51, baseType: !579, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1727, file: !1728, line: 54, baseType: !581, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1727, file: !1728, line: 55, baseType: !581, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1727, file: !1728, line: 56, baseType: !581, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1727, file: !1728, line: 57, baseType: !581, size: 64, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1727, file: !1728, line: 58, baseType: !581, size: 64, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1727, file: !1728, line: 59, baseType: !581, size: 64, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1727, file: !1728, line: 60, baseType: !581, size: 64, offset: 448)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1727, file: !1728, line: 61, baseType: !581, size: 64, offset: 512)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1727, file: !1728, line: 64, baseType: !581, size: 64, offset: 576)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1727, file: !1728, line: 65, baseType: !581, size: 64, offset: 640)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1727, file: !1728, line: 66, baseType: !581, size: 64, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1727, file: !1728, line: 68, baseType: !1743, size: 64, offset: 768)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1728, line: 36, flags: DIFlagFwdDecl)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1727, file: !1728, line: 70, baseType: !1746, size: 64, offset: 832)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1727, file: !1728, line: 72, baseType: !579, size: 32, offset: 896)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1727, file: !1728, line: 73, baseType: !579, size: 32, offset: 928)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1727, file: !1728, line: 74, baseType: !1750, size: 64, offset: 960)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1751, line: 152, baseType: !674)
!1751 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1727, file: !1728, line: 77, baseType: !586, size: 16, offset: 1024)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1727, file: !1728, line: 78, baseType: !1397, size: 8, offset: 1040)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1727, file: !1728, line: 79, baseType: !798, size: 8, offset: 1048)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1727, file: !1728, line: 81, baseType: !1756, size: 64, offset: 1088)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1728, line: 43, baseType: null)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1727, file: !1728, line: 89, baseType: !1759, size: 64, offset: 1152)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1751, line: 153, baseType: !674)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1727, file: !1728, line: 91, baseType: !1761, size: 64, offset: 1216)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1728, line: 37, flags: DIFlagFwdDecl)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1727, file: !1728, line: 92, baseType: !1764, size: 64, offset: 1280)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1728, line: 38, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1727, file: !1728, line: 93, baseType: !1746, size: 64, offset: 1344)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1727, file: !1728, line: 94, baseType: !583, size: 64, offset: 1408)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1727, file: !1728, line: 95, baseType: !1093, size: 64, offset: 1472)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1727, file: !1728, line: 96, baseType: !579, size: 32, offset: 1536)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1727, file: !1728, line: 98, baseType: !1771, size: 160, offset: 1568)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 160, elements: !1772)
!1772 = !{!1687}
!1773 = !{!1774}
!1774 = !DILocalVariable(name: "__fp", arg: 1, scope: !1721, file: !1696, line: 56, type: !1724)
!1775 = !DILocation(line: 0, scope: !1721)
!1776 = !DILocation(line: 58, column: 10, scope: !1721)
!1777 = !DILocation(line: 58, column: 3, scope: !1721)
!1778 = distinct !DISubprogram(name: "getc_unlocked", scope: !1696, file: !1696, line: 66, type: !1722, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1779)
!1779 = !{!1780}
!1780 = !DILocalVariable(name: "__fp", arg: 1, scope: !1778, file: !1696, line: 66, type: !1724)
!1781 = !DILocation(line: 0, scope: !1778)
!1782 = !DILocation(line: 68, column: 10, scope: !1778)
!1783 = !DILocation(line: 68, column: 3, scope: !1778)
!1784 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1696, file: !1696, line: 73, type: !1715, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1717)
!1785 = !DILocation(line: 75, column: 10, scope: !1784)
!1786 = !DILocation(line: 75, column: 3, scope: !1784)
!1787 = distinct !DISubprogram(name: "putchar", scope: !1696, file: !1696, line: 82, type: !1788, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1790)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!579, !579}
!1790 = !{!1791}
!1791 = !DILocalVariable(name: "__c", arg: 1, scope: !1787, file: !1696, line: 82, type: !579)
!1792 = !DILocation(line: 0, scope: !1787)
!1793 = !DILocation(line: 84, column: 21, scope: !1787)
!1794 = !DILocation(line: 84, column: 10, scope: !1787)
!1795 = !DILocation(line: 84, column: 3, scope: !1787)
!1796 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1696, file: !1696, line: 91, type: !1797, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1799)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!579, !579, !1724}
!1799 = !{!1800, !1801}
!1800 = !DILocalVariable(name: "__c", arg: 1, scope: !1796, file: !1696, line: 91, type: !579)
!1801 = !DILocalVariable(name: "__stream", arg: 2, scope: !1796, file: !1696, line: 91, type: !1724)
!1802 = !DILocation(line: 0, scope: !1796)
!1803 = !DILocation(line: 93, column: 10, scope: !1796)
!1804 = !DILocation(line: 93, column: 3, scope: !1796)
!1805 = distinct !DISubprogram(name: "putc_unlocked", scope: !1696, file: !1696, line: 101, type: !1797, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1806)
!1806 = !{!1807, !1808}
!1807 = !DILocalVariable(name: "__c", arg: 1, scope: !1805, file: !1696, line: 101, type: !579)
!1808 = !DILocalVariable(name: "__stream", arg: 2, scope: !1805, file: !1696, line: 101, type: !1724)
!1809 = !DILocation(line: 0, scope: !1805)
!1810 = !DILocation(line: 103, column: 10, scope: !1805)
!1811 = !DILocation(line: 103, column: 3, scope: !1805)
!1812 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1696, file: !1696, line: 108, type: !1788, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1813)
!1813 = !{!1814}
!1814 = !DILocalVariable(name: "__c", arg: 1, scope: !1812, file: !1696, line: 108, type: !579)
!1815 = !DILocation(line: 0, scope: !1812)
!1816 = !DILocation(line: 110, column: 10, scope: !1812)
!1817 = !DILocation(line: 110, column: 3, scope: !1812)
!1818 = distinct !DISubprogram(name: "getline", scope: !1696, file: !1696, line: 118, type: !1819, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1823)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!1821, !580, !1822, !1724}
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1751, line: 193, baseType: !674)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1823 = !{!1824, !1825, !1826}
!1824 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !1818, file: !1696, line: 118, type: !580)
!1825 = !DILocalVariable(name: "__n", arg: 2, scope: !1818, file: !1696, line: 118, type: !1822)
!1826 = !DILocalVariable(name: "__stream", arg: 3, scope: !1818, file: !1696, line: 118, type: !1724)
!1827 = !DILocation(line: 0, scope: !1818)
!1828 = !DILocation(line: 120, column: 10, scope: !1818)
!1829 = !DILocation(line: 120, column: 3, scope: !1818)
!1830 = distinct !DISubprogram(name: "feof_unlocked", scope: !1696, file: !1696, line: 128, type: !1722, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1831)
!1831 = !{!1832}
!1832 = !DILocalVariable(name: "__stream", arg: 1, scope: !1830, file: !1696, line: 128, type: !1724)
!1833 = !DILocation(line: 0, scope: !1830)
!1834 = !DILocation(line: 130, column: 10, scope: !1830)
!1835 = !DILocation(line: 130, column: 3, scope: !1830)
!1836 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1696, file: !1696, line: 135, type: !1722, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1837)
!1837 = !{!1838}
!1838 = !DILocalVariable(name: "__stream", arg: 1, scope: !1836, file: !1696, line: 135, type: !1724)
!1839 = !DILocation(line: 0, scope: !1836)
!1840 = !DILocation(line: 137, column: 10, scope: !1836)
!1841 = !DILocation(line: 137, column: 3, scope: !1836)
!1842 = distinct !DISubprogram(name: "tolower", scope: !1843, file: !1843, line: 207, type: !1788, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1844)
!1843 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1844 = !{!1845}
!1845 = !DILocalVariable(name: "__c", arg: 1, scope: !1842, file: !1843, line: 207, type: !579)
!1846 = !DILocation(line: 0, scope: !1842)
!1847 = !DILocation(line: 209, column: 22, scope: !1842)
!1848 = !DILocation(line: 209, column: 39, scope: !1842)
!1849 = !DILocation(line: 209, column: 38, scope: !1842)
!1850 = !DILocation(line: 209, column: 37, scope: !1842)
!1851 = !DILocation(line: 209, column: 10, scope: !1842)
!1852 = !DILocation(line: 209, column: 3, scope: !1842)
!1853 = distinct !DISubprogram(name: "toupper", scope: !1843, file: !1843, line: 213, type: !1788, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!1854 = !{!1855}
!1855 = !DILocalVariable(name: "__c", arg: 1, scope: !1853, file: !1843, line: 213, type: !579)
!1856 = !DILocation(line: 0, scope: !1853)
!1857 = !DILocation(line: 215, column: 22, scope: !1853)
!1858 = !DILocation(line: 215, column: 39, scope: !1853)
!1859 = !DILocation(line: 215, column: 38, scope: !1853)
!1860 = !DILocation(line: 215, column: 37, scope: !1853)
!1861 = !DILocation(line: 215, column: 10, scope: !1853)
!1862 = !DILocation(line: 215, column: 3, scope: !1853)
!1863 = distinct !DISubprogram(name: "atoi", scope: !1864, file: !1864, line: 361, type: !1865, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1867)
!1864 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!579, !584}
!1867 = !{!1868}
!1868 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1863, file: !1864, line: 361, type: !584)
!1869 = !DILocation(line: 0, scope: !1863)
!1870 = !DILocation(line: 363, column: 16, scope: !1863)
!1871 = !DILocation(line: 363, column: 10, scope: !1863)
!1872 = !DILocation(line: 363, column: 3, scope: !1863)
!1873 = distinct !DISubprogram(name: "atol", scope: !1864, file: !1864, line: 366, type: !1874, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1876)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!674, !584}
!1876 = !{!1877}
!1877 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1873, file: !1864, line: 366, type: !584)
!1878 = !DILocation(line: 0, scope: !1873)
!1879 = !DILocation(line: 368, column: 10, scope: !1873)
!1880 = !DILocation(line: 368, column: 3, scope: !1873)
!1881 = distinct !DISubprogram(name: "atoll", scope: !1864, file: !1864, line: 373, type: !1882, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1885)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!1884, !584}
!1884 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1885 = !{!1886}
!1886 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1881, file: !1864, line: 373, type: !584)
!1887 = !DILocation(line: 0, scope: !1881)
!1888 = !DILocation(line: 375, column: 10, scope: !1881)
!1889 = !DILocation(line: 375, column: 3, scope: !1881)
!1890 = distinct !DISubprogram(name: "bsearch", scope: !1891, file: !1891, line: 20, type: !1892, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1895)
!1891 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!583, !1078, !1078, !1093, !1093, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1864, line: 808, baseType: !1082)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1896 = !DILocalVariable(name: "__key", arg: 1, scope: !1890, file: !1891, line: 20, type: !1078)
!1897 = !DILocalVariable(name: "__base", arg: 2, scope: !1890, file: !1891, line: 20, type: !1078)
!1898 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !1890, file: !1891, line: 20, type: !1093)
!1899 = !DILocalVariable(name: "__size", arg: 4, scope: !1890, file: !1891, line: 20, type: !1093)
!1900 = !DILocalVariable(name: "__compar", arg: 5, scope: !1890, file: !1891, line: 21, type: !1894)
!1901 = !DILocalVariable(name: "__l", scope: !1890, file: !1891, line: 23, type: !1093)
!1902 = !DILocalVariable(name: "__u", scope: !1890, file: !1891, line: 23, type: !1093)
!1903 = !DILocalVariable(name: "__idx", scope: !1890, file: !1891, line: 23, type: !1093)
!1904 = !DILocalVariable(name: "__p", scope: !1890, file: !1891, line: 24, type: !1078)
!1905 = !DILocalVariable(name: "__comparison", scope: !1890, file: !1891, line: 25, type: !579)
!1906 = !DILocation(line: 0, scope: !1890)
!1907 = !DILocation(line: 29, column: 3, scope: !1890)
!1908 = !DILocation(line: 27, column: 7, scope: !1890)
!1909 = !DILocation(line: 29, column: 14, scope: !1890)
!1910 = !DILocation(line: 31, column: 20, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1890, file: !1891, line: 30, column: 5)
!1912 = !DILocation(line: 31, column: 27, scope: !1911)
!1913 = !DILocation(line: 32, column: 56, scope: !1911)
!1914 = !DILocation(line: 32, column: 47, scope: !1911)
!1915 = !DILocation(line: 33, column: 22, scope: !1911)
!1916 = !DILocation(line: 34, column: 24, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1911, file: !1891, line: 34, column: 11)
!1918 = !DILocation(line: 34, column: 11, scope: !1911)
!1919 = !DILocation(line: 36, column: 29, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1917, file: !1891, line: 36, column: 16)
!1921 = !DILocation(line: 36, column: 16, scope: !1917)
!1922 = !DILocation(line: 37, column: 14, scope: !1920)
!1923 = distinct !{!1923, !1907, !1924}
!1924 = !DILocation(line: 40, column: 5, scope: !1890)
!1925 = !DILocation(line: 43, column: 1, scope: !1890)
!1926 = distinct !DISubprogram(name: "atof", scope: !1927, file: !1927, line: 25, type: !1928, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1931)
!1927 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1930, !584}
!1930 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1931 = !{!1932}
!1932 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1926, file: !1927, line: 25, type: !584)
!1933 = !DILocation(line: 0, scope: !1926)
!1934 = !DILocation(line: 27, column: 10, scope: !1926)
!1935 = !DILocation(line: 27, column: 3, scope: !1926)
!1936 = distinct !DISubprogram(name: "strtoimax", scope: !1937, file: !1937, line: 324, type: !1938, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1944)
!1937 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!1940, !1699, !1943, !579}
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !1941, line: 101, baseType: !1942)
!1941 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1751, line: 72, baseType: !674)
!1943 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !580)
!1944 = !{!1945, !1946, !1947}
!1945 = !DILocalVariable(name: "nptr", arg: 1, scope: !1936, file: !1937, line: 324, type: !1699)
!1946 = !DILocalVariable(name: "endptr", arg: 2, scope: !1936, file: !1937, line: 324, type: !1943)
!1947 = !DILocalVariable(name: "base", arg: 3, scope: !1936, file: !1937, line: 324, type: !579)
!1948 = !DILocation(line: 0, scope: !1936)
!1949 = !DILocation(line: 327, column: 10, scope: !1936)
!1950 = !DILocation(line: 327, column: 3, scope: !1936)
!1951 = distinct !DISubprogram(name: "strtoumax", scope: !1937, file: !1937, line: 336, type: !1952, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1956)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!1954, !1699, !1943, !579}
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !1941, line: 102, baseType: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1751, line: 73, baseType: !587)
!1956 = !{!1957, !1958, !1959}
!1957 = !DILocalVariable(name: "nptr", arg: 1, scope: !1951, file: !1937, line: 336, type: !1699)
!1958 = !DILocalVariable(name: "endptr", arg: 2, scope: !1951, file: !1937, line: 336, type: !1943)
!1959 = !DILocalVariable(name: "base", arg: 3, scope: !1951, file: !1937, line: 336, type: !579)
!1960 = !DILocation(line: 0, scope: !1951)
!1961 = !DILocation(line: 339, column: 10, scope: !1951)
!1962 = !DILocation(line: 339, column: 3, scope: !1951)
!1963 = distinct !DISubprogram(name: "wcstoimax", scope: !1937, file: !1937, line: 348, type: !1964, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1973)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!1940, !1966, !1970, !579}
!1966 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !1937, line: 34, baseType: !579)
!1970 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1971)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1973 = !{!1974, !1975, !1976}
!1974 = !DILocalVariable(name: "nptr", arg: 1, scope: !1963, file: !1937, line: 348, type: !1966)
!1975 = !DILocalVariable(name: "endptr", arg: 2, scope: !1963, file: !1937, line: 348, type: !1970)
!1976 = !DILocalVariable(name: "base", arg: 3, scope: !1963, file: !1937, line: 348, type: !579)
!1977 = !DILocation(line: 0, scope: !1963)
!1978 = !DILocation(line: 351, column: 10, scope: !1963)
!1979 = !DILocation(line: 351, column: 3, scope: !1963)
!1980 = distinct !DISubprogram(name: "wcstoumax", scope: !1937, file: !1937, line: 362, type: !1981, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1983)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!1954, !1966, !1970, !579}
!1983 = !{!1984, !1985, !1986}
!1984 = !DILocalVariable(name: "nptr", arg: 1, scope: !1980, file: !1937, line: 362, type: !1966)
!1985 = !DILocalVariable(name: "endptr", arg: 2, scope: !1980, file: !1937, line: 362, type: !1970)
!1986 = !DILocalVariable(name: "base", arg: 3, scope: !1980, file: !1937, line: 362, type: !579)
!1987 = !DILocation(line: 0, scope: !1980)
!1988 = !DILocation(line: 365, column: 10, scope: !1980)
!1989 = !DILocation(line: 365, column: 3, scope: !1980)
!1990 = distinct !DISubprogram(name: "stat", scope: !1991, file: !1991, line: 453, type: !1992, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2029)
!1991 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!579, !584, !1994}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1996, line: 46, size: 1152, elements: !1997)
!1996 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1997 = !{!1998, !2000, !2002, !2004, !2006, !2008, !2010, !2011, !2012, !2013, !2015, !2017, !2025, !2026, !2027}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1995, file: !1996, line: 48, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1751, line: 145, baseType: !587)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1995, file: !1996, line: 53, baseType: !2001, size: 64, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1751, line: 148, baseType: !587)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1995, file: !1996, line: 61, baseType: !2003, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1751, line: 151, baseType: !587)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1995, file: !1996, line: 62, baseType: !2005, size: 32, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1751, line: 150, baseType: !7)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1995, file: !1996, line: 64, baseType: !2007, size: 32, offset: 224)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1751, line: 146, baseType: !7)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1995, file: !1996, line: 65, baseType: !2009, size: 32, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1751, line: 147, baseType: !7)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1995, file: !1996, line: 67, baseType: !579, size: 32, offset: 288)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1995, file: !1996, line: 69, baseType: !1999, size: 64, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1995, file: !1996, line: 74, baseType: !1750, size: 64, offset: 384)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1995, file: !1996, line: 78, baseType: !2014, size: 64, offset: 448)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1751, line: 174, baseType: !674)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1995, file: !1996, line: 80, baseType: !2016, size: 64, offset: 512)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1751, line: 179, baseType: !674)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1995, file: !1996, line: 91, baseType: !2018, size: 128, offset: 576)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2019, line: 10, size: 128, elements: !2020)
!2019 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2020 = !{!2021, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2018, file: !2019, line: 12, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1751, line: 160, baseType: !674)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2018, file: !2019, line: 16, baseType: !2024, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1751, line: 196, baseType: !674)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1995, file: !1996, line: 92, baseType: !2018, size: 128, offset: 704)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1995, file: !1996, line: 93, baseType: !2018, size: 128, offset: 832)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1995, file: !1996, line: 106, baseType: !2028, size: 192, offset: 960)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2024, size: 192, elements: !774)
!2029 = !{!2030, !2031}
!2030 = !DILocalVariable(name: "__path", arg: 1, scope: !1990, file: !1991, line: 453, type: !584)
!2031 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !1990, file: !1991, line: 453, type: !1994)
!2032 = !DILocation(line: 0, scope: !1990)
!2033 = !DILocation(line: 455, column: 10, scope: !1990)
!2034 = !DILocation(line: 455, column: 3, scope: !1990)
!2035 = distinct !DISubprogram(name: "lstat", scope: !1991, file: !1991, line: 460, type: !1992, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2036)
!2036 = !{!2037, !2038}
!2037 = !DILocalVariable(name: "__path", arg: 1, scope: !2035, file: !1991, line: 460, type: !584)
!2038 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2035, file: !1991, line: 460, type: !1994)
!2039 = !DILocation(line: 0, scope: !2035)
!2040 = !DILocation(line: 462, column: 10, scope: !2035)
!2041 = !DILocation(line: 462, column: 3, scope: !2035)
!2042 = distinct !DISubprogram(name: "fstat", scope: !1991, file: !1991, line: 467, type: !2043, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2045)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{!579, !579, !1994}
!2045 = !{!2046, !2047}
!2046 = !DILocalVariable(name: "__fd", arg: 1, scope: !2042, file: !1991, line: 467, type: !579)
!2047 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2042, file: !1991, line: 467, type: !1994)
!2048 = !DILocation(line: 0, scope: !2042)
!2049 = !DILocation(line: 469, column: 10, scope: !2042)
!2050 = !DILocation(line: 469, column: 3, scope: !2042)
!2051 = distinct !DISubprogram(name: "fstatat", scope: !1991, file: !1991, line: 474, type: !2052, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2054)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!579, !579, !584, !1994, !579}
!2054 = !{!2055, !2056, !2057, !2058}
!2055 = !DILocalVariable(name: "__fd", arg: 1, scope: !2051, file: !1991, line: 474, type: !579)
!2056 = !DILocalVariable(name: "__filename", arg: 2, scope: !2051, file: !1991, line: 474, type: !584)
!2057 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2051, file: !1991, line: 474, type: !1994)
!2058 = !DILocalVariable(name: "__flag", arg: 4, scope: !2051, file: !1991, line: 474, type: !579)
!2059 = !DILocation(line: 0, scope: !2051)
!2060 = !DILocation(line: 477, column: 10, scope: !2051)
!2061 = !DILocation(line: 477, column: 3, scope: !2051)
!2062 = distinct !DISubprogram(name: "mknod", scope: !1991, file: !1991, line: 483, type: !2063, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2065)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!579, !584, !2005, !1999}
!2065 = !{!2066, !2067, !2068}
!2066 = !DILocalVariable(name: "__path", arg: 1, scope: !2062, file: !1991, line: 483, type: !584)
!2067 = !DILocalVariable(name: "__mode", arg: 2, scope: !2062, file: !1991, line: 483, type: !2005)
!2068 = !DILocalVariable(name: "__dev", arg: 3, scope: !2062, file: !1991, line: 483, type: !1999)
!2069 = !DILocation(line: 0, scope: !2062)
!2070 = !DILocation(line: 485, column: 10, scope: !2062)
!2071 = !DILocation(line: 485, column: 3, scope: !2062)
!2072 = distinct !DISubprogram(name: "mknodat", scope: !1991, file: !1991, line: 491, type: !2073, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2075)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!579, !579, !584, !2005, !1999}
!2075 = !{!2076, !2077, !2078, !2079}
!2076 = !DILocalVariable(name: "__fd", arg: 1, scope: !2072, file: !1991, line: 491, type: !579)
!2077 = !DILocalVariable(name: "__path", arg: 2, scope: !2072, file: !1991, line: 491, type: !584)
!2078 = !DILocalVariable(name: "__mode", arg: 3, scope: !2072, file: !1991, line: 491, type: !2005)
!2079 = !DILocalVariable(name: "__dev", arg: 4, scope: !2072, file: !1991, line: 491, type: !1999)
!2080 = !DILocation(line: 0, scope: !2072)
!2081 = !DILocation(line: 494, column: 10, scope: !2072)
!2082 = !DILocation(line: 494, column: 3, scope: !2072)
!2083 = distinct !DISubprogram(name: "stat64", scope: !1991, file: !1991, line: 502, type: !2084, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2106)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!579, !584, !2086}
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !1996, line: 119, size: 1152, elements: !2088)
!2088 = !{!2089, !2090, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2102, !2103, !2104, !2105}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2087, file: !1996, line: 121, baseType: !1999, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2087, file: !1996, line: 123, baseType: !2091, size: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1751, line: 149, baseType: !587)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2087, file: !1996, line: 124, baseType: !2003, size: 64, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2087, file: !1996, line: 125, baseType: !2005, size: 32, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2087, file: !1996, line: 132, baseType: !2007, size: 32, offset: 224)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2087, file: !1996, line: 133, baseType: !2009, size: 32, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2087, file: !1996, line: 135, baseType: !579, size: 32, offset: 288)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2087, file: !1996, line: 136, baseType: !1999, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2087, file: !1996, line: 137, baseType: !1750, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2087, file: !1996, line: 143, baseType: !2014, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2087, file: !1996, line: 144, baseType: !2101, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1751, line: 180, baseType: !674)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2087, file: !1996, line: 152, baseType: !2018, size: 128, offset: 576)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2087, file: !1996, line: 153, baseType: !2018, size: 128, offset: 704)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2087, file: !1996, line: 154, baseType: !2018, size: 128, offset: 832)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2087, file: !1996, line: 164, baseType: !2028, size: 192, offset: 960)
!2106 = !{!2107, !2108}
!2107 = !DILocalVariable(name: "__path", arg: 1, scope: !2083, file: !1991, line: 502, type: !584)
!2108 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2083, file: !1991, line: 502, type: !2086)
!2109 = !DILocation(line: 0, scope: !2083)
!2110 = !DILocation(line: 504, column: 10, scope: !2083)
!2111 = !DILocation(line: 504, column: 3, scope: !2083)
!2112 = distinct !DISubprogram(name: "lstat64", scope: !1991, file: !1991, line: 509, type: !2084, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2113)
!2113 = !{!2114, !2115}
!2114 = !DILocalVariable(name: "__path", arg: 1, scope: !2112, file: !1991, line: 509, type: !584)
!2115 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2112, file: !1991, line: 509, type: !2086)
!2116 = !DILocation(line: 0, scope: !2112)
!2117 = !DILocation(line: 511, column: 10, scope: !2112)
!2118 = !DILocation(line: 511, column: 3, scope: !2112)
!2119 = distinct !DISubprogram(name: "fstat64", scope: !1991, file: !1991, line: 516, type: !2120, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2122)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!579, !579, !2086}
!2122 = !{!2123, !2124}
!2123 = !DILocalVariable(name: "__fd", arg: 1, scope: !2119, file: !1991, line: 516, type: !579)
!2124 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2119, file: !1991, line: 516, type: !2086)
!2125 = !DILocation(line: 0, scope: !2119)
!2126 = !DILocation(line: 518, column: 10, scope: !2119)
!2127 = !DILocation(line: 518, column: 3, scope: !2119)
!2128 = distinct !DISubprogram(name: "fstatat64", scope: !1991, file: !1991, line: 523, type: !2129, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!579, !579, !584, !2086, !579}
!2131 = !{!2132, !2133, !2134, !2135}
!2132 = !DILocalVariable(name: "__fd", arg: 1, scope: !2128, file: !1991, line: 523, type: !579)
!2133 = !DILocalVariable(name: "__filename", arg: 2, scope: !2128, file: !1991, line: 523, type: !584)
!2134 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2128, file: !1991, line: 523, type: !2086)
!2135 = !DILocalVariable(name: "__flag", arg: 4, scope: !2128, file: !1991, line: 523, type: !579)
!2136 = !DILocation(line: 0, scope: !2128)
!2137 = !DILocation(line: 526, column: 10, scope: !2128)
!2138 = !DILocation(line: 526, column: 3, scope: !2128)
!2139 = distinct !DISubprogram(name: "rtx_unstable_p", scope: !3, file: !3, line: 94, type: !2140, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2142)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!579, !1673}
!2142 = !{!2143, !2144, !2146, !2147, !2148}
!2143 = !DILocalVariable(name: "x", arg: 1, scope: !2139, file: !3, line: 94, type: !1673)
!2144 = !DILocalVariable(name: "code", scope: !2139, file: !3, line: 96, type: !2145)
!2145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!2146 = !DILocalVariable(name: "i", scope: !2139, file: !3, line: 97, type: !579)
!2147 = !DILocalVariable(name: "fmt", scope: !2139, file: !3, line: 98, type: !584)
!2148 = !DILocalVariable(name: "j", scope: !2149, file: !3, line: 148, type: !579)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 147, column: 7)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 146, column: 14)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !3, line: 141, column: 9)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !3, line: 140, column: 3)
!2153 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 140, column: 3)
!2154 = !DILocation(line: 0, scope: !2139)
!2155 = !DILocation(line: 96, column: 25, scope: !2139)
!2156 = !DILocation(line: 100, column: 3, scope: !2139)
!2157 = !DILocation(line: 103, column: 15, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 101, column: 5)
!2159 = !DILocation(line: 103, column: 34, scope: !2158)
!2160 = !DILocation(line: 103, column: 53, scope: !2158)
!2161 = !DILocation(line: 103, column: 37, scope: !2158)
!2162 = !DILocation(line: 103, column: 7, scope: !2158)
!2163 = !DILocation(line: 116, column: 16, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 116, column: 11)
!2165 = !DILocation(line: 116, column: 13, scope: !2164)
!2166 = !DILocation(line: 116, column: 42, scope: !2164)
!2167 = !DILocation(line: 116, column: 39, scope: !2164)
!2168 = !DILocation(line: 116, column: 34, scope: !2164)
!2169 = !DILocation(line: 118, column: 13, scope: !2164)
!2170 = !DILocation(line: 118, column: 10, scope: !2164)
!2171 = !DILocation(line: 118, column: 29, scope: !2164)
!2172 = !DILocation(line: 118, column: 32, scope: !2164)
!2173 = !DILocation(line: 116, column: 11, scope: !2158)
!2174 = !DILocation(line: 124, column: 16, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 124, column: 11)
!2176 = !DILocation(line: 124, column: 13, scope: !2175)
!2177 = !DILocation(line: 0, scope: !2158)
!2178 = !DILocation(line: 130, column: 11, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 130, column: 11)
!2180 = !DILocation(line: 130, column: 11, scope: !2158)
!2181 = !DILocation(line: 139, column: 9, scope: !2139)
!2182 = !DILocation(line: 140, column: 12, scope: !2153)
!2183 = !DILocation(line: 143, column: 22, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 143, column: 6)
!2185 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 142, column: 7)
!2186 = !DILocation(line: 140, column: 8, scope: !2153)
!2187 = !DILocation(line: 0, scope: !2153)
!2188 = !DILocation(line: 140, column: 41, scope: !2152)
!2189 = !DILocation(line: 140, column: 3, scope: !2153)
!2190 = !DILocation(line: 141, column: 9, scope: !2151)
!2191 = !DILocation(line: 141, column: 16, scope: !2151)
!2192 = !DILocation(line: 141, column: 9, scope: !2152)
!2193 = !DILocation(line: 143, column: 6, scope: !2184)
!2194 = !DILocation(line: 143, column: 6, scope: !2185)
!2195 = !DILocation(line: 146, column: 21, scope: !2150)
!2196 = !DILocation(line: 146, column: 14, scope: !2151)
!2197 = !DILocation(line: 150, column: 24, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 150, column: 8)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 149, column: 2)
!2200 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 149, column: 2)
!2201 = !DILocation(line: 149, column: 2, scope: !2200)
!2202 = !DILocation(line: 0, scope: !2200)
!2203 = !DILocation(line: 0, scope: !2149)
!2204 = !DILocation(line: 149, column: 18, scope: !2199)
!2205 = !DILocation(line: 149, column: 16, scope: !2199)
!2206 = !DILocation(line: 150, column: 8, scope: !2198)
!2207 = !DILocation(line: 150, column: 8, scope: !2199)
!2208 = !DILocation(line: 149, column: 35, scope: !2199)
!2209 = !DILocation(line: 149, column: 2, scope: !2199)
!2210 = distinct !{!2210, !2201, !2211}
!2211 = !DILocation(line: 151, column: 13, scope: !2200)
!2212 = !DILocation(line: 140, column: 3, scope: !2152)
!2213 = distinct !{!2213, !2189, !2214}
!2214 = !DILocation(line: 152, column: 7, scope: !2153)
!2215 = !DILocation(line: 155, column: 1, scope: !2139)
!2216 = distinct !DISubprogram(name: "rtx_varies_p", scope: !3, file: !3, line: 165, type: !2217, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2219)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!578, !1673, !578}
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225}
!2220 = !DILocalVariable(name: "x", arg: 1, scope: !2216, file: !3, line: 165, type: !1673)
!2221 = !DILocalVariable(name: "for_alias", arg: 2, scope: !2216, file: !3, line: 165, type: !578)
!2222 = !DILocalVariable(name: "code", scope: !2216, file: !3, line: 167, type: !377)
!2223 = !DILocalVariable(name: "i", scope: !2216, file: !3, line: 168, type: !579)
!2224 = !DILocalVariable(name: "fmt", scope: !2216, file: !3, line: 169, type: !584)
!2225 = !DILocalVariable(name: "j", scope: !2226, file: !3, line: 236, type: !579)
!2226 = distinct !DILexicalBlock(scope: !2227, file: !3, line: 235, column: 7)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 234, column: 14)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 229, column: 9)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 228, column: 3)
!2230 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 228, column: 3)
!2231 = !DILocation(line: 0, scope: !2216)
!2232 = !DILocation(line: 171, column: 8, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 171, column: 7)
!2234 = !DILocation(line: 171, column: 7, scope: !2216)
!2235 = !DILocation(line: 174, column: 10, scope: !2216)
!2236 = !DILocation(line: 175, column: 3, scope: !2216)
!2237 = !DILocation(line: 178, column: 15, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 176, column: 5)
!2239 = !DILocation(line: 178, column: 34, scope: !2238)
!2240 = !DILocation(line: 178, column: 51, scope: !2238)
!2241 = !DILocation(line: 178, column: 37, scope: !2238)
!2242 = !DILocation(line: 178, column: 7, scope: !2238)
!2243 = !DILocation(line: 194, column: 16, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 194, column: 11)
!2245 = !DILocation(line: 194, column: 13, scope: !2244)
!2246 = !DILocation(line: 194, column: 42, scope: !2244)
!2247 = !DILocation(line: 194, column: 39, scope: !2244)
!2248 = !DILocation(line: 194, column: 34, scope: !2244)
!2249 = !DILocation(line: 196, column: 13, scope: !2244)
!2250 = !DILocation(line: 196, column: 10, scope: !2244)
!2251 = !DILocation(line: 196, column: 29, scope: !2244)
!2252 = !DILocation(line: 196, column: 32, scope: !2244)
!2253 = !DILocation(line: 194, column: 11, scope: !2238)
!2254 = !DILocation(line: 198, column: 16, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 198, column: 11)
!2256 = !DILocation(line: 198, column: 13, scope: !2255)
!2257 = !DILocation(line: 0, scope: !2238)
!2258 = !DILocation(line: 214, column: 17, scope: !2238)
!2259 = !DILocation(line: 214, column: 27, scope: !2238)
!2260 = !DILocation(line: 214, column: 44, scope: !2238)
!2261 = !DILocation(line: 214, column: 30, scope: !2238)
!2262 = !DILocation(line: 215, column: 7, scope: !2238)
!2263 = !DILocation(line: 215, column: 24, scope: !2238)
!2264 = !DILocation(line: 215, column: 10, scope: !2238)
!2265 = !DILocation(line: 214, column: 7, scope: !2238)
!2266 = !DILocation(line: 218, column: 11, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 218, column: 11)
!2268 = !DILocation(line: 218, column: 11, scope: !2238)
!2269 = !DILocation(line: 227, column: 9, scope: !2216)
!2270 = !DILocation(line: 228, column: 12, scope: !2230)
!2271 = !DILocation(line: 231, column: 20, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 231, column: 6)
!2273 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 230, column: 7)
!2274 = !DILocation(line: 228, column: 8, scope: !2230)
!2275 = !DILocation(line: 0, scope: !2230)
!2276 = !DILocation(line: 228, column: 41, scope: !2229)
!2277 = !DILocation(line: 228, column: 3, scope: !2230)
!2278 = !DILocation(line: 229, column: 9, scope: !2228)
!2279 = !DILocation(line: 229, column: 16, scope: !2228)
!2280 = !DILocation(line: 229, column: 9, scope: !2229)
!2281 = !DILocation(line: 231, column: 6, scope: !2272)
!2282 = !DILocation(line: 231, column: 6, scope: !2273)
!2283 = !DILocation(line: 234, column: 21, scope: !2227)
!2284 = !DILocation(line: 234, column: 14, scope: !2228)
!2285 = !DILocation(line: 238, column: 22, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 238, column: 8)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !3, line: 237, column: 2)
!2288 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 237, column: 2)
!2289 = !DILocation(line: 237, column: 2, scope: !2288)
!2290 = !DILocation(line: 0, scope: !2288)
!2291 = !DILocation(line: 0, scope: !2226)
!2292 = !DILocation(line: 237, column: 18, scope: !2287)
!2293 = !DILocation(line: 237, column: 16, scope: !2287)
!2294 = !DILocation(line: 238, column: 8, scope: !2286)
!2295 = !DILocation(line: 238, column: 8, scope: !2287)
!2296 = !DILocation(line: 237, column: 35, scope: !2287)
!2297 = !DILocation(line: 237, column: 2, scope: !2287)
!2298 = distinct !{!2298, !2289, !2299}
!2299 = !DILocation(line: 239, column: 13, scope: !2288)
!2300 = !DILocation(line: 228, column: 3, scope: !2229)
!2301 = distinct !{!2301, !2277, !2302}
!2302 = !DILocation(line: 240, column: 7, scope: !2230)
!2303 = !DILocation(line: 243, column: 1, scope: !2216)
!2304 = distinct !DISubprogram(name: "rtx_addr_can_trap_p", scope: !3, file: !3, line: 375, type: !2140, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2305 = !{!2306}
!2306 = !DILocalVariable(name: "x", arg: 1, scope: !2304, file: !3, line: 375, type: !1673)
!2307 = !DILocation(line: 0, scope: !2304)
!2308 = !DILocation(line: 377, column: 10, scope: !2304)
!2309 = !DILocation(line: 377, column: 3, scope: !2304)
!2310 = distinct !DISubprogram(name: "rtx_addr_can_trap_p_1", scope: !3, file: !3, line: 251, type: !2311, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2313)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!579, !1673, !674, !674, !5, !578}
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2324}
!2314 = !DILocalVariable(name: "x", arg: 1, scope: !2310, file: !3, line: 251, type: !1673)
!2315 = !DILocalVariable(name: "offset", arg: 2, scope: !2310, file: !3, line: 251, type: !674)
!2316 = !DILocalVariable(name: "size", arg: 3, scope: !2310, file: !3, line: 251, type: !674)
!2317 = !DILocalVariable(name: "mode", arg: 4, scope: !2310, file: !3, line: 252, type: !5)
!2318 = !DILocalVariable(name: "unaligned_mems", arg: 5, scope: !2310, file: !3, line: 252, type: !578)
!2319 = !DILocalVariable(name: "code", scope: !2310, file: !3, line: 254, type: !377)
!2320 = !DILocalVariable(name: "decl", scope: !2321, file: !3, line: 281, type: !703)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 280, column: 2)
!2322 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 279, column: 11)
!2323 = distinct !DILexicalBlock(scope: !2310, file: !3, line: 275, column: 5)
!2324 = !DILocalVariable(name: "decl_size", scope: !2321, file: !3, line: 282, type: !674)
!2325 = !DILocation(line: 332, column: 14, scope: !2323)
!2326 = !DILocation(line: 0, scope: !2310)
!2327 = !DILocation(line: 254, column: 24, scope: !2310)
!2328 = !DILocation(line: 274, column: 3, scope: !2310)
!2329 = !DILocation(line: 277, column: 11, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 277, column: 11)
!2331 = !DILocation(line: 277, column: 11, scope: !2323)
!2332 = !DILocation(line: 279, column: 12, scope: !2322)
!2333 = !DILocation(line: 279, column: 11, scope: !2323)
!2334 = !DILocation(line: 284, column: 15, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 284, column: 8)
!2336 = !DILocation(line: 284, column: 8, scope: !2321)
!2337 = !DILocation(line: 286, column: 13, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 286, column: 8)
!2339 = !DILocation(line: 286, column: 8, scope: !2321)
!2340 = !DILocation(line: 287, column: 13, scope: !2338)
!2341 = !DILocation(line: 287, column: 6, scope: !2338)
!2342 = !DILocation(line: 288, column: 13, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 288, column: 8)
!2344 = !DILocation(line: 288, column: 8, scope: !2321)
!2345 = !DILocation(line: 289, column: 20, scope: !2343)
!2346 = !DILocation(line: 289, column: 6, scope: !2343)
!2347 = !DILocation(line: 293, column: 11, scope: !2321)
!2348 = !DILocation(line: 0, scope: !2321)
!2349 = !DILocation(line: 297, column: 9, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 297, column: 8)
!2351 = !DILocation(line: 297, column: 8, scope: !2321)
!2352 = !DILocation(line: 299, column: 13, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 299, column: 13)
!2354 = !DILocation(line: 299, column: 27, scope: !2353)
!2355 = !DILocation(line: 299, column: 30, scope: !2353)
!2356 = !DILocation(line: 299, column: 13, scope: !2350)
!2357 = !DILocation(line: 300, column: 19, scope: !2353)
!2358 = !DILocation(line: 301, column: 21, scope: !2353)
!2359 = !DILocation(line: 301, column: 7, scope: !2353)
!2360 = !DILocation(line: 303, column: 30, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 303, column: 13)
!2362 = !DILocation(line: 303, column: 13, scope: !2353)
!2363 = !DILocation(line: 304, column: 18, scope: !2361)
!2364 = !DILocation(line: 304, column: 6, scope: !2361)
!2365 = !DILocation(line: 305, column: 13, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2361, file: !3, line: 305, column: 13)
!2367 = !DILocation(line: 305, column: 13, scope: !2361)
!2368 = !DILocation(line: 306, column: 18, scope: !2366)
!2369 = !DILocation(line: 306, column: 6, scope: !2366)
!2370 = !DILocation(line: 0, scope: !2350)
!2371 = !DILocation(line: 310, column: 22, scope: !2321)
!2372 = !DILocation(line: 310, column: 12, scope: !2321)
!2373 = !DILocation(line: 310, column: 36, scope: !2321)
!2374 = !DILocation(line: 310, column: 50, scope: !2321)
!2375 = !DILocation(line: 310, column: 57, scope: !2321)
!2376 = !DILocation(line: 320, column: 16, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 320, column: 11)
!2378 = !DILocation(line: 320, column: 13, scope: !2377)
!2379 = !DILocation(line: 320, column: 42, scope: !2377)
!2380 = !DILocation(line: 320, column: 39, scope: !2377)
!2381 = !DILocation(line: 320, column: 34, scope: !2377)
!2382 = !DILocation(line: 321, column: 12, scope: !2377)
!2383 = !DILocation(line: 321, column: 9, scope: !2377)
!2384 = !DILocation(line: 323, column: 13, scope: !2377)
!2385 = !DILocation(line: 323, column: 10, scope: !2377)
!2386 = !DILocation(line: 323, column: 29, scope: !2377)
!2387 = !DILocation(line: 323, column: 32, scope: !2377)
!2388 = !DILocation(line: 320, column: 11, scope: !2323)
!2389 = !DILocation(line: 326, column: 11, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 326, column: 11)
!2391 = !DILocation(line: 326, column: 21, scope: !2390)
!2392 = !DILocation(line: 327, column: 4, scope: !2390)
!2393 = !DILocation(line: 327, column: 7, scope: !2390)
!2394 = !DILocation(line: 327, column: 17, scope: !2390)
!2395 = !DILocation(line: 326, column: 11, scope: !2323)
!2396 = !DILocation(line: 329, column: 7, scope: !2323)
!2397 = !DILocation(line: 332, column: 37, scope: !2323)
!2398 = !DILocation(line: 0, scope: !2323)
!2399 = !DILocation(line: 338, column: 11, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 338, column: 11)
!2401 = !DILocation(line: 338, column: 26, scope: !2400)
!2402 = !DILocation(line: 338, column: 23, scope: !2400)
!2403 = !DILocation(line: 338, column: 47, scope: !2400)
!2404 = !DILocation(line: 0, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 344, column: 11)
!2406 = !DILocation(line: 344, column: 11, scope: !2405)
!2407 = !DILocation(line: 338, column: 50, scope: !2400)
!2408 = !DILocation(line: 338, column: 11, scope: !2323)
!2409 = !DILocation(line: 345, column: 4, scope: !2405)
!2410 = !DILocation(line: 345, column: 53, scope: !2405)
!2411 = !DILocation(line: 345, column: 51, scope: !2405)
!2412 = !DILocation(line: 345, column: 8, scope: !2405)
!2413 = !DILocation(line: 344, column: 11, scope: !2323)
!2414 = !DILocation(line: 349, column: 7, scope: !2323)
!2415 = !DILocation(line: 353, column: 37, scope: !2323)
!2416 = !DILocation(line: 353, column: 14, scope: !2323)
!2417 = !DILocation(line: 361, column: 37, scope: !2323)
!2418 = !DILocation(line: 361, column: 14, scope: !2323)
!2419 = !DILocation(line: 369, column: 3, scope: !2310)
!2420 = !DILocation(line: 370, column: 1, scope: !2310)
!2421 = distinct !DISubprogram(name: "nonzero_address_p", scope: !3, file: !3, line: 383, type: !2422, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2424)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!578, !1673}
!2424 = !{!2425, !2426}
!2425 = !DILocalVariable(name: "x", arg: 1, scope: !2421, file: !3, line: 383, type: !1673)
!2426 = !DILocalVariable(name: "code", scope: !2421, file: !3, line: 385, type: !2145)
!2427 = !DILocation(line: 408, column: 14, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 388, column: 5)
!2429 = !DILocation(line: 0, scope: !2421)
!2430 = !DILocation(line: 385, column: 30, scope: !2421)
!2431 = !DILocation(line: 387, column: 3, scope: !2421)
!2432 = !DILocation(line: 390, column: 14, scope: !2428)
!2433 = !DILocation(line: 390, column: 7, scope: !2428)
!2434 = !DILocation(line: 397, column: 16, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 397, column: 11)
!2436 = !DILocation(line: 397, column: 13, scope: !2435)
!2437 = !DILocation(line: 397, column: 42, scope: !2435)
!2438 = !DILocation(line: 397, column: 39, scope: !2435)
!2439 = !DILocation(line: 397, column: 34, scope: !2435)
!2440 = !DILocation(line: 398, column: 12, scope: !2435)
!2441 = !DILocation(line: 398, column: 9, scope: !2435)
!2442 = !DILocation(line: 399, column: 13, scope: !2435)
!2443 = !DILocation(line: 399, column: 10, scope: !2435)
!2444 = !DILocation(line: 399, column: 29, scope: !2435)
!2445 = !DILocation(line: 399, column: 32, scope: !2435)
!2446 = !DILocation(line: 397, column: 11, scope: !2428)
!2447 = !DILocation(line: 402, column: 11, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 402, column: 11)
!2449 = !DILocation(line: 402, column: 21, scope: !2448)
!2450 = !DILocation(line: 403, column: 4, scope: !2448)
!2451 = !DILocation(line: 403, column: 7, scope: !2448)
!2452 = !DILocation(line: 403, column: 17, scope: !2448)
!2453 = !DILocation(line: 402, column: 11, scope: !2428)
!2454 = !DILocation(line: 405, column: 7, scope: !2428)
!2455 = !DILocation(line: 408, column: 33, scope: !2428)
!2456 = !DILocation(line: 411, column: 11, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 411, column: 11)
!2458 = !DILocation(line: 0, scope: !2457)
!2459 = !DILocation(line: 411, column: 11, scope: !2428)
!2460 = !DILocation(line: 412, column: 16, scope: !2457)
!2461 = !DILocation(line: 414, column: 31, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 414, column: 16)
!2463 = !DILocation(line: 414, column: 28, scope: !2462)
!2464 = !DILocation(line: 415, column: 9, scope: !2462)
!2465 = !DILocation(line: 415, column: 12, scope: !2462)
!2466 = !DILocation(line: 414, column: 16, scope: !2457)
!2467 = !DILocation(line: 417, column: 7, scope: !2428)
!2468 = !DILocation(line: 423, column: 11, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 423, column: 11)
!2470 = !DILocation(line: 424, column: 4, scope: !2469)
!2471 = !DILocation(line: 424, column: 7, scope: !2469)
!2472 = !DILocation(line: 424, column: 28, scope: !2469)
!2473 = !DILocation(line: 423, column: 11, scope: !2428)
!2474 = !DILocation(line: 426, column: 33, scope: !2428)
!2475 = !DILocation(line: 426, column: 14, scope: !2428)
!2476 = !DILocation(line: 436, column: 33, scope: !2428)
!2477 = !DILocation(line: 436, column: 14, scope: !2428)
!2478 = !DILocation(line: 439, column: 33, scope: !2428)
!2479 = !DILocation(line: 439, column: 14, scope: !2428)
!2480 = !DILocation(line: 446, column: 3, scope: !2421)
!2481 = !DILocation(line: 447, column: 1, scope: !2421)
!2482 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !2483, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2485)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!7, !1673}
!2485 = !{!2486}
!2486 = !DILocalVariable(name: "x", arg: 1, scope: !2482, file: !378, line: 1051, type: !1673)
!2487 = !DILocation(line: 0, scope: !2482)
!2488 = !DILocation(line: 1053, column: 10, scope: !2482)
!2489 = !DILocation(line: 1053, column: 3, scope: !2482)
!2490 = distinct !DISubprogram(name: "rtx_addr_varies_p", scope: !3, file: !3, line: 456, type: !2217, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497}
!2492 = !DILocalVariable(name: "x", arg: 1, scope: !2490, file: !3, line: 456, type: !1673)
!2493 = !DILocalVariable(name: "for_alias", arg: 2, scope: !2490, file: !3, line: 456, type: !578)
!2494 = !DILocalVariable(name: "code", scope: !2490, file: !3, line: 458, type: !377)
!2495 = !DILocalVariable(name: "i", scope: !2490, file: !3, line: 459, type: !579)
!2496 = !DILocalVariable(name: "fmt", scope: !2490, file: !3, line: 460, type: !584)
!2497 = !DILocalVariable(name: "j", scope: !2498, file: !3, line: 478, type: !579)
!2498 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 477, column: 7)
!2499 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 476, column: 14)
!2500 = distinct !DILexicalBlock(scope: !2501, file: !3, line: 471, column: 9)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 470, column: 3)
!2502 = distinct !DILexicalBlock(scope: !2490, file: !3, line: 470, column: 3)
!2503 = !DILocation(line: 0, scope: !2490)
!2504 = !DILocation(line: 462, column: 9, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2490, file: !3, line: 462, column: 7)
!2506 = !DILocation(line: 462, column: 7, scope: !2490)
!2507 = !DILocation(line: 465, column: 10, scope: !2490)
!2508 = !DILocation(line: 466, column: 12, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2490, file: !3, line: 466, column: 7)
!2510 = !DILocation(line: 466, column: 7, scope: !2490)
!2511 = !DILocation(line: 467, column: 12, scope: !2509)
!2512 = !DILocation(line: 467, column: 25, scope: !2509)
!2513 = !DILocation(line: 467, column: 36, scope: !2509)
!2514 = !DILocation(line: 467, column: 53, scope: !2509)
!2515 = !DILocation(line: 467, column: 39, scope: !2509)
!2516 = !DILocation(line: 467, column: 5, scope: !2509)
!2517 = !DILocation(line: 469, column: 9, scope: !2490)
!2518 = !DILocation(line: 470, column: 12, scope: !2502)
!2519 = !DILocation(line: 473, column: 25, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 473, column: 6)
!2521 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 472, column: 7)
!2522 = !DILocation(line: 470, column: 8, scope: !2502)
!2523 = !DILocation(line: 0, scope: !2502)
!2524 = !DILocation(line: 470, column: 41, scope: !2501)
!2525 = !DILocation(line: 470, column: 3, scope: !2502)
!2526 = !DILocation(line: 471, column: 9, scope: !2500)
!2527 = !DILocation(line: 471, column: 16, scope: !2500)
!2528 = !DILocation(line: 471, column: 9, scope: !2501)
!2529 = !DILocation(line: 473, column: 6, scope: !2520)
!2530 = !DILocation(line: 473, column: 6, scope: !2521)
!2531 = !DILocation(line: 476, column: 21, scope: !2499)
!2532 = !DILocation(line: 476, column: 14, scope: !2500)
!2533 = !DILocation(line: 480, column: 27, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 480, column: 8)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 479, column: 2)
!2536 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 479, column: 2)
!2537 = !DILocation(line: 479, column: 2, scope: !2536)
!2538 = !DILocation(line: 0, scope: !2536)
!2539 = !DILocation(line: 0, scope: !2498)
!2540 = !DILocation(line: 479, column: 18, scope: !2535)
!2541 = !DILocation(line: 479, column: 16, scope: !2535)
!2542 = !DILocation(line: 480, column: 8, scope: !2534)
!2543 = !DILocation(line: 480, column: 8, scope: !2535)
!2544 = !DILocation(line: 479, column: 35, scope: !2535)
!2545 = !DILocation(line: 479, column: 2, scope: !2535)
!2546 = distinct !{!2546, !2537, !2547}
!2547 = !DILocation(line: 481, column: 13, scope: !2536)
!2548 = !DILocation(line: 470, column: 3, scope: !2501)
!2549 = distinct !{!2549, !2525, !2550}
!2550 = !DILocation(line: 482, column: 7, scope: !2502)
!2551 = !DILocation(line: 484, column: 1, scope: !2490)
!2552 = distinct !DISubprogram(name: "get_integer_term", scope: !3, file: !3, line: 492, type: !2553, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2555)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!674, !1673}
!2555 = !{!2556}
!2556 = !DILocalVariable(name: "x", arg: 1, scope: !2552, file: !3, line: 492, type: !1673)
!2557 = !DILocation(line: 0, scope: !2552)
!2558 = !DILocation(line: 494, column: 7, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 494, column: 7)
!2560 = !DILocation(line: 494, column: 20, scope: !2559)
!2561 = !DILocation(line: 494, column: 7, scope: !2552)
!2562 = !DILocation(line: 495, column: 9, scope: !2559)
!2563 = !DILocation(line: 0, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 497, column: 7)
!2565 = !DILocation(line: 497, column: 7, scope: !2564)
!2566 = !DILocation(line: 495, column: 5, scope: !2559)
!2567 = !DILocation(line: 497, column: 20, scope: !2564)
!2568 = !DILocation(line: 498, column: 7, scope: !2564)
!2569 = !DILocation(line: 498, column: 10, scope: !2564)
!2570 = !DILocation(line: 497, column: 7, scope: !2552)
!2571 = !DILocation(line: 499, column: 14, scope: !2564)
!2572 = !DILocation(line: 499, column: 12, scope: !2564)
!2573 = !DILocation(line: 499, column: 5, scope: !2564)
!2574 = !DILocation(line: 500, column: 20, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 500, column: 7)
!2576 = !DILocation(line: 501, column: 7, scope: !2575)
!2577 = !DILocation(line: 501, column: 10, scope: !2575)
!2578 = !DILocation(line: 500, column: 7, scope: !2552)
!2579 = !DILocation(line: 502, column: 12, scope: !2575)
!2580 = !DILocation(line: 502, column: 5, scope: !2575)
!2581 = !DILocation(line: 504, column: 1, scope: !2552)
!2582 = distinct !DISubprogram(name: "get_related_value", scope: !3, file: !3, line: 511, type: !2583, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2585)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!588, !1673}
!2585 = !{!2586}
!2586 = !DILocalVariable(name: "x", arg: 1, scope: !2582, file: !3, line: 511, type: !1673)
!2587 = !DILocation(line: 0, scope: !2582)
!2588 = !DILocation(line: 513, column: 7, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 513, column: 7)
!2590 = !DILocation(line: 513, column: 20, scope: !2589)
!2591 = !DILocation(line: 513, column: 7, scope: !2582)
!2592 = !DILocation(line: 515, column: 7, scope: !2582)
!2593 = !DILocation(line: 516, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 516, column: 7)
!2595 = !DILocation(line: 516, column: 20, scope: !2594)
!2596 = !DILocation(line: 517, column: 7, scope: !2594)
!2597 = !DILocation(line: 517, column: 10, scope: !2594)
!2598 = !DILocation(line: 516, column: 7, scope: !2582)
!2599 = !DILocation(line: 518, column: 12, scope: !2594)
!2600 = !DILocation(line: 518, column: 5, scope: !2594)
!2601 = !DILocation(line: 519, column: 25, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 519, column: 12)
!2603 = !DILocation(line: 520, column: 5, scope: !2602)
!2604 = !DILocation(line: 520, column: 8, scope: !2602)
!2605 = !DILocation(line: 519, column: 12, scope: !2594)
!2606 = !DILocation(line: 521, column: 12, scope: !2602)
!2607 = !DILocation(line: 521, column: 5, scope: !2602)
!2608 = !DILocation(line: 523, column: 1, scope: !2582)
!2609 = distinct !DISubprogram(name: "offset_within_block_p", scope: !3, file: !3, line: 529, type: !2610, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2612)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!578, !1673, !674}
!2612 = !{!2613, !2614, !2615}
!2613 = !DILocalVariable(name: "symbol", arg: 1, scope: !2609, file: !3, line: 529, type: !1673)
!2614 = !DILocalVariable(name: "offset", arg: 2, scope: !2609, file: !3, line: 529, type: !674)
!2615 = !DILocalVariable(name: "decl", scope: !2609, file: !3, line: 531, type: !703)
!2616 = !DILocation(line: 0, scope: !2609)
!2617 = !DILocation(line: 533, column: 7, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 533, column: 7)
!2619 = !DILocation(line: 533, column: 25, scope: !2618)
!2620 = !DILocation(line: 533, column: 7, scope: !2609)
!2621 = !DILocation(line: 536, column: 14, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 536, column: 7)
!2623 = !DILocation(line: 536, column: 7, scope: !2609)
!2624 = !DILocation(line: 539, column: 14, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 539, column: 7)
!2626 = !DILocation(line: 539, column: 7, scope: !2609)
!2627 = !DILocation(line: 541, column: 11, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 541, column: 11)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 540, column: 5)
!2630 = !DILocation(line: 542, column: 4, scope: !2628)
!2631 = !DILocation(line: 542, column: 22, scope: !2628)
!2632 = !DILocation(line: 542, column: 16, scope: !2628)
!2633 = !DILocation(line: 542, column: 14, scope: !2628)
!2634 = !DILocation(line: 541, column: 11, scope: !2629)
!2635 = !DILocation(line: 545, column: 14, scope: !2629)
!2636 = !DILocation(line: 546, column: 11, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 546, column: 11)
!2638 = !DILocation(line: 546, column: 16, scope: !2637)
!2639 = !DILocation(line: 546, column: 47, scope: !2637)
!2640 = !DILocation(line: 546, column: 28, scope: !2637)
!2641 = !DILocation(line: 546, column: 26, scope: !2637)
!2642 = !DILocation(line: 546, column: 11, scope: !2629)
!2643 = !DILocation(line: 550, column: 7, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 550, column: 7)
!2645 = !DILocation(line: 551, column: 7, scope: !2644)
!2646 = !DILocation(line: 551, column: 10, scope: !2644)
!2647 = !DILocation(line: 552, column: 7, scope: !2644)
!2648 = !DILocation(line: 552, column: 10, scope: !2644)
!2649 = !DILocation(line: 552, column: 43, scope: !2644)
!2650 = !DILocation(line: 553, column: 7, scope: !2644)
!2651 = !DILocation(line: 553, column: 43, scope: !2644)
!2652 = !DILocation(line: 554, column: 58, scope: !2644)
!2653 = !DILocation(line: 554, column: 4, scope: !2644)
!2654 = !DILocation(line: 550, column: 7, scope: !2609)
!2655 = !DILocation(line: 557, column: 3, scope: !2609)
!2656 = !DILocation(line: 558, column: 1, scope: !2609)
!2657 = distinct !DISubprogram(name: "split_const", scope: !3, file: !3, line: 564, type: !2658, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2660)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null, !588, !1657, !1657}
!2660 = !{!2661, !2662, !2663}
!2661 = !DILocalVariable(name: "x", arg: 1, scope: !2657, file: !3, line: 564, type: !588)
!2662 = !DILocalVariable(name: "base_out", arg: 2, scope: !2657, file: !3, line: 564, type: !1657)
!2663 = !DILocalVariable(name: "offset_out", arg: 3, scope: !2657, file: !3, line: 564, type: !1657)
!2664 = !DILocation(line: 0, scope: !2657)
!2665 = !DILocation(line: 566, column: 7, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 566, column: 7)
!2667 = !DILocation(line: 566, column: 20, scope: !2666)
!2668 = !DILocation(line: 566, column: 7, scope: !2657)
!2669 = !DILocation(line: 568, column: 11, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 567, column: 5)
!2671 = !DILocation(line: 569, column: 11, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 569, column: 11)
!2673 = !DILocation(line: 569, column: 24, scope: !2672)
!2674 = !DILocation(line: 569, column: 32, scope: !2672)
!2675 = !DILocation(line: 569, column: 35, scope: !2672)
!2676 = !DILocation(line: 569, column: 11, scope: !2670)
!2677 = !DILocation(line: 571, column: 16, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2672, file: !3, line: 570, column: 2)
!2679 = !DILocation(line: 571, column: 14, scope: !2678)
!2680 = !DILocation(line: 572, column: 18, scope: !2678)
!2681 = !DILocation(line: 572, column: 16, scope: !2678)
!2682 = !DILocation(line: 573, column: 4, scope: !2678)
!2683 = !DILocation(line: 576, column: 13, scope: !2657)
!2684 = !DILocation(line: 577, column: 17, scope: !2657)
!2685 = !DILocation(line: 577, column: 15, scope: !2657)
!2686 = !DILocation(line: 578, column: 1, scope: !2657)
!2687 = distinct !DISubprogram(name: "count_occurrences", scope: !3, file: !3, line: 584, type: !2688, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2690)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!579, !1673, !1673, !579}
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2691 = !DILocalVariable(name: "x", arg: 1, scope: !2687, file: !3, line: 584, type: !1673)
!2692 = !DILocalVariable(name: "find", arg: 2, scope: !2687, file: !3, line: 584, type: !1673)
!2693 = !DILocalVariable(name: "count_dest", arg: 3, scope: !2687, file: !3, line: 584, type: !579)
!2694 = !DILocalVariable(name: "i", scope: !2687, file: !3, line: 586, type: !579)
!2695 = !DILocalVariable(name: "j", scope: !2687, file: !3, line: 586, type: !579)
!2696 = !DILocalVariable(name: "code", scope: !2687, file: !3, line: 587, type: !377)
!2697 = !DILocalVariable(name: "format_ptr", scope: !2687, file: !3, line: 588, type: !584)
!2698 = !DILocalVariable(name: "count", scope: !2687, file: !3, line: 589, type: !579)
!2699 = !DILocation(line: 0, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 621, column: 11)
!2701 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 597, column: 5)
!2702 = !DILocation(line: 622, column: 9, scope: !2700)
!2703 = !DILocation(line: 0, scope: !2687)
!2704 = !DILocation(line: 591, column: 9, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 591, column: 7)
!2706 = !DILocation(line: 591, column: 7, scope: !2687)
!2707 = !DILocation(line: 594, column: 10, scope: !2687)
!2708 = !DILocation(line: 596, column: 3, scope: !2687)
!2709 = !DILocation(line: 621, column: 32, scope: !2700)
!2710 = !DILocation(line: 647, column: 1, scope: !2687)
!2711 = !DILocation(line: 610, column: 34, scope: !2701)
!2712 = !DILocation(line: 610, column: 15, scope: !2701)
!2713 = !DILocation(line: 611, column: 11, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 611, column: 11)
!2715 = !DILocation(line: 611, column: 11, scope: !2701)
!2716 = !DILocation(line: 612, column: 11, scope: !2714)
!2717 = !DILocation(line: 612, column: 8, scope: !2714)
!2718 = !DILocation(line: 616, column: 11, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 616, column: 11)
!2720 = !DILocation(line: 616, column: 24, scope: !2719)
!2721 = !DILocation(line: 616, column: 27, scope: !2719)
!2722 = !DILocation(line: 616, column: 11, scope: !2701)
!2723 = !DILocation(line: 621, column: 11, scope: !2700)
!2724 = !DILocation(line: 621, column: 24, scope: !2700)
!2725 = !DILocation(line: 622, column: 28, scope: !2700)
!2726 = !DILocation(line: 629, column: 16, scope: !2687)
!2727 = !DILocation(line: 0, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 632, column: 3)
!2729 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 632, column: 3)
!2730 = !DILocation(line: 0, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 641, column: 4)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 641, column: 4)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 635, column: 2)
!2734 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 633, column: 5)
!2735 = !DILocation(line: 632, column: 17, scope: !2728)
!2736 = !DILocation(line: 632, column: 8, scope: !2729)
!2737 = !DILocation(line: 0, scope: !2729)
!2738 = !DILocation(line: 630, column: 9, scope: !2687)
!2739 = !DILocation(line: 632, column: 3, scope: !2729)
!2740 = !DILocation(line: 634, column: 26, scope: !2734)
!2741 = !DILocation(line: 634, column: 15, scope: !2734)
!2742 = !DILocation(line: 634, column: 7, scope: !2734)
!2743 = !DILocation(line: 641, column: 4, scope: !2732)
!2744 = !DILocation(line: 637, column: 32, scope: !2733)
!2745 = !DILocation(line: 637, column: 13, scope: !2733)
!2746 = !DILocation(line: 637, column: 10, scope: !2733)
!2747 = !DILocation(line: 638, column: 4, scope: !2733)
!2748 = !DILocation(line: 0, scope: !2732)
!2749 = !DILocation(line: 641, column: 20, scope: !2731)
!2750 = !DILocation(line: 641, column: 18, scope: !2731)
!2751 = !DILocation(line: 642, column: 34, scope: !2731)
!2752 = !DILocation(line: 642, column: 15, scope: !2731)
!2753 = !DILocation(line: 642, column: 12, scope: !2731)
!2754 = !DILocation(line: 641, column: 37, scope: !2731)
!2755 = !DILocation(line: 641, column: 4, scope: !2731)
!2756 = distinct !{!2756, !2743, !2757}
!2757 = !DILocation(line: 642, column: 69, scope: !2732)
!2758 = !DILocation(line: 632, column: 43, scope: !2728)
!2759 = !DILocation(line: 632, column: 3, scope: !2728)
!2760 = distinct !{!2760, !2739, !2761}
!2761 = !DILocation(line: 645, column: 5, scope: !2729)
!2762 = distinct !DISubprogram(name: "reg_mentioned_p", scope: !3, file: !3, line: 655, type: !2763, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2765)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!579, !1673, !1673}
!2765 = !{!2766, !2767, !2768, !2769, !2770, !2771}
!2766 = !DILocalVariable(name: "reg", arg: 1, scope: !2762, file: !3, line: 655, type: !1673)
!2767 = !DILocalVariable(name: "in", arg: 2, scope: !2762, file: !3, line: 655, type: !1673)
!2768 = !DILocalVariable(name: "fmt", scope: !2762, file: !3, line: 657, type: !584)
!2769 = !DILocalVariable(name: "i", scope: !2762, file: !3, line: 658, type: !579)
!2770 = !DILocalVariable(name: "code", scope: !2762, file: !3, line: 659, type: !377)
!2771 = !DILocalVariable(name: "j", scope: !2772, file: !3, line: 705, type: !579)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 704, column: 2)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 703, column: 11)
!2774 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 702, column: 5)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 701, column: 3)
!2776 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 701, column: 3)
!2777 = !DILocation(line: 0, scope: !2762)
!2778 = !DILocation(line: 661, column: 10, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 661, column: 7)
!2780 = !DILocation(line: 661, column: 7, scope: !2762)
!2781 = !DILocation(line: 664, column: 11, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 664, column: 7)
!2783 = !DILocation(line: 664, column: 7, scope: !2762)
!2784 = !DILocation(line: 667, column: 7, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 667, column: 7)
!2786 = !DILocation(line: 667, column: 21, scope: !2785)
!2787 = !DILocation(line: 667, column: 7, scope: !2762)
!2788 = !DILocation(line: 668, column: 19, scope: !2785)
!2789 = !DILocation(line: 668, column: 16, scope: !2785)
!2790 = !DILocation(line: 668, column: 5, scope: !2785)
!2791 = !DILocation(line: 672, column: 3, scope: !2762)
!2792 = !DILocation(line: 676, column: 14, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 673, column: 5)
!2794 = !DILocation(line: 676, column: 26, scope: !2793)
!2795 = !DILocation(line: 676, column: 29, scope: !2793)
!2796 = !DILocation(line: 676, column: 43, scope: !2793)
!2797 = !DILocation(line: 676, column: 40, scope: !2793)
!2798 = !DILocation(line: 676, column: 7, scope: !2793)
!2799 = !DILocation(line: 696, column: 7, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 696, column: 7)
!2801 = !DILocation(line: 696, column: 22, scope: !2800)
!2802 = !DILocation(line: 696, column: 30, scope: !2800)
!2803 = !DILocation(line: 696, column: 33, scope: !2800)
!2804 = !DILocation(line: 696, column: 7, scope: !2762)
!2805 = !DILocation(line: 699, column: 9, scope: !2762)
!2806 = !DILocation(line: 701, column: 12, scope: !2776)
!2807 = !DILocation(line: 711, column: 34, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 710, column: 16)
!2809 = !DILocation(line: 701, column: 8, scope: !2776)
!2810 = !DILocation(line: 0, scope: !2776)
!2811 = !DILocation(line: 701, column: 41, scope: !2775)
!2812 = !DILocation(line: 701, column: 3, scope: !2776)
!2813 = !DILocation(line: 703, column: 11, scope: !2773)
!2814 = !DILocation(line: 703, column: 18, scope: !2773)
!2815 = !DILocation(line: 703, column: 11, scope: !2774)
!2816 = !DILocation(line: 706, column: 13, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 706, column: 4)
!2818 = !DILocation(line: 0, scope: !2772)
!2819 = !DILocation(line: 706, column: 9, scope: !2817)
!2820 = !DILocation(line: 0, scope: !2817)
!2821 = !DILocation(line: 706, column: 36, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2817, file: !3, line: 706, column: 4)
!2823 = !DILocation(line: 706, column: 4, scope: !2817)
!2824 = !DILocation(line: 707, column: 32, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 707, column: 10)
!2826 = !DILocation(line: 707, column: 10, scope: !2825)
!2827 = !DILocation(line: 707, column: 10, scope: !2822)
!2828 = !DILocation(line: 706, column: 4, scope: !2822)
!2829 = distinct !{!2829, !2823, !2830}
!2830 = !DILocation(line: 708, column: 15, scope: !2817)
!2831 = !DILocation(line: 710, column: 23, scope: !2808)
!2832 = !DILocation(line: 711, column: 9, scope: !2808)
!2833 = !DILocation(line: 711, column: 12, scope: !2808)
!2834 = !DILocation(line: 710, column: 16, scope: !2773)
!2835 = !DILocation(line: 701, column: 3, scope: !2775)
!2836 = distinct !{!2836, !2812, !2837}
!2837 = !DILocation(line: 713, column: 5, scope: !2776)
!2838 = !DILocation(line: 715, column: 1, scope: !2762)
!2839 = distinct !DISubprogram(name: "no_labels_between_p", scope: !3, file: !3, line: 721, type: !2763, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2840)
!2840 = !{!2841, !2842, !2843}
!2841 = !DILocalVariable(name: "beg", arg: 1, scope: !2839, file: !3, line: 721, type: !1673)
!2842 = !DILocalVariable(name: "end", arg: 2, scope: !2839, file: !3, line: 721, type: !1673)
!2843 = !DILocalVariable(name: "p", scope: !2839, file: !3, line: 723, type: !588)
!2844 = !DILocation(line: 0, scope: !2839)
!2845 = !DILocation(line: 724, column: 11, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 724, column: 7)
!2847 = !DILocation(line: 724, column: 7, scope: !2839)
!2848 = !DILocation(line: 726, column: 8, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 726, column: 3)
!2850 = !DILocation(line: 0, scope: !2849)
!2851 = !DILocation(line: 726, column: 31, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 726, column: 3)
!2853 = !DILocation(line: 726, column: 3, scope: !2849)
!2854 = !DILocation(line: 727, column: 9, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 727, column: 9)
!2856 = !DILocation(line: 727, column: 9, scope: !2852)
!2857 = !DILocation(line: 726, column: 3, scope: !2852)
!2858 = distinct !{!2858, !2853, !2859}
!2859 = !DILocation(line: 728, column: 14, scope: !2849)
!2860 = !DILocation(line: 730, column: 1, scope: !2839)
!2861 = distinct !DISubprogram(name: "reg_used_between_p", scope: !3, file: !3, line: 736, type: !2862, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2864)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!579, !1673, !1673, !1673}
!2864 = !{!2865, !2866, !2867, !2868}
!2865 = !DILocalVariable(name: "reg", arg: 1, scope: !2861, file: !3, line: 736, type: !1673)
!2866 = !DILocalVariable(name: "from_insn", arg: 2, scope: !2861, file: !3, line: 736, type: !1673)
!2867 = !DILocalVariable(name: "to_insn", arg: 3, scope: !2861, file: !3, line: 736, type: !1673)
!2868 = !DILocalVariable(name: "insn", scope: !2861, file: !3, line: 738, type: !588)
!2869 = !DILocation(line: 0, scope: !2861)
!2870 = !DILocation(line: 740, column: 17, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 740, column: 7)
!2872 = !DILocation(line: 740, column: 7, scope: !2861)
!2873 = !DILocation(line: 743, column: 8, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 743, column: 3)
!2875 = !DILocation(line: 0, scope: !2874)
!2876 = !DILocation(line: 743, column: 43, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 743, column: 3)
!2878 = !DILocation(line: 743, column: 3, scope: !2874)
!2879 = !DILocation(line: 744, column: 9, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 744, column: 9)
!2881 = !DILocation(line: 745, column: 2, scope: !2880)
!2882 = !DILocation(line: 745, column: 36, scope: !2880)
!2883 = !DILocation(line: 745, column: 6, scope: !2880)
!2884 = !DILocation(line: 746, column: 5, scope: !2880)
!2885 = !DILocation(line: 746, column: 9, scope: !2880)
!2886 = !DILocation(line: 746, column: 23, scope: !2880)
!2887 = !DILocation(line: 746, column: 26, scope: !2880)
!2888 = !DILocation(line: 744, column: 9, scope: !2877)
!2889 = !DILocation(line: 743, column: 3, scope: !2877)
!2890 = distinct !{!2890, !2878, !2891}
!2891 = !DILocation(line: 747, column: 14, scope: !2874)
!2892 = !DILocation(line: 749, column: 1, scope: !2861)
!2893 = distinct !DISubprogram(name: "reg_overlap_mentioned_p", scope: !3, file: !3, line: 1338, type: !2763, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2902, !2903, !2909, !2911, !2912}
!2895 = !DILocalVariable(name: "x", arg: 1, scope: !2893, file: !3, line: 1338, type: !1673)
!2896 = !DILocalVariable(name: "in", arg: 2, scope: !2893, file: !3, line: 1338, type: !1673)
!2897 = !DILocalVariable(name: "regno", scope: !2893, file: !3, line: 1340, type: !7)
!2898 = !DILocalVariable(name: "endregno", scope: !2893, file: !3, line: 1340, type: !7)
!2899 = !DILocalVariable(name: "fmt", scope: !2900, file: !3, line: 1374, type: !584)
!2900 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1373, column: 7)
!2901 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 1350, column: 5)
!2902 = !DILocalVariable(name: "i", scope: !2900, file: !3, line: 1375, type: !579)
!2903 = !DILocalVariable(name: "j", scope: !2904, file: !3, line: 1389, type: !579)
!2904 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 1388, column: 6)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 1387, column: 13)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 1382, column: 8)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1381, column: 2)
!2908 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 1381, column: 2)
!2909 = !DILocalVariable(name: "i", scope: !2910, file: !3, line: 1405, type: !579)
!2910 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1404, column: 7)
!2911 = !DILabel(scope: !2893, name: "recurse", file: !3, line: 1348)
!2912 = !DILabel(scope: !2901, name: "do_reg", file: !3, line: 1369)
!2913 = !DILocation(line: 0, scope: !2893)
!2914 = !DILocation(line: 1345, column: 7, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 1345, column: 7)
!2916 = !DILocation(line: 1345, column: 7, scope: !2893)
!2917 = !DILocation(line: 1349, column: 3, scope: !2893)
!2918 = !DILocation(line: 1348, column: 2, scope: !2893)
!2919 = !DILocation(line: 1349, column: 11, scope: !2893)
!2920 = !DILocation(line: 1355, column: 11, scope: !2901)
!2921 = !DILocation(line: 1356, column: 7, scope: !2901)
!2922 = !DILocation(line: 1359, column: 15, scope: !2901)
!2923 = !DILocation(line: 1360, column: 17, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1360, column: 11)
!2925 = !DILocation(line: 1360, column: 11, scope: !2901)
!2926 = !DILocation(line: 1361, column: 10, scope: !2924)
!2927 = !DILocation(line: 1361, column: 2, scope: !2924)
!2928 = !DILocation(line: 0, scope: !2901)
!2929 = !DILocation(line: 1362, column: 33, scope: !2901)
!2930 = !DILocation(line: 1362, column: 27, scope: !2901)
!2931 = !DILocation(line: 1363, column: 8, scope: !2901)
!2932 = !DILocation(line: 1362, column: 24, scope: !2901)
!2933 = !DILocation(line: 1364, column: 7, scope: !2901)
!2934 = !DILocation(line: 1367, column: 15, scope: !2901)
!2935 = !DILocation(line: 1368, column: 18, scope: !2901)
!2936 = !DILocation(line: 1369, column: 5, scope: !2901)
!2937 = !DILocation(line: 1370, column: 14, scope: !2901)
!2938 = !DILocation(line: 1370, column: 7, scope: !2901)
!2939 = !DILocation(line: 1377, column: 6, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 1377, column: 6)
!2941 = !DILocation(line: 1377, column: 6, scope: !2900)
!2942 = !DILocation(line: 1380, column: 8, scope: !2900)
!2943 = !DILocation(line: 0, scope: !2900)
!2944 = !DILocation(line: 1381, column: 11, scope: !2908)
!2945 = !DILocation(line: 1384, column: 40, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 1384, column: 12)
!2947 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 1383, column: 6)
!2948 = !DILocation(line: 1381, column: 7, scope: !2908)
!2949 = !DILocation(line: 0, scope: !2908)
!2950 = !DILocation(line: 1381, column: 49, scope: !2907)
!2951 = !DILocation(line: 1381, column: 2, scope: !2908)
!2952 = !DILocation(line: 1382, column: 8, scope: !2906)
!2953 = !DILocation(line: 1382, column: 15, scope: !2906)
!2954 = !DILocation(line: 1382, column: 8, scope: !2907)
!2955 = !DILocation(line: 1384, column: 12, scope: !2946)
!2956 = !DILocation(line: 1384, column: 12, scope: !2947)
!2957 = !DILocation(line: 1387, column: 20, scope: !2905)
!2958 = !DILocation(line: 1387, column: 13, scope: !2906)
!2959 = !DILocation(line: 1390, column: 17, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 1390, column: 8)
!2961 = !DILocation(line: 0, scope: !2904)
!2962 = !DILocation(line: 1390, column: 13, scope: !2960)
!2963 = !DILocation(line: 0, scope: !2960)
!2964 = !DILocation(line: 1390, column: 40, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1390, column: 8)
!2966 = !DILocation(line: 1390, column: 8, scope: !2960)
!2967 = !DILocation(line: 1391, column: 35, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 1391, column: 7)
!2969 = !DILocation(line: 1391, column: 7, scope: !2968)
!2970 = !DILocation(line: 1391, column: 7, scope: !2965)
!2971 = !DILocation(line: 1390, column: 8, scope: !2965)
!2972 = distinct !{!2972, !2966, !2973}
!2973 = !DILocation(line: 1392, column: 12, scope: !2960)
!2974 = !DILocation(line: 1381, column: 2, scope: !2907)
!2975 = distinct !{!2975, !2951, !2976}
!2976 = !DILocation(line: 1393, column: 6, scope: !2908)
!2977 = !DILocation(line: 1401, column: 14, scope: !2901)
!2978 = !DILocation(line: 1401, column: 7, scope: !2901)
!2979 = !DILocation(line: 1408, column: 11, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 1408, column: 2)
!2981 = !DILocation(line: 0, scope: !2910)
!2982 = !DILocation(line: 1408, column: 7, scope: !2980)
!2983 = !DILocation(line: 0, scope: !2980)
!2984 = !DILocation(line: 1408, column: 33, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 1408, column: 2)
!2986 = !DILocation(line: 1408, column: 2, scope: !2980)
!2987 = !DILocation(line: 1409, column: 8, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 1409, column: 8)
!2989 = !DILocation(line: 1409, column: 36, scope: !2988)
!2990 = !DILocation(line: 1410, column: 8, scope: !2988)
!2991 = !DILocation(line: 1410, column: 11, scope: !2988)
!2992 = !DILocation(line: 1409, column: 8, scope: !2985)
!2993 = !DILocation(line: 1408, column: 2, scope: !2985)
!2994 = distinct !{!2994, !2986, !2995}
!2995 = !DILocation(line: 1411, column: 13, scope: !2980)
!2996 = !DILocation(line: 1416, column: 7, scope: !2901)
!2997 = !DILocation(line: 1419, column: 1, scope: !2893)
!2998 = distinct !DISubprogram(name: "find_reg_fusage", scope: !3, file: !3, line: 1797, type: !2999, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3001)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!579, !1673, !377, !1673}
!3001 = !{!3002, !3003, !3004, !3005, !3008, !3010, !3013}
!3002 = !DILocalVariable(name: "insn", arg: 1, scope: !2998, file: !3, line: 1797, type: !1673)
!3003 = !DILocalVariable(name: "code", arg: 2, scope: !2998, file: !3, line: 1797, type: !377)
!3004 = !DILocalVariable(name: "datum", arg: 3, scope: !2998, file: !3, line: 1797, type: !1673)
!3005 = !DILocalVariable(name: "link", scope: !3006, file: !3, line: 1808, type: !588)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 1807, column: 5)
!3007 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 1806, column: 7)
!3008 = !DILocalVariable(name: "regno", scope: !3009, file: !3, line: 1819, type: !7)
!3009 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 1818, column: 5)
!3010 = !DILocalVariable(name: "end_regno", scope: !3011, file: !3, line: 1826, type: !7)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 1825, column: 2)
!3012 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 1824, column: 11)
!3013 = !DILocalVariable(name: "i", scope: !3011, file: !3, line: 1827, type: !7)
!3014 = !DILocation(line: 0, scope: !2998)
!3015 = !DILocation(line: 1801, column: 8, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 1801, column: 7)
!3017 = !DILocation(line: 1801, column: 7, scope: !2998)
!3018 = !DILocation(line: 1804, column: 3, scope: !2998)
!3019 = !DILocation(line: 1806, column: 8, scope: !3007)
!3020 = !DILocation(line: 1806, column: 7, scope: !2998)
!3021 = !DILocation(line: 1810, column: 19, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 1810, column: 7)
!3023 = !DILocation(line: 1810, column: 12, scope: !3022)
!3024 = !DILocation(line: 0, scope: !3022)
!3025 = !DILocation(line: 0, scope: !3006)
!3026 = !DILocation(line: 1810, column: 7, scope: !3022)
!3027 = !DILocation(line: 1813, column: 6, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 1813, column: 6)
!3029 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 1810, column: 7)
!3030 = !DILocation(line: 1813, column: 32, scope: !3028)
!3031 = !DILocation(line: 1814, column: 6, scope: !3028)
!3032 = !DILocation(line: 1814, column: 29, scope: !3028)
!3033 = !DILocation(line: 1814, column: 9, scope: !3028)
!3034 = !DILocation(line: 1813, column: 6, scope: !3029)
!3035 = !DILocation(line: 1812, column: 12, scope: !3029)
!3036 = !DILocation(line: 1810, column: 7, scope: !3029)
!3037 = distinct !{!3037, !3026, !3038}
!3038 = !DILocation(line: 1815, column: 11, scope: !3022)
!3039 = !DILocation(line: 1819, column: 28, scope: !3009)
!3040 = !DILocation(line: 0, scope: !3009)
!3041 = !DILocation(line: 1824, column: 17, scope: !3012)
!3042 = !DILocation(line: 1824, column: 11, scope: !3009)
!3043 = !DILocation(line: 1826, column: 29, scope: !3011)
!3044 = !DILocation(line: 0, scope: !3011)
!3045 = !DILocation(line: 1829, column: 9, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 1829, column: 4)
!3047 = !DILocation(line: 0, scope: !3046)
!3048 = !DILocation(line: 1829, column: 22, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 1829, column: 4)
!3050 = !DILocation(line: 1829, column: 4, scope: !3046)
!3051 = !DILocation(line: 1830, column: 10, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 1830, column: 10)
!3053 = !DILocation(line: 1830, column: 10, scope: !3049)
!3054 = !DILocation(line: 1829, column: 36, scope: !3049)
!3055 = !DILocation(line: 1829, column: 4, scope: !3049)
!3056 = distinct !{!3056, !3050, !3057}
!3057 = !DILocation(line: 1831, column: 15, scope: !3046)
!3058 = !DILocation(line: 1833, column: 5, scope: !3007)
!3059 = !DILocation(line: 1835, column: 3, scope: !2998)
!3060 = !DILocation(line: 1836, column: 1, scope: !2998)
!3061 = distinct !DISubprogram(name: "reg_referenced_p", scope: !3, file: !3, line: 756, type: !2763, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3062)
!3062 = !{!3063, !3064, !3065}
!3063 = !DILocalVariable(name: "x", arg: 1, scope: !3061, file: !3, line: 756, type: !1673)
!3064 = !DILocalVariable(name: "body", arg: 2, scope: !3061, file: !3, line: 756, type: !1673)
!3065 = !DILocalVariable(name: "i", scope: !3061, file: !3, line: 758, type: !579)
!3066 = !DILocation(line: 821, column: 14, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 761, column: 5)
!3068 = !DILocation(line: 0, scope: !3061)
!3069 = !DILocation(line: 760, column: 11, scope: !3061)
!3070 = !DILocation(line: 760, column: 3, scope: !3061)
!3071 = !DILocation(line: 763, column: 39, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 763, column: 11)
!3073 = !DILocation(line: 763, column: 11, scope: !3072)
!3074 = !DILocation(line: 763, column: 11, scope: !3067)
!3075 = !DILocation(line: 769, column: 11, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 769, column: 11)
!3077 = !DILocation(line: 769, column: 38, scope: !3076)
!3078 = !DILocation(line: 770, column: 4, scope: !3076)
!3079 = !DILocation(line: 770, column: 34, scope: !3076)
!3080 = !DILocation(line: 771, column: 4, scope: !3076)
!3081 = !DILocation(line: 771, column: 8, scope: !3076)
!3082 = !DILocation(line: 772, column: 4, scope: !3076)
!3083 = !DILocation(line: 772, column: 37, scope: !3076)
!3084 = !DILocation(line: 773, column: 3, scope: !3076)
!3085 = !DILocation(line: 773, column: 6, scope: !3076)
!3086 = !DILocation(line: 774, column: 3, scope: !3076)
!3087 = !DILocation(line: 774, column: 9, scope: !3076)
!3088 = !DILocation(line: 775, column: 9, scope: !3076)
!3089 = !DILocation(line: 776, column: 12, scope: !3076)
!3090 = !DILocation(line: 777, column: 5, scope: !3076)
!3091 = !DILocation(line: 776, column: 7, scope: !3076)
!3092 = !DILocation(line: 778, column: 4, scope: !3076)
!3093 = !DILocation(line: 778, column: 7, scope: !3076)
!3094 = !DILocation(line: 769, column: 11, scope: !3067)
!3095 = !DILocation(line: 780, column: 7, scope: !3067)
!3096 = !DILocation(line: 783, column: 16, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 783, column: 7)
!3098 = !DILocation(line: 783, column: 12, scope: !3097)
!3099 = !DILocation(line: 0, scope: !3097)
!3100 = !DILocation(line: 783, column: 56, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 783, column: 7)
!3102 = !DILocation(line: 783, column: 7, scope: !3097)
!3103 = !DILocation(line: 784, column: 34, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 784, column: 6)
!3105 = !DILocation(line: 784, column: 6, scope: !3104)
!3106 = !DILocation(line: 784, column: 6, scope: !3101)
!3107 = !DILocation(line: 783, column: 7, scope: !3101)
!3108 = distinct !{!3108, !3102, !3109}
!3109 = !DILocation(line: 785, column: 11, scope: !3097)
!3110 = !DILocation(line: 791, column: 14, scope: !3067)
!3111 = !DILocation(line: 791, column: 7, scope: !3067)
!3112 = !DILocation(line: 794, column: 42, scope: !3067)
!3113 = !DILocation(line: 794, column: 14, scope: !3067)
!3114 = !DILocation(line: 794, column: 7, scope: !3067)
!3115 = !DILocation(line: 797, column: 42, scope: !3067)
!3116 = !DILocation(line: 797, column: 14, scope: !3067)
!3117 = !DILocation(line: 797, column: 7, scope: !3067)
!3118 = !DILocation(line: 801, column: 16, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 801, column: 7)
!3120 = !DILocation(line: 801, column: 12, scope: !3119)
!3121 = !DILocation(line: 0, scope: !3119)
!3122 = !DILocation(line: 801, column: 41, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 801, column: 7)
!3124 = !DILocation(line: 801, column: 7, scope: !3119)
!3125 = !DILocation(line: 802, column: 34, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 802, column: 6)
!3127 = !DILocation(line: 802, column: 6, scope: !3126)
!3128 = !DILocation(line: 802, column: 6, scope: !3123)
!3129 = !DILocation(line: 801, column: 7, scope: !3123)
!3130 = distinct !{!3130, !3124, !3131}
!3131 = !DILocation(line: 803, column: 11, scope: !3119)
!3132 = !DILocation(line: 807, column: 16, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 807, column: 7)
!3134 = !DILocation(line: 807, column: 12, scope: !3133)
!3135 = !DILocation(line: 0, scope: !3133)
!3136 = !DILocation(line: 807, column: 41, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 807, column: 7)
!3138 = !DILocation(line: 807, column: 7, scope: !3133)
!3139 = !DILocation(line: 808, column: 27, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 808, column: 6)
!3141 = !DILocation(line: 808, column: 6, scope: !3140)
!3142 = !DILocation(line: 808, column: 6, scope: !3137)
!3143 = !DILocation(line: 807, column: 7, scope: !3137)
!3144 = distinct !{!3144, !3138, !3145}
!3145 = !DILocation(line: 809, column: 11, scope: !3133)
!3146 = !DILocation(line: 813, column: 11, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 813, column: 11)
!3148 = !DILocation(line: 813, column: 11, scope: !3067)
!3149 = !DILocation(line: 814, column: 34, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 814, column: 6)
!3151 = !DILocation(line: 814, column: 6, scope: !3150)
!3152 = !DILocation(line: 814, column: 6, scope: !3147)
!3153 = !DILocation(line: 816, column: 7, scope: !3067)
!3154 = !DILocation(line: 819, column: 39, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 819, column: 11)
!3156 = !DILocation(line: 819, column: 11, scope: !3155)
!3157 = !DILocation(line: 819, column: 11, scope: !3067)
!3158 = !DILocation(line: 821, column: 35, scope: !3067)
!3159 = !DILocation(line: 826, column: 1, scope: !3061)
!3160 = !DILocation(line: 0, scope: !3067)
!3161 = distinct !DISubprogram(name: "reg_set_between_p", scope: !3, file: !3, line: 832, type: !2862, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3162)
!3162 = !{!3163, !3164, !3165, !3166}
!3163 = !DILocalVariable(name: "reg", arg: 1, scope: !3161, file: !3, line: 832, type: !1673)
!3164 = !DILocalVariable(name: "from_insn", arg: 2, scope: !3161, file: !3, line: 832, type: !1673)
!3165 = !DILocalVariable(name: "to_insn", arg: 3, scope: !3161, file: !3, line: 832, type: !1673)
!3166 = !DILocalVariable(name: "insn", scope: !3161, file: !3, line: 834, type: !1673)
!3167 = !DILocation(line: 0, scope: !3161)
!3168 = !DILocation(line: 836, column: 17, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 836, column: 7)
!3170 = !DILocation(line: 836, column: 7, scope: !3161)
!3171 = !DILocation(line: 839, column: 8, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 839, column: 3)
!3173 = !DILocation(line: 0, scope: !3172)
!3174 = !DILocation(line: 839, column: 43, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 839, column: 3)
!3176 = !DILocation(line: 839, column: 3, scope: !3172)
!3177 = !DILocation(line: 840, column: 9, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 840, column: 9)
!3179 = !DILocation(line: 840, column: 23, scope: !3178)
!3180 = !DILocation(line: 840, column: 26, scope: !3178)
!3181 = !DILocation(line: 840, column: 9, scope: !3175)
!3182 = !DILocation(line: 839, column: 3, scope: !3175)
!3183 = distinct !{!3183, !3176, !3184}
!3184 = !DILocation(line: 841, column: 14, scope: !3172)
!3185 = !DILocation(line: 843, column: 1, scope: !3161)
!3186 = distinct !DISubprogram(name: "reg_set_p", scope: !3, file: !3, line: 847, type: !2763, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3187)
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "reg", arg: 1, scope: !3186, file: !3, line: 847, type: !1673)
!3189 = !DILocalVariable(name: "insn", arg: 2, scope: !3186, file: !3, line: 847, type: !1673)
!3190 = !DILocation(line: 0, scope: !3186)
!3191 = !DILocation(line: 851, column: 7, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 851, column: 7)
!3193 = !DILocation(line: 852, column: 7, scope: !3192)
!3194 = !DILocation(line: 853, column: 8, scope: !3192)
!3195 = !DILocation(line: 854, column: 8, scope: !3192)
!3196 = !DILocation(line: 854, column: 13, scope: !3192)
!3197 = !DILocation(line: 855, column: 6, scope: !3192)
!3198 = !DILocation(line: 855, column: 9, scope: !3192)
!3199 = !DILocation(line: 855, column: 21, scope: !3192)
!3200 = !DILocation(line: 856, column: 6, scope: !3192)
!3201 = !DILocation(line: 856, column: 34, scope: !3192)
!3202 = !DILocation(line: 857, column: 13, scope: !3192)
!3203 = !DILocation(line: 857, column: 29, scope: !3192)
!3204 = !DILocation(line: 856, column: 9, scope: !3192)
!3205 = !DILocation(line: 858, column: 5, scope: !3192)
!3206 = !DILocation(line: 858, column: 8, scope: !3192)
!3207 = !DILocation(line: 859, column: 5, scope: !3192)
!3208 = !DILocation(line: 859, column: 8, scope: !3192)
!3209 = !DILocation(line: 851, column: 7, scope: !3186)
!3210 = !DILocation(line: 862, column: 10, scope: !3186)
!3211 = !DILocation(line: 862, column: 29, scope: !3186)
!3212 = !DILocation(line: 862, column: 3, scope: !3186)
!3213 = !DILocation(line: 863, column: 1, scope: !3186)
!3214 = distinct !DISubprogram(name: "overlaps_hard_reg_set_p", scope: !3215, file: !3215, line: 354, type: !3216, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3219)
!3215 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!578, !3218, !5, !7}
!3218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!3219 = !{!3220, !3221, !3222, !3223}
!3220 = !DILocalVariable(name: "regs", arg: 1, scope: !3214, file: !3215, line: 354, type: !3218)
!3221 = !DILocalVariable(name: "mode", arg: 2, scope: !3214, file: !3215, line: 354, type: !5)
!3222 = !DILocalVariable(name: "regno", arg: 3, scope: !3214, file: !3215, line: 355, type: !7)
!3223 = !DILocalVariable(name: "end_regno", scope: !3214, file: !3215, line: 357, type: !7)
!3224 = !DILocation(line: 0, scope: !3214)
!3225 = !DILocation(line: 359, column: 7, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3214, file: !3215, line: 359, column: 7)
!3227 = !DILocation(line: 359, column: 7, scope: !3214)
!3228 = !DILocation(line: 362, column: 15, scope: !3214)
!3229 = !DILocation(line: 363, column: 3, scope: !3214)
!3230 = !DILocation(line: 363, column: 10, scope: !3214)
!3231 = !DILocation(line: 363, column: 18, scope: !3214)
!3232 = !DILocation(line: 364, column: 9, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3214, file: !3215, line: 364, column: 9)
!3234 = !DILocation(line: 364, column: 9, scope: !3214)
!3235 = distinct !{!3235, !3229, !3236}
!3236 = !DILocation(line: 365, column: 14, scope: !3214)
!3237 = !DILocation(line: 368, column: 1, scope: !3214)
!3238 = distinct !DISubprogram(name: "set_of", scope: !3, file: !3, line: 1005, type: !3239, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3241)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!1673, !1673, !1673}
!3241 = !{!3242, !3243, !3244}
!3242 = !DILocalVariable(name: "pat", arg: 1, scope: !3238, file: !3, line: 1005, type: !1673)
!3243 = !DILocalVariable(name: "insn", arg: 2, scope: !3238, file: !3, line: 1005, type: !1673)
!3244 = !DILocalVariable(name: "data", scope: !3238, file: !3, line: 1007, type: !1670)
!3245 = !DILocation(line: 0, scope: !3238)
!3246 = !DILocation(line: 1007, column: 3, scope: !3238)
!3247 = !DILocation(line: 1008, column: 8, scope: !3238)
!3248 = !DILocation(line: 1008, column: 14, scope: !3238)
!3249 = !DILocation(line: 1009, column: 8, scope: !3238)
!3250 = !DILocation(line: 1009, column: 12, scope: !3238)
!3251 = !DILocation(line: 1010, column: 16, scope: !3238)
!3252 = !DILocation(line: 1010, column: 32, scope: !3238)
!3253 = !DILocation(line: 1010, column: 3, scope: !3238)
!3254 = !DILocation(line: 1011, column: 15, scope: !3238)
!3255 = !DILocation(line: 1012, column: 1, scope: !3238)
!3256 = !DILocation(line: 1011, column: 3, scope: !3238)
!3257 = distinct !DISubprogram(name: "modified_between_p", scope: !3, file: !3, line: 870, type: !2862, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266}
!3259 = !DILocalVariable(name: "x", arg: 1, scope: !3257, file: !3, line: 870, type: !1673)
!3260 = !DILocalVariable(name: "start", arg: 2, scope: !3257, file: !3, line: 870, type: !1673)
!3261 = !DILocalVariable(name: "end", arg: 3, scope: !3257, file: !3, line: 870, type: !1673)
!3262 = !DILocalVariable(name: "code", scope: !3257, file: !3, line: 872, type: !2145)
!3263 = !DILocalVariable(name: "fmt", scope: !3257, file: !3, line: 873, type: !584)
!3264 = !DILocalVariable(name: "i", scope: !3257, file: !3, line: 874, type: !579)
!3265 = !DILocalVariable(name: "j", scope: !3257, file: !3, line: 874, type: !579)
!3266 = !DILocalVariable(name: "insn", scope: !3257, file: !3, line: 875, type: !588)
!3267 = !DILocation(line: 0, scope: !3257)
!3268 = !DILocation(line: 872, column: 30, scope: !3257)
!3269 = !DILocation(line: 877, column: 13, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 877, column: 7)
!3271 = !DILocation(line: 877, column: 7, scope: !3257)
!3272 = !DILocation(line: 880, column: 3, scope: !3257)
!3273 = !DILocation(line: 893, column: 7, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 881, column: 5)
!3275 = !DILocation(line: 896, column: 31, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 896, column: 11)
!3277 = !DILocation(line: 896, column: 11, scope: !3276)
!3278 = !DILocation(line: 896, column: 11, scope: !3274)
!3279 = !DILocation(line: 898, column: 11, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 898, column: 11)
!3281 = !DILocation(line: 898, column: 11, scope: !3274)
!3282 = !DILocation(line: 900, column: 12, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 900, column: 7)
!3284 = !DILocation(line: 0, scope: !3283)
!3285 = !DILocation(line: 900, column: 43, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 900, column: 7)
!3287 = !DILocation(line: 900, column: 7, scope: !3283)
!3288 = !DILocation(line: 901, column: 6, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 901, column: 6)
!3290 = !DILocation(line: 901, column: 6, scope: !3286)
!3291 = !DILocation(line: 900, column: 7, scope: !3286)
!3292 = distinct !{!3292, !3287, !3293}
!3293 = !DILocation(line: 902, column: 11, scope: !3283)
!3294 = !DILocation(line: 907, column: 14, scope: !3274)
!3295 = !DILocation(line: 907, column: 7, scope: !3274)
!3296 = !DILocation(line: 913, column: 9, scope: !3257)
!3297 = !DILocation(line: 914, column: 12, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 914, column: 3)
!3299 = !DILocation(line: 0, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 916, column: 11)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 915, column: 5)
!3302 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 914, column: 3)
!3303 = !DILocation(line: 914, column: 8, scope: !3298)
!3304 = !DILocation(line: 0, scope: !3298)
!3305 = !DILocation(line: 914, column: 41, scope: !3302)
!3306 = !DILocation(line: 914, column: 3, scope: !3298)
!3307 = !DILocation(line: 916, column: 11, scope: !3300)
!3308 = !DILocation(line: 916, column: 18, scope: !3300)
!3309 = !DILocation(line: 916, column: 25, scope: !3300)
!3310 = !DILocation(line: 916, column: 48, scope: !3300)
!3311 = !DILocation(line: 916, column: 28, scope: !3300)
!3312 = !DILocation(line: 916, column: 11, scope: !3301)
!3313 = !DILocation(line: 919, column: 16, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 919, column: 16)
!3315 = !DILocation(line: 919, column: 23, scope: !3314)
!3316 = !DILocation(line: 919, column: 16, scope: !3300)
!3317 = !DILocation(line: 920, column: 11, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 920, column: 2)
!3319 = !DILocation(line: 920, column: 7, scope: !3318)
!3320 = !DILocation(line: 0, scope: !3318)
!3321 = !DILocation(line: 920, column: 33, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 920, column: 2)
!3323 = !DILocation(line: 920, column: 2, scope: !3318)
!3324 = !DILocation(line: 921, column: 28, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 921, column: 8)
!3326 = !DILocation(line: 921, column: 8, scope: !3325)
!3327 = !DILocation(line: 921, column: 8, scope: !3322)
!3328 = !DILocation(line: 920, column: 2, scope: !3322)
!3329 = distinct !{!3329, !3323, !3330}
!3330 = !DILocation(line: 922, column: 13, scope: !3318)
!3331 = !DILocation(line: 914, column: 3, scope: !3302)
!3332 = distinct !{!3332, !3306, !3333}
!3333 = !DILocation(line: 923, column: 5, scope: !3298)
!3334 = !DILocation(line: 926, column: 1, scope: !3257)
!3335 = distinct !DISubprogram(name: "modified_in_p", scope: !3, file: !3, line: 933, type: !2763, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3336)
!3336 = !{!3337, !3338, !3339, !3340, !3341, !3342}
!3337 = !DILocalVariable(name: "x", arg: 1, scope: !3335, file: !3, line: 933, type: !1673)
!3338 = !DILocalVariable(name: "insn", arg: 2, scope: !3335, file: !3, line: 933, type: !1673)
!3339 = !DILocalVariable(name: "code", scope: !3335, file: !3, line: 935, type: !2145)
!3340 = !DILocalVariable(name: "fmt", scope: !3335, file: !3, line: 936, type: !584)
!3341 = !DILocalVariable(name: "i", scope: !3335, file: !3, line: 937, type: !579)
!3342 = !DILocalVariable(name: "j", scope: !3335, file: !3, line: 937, type: !579)
!3343 = !DILocation(line: 0, scope: !3335)
!3344 = !DILocation(line: 935, column: 30, scope: !3335)
!3345 = !DILocation(line: 939, column: 3, scope: !3335)
!3346 = !DILocation(line: 952, column: 7, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 940, column: 5)
!3348 = !DILocation(line: 955, column: 26, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 955, column: 11)
!3350 = !DILocation(line: 955, column: 11, scope: !3349)
!3351 = !DILocation(line: 955, column: 11, scope: !3347)
!3352 = !DILocation(line: 957, column: 11, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 957, column: 11)
!3354 = !DILocation(line: 957, column: 11, scope: !3347)
!3355 = !DILocation(line: 959, column: 11, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 959, column: 11)
!3357 = !DILocation(line: 0, scope: !3347)
!3358 = !DILocation(line: 965, column: 14, scope: !3347)
!3359 = !DILocation(line: 965, column: 7, scope: !3347)
!3360 = !DILocation(line: 971, column: 9, scope: !3335)
!3361 = !DILocation(line: 972, column: 12, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 972, column: 3)
!3363 = !DILocation(line: 0, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 974, column: 11)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 973, column: 5)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 972, column: 3)
!3367 = !DILocation(line: 972, column: 8, scope: !3362)
!3368 = !DILocation(line: 0, scope: !3362)
!3369 = !DILocation(line: 972, column: 41, scope: !3366)
!3370 = !DILocation(line: 972, column: 3, scope: !3362)
!3371 = !DILocation(line: 974, column: 11, scope: !3364)
!3372 = !DILocation(line: 974, column: 18, scope: !3364)
!3373 = !DILocation(line: 974, column: 25, scope: !3364)
!3374 = !DILocation(line: 974, column: 43, scope: !3364)
!3375 = !DILocation(line: 974, column: 28, scope: !3364)
!3376 = !DILocation(line: 974, column: 11, scope: !3365)
!3377 = !DILocation(line: 977, column: 16, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 977, column: 16)
!3379 = !DILocation(line: 977, column: 23, scope: !3378)
!3380 = !DILocation(line: 977, column: 16, scope: !3364)
!3381 = !DILocation(line: 978, column: 11, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 978, column: 2)
!3383 = !DILocation(line: 978, column: 7, scope: !3382)
!3384 = !DILocation(line: 0, scope: !3382)
!3385 = !DILocation(line: 978, column: 33, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 978, column: 2)
!3387 = !DILocation(line: 978, column: 2, scope: !3382)
!3388 = !DILocation(line: 979, column: 23, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 979, column: 8)
!3390 = !DILocation(line: 979, column: 8, scope: !3389)
!3391 = !DILocation(line: 979, column: 8, scope: !3386)
!3392 = !DILocation(line: 978, column: 2, scope: !3386)
!3393 = distinct !{!3393, !3387, !3394}
!3394 = !DILocation(line: 980, column: 13, scope: !3382)
!3395 = !DILocation(line: 972, column: 3, scope: !3366)
!3396 = distinct !{!3396, !3370, !3397}
!3397 = !DILocation(line: 981, column: 5, scope: !3362)
!3398 = !DILocation(line: 984, column: 1, scope: !3335)
!3399 = distinct !DISubprogram(name: "note_stores", scope: !3, file: !3, line: 1434, type: !3400, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3405)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{null, !1673, !3402, !583}
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{null, !588, !1673, !583}
!3405 = !{!3406, !3407, !3408, !3409, !3410}
!3406 = !DILocalVariable(name: "x", arg: 1, scope: !3399, file: !3, line: 1434, type: !1673)
!3407 = !DILocalVariable(name: "fun", arg: 2, scope: !3399, file: !3, line: 1434, type: !3402)
!3408 = !DILocalVariable(name: "data", arg: 3, scope: !3399, file: !3, line: 1434, type: !583)
!3409 = !DILocalVariable(name: "i", scope: !3399, file: !3, line: 1436, type: !579)
!3410 = !DILocalVariable(name: "dest", scope: !3411, file: !3, line: 1443, type: !588)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1442, column: 5)
!3412 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1441, column: 7)
!3413 = !DILocation(line: 0, scope: !3399)
!3414 = !DILocation(line: 1438, column: 7, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1438, column: 7)
!3416 = !DILocation(line: 1438, column: 20, scope: !3415)
!3417 = !DILocation(line: 1438, column: 7, scope: !3399)
!3418 = !DILocation(line: 1439, column: 9, scope: !3415)
!3419 = !DILocation(line: 0, scope: !3412)
!3420 = !DILocation(line: 1441, column: 7, scope: !3412)
!3421 = !DILocation(line: 1439, column: 5, scope: !3415)
!3422 = !DILocation(line: 1441, column: 20, scope: !3412)
!3423 = !DILocation(line: 1441, column: 27, scope: !3412)
!3424 = !DILocation(line: 1441, column: 43, scope: !3412)
!3425 = !DILocation(line: 1441, column: 7, scope: !3399)
!3426 = !DILocation(line: 1445, column: 7, scope: !3411)
!3427 = !DILocation(line: 0, scope: !3411)
!3428 = !DILocation(line: 1445, column: 15, scope: !3411)
!3429 = !DILocation(line: 1445, column: 31, scope: !3411)
!3430 = !DILocation(line: 1446, column: 8, scope: !3411)
!3431 = !DILocation(line: 1446, column: 13, scope: !3411)
!3432 = !DILocation(line: 1447, column: 5, scope: !3411)
!3433 = !DILocation(line: 1447, column: 8, scope: !3411)
!3434 = !DILocation(line: 1447, column: 34, scope: !3411)
!3435 = !DILocation(line: 1448, column: 7, scope: !3411)
!3436 = !DILocation(line: 1448, column: 10, scope: !3411)
!3437 = !DILocation(line: 1448, column: 26, scope: !3411)
!3438 = !DILocation(line: 1449, column: 26, scope: !3411)
!3439 = !DILocation(line: 1449, column: 7, scope: !3411)
!3440 = distinct !{!3440, !3426, !3441}
!3441 = !DILocation(line: 1450, column: 9, scope: !3411)
!3442 = !DILocation(line: 1454, column: 27, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1454, column: 11)
!3444 = !DILocation(line: 1454, column: 11, scope: !3411)
!3445 = !DILocation(line: 1456, column: 13, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 1456, column: 4)
!3447 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 1455, column: 2)
!3448 = !DILocation(line: 1456, column: 9, scope: !3446)
!3449 = !DILocation(line: 0, scope: !3446)
!3450 = !DILocation(line: 1456, column: 38, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1456, column: 4)
!3452 = !DILocation(line: 1456, column: 4, scope: !3446)
!3453 = !DILocation(line: 1457, column: 10, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 1457, column: 10)
!3455 = !DILocation(line: 1457, column: 41, scope: !3454)
!3456 = !DILocation(line: 1457, column: 10, scope: !3451)
!3457 = !DILocation(line: 1458, column: 8, scope: !3454)
!3458 = !DILocation(line: 1456, column: 4, scope: !3451)
!3459 = distinct !{!3459, !3452, !3460}
!3460 = !DILocation(line: 1458, column: 55, scope: !3446)
!3461 = !DILocation(line: 1461, column: 2, scope: !3443)
!3462 = !DILocation(line: 1464, column: 25, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 1464, column: 12)
!3464 = !DILocation(line: 1464, column: 12, scope: !3412)
!3465 = !DILocation(line: 1465, column: 14, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1465, column: 5)
!3467 = !DILocation(line: 1465, column: 10, scope: !3466)
!3468 = !DILocation(line: 0, scope: !3466)
!3469 = !DILocation(line: 1465, column: 36, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 1465, column: 5)
!3471 = !DILocation(line: 1465, column: 5, scope: !3466)
!3472 = !DILocation(line: 1466, column: 20, scope: !3470)
!3473 = !DILocation(line: 1466, column: 7, scope: !3470)
!3474 = !DILocation(line: 1465, column: 5, scope: !3470)
!3475 = distinct !{!3475, !3471, !3476}
!3476 = !DILocation(line: 1466, column: 48, scope: !3466)
!3477 = !DILocation(line: 1467, column: 1, scope: !3399)
!3478 = distinct !DISubprogram(name: "set_of_1", scope: !3, file: !3, line: 994, type: !3403, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3479)
!3479 = !{!3480, !3481, !3482, !3483}
!3480 = !DILocalVariable(name: "x", arg: 1, scope: !3478, file: !3, line: 994, type: !588)
!3481 = !DILocalVariable(name: "pat", arg: 2, scope: !3478, file: !3, line: 994, type: !1673)
!3482 = !DILocalVariable(name: "data1", arg: 3, scope: !3478, file: !3, line: 994, type: !583)
!3483 = !DILocalVariable(name: "data", scope: !3478, file: !3, line: 996, type: !3484)
!3484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!3485 = !DILocation(line: 0, scope: !3478)
!3486 = !DILocation(line: 997, column: 29, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 997, column: 7)
!3488 = !DILocation(line: 997, column: 7, scope: !3487)
!3489 = !DILocation(line: 998, column: 7, scope: !3487)
!3490 = !DILocation(line: 998, column: 12, scope: !3487)
!3491 = !DILocation(line: 998, column: 22, scope: !3487)
!3492 = !DILocation(line: 998, column: 56, scope: !3487)
!3493 = !DILocation(line: 998, column: 25, scope: !3487)
!3494 = !DILocation(line: 997, column: 7, scope: !3478)
!3495 = !DILocation(line: 999, column: 11, scope: !3487)
!3496 = !DILocation(line: 999, column: 17, scope: !3487)
!3497 = !DILocation(line: 999, column: 5, scope: !3487)
!3498 = !DILocation(line: 1000, column: 1, scope: !3478)
!3499 = distinct !DISubprogram(name: "single_set_2", scope: !3, file: !3, line: 1019, type: !3500, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!588, !1673, !1673}
!3502 = !{!3503, !3504, !3505, !3506, !3507, !3508}
!3503 = !DILocalVariable(name: "insn", arg: 1, scope: !3499, file: !3, line: 1019, type: !1673)
!3504 = !DILocalVariable(name: "pat", arg: 2, scope: !3499, file: !3, line: 1019, type: !1673)
!3505 = !DILocalVariable(name: "set", scope: !3499, file: !3, line: 1021, type: !588)
!3506 = !DILocalVariable(name: "set_verified", scope: !3499, file: !3, line: 1022, type: !579)
!3507 = !DILocalVariable(name: "i", scope: !3499, file: !3, line: 1023, type: !579)
!3508 = !DILocalVariable(name: "sub", scope: !3509, file: !3, line: 1029, type: !588)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !3, line: 1028, column: 2)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 1027, column: 7)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 1027, column: 7)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1026, column: 5)
!3513 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 1025, column: 7)
!3514 = !DILocation(line: 0, scope: !3499)
!3515 = !DILocation(line: 1025, column: 7, scope: !3513)
!3516 = !DILocation(line: 1025, column: 22, scope: !3513)
!3517 = !DILocation(line: 1025, column: 7, scope: !3499)
!3518 = !DILocation(line: 0, scope: !3510)
!3519 = !DILocation(line: 1027, column: 7, scope: !3511)
!3520 = !DILocation(line: 1022, column: 7, scope: !3499)
!3521 = !DILocation(line: 1021, column: 7, scope: !3499)
!3522 = !DILocation(line: 1027, column: 23, scope: !3510)
!3523 = !DILocation(line: 1027, column: 21, scope: !3510)
!3524 = !DILocation(line: 1029, column: 14, scope: !3509)
!3525 = !DILocation(line: 0, scope: !3509)
!3526 = !DILocation(line: 1030, column: 12, scope: !3509)
!3527 = !DILocation(line: 1030, column: 4, scope: !3509)
!3528 = !DILocation(line: 1045, column: 13, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1045, column: 12)
!3530 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 1031, column: 6)
!3531 = !DILocation(line: 1045, column: 12, scope: !3530)
!3532 = !DILocation(line: 1047, column: 42, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1047, column: 9)
!3534 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1046, column: 3)
!3535 = !DILocation(line: 1047, column: 9, scope: !3533)
!3536 = !DILocation(line: 1048, column: 9, scope: !3533)
!3537 = !DILocation(line: 1048, column: 13, scope: !3533)
!3538 = !DILocation(line: 1047, column: 9, scope: !3534)
!3539 = !DILocation(line: 1053, column: 13, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1053, column: 12)
!3541 = !DILocation(line: 1053, column: 12, scope: !3530)
!3542 = !DILocation(line: 1055, column: 51, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 1055, column: 17)
!3544 = !DILocation(line: 1055, column: 18, scope: !3543)
!3545 = !DILocation(line: 1056, column: 10, scope: !3543)
!3546 = !DILocation(line: 1056, column: 13, scope: !3543)
!3547 = !DILocation(line: 1055, column: 17, scope: !3540)
!3548 = !DILocation(line: 1063, column: 2, scope: !3510)
!3549 = !DILocation(line: 1027, column: 42, scope: !3510)
!3550 = !DILocation(line: 1027, column: 7, scope: !3510)
!3551 = distinct !{!3551, !3519, !3552}
!3552 = !DILocation(line: 1063, column: 2, scope: !3511)
!3553 = !DILocation(line: 1066, column: 1, scope: !3499)
!3554 = distinct !DISubprogram(name: "find_reg_note", scope: !3, file: !3, line: 1693, type: !3555, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!588, !1673, !520, !1673}
!3557 = !{!3558, !3559, !3560, !3561}
!3558 = !DILocalVariable(name: "insn", arg: 1, scope: !3554, file: !3, line: 1693, type: !1673)
!3559 = !DILocalVariable(name: "kind", arg: 2, scope: !3554, file: !3, line: 1693, type: !520)
!3560 = !DILocalVariable(name: "datum", arg: 3, scope: !3554, file: !3, line: 1693, type: !1673)
!3561 = !DILocalVariable(name: "link", scope: !3554, file: !3, line: 1695, type: !588)
!3562 = !DILocation(line: 0, scope: !3554)
!3563 = !DILocation(line: 1697, column: 3, scope: !3554)
!3564 = !DILocation(line: 1700, column: 9, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1700, column: 7)
!3566 = !DILocation(line: 1700, column: 7, scope: !3554)
!3567 = !DILocation(line: 1702, column: 13, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1702, column: 7)
!3569 = !DILocation(line: 1702, column: 7, scope: !3554)
!3570 = !DILocation(line: 1710, column: 3, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1710, column: 3)
!3572 = !DILocation(line: 1704, column: 7, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 1704, column: 7)
!3574 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1703, column: 5)
!3575 = !DILocation(line: 0, scope: !3573)
!3576 = !DILocation(line: 1705, column: 6, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 1705, column: 6)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1704, column: 7)
!3579 = !DILocation(line: 1705, column: 27, scope: !3577)
!3580 = !DILocation(line: 1705, column: 6, scope: !3578)
!3581 = !DILocation(line: 1704, column: 50, scope: !3578)
!3582 = !DILocation(line: 1704, column: 7, scope: !3578)
!3583 = distinct !{!3583, !3572, !3584}
!3584 = !DILocation(line: 1706, column: 11, scope: !3573)
!3585 = !DILocation(line: 0, scope: !3571)
!3586 = !DILocation(line: 1711, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 1711, column: 9)
!3588 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 1710, column: 3)
!3589 = !DILocation(line: 1711, column: 30, scope: !3587)
!3590 = !DILocation(line: 1711, column: 38, scope: !3587)
!3591 = !DILocation(line: 1711, column: 50, scope: !3587)
!3592 = !DILocation(line: 1711, column: 47, scope: !3587)
!3593 = !DILocation(line: 1711, column: 9, scope: !3588)
!3594 = !DILocation(line: 1710, column: 46, scope: !3588)
!3595 = !DILocation(line: 1710, column: 3, scope: !3588)
!3596 = distinct !{!3596, !3570, !3597}
!3597 = !DILocation(line: 1712, column: 14, scope: !3571)
!3598 = !DILocation(line: 1714, column: 1, scope: !3554)
!3599 = distinct !DISubprogram(name: "side_effects_p", scope: !3, file: !3, line: 2133, type: !2140, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3600)
!3600 = !{!3601, !3602, !3603, !3605, !3606}
!3601 = !DILocalVariable(name: "x", arg: 1, scope: !3599, file: !3, line: 2133, type: !1673)
!3602 = !DILocalVariable(name: "code", scope: !3599, file: !3, line: 2135, type: !2145)
!3603 = !DILocalVariable(name: "fmt", scope: !3604, file: !3, line: 2184, type: !584)
!3604 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 2183, column: 3)
!3605 = !DILocalVariable(name: "i", scope: !3604, file: !3, line: 2185, type: !579)
!3606 = !DILocalVariable(name: "j", scope: !3607, file: !3, line: 2196, type: !579)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2195, column: 4)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2194, column: 11)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2189, column: 6)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 2188, column: 7)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 2187, column: 5)
!3612 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 2187, column: 5)
!3613 = !DILocation(line: 0, scope: !3599)
!3614 = !DILocation(line: 2135, column: 25, scope: !3599)
!3615 = !DILocation(line: 2136, column: 3, scope: !3599)
!3616 = !DILocation(line: 2158, column: 15, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 2137, column: 5)
!3618 = !DILocation(line: 2158, column: 28, scope: !3617)
!3619 = !DILocation(line: 2158, column: 7, scope: !3617)
!3620 = !DILocation(line: 2169, column: 7, scope: !3617)
!3621 = !DILocation(line: 2174, column: 11, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 2174, column: 11)
!3623 = !DILocation(line: 2174, column: 11, scope: !3617)
!3624 = !DILocation(line: 2184, column: 23, scope: !3604)
!3625 = !DILocation(line: 0, scope: !3604)
!3626 = !DILocation(line: 2187, column: 14, scope: !3612)
!3627 = !DILocation(line: 2191, column: 26, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 2191, column: 10)
!3629 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2190, column: 4)
!3630 = !DILocation(line: 2187, column: 10, scope: !3612)
!3631 = !DILocation(line: 0, scope: !3612)
!3632 = !DILocation(line: 2187, column: 43, scope: !3611)
!3633 = !DILocation(line: 2187, column: 5, scope: !3612)
!3634 = !DILocation(line: 2189, column: 6, scope: !3609)
!3635 = !DILocation(line: 2189, column: 13, scope: !3609)
!3636 = !DILocation(line: 2189, column: 6, scope: !3610)
!3637 = !DILocation(line: 2191, column: 10, scope: !3628)
!3638 = !DILocation(line: 2191, column: 10, scope: !3629)
!3639 = !DILocation(line: 2194, column: 18, scope: !3608)
!3640 = !DILocation(line: 2194, column: 11, scope: !3609)
!3641 = !DILocation(line: 2198, column: 28, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 2198, column: 12)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 2197, column: 6)
!3644 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 2197, column: 6)
!3645 = !DILocation(line: 2197, column: 6, scope: !3644)
!3646 = !DILocation(line: 0, scope: !3644)
!3647 = !DILocation(line: 0, scope: !3607)
!3648 = !DILocation(line: 2197, column: 22, scope: !3643)
!3649 = !DILocation(line: 2197, column: 20, scope: !3643)
!3650 = !DILocation(line: 2198, column: 12, scope: !3642)
!3651 = !DILocation(line: 2198, column: 12, scope: !3643)
!3652 = !DILocation(line: 2197, column: 39, scope: !3643)
!3653 = !DILocation(line: 2197, column: 6, scope: !3643)
!3654 = distinct !{!3654, !3645, !3655}
!3655 = !DILocation(line: 2199, column: 10, scope: !3644)
!3656 = !DILocation(line: 2187, column: 5, scope: !3611)
!3657 = distinct !{!3657, !3633, !3658}
!3658 = !DILocation(line: 2201, column: 7, scope: !3612)
!3659 = !DILocation(line: 2204, column: 1, scope: !3599)
!3660 = distinct !DISubprogram(name: "multiple_sets", scope: !3, file: !3, line: 1072, type: !2140, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3661)
!3661 = !{!3662, !3663, !3664}
!3662 = !DILocalVariable(name: "insn", arg: 1, scope: !3660, file: !3, line: 1072, type: !1673)
!3663 = !DILocalVariable(name: "found", scope: !3660, file: !3, line: 1074, type: !579)
!3664 = !DILocalVariable(name: "i", scope: !3660, file: !3, line: 1075, type: !579)
!3665 = !DILocation(line: 0, scope: !3660)
!3666 = !DILocation(line: 1078, column: 9, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1078, column: 7)
!3668 = !DILocation(line: 1078, column: 7, scope: !3660)
!3669 = !DILocation(line: 1082, column: 7, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1082, column: 7)
!3671 = !DILocation(line: 1082, column: 33, scope: !3670)
!3672 = !DILocation(line: 1082, column: 7, scope: !3660)
!3673 = !DILocation(line: 0, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 1084, column: 7)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1084, column: 7)
!3676 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 1083, column: 5)
!3677 = !DILocation(line: 1084, column: 7, scope: !3675)
!3678 = !DILocation(line: 0, scope: !3675)
!3679 = !DILocation(line: 1084, column: 32, scope: !3674)
!3680 = !DILocation(line: 1085, column: 6, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1085, column: 6)
!3682 = !DILocation(line: 1085, column: 48, scope: !3681)
!3683 = !DILocation(line: 1085, column: 6, scope: !3674)
!3684 = !DILocation(line: 1088, column: 10, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1088, column: 10)
!3686 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1086, column: 4)
!3687 = !DILocation(line: 1088, column: 10, scope: !3686)
!3688 = !DILocation(line: 1084, column: 64, scope: !3674)
!3689 = !DILocation(line: 1084, column: 7, scope: !3674)
!3690 = distinct !{!3690, !3677, !3691}
!3691 = !DILocation(line: 1092, column: 4, scope: !3675)
!3692 = !DILocation(line: 1097, column: 1, scope: !3660)
!3693 = distinct !DISubprogram(name: "set_noop_p", scope: !3, file: !3, line: 1103, type: !2140, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3694)
!3694 = !{!3695, !3696, !3697}
!3695 = !DILocalVariable(name: "set", arg: 1, scope: !3693, file: !3, line: 1103, type: !1673)
!3696 = !DILocalVariable(name: "src", scope: !3693, file: !3, line: 1105, type: !588)
!3697 = !DILocalVariable(name: "dst", scope: !3693, file: !3, line: 1106, type: !588)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 1105, column: 13, scope: !3693)
!3700 = !DILocation(line: 1106, column: 13, scope: !3693)
!3701 = !DILocation(line: 1108, column: 14, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1108, column: 7)
!3703 = !DILocation(line: 1108, column: 11, scope: !3702)
!3704 = !DILocation(line: 1108, column: 28, scope: !3702)
!3705 = !DILocation(line: 1108, column: 21, scope: !3702)
!3706 = !DILocation(line: 1111, column: 7, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1111, column: 7)
!3708 = !DILocation(line: 1111, column: 19, scope: !3707)
!3709 = !DILocation(line: 1111, column: 22, scope: !3707)
!3710 = !DILocation(line: 1111, column: 7, scope: !3693)
!3711 = !DILocation(line: 1112, column: 12, scope: !3707)
!3712 = !DILocation(line: 1112, column: 35, scope: !3707)
!3713 = !DILocation(line: 1112, column: 39, scope: !3707)
!3714 = !DILocation(line: 1112, column: 38, scope: !3707)
!3715 = !DILocation(line: 1112, column: 5, scope: !3707)
!3716 = !DILocation(line: 1114, column: 22, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1114, column: 7)
!3718 = !DILocation(line: 1114, column: 7, scope: !3693)
!3719 = !DILocation(line: 1115, column: 25, scope: !3717)
!3720 = !DILocation(line: 1115, column: 12, scope: !3717)
!3721 = !DILocation(line: 1116, column: 27, scope: !3717)
!3722 = !DILocation(line: 1116, column: 30, scope: !3717)
!3723 = !DILocation(line: 1116, column: 47, scope: !3717)
!3724 = !DILocation(line: 1116, column: 44, scope: !3717)
!3725 = !DILocation(line: 1117, column: 5, scope: !3717)
!3726 = !DILocation(line: 1117, column: 9, scope: !3717)
!3727 = !DILocation(line: 1117, column: 8, scope: !3717)
!3728 = !DILocation(line: 1115, column: 5, scope: !3717)
!3729 = !DILocation(line: 1119, column: 22, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1119, column: 7)
!3731 = !DILocation(line: 1119, column: 7, scope: !3693)
!3732 = !DILocation(line: 1120, column: 11, scope: !3730)
!3733 = !DILocation(line: 1120, column: 5, scope: !3730)
!3734 = !DILocation(line: 1122, column: 7, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1122, column: 7)
!3736 = !DILocation(line: 1122, column: 22, scope: !3735)
!3737 = !DILocation(line: 1122, column: 32, scope: !3735)
!3738 = !DILocation(line: 1122, column: 35, scope: !3735)
!3739 = !DILocation(line: 1122, column: 50, scope: !3735)
!3740 = !DILocation(line: 1122, column: 7, scope: !3693)
!3741 = !DILocation(line: 1124, column: 11, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1124, column: 11)
!3743 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1123, column: 5)
!3744 = !DILocation(line: 1124, column: 32, scope: !3742)
!3745 = !DILocation(line: 1124, column: 29, scope: !3742)
!3746 = !DILocation(line: 1124, column: 11, scope: !3743)
!3747 = !DILocation(line: 1126, column: 13, scope: !3743)
!3748 = !DILocation(line: 1127, column: 13, scope: !3743)
!3749 = !DILocation(line: 1130, column: 11, scope: !3693)
!3750 = !DILocation(line: 1128, column: 5, scope: !3743)
!3751 = !DILocation(line: 1130, column: 23, scope: !3693)
!3752 = !DILocation(line: 1130, column: 26, scope: !3693)
!3753 = !DILocation(line: 1131, column: 4, scope: !3693)
!3754 = !DILocation(line: 1131, column: 7, scope: !3693)
!3755 = !DILocation(line: 1131, column: 22, scope: !3693)
!3756 = !DILocation(line: 1131, column: 19, scope: !3693)
!3757 = !DILocation(line: 1130, column: 3, scope: !3693)
!3758 = !DILocation(line: 1132, column: 1, scope: !3693)
!3759 = distinct !DISubprogram(name: "noop_move_p", scope: !3, file: !3, line: 1138, type: !2140, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3760)
!3760 = !{!3761, !3762, !3763, !3766}
!3761 = !DILocalVariable(name: "insn", arg: 1, scope: !3759, file: !3, line: 1138, type: !1673)
!3762 = !DILocalVariable(name: "pat", scope: !3759, file: !3, line: 1140, type: !588)
!3763 = !DILocalVariable(name: "i", scope: !3764, file: !3, line: 1154, type: !579)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 1153, column: 5)
!3765 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1152, column: 7)
!3766 = !DILocalVariable(name: "tem", scope: !3767, file: !3, line: 1159, type: !588)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 1158, column: 2)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 1157, column: 7)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1157, column: 7)
!3770 = !DILocation(line: 0, scope: !3759)
!3771 = !DILocation(line: 1140, column: 13, scope: !3759)
!3772 = !DILocation(line: 1142, column: 7, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1142, column: 7)
!3774 = !DILocation(line: 1142, column: 24, scope: !3773)
!3775 = !DILocation(line: 1142, column: 7, scope: !3759)
!3776 = !DILocation(line: 1146, column: 7, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1146, column: 7)
!3778 = !DILocation(line: 1146, column: 7, scope: !3759)
!3779 = !DILocation(line: 1149, column: 7, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1149, column: 7)
!3781 = !DILocation(line: 1149, column: 22, scope: !3780)
!3782 = !DILocation(line: 1149, column: 29, scope: !3780)
!3783 = !DILocation(line: 1149, column: 32, scope: !3780)
!3784 = !DILocation(line: 1149, column: 7, scope: !3759)
!3785 = !DILocation(line: 1152, column: 7, scope: !3765)
!3786 = !DILocation(line: 1152, column: 22, scope: !3765)
!3787 = !DILocation(line: 1152, column: 7, scope: !3759)
!3788 = !DILocation(line: 0, scope: !3768)
!3789 = !DILocation(line: 1157, column: 7, scope: !3769)
!3790 = !DILocation(line: 0, scope: !3769)
!3791 = !DILocation(line: 0, scope: !3764)
!3792 = !DILocation(line: 1157, column: 23, scope: !3768)
!3793 = !DILocation(line: 1157, column: 21, scope: !3768)
!3794 = !DILocation(line: 1159, column: 14, scope: !3767)
!3795 = !DILocation(line: 0, scope: !3767)
!3796 = !DILocation(line: 1161, column: 8, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 1161, column: 8)
!3798 = !DILocation(line: 1161, column: 23, scope: !3797)
!3799 = !DILocation(line: 1162, column: 8, scope: !3797)
!3800 = !DILocation(line: 1162, column: 26, scope: !3797)
!3801 = !DILocation(line: 1161, column: 8, scope: !3767)
!3802 = !DILocation(line: 1165, column: 23, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 1165, column: 8)
!3804 = !DILocation(line: 1165, column: 30, scope: !3803)
!3805 = !DILocation(line: 1165, column: 35, scope: !3803)
!3806 = !DILocation(line: 1165, column: 8, scope: !3767)
!3807 = !DILocation(line: 1157, column: 42, scope: !3768)
!3808 = !DILocation(line: 1157, column: 7, scope: !3768)
!3809 = distinct !{!3809, !3789, !3810}
!3810 = !DILocation(line: 1167, column: 2, scope: !3769)
!3811 = !DILocation(line: 1172, column: 1, scope: !3759)
!3812 = distinct !DISubprogram(name: "find_last_value", scope: !3, file: !3, line: 1183, type: !3813, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!588, !588, !1657, !588, !579}
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821, !3826, !3827}
!3816 = !DILocalVariable(name: "x", arg: 1, scope: !3812, file: !3, line: 1183, type: !588)
!3817 = !DILocalVariable(name: "pinsn", arg: 2, scope: !3812, file: !3, line: 1183, type: !1657)
!3818 = !DILocalVariable(name: "valid_to", arg: 3, scope: !3812, file: !3, line: 1183, type: !588)
!3819 = !DILocalVariable(name: "allow_hwreg", arg: 4, scope: !3812, file: !3, line: 1183, type: !579)
!3820 = !DILocalVariable(name: "p", scope: !3812, file: !3, line: 1185, type: !588)
!3821 = !DILocalVariable(name: "set", scope: !3822, file: !3, line: 1191, type: !588)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 1190, column: 7)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1189, column: 9)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 1187, column: 3)
!3825 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1187, column: 3)
!3826 = !DILocalVariable(name: "note", scope: !3822, file: !3, line: 1192, type: !588)
!3827 = !DILocalVariable(name: "src", scope: !3828, file: !3, line: 1196, type: !588)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1195, column: 4)
!3829 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 1194, column: 6)
!3830 = !DILocation(line: 0, scope: !3812)
!3831 = !DILocation(line: 1187, column: 12, scope: !3825)
!3832 = !DILocation(line: 0, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1201, column: 10)
!3834 = !DILocation(line: 1187, column: 8, scope: !3825)
!3835 = !DILocation(line: 0, scope: !3825)
!3836 = !DILocation(line: 1187, column: 32, scope: !3824)
!3837 = !DILocation(line: 1187, column: 34, scope: !3824)
!3838 = !DILocation(line: 1187, column: 38, scope: !3824)
!3839 = !DILocation(line: 1187, column: 3, scope: !3825)
!3840 = !DILocation(line: 1189, column: 9, scope: !3823)
!3841 = !DILocation(line: 1189, column: 9, scope: !3824)
!3842 = !DILocation(line: 1191, column: 12, scope: !3822)
!3843 = !DILocation(line: 0, scope: !3822)
!3844 = !DILocation(line: 1192, column: 13, scope: !3822)
!3845 = !DILocation(line: 1194, column: 6, scope: !3829)
!3846 = !DILocation(line: 1194, column: 10, scope: !3829)
!3847 = !DILocation(line: 1194, column: 29, scope: !3829)
!3848 = !DILocation(line: 1194, column: 13, scope: !3829)
!3849 = !DILocation(line: 1194, column: 6, scope: !3822)
!3850 = !DILocation(line: 1196, column: 16, scope: !3828)
!3851 = !DILocation(line: 0, scope: !3828)
!3852 = !DILocation(line: 1198, column: 10, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1198, column: 10)
!3854 = !DILocation(line: 1198, column: 15, scope: !3853)
!3855 = !DILocation(line: 1198, column: 18, scope: !3853)
!3856 = !DILocation(line: 1198, column: 44, scope: !3853)
!3857 = !DILocation(line: 1198, column: 10, scope: !3828)
!3858 = !DILocation(line: 1199, column: 8, scope: !3853)
!3859 = !DILocation(line: 1205, column: 10, scope: !3833)
!3860 = !DILocation(line: 1206, column: 9, scope: !3833)
!3861 = !DILocation(line: 1206, column: 12, scope: !3833)
!3862 = !DILocation(line: 1206, column: 24, scope: !3833)
!3863 = !DILocation(line: 1206, column: 49, scope: !3833)
!3864 = !DILocation(line: 1208, column: 10, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 1207, column: 8)
!3866 = !DILocation(line: 1209, column: 3, scope: !3865)
!3867 = !DILocation(line: 1214, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 1214, column: 6)
!3869 = !DILocation(line: 0, scope: !3823)
!3870 = !DILocation(line: 1187, column: 3, scope: !3824)
!3871 = distinct !{!3871, !3839, !3872}
!3872 = !DILocation(line: 1216, column: 7, scope: !3825)
!3873 = !DILocation(line: 1218, column: 3, scope: !3812)
!3874 = !DILocation(line: 1219, column: 1, scope: !3812)
!3875 = !DILocation(line: 1202, column: 34, scope: !3833)
!3876 = !DILocation(line: 1202, column: 9, scope: !3833)
!3877 = !DILocation(line: 1205, column: 3, scope: !3833)
!3878 = distinct !DISubprogram(name: "refers_to_regno_p", scope: !3, file: !3, line: 1229, type: !3879, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3881)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!579, !7, !7, !1673, !1657}
!3881 = !{!3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3894, !3895, !3902}
!3882 = !DILocalVariable(name: "regno", arg: 1, scope: !3878, file: !3, line: 1229, type: !7)
!3883 = !DILocalVariable(name: "endregno", arg: 2, scope: !3878, file: !3, line: 1229, type: !7)
!3884 = !DILocalVariable(name: "x", arg: 3, scope: !3878, file: !3, line: 1229, type: !1673)
!3885 = !DILocalVariable(name: "loc", arg: 4, scope: !3878, file: !3, line: 1230, type: !1657)
!3886 = !DILocalVariable(name: "i", scope: !3878, file: !3, line: 1232, type: !579)
!3887 = !DILocalVariable(name: "x_regno", scope: !3878, file: !3, line: 1233, type: !7)
!3888 = !DILocalVariable(name: "code", scope: !3878, file: !3, line: 1234, type: !377)
!3889 = !DILocalVariable(name: "fmt", scope: !3878, file: !3, line: 1235, type: !584)
!3890 = !DILocalVariable(name: "inner_regno", scope: !3891, file: !3, line: 1269, type: !7)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 1268, column: 2)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 1266, column: 11)
!3893 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 1246, column: 5)
!3894 = !DILocalVariable(name: "inner_endregno", scope: !3891, file: !3, line: 1270, type: !7)
!3895 = !DILocalVariable(name: "j", scope: !3896, file: !3, line: 1321, type: !579)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1320, column: 2)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 1319, column: 16)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 1308, column: 11)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1307, column: 5)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 1306, column: 3)
!3901 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 1306, column: 3)
!3902 = !DILabel(scope: !3878, name: "repeat", file: !3, line: 1237)
!3903 = !DILocation(line: 0, scope: !3878)
!3904 = !DILocation(line: 1235, column: 3, scope: !3878)
!3905 = !DILocation(line: 1240, column: 7, scope: !3878)
!3906 = !DILocation(line: 1237, column: 2, scope: !3878)
!3907 = !DILocation(line: 1240, column: 9, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 1240, column: 7)
!3909 = !DILocation(line: 1243, column: 10, scope: !3878)
!3910 = !DILocation(line: 1245, column: 3, scope: !3878)
!3911 = !DILocation(line: 1248, column: 17, scope: !3893)
!3912 = !DILocation(line: 1255, column: 5, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 1253, column: 11)
!3914 = !DILocation(line: 1258, column: 39, scope: !3913)
!3915 = !DILocation(line: 1261, column: 23, scope: !3893)
!3916 = !DILocation(line: 1261, column: 33, scope: !3893)
!3917 = !DILocation(line: 1261, column: 44, scope: !3893)
!3918 = !DILocation(line: 1261, column: 42, scope: !3893)
!3919 = !DILocation(line: 1261, column: 7, scope: !3893)
!3920 = !DILocation(line: 1266, column: 11, scope: !3892)
!3921 = !DILocation(line: 1267, column: 4, scope: !3892)
!3922 = !DILocation(line: 1267, column: 7, scope: !3892)
!3923 = !DILocation(line: 1267, column: 30, scope: !3892)
!3924 = !DILocation(line: 1266, column: 11, scope: !3893)
!3925 = !DILocation(line: 1269, column: 31, scope: !3891)
!3926 = !DILocation(line: 0, scope: !3891)
!3927 = !DILocation(line: 1271, column: 35, scope: !3891)
!3928 = !DILocation(line: 1271, column: 23, scope: !3891)
!3929 = !DILocation(line: 1272, column: 11, scope: !3891)
!3930 = !DILocation(line: 1271, column: 20, scope: !3891)
!3931 = !DILocation(line: 1274, column: 20, scope: !3891)
!3932 = !DILocation(line: 1274, column: 34, scope: !3891)
!3933 = !DILocation(line: 1280, column: 12, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 1280, column: 11)
!3935 = !DILocation(line: 1280, column: 25, scope: !3934)
!3936 = !DILocation(line: 1284, column: 4, scope: !3934)
!3937 = !DILocation(line: 1284, column: 9, scope: !3934)
!3938 = !DILocation(line: 1284, column: 33, scope: !3934)
!3939 = !DILocation(line: 1285, column: 9, scope: !3934)
!3940 = !DILocation(line: 1285, column: 20, scope: !3934)
!3941 = !DILocation(line: 1285, column: 16, scope: !3934)
!3942 = !DILocation(line: 1286, column: 9, scope: !3934)
!3943 = !DILocation(line: 1286, column: 12, scope: !3934)
!3944 = !DILocation(line: 1287, column: 9, scope: !3934)
!3945 = !DILocation(line: 1287, column: 12, scope: !3934)
!3946 = !DILocation(line: 1287, column: 46, scope: !3934)
!3947 = !DILocation(line: 1288, column: 9, scope: !3934)
!3948 = !DILocation(line: 1289, column: 10, scope: !3934)
!3949 = !DILocation(line: 1288, column: 12, scope: !3934)
!3950 = !DILocation(line: 1290, column: 8, scope: !3934)
!3951 = !DILocation(line: 1290, column: 13, scope: !3934)
!3952 = !DILocation(line: 1291, column: 5, scope: !3934)
!3953 = !DILocation(line: 1291, column: 8, scope: !3934)
!3954 = !DILocation(line: 1280, column: 11, scope: !3893)
!3955 = !DILocation(line: 1294, column: 16, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 1294, column: 11)
!3957 = !DILocation(line: 1294, column: 27, scope: !3956)
!3958 = !DILocation(line: 1294, column: 38, scope: !3956)
!3959 = !DILocation(line: 1294, column: 34, scope: !3956)
!3960 = !DILocation(line: 1294, column: 11, scope: !3893)
!3961 = !DILocation(line: 1296, column: 11, scope: !3893)
!3962 = !DILocation(line: 1297, column: 7, scope: !3893)
!3963 = !DILocation(line: 1305, column: 9, scope: !3878)
!3964 = !DILocation(line: 1306, column: 12, scope: !3901)
!3965 = !DILocation(line: 0, scope: !3898)
!3966 = !DILocation(line: 1306, column: 8, scope: !3901)
!3967 = !DILocation(line: 0, scope: !3901)
!3968 = !DILocation(line: 1306, column: 41, scope: !3900)
!3969 = !DILocation(line: 1306, column: 3, scope: !3901)
!3970 = !DILocation(line: 1308, column: 11, scope: !3898)
!3971 = !DILocation(line: 1308, column: 18, scope: !3898)
!3972 = !DILocation(line: 1308, column: 25, scope: !3898)
!3973 = !DILocation(line: 1308, column: 36, scope: !3898)
!3974 = !DILocation(line: 1308, column: 32, scope: !3898)
!3975 = !DILocation(line: 1308, column: 11, scope: !3899)
!3976 = !DILocation(line: 1310, column: 8, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 1309, column: 2)
!3978 = !DILocation(line: 1312, column: 12, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1311, column: 6)
!3980 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1310, column: 8)
!3981 = !DILocation(line: 1313, column: 8, scope: !3979)
!3982 = !DILocation(line: 1316, column: 46, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1316, column: 10)
!3984 = !DILocation(line: 1316, column: 10, scope: !3983)
!3985 = !DILocation(line: 1316, column: 10, scope: !3980)
!3986 = !DILocation(line: 1319, column: 23, scope: !3897)
!3987 = !DILocation(line: 1319, column: 16, scope: !3898)
!3988 = !DILocation(line: 1322, column: 13, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 1322, column: 4)
!3990 = !DILocation(line: 0, scope: !3896)
!3991 = !DILocation(line: 1322, column: 9, scope: !3989)
!3992 = !DILocation(line: 0, scope: !3989)
!3993 = !DILocation(line: 1322, column: 35, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 1322, column: 4)
!3995 = !DILocation(line: 1322, column: 4, scope: !3989)
!3996 = !DILocation(line: 1323, column: 18, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 1323, column: 10)
!3998 = !DILocation(line: 1323, column: 14, scope: !3997)
!3999 = !DILocation(line: 1324, column: 3, scope: !3997)
!4000 = !DILocation(line: 1324, column: 42, scope: !3997)
!4001 = !DILocation(line: 1324, column: 6, scope: !3997)
!4002 = !DILocation(line: 1323, column: 10, scope: !3994)
!4003 = !DILocation(line: 1322, column: 4, scope: !3994)
!4004 = distinct !{!4004, !3995, !4005}
!4005 = !DILocation(line: 1325, column: 15, scope: !3989)
!4006 = !DILocation(line: 1306, column: 3, scope: !3900)
!4007 = distinct !{!4007, !3969, !4008}
!4008 = !DILocation(line: 1327, column: 5, scope: !3901)
!4009 = !DILocation(line: 1329, column: 1, scope: !3878)
!4010 = distinct !DISubprogram(name: "end_hard_regno", scope: !3215, file: !3215, line: 290, type: !4011, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4013)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!7, !5, !7}
!4013 = !{!4014, !4015}
!4014 = !DILocalVariable(name: "mode", arg: 1, scope: !4010, file: !3215, line: 290, type: !5)
!4015 = !DILocalVariable(name: "regno", arg: 2, scope: !4010, file: !3215, line: 290, type: !7)
!4016 = !DILocation(line: 0, scope: !4010)
!4017 = !DILocation(line: 292, column: 18, scope: !4010)
!4018 = !DILocation(line: 292, column: 16, scope: !4010)
!4019 = !DILocation(line: 292, column: 3, scope: !4010)
!4020 = distinct !DISubprogram(name: "subreg_regno", scope: !3, file: !3, line: 3334, type: !2483, scopeLine: 3335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4021)
!4021 = !{!4022, !4023, !4024, !4025}
!4022 = !DILocalVariable(name: "x", arg: 1, scope: !4020, file: !3, line: 3334, type: !1673)
!4023 = !DILocalVariable(name: "ret", scope: !4020, file: !3, line: 3336, type: !7)
!4024 = !DILocalVariable(name: "subreg", scope: !4020, file: !3, line: 3337, type: !588)
!4025 = !DILocalVariable(name: "regno", scope: !4020, file: !3, line: 3338, type: !579)
!4026 = !DILocation(line: 0, scope: !4020)
!4027 = !DILocation(line: 3337, column: 16, scope: !4020)
!4028 = !DILocation(line: 3338, column: 15, scope: !4020)
!4029 = !DILocation(line: 3341, column: 10, scope: !4020)
!4030 = !DILocation(line: 3342, column: 10, scope: !4020)
!4031 = !DILocation(line: 3343, column: 10, scope: !4020)
!4032 = !DILocation(line: 3340, column: 17, scope: !4020)
!4033 = !DILocation(line: 3340, column: 15, scope: !4020)
!4034 = !DILocation(line: 3344, column: 3, scope: !4020)
!4035 = distinct !DISubprogram(name: "subreg_nregs", scope: !3, file: !3, line: 3351, type: !2483, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4036)
!4036 = !{!4037}
!4037 = !DILocalVariable(name: "x", arg: 1, scope: !4035, file: !3, line: 3351, type: !1673)
!4038 = !DILocation(line: 0, scope: !4035)
!4039 = !DILocation(line: 3353, column: 35, scope: !4035)
!4040 = !DILocation(line: 3353, column: 10, scope: !4035)
!4041 = !DILocation(line: 3353, column: 3, scope: !4035)
!4042 = distinct !DISubprogram(name: "note_uses", scope: !3, file: !3, line: 1479, type: !4043, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4048)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{null, !1657, !4045, !583}
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{null, !1657, !583}
!4048 = !{!4049, !4050, !4051, !4052, !4053, !4054}
!4049 = !DILocalVariable(name: "pbody", arg: 1, scope: !4042, file: !3, line: 1479, type: !1657)
!4050 = !DILocalVariable(name: "fun", arg: 2, scope: !4042, file: !3, line: 1479, type: !4045)
!4051 = !DILocalVariable(name: "data", arg: 3, scope: !4042, file: !3, line: 1479, type: !583)
!4052 = !DILocalVariable(name: "body", scope: !4042, file: !3, line: 1481, type: !588)
!4053 = !DILocalVariable(name: "i", scope: !4042, file: !3, line: 1482, type: !579)
!4054 = !DILocalVariable(name: "dest", scope: !4055, file: !3, line: 1531, type: !588)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1530, column: 7)
!4056 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 1485, column: 5)
!4057 = !DILocation(line: 1488, column: 7, scope: !4056)
!4058 = !DILocation(line: 0, scope: !4042)
!4059 = !DILocation(line: 1481, column: 14, scope: !4042)
!4060 = !DILocation(line: 1484, column: 11, scope: !4042)
!4061 = !DILocation(line: 1484, column: 3, scope: !4042)
!4062 = !DILocation(line: 1487, column: 16, scope: !4056)
!4063 = !DILocation(line: 1487, column: 7, scope: !4056)
!4064 = !DILocation(line: 1488, column: 19, scope: !4056)
!4065 = !DILocation(line: 1492, column: 16, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1492, column: 7)
!4067 = !DILocation(line: 1492, column: 12, scope: !4066)
!4068 = !DILocation(line: 0, scope: !4066)
!4069 = !DILocation(line: 1492, column: 41, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1492, column: 7)
!4071 = !DILocation(line: 1492, column: 7, scope: !4066)
!4072 = !DILocation(line: 1493, column: 14, scope: !4070)
!4073 = !DILocation(line: 1493, column: 2, scope: !4070)
!4074 = !DILocation(line: 1492, column: 7, scope: !4070)
!4075 = distinct !{!4075, !4071, !4076}
!4076 = !DILocation(line: 1493, column: 45, scope: !4066)
!4077 = !DILocation(line: 1497, column: 16, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1497, column: 7)
!4079 = !DILocation(line: 1497, column: 12, scope: !4078)
!4080 = !DILocation(line: 0, scope: !4078)
!4081 = !DILocation(line: 1497, column: 41, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 1497, column: 7)
!4083 = !DILocation(line: 1497, column: 7, scope: !4078)
!4084 = !DILocation(line: 1498, column: 14, scope: !4082)
!4085 = !DILocation(line: 1498, column: 2, scope: !4082)
!4086 = !DILocation(line: 1497, column: 7, scope: !4082)
!4087 = distinct !{!4087, !4083, !4088}
!4088 = !DILocation(line: 1498, column: 55, scope: !4078)
!4089 = !DILocation(line: 1502, column: 16, scope: !4056)
!4090 = !DILocation(line: 1502, column: 7, scope: !4056)
!4091 = !DILocation(line: 1503, column: 7, scope: !4056)
!4092 = !DILocation(line: 1506, column: 16, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1506, column: 7)
!4094 = !DILocation(line: 1506, column: 12, scope: !4093)
!4095 = !DILocation(line: 0, scope: !4093)
!4096 = !DILocation(line: 1506, column: 56, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1506, column: 7)
!4098 = !DILocation(line: 1506, column: 7, scope: !4093)
!4099 = !DILocation(line: 1507, column: 11, scope: !4097)
!4100 = !DILocation(line: 1507, column: 2, scope: !4097)
!4101 = !DILocation(line: 1506, column: 7, scope: !4097)
!4102 = distinct !{!4102, !4098, !4103}
!4103 = !DILocation(line: 1507, column: 45, scope: !4093)
!4104 = !DILocation(line: 1511, column: 16, scope: !4056)
!4105 = !DILocation(line: 1511, column: 7, scope: !4056)
!4106 = !DILocation(line: 1512, column: 7, scope: !4056)
!4107 = !DILocation(line: 1515, column: 16, scope: !4056)
!4108 = !DILocation(line: 1515, column: 7, scope: !4056)
!4109 = !DILocation(line: 1516, column: 7, scope: !4056)
!4110 = !DILocation(line: 1520, column: 16, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1520, column: 7)
!4112 = !DILocation(line: 1520, column: 12, scope: !4111)
!4113 = !DILocation(line: 0, scope: !4111)
!4114 = !DILocation(line: 1520, column: 41, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 1520, column: 7)
!4116 = !DILocation(line: 1520, column: 7, scope: !4111)
!4117 = !DILocation(line: 1521, column: 11, scope: !4115)
!4118 = !DILocation(line: 1521, column: 2, scope: !4115)
!4119 = !DILocation(line: 1520, column: 7, scope: !4115)
!4120 = distinct !{!4120, !4116, !4121}
!4121 = !DILocation(line: 1521, column: 37, scope: !4111)
!4122 = !DILocation(line: 1525, column: 11, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1525, column: 11)
!4124 = !DILocation(line: 1525, column: 11, scope: !4056)
!4125 = !DILocation(line: 1526, column: 11, scope: !4123)
!4126 = !DILocation(line: 1526, column: 2, scope: !4123)
!4127 = !DILocation(line: 1531, column: 13, scope: !4055)
!4128 = !DILocation(line: 0, scope: !4055)
!4129 = !DILocation(line: 1535, column: 11, scope: !4055)
!4130 = !DILocation(line: 1535, column: 2, scope: !4055)
!4131 = !DILocation(line: 1537, column: 6, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1537, column: 6)
!4133 = !DILocation(line: 1537, column: 22, scope: !4132)
!4134 = !DILocation(line: 1537, column: 6, scope: !4055)
!4135 = !DILocation(line: 1539, column: 15, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1538, column: 4)
!4137 = !DILocation(line: 1539, column: 6, scope: !4136)
!4138 = !DILocation(line: 1540, column: 15, scope: !4136)
!4139 = !DILocation(line: 1540, column: 6, scope: !4136)
!4140 = !DILocation(line: 1541, column: 4, scope: !4136)
!4141 = !DILocation(line: 1543, column: 2, scope: !4055)
!4142 = !DILocation(line: 1543, column: 9, scope: !4055)
!4143 = !DILocation(line: 1543, column: 35, scope: !4055)
!4144 = !DILocation(line: 1544, column: 11, scope: !4055)
!4145 = distinct !{!4145, !4141, !4144}
!4146 = !DILocation(line: 1546, column: 6, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1546, column: 6)
!4148 = !DILocation(line: 1546, column: 6, scope: !4055)
!4149 = !DILocation(line: 1547, column: 13, scope: !4147)
!4150 = !DILocation(line: 1547, column: 4, scope: !4147)
!4151 = !DILocation(line: 1553, column: 7, scope: !4056)
!4152 = !DILocation(line: 1554, column: 7, scope: !4056)
!4153 = !DILocation(line: 1556, column: 1, scope: !4042)
!4154 = distinct !DISubprogram(name: "dead_or_set_p", scope: !3, file: !3, line: 1576, type: !2763, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4155)
!4155 = !{!4156, !4157, !4158, !4159, !4160}
!4156 = !DILocalVariable(name: "insn", arg: 1, scope: !4154, file: !3, line: 1576, type: !1673)
!4157 = !DILocalVariable(name: "x", arg: 2, scope: !4154, file: !3, line: 1576, type: !1673)
!4158 = !DILocalVariable(name: "regno", scope: !4154, file: !3, line: 1578, type: !7)
!4159 = !DILocalVariable(name: "end_regno", scope: !4154, file: !3, line: 1578, type: !7)
!4160 = !DILocalVariable(name: "i", scope: !4154, file: !3, line: 1579, type: !7)
!4161 = !DILocation(line: 0, scope: !4154)
!4162 = !DILocation(line: 1582, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1582, column: 7)
!4164 = !DILocation(line: 1582, column: 20, scope: !4163)
!4165 = !DILocation(line: 1582, column: 7, scope: !4154)
!4166 = !DILocation(line: 1585, column: 3, scope: !4154)
!4167 = !DILocation(line: 1587, column: 11, scope: !4154)
!4168 = !DILocation(line: 1588, column: 15, scope: !4154)
!4169 = !DILocation(line: 1589, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1589, column: 3)
!4171 = !DILocation(line: 0, scope: !4170)
!4172 = !DILocation(line: 1589, column: 21, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 1589, column: 3)
!4174 = !DILocation(line: 1589, column: 3, scope: !4170)
!4175 = !DILocation(line: 1590, column: 11, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1590, column: 9)
!4177 = !DILocation(line: 1590, column: 9, scope: !4173)
!4178 = !DILocation(line: 1589, column: 35, scope: !4173)
!4179 = !DILocation(line: 1589, column: 3, scope: !4173)
!4180 = distinct !{!4180, !4174, !4181}
!4181 = !DILocation(line: 1591, column: 14, scope: !4170)
!4182 = !DILocation(line: 1594, column: 1, scope: !4154)
!4183 = distinct !DISubprogram(name: "dead_or_set_regno_p", scope: !3, file: !3, line: 1650, type: !4184, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4186)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!579, !1673, !7}
!4186 = !{!4187, !4188, !4189, !4190, !4194}
!4187 = !DILocalVariable(name: "insn", arg: 1, scope: !4183, file: !3, line: 1650, type: !1673)
!4188 = !DILocalVariable(name: "test_regno", arg: 2, scope: !4183, file: !3, line: 1650, type: !7)
!4189 = !DILocalVariable(name: "pattern", scope: !4183, file: !3, line: 1652, type: !1673)
!4190 = !DILocalVariable(name: "i", scope: !4191, file: !3, line: 1671, type: !579)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1670, column: 5)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 1669, column: 12)
!4193 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1667, column: 7)
!4194 = !DILocalVariable(name: "body", scope: !4195, file: !3, line: 1675, type: !588)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 1674, column: 2)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 1673, column: 7)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1673, column: 7)
!4198 = !DILocation(line: 0, scope: !4183)
!4199 = !DILocation(line: 1655, column: 7, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1655, column: 7)
!4201 = !DILocation(line: 1655, column: 7, scope: !4183)
!4202 = !DILocation(line: 1658, column: 7, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1658, column: 7)
!4204 = !DILocation(line: 1659, column: 7, scope: !4203)
!4205 = !DILocation(line: 1659, column: 10, scope: !4203)
!4206 = !DILocation(line: 1658, column: 7, scope: !4183)
!4207 = !DILocation(line: 1662, column: 13, scope: !4183)
!4208 = !DILocation(line: 1664, column: 7, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1664, column: 7)
!4210 = !DILocation(line: 1664, column: 26, scope: !4209)
!4211 = !DILocation(line: 1664, column: 7, scope: !4183)
!4212 = !DILocation(line: 1665, column: 15, scope: !4209)
!4213 = !DILocation(line: 0, scope: !4193)
!4214 = !DILocation(line: 1667, column: 7, scope: !4193)
!4215 = !DILocation(line: 1665, column: 5, scope: !4209)
!4216 = !DILocation(line: 1667, column: 26, scope: !4193)
!4217 = !DILocation(line: 1667, column: 7, scope: !4183)
!4218 = !DILocation(line: 1668, column: 28, scope: !4193)
!4219 = !DILocation(line: 1668, column: 12, scope: !4193)
!4220 = !DILocation(line: 1668, column: 5, scope: !4193)
!4221 = !DILocation(line: 1669, column: 31, scope: !4192)
!4222 = !DILocation(line: 1669, column: 12, scope: !4193)
!4223 = !DILocation(line: 1673, column: 16, scope: !4197)
!4224 = !DILocation(line: 0, scope: !4191)
!4225 = !DILocation(line: 1673, column: 12, scope: !4197)
!4226 = !DILocation(line: 0, scope: !4197)
!4227 = !DILocation(line: 1673, column: 44, scope: !4196)
!4228 = !DILocation(line: 1673, column: 7, scope: !4197)
!4229 = !DILocation(line: 1675, column: 15, scope: !4195)
!4230 = !DILocation(line: 0, scope: !4195)
!4231 = !DILocation(line: 1677, column: 8, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 1677, column: 8)
!4233 = !DILocation(line: 1677, column: 24, scope: !4232)
!4234 = !DILocation(line: 1677, column: 8, scope: !4195)
!4235 = !DILocation(line: 1678, column: 13, scope: !4232)
!4236 = !DILocation(line: 0, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 1680, column: 8)
!4238 = !DILocation(line: 1680, column: 9, scope: !4237)
!4239 = !DILocation(line: 1678, column: 6, scope: !4232)
!4240 = !DILocation(line: 1680, column: 25, scope: !4237)
!4241 = !DILocation(line: 1680, column: 32, scope: !4237)
!4242 = !DILocation(line: 1680, column: 51, scope: !4237)
!4243 = !DILocation(line: 1681, column: 8, scope: !4237)
!4244 = !DILocation(line: 1681, column: 27, scope: !4237)
!4245 = !DILocation(line: 1681, column: 11, scope: !4237)
!4246 = !DILocation(line: 1680, column: 8, scope: !4195)
!4247 = !DILocation(line: 1683, column: 2, scope: !4196)
!4248 = !DILocation(line: 1673, column: 7, scope: !4196)
!4249 = distinct !{!4249, !4228, !4250}
!4250 = !DILocation(line: 1683, column: 2, scope: !4197)
!4251 = !DILocation(line: 1686, column: 3, scope: !4183)
!4252 = !DILocation(line: 1687, column: 1, scope: !4183)
!4253 = distinct !DISubprogram(name: "find_regno_note", scope: !3, file: !3, line: 1722, type: !4254, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!588, !1673, !520, !7}
!4256 = !{!4257, !4258, !4259, !4260}
!4257 = !DILocalVariable(name: "insn", arg: 1, scope: !4253, file: !3, line: 1722, type: !1673)
!4258 = !DILocalVariable(name: "kind", arg: 2, scope: !4253, file: !3, line: 1722, type: !520)
!4259 = !DILocalVariable(name: "regno", arg: 3, scope: !4253, file: !3, line: 1722, type: !7)
!4260 = !DILocalVariable(name: "link", scope: !4253, file: !3, line: 1724, type: !588)
!4261 = !DILocation(line: 0, scope: !4253)
!4262 = !DILocation(line: 1727, column: 9, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1727, column: 7)
!4264 = !DILocation(line: 1727, column: 7, scope: !4253)
!4265 = !DILocation(line: 1730, column: 15, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1730, column: 3)
!4267 = !DILocation(line: 1730, column: 8, scope: !4266)
!4268 = !DILocation(line: 0, scope: !4266)
!4269 = !DILocation(line: 1730, column: 3, scope: !4266)
!4270 = !DILocation(line: 1731, column: 9, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 1731, column: 9)
!4272 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 1730, column: 3)
!4273 = !DILocation(line: 1731, column: 30, scope: !4271)
!4274 = !DILocation(line: 1734, column: 2, scope: !4271)
!4275 = !DILocation(line: 1734, column: 5, scope: !4271)
!4276 = !DILocation(line: 1735, column: 2, scope: !4271)
!4277 = !DILocation(line: 1735, column: 5, scope: !4271)
!4278 = !DILocation(line: 1735, column: 28, scope: !4271)
!4279 = !DILocation(line: 1736, column: 2, scope: !4271)
!4280 = !DILocation(line: 1736, column: 5, scope: !4271)
!4281 = !DILocation(line: 1736, column: 32, scope: !4271)
!4282 = !DILocation(line: 1731, column: 9, scope: !4272)
!4283 = !DILocation(line: 1730, column: 46, scope: !4272)
!4284 = !DILocation(line: 1730, column: 3, scope: !4272)
!4285 = distinct !{!4285, !4269, !4286}
!4286 = !DILocation(line: 1737, column: 14, scope: !4266)
!4287 = !DILocation(line: 1739, column: 1, scope: !4253)
!4288 = distinct !DISubprogram(name: "find_regno_fusage", scope: !3, file: !3, line: 1842, type: !4289, scopeLine: 1843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4291)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!579, !1673, !377, !7}
!4291 = !{!4292, !4293, !4294, !4295, !4296, !4300}
!4292 = !DILocalVariable(name: "insn", arg: 1, scope: !4288, file: !3, line: 1842, type: !1673)
!4293 = !DILocalVariable(name: "code", arg: 2, scope: !4288, file: !3, line: 1842, type: !377)
!4294 = !DILocalVariable(name: "regno", arg: 3, scope: !4288, file: !3, line: 1842, type: !7)
!4295 = !DILocalVariable(name: "link", scope: !4288, file: !3, line: 1844, type: !588)
!4296 = !DILocalVariable(name: "op", scope: !4297, file: !3, line: 1855, type: !588)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1854, column: 5)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 1853, column: 3)
!4299 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 1853, column: 3)
!4300 = !DILocalVariable(name: "reg", scope: !4297, file: !3, line: 1855, type: !588)
!4301 = !DILocation(line: 0, scope: !4288)
!4302 = !DILocation(line: 1849, column: 13, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 1849, column: 7)
!4304 = !DILocation(line: 1850, column: 7, scope: !4303)
!4305 = !DILocation(line: 1850, column: 11, scope: !4303)
!4306 = !DILocation(line: 1849, column: 7, scope: !4288)
!4307 = !DILocation(line: 1853, column: 15, scope: !4299)
!4308 = !DILocation(line: 1853, column: 8, scope: !4299)
!4309 = !DILocation(line: 0, scope: !4299)
!4310 = !DILocation(line: 1853, column: 3, scope: !4299)
!4311 = !DILocation(line: 1857, column: 11, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1857, column: 11)
!4313 = !DILocation(line: 0, scope: !4297)
!4314 = !DILocation(line: 1857, column: 42, scope: !4312)
!4315 = !DILocation(line: 1858, column: 4, scope: !4312)
!4316 = !DILocation(line: 1858, column: 7, scope: !4312)
!4317 = !DILocation(line: 1859, column: 4, scope: !4312)
!4318 = !DILocation(line: 1859, column: 7, scope: !4312)
!4319 = !DILocation(line: 1859, column: 19, scope: !4312)
!4320 = !DILocation(line: 1860, column: 4, scope: !4312)
!4321 = !DILocation(line: 1860, column: 7, scope: !4312)
!4322 = !DILocation(line: 1860, column: 28, scope: !4312)
!4323 = !DILocation(line: 1857, column: 11, scope: !4297)
!4324 = !DILocation(line: 1862, column: 5, scope: !4298)
!4325 = !DILocation(line: 1853, column: 61, scope: !4298)
!4326 = !DILocation(line: 1853, column: 3, scope: !4298)
!4327 = distinct !{!4327, !4310, !4328}
!4328 = !DILocation(line: 1862, column: 5, scope: !4299)
!4329 = !DILocation(line: 1865, column: 1, scope: !4288)
!4330 = distinct !DISubprogram(name: "covers_regno_p", scope: !3, file: !3, line: 1624, type: !4331, scopeLine: 1625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4333)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!578, !1673, !7}
!4333 = !{!4334, !4335, !4336, !4339}
!4334 = !DILocalVariable(name: "dest", arg: 1, scope: !4330, file: !3, line: 1624, type: !1673)
!4335 = !DILocalVariable(name: "test_regno", arg: 2, scope: !4330, file: !3, line: 1624, type: !7)
!4336 = !DILocalVariable(name: "i", scope: !4337, file: !3, line: 1631, type: !579)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1627, column: 5)
!4338 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1626, column: 7)
!4339 = !DILocalVariable(name: "inner", scope: !4340, file: !3, line: 1635, type: !588)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1634, column: 2)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 1633, column: 7)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1633, column: 7)
!4343 = !DILocation(line: 0, scope: !4330)
!4344 = !DILocation(line: 1626, column: 7, scope: !4338)
!4345 = !DILocation(line: 1626, column: 23, scope: !4338)
!4346 = !DILocation(line: 1626, column: 7, scope: !4330)
!4347 = !DILocation(line: 1633, column: 16, scope: !4342)
!4348 = !DILocation(line: 0, scope: !4337)
!4349 = !DILocation(line: 1633, column: 12, scope: !4342)
!4350 = !DILocation(line: 0, scope: !4342)
!4351 = !DILocation(line: 1633, column: 41, scope: !4341)
!4352 = !DILocation(line: 1633, column: 7, scope: !4342)
!4353 = !DILocation(line: 1635, column: 16, scope: !4340)
!4354 = !DILocation(line: 0, scope: !4340)
!4355 = !DILocation(line: 1636, column: 14, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 1636, column: 8)
!4357 = !DILocation(line: 1637, column: 8, scope: !4356)
!4358 = !DILocation(line: 1637, column: 11, scope: !4356)
!4359 = !DILocation(line: 1636, column: 8, scope: !4340)
!4360 = !DILocation(line: 1639, column: 2, scope: !4341)
!4361 = !DILocation(line: 1633, column: 7, scope: !4341)
!4362 = distinct !{!4362, !4352, !4363}
!4363 = !DILocation(line: 1639, column: 2, scope: !4342)
!4364 = !DILocation(line: 1644, column: 12, scope: !4338)
!4365 = !DILocation(line: 1644, column: 5, scope: !4338)
!4366 = !DILocation(line: 1645, column: 1, scope: !4330)
!4367 = !DILocation(line: 0, scope: !4338)
!4368 = distinct !DISubprogram(name: "find_reg_equal_equiv_note", scope: !3, file: !3, line: 1745, type: !2583, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4369)
!4369 = !{!4370, !4371}
!4370 = !DILocalVariable(name: "insn", arg: 1, scope: !4368, file: !3, line: 1745, type: !1673)
!4371 = !DILocalVariable(name: "link", scope: !4368, file: !3, line: 1747, type: !588)
!4372 = !DILocation(line: 0, scope: !4368)
!4373 = !DILocation(line: 1749, column: 8, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 1749, column: 7)
!4375 = !DILocation(line: 1749, column: 7, scope: !4368)
!4376 = !DILocation(line: 1752, column: 15, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 1752, column: 3)
!4378 = !DILocation(line: 1752, column: 8, scope: !4377)
!4379 = !DILocation(line: 0, scope: !4377)
!4380 = !DILocation(line: 1752, column: 3, scope: !4377)
!4381 = !DILocation(line: 1753, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1753, column: 9)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1752, column: 3)
!4384 = !DILocation(line: 1753, column: 30, scope: !4382)
!4385 = !DILocation(line: 1754, column: 2, scope: !4382)
!4386 = !DILocation(line: 1754, column: 26, scope: !4382)
!4387 = !DILocation(line: 1753, column: 9, scope: !4383)
!4388 = !DILocation(line: 1762, column: 6, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 1762, column: 6)
!4390 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1755, column: 7)
!4391 = !DILocation(line: 1762, column: 32, scope: !4389)
!4392 = !DILocation(line: 1762, column: 44, scope: !4389)
!4393 = !DILocation(line: 1762, column: 47, scope: !4389)
!4394 = !DILocation(line: 1762, column: 6, scope: !4390)
!4395 = !DILocation(line: 1764, column: 2, scope: !4390)
!4396 = !DILocation(line: 1752, column: 46, scope: !4383)
!4397 = !DILocation(line: 1752, column: 3, scope: !4383)
!4398 = distinct !{!4398, !4380, !4399}
!4399 = !DILocation(line: 1765, column: 7, scope: !4377)
!4400 = !DILocation(line: 1767, column: 1, scope: !4368)
!4401 = distinct !DISubprogram(name: "find_constant_src", scope: !3, file: !3, line: 1774, type: !2583, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4402)
!4402 = !{!4403, !4404, !4405, !4406}
!4403 = !DILocalVariable(name: "insn", arg: 1, scope: !4401, file: !3, line: 1774, type: !1673)
!4404 = !DILocalVariable(name: "note", scope: !4401, file: !3, line: 1776, type: !588)
!4405 = !DILocalVariable(name: "set", scope: !4401, file: !3, line: 1776, type: !588)
!4406 = !DILocalVariable(name: "x", scope: !4401, file: !3, line: 1776, type: !588)
!4407 = !DILocation(line: 0, scope: !4401)
!4408 = !DILocation(line: 1778, column: 9, scope: !4401)
!4409 = !DILocation(line: 1779, column: 7, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1779, column: 7)
!4411 = !DILocation(line: 1779, column: 7, scope: !4401)
!4412 = !DILocation(line: 1781, column: 42, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1780, column: 5)
!4414 = !DILocation(line: 1781, column: 11, scope: !4413)
!4415 = !DILocation(line: 1782, column: 11, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 1782, column: 11)
!4417 = !DILocation(line: 1782, column: 11, scope: !4413)
!4418 = !DILocation(line: 1786, column: 10, scope: !4401)
!4419 = !DILocation(line: 1787, column: 7, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 1787, column: 7)
!4421 = !DILocation(line: 1787, column: 12, scope: !4420)
!4422 = !DILocation(line: 1787, column: 15, scope: !4420)
!4423 = !DILocation(line: 1787, column: 7, scope: !4401)
!4424 = !DILocation(line: 1788, column: 5, scope: !4420)
!4425 = !DILocation(line: 1791, column: 1, scope: !4401)
!4426 = distinct !DISubprogram(name: "alloc_reg_note", scope: !3, file: !3, line: 1872, type: !4427, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4429)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!588, !520, !588, !588}
!4429 = !{!4430, !4431, !4432, !4433}
!4430 = !DILocalVariable(name: "kind", arg: 1, scope: !4426, file: !3, line: 1872, type: !520)
!4431 = !DILocalVariable(name: "datum", arg: 2, scope: !4426, file: !3, line: 1872, type: !588)
!4432 = !DILocalVariable(name: "list", arg: 3, scope: !4426, file: !3, line: 1872, type: !588)
!4433 = !DILocalVariable(name: "note", scope: !4426, file: !3, line: 1874, type: !588)
!4434 = !DILocation(line: 0, scope: !4426)
!4435 = !DILocation(line: 1876, column: 3, scope: !4426)
!4436 = !DILocation(line: 1885, column: 14, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1877, column: 5)
!4438 = !DILocation(line: 1886, column: 7, scope: !4437)
!4439 = !DILocation(line: 1887, column: 7, scope: !4437)
!4440 = !DILocation(line: 1890, column: 14, scope: !4437)
!4441 = !DILocation(line: 1891, column: 7, scope: !4437)
!4442 = !DILocation(line: 0, scope: !4437)
!4443 = !DILocation(line: 1894, column: 3, scope: !4426)
!4444 = distinct !DISubprogram(name: "add_reg_note", scope: !3, file: !3, line: 1900, type: !4445, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{null, !588, !520, !588}
!4447 = !{!4448, !4449, !4450}
!4448 = !DILocalVariable(name: "insn", arg: 1, scope: !4444, file: !3, line: 1900, type: !588)
!4449 = !DILocalVariable(name: "kind", arg: 2, scope: !4444, file: !3, line: 1900, type: !520)
!4450 = !DILocalVariable(name: "datum", arg: 3, scope: !4444, file: !3, line: 1900, type: !588)
!4451 = !DILocation(line: 0, scope: !4444)
!4452 = !DILocation(line: 1902, column: 51, scope: !4444)
!4453 = !DILocation(line: 1902, column: 22, scope: !4444)
!4454 = !DILocation(line: 1902, column: 20, scope: !4444)
!4455 = !DILocation(line: 1903, column: 1, scope: !4444)
!4456 = distinct !DISubprogram(name: "remove_note", scope: !3, file: !3, line: 1908, type: !4457, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{null, !588, !1673}
!4459 = !{!4460, !4461, !4462}
!4460 = !DILocalVariable(name: "insn", arg: 1, scope: !4456, file: !3, line: 1908, type: !588)
!4461 = !DILocalVariable(name: "note", arg: 2, scope: !4456, file: !3, line: 1908, type: !1673)
!4462 = !DILocalVariable(name: "link", scope: !4456, file: !3, line: 1910, type: !588)
!4463 = !DILocation(line: 0, scope: !4456)
!4464 = !DILocation(line: 1912, column: 12, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1912, column: 7)
!4466 = !DILocation(line: 1912, column: 7, scope: !4456)
!4467 = !DILocation(line: 1915, column: 7, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1915, column: 7)
!4469 = !DILocation(line: 1915, column: 24, scope: !4468)
!4470 = !DILocation(line: 1915, column: 7, scope: !4456)
!4471 = !DILocation(line: 1916, column: 24, scope: !4468)
!4472 = !DILocation(line: 1916, column: 22, scope: !4468)
!4473 = !DILocation(line: 1916, column: 5, scope: !4468)
!4474 = !DILocation(line: 1918, column: 10, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 1918, column: 5)
!4476 = !DILocation(line: 0, scope: !4475)
!4477 = !DILocation(line: 1918, column: 5, scope: !4475)
!4478 = !DILocation(line: 1919, column: 11, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 1919, column: 11)
!4480 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 1918, column: 5)
!4481 = !DILocation(line: 1919, column: 26, scope: !4479)
!4482 = !DILocation(line: 1919, column: 11, scope: !4480)
!4483 = !DILocation(line: 1921, column: 21, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1920, column: 2)
!4485 = !DILocation(line: 1921, column: 19, scope: !4484)
!4486 = !DILocation(line: 1922, column: 4, scope: !4484)
!4487 = !DILocation(line: 1918, column: 5, scope: !4480)
!4488 = distinct !{!4488, !4477, !4489}
!4489 = !DILocation(line: 1923, column: 2, scope: !4475)
!4490 = !DILocation(line: 1925, column: 11, scope: !4456)
!4491 = !DILocation(line: 1925, column: 3, scope: !4456)
!4492 = !DILocation(line: 1929, column: 7, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1926, column: 5)
!4494 = !DILocation(line: 1930, column: 7, scope: !4493)
!4495 = !DILocation(line: 1934, column: 1, scope: !4456)
!4496 = distinct !DISubprogram(name: "remove_reg_equal_equiv_notes", scope: !3, file: !3, line: 1939, type: !4497, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4499)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{null, !588}
!4499 = !{!4500, !4501, !4502}
!4500 = !DILocalVariable(name: "insn", arg: 1, scope: !4496, file: !3, line: 1939, type: !588)
!4501 = !DILocalVariable(name: "loc", scope: !4496, file: !3, line: 1941, type: !1657)
!4502 = !DILocalVariable(name: "kind", scope: !4503, file: !3, line: 1946, type: !520)
!4503 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1945, column: 5)
!4504 = !DILocation(line: 0, scope: !4496)
!4505 = !DILocation(line: 1943, column: 10, scope: !4496)
!4506 = !DILocation(line: 1944, column: 3, scope: !4496)
!4507 = !DILocation(line: 1943, column: 7, scope: !4496)
!4508 = !DILocation(line: 1944, column: 10, scope: !4496)
!4509 = !DILocation(line: 1946, column: 28, scope: !4503)
!4510 = !DILocation(line: 0, scope: !4503)
!4511 = !DILocation(line: 1947, column: 29, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 1947, column: 11)
!4513 = !DILocation(line: 0, scope: !4512)
!4514 = !DILocation(line: 1948, column: 9, scope: !4512)
!4515 = !DILocation(line: 1948, column: 7, scope: !4512)
!4516 = !DILocation(line: 1948, column: 2, scope: !4512)
!4517 = distinct !{!4517, !4506, !4518}
!4518 = !DILocation(line: 1951, column: 5, scope: !4496)
!4519 = !DILocation(line: 1952, column: 1, scope: !4496)
!4520 = distinct !DISubprogram(name: "in_expr_list_p", scope: !3, file: !3, line: 1959, type: !2763, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4521)
!4521 = !{!4522, !4523, !4524}
!4522 = !DILocalVariable(name: "listp", arg: 1, scope: !4520, file: !3, line: 1959, type: !1673)
!4523 = !DILocalVariable(name: "node", arg: 2, scope: !4520, file: !3, line: 1959, type: !1673)
!4524 = !DILocalVariable(name: "x", scope: !4520, file: !3, line: 1961, type: !1673)
!4525 = !DILocation(line: 0, scope: !4520)
!4526 = !DILocation(line: 1963, column: 8, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1963, column: 3)
!4528 = !DILocation(line: 0, scope: !4527)
!4529 = !DILocation(line: 1963, column: 3, scope: !4527)
!4530 = !DILocation(line: 1964, column: 17, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1964, column: 9)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 1963, column: 3)
!4533 = !DILocation(line: 1964, column: 14, scope: !4531)
!4534 = !DILocation(line: 1964, column: 9, scope: !4532)
!4535 = !DILocation(line: 1963, column: 26, scope: !4532)
!4536 = !DILocation(line: 1963, column: 3, scope: !4532)
!4537 = distinct !{!4537, !4529, !4538}
!4538 = !DILocation(line: 1965, column: 14, scope: !4527)
!4539 = !DILocation(line: 1968, column: 1, scope: !4520)
!4540 = distinct !DISubprogram(name: "remove_node_from_expr_list", scope: !3, file: !3, line: 1976, type: !4541, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4543)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{null, !1673, !1657}
!4543 = !{!4544, !4545, !4546, !4547}
!4544 = !DILocalVariable(name: "node", arg: 1, scope: !4540, file: !3, line: 1976, type: !1673)
!4545 = !DILocalVariable(name: "listp", arg: 2, scope: !4540, file: !3, line: 1976, type: !1657)
!4546 = !DILocalVariable(name: "temp", scope: !4540, file: !3, line: 1978, type: !588)
!4547 = !DILocalVariable(name: "prev", scope: !4540, file: !3, line: 1979, type: !588)
!4548 = !DILocation(line: 0, scope: !4540)
!4549 = !DILocation(line: 1981, column: 3, scope: !4540)
!4550 = !DILocation(line: 1983, column: 19, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 1983, column: 11)
!4552 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1982, column: 5)
!4553 = !DILocation(line: 1983, column: 16, scope: !4551)
!4554 = !DILocation(line: 1983, column: 11, scope: !4552)
!4555 = !DILocation(line: 1986, column: 8, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 1986, column: 8)
!4557 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 1984, column: 2)
!4558 = !DILocation(line: 0, scope: !4556)
!4559 = !DILocation(line: 1986, column: 8, scope: !4557)
!4560 = !DILocation(line: 1987, column: 6, scope: !4556)
!4561 = !DILocation(line: 1987, column: 21, scope: !4556)
!4562 = !DILocation(line: 1989, column: 13, scope: !4556)
!4563 = !DILocation(line: 1995, column: 14, scope: !4552)
!4564 = distinct !{!4564, !4549, !4565}
!4565 = !DILocation(line: 1996, column: 5, scope: !4540)
!4566 = !DILocation(line: 1997, column: 1, scope: !4540)
!4567 = distinct !DISubprogram(name: "volatile_insn_p", scope: !3, file: !3, line: 2005, type: !2140, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4568)
!4568 = !{!4569, !4570, !4571, !4574, !4575}
!4569 = !DILocalVariable(name: "x", arg: 1, scope: !4567, file: !3, line: 2005, type: !1673)
!4570 = !DILocalVariable(name: "code", scope: !4567, file: !3, line: 2007, type: !2145)
!4571 = !DILocalVariable(name: "fmt", scope: !4572, file: !3, line: 2044, type: !4573)
!4572 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2043, column: 3)
!4573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!4574 = !DILocalVariable(name: "i", scope: !4572, file: !3, line: 2045, type: !579)
!4575 = !DILocalVariable(name: "j", scope: !4576, file: !3, line: 2056, type: !579)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 2055, column: 4)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 2054, column: 11)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2049, column: 6)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 2048, column: 7)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 2047, column: 5)
!4581 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2047, column: 5)
!4582 = !DILocation(line: 0, scope: !4567)
!4583 = !DILocation(line: 2007, column: 25, scope: !4567)
!4584 = !DILocation(line: 2008, column: 3, scope: !4567)
!4585 = !DILocation(line: 2030, column: 7, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2009, column: 5)
!4587 = !DILocation(line: 2034, column: 11, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 2034, column: 11)
!4589 = !DILocation(line: 2034, column: 11, scope: !4586)
!4590 = !DILocation(line: 2044, column: 29, scope: !4572)
!4591 = !DILocation(line: 0, scope: !4572)
!4592 = !DILocation(line: 2047, column: 14, scope: !4581)
!4593 = !DILocation(line: 2051, column: 27, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 2051, column: 10)
!4595 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 2050, column: 4)
!4596 = !DILocation(line: 2047, column: 10, scope: !4581)
!4597 = !DILocation(line: 0, scope: !4581)
!4598 = !DILocation(line: 2047, column: 43, scope: !4580)
!4599 = !DILocation(line: 2047, column: 5, scope: !4581)
!4600 = !DILocation(line: 2049, column: 6, scope: !4578)
!4601 = !DILocation(line: 2049, column: 13, scope: !4578)
!4602 = !DILocation(line: 2049, column: 6, scope: !4579)
!4603 = !DILocation(line: 2051, column: 10, scope: !4594)
!4604 = !DILocation(line: 2051, column: 10, scope: !4595)
!4605 = !DILocation(line: 2054, column: 18, scope: !4577)
!4606 = !DILocation(line: 2054, column: 11, scope: !4578)
!4607 = !DILocation(line: 2058, column: 29, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2058, column: 12)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 2057, column: 6)
!4610 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2057, column: 6)
!4611 = !DILocation(line: 2057, column: 6, scope: !4610)
!4612 = !DILocation(line: 0, scope: !4610)
!4613 = !DILocation(line: 0, scope: !4576)
!4614 = !DILocation(line: 2057, column: 22, scope: !4609)
!4615 = !DILocation(line: 2057, column: 20, scope: !4609)
!4616 = !DILocation(line: 2058, column: 12, scope: !4608)
!4617 = !DILocation(line: 2058, column: 12, scope: !4609)
!4618 = !DILocation(line: 2057, column: 39, scope: !4609)
!4619 = !DILocation(line: 2057, column: 6, scope: !4609)
!4620 = distinct !{!4620, !4611, !4621}
!4621 = !DILocation(line: 2059, column: 10, scope: !4610)
!4622 = !DILocation(line: 2047, column: 5, scope: !4580)
!4623 = distinct !{!4623, !4599, !4624}
!4624 = !DILocation(line: 2061, column: 7, scope: !4581)
!4625 = !DILocation(line: 2064, column: 1, scope: !4567)
!4626 = distinct !DISubprogram(name: "volatile_refs_p", scope: !3, file: !3, line: 2070, type: !2140, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4627)
!4627 = !{!4628, !4629, !4630, !4632, !4633}
!4628 = !DILocalVariable(name: "x", arg: 1, scope: !4626, file: !3, line: 2070, type: !1673)
!4629 = !DILocalVariable(name: "code", scope: !4626, file: !3, line: 2072, type: !2145)
!4630 = !DILocalVariable(name: "fmt", scope: !4631, file: !3, line: 2107, type: !4573)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 2106, column: 3)
!4632 = !DILocalVariable(name: "i", scope: !4631, file: !3, line: 2108, type: !579)
!4633 = !DILocalVariable(name: "j", scope: !4634, file: !3, line: 2119, type: !579)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2118, column: 4)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 2117, column: 11)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 2112, column: 6)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2111, column: 7)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2110, column: 5)
!4639 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 2110, column: 5)
!4640 = !DILocation(line: 0, scope: !4626)
!4641 = !DILocation(line: 2072, column: 25, scope: !4626)
!4642 = !DILocation(line: 2073, column: 3, scope: !4626)
!4643 = !DILocation(line: 2092, column: 7, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 2074, column: 5)
!4645 = !DILocation(line: 2097, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 2097, column: 11)
!4647 = !DILocation(line: 2097, column: 11, scope: !4644)
!4648 = !DILocation(line: 2107, column: 29, scope: !4631)
!4649 = !DILocation(line: 0, scope: !4631)
!4650 = !DILocation(line: 2110, column: 14, scope: !4639)
!4651 = !DILocation(line: 2114, column: 27, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 2114, column: 10)
!4653 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 2113, column: 4)
!4654 = !DILocation(line: 2110, column: 10, scope: !4639)
!4655 = !DILocation(line: 0, scope: !4639)
!4656 = !DILocation(line: 2110, column: 43, scope: !4638)
!4657 = !DILocation(line: 2110, column: 5, scope: !4639)
!4658 = !DILocation(line: 2112, column: 6, scope: !4636)
!4659 = !DILocation(line: 2112, column: 13, scope: !4636)
!4660 = !DILocation(line: 2112, column: 6, scope: !4637)
!4661 = !DILocation(line: 2114, column: 10, scope: !4652)
!4662 = !DILocation(line: 2114, column: 10, scope: !4653)
!4663 = !DILocation(line: 2117, column: 18, scope: !4635)
!4664 = !DILocation(line: 2117, column: 11, scope: !4636)
!4665 = !DILocation(line: 2121, column: 29, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 2121, column: 12)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 2120, column: 6)
!4668 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 2120, column: 6)
!4669 = !DILocation(line: 2120, column: 6, scope: !4668)
!4670 = !DILocation(line: 0, scope: !4668)
!4671 = !DILocation(line: 0, scope: !4634)
!4672 = !DILocation(line: 2120, column: 22, scope: !4667)
!4673 = !DILocation(line: 2120, column: 20, scope: !4667)
!4674 = !DILocation(line: 2121, column: 12, scope: !4666)
!4675 = !DILocation(line: 2121, column: 12, scope: !4667)
!4676 = !DILocation(line: 2120, column: 39, scope: !4667)
!4677 = !DILocation(line: 2120, column: 6, scope: !4667)
!4678 = distinct !{!4678, !4669, !4679}
!4679 = !DILocation(line: 2122, column: 10, scope: !4668)
!4680 = !DILocation(line: 2110, column: 5, scope: !4638)
!4681 = distinct !{!4681, !4657, !4682}
!4682 = !DILocation(line: 2124, column: 7, scope: !4639)
!4683 = !DILocation(line: 2127, column: 1, scope: !4626)
!4684 = distinct !DISubprogram(name: "may_trap_p_1", scope: !3, file: !3, line: 2212, type: !4184, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4685)
!4685 = !{!4686, !4687, !4688, !4689, !4690, !4691, !4692, !4696}
!4686 = !DILocalVariable(name: "x", arg: 1, scope: !4684, file: !3, line: 2212, type: !1673)
!4687 = !DILocalVariable(name: "flags", arg: 2, scope: !4684, file: !3, line: 2212, type: !7)
!4688 = !DILocalVariable(name: "i", scope: !4684, file: !3, line: 2214, type: !579)
!4689 = !DILocalVariable(name: "code", scope: !4684, file: !3, line: 2215, type: !377)
!4690 = !DILocalVariable(name: "fmt", scope: !4684, file: !3, line: 2216, type: !584)
!4691 = !DILocalVariable(name: "code_changed", scope: !4684, file: !3, line: 2221, type: !578)
!4692 = !DILocalVariable(name: "size", scope: !4693, file: !3, line: 2266, type: !674)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 2265, column: 2)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2263, column: 4)
!4695 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2227, column: 5)
!4696 = !DILocalVariable(name: "j", scope: !4697, file: !3, line: 2352, type: !579)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 2351, column: 2)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 2350, column: 16)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 2345, column: 11)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 2344, column: 5)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 2343, column: 3)
!4702 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2343, column: 3)
!4703 = !DILocation(line: 0, scope: !4684)
!4704 = !DILocation(line: 2221, column: 29, scope: !4684)
!4705 = !DILocation(line: 2221, column: 23, scope: !4684)
!4706 = !DILocation(line: 2223, column: 9, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 2223, column: 7)
!4708 = !DILocation(line: 2223, column: 7, scope: !4684)
!4709 = !DILocation(line: 2225, column: 10, scope: !4684)
!4710 = !DILocation(line: 2226, column: 3, scope: !4684)
!4711 = !DILocation(line: 2244, column: 22, scope: !4695)
!4712 = !DILocation(line: 2244, column: 14, scope: !4695)
!4713 = !DILocation(line: 2244, column: 7, scope: !4695)
!4714 = !DILocation(line: 2248, column: 7, scope: !4695)
!4715 = !DILocation(line: 2251, column: 14, scope: !4695)
!4716 = !DILocation(line: 2251, column: 7, scope: !4695)
!4717 = !DILocation(line: 2256, column: 11, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2256, column: 11)
!4719 = !DILocation(line: 2257, column: 4, scope: !4718)
!4720 = !DILocation(line: 2257, column: 7, scope: !4718)
!4721 = !DILocation(line: 2258, column: 4, scope: !4718)
!4722 = !DILocation(line: 2258, column: 7, scope: !4718)
!4723 = !DILocation(line: 2258, column: 22, scope: !4718)
!4724 = !DILocation(line: 2258, column: 19, scope: !4718)
!4725 = !DILocation(line: 2256, column: 11, scope: !4695)
!4726 = !DILocation(line: 2264, column: 4, scope: !4694)
!4727 = !DILocation(line: 2264, column: 8, scope: !4694)
!4728 = !DILocation(line: 2263, column: 4, scope: !4695)
!4729 = !DILocation(line: 2266, column: 25, scope: !4693)
!4730 = !DILocation(line: 2266, column: 40, scope: !4693)
!4731 = !DILocation(line: 0, scope: !4693)
!4732 = !DILocation(line: 2267, column: 34, scope: !4693)
!4733 = !DILocation(line: 2268, column: 6, scope: !4693)
!4734 = !DILocation(line: 2267, column: 11, scope: !4693)
!4735 = !DILocation(line: 2278, column: 11, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2278, column: 11)
!4737 = !DILocation(line: 2280, column: 11, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2280, column: 11)
!4739 = !DILocation(line: 0, scope: !4736)
!4740 = !DILocation(line: 2280, column: 11, scope: !4695)
!4741 = !DILocation(line: 2281, column: 9, scope: !4738)
!4742 = !DILocation(line: 2281, column: 2, scope: !4738)
!4743 = !DILocation(line: 2282, column: 12, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2282, column: 11)
!4745 = !DILocation(line: 2282, column: 37, scope: !4744)
!4746 = !DILocation(line: 2282, column: 56, scope: !4744)
!4747 = !DILocation(line: 2282, column: 53, scope: !4744)
!4748 = !DILocation(line: 2282, column: 11, scope: !4695)
!4749 = !DILocation(line: 2289, column: 7, scope: !4695)
!4750 = !DILocation(line: 2298, column: 12, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2298, column: 11)
!4752 = !DILocation(line: 2298, column: 11, scope: !4695)
!4753 = !DILocation(line: 2304, column: 11, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2304, column: 11)
!4755 = !DILocation(line: 0, scope: !4754)
!4756 = !DILocation(line: 2308, column: 11, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2308, column: 11)
!4758 = !DILocation(line: 0, scope: !4757)
!4759 = !DILocation(line: 2309, column: 7, scope: !4757)
!4760 = !DILocation(line: 2315, column: 11, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2315, column: 11)
!4762 = !DILocation(line: 0, scope: !4761)
!4763 = !DILocation(line: 2318, column: 11, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2318, column: 11)
!4765 = !DILocation(line: 0, scope: !4764)
!4766 = !DILocation(line: 2319, column: 7, scope: !4764)
!4767 = !DILocation(line: 2325, column: 11, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2325, column: 11)
!4769 = !DILocation(line: 2325, column: 30, scope: !4768)
!4770 = !DILocation(line: 2325, column: 33, scope: !4768)
!4771 = !DILocation(line: 0, scope: !4768)
!4772 = !DILocation(line: 2337, column: 11, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2337, column: 11)
!4774 = !DILocation(line: 2338, column: 4, scope: !4773)
!4775 = !DILocation(line: 2338, column: 7, scope: !4773)
!4776 = !DILocation(line: 2337, column: 11, scope: !4695)
!4777 = !DILocation(line: 2342, column: 9, scope: !4684)
!4778 = !DILocation(line: 2343, column: 12, scope: !4702)
!4779 = !DILocation(line: 2347, column: 22, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2347, column: 8)
!4781 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 2346, column: 2)
!4782 = !DILocation(line: 2343, column: 8, scope: !4702)
!4783 = !DILocation(line: 0, scope: !4702)
!4784 = !DILocation(line: 2343, column: 41, scope: !4701)
!4785 = !DILocation(line: 2343, column: 3, scope: !4702)
!4786 = !DILocation(line: 2345, column: 11, scope: !4699)
!4787 = !DILocation(line: 2345, column: 18, scope: !4699)
!4788 = !DILocation(line: 2345, column: 11, scope: !4700)
!4789 = !DILocation(line: 2347, column: 8, scope: !4780)
!4790 = !DILocation(line: 2347, column: 8, scope: !4781)
!4791 = !DILocation(line: 2350, column: 23, scope: !4698)
!4792 = !DILocation(line: 2350, column: 16, scope: !4699)
!4793 = !DILocation(line: 2354, column: 24, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2354, column: 10)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2353, column: 4)
!4796 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 2353, column: 4)
!4797 = !DILocation(line: 2353, column: 4, scope: !4796)
!4798 = !DILocation(line: 0, scope: !4796)
!4799 = !DILocation(line: 0, scope: !4697)
!4800 = !DILocation(line: 2353, column: 20, scope: !4795)
!4801 = !DILocation(line: 2353, column: 18, scope: !4795)
!4802 = !DILocation(line: 2354, column: 10, scope: !4794)
!4803 = !DILocation(line: 2354, column: 10, scope: !4795)
!4804 = !DILocation(line: 2353, column: 37, scope: !4795)
!4805 = !DILocation(line: 2353, column: 4, scope: !4795)
!4806 = distinct !{!4806, !4797, !4807}
!4807 = !DILocation(line: 2355, column: 15, scope: !4796)
!4808 = !DILocation(line: 2343, column: 3, scope: !4701)
!4809 = distinct !{!4809, !4785, !4810}
!4810 = !DILocation(line: 2357, column: 5, scope: !4702)
!4811 = !DILocation(line: 2359, column: 1, scope: !4684)
!4812 = distinct !DISubprogram(name: "may_trap_p", scope: !3, file: !3, line: 2364, type: !2140, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4813)
!4813 = !{!4814}
!4814 = !DILocalVariable(name: "x", arg: 1, scope: !4812, file: !3, line: 2364, type: !1673)
!4815 = !DILocation(line: 0, scope: !4812)
!4816 = !DILocation(line: 2366, column: 10, scope: !4812)
!4817 = !DILocation(line: 2366, column: 3, scope: !4812)
!4818 = distinct !DISubprogram(name: "may_trap_or_fault_p", scope: !3, file: !3, line: 2410, type: !2140, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4819)
!4819 = !{!4820}
!4820 = !DILocalVariable(name: "x", arg: 1, scope: !4818, file: !3, line: 2410, type: !1673)
!4821 = !DILocation(line: 0, scope: !4818)
!4822 = !DILocation(line: 2412, column: 10, scope: !4818)
!4823 = !DILocation(line: 2412, column: 3, scope: !4818)
!4824 = distinct !DISubprogram(name: "inequality_comparisons_p", scope: !3, file: !3, line: 2419, type: !2140, scopeLine: 2420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4825)
!4825 = !{!4826, !4827, !4828, !4829, !4830, !4831}
!4826 = !DILocalVariable(name: "x", arg: 1, scope: !4824, file: !3, line: 2419, type: !1673)
!4827 = !DILocalVariable(name: "fmt", scope: !4824, file: !3, line: 2421, type: !584)
!4828 = !DILocalVariable(name: "len", scope: !4824, file: !3, line: 2422, type: !579)
!4829 = !DILocalVariable(name: "i", scope: !4824, file: !3, line: 2422, type: !579)
!4830 = !DILocalVariable(name: "code", scope: !4824, file: !3, line: 2423, type: !2145)
!4831 = !DILocalVariable(name: "j", scope: !4832, file: !3, line: 2466, type: !579)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2465, column: 2)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2464, column: 16)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 2459, column: 11)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 2458, column: 5)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2457, column: 3)
!4837 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2457, column: 3)
!4838 = !DILocation(line: 0, scope: !4824)
!4839 = !DILocation(line: 2423, column: 30, scope: !4824)
!4840 = !DILocation(line: 2425, column: 3, scope: !4824)
!4841 = !DILocation(line: 2448, column: 7, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2426, column: 5)
!4843 = !DILocation(line: 2454, column: 9, scope: !4824)
!4844 = !DILocation(line: 2455, column: 9, scope: !4824)
!4845 = !DILocation(line: 2461, column: 34, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2461, column: 8)
!4847 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2460, column: 2)
!4848 = !DILocation(line: 2457, column: 17, scope: !4836)
!4849 = !DILocation(line: 2457, column: 8, scope: !4837)
!4850 = !DILocation(line: 0, scope: !4837)
!4851 = !DILocation(line: 2457, column: 3, scope: !4837)
!4852 = !DILocation(line: 2459, column: 11, scope: !4834)
!4853 = !DILocation(line: 2459, column: 18, scope: !4834)
!4854 = !DILocation(line: 2459, column: 11, scope: !4835)
!4855 = !DILocation(line: 2461, column: 8, scope: !4846)
!4856 = !DILocation(line: 2461, column: 8, scope: !4847)
!4857 = !DILocation(line: 2464, column: 23, scope: !4833)
!4858 = !DILocation(line: 2464, column: 16, scope: !4834)
!4859 = !DILocation(line: 2467, column: 13, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2467, column: 4)
!4861 = !DILocation(line: 0, scope: !4832)
!4862 = !DILocation(line: 2467, column: 9, scope: !4860)
!4863 = !DILocation(line: 0, scope: !4860)
!4864 = !DILocation(line: 2467, column: 35, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 2467, column: 4)
!4866 = !DILocation(line: 2467, column: 4, scope: !4860)
!4867 = !DILocation(line: 2468, column: 36, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2468, column: 10)
!4869 = !DILocation(line: 2468, column: 10, scope: !4868)
!4870 = !DILocation(line: 2468, column: 10, scope: !4865)
!4871 = !DILocation(line: 2467, column: 4, scope: !4865)
!4872 = distinct !{!4872, !4866, !4873}
!4873 = !DILocation(line: 2469, column: 15, scope: !4860)
!4874 = !DILocation(line: 2457, column: 25, scope: !4836)
!4875 = !DILocation(line: 2457, column: 3, scope: !4836)
!4876 = distinct !{!4876, !4851, !4877}
!4877 = !DILocation(line: 2471, column: 5, scope: !4837)
!4878 = !DILocation(line: 2474, column: 1, scope: !4824)
!4879 = distinct !DISubprogram(name: "replace_rtx", scope: !3, file: !3, line: 2483, type: !4880, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!588, !588, !588, !588}
!4882 = !{!4883, !4884, !4885, !4886, !4887, !4888, !4889, !4892}
!4883 = !DILocalVariable(name: "x", arg: 1, scope: !4879, file: !3, line: 2483, type: !588)
!4884 = !DILocalVariable(name: "from", arg: 2, scope: !4879, file: !3, line: 2483, type: !588)
!4885 = !DILocalVariable(name: "to", arg: 3, scope: !4879, file: !3, line: 2483, type: !588)
!4886 = !DILocalVariable(name: "i", scope: !4879, file: !3, line: 2485, type: !579)
!4887 = !DILocalVariable(name: "j", scope: !4879, file: !3, line: 2485, type: !579)
!4888 = !DILocalVariable(name: "fmt", scope: !4879, file: !3, line: 2486, type: !584)
!4889 = !DILocalVariable(name: "new_rtx", scope: !4890, file: !3, line: 2502, type: !588)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 2501, column: 5)
!4891 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2500, column: 7)
!4892 = !DILocalVariable(name: "new_rtx", scope: !4893, file: !3, line: 2518, type: !588)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2517, column: 5)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 2516, column: 12)
!4895 = !DILocation(line: 0, scope: !4879)
!4896 = !DILocation(line: 2490, column: 9, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2490, column: 7)
!4898 = !DILocation(line: 2490, column: 14, scope: !4897)
!4899 = !DILocation(line: 2490, column: 17, scope: !4897)
!4900 = !DILocation(line: 2490, column: 30, scope: !4897)
!4901 = !DILocation(line: 2490, column: 7, scope: !4879)
!4902 = !DILocation(line: 2493, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2493, column: 7)
!4904 = !DILocation(line: 2493, column: 7, scope: !4879)
!4905 = !DILocation(line: 2497, column: 7, scope: !4879)
!4906 = !DILocation(line: 2500, column: 7, scope: !4891)
!4907 = !DILocation(line: 2500, column: 20, scope: !4891)
!4908 = !DILocation(line: 2500, column: 7, scope: !4879)
!4909 = !DILocation(line: 2502, column: 34, scope: !4890)
!4910 = !DILocation(line: 2502, column: 21, scope: !4890)
!4911 = !DILocation(line: 0, scope: !4890)
!4912 = !DILocation(line: 2504, column: 11, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 2504, column: 11)
!4914 = !DILocation(line: 2504, column: 11, scope: !4890)
!4915 = !DILocation(line: 2506, column: 25, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2505, column: 2)
!4917 = !DILocation(line: 2507, column: 11, scope: !4916)
!4918 = !DILocation(line: 2508, column: 11, scope: !4916)
!4919 = !DILocation(line: 2506, column: 8, scope: !4916)
!4920 = !DILocation(line: 2509, column: 4, scope: !4916)
!4921 = !DILocation(line: 2512, column: 17, scope: !4913)
!4922 = !DILocation(line: 2516, column: 25, scope: !4894)
!4923 = !DILocation(line: 2516, column: 12, scope: !4891)
!4924 = !DILocation(line: 2518, column: 34, scope: !4893)
!4925 = !DILocation(line: 2518, column: 21, scope: !4893)
!4926 = !DILocation(line: 0, scope: !4893)
!4927 = !DILocation(line: 2520, column: 11, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 2520, column: 11)
!4929 = !DILocation(line: 2520, column: 11, scope: !4893)
!4930 = !DILocation(line: 2522, column: 47, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2521, column: 2)
!4932 = !DILocation(line: 2523, column: 15, scope: !4931)
!4933 = !DILocation(line: 2522, column: 8, scope: !4931)
!4934 = !DILocation(line: 2524, column: 4, scope: !4931)
!4935 = !DILocation(line: 2527, column: 14, scope: !4928)
!4936 = !DILocation(line: 2532, column: 9, scope: !4879)
!4937 = !DILocation(line: 2533, column: 12, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2533, column: 3)
!4939 = !DILocation(line: 0, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 2538, column: 2)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 2537, column: 16)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 2535, column: 11)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 2534, column: 5)
!4944 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 2533, column: 3)
!4945 = !DILocation(line: 2533, column: 8, scope: !4938)
!4946 = !DILocation(line: 0, scope: !4938)
!4947 = !DILocation(line: 2533, column: 49, scope: !4944)
!4948 = !DILocation(line: 2533, column: 3, scope: !4938)
!4949 = !DILocation(line: 2535, column: 11, scope: !4942)
!4950 = !DILocation(line: 2535, column: 18, scope: !4942)
!4951 = !DILocation(line: 2535, column: 11, scope: !4943)
!4952 = !DILocation(line: 2536, column: 29, scope: !4942)
!4953 = !DILocation(line: 2536, column: 16, scope: !4942)
!4954 = !DILocation(line: 2536, column: 14, scope: !4942)
!4955 = !DILocation(line: 2536, column: 2, scope: !4942)
!4956 = !DILocation(line: 2537, column: 23, scope: !4941)
!4957 = !DILocation(line: 2537, column: 16, scope: !4942)
!4958 = !DILocation(line: 2538, column: 11, scope: !4940)
!4959 = !DILocation(line: 2538, column: 7, scope: !4940)
!4960 = !DILocation(line: 2538, column: 33, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2538, column: 2)
!4962 = !DILocation(line: 2538, column: 2, scope: !4940)
!4963 = !DILocation(line: 2539, column: 37, scope: !4961)
!4964 = !DILocation(line: 2539, column: 24, scope: !4961)
!4965 = !DILocation(line: 2539, column: 4, scope: !4961)
!4966 = !DILocation(line: 2539, column: 22, scope: !4961)
!4967 = !DILocation(line: 2538, column: 2, scope: !4961)
!4968 = distinct !{!4968, !4962, !4969}
!4969 = !DILocation(line: 2539, column: 64, scope: !4940)
!4970 = !DILocation(line: 2533, column: 3, scope: !4944)
!4971 = distinct !{!4971, !4948, !4972}
!4972 = !DILocation(line: 2540, column: 5, scope: !4938)
!4973 = !DILocation(line: 2543, column: 1, scope: !4879)
!4974 = distinct !DISubprogram(name: "replace_label", scope: !3, file: !3, line: 2549, type: !4975, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4977)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!579, !1657, !583}
!4977 = !{!4978, !4979, !4980, !4981, !4982, !4983, !4984, !4987, !4990, !4991}
!4978 = !DILocalVariable(name: "x", arg: 1, scope: !4974, file: !3, line: 2549, type: !1657)
!4979 = !DILocalVariable(name: "data", arg: 2, scope: !4974, file: !3, line: 2549, type: !583)
!4980 = !DILocalVariable(name: "l", scope: !4974, file: !3, line: 2551, type: !588)
!4981 = !DILocalVariable(name: "old_label", scope: !4974, file: !3, line: 2552, type: !588)
!4982 = !DILocalVariable(name: "new_label", scope: !4974, file: !3, line: 2553, type: !588)
!4983 = !DILocalVariable(name: "update_label_nuses", scope: !4974, file: !3, line: 2554, type: !578)
!4984 = !DILocalVariable(name: "c", scope: !4985, file: !3, line: 2562, type: !588)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 2561, column: 5)
!4986 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2559, column: 7)
!4987 = !DILocalVariable(name: "new_c", scope: !4988, file: !3, line: 2565, type: !588)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 2564, column: 2)
!4989 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 2563, column: 11)
!4990 = !DILocalVariable(name: "new_l", scope: !4988, file: !3, line: 2565, type: !588)
!4991 = !DILocalVariable(name: "d", scope: !4988, file: !3, line: 2566, type: !1658)
!4992 = !DILocation(line: 0, scope: !4974)
!4993 = !DILocation(line: 2551, column: 11, scope: !4974)
!4994 = !DILocation(line: 2552, column: 50, scope: !4974)
!4995 = !DILocation(line: 2553, column: 50, scope: !4974)
!4996 = !DILocation(line: 2554, column: 60, scope: !4974)
!4997 = !DILocation(line: 2556, column: 9, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2556, column: 7)
!4999 = !DILocation(line: 2556, column: 7, scope: !4974)
!5000 = !DILocation(line: 2559, column: 7, scope: !4986)
!5001 = !DILocation(line: 2559, column: 20, scope: !4986)
!5002 = !DILocation(line: 2560, column: 7, scope: !4986)
!5003 = !DILocation(line: 2560, column: 10, scope: !4986)
!5004 = !DILocation(line: 2559, column: 7, scope: !4974)
!5005 = !DILocation(line: 2562, column: 15, scope: !4985)
!5006 = !DILocation(line: 0, scope: !4985)
!5007 = !DILocation(line: 2563, column: 11, scope: !4989)
!5008 = !DILocation(line: 2563, column: 11, scope: !4985)
!5009 = !DILocation(line: 2565, column: 4, scope: !4988)
!5010 = !DILocation(line: 0, scope: !4988)
!5011 = !DILocation(line: 2571, column: 12, scope: !4988)
!5012 = !DILocation(line: 2571, column: 10, scope: !4988)
!5013 = !DILocation(line: 2572, column: 26, scope: !4988)
!5014 = !DILocation(line: 2573, column: 4, scope: !4988)
!5015 = !DILocation(line: 2574, column: 26, scope: !4988)
!5016 = !DILocation(line: 2578, column: 12, scope: !4988)
!5017 = !DILocation(line: 2579, column: 9, scope: !4988)
!5018 = !DILocation(line: 2579, column: 7, scope: !4988)
!5019 = !DILocation(line: 2580, column: 2, scope: !4989)
!5020 = !DILocation(line: 2580, column: 2, scope: !4988)
!5021 = !DILocation(line: 2587, column: 7, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2587, column: 7)
!5023 = !DILocation(line: 2587, column: 18, scope: !5022)
!5024 = !DILocation(line: 2587, column: 21, scope: !5022)
!5025 = !DILocation(line: 2587, column: 36, scope: !5022)
!5026 = !DILocation(line: 2587, column: 7, scope: !4974)
!5027 = !DILocation(line: 2588, column: 20, scope: !5022)
!5028 = !DILocation(line: 2588, column: 5, scope: !5022)
!5029 = !DILocation(line: 2590, column: 21, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2590, column: 7)
!5031 = !DILocation(line: 2591, column: 8, scope: !5030)
!5032 = !DILocation(line: 2591, column: 24, scope: !5030)
!5033 = !DILocation(line: 2592, column: 7, scope: !5030)
!5034 = !DILocation(line: 2592, column: 10, scope: !5030)
!5035 = !DILocation(line: 2592, column: 22, scope: !5030)
!5036 = !DILocation(line: 2590, column: 7, scope: !4974)
!5037 = !DILocation(line: 2594, column: 19, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2593, column: 5)
!5039 = !DILocation(line: 2595, column: 11, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2595, column: 11)
!5041 = !DILocation(line: 2595, column: 11, scope: !5038)
!5042 = !DILocation(line: 2597, column: 6, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2596, column: 2)
!5044 = !DILocation(line: 2597, column: 4, scope: !5043)
!5045 = !DILocation(line: 2598, column: 6, scope: !5043)
!5046 = !DILocation(line: 2598, column: 4, scope: !5043)
!5047 = !DILocation(line: 2599, column: 2, scope: !5043)
!5048 = !DILocation(line: 2604, column: 1, scope: !4974)
!5049 = distinct !DISubprogram(name: "rtx_referenced_p", scope: !3, file: !3, line: 2634, type: !5050, scopeLine: 2635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5052)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!579, !588, !588}
!5052 = !{!5053, !5054}
!5053 = !DILocalVariable(name: "x", arg: 1, scope: !5049, file: !3, line: 2634, type: !588)
!5054 = !DILocalVariable(name: "body", arg: 2, scope: !5049, file: !3, line: 2634, type: !588)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 2636, column: 51, scope: !5049)
!5057 = !DILocation(line: 2636, column: 10, scope: !5049)
!5058 = !DILocation(line: 2636, column: 3, scope: !5049)
!5059 = distinct !DISubprogram(name: "for_each_rtx", scope: !3, file: !3, line: 2848, type: !5060, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5064)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!579, !1657, !5062, !583}
!5062 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_function", file: !378, line: 1875, baseType: !5063)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!5064 = !{!5065, !5066, !5067, !5068, !5069}
!5065 = !DILocalVariable(name: "x", arg: 1, scope: !5059, file: !3, line: 2848, type: !1657)
!5066 = !DILocalVariable(name: "f", arg: 2, scope: !5059, file: !3, line: 2848, type: !5062)
!5067 = !DILocalVariable(name: "data", arg: 3, scope: !5059, file: !3, line: 2848, type: !583)
!5068 = !DILocalVariable(name: "result", scope: !5059, file: !3, line: 2850, type: !579)
!5069 = !DILocalVariable(name: "i", scope: !5059, file: !3, line: 2851, type: !579)
!5070 = !DILocation(line: 0, scope: !5059)
!5071 = !DILocation(line: 2854, column: 12, scope: !5059)
!5072 = !DILocation(line: 2855, column: 7, scope: !5059)
!5073 = !DILocation(line: 2860, column: 5, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 2858, column: 12)
!5075 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2855, column: 7)
!5076 = !DILocation(line: 2862, column: 7, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2862, column: 7)
!5078 = !DILocation(line: 2862, column: 10, scope: !5077)
!5079 = !DILocation(line: 2862, column: 7, scope: !5059)
!5080 = !DILocation(line: 2866, column: 33, scope: !5059)
!5081 = !DILocation(line: 2866, column: 7, scope: !5059)
!5082 = !DILocation(line: 2867, column: 9, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2867, column: 7)
!5084 = !DILocation(line: 2867, column: 7, scope: !5059)
!5085 = !DILocation(line: 2870, column: 10, scope: !5059)
!5086 = !DILocation(line: 2870, column: 3, scope: !5059)
!5087 = !DILocation(line: 2871, column: 1, scope: !5059)
!5088 = distinct !DISubprogram(name: "rtx_referenced_p_1", scope: !3, file: !3, line: 2611, type: !4975, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5089)
!5089 = !{!5090, !5091, !5092}
!5090 = !DILocalVariable(name: "body", arg: 1, scope: !5088, file: !3, line: 2611, type: !1657)
!5091 = !DILocalVariable(name: "x", arg: 2, scope: !5088, file: !3, line: 2611, type: !583)
!5092 = !DILocalVariable(name: "y", scope: !5088, file: !3, line: 2613, type: !588)
!5093 = !DILocation(line: 0, scope: !5088)
!5094 = !DILocation(line: 2613, column: 11, scope: !5088)
!5095 = !DILocation(line: 2615, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2615, column: 7)
!5097 = !DILocation(line: 2615, column: 13, scope: !5096)
!5098 = !DILocation(line: 2615, column: 7, scope: !5088)
!5099 = !DILocation(line: 2616, column: 14, scope: !5096)
!5100 = !DILocation(line: 2616, column: 5, scope: !5096)
!5101 = !DILocation(line: 2619, column: 7, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2619, column: 7)
!5103 = !DILocation(line: 2619, column: 24, scope: !5102)
!5104 = !DILocation(line: 2619, column: 37, scope: !5102)
!5105 = !DILocation(line: 2619, column: 40, scope: !5102)
!5106 = !DILocation(line: 2619, column: 7, scope: !5088)
!5107 = !DILocation(line: 2620, column: 12, scope: !5102)
!5108 = !DILocation(line: 2620, column: 28, scope: !5102)
!5109 = !DILocation(line: 2620, column: 5, scope: !5102)
!5110 = !DILocation(line: 2623, column: 24, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2623, column: 7)
!5112 = !DILocation(line: 2624, column: 7, scope: !5111)
!5113 = !DILocation(line: 2624, column: 10, scope: !5111)
!5114 = !DILocation(line: 2623, column: 7, scope: !5088)
!5115 = !DILocation(line: 2625, column: 33, scope: !5111)
!5116 = !DILocation(line: 2625, column: 12, scope: !5111)
!5117 = !DILocation(line: 2625, column: 5, scope: !5111)
!5118 = !DILocation(line: 2628, column: 10, scope: !5088)
!5119 = !DILocation(line: 2628, column: 3, scope: !5088)
!5120 = !DILocation(line: 2629, column: 1, scope: !5088)
!5121 = distinct !DISubprogram(name: "tablejump_p", scope: !3, file: !3, line: 2643, type: !5122, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5124)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!578, !1673, !1657, !1657}
!5124 = !{!5125, !5126, !5127, !5128, !5129}
!5125 = !DILocalVariable(name: "insn", arg: 1, scope: !5121, file: !3, line: 2643, type: !1673)
!5126 = !DILocalVariable(name: "labelp", arg: 2, scope: !5121, file: !3, line: 2643, type: !1657)
!5127 = !DILocalVariable(name: "tablep", arg: 3, scope: !5121, file: !3, line: 2643, type: !1657)
!5128 = !DILocalVariable(name: "label", scope: !5121, file: !3, line: 2645, type: !588)
!5129 = !DILocalVariable(name: "table", scope: !5121, file: !3, line: 2645, type: !588)
!5130 = !DILocation(line: 0, scope: !5121)
!5131 = !DILocation(line: 2647, column: 7, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 2647, column: 7)
!5133 = !DILocation(line: 2648, column: 7, scope: !5132)
!5134 = !DILocation(line: 2648, column: 19, scope: !5132)
!5135 = !DILocation(line: 2648, column: 38, scope: !5132)
!5136 = !DILocation(line: 2649, column: 7, scope: !5132)
!5137 = !DILocation(line: 2649, column: 19, scope: !5132)
!5138 = !DILocation(line: 2649, column: 45, scope: !5132)
!5139 = !DILocation(line: 2650, column: 7, scope: !5132)
!5140 = !DILocation(line: 2650, column: 10, scope: !5132)
!5141 = !DILocation(line: 2647, column: 7, scope: !5121)
!5142 = !DILocation(line: 2652, column: 11, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 2652, column: 11)
!5144 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 2651, column: 5)
!5145 = !DILocation(line: 2652, column: 11, scope: !5144)
!5146 = !DILocation(line: 2653, column: 10, scope: !5143)
!5147 = !DILocation(line: 2653, column: 2, scope: !5143)
!5148 = !DILocation(line: 2654, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 2654, column: 11)
!5150 = !DILocation(line: 2654, column: 11, scope: !5144)
!5151 = !DILocation(line: 2655, column: 10, scope: !5149)
!5152 = !DILocation(line: 2655, column: 2, scope: !5149)
!5153 = !DILocation(line: 2659, column: 1, scope: !5121)
!5154 = distinct !DISubprogram(name: "computed_jump_p", scope: !3, file: !3, line: 2721, type: !2140, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5155)
!5155 = !{!5156, !5157, !5158, !5161, !5164}
!5156 = !DILocalVariable(name: "insn", arg: 1, scope: !5154, file: !3, line: 2721, type: !1673)
!5157 = !DILocalVariable(name: "i", scope: !5154, file: !3, line: 2723, type: !579)
!5158 = !DILocalVariable(name: "pat", scope: !5159, file: !3, line: 2726, type: !588)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 2725, column: 5)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 2724, column: 7)
!5161 = !DILocalVariable(name: "len", scope: !5162, file: !3, line: 2734, type: !579)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2733, column: 2)
!5163 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2732, column: 11)
!5164 = !DILocalVariable(name: "has_use_labelref", scope: !5162, file: !3, line: 2735, type: !579)
!5165 = !DILocation(line: 0, scope: !5154)
!5166 = !DILocation(line: 2724, column: 7, scope: !5160)
!5167 = !DILocation(line: 2724, column: 7, scope: !5154)
!5168 = !DILocation(line: 2726, column: 17, scope: !5159)
!5169 = !DILocation(line: 0, scope: !5159)
!5170 = !DILocation(line: 2729, column: 11, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2729, column: 11)
!5172 = !DILocation(line: 2729, column: 29, scope: !5171)
!5173 = !DILocation(line: 2729, column: 11, scope: !5159)
!5174 = !DILocation(line: 2732, column: 11, scope: !5163)
!5175 = !DILocation(line: 2732, column: 26, scope: !5163)
!5176 = !DILocation(line: 2732, column: 11, scope: !5159)
!5177 = !DILocation(line: 2734, column: 14, scope: !5162)
!5178 = !DILocation(line: 0, scope: !5162)
!5179 = !DILocation(line: 2737, column: 9, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 2737, column: 4)
!5181 = !DILocation(line: 0, scope: !5180)
!5182 = !DILocation(line: 2737, column: 24, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 2737, column: 4)
!5184 = !DILocation(line: 2737, column: 4, scope: !5180)
!5185 = !DILocation(line: 2738, column: 10, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 2738, column: 10)
!5187 = !DILocation(line: 2738, column: 41, scope: !5186)
!5188 = !DILocation(line: 2739, column: 3, scope: !5186)
!5189 = !DILocation(line: 2739, column: 7, scope: !5186)
!5190 = !DILocation(line: 2740, column: 7, scope: !5186)
!5191 = !DILocation(line: 2738, column: 10, scope: !5183)
!5192 = !DILocation(line: 2737, column: 4, scope: !5183)
!5193 = distinct !{!5193, !5184, !5194}
!5194 = !DILocation(line: 2741, column: 27, scope: !5180)
!5195 = !DILocation(line: 2743, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 2743, column: 8)
!5197 = !DILocation(line: 2743, column: 8, scope: !5162)
!5198 = !DILocation(line: 2744, column: 11, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 2744, column: 6)
!5200 = !DILocation(line: 0, scope: !5199)
!5201 = !DILocation(line: 2744, column: 26, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2744, column: 6)
!5203 = !DILocation(line: 2744, column: 6, scope: !5199)
!5204 = !DILocation(line: 2745, column: 12, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2745, column: 12)
!5206 = !DILocation(line: 2745, column: 43, scope: !5205)
!5207 = !DILocation(line: 2746, column: 5, scope: !5205)
!5208 = !DILocation(line: 2746, column: 8, scope: !5205)
!5209 = !DILocation(line: 2746, column: 42, scope: !5205)
!5210 = !DILocation(line: 2746, column: 39, scope: !5205)
!5211 = !DILocation(line: 2747, column: 5, scope: !5205)
!5212 = !DILocation(line: 2747, column: 27, scope: !5205)
!5213 = !DILocation(line: 2747, column: 8, scope: !5205)
!5214 = !DILocation(line: 2745, column: 12, scope: !5202)
!5215 = !DILocation(line: 2744, column: 6, scope: !5202)
!5216 = distinct !{!5216, !5203, !5217}
!5217 = !DILocation(line: 2748, column: 10, scope: !5199)
!5218 = !DILocation(line: 2750, column: 31, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2750, column: 16)
!5220 = !DILocation(line: 2751, column: 9, scope: !5219)
!5221 = !DILocation(line: 2751, column: 12, scope: !5219)
!5222 = !DILocation(line: 2751, column: 30, scope: !5219)
!5223 = !DILocation(line: 2751, column: 27, scope: !5219)
!5224 = !DILocation(line: 2752, column: 9, scope: !5219)
!5225 = !DILocation(line: 2752, column: 31, scope: !5219)
!5226 = !DILocation(line: 2752, column: 12, scope: !5219)
!5227 = !DILocation(line: 2750, column: 16, scope: !5163)
!5228 = !DILocation(line: 2754, column: 5, scope: !5160)
!5229 = !DILocation(line: 2755, column: 3, scope: !5154)
!5230 = !DILocation(line: 2756, column: 1, scope: !5154)
!5231 = distinct !DISubprogram(name: "computed_jump_p_1", scope: !3, file: !3, line: 2666, type: !2140, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5232)
!5232 = !{!5233, !5234, !5235, !5236, !5237}
!5233 = !DILocalVariable(name: "x", arg: 1, scope: !5231, file: !3, line: 2666, type: !1673)
!5234 = !DILocalVariable(name: "code", scope: !5231, file: !3, line: 2668, type: !2145)
!5235 = !DILocalVariable(name: "i", scope: !5231, file: !3, line: 2669, type: !579)
!5236 = !DILocalVariable(name: "j", scope: !5231, file: !3, line: 2669, type: !579)
!5237 = !DILocalVariable(name: "fmt", scope: !5231, file: !3, line: 2670, type: !584)
!5238 = !DILocation(line: 0, scope: !5231)
!5239 = !DILocation(line: 2668, column: 30, scope: !5231)
!5240 = !DILocation(line: 2672, column: 3, scope: !5231)
!5241 = !DILocation(line: 2685, column: 7, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 2673, column: 5)
!5243 = !DILocation(line: 2688, column: 17, scope: !5242)
!5244 = !DILocation(line: 2688, column: 40, scope: !5242)
!5245 = !DILocation(line: 2689, column: 3, scope: !5242)
!5246 = !DILocation(line: 2689, column: 6, scope: !5242)
!5247 = !DILocation(line: 2688, column: 7, scope: !5242)
!5248 = !DILocation(line: 2692, column: 34, scope: !5242)
!5249 = !DILocation(line: 2692, column: 15, scope: !5242)
!5250 = !DILocation(line: 2693, column: 8, scope: !5242)
!5251 = !DILocation(line: 2693, column: 30, scope: !5242)
!5252 = !DILocation(line: 2693, column: 11, scope: !5242)
!5253 = !DILocation(line: 2692, column: 7, scope: !5242)
!5254 = !DILocation(line: 2699, column: 9, scope: !5231)
!5255 = !DILocation(line: 2700, column: 12, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 2700, column: 3)
!5257 = !DILocation(line: 0, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 2702, column: 11)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2701, column: 5)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2700, column: 3)
!5261 = !DILocation(line: 2700, column: 8, scope: !5256)
!5262 = !DILocation(line: 0, scope: !5256)
!5263 = !DILocation(line: 2700, column: 41, scope: !5260)
!5264 = !DILocation(line: 2700, column: 3, scope: !5256)
!5265 = !DILocation(line: 2702, column: 11, scope: !5258)
!5266 = !DILocation(line: 2702, column: 18, scope: !5258)
!5267 = !DILocation(line: 2703, column: 4, scope: !5258)
!5268 = !DILocation(line: 2703, column: 26, scope: !5258)
!5269 = !DILocation(line: 2703, column: 7, scope: !5258)
!5270 = !DILocation(line: 2702, column: 11, scope: !5259)
!5271 = !DILocation(line: 2706, column: 16, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2706, column: 16)
!5273 = !DILocation(line: 2706, column: 23, scope: !5272)
!5274 = !DILocation(line: 2706, column: 16, scope: !5258)
!5275 = !DILocation(line: 0, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 2707, column: 2)
!5277 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2707, column: 2)
!5278 = !DILocation(line: 2707, column: 2, scope: !5277)
!5279 = !DILocation(line: 0, scope: !5277)
!5280 = !DILocation(line: 2707, column: 18, scope: !5276)
!5281 = !DILocation(line: 2707, column: 16, scope: !5276)
!5282 = !DILocation(line: 2708, column: 27, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 2708, column: 8)
!5284 = !DILocation(line: 2708, column: 8, scope: !5283)
!5285 = !DILocation(line: 2708, column: 8, scope: !5276)
!5286 = !DILocation(line: 2707, column: 35, scope: !5276)
!5287 = !DILocation(line: 2707, column: 2, scope: !5276)
!5288 = distinct !{!5288, !5278, !5289}
!5289 = !DILocation(line: 2709, column: 13, scope: !5277)
!5290 = !DILocation(line: 2700, column: 3, scope: !5260)
!5291 = distinct !{!5291, !5264, !5292}
!5292 = !DILocation(line: 2710, column: 5, scope: !5256)
!5293 = !DILocation(line: 2713, column: 1, scope: !5231)
!5294 = distinct !DISubprogram(name: "for_each_rtx_1", scope: !3, file: !3, line: 2761, type: !5295, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5297)
!5295 = !DISubroutineType(types: !5296)
!5296 = !{!579, !588, !579, !5062, !583}
!5297 = !{!5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306}
!5298 = !DILocalVariable(name: "exp", arg: 1, scope: !5294, file: !3, line: 2761, type: !588)
!5299 = !DILocalVariable(name: "n", arg: 2, scope: !5294, file: !3, line: 2761, type: !579)
!5300 = !DILocalVariable(name: "f", arg: 3, scope: !5294, file: !3, line: 2761, type: !5062)
!5301 = !DILocalVariable(name: "data", arg: 4, scope: !5294, file: !3, line: 2761, type: !583)
!5302 = !DILocalVariable(name: "result", scope: !5294, file: !3, line: 2763, type: !579)
!5303 = !DILocalVariable(name: "i", scope: !5294, file: !3, line: 2763, type: !579)
!5304 = !DILocalVariable(name: "j", scope: !5294, file: !3, line: 2763, type: !579)
!5305 = !DILocalVariable(name: "format", scope: !5294, file: !3, line: 2764, type: !584)
!5306 = !DILocalVariable(name: "x", scope: !5294, file: !3, line: 2765, type: !1657)
!5307 = !DILocation(line: 0, scope: !5294)
!5308 = !DILocation(line: 2764, column: 24, scope: !5294)
!5309 = !DILocation(line: 0, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2797, column: 8)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2770, column: 2)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2768, column: 5)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2767, column: 3)
!5314 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2767, column: 3)
!5315 = !DILocation(line: 2767, column: 3, scope: !5294)
!5316 = !DILocation(line: 2767, column: 10, scope: !5313)
!5317 = !DILocation(line: 2767, column: 20, scope: !5313)
!5318 = !DILocation(line: 2767, column: 3, scope: !5314)
!5319 = !DILocation(line: 2769, column: 15, scope: !5312)
!5320 = !DILocation(line: 2769, column: 7, scope: !5312)
!5321 = !DILocation(line: 2773, column: 9, scope: !5311)
!5322 = !DILocation(line: 2774, column: 13, scope: !5311)
!5323 = !DILocation(line: 2775, column: 8, scope: !5311)
!5324 = !DILocation(line: 2782, column: 8, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2782, column: 8)
!5326 = !DILocation(line: 2782, column: 11, scope: !5325)
!5327 = !DILocation(line: 2782, column: 8, scope: !5311)
!5328 = !DILocation(line: 2786, column: 34, scope: !5311)
!5329 = !DILocation(line: 2786, column: 8, scope: !5311)
!5330 = !DILocation(line: 2787, column: 10, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2787, column: 8)
!5332 = !DILocation(line: 2787, column: 8, scope: !5311)
!5333 = !DILocation(line: 2789, column: 17, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2788, column: 6)
!5335 = !DILocation(line: 2790, column: 19, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 2790, column: 12)
!5337 = !DILocation(line: 2790, column: 12, scope: !5334)
!5338 = !DILocation(line: 2797, column: 8, scope: !5310)
!5339 = !DILocation(line: 2797, column: 22, scope: !5310)
!5340 = !DILocation(line: 2797, column: 8, scope: !5311)
!5341 = !DILocation(line: 2799, column: 4, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2799, column: 4)
!5343 = !DILocation(line: 2799, column: 20, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 2799, column: 4)
!5345 = !DILocation(line: 2799, column: 18, scope: !5344)
!5346 = !DILocation(line: 2802, column: 13, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 2800, column: 6)
!5348 = !DILocation(line: 2803, column: 17, scope: !5347)
!5349 = !DILocation(line: 2804, column: 12, scope: !5347)
!5350 = !DILocation(line: 2811, column: 12, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2811, column: 12)
!5352 = !DILocation(line: 2811, column: 15, scope: !5351)
!5353 = !DILocation(line: 2811, column: 12, scope: !5347)
!5354 = !DILocation(line: 2815, column: 38, scope: !5347)
!5355 = !DILocation(line: 2815, column: 12, scope: !5347)
!5356 = !DILocation(line: 2816, column: 14, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2816, column: 12)
!5358 = !DILocation(line: 2816, column: 12, scope: !5347)
!5359 = !DILocation(line: 2818, column: 14, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2817, column: 3)
!5361 = !DILocation(line: 2819, column: 16, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 2819, column: 9)
!5363 = !DILocation(line: 2819, column: 9, scope: !5360)
!5364 = !DILocation(line: 2799, column: 38, scope: !5344)
!5365 = !DILocation(line: 2799, column: 4, scope: !5344)
!5366 = distinct !{!5366, !5341, !5367}
!5367 = !DILocation(line: 2822, column: 6, scope: !5342)
!5368 = !DILocation(line: 2767, column: 30, scope: !5313)
!5369 = !DILocation(line: 2767, column: 3, scope: !5313)
!5370 = distinct !{!5370, !5318, !5371}
!5371 = !DILocation(line: 2829, column: 5, scope: !5314)
!5372 = !DILocation(line: 2832, column: 1, scope: !5294)
!5373 = distinct !DISubprogram(name: "regno_use_in", scope: !3, file: !3, line: 2878, type: !5374, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5376)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!588, !7, !588}
!5376 = !{!5377, !5378, !5379, !5380, !5381, !5382}
!5377 = !DILocalVariable(name: "regno", arg: 1, scope: !5373, file: !3, line: 2878, type: !7)
!5378 = !DILocalVariable(name: "x", arg: 2, scope: !5373, file: !3, line: 2878, type: !588)
!5379 = !DILocalVariable(name: "fmt", scope: !5373, file: !3, line: 2880, type: !584)
!5380 = !DILocalVariable(name: "i", scope: !5373, file: !3, line: 2881, type: !579)
!5381 = !DILocalVariable(name: "j", scope: !5373, file: !3, line: 2881, type: !579)
!5382 = !DILocalVariable(name: "tem", scope: !5373, file: !3, line: 2882, type: !588)
!5383 = !DILocation(line: 0, scope: !5373)
!5384 = !DILocation(line: 2884, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2884, column: 7)
!5386 = !DILocation(line: 2884, column: 17, scope: !5385)
!5387 = !DILocation(line: 2884, column: 20, scope: !5385)
!5388 = !DILocation(line: 2884, column: 30, scope: !5385)
!5389 = !DILocation(line: 2884, column: 7, scope: !5373)
!5390 = !DILocation(line: 2887, column: 9, scope: !5373)
!5391 = !DILocation(line: 2888, column: 12, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2888, column: 3)
!5393 = !DILocation(line: 0, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 2896, column: 2)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2895, column: 16)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2890, column: 11)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2889, column: 5)
!5398 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2888, column: 3)
!5399 = !DILocation(line: 2888, column: 8, scope: !5392)
!5400 = !DILocation(line: 0, scope: !5392)
!5401 = !DILocation(line: 2888, column: 49, scope: !5398)
!5402 = !DILocation(line: 2888, column: 3, scope: !5392)
!5403 = !DILocation(line: 2890, column: 11, scope: !5396)
!5404 = !DILocation(line: 2890, column: 18, scope: !5396)
!5405 = !DILocation(line: 2890, column: 11, scope: !5397)
!5406 = !DILocation(line: 2892, column: 36, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 2892, column: 8)
!5408 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2891, column: 2)
!5409 = !DILocation(line: 2892, column: 15, scope: !5407)
!5410 = !DILocation(line: 2892, column: 13, scope: !5407)
!5411 = !DILocation(line: 2892, column: 8, scope: !5408)
!5412 = !DILocation(line: 2895, column: 23, scope: !5395)
!5413 = !DILocation(line: 2895, column: 16, scope: !5396)
!5414 = !DILocation(line: 2896, column: 11, scope: !5394)
!5415 = !DILocation(line: 2896, column: 7, scope: !5394)
!5416 = !DILocation(line: 2896, column: 33, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 2896, column: 2)
!5418 = !DILocation(line: 2896, column: 2, scope: !5394)
!5419 = !DILocation(line: 2897, column: 37, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 2897, column: 8)
!5421 = !DILocation(line: 2897, column: 15, scope: !5420)
!5422 = !DILocation(line: 2897, column: 13, scope: !5420)
!5423 = !DILocation(line: 2897, column: 8, scope: !5417)
!5424 = !DILocation(line: 2896, column: 2, scope: !5417)
!5425 = distinct !{!5425, !5418, !5426}
!5426 = !DILocation(line: 2898, column: 13, scope: !5394)
!5427 = !DILocation(line: 2888, column: 3, scope: !5398)
!5428 = distinct !{!5428, !5402, !5429}
!5429 = !DILocation(line: 2899, column: 5, scope: !5392)
!5430 = !DILocation(line: 2902, column: 1, scope: !5373)
!5431 = distinct !DISubprogram(name: "commutative_operand_precedence", scope: !3, file: !3, line: 2911, type: !5432, scopeLine: 2912, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5434)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{!579, !588}
!5434 = !{!5435, !5436}
!5435 = !DILocalVariable(name: "op", arg: 1, scope: !5431, file: !3, line: 2911, type: !588)
!5436 = !DILocalVariable(name: "code", scope: !5431, file: !3, line: 2913, type: !377)
!5437 = !DILocation(line: 0, scope: !5431)
!5438 = !DILocation(line: 2913, column: 24, scope: !5431)
!5439 = !DILocation(line: 2916, column: 7, scope: !5431)
!5440 = !DILocation(line: 2919, column: 5, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2918, column: 7)
!5442 = !DILocation(line: 2921, column: 5, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2920, column: 7)
!5444 = !DILocation(line: 2922, column: 8, scope: !5431)
!5445 = !DILocation(line: 2923, column: 10, scope: !5431)
!5446 = !DILocation(line: 2925, column: 11, scope: !5431)
!5447 = !DILocation(line: 2925, column: 3, scope: !5431)
!5448 = !DILocation(line: 2928, column: 11, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2926, column: 5)
!5450 = !DILocation(line: 2931, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2930, column: 11)
!5452 = !DILocation(line: 2933, column: 9, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2932, column: 11)
!5454 = !DILocation(line: 2934, column: 7, scope: !5449)
!5455 = !DILocation(line: 2938, column: 16, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2938, column: 11)
!5457 = !DILocation(line: 2938, column: 26, scope: !5456)
!5458 = !DILocation(line: 2938, column: 29, scope: !5456)
!5459 = !DILocation(line: 2938, column: 11, scope: !5449)
!5460 = !DILocation(line: 2940, column: 7, scope: !5449)
!5461 = !DILocation(line: 2945, column: 12, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2945, column: 11)
!5463 = !DILocation(line: 2945, column: 23, scope: !5462)
!5464 = !DILocation(line: 2945, column: 26, scope: !5462)
!5465 = !DILocation(line: 2946, column: 4, scope: !5462)
!5466 = !DILocation(line: 2946, column: 8, scope: !5462)
!5467 = !DILocation(line: 2946, column: 19, scope: !5462)
!5468 = !DILocation(line: 2946, column: 22, scope: !5462)
!5469 = !DILocation(line: 2945, column: 11, scope: !5449)
!5470 = !DILocation(line: 2948, column: 7, scope: !5449)
!5471 = !DILocation(line: 2960, column: 7, scope: !5449)
!5472 = !DILocation(line: 2964, column: 23, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2964, column: 11)
!5474 = !DILocation(line: 2968, column: 7, scope: !5449)
!5475 = !DILocation(line: 2970, column: 1, scope: !5431)
!5476 = distinct !DISubprogram(name: "swap_commutative_operands_p", scope: !3, file: !3, line: 2976, type: !5477, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5479)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!578, !588, !588}
!5479 = !{!5480, !5481}
!5480 = !DILocalVariable(name: "x", arg: 1, scope: !5476, file: !3, line: 2976, type: !588)
!5481 = !DILocalVariable(name: "y", arg: 2, scope: !5476, file: !3, line: 2976, type: !588)
!5482 = !DILocation(line: 0, scope: !5476)
!5483 = !DILocation(line: 2978, column: 11, scope: !5476)
!5484 = !DILocation(line: 2979, column: 6, scope: !5476)
!5485 = !DILocation(line: 2979, column: 4, scope: !5476)
!5486 = !DILocation(line: 2978, column: 10, scope: !5476)
!5487 = !DILocation(line: 2978, column: 3, scope: !5476)
!5488 = distinct !DISubprogram(name: "auto_inc_p", scope: !3, file: !3, line: 2985, type: !2140, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5489)
!5489 = !{!5490}
!5490 = !DILocalVariable(name: "x", arg: 1, scope: !5488, file: !3, line: 2985, type: !1673)
!5491 = !DILocation(line: 0, scope: !5488)
!5492 = !DILocation(line: 2987, column: 11, scope: !5488)
!5493 = !DILocation(line: 2987, column: 3, scope: !5488)
!5494 = !DILocation(line: 2996, column: 11, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2996, column: 11)
!5496 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 2988, column: 5)
!5497 = !DILocation(line: 2996, column: 26, scope: !5495)
!5498 = !DILocation(line: 2996, column: 23, scope: !5495)
!5499 = !DILocation(line: 2996, column: 11, scope: !5496)
!5500 = !DILocation(line: 3001, column: 3, scope: !5488)
!5501 = !DILocation(line: 3002, column: 1, scope: !5488)
!5502 = distinct !DISubprogram(name: "loc_mentioned_in_p", scope: !3, file: !3, line: 3006, type: !5503, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{!579, !1657, !1673}
!5505 = !{!5506, !5507, !5508, !5509, !5510, !5511}
!5506 = !DILocalVariable(name: "loc", arg: 1, scope: !5502, file: !3, line: 3006, type: !1657)
!5507 = !DILocalVariable(name: "in", arg: 2, scope: !5502, file: !3, line: 3006, type: !1673)
!5508 = !DILocalVariable(name: "code", scope: !5502, file: !3, line: 3008, type: !377)
!5509 = !DILocalVariable(name: "fmt", scope: !5502, file: !3, line: 3009, type: !584)
!5510 = !DILocalVariable(name: "i", scope: !5502, file: !3, line: 3010, type: !579)
!5511 = !DILocalVariable(name: "j", scope: !5502, file: !3, line: 3010, type: !579)
!5512 = !DILocation(line: 0, scope: !5502)
!5513 = !DILocation(line: 3012, column: 8, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 3012, column: 7)
!5515 = !DILocation(line: 3012, column: 7, scope: !5502)
!5516 = !DILocation(line: 3015, column: 10, scope: !5502)
!5517 = !DILocation(line: 3016, column: 9, scope: !5502)
!5518 = !DILocation(line: 3017, column: 12, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 3017, column: 3)
!5520 = !DILocation(line: 0, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 3025, column: 2)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 3024, column: 16)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 3019, column: 11)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 3018, column: 5)
!5525 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 3017, column: 3)
!5526 = !DILocation(line: 3017, column: 8, scope: !5519)
!5527 = !DILocation(line: 0, scope: !5519)
!5528 = !DILocation(line: 3017, column: 41, scope: !5525)
!5529 = !DILocation(line: 3017, column: 3, scope: !5519)
!5530 = !DILocation(line: 3019, column: 11, scope: !5523)
!5531 = !DILocation(line: 3019, column: 18, scope: !5523)
!5532 = !DILocation(line: 3019, column: 11, scope: !5524)
!5533 = !DILocation(line: 3021, column: 16, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 3021, column: 8)
!5535 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 3020, column: 2)
!5536 = !DILocation(line: 3021, column: 12, scope: !5534)
!5537 = !DILocation(line: 3021, column: 29, scope: !5534)
!5538 = !DILocation(line: 3021, column: 57, scope: !5534)
!5539 = !DILocation(line: 3021, column: 32, scope: !5534)
!5540 = !DILocation(line: 3021, column: 8, scope: !5535)
!5541 = !DILocation(line: 3024, column: 23, scope: !5522)
!5542 = !DILocation(line: 3024, column: 16, scope: !5523)
!5543 = !DILocation(line: 3025, column: 11, scope: !5521)
!5544 = !DILocation(line: 3025, column: 7, scope: !5521)
!5545 = !DILocation(line: 3025, column: 34, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 3025, column: 2)
!5547 = !DILocation(line: 3025, column: 2, scope: !5521)
!5548 = !DILocation(line: 3026, column: 16, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3026, column: 8)
!5550 = !DILocation(line: 3026, column: 12, scope: !5549)
!5551 = !DILocation(line: 3027, column: 8, scope: !5549)
!5552 = !DILocation(line: 3027, column: 36, scope: !5549)
!5553 = !DILocation(line: 3027, column: 11, scope: !5549)
!5554 = !DILocation(line: 3026, column: 8, scope: !5546)
!5555 = !DILocation(line: 3025, column: 2, scope: !5546)
!5556 = distinct !{!5556, !5547, !5557}
!5557 = !DILocation(line: 3028, column: 13, scope: !5521)
!5558 = !DILocation(line: 3017, column: 3, scope: !5525)
!5559 = distinct !{!5559, !5529, !5560}
!5560 = !DILocation(line: 3029, column: 5, scope: !5519)
!5561 = !DILocation(line: 3031, column: 1, scope: !5502)
!5562 = distinct !DISubprogram(name: "subreg_lsb_1", scope: !3, file: !3, line: 3038, type: !5563, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!7, !5, !5, !7}
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571}
!5566 = !DILocalVariable(name: "outer_mode", arg: 1, scope: !5562, file: !3, line: 3038, type: !5)
!5567 = !DILocalVariable(name: "inner_mode", arg: 2, scope: !5562, file: !3, line: 3039, type: !5)
!5568 = !DILocalVariable(name: "subreg_byte", arg: 3, scope: !5562, file: !3, line: 3040, type: !7)
!5569 = !DILocalVariable(name: "bitpos", scope: !5562, file: !3, line: 3042, type: !7)
!5570 = !DILocalVariable(name: "byte", scope: !5562, file: !3, line: 3043, type: !7)
!5571 = !DILocalVariable(name: "word", scope: !5562, file: !3, line: 3044, type: !7)
!5572 = !DILocation(line: 0, scope: !5562)
!5573 = !DILocation(line: 3047, column: 7, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 3047, column: 7)
!5575 = !DILocation(line: 3047, column: 39, scope: !5574)
!5576 = !DILocation(line: 3047, column: 37, scope: !5574)
!5577 = !DILocation(line: 3047, column: 7, scope: !5562)
!5578 = !DILocation(line: 3062, column: 24, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 3058, column: 7)
!5580 = !DILocation(line: 3063, column: 17, scope: !5562)
!5581 = !DILocation(line: 3070, column: 18, scope: !5562)
!5582 = !DILocation(line: 3070, column: 10, scope: !5562)
!5583 = !DILocation(line: 3072, column: 3, scope: !5562)
!5584 = !DILocation(line: 3073, column: 1, scope: !5562)
!5585 = distinct !DISubprogram(name: "subreg_lsb", scope: !3, file: !3, line: 3079, type: !2483, scopeLine: 3080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5586)
!5586 = !{!5587}
!5587 = !DILocalVariable(name: "x", arg: 1, scope: !5585, file: !3, line: 3079, type: !1673)
!5588 = !DILocation(line: 0, scope: !5585)
!5589 = !DILocation(line: 3081, column: 24, scope: !5585)
!5590 = !DILocation(line: 3081, column: 38, scope: !5585)
!5591 = !DILocation(line: 3082, column: 10, scope: !5585)
!5592 = !DILocation(line: 3081, column: 10, scope: !5585)
!5593 = !DILocation(line: 3081, column: 3, scope: !5585)
!5594 = distinct !DISubprogram(name: "subreg_get_info", scope: !3, file: !3, line: 3092, type: !5595, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5603)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{null, !7, !5, !7, !5, !5597}
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subreg_info", file: !378, line: 1907, size: 96, elements: !5599)
!5599 = !{!5600, !5601, !5602}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5598, file: !378, line: 1910, baseType: !579, size: 32)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !5598, file: !378, line: 1912, baseType: !579, size: 32, offset: 32)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "representable_p", scope: !5598, file: !378, line: 1915, baseType: !578, size: 8, offset: 64)
!5603 = !{!5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619}
!5604 = !DILocalVariable(name: "xregno", arg: 1, scope: !5594, file: !3, line: 3092, type: !7)
!5605 = !DILocalVariable(name: "xmode", arg: 2, scope: !5594, file: !3, line: 3092, type: !5)
!5606 = !DILocalVariable(name: "offset", arg: 3, scope: !5594, file: !3, line: 3093, type: !7)
!5607 = !DILocalVariable(name: "ymode", arg: 4, scope: !5594, file: !3, line: 3093, type: !5)
!5608 = !DILocalVariable(name: "info", arg: 5, scope: !5594, file: !3, line: 3094, type: !5597)
!5609 = !DILocalVariable(name: "nregs_xmode", scope: !5594, file: !3, line: 3096, type: !579)
!5610 = !DILocalVariable(name: "nregs_ymode", scope: !5594, file: !3, line: 3096, type: !579)
!5611 = !DILocalVariable(name: "mode_multiple", scope: !5594, file: !3, line: 3097, type: !579)
!5612 = !DILocalVariable(name: "nregs_multiple", scope: !5594, file: !3, line: 3097, type: !579)
!5613 = !DILocalVariable(name: "offset_adj", scope: !5594, file: !3, line: 3098, type: !579)
!5614 = !DILocalVariable(name: "y_offset", scope: !5594, file: !3, line: 3098, type: !579)
!5615 = !DILocalVariable(name: "y_offset_adj", scope: !5594, file: !3, line: 3098, type: !579)
!5616 = !DILocalVariable(name: "regsize_xmode", scope: !5594, file: !3, line: 3099, type: !579)
!5617 = !DILocalVariable(name: "regsize_ymode", scope: !5594, file: !3, line: 3099, type: !579)
!5618 = !DILocalVariable(name: "rknown", scope: !5594, file: !3, line: 3100, type: !578)
!5619 = !DILocalVariable(name: "xmode_unit", scope: !5620, file: !3, line: 3110, type: !5)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3109, column: 5)
!5621 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3108, column: 7)
!5622 = !DILocation(line: 0, scope: !5594)
!5623 = !DILocation(line: 3102, column: 3, scope: !5594)
!5624 = !DILocation(line: 3108, column: 7, scope: !5621)
!5625 = !DILocation(line: 3108, column: 7, scope: !5594)
!5626 = !DILocation(line: 3112, column: 21, scope: !5620)
!5627 = !DILocation(line: 3113, column: 11, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 3113, column: 11)
!5629 = !DILocation(line: 3113, column: 34, scope: !5628)
!5630 = !DILocation(line: 3113, column: 11, scope: !5620)
!5631 = !DILocation(line: 3116, column: 15, scope: !5628)
!5632 = !DILocation(line: 0, scope: !5620)
!5633 = !DILocation(line: 0, scope: !5628)
!5634 = !DILocation(line: 3117, column: 7, scope: !5620)
!5635 = !DILocation(line: 3118, column: 7, scope: !5620)
!5636 = !DILocation(line: 3121, column: 7, scope: !5620)
!5637 = !DILocation(line: 3133, column: 21, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 3133, column: 11)
!5639 = !DILocation(line: 3133, column: 19, scope: !5638)
!5640 = !DILocation(line: 3133, column: 48, scope: !5638)
!5641 = !DILocation(line: 3134, column: 5, scope: !5638)
!5642 = !DILocation(line: 3135, column: 4, scope: !5638)
!5643 = !DILocation(line: 3136, column: 22, scope: !5638)
!5644 = !DILocation(line: 3136, column: 20, scope: !5638)
!5645 = !DILocation(line: 3136, column: 44, scope: !5638)
!5646 = !DILocation(line: 3137, column: 5, scope: !5638)
!5647 = !DILocation(line: 3136, column: 8, scope: !5638)
!5648 = !DILocation(line: 3133, column: 11, scope: !5620)
!5649 = !DILocation(line: 3139, column: 10, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3138, column: 2)
!5651 = !DILocation(line: 3139, column: 26, scope: !5650)
!5652 = !DILocation(line: 3141, column: 2, scope: !5650)
!5653 = !DILocation(line: 3144, column: 19, scope: !5621)
!5654 = !DILocation(line: 3146, column: 17, scope: !5594)
!5655 = !DILocation(line: 0, scope: !5621)
!5656 = !DILocation(line: 3149, column: 8, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3149, column: 7)
!5658 = !DILocation(line: 3150, column: 17, scope: !5657)
!5659 = !DILocation(line: 3150, column: 7, scope: !5657)
!5660 = !DILocation(line: 3151, column: 10, scope: !5657)
!5661 = !DILocation(line: 3151, column: 34, scope: !5657)
!5662 = !DILocation(line: 3151, column: 32, scope: !5657)
!5663 = !DILocation(line: 3149, column: 7, scope: !5594)
!5664 = !DILocation(line: 3153, column: 13, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3152, column: 5)
!5666 = !DILocation(line: 3153, column: 29, scope: !5665)
!5667 = !DILocation(line: 3162, column: 8, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 3158, column: 11)
!5669 = !DILocation(line: 3162, column: 15, scope: !5668)
!5670 = !DILocation(line: 3163, column: 13, scope: !5665)
!5671 = !DILocation(line: 3163, column: 19, scope: !5665)
!5672 = !DILocation(line: 3164, column: 7, scope: !5665)
!5673 = !DILocation(line: 3169, column: 8, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3169, column: 7)
!5675 = !DILocation(line: 3170, column: 7, scope: !5674)
!5676 = !DILocation(line: 3171, column: 7, scope: !5674)
!5677 = !DILocation(line: 3170, column: 11, scope: !5674)
!5678 = !DILocation(line: 3171, column: 11, scope: !5674)
!5679 = !DILocation(line: 3171, column: 33, scope: !5674)
!5680 = !DILocation(line: 3171, column: 48, scope: !5674)
!5681 = !DILocation(line: 3172, column: 7, scope: !5674)
!5682 = !DILocation(line: 3172, column: 11, scope: !5674)
!5683 = !DILocation(line: 3172, column: 33, scope: !5674)
!5684 = !DILocation(line: 3172, column: 48, scope: !5674)
!5685 = !DILocation(line: 3169, column: 7, scope: !5594)
!5686 = !DILocation(line: 3174, column: 45, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 3173, column: 5)
!5688 = !DILocation(line: 3175, column: 45, scope: !5687)
!5689 = !DILocation(line: 3176, column: 36, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 3176, column: 11)
!5691 = !DILocation(line: 3176, column: 19, scope: !5690)
!5692 = !DILocation(line: 3176, column: 67, scope: !5690)
!5693 = !DILocation(line: 3178, column: 10, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 3177, column: 2)
!5695 = !DILocation(line: 3178, column: 26, scope: !5694)
!5696 = !DILocation(line: 3180, column: 9, scope: !5694)
!5697 = !DILocation(line: 3180, column: 31, scope: !5694)
!5698 = !DILocation(line: 3180, column: 47, scope: !5694)
!5699 = !DILocation(line: 3180, column: 52, scope: !5694)
!5700 = !DILocation(line: 3179, column: 10, scope: !5694)
!5701 = !DILocation(line: 3180, column: 6, scope: !5694)
!5702 = !DILocation(line: 3181, column: 26, scope: !5694)
!5703 = !DILocation(line: 3181, column: 10, scope: !5694)
!5704 = !DILocation(line: 3181, column: 17, scope: !5694)
!5705 = !DILocation(line: 3182, column: 4, scope: !5694)
!5706 = !DILocation(line: 3184, column: 36, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 3184, column: 11)
!5708 = !DILocation(line: 3184, column: 19, scope: !5707)
!5709 = !DILocation(line: 3184, column: 67, scope: !5707)
!5710 = !DILocation(line: 3186, column: 10, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 3185, column: 2)
!5712 = !DILocation(line: 3186, column: 26, scope: !5711)
!5713 = !DILocation(line: 3188, column: 9, scope: !5711)
!5714 = !DILocation(line: 3188, column: 31, scope: !5711)
!5715 = !DILocation(line: 3188, column: 47, scope: !5711)
!5716 = !DILocation(line: 3188, column: 52, scope: !5711)
!5717 = !DILocation(line: 3187, column: 10, scope: !5711)
!5718 = !DILocation(line: 3188, column: 6, scope: !5711)
!5719 = !DILocation(line: 3189, column: 26, scope: !5711)
!5720 = !DILocation(line: 3189, column: 10, scope: !5711)
!5721 = !DILocation(line: 3189, column: 17, scope: !5711)
!5722 = !DILocation(line: 3190, column: 4, scope: !5711)
!5723 = !DILocation(line: 3195, column: 15, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3195, column: 7)
!5725 = !DILocation(line: 3195, column: 28, scope: !5724)
!5726 = !DILocation(line: 3195, column: 25, scope: !5724)
!5727 = !DILocation(line: 3195, column: 7, scope: !5594)
!5728 = !DILocation(line: 3197, column: 13, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 3196, column: 5)
!5730 = !DILocation(line: 3197, column: 29, scope: !5729)
!5731 = !DILocation(line: 3200, column: 38, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 3200, column: 11)
!5733 = !DILocation(line: 3200, column: 23, scope: !5732)
!5734 = !DILocation(line: 3202, column: 10, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 3201, column: 2)
!5736 = !DILocation(line: 3202, column: 17, scope: !5735)
!5737 = !DILocation(line: 3203, column: 10, scope: !5735)
!5738 = !DILocation(line: 3203, column: 16, scope: !5735)
!5739 = !DILocation(line: 3204, column: 4, scope: !5735)
!5740 = !DILocation(line: 3211, column: 3, scope: !5594)
!5741 = !DILocation(line: 3212, column: 3, scope: !5594)
!5742 = !DILocation(line: 3219, column: 27, scope: !5594)
!5743 = !DILocation(line: 3220, column: 13, scope: !5594)
!5744 = !DILocation(line: 3219, column: 12, scope: !5594)
!5745 = !DILocation(line: 3218, column: 17, scope: !5594)
!5746 = !DILocation(line: 3218, column: 14, scope: !5594)
!5747 = !DILocation(line: 3224, column: 19, scope: !5594)
!5748 = !DILocation(line: 3224, column: 43, scope: !5594)
!5749 = !DILocation(line: 3224, column: 41, scope: !5594)
!5750 = !DILocation(line: 3225, column: 3, scope: !5594)
!5751 = !DILocation(line: 3227, column: 23, scope: !5594)
!5752 = !DILocation(line: 3231, column: 3, scope: !5594)
!5753 = !DILocation(line: 3227, column: 21, scope: !5594)
!5754 = !DILocation(line: 3228, column: 29, scope: !5594)
!5755 = !DILocation(line: 3229, column: 32, scope: !5594)
!5756 = !DILocation(line: 3232, column: 3, scope: !5594)
!5757 = !DILocation(line: 3234, column: 8, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3234, column: 7)
!5759 = !DILocation(line: 3234, column: 7, scope: !5594)
!5760 = !DILocation(line: 3239, column: 45, scope: !5594)
!5761 = !DILocation(line: 3236, column: 64, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3235, column: 5)
!5763 = !DILocation(line: 3236, column: 47, scope: !5762)
!5764 = !DILocation(line: 3236, column: 32, scope: !5762)
!5765 = !DILocation(line: 3236, column: 31, scope: !5762)
!5766 = !DILocation(line: 3236, column: 13, scope: !5762)
!5767 = !DILocation(line: 3236, column: 29, scope: !5762)
!5768 = !DILocation(line: 3238, column: 5, scope: !5762)
!5769 = !DILocation(line: 3239, column: 28, scope: !5594)
!5770 = !DILocation(line: 3239, column: 64, scope: !5594)
!5771 = !DILocation(line: 3239, column: 9, scope: !5594)
!5772 = !DILocation(line: 3239, column: 16, scope: !5594)
!5773 = !DILocation(line: 3240, column: 9, scope: !5594)
!5774 = !DILocation(line: 3240, column: 15, scope: !5594)
!5775 = !DILocation(line: 3241, column: 1, scope: !5594)
!5776 = distinct !DISubprogram(name: "subreg_regno_offset", scope: !3, file: !3, line: 3250, type: !5777, scopeLine: 3252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5779)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{!7, !7, !5, !7, !5}
!5779 = !{!5780, !5781, !5782, !5783, !5784}
!5780 = !DILocalVariable(name: "xregno", arg: 1, scope: !5776, file: !3, line: 3250, type: !7)
!5781 = !DILocalVariable(name: "xmode", arg: 2, scope: !5776, file: !3, line: 3250, type: !5)
!5782 = !DILocalVariable(name: "offset", arg: 3, scope: !5776, file: !3, line: 3251, type: !7)
!5783 = !DILocalVariable(name: "ymode", arg: 4, scope: !5776, file: !3, line: 3251, type: !5)
!5784 = !DILocalVariable(name: "info", scope: !5776, file: !3, line: 3253, type: !5598)
!5785 = !DILocation(line: 0, scope: !5776)
!5786 = !DILocation(line: 3253, column: 3, scope: !5776)
!5787 = !DILocation(line: 3254, column: 3, scope: !5776)
!5788 = !DILocation(line: 3255, column: 15, scope: !5776)
!5789 = !DILocation(line: 3256, column: 1, scope: !5776)
!5790 = !DILocation(line: 3255, column: 3, scope: !5776)
!5791 = distinct !DISubprogram(name: "subreg_offset_representable_p", scope: !3, file: !3, line: 3266, type: !5792, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5794)
!5792 = !DISubroutineType(types: !5793)
!5793 = !{!578, !7, !5, !7, !5}
!5794 = !{!5795, !5796, !5797, !5798, !5799}
!5795 = !DILocalVariable(name: "xregno", arg: 1, scope: !5791, file: !3, line: 3266, type: !7)
!5796 = !DILocalVariable(name: "xmode", arg: 2, scope: !5791, file: !3, line: 3266, type: !5)
!5797 = !DILocalVariable(name: "offset", arg: 3, scope: !5791, file: !3, line: 3267, type: !7)
!5798 = !DILocalVariable(name: "ymode", arg: 4, scope: !5791, file: !3, line: 3267, type: !5)
!5799 = !DILocalVariable(name: "info", scope: !5791, file: !3, line: 3269, type: !5598)
!5800 = !DILocation(line: 0, scope: !5791)
!5801 = !DILocation(line: 3269, column: 3, scope: !5791)
!5802 = !DILocation(line: 3270, column: 3, scope: !5791)
!5803 = !DILocation(line: 3271, column: 15, scope: !5791)
!5804 = !DILocation(line: 3272, column: 1, scope: !5791)
!5805 = !DILocation(line: 3271, column: 3, scope: !5791)
!5806 = distinct !DISubprogram(name: "simplify_subreg_regno", scope: !3, file: !3, line: 3283, type: !5807, scopeLine: 3285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5809)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!579, !7, !5, !7, !5}
!5809 = !{!5810, !5811, !5812, !5813, !5814, !5815}
!5810 = !DILocalVariable(name: "xregno", arg: 1, scope: !5806, file: !3, line: 3283, type: !7)
!5811 = !DILocalVariable(name: "xmode", arg: 2, scope: !5806, file: !3, line: 3283, type: !5)
!5812 = !DILocalVariable(name: "offset", arg: 3, scope: !5806, file: !3, line: 3284, type: !7)
!5813 = !DILocalVariable(name: "ymode", arg: 4, scope: !5806, file: !3, line: 3284, type: !5)
!5814 = !DILocalVariable(name: "info", scope: !5806, file: !3, line: 3286, type: !5598)
!5815 = !DILocalVariable(name: "yregno", scope: !5806, file: !3, line: 3287, type: !7)
!5816 = !DILocation(line: 0, scope: !5806)
!5817 = !DILocation(line: 3286, column: 3, scope: !5806)
!5818 = !DILocation(line: 3291, column: 7, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3291, column: 7)
!5820 = !DILocation(line: 3291, column: 30, scope: !5819)
!5821 = !DILocation(line: 3292, column: 7, scope: !5819)
!5822 = !DILocation(line: 3292, column: 33, scope: !5819)
!5823 = !DILocation(line: 3293, column: 7, scope: !5819)
!5824 = !DILocation(line: 3293, column: 10, scope: !5819)
!5825 = !DILocation(line: 3291, column: 7, scope: !5806)
!5826 = !DILocation(line: 3298, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3298, column: 7)
!5828 = !DILocation(line: 3298, column: 26, scope: !5827)
!5829 = !DILocation(line: 3298, column: 29, scope: !5827)
!5830 = !DILocation(line: 3299, column: 7, scope: !5827)
!5831 = !DILocation(line: 3300, column: 4, scope: !5827)
!5832 = !DILocation(line: 3303, column: 7, scope: !5806)
!5833 = !DILocation(line: 3311, column: 3, scope: !5806)
!5834 = !DILocation(line: 3312, column: 13, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3312, column: 7)
!5836 = !DILocation(line: 3312, column: 8, scope: !5835)
!5837 = !DILocation(line: 3312, column: 7, scope: !5806)
!5838 = !DILocation(line: 3316, column: 26, scope: !5806)
!5839 = !DILocation(line: 3316, column: 19, scope: !5806)
!5840 = !DILocation(line: 3317, column: 8, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3317, column: 7)
!5842 = !DILocation(line: 3317, column: 7, scope: !5806)
!5843 = !DILocation(line: 3325, column: 8, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 3325, column: 7)
!5845 = !DILocation(line: 3326, column: 7, scope: !5844)
!5846 = !DILocation(line: 3326, column: 10, scope: !5844)
!5847 = !DILocation(line: 3325, column: 7, scope: !5806)
!5848 = !DILocation(line: 3329, column: 3, scope: !5806)
!5849 = !DILocation(line: 3330, column: 1, scope: !5806)
!5850 = distinct !DISubprogram(name: "subreg_nregs_with_regno", scope: !3, file: !3, line: 3361, type: !5851, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5853)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{!7, !7, !1673}
!5853 = !{!5854, !5855, !5856, !5857}
!5854 = !DILocalVariable(name: "regno", arg: 1, scope: !5850, file: !3, line: 3361, type: !7)
!5855 = !DILocalVariable(name: "x", arg: 2, scope: !5850, file: !3, line: 3361, type: !1673)
!5856 = !DILocalVariable(name: "info", scope: !5850, file: !3, line: 3363, type: !5598)
!5857 = !DILocalVariable(name: "subreg", scope: !5850, file: !3, line: 3364, type: !588)
!5858 = !DILocation(line: 0, scope: !5850)
!5859 = !DILocation(line: 3363, column: 3, scope: !5850)
!5860 = !DILocation(line: 3364, column: 16, scope: !5850)
!5861 = !DILocation(line: 3366, column: 27, scope: !5850)
!5862 = !DILocation(line: 3366, column: 46, scope: !5850)
!5863 = !DILocation(line: 3366, column: 63, scope: !5850)
!5864 = !DILocation(line: 3366, column: 3, scope: !5850)
!5865 = !DILocation(line: 3368, column: 15, scope: !5850)
!5866 = !DILocation(line: 3369, column: 1, scope: !5850)
!5867 = !DILocation(line: 3368, column: 3, scope: !5850)
!5868 = distinct !DISubprogram(name: "find_first_parameter_load", scope: !3, file: !3, line: 3397, type: !5869, scopeLine: 3398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5871)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!588, !588, !588}
!5871 = !{!5872, !5873, !5874, !5875, !5876, !5877, !5878}
!5872 = !DILocalVariable(name: "call_insn", arg: 1, scope: !5868, file: !3, line: 3397, type: !588)
!5873 = !DILocalVariable(name: "boundary", arg: 2, scope: !5868, file: !3, line: 3397, type: !588)
!5874 = !DILocalVariable(name: "parm", scope: !5868, file: !3, line: 3399, type: !1676)
!5875 = !DILocalVariable(name: "p", scope: !5868, file: !3, line: 3400, type: !588)
!5876 = !DILocalVariable(name: "before", scope: !5868, file: !3, line: 3400, type: !588)
!5877 = !DILocalVariable(name: "first_set", scope: !5868, file: !3, line: 3400, type: !588)
!5878 = !DILocalVariable(name: "nregs_old", scope: !5879, file: !3, line: 3446, type: !579)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 3445, column: 2)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 3444, column: 11)
!5881 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 3426, column: 5)
!5882 = !DILocation(line: 0, scope: !5868)
!5883 = !DILocation(line: 3399, column: 3, scope: !5868)
!5884 = !DILocation(line: 3405, column: 3, scope: !5868)
!5885 = !DILocation(line: 3406, column: 8, scope: !5868)
!5886 = !DILocation(line: 3406, column: 14, scope: !5868)
!5887 = !DILocation(line: 3407, column: 12, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 3407, column: 3)
!5889 = !DILocation(line: 3407, column: 8, scope: !5888)
!5890 = !DILocation(line: 0, scope: !5888)
!5891 = !DILocation(line: 3407, column: 3, scope: !5888)
!5892 = !DILocation(line: 3425, column: 3, scope: !5868)
!5893 = !DILocation(line: 3408, column: 9, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 3408, column: 9)
!5895 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 3407, column: 3)
!5896 = !DILocation(line: 3408, column: 32, scope: !5894)
!5897 = !DILocation(line: 3409, column: 2, scope: !5894)
!5898 = !DILocation(line: 3409, column: 5, scope: !5894)
!5899 = !DILocation(line: 3408, column: 9, scope: !5895)
!5900 = !DILocation(line: 3411, column: 2, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 3410, column: 7)
!5902 = !DILocation(line: 3415, column: 7, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 3415, column: 6)
!5904 = !DILocation(line: 3415, column: 6, scope: !5901)
!5905 = !DILocation(line: 3418, column: 2, scope: !5901)
!5906 = !DILocation(line: 3419, column: 12, scope: !5901)
!5907 = !DILocation(line: 3420, column: 7, scope: !5901)
!5908 = !DILocation(line: 3407, column: 57, scope: !5895)
!5909 = !DILocation(line: 3407, column: 3, scope: !5895)
!5910 = distinct !{!5910, !5891, !5911}
!5911 = !DILocation(line: 3420, column: 7, scope: !5888)
!5912 = !DILocation(line: 3425, column: 15, scope: !5868)
!5913 = !DILocation(line: 3425, column: 10, scope: !5868)
!5914 = !DILocation(line: 3425, column: 31, scope: !5868)
!5915 = !DILocation(line: 3425, column: 21, scope: !5868)
!5916 = !DILocation(line: 3427, column: 16, scope: !5881)
!5917 = !DILocation(line: 3431, column: 11, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 3431, column: 11)
!5919 = !DILocation(line: 3431, column: 11, scope: !5881)
!5920 = !DILocation(line: 3438, column: 11, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 3438, column: 11)
!5922 = !DILocation(line: 3438, column: 11, scope: !5881)
!5923 = !DILocation(line: 3440, column: 4, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 3439, column: 2)
!5925 = !DILocation(line: 3444, column: 11, scope: !5880)
!5926 = !DILocation(line: 3444, column: 11, scope: !5881)
!5927 = !DILocation(line: 0, scope: !5879)
!5928 = !DILocation(line: 3447, column: 17, scope: !5879)
!5929 = !DILocation(line: 3447, column: 4, scope: !5879)
!5930 = !DILocation(line: 3452, column: 26, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 3452, column: 8)
!5932 = !DILocation(line: 3452, column: 18, scope: !5931)
!5933 = !DILocation(line: 3452, column: 8, scope: !5879)
!5934 = distinct !{!5934, !5892, !5935}
!5935 = !DILocation(line: 3457, column: 5, scope: !5868)
!5936 = !DILocation(line: 3459, column: 1, scope: !5868)
!5937 = !DILocation(line: 3458, column: 3, scope: !5868)
!5938 = distinct !DISubprogram(name: "parms_set", scope: !3, file: !3, line: 3380, type: !3403, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5939)
!5939 = !{!5940, !5941, !5942, !5943}
!5940 = !DILocalVariable(name: "x", arg: 1, scope: !5938, file: !3, line: 3380, type: !588)
!5941 = !DILocalVariable(name: "pat", arg: 2, scope: !5938, file: !3, line: 3380, type: !1673)
!5942 = !DILocalVariable(name: "data", arg: 3, scope: !5938, file: !3, line: 3380, type: !583)
!5943 = !DILocalVariable(name: "d", scope: !5938, file: !3, line: 3382, type: !5944)
!5944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!5945 = !DILocation(line: 0, scope: !5938)
!5946 = !DILocation(line: 3383, column: 7, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 3383, column: 7)
!5948 = !DILocation(line: 3383, column: 17, scope: !5947)
!5949 = !DILocation(line: 3383, column: 20, scope: !5947)
!5950 = !DILocation(line: 3383, column: 30, scope: !5947)
!5951 = !DILocation(line: 3384, column: 7, scope: !5947)
!5952 = !DILocation(line: 3384, column: 10, scope: !5947)
!5953 = !DILocation(line: 3383, column: 7, scope: !5938)
!5954 = !DILocation(line: 3386, column: 7, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3385, column: 5)
!5956 = !DILocation(line: 3387, column: 10, scope: !5955)
!5957 = !DILocation(line: 3387, column: 15, scope: !5955)
!5958 = !DILocation(line: 3388, column: 5, scope: !5955)
!5959 = !DILocation(line: 3389, column: 1, scope: !5938)
!5960 = distinct !DISubprogram(name: "keep_with_call_p", scope: !3, file: !3, line: 3465, type: !2422, scopeLine: 3466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5961)
!5961 = !{!5962, !5963, !5964}
!5962 = !DILocalVariable(name: "insn", arg: 1, scope: !5960, file: !3, line: 3465, type: !1673)
!5963 = !DILocalVariable(name: "set", scope: !5960, file: !3, line: 3467, type: !588)
!5964 = !DILocalVariable(name: "i2", scope: !5965, file: !3, line: 3489, type: !1673)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 3485, column: 2)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3484, column: 11)
!5967 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 3470, column: 5)
!5968 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3469, column: 7)
!5969 = !DILocation(line: 0, scope: !5960)
!5970 = !DILocation(line: 3469, column: 7, scope: !5968)
!5971 = !DILocation(line: 3469, column: 21, scope: !5968)
!5972 = !DILocation(line: 3469, column: 31, scope: !5968)
!5973 = !DILocation(line: 3469, column: 50, scope: !5968)
!5974 = !DILocation(line: 3469, column: 7, scope: !5960)
!5975 = !DILocation(line: 3471, column: 11, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3471, column: 11)
!5977 = !DILocation(line: 3472, column: 4, scope: !5976)
!5978 = !DILocation(line: 3472, column: 7, scope: !5976)
!5979 = !DILocation(line: 3472, column: 30, scope: !5976)
!5980 = !DILocation(line: 3473, column: 4, scope: !5976)
!5981 = !DILocation(line: 3473, column: 18, scope: !5976)
!5982 = !DILocation(line: 3473, column: 7, scope: !5976)
!5983 = !DILocation(line: 3474, column: 4, scope: !5976)
!5984 = !DILocation(line: 3474, column: 24, scope: !5976)
!5985 = !DILocation(line: 3474, column: 7, scope: !5976)
!5986 = !DILocation(line: 3471, column: 11, scope: !5967)
!5987 = !DILocation(line: 3476, column: 11, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3476, column: 11)
!5989 = !DILocation(line: 3477, column: 4, scope: !5988)
!5990 = !DILocation(line: 3477, column: 7, scope: !5988)
!5991 = !DILocation(line: 3478, column: 4, scope: !5988)
!5992 = !DILocation(line: 3478, column: 7, scope: !5988)
!5993 = !DILocation(line: 3479, column: 4, scope: !5988)
!5994 = !DILocation(line: 3479, column: 7, scope: !5988)
!5995 = !DILocation(line: 3479, column: 30, scope: !5988)
!5996 = !DILocation(line: 3476, column: 11, scope: !5967)
!5997 = !DILocation(line: 3484, column: 11, scope: !5966)
!5998 = !DILocation(line: 3484, column: 29, scope: !5966)
!5999 = !DILocation(line: 3484, column: 26, scope: !5966)
!6000 = !DILocation(line: 3484, column: 11, scope: !5967)
!6001 = !DILocation(line: 3489, column: 19, scope: !5965)
!6002 = !DILocation(line: 0, scope: !5965)
!6003 = !DILocation(line: 3490, column: 8, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 3490, column: 8)
!6005 = !DILocation(line: 3490, column: 11, scope: !6004)
!6006 = !DILocation(line: 3490, column: 14, scope: !6004)
!6007 = !DILocation(line: 3490, column: 8, scope: !5965)
!6008 = !DILocation(line: 3492, column: 2, scope: !5966)
!6009 = !DILocation(line: 3494, column: 3, scope: !5960)
!6010 = !DILocation(line: 3495, column: 1, scope: !5960)
!6011 = distinct !DISubprogram(name: "label_is_jump_target_p", scope: !3, file: !3, line: 3503, type: !6012, scopeLine: 3504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6014)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!578, !1673, !1673}
!6014 = !{!6015, !6016, !6017, !6018, !6021, !6022}
!6015 = !DILocalVariable(name: "label", arg: 1, scope: !6011, file: !3, line: 3503, type: !1673)
!6016 = !DILocalVariable(name: "jump_insn", arg: 2, scope: !6011, file: !3, line: 3503, type: !1673)
!6017 = !DILocalVariable(name: "tmp", scope: !6011, file: !3, line: 3505, type: !588)
!6018 = !DILocalVariable(name: "vec", scope: !6019, file: !3, line: 3512, type: !616)
!6019 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 3511, column: 5)
!6020 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 3510, column: 7)
!6021 = !DILocalVariable(name: "i", scope: !6019, file: !3, line: 3514, type: !579)
!6022 = !DILocalVariable(name: "veclen", scope: !6019, file: !3, line: 3514, type: !579)
!6023 = !DILocation(line: 0, scope: !6011)
!6024 = !DILocation(line: 3505, column: 3, scope: !6011)
!6025 = !DILocation(line: 3505, column: 13, scope: !6011)
!6026 = !DILocation(line: 3505, column: 7, scope: !6011)
!6027 = !DILocation(line: 3507, column: 16, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 3507, column: 7)
!6029 = !DILocation(line: 3507, column: 13, scope: !6028)
!6030 = !DILocation(line: 3507, column: 7, scope: !6011)
!6031 = !DILocation(line: 3510, column: 7, scope: !6020)
!6032 = !DILocation(line: 3510, column: 7, scope: !6011)
!6033 = !DILocation(line: 3512, column: 19, scope: !6019)
!6034 = !DILocation(line: 0, scope: !6019)
!6035 = !DILocation(line: 3514, column: 23, scope: !6019)
!6036 = !DILocation(line: 3516, column: 12, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 3516, column: 7)
!6038 = !DILocation(line: 0, scope: !6037)
!6039 = !DILocation(line: 3516, column: 21, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 3516, column: 7)
!6041 = !DILocation(line: 3516, column: 7, scope: !6037)
!6042 = !DILocation(line: 3517, column: 6, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 3517, column: 6)
!6044 = !DILocation(line: 3517, column: 35, scope: !6043)
!6045 = !DILocation(line: 3517, column: 6, scope: !6040)
!6046 = !DILocation(line: 3516, column: 31, scope: !6040)
!6047 = !DILocation(line: 3516, column: 7, scope: !6040)
!6048 = distinct !{!6048, !6041, !6049}
!6049 = !DILocation(line: 3518, column: 11, scope: !6037)
!6050 = !DILocation(line: 3521, column: 7, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 3521, column: 7)
!6052 = !DILocation(line: 3525, column: 1, scope: !6011)
!6053 = distinct !DISubprogram(name: "rtx_cost", scope: !3, file: !3, line: 3537, type: !6054, scopeLine: 3538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6056)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!579, !588, !377, !578}
!6056 = !{!6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064}
!6057 = !DILocalVariable(name: "x", arg: 1, scope: !6053, file: !3, line: 3537, type: !588)
!6058 = !DILocalVariable(name: "outer_code", arg: 2, scope: !6053, file: !3, line: 3537, type: !377)
!6059 = !DILocalVariable(name: "speed", arg: 3, scope: !6053, file: !3, line: 3537, type: !578)
!6060 = !DILocalVariable(name: "i", scope: !6053, file: !3, line: 3539, type: !579)
!6061 = !DILocalVariable(name: "j", scope: !6053, file: !3, line: 3539, type: !579)
!6062 = !DILocalVariable(name: "code", scope: !6053, file: !3, line: 3540, type: !377)
!6063 = !DILocalVariable(name: "fmt", scope: !6053, file: !3, line: 3541, type: !584)
!6064 = !DILocalVariable(name: "total", scope: !6053, file: !3, line: 3542, type: !579)
!6065 = !DILocation(line: 0, scope: !6053)
!6066 = !DILocation(line: 3542, column: 3, scope: !6053)
!6067 = !DILocation(line: 3544, column: 9, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3544, column: 7)
!6069 = !DILocation(line: 3544, column: 7, scope: !6053)
!6070 = !DILocation(line: 3550, column: 10, scope: !6053)
!6071 = !DILocation(line: 3551, column: 3, scope: !6053)
!6072 = !DILocation(line: 3554, column: 13, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3552, column: 5)
!6074 = !DILocation(line: 3555, column: 7, scope: !6073)
!6075 = !DILocation(line: 3560, column: 13, scope: !6073)
!6076 = !DILocation(line: 3561, column: 7, scope: !6073)
!6077 = !DILocation(line: 3564, column: 13, scope: !6073)
!6078 = !DILocation(line: 3565, column: 7, scope: !6073)
!6079 = !DILocation(line: 3567, column: 13, scope: !6073)
!6080 = !DILocation(line: 3568, column: 5, scope: !6073)
!6081 = !DILocation(line: 3570, column: 3, scope: !6053)
!6082 = !DILocation(line: 3576, column: 13, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3571, column: 5)
!6084 = !DILocation(line: 3579, column: 13, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3579, column: 11)
!6086 = !DILocation(line: 3579, column: 11, scope: !6083)
!6087 = !DILocation(line: 3580, column: 9, scope: !6085)
!6088 = !DILocation(line: 3580, column: 2, scope: !6085)
!6089 = !DILocation(line: 3585, column: 19, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3585, column: 11)
!6091 = !DILocation(line: 3585, column: 11, scope: !6090)
!6092 = !DILocation(line: 3585, column: 11, scope: !6083)
!6093 = !DILocation(line: 3586, column: 9, scope: !6090)
!6094 = !DILocation(line: 3586, column: 2, scope: !6090)
!6095 = !DILocation(line: 3593, column: 9, scope: !6053)
!6096 = !DILocation(line: 3594, column: 12, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3594, column: 3)
!6098 = !DILocation(line: 0, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 3598, column: 7)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3598, column: 7)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 3597, column: 14)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 3595, column: 9)
!6103 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 3594, column: 3)
!6104 = !DILocation(line: 3594, column: 8, scope: !6097)
!6105 = !DILocation(line: 0, scope: !6097)
!6106 = !DILocation(line: 3594, column: 41, scope: !6103)
!6107 = !DILocation(line: 3594, column: 3, scope: !6097)
!6108 = !DILocation(line: 3595, column: 9, scope: !6102)
!6109 = !DILocation(line: 3595, column: 16, scope: !6102)
!6110 = !DILocation(line: 3595, column: 9, scope: !6103)
!6111 = !DILocation(line: 3596, column: 26, scope: !6102)
!6112 = !DILocation(line: 3596, column: 16, scope: !6102)
!6113 = !DILocation(line: 3596, column: 13, scope: !6102)
!6114 = !DILocation(line: 3596, column: 7, scope: !6102)
!6115 = !DILocation(line: 3597, column: 21, scope: !6101)
!6116 = !DILocation(line: 3597, column: 14, scope: !6102)
!6117 = !DILocation(line: 3598, column: 7, scope: !6100)
!6118 = !DILocation(line: 0, scope: !6100)
!6119 = !DILocation(line: 3598, column: 23, scope: !6099)
!6120 = !DILocation(line: 3598, column: 21, scope: !6099)
!6121 = !DILocation(line: 3599, column: 21, scope: !6099)
!6122 = !DILocation(line: 3599, column: 11, scope: !6099)
!6123 = !DILocation(line: 3599, column: 8, scope: !6099)
!6124 = !DILocation(line: 3598, column: 40, scope: !6099)
!6125 = !DILocation(line: 3598, column: 7, scope: !6099)
!6126 = distinct !{!6126, !6117, !6127}
!6127 = !DILocation(line: 3599, column: 51, scope: !6100)
!6128 = !DILocation(line: 3594, column: 3, scope: !6103)
!6129 = distinct !{!6129, !6107, !6130}
!6130 = !DILocation(line: 3599, column: 51, scope: !6097)
!6131 = !DILocation(line: 3601, column: 10, scope: !6053)
!6132 = !DILocation(line: 3601, column: 3, scope: !6053)
!6133 = !DILocation(line: 3602, column: 1, scope: !6053)
!6134 = distinct !DISubprogram(name: "address_cost", scope: !3, file: !3, line: 3611, type: !6135, scopeLine: 3612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6138)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{!579, !588, !5, !6137, !578}
!6137 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !589, line: 73, baseType: !578)
!6138 = !{!6139, !6140, !6141, !6142}
!6139 = !DILocalVariable(name: "x", arg: 1, scope: !6134, file: !3, line: 3611, type: !588)
!6140 = !DILocalVariable(name: "mode", arg: 2, scope: !6134, file: !3, line: 3611, type: !5)
!6141 = !DILocalVariable(name: "as", arg: 3, scope: !6134, file: !3, line: 3611, type: !6137)
!6142 = !DILocalVariable(name: "speed", arg: 4, scope: !6134, file: !3, line: 3611, type: !578)
!6143 = !DILocation(line: 0, scope: !6134)
!6144 = !DILocation(line: 3617, column: 8, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 3617, column: 7)
!6146 = !DILocation(line: 3617, column: 7, scope: !6134)
!6147 = !DILocation(line: 3620, column: 18, scope: !6134)
!6148 = !DILocation(line: 3620, column: 10, scope: !6134)
!6149 = !DILocation(line: 3620, column: 3, scope: !6134)
!6150 = !DILocation(line: 3621, column: 1, scope: !6134)
!6151 = distinct !DISubprogram(name: "default_address_cost", scope: !3, file: !3, line: 3626, type: !6152, scopeLine: 3627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!579, !588, !578}
!6154 = !{!6155, !6156}
!6155 = !DILocalVariable(name: "x", arg: 1, scope: !6151, file: !3, line: 3626, type: !588)
!6156 = !DILocalVariable(name: "speed", arg: 2, scope: !6151, file: !3, line: 3626, type: !578)
!6157 = !DILocation(line: 0, scope: !6151)
!6158 = !DILocation(line: 3628, column: 10, scope: !6151)
!6159 = !DILocation(line: 3628, column: 3, scope: !6151)
!6160 = distinct !DISubprogram(name: "nonzero_bits", scope: !3, file: !3, line: 3633, type: !6161, scopeLine: 3634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6163)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!587, !1673, !5}
!6163 = !{!6164, !6165}
!6164 = !DILocalVariable(name: "x", arg: 1, scope: !6160, file: !3, line: 3633, type: !1673)
!6165 = !DILocalVariable(name: "mode", arg: 2, scope: !6160, file: !3, line: 3633, type: !5)
!6166 = !DILocation(line: 0, scope: !6160)
!6167 = !DILocation(line: 3635, column: 10, scope: !6160)
!6168 = !DILocation(line: 3635, column: 3, scope: !6160)
!6169 = distinct !DISubprogram(name: "cached_nonzero_bits", scope: !3, file: !3, line: 3649, type: !6170, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!587, !1673, !5, !1673, !5, !587}
!6172 = !{!6173, !6174, !6175, !6176, !6177, !6178, !6181}
!6173 = !DILocalVariable(name: "x", arg: 1, scope: !6169, file: !3, line: 3649, type: !1673)
!6174 = !DILocalVariable(name: "mode", arg: 2, scope: !6169, file: !3, line: 3649, type: !5)
!6175 = !DILocalVariable(name: "known_x", arg: 3, scope: !6169, file: !3, line: 3649, type: !1673)
!6176 = !DILocalVariable(name: "known_mode", arg: 4, scope: !6169, file: !3, line: 3650, type: !5)
!6177 = !DILocalVariable(name: "known_ret", arg: 5, scope: !6169, file: !3, line: 3651, type: !587)
!6178 = !DILocalVariable(name: "x0", scope: !6179, file: !3, line: 3662, type: !588)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 3661, column: 5)
!6180 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 3660, column: 7)
!6181 = !DILocalVariable(name: "x1", scope: !6179, file: !3, line: 3663, type: !588)
!6182 = !DILocation(line: 0, scope: !6169)
!6183 = !DILocation(line: 3653, column: 9, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 3653, column: 7)
!6185 = !DILocation(line: 3653, column: 28, scope: !6184)
!6186 = !DILocation(line: 3653, column: 20, scope: !6184)
!6187 = !DILocation(line: 3660, column: 7, scope: !6180)
!6188 = !DILocation(line: 3660, column: 7, scope: !6169)
!6189 = !DILocation(line: 3662, column: 16, scope: !6179)
!6190 = !DILocation(line: 0, scope: !6179)
!6191 = !DILocation(line: 3663, column: 16, scope: !6179)
!6192 = !DILocation(line: 3666, column: 14, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 3666, column: 11)
!6194 = !DILocation(line: 3666, column: 11, scope: !6179)
!6195 = !DILocation(line: 3668, column: 10, scope: !6193)
!6196 = !DILocation(line: 3667, column: 9, scope: !6193)
!6197 = !DILocation(line: 3667, column: 2, scope: !6193)
!6198 = !DILocation(line: 3672, column: 11, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 3672, column: 11)
!6200 = !DILocation(line: 3673, column: 4, scope: !6199)
!6201 = !DILocation(line: 3673, column: 14, scope: !6199)
!6202 = !DILocation(line: 3673, column: 11, scope: !6199)
!6203 = !DILocation(line: 3673, column: 27, scope: !6199)
!6204 = !DILocation(line: 3673, column: 36, scope: !6199)
!6205 = !DILocation(line: 3673, column: 33, scope: !6199)
!6206 = !DILocation(line: 3672, column: 11, scope: !6179)
!6207 = !DILocation(line: 3675, column: 10, scope: !6199)
!6208 = !DILocation(line: 3674, column: 9, scope: !6199)
!6209 = !DILocation(line: 3674, column: 2, scope: !6199)
!6210 = !DILocation(line: 3678, column: 11, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 3678, column: 11)
!6212 = !DILocation(line: 3679, column: 4, scope: !6211)
!6213 = !DILocation(line: 3679, column: 14, scope: !6211)
!6214 = !DILocation(line: 3679, column: 11, scope: !6211)
!6215 = !DILocation(line: 3679, column: 27, scope: !6211)
!6216 = !DILocation(line: 3679, column: 36, scope: !6211)
!6217 = !DILocation(line: 3679, column: 33, scope: !6211)
!6218 = !DILocation(line: 3678, column: 11, scope: !6179)
!6219 = !DILocation(line: 3681, column: 10, scope: !6211)
!6220 = !DILocation(line: 3680, column: 9, scope: !6211)
!6221 = !DILocation(line: 3680, column: 2, scope: !6211)
!6222 = !DILocation(line: 3685, column: 10, scope: !6169)
!6223 = !DILocation(line: 3685, column: 3, scope: !6169)
!6224 = !DILocation(line: 3686, column: 1, scope: !6169)
!6225 = distinct !DISubprogram(name: "num_sign_bit_copies", scope: !3, file: !3, line: 3639, type: !6226, scopeLine: 3640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6228)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{!7, !1673, !5}
!6228 = !{!6229, !6230}
!6229 = !DILocalVariable(name: "x", arg: 1, scope: !6225, file: !3, line: 3639, type: !1673)
!6230 = !DILocalVariable(name: "mode", arg: 2, scope: !6225, file: !3, line: 3639, type: !5)
!6231 = !DILocation(line: 0, scope: !6225)
!6232 = !DILocation(line: 3641, column: 10, scope: !6225)
!6233 = !DILocation(line: 3641, column: 3, scope: !6225)
!6234 = distinct !DISubprogram(name: "cached_num_sign_bit_copies", scope: !3, file: !3, line: 4168, type: !6235, scopeLine: 4171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!7, !1673, !5, !1673, !5, !7}
!6237 = !{!6238, !6239, !6240, !6241, !6242, !6243, !6246}
!6238 = !DILocalVariable(name: "x", arg: 1, scope: !6234, file: !3, line: 4168, type: !1673)
!6239 = !DILocalVariable(name: "mode", arg: 2, scope: !6234, file: !3, line: 4168, type: !5)
!6240 = !DILocalVariable(name: "known_x", arg: 3, scope: !6234, file: !3, line: 4168, type: !1673)
!6241 = !DILocalVariable(name: "known_mode", arg: 4, scope: !6234, file: !3, line: 4169, type: !5)
!6242 = !DILocalVariable(name: "known_ret", arg: 5, scope: !6234, file: !3, line: 4170, type: !7)
!6243 = !DILocalVariable(name: "x0", scope: !6244, file: !3, line: 4181, type: !588)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 4180, column: 5)
!6245 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 4179, column: 7)
!6246 = !DILocalVariable(name: "x1", scope: !6244, file: !3, line: 4182, type: !588)
!6247 = !DILocation(line: 0, scope: !6234)
!6248 = !DILocation(line: 4172, column: 9, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 4172, column: 7)
!6250 = !DILocation(line: 4172, column: 28, scope: !6249)
!6251 = !DILocation(line: 4172, column: 20, scope: !6249)
!6252 = !DILocation(line: 4179, column: 7, scope: !6245)
!6253 = !DILocation(line: 4179, column: 7, scope: !6234)
!6254 = !DILocation(line: 4181, column: 16, scope: !6244)
!6255 = !DILocation(line: 0, scope: !6244)
!6256 = !DILocation(line: 4182, column: 16, scope: !6244)
!6257 = !DILocation(line: 4185, column: 14, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 4185, column: 11)
!6259 = !DILocation(line: 4185, column: 11, scope: !6244)
!6260 = !DILocation(line: 4188, column: 5, scope: !6258)
!6261 = !DILocation(line: 4187, column: 4, scope: !6258)
!6262 = !DILocation(line: 4186, column: 2, scope: !6258)
!6263 = !DILocation(line: 4193, column: 11, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 4193, column: 11)
!6265 = !DILocation(line: 4194, column: 4, scope: !6264)
!6266 = !DILocation(line: 4194, column: 14, scope: !6264)
!6267 = !DILocation(line: 4194, column: 11, scope: !6264)
!6268 = !DILocation(line: 4194, column: 27, scope: !6264)
!6269 = !DILocation(line: 4194, column: 36, scope: !6264)
!6270 = !DILocation(line: 4194, column: 33, scope: !6264)
!6271 = !DILocation(line: 4193, column: 11, scope: !6244)
!6272 = !DILocation(line: 4197, column: 5, scope: !6264)
!6273 = !DILocation(line: 4196, column: 4, scope: !6264)
!6274 = !DILocation(line: 4195, column: 2, scope: !6264)
!6275 = !DILocation(line: 4201, column: 11, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 4201, column: 11)
!6277 = !DILocation(line: 4202, column: 4, scope: !6276)
!6278 = !DILocation(line: 4202, column: 14, scope: !6276)
!6279 = !DILocation(line: 4202, column: 11, scope: !6276)
!6280 = !DILocation(line: 4202, column: 27, scope: !6276)
!6281 = !DILocation(line: 4202, column: 36, scope: !6276)
!6282 = !DILocation(line: 4202, column: 33, scope: !6276)
!6283 = !DILocation(line: 4201, column: 11, scope: !6244)
!6284 = !DILocation(line: 4205, column: 5, scope: !6276)
!6285 = !DILocation(line: 4204, column: 4, scope: !6276)
!6286 = !DILocation(line: 4203, column: 2, scope: !6276)
!6287 = !DILocation(line: 4210, column: 10, scope: !6234)
!6288 = !DILocation(line: 4210, column: 3, scope: !6234)
!6289 = !DILocation(line: 4211, column: 1, scope: !6234)
!6290 = distinct !DISubprogram(name: "insn_rtx_cost", scope: !3, file: !3, line: 4628, type: !6152, scopeLine: 4629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6291)
!6291 = !{!6292, !6293, !6294, !6295, !6296, !6297}
!6292 = !DILocalVariable(name: "pat", arg: 1, scope: !6290, file: !3, line: 4628, type: !588)
!6293 = !DILocalVariable(name: "speed", arg: 2, scope: !6290, file: !3, line: 4628, type: !578)
!6294 = !DILocalVariable(name: "i", scope: !6290, file: !3, line: 4630, type: !579)
!6295 = !DILocalVariable(name: "cost", scope: !6290, file: !3, line: 4630, type: !579)
!6296 = !DILocalVariable(name: "set", scope: !6290, file: !3, line: 4631, type: !588)
!6297 = !DILocalVariable(name: "x", scope: !6298, file: !3, line: 4642, type: !588)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 4641, column: 2)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 4640, column: 7)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 4640, column: 7)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 4638, column: 5)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 4637, column: 12)
!6303 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 4635, column: 7)
!6304 = !DILocation(line: 0, scope: !6290)
!6305 = !DILocation(line: 4635, column: 7, scope: !6303)
!6306 = !DILocation(line: 4635, column: 22, scope: !6303)
!6307 = !DILocation(line: 4635, column: 7, scope: !6290)
!6308 = !DILocation(line: 4637, column: 27, scope: !6302)
!6309 = !DILocation(line: 4637, column: 12, scope: !6303)
!6310 = !DILocation(line: 0, scope: !6299)
!6311 = !DILocation(line: 4640, column: 7, scope: !6300)
!6312 = !DILocation(line: 0, scope: !6300)
!6313 = !DILocation(line: 4639, column: 11, scope: !6301)
!6314 = !DILocation(line: 4640, column: 21, scope: !6299)
!6315 = !DILocation(line: 4642, column: 12, scope: !6298)
!6316 = !DILocation(line: 0, scope: !6298)
!6317 = !DILocation(line: 4643, column: 8, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 4643, column: 8)
!6319 = !DILocation(line: 4643, column: 21, scope: !6318)
!6320 = !DILocation(line: 4643, column: 8, scope: !6298)
!6321 = !DILocation(line: 4645, column: 12, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 4645, column: 12)
!6323 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 4644, column: 6)
!6324 = !DILocation(line: 4645, column: 12, scope: !6323)
!6325 = !DILocation(line: 0, scope: !6301)
!6326 = !DILocation(line: 4649, column: 2, scope: !6299)
!6327 = !DILocation(line: 4640, column: 42, scope: !6299)
!6328 = !DILocation(line: 4640, column: 7, scope: !6299)
!6329 = distinct !{!6329, !6311, !6330}
!6330 = !DILocation(line: 4649, column: 2, scope: !6300)
!6331 = !DILocation(line: 4650, column: 12, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 4650, column: 11)
!6333 = !DILocation(line: 4650, column: 11, scope: !6301)
!6334 = !DILocation(line: 0, scope: !6303)
!6335 = !DILocation(line: 4656, column: 20, scope: !6290)
!6336 = !DILocation(line: 4656, column: 10, scope: !6290)
!6337 = !DILocation(line: 4657, column: 15, scope: !6290)
!6338 = !DILocation(line: 4657, column: 10, scope: !6290)
!6339 = !DILocation(line: 4657, column: 3, scope: !6290)
!6340 = !DILocation(line: 4658, column: 1, scope: !6290)
!6341 = distinct !DISubprogram(name: "canonicalize_condition", scope: !3, file: !3, line: 4688, type: !6342, scopeLine: 4690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6344)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!588, !588, !588, !579, !1657, !588, !579, !579}
!6344 = !{!6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360, !6361, !6363, !6366, !6369, !6370}
!6345 = !DILocalVariable(name: "insn", arg: 1, scope: !6341, file: !3, line: 4688, type: !588)
!6346 = !DILocalVariable(name: "cond", arg: 2, scope: !6341, file: !3, line: 4688, type: !588)
!6347 = !DILocalVariable(name: "reverse", arg: 3, scope: !6341, file: !3, line: 4688, type: !579)
!6348 = !DILocalVariable(name: "earliest", arg: 4, scope: !6341, file: !3, line: 4688, type: !1657)
!6349 = !DILocalVariable(name: "want_reg", arg: 5, scope: !6341, file: !3, line: 4689, type: !588)
!6350 = !DILocalVariable(name: "allow_cc_mode", arg: 6, scope: !6341, file: !3, line: 4689, type: !579)
!6351 = !DILocalVariable(name: "valid_at_insn_p", arg: 7, scope: !6341, file: !3, line: 4689, type: !579)
!6352 = !DILocalVariable(name: "code", scope: !6341, file: !3, line: 4691, type: !377)
!6353 = !DILocalVariable(name: "prev", scope: !6341, file: !3, line: 4692, type: !588)
!6354 = !DILocalVariable(name: "set", scope: !6341, file: !3, line: 4693, type: !1673)
!6355 = !DILocalVariable(name: "tem", scope: !6341, file: !3, line: 4694, type: !588)
!6356 = !DILocalVariable(name: "op0", scope: !6341, file: !3, line: 4695, type: !588)
!6357 = !DILocalVariable(name: "op1", scope: !6341, file: !3, line: 4695, type: !588)
!6358 = !DILocalVariable(name: "reverse_code", scope: !6341, file: !3, line: 4696, type: !579)
!6359 = !DILocalVariable(name: "mode", scope: !6341, file: !3, line: 4697, type: !5)
!6360 = !DILocalVariable(name: "bb", scope: !6341, file: !3, line: 4698, type: !960)
!6361 = !DILocalVariable(name: "x", scope: !6362, file: !3, line: 4724, type: !588)
!6362 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4722, column: 5)
!6363 = !DILocalVariable(name: "inner_mode", scope: !6364, file: !3, line: 4782, type: !5)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 4781, column: 2)
!6365 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4780, column: 11)
!6366 = !DILocalVariable(name: "const_val", scope: !6367, file: !3, line: 4896, type: !674)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 4895, column: 5)
!6368 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4891, column: 7)
!6369 = !DILocalVariable(name: "uconst_val", scope: !6367, file: !3, line: 4897, type: !587)
!6370 = !DILocalVariable(name: "max_val", scope: !6367, file: !3, line: 4898, type: !587)
!6371 = !DILocation(line: 0, scope: !6341)
!6372 = !DILocation(line: 4698, column: 20, scope: !6341)
!6373 = !DILocation(line: 4700, column: 10, scope: !6341)
!6374 = !DILocation(line: 4701, column: 10, scope: !6341)
!6375 = !DILocation(line: 4702, column: 9, scope: !6341)
!6376 = !DILocation(line: 4703, column: 9, scope: !6341)
!6377 = !DILocation(line: 4705, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4705, column: 7)
!6379 = !DILocation(line: 4705, column: 7, scope: !6341)
!6380 = !DILocation(line: 4706, column: 12, scope: !6378)
!6381 = !DILocation(line: 4706, column: 5, scope: !6378)
!6382 = !DILocation(line: 4707, column: 12, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4707, column: 7)
!6384 = !DILocation(line: 4707, column: 7, scope: !6341)
!6385 = !DILocation(line: 4710, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4710, column: 7)
!6387 = !DILocation(line: 4710, column: 7, scope: !6341)
!6388 = !DILocation(line: 4711, column: 15, scope: !6386)
!6389 = !DILocation(line: 4711, column: 5, scope: !6386)
!6390 = !DILocation(line: 0, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 4801, column: 8)
!6392 = !DILocation(line: 0, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 4858, column: 8)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 4855, column: 2)
!6395 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4854, column: 11)
!6396 = !DILocation(line: 4718, column: 3, scope: !6341)
!6397 = !DILocation(line: 4706, column: 10, scope: !6378)
!6398 = !DILocation(line: 4692, column: 7, scope: !6341)
!6399 = !DILocation(line: 4696, column: 7, scope: !6341)
!6400 = !DILocation(line: 4718, column: 11, scope: !6341)
!6401 = !DILocation(line: 4718, column: 32, scope: !6341)
!6402 = !DILocation(line: 4719, column: 4, scope: !6341)
!6403 = !DILocation(line: 4719, column: 28, scope: !6341)
!6404 = !DILocation(line: 4720, column: 3, scope: !6341)
!6405 = !DILocation(line: 4720, column: 13, scope: !6341)
!6406 = !DILocation(line: 4720, column: 10, scope: !6341)
!6407 = !DILocation(line: 4721, column: 10, scope: !6341)
!6408 = !DILocation(line: 4721, column: 3, scope: !6341)
!6409 = !DILocation(line: 0, scope: !6362)
!6410 = !DILocation(line: 4745, column: 11, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4745, column: 11)
!6412 = !DILocation(line: 4745, column: 26, scope: !6411)
!6413 = !DILocation(line: 4745, column: 11, scope: !6362)
!6414 = !DILocation(line: 4747, column: 10, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 4746, column: 2)
!6416 = !DILocation(line: 4748, column: 10, scope: !6415)
!6417 = !DILocation(line: 4749, column: 4, scope: !6415)
!6418 = distinct !{!6418, !6396, !6419}
!6419 = !DILocation(line: 4875, column: 5, scope: !6341)
!6420 = !DILocation(line: 4751, column: 17, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 4751, column: 16)
!6422 = !DILocation(line: 4751, column: 16, scope: !6411)
!6423 = !DILocation(line: 4758, column: 7, scope: !6362)
!6424 = !DILocation(line: 4759, column: 9, scope: !6362)
!6425 = !DILocation(line: 4760, column: 19, scope: !6362)
!6426 = !DILocation(line: 4760, column: 22, scope: !6362)
!6427 = !DILocation(line: 4759, column: 2, scope: !6362)
!6428 = distinct !{!6428, !6423, !6429}
!6429 = !DILocation(line: 4760, column: 41, scope: !6362)
!6430 = !DILocation(line: 4763, column: 8, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4762, column: 11)
!6432 = !DILocation(line: 4768, column: 4, scope: !6431)
!6433 = !DILocation(line: 4768, column: 7, scope: !6431)
!6434 = !DILocation(line: 4768, column: 29, scope: !6431)
!6435 = !DILocation(line: 4762, column: 11, scope: !6362)
!6436 = !DILocation(line: 4771, column: 13, scope: !6362)
!6437 = !DILocation(line: 4774, column: 4, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4773, column: 11)
!6439 = !DILocation(line: 4774, column: 8, scope: !6438)
!6440 = !DILocation(line: 4774, column: 23, scope: !6438)
!6441 = !DILocation(line: 4775, column: 8, scope: !6438)
!6442 = !DILocation(line: 4775, column: 25, scope: !6438)
!6443 = !DILocation(line: 4775, column: 12, scope: !6438)
!6444 = !DILocation(line: 4773, column: 11, scope: !6362)
!6445 = !DILocation(line: 4782, column: 35, scope: !6364)
!6446 = !DILocation(line: 0, scope: !6364)
!6447 = !DILocation(line: 4801, column: 9, scope: !6391)
!6448 = !DILocation(line: 4801, column: 34, scope: !6391)
!6449 = !DILocation(line: 4802, column: 9, scope: !6391)
!6450 = !DILocation(line: 4803, column: 8, scope: !6391)
!6451 = !DILocation(line: 4805, column: 5, scope: !6391)
!6452 = !DILocation(line: 4807, column: 5, scope: !6391)
!6453 = !DILocation(line: 4817, column: 6, scope: !6391)
!6454 = !DILocation(line: 4817, column: 9, scope: !6391)
!6455 = !DILocation(line: 4818, column: 8, scope: !6391)
!6456 = !DILocation(line: 4818, column: 14, scope: !6391)
!6457 = !DILocation(line: 4818, column: 36, scope: !6391)
!6458 = !DILocation(line: 4819, column: 10, scope: !6391)
!6459 = !DILocation(line: 4819, column: 38, scope: !6391)
!6460 = !DILocation(line: 4819, column: 6, scope: !6391)
!6461 = !DILocation(line: 4820, column: 5, scope: !6391)
!6462 = !DILocation(line: 4820, column: 39, scope: !6391)
!6463 = !DILocation(line: 4821, column: 6, scope: !6391)
!6464 = !DILocation(line: 4823, column: 8, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 4822, column: 13)
!6466 = !DILocation(line: 4824, column: 9, scope: !6465)
!6467 = !DILocation(line: 4825, column: 9, scope: !6465)
!6468 = !DILocation(line: 4826, column: 5, scope: !6465)
!6469 = !DILocation(line: 4826, column: 8, scope: !6465)
!6470 = !DILocation(line: 4826, column: 36, scope: !6465)
!6471 = !DILocation(line: 4827, column: 5, scope: !6465)
!6472 = !DILocation(line: 4837, column: 6, scope: !6465)
!6473 = !DILocation(line: 4837, column: 9, scope: !6465)
!6474 = !DILocation(line: 4838, column: 6, scope: !6465)
!6475 = !DILocation(line: 4838, column: 12, scope: !6465)
!6476 = !DILocation(line: 4838, column: 34, scope: !6465)
!6477 = !DILocation(line: 4839, column: 8, scope: !6465)
!6478 = !DILocation(line: 4839, column: 36, scope: !6465)
!6479 = !DILocation(line: 4839, column: 4, scope: !6465)
!6480 = !DILocation(line: 4840, column: 10, scope: !6465)
!6481 = !DILocation(line: 4840, column: 44, scope: !6465)
!6482 = !DILocation(line: 4850, column: 16, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 4850, column: 16)
!6484 = !DILocation(line: 4850, column: 16, scope: !6365)
!6485 = !DILocation(line: 4854, column: 11, scope: !6395)
!6486 = !DILocation(line: 4854, column: 11, scope: !6362)
!6487 = !DILocation(line: 4858, column: 8, scope: !6394)
!6488 = !DILocation(line: 4859, column: 10, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 4859, column: 10)
!6490 = !DILocation(line: 4859, column: 34, scope: !6489)
!6491 = !DILocation(line: 4859, column: 37, scope: !6489)
!6492 = !DILocation(line: 4859, column: 10, scope: !6393)
!6493 = !DILocation(line: 4861, column: 8, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 4861, column: 8)
!6495 = !DILocation(line: 4861, column: 8, scope: !6394)
!6496 = !DILocation(line: 4862, column: 6, scope: !6494)
!6497 = !DILocation(line: 4863, column: 8, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 4863, column: 8)
!6499 = !DILocation(line: 4863, column: 8, scope: !6394)
!6500 = !DILocation(line: 4865, column: 15, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 4864, column: 6)
!6502 = !DILocation(line: 4866, column: 17, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 4866, column: 12)
!6504 = !DILocation(line: 4866, column: 12, scope: !6501)
!6505 = !DILocation(line: 0, scope: !6394)
!6506 = !DILocation(line: 4871, column: 10, scope: !6394)
!6507 = !DILocation(line: 4871, column: 29, scope: !6394)
!6508 = !DILocation(line: 4872, column: 8, scope: !6394)
!6509 = !DILocation(line: 4873, column: 16, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 4872, column: 8)
!6511 = !DILocation(line: 4873, column: 6, scope: !6510)
!6512 = !DILocation(line: 4878, column: 7, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4878, column: 7)
!6514 = !DILocation(line: 4878, column: 7, scope: !6341)
!6515 = !DILocation(line: 4879, column: 12, scope: !6513)
!6516 = !DILocation(line: 4879, column: 5, scope: !6513)
!6517 = !DILocation(line: 4883, column: 8, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4883, column: 7)
!6519 = !DILocation(line: 4884, column: 7, scope: !6518)
!6520 = !DILocation(line: 0, scope: !6368)
!6521 = !DILocation(line: 4891, column: 7, scope: !6368)
!6522 = !DILocation(line: 4884, column: 10, scope: !6518)
!6523 = !DILocation(line: 4884, column: 42, scope: !6518)
!6524 = !DILocation(line: 4883, column: 7, scope: !6341)
!6525 = !DILocation(line: 4891, column: 39, scope: !6368)
!6526 = !DILocation(line: 4892, column: 7, scope: !6368)
!6527 = !DILocation(line: 4892, column: 10, scope: !6368)
!6528 = !DILocation(line: 4893, column: 7, scope: !6368)
!6529 = !DILocation(line: 4893, column: 10, scope: !6368)
!6530 = !DILocation(line: 4893, column: 25, scope: !6368)
!6531 = !DILocation(line: 4894, column: 7, scope: !6368)
!6532 = !DILocation(line: 4894, column: 10, scope: !6368)
!6533 = !DILocation(line: 4894, column: 44, scope: !6368)
!6534 = !DILocation(line: 4891, column: 7, scope: !6341)
!6535 = !DILocation(line: 4896, column: 33, scope: !6367)
!6536 = !DILocation(line: 0, scope: !6367)
!6537 = !DILocation(line: 4899, column: 29, scope: !6367)
!6538 = !DILocation(line: 4901, column: 7, scope: !6367)
!6539 = !DILocation(line: 4904, column: 54, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 4904, column: 8)
!6541 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 4902, column: 2)
!6542 = !DILocation(line: 4904, column: 43, scope: !6540)
!6543 = !DILocation(line: 4904, column: 8, scope: !6541)
!6544 = !DILocation(line: 4905, column: 47, scope: !6540)
!6545 = !DILocation(line: 4905, column: 23, scope: !6540)
!6546 = !DILocation(line: 4905, column: 6, scope: !6540)
!6547 = !DILocation(line: 4911, column: 35, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 4911, column: 8)
!6549 = !DILocation(line: 4913, column: 10, scope: !6548)
!6550 = !DILocation(line: 4913, column: 44, scope: !6548)
!6551 = !DILocation(line: 4913, column: 6, scope: !6548)
!6552 = !DILocation(line: 4912, column: 8, scope: !6548)
!6553 = !DILocation(line: 4911, column: 8, scope: !6541)
!6554 = !DILocation(line: 4914, column: 47, scope: !6548)
!6555 = !DILocation(line: 4914, column: 23, scope: !6548)
!6556 = !DILocation(line: 4914, column: 6, scope: !6548)
!6557 = !DILocation(line: 4918, column: 19, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 4918, column: 8)
!6559 = !DILocation(line: 4918, column: 8, scope: !6541)
!6560 = !DILocation(line: 4919, column: 49, scope: !6558)
!6561 = !DILocation(line: 4919, column: 24, scope: !6558)
!6562 = !DILocation(line: 4919, column: 6, scope: !6558)
!6563 = !DILocation(line: 4923, column: 19, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 4923, column: 8)
!6565 = !DILocation(line: 4923, column: 8, scope: !6541)
!6566 = !DILocation(line: 4924, column: 49, scope: !6564)
!6567 = !DILocation(line: 4924, column: 24, scope: !6564)
!6568 = !DILocation(line: 4924, column: 6, scope: !6564)
!6569 = !DILocation(line: 4879, column: 10, scope: !6513)
!6570 = !DILocation(line: 4879, column: 61, scope: !6513)
!6571 = !DILocation(line: 4936, column: 10, scope: !6341)
!6572 = !DILocation(line: 4936, column: 3, scope: !6341)
!6573 = !DILocation(line: 4937, column: 1, scope: !6341)
!6574 = distinct !DISubprogram(name: "get_condition", scope: !3, file: !3, line: 4956, type: !6575, scopeLine: 4957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6577)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!588, !588, !1657, !579, !579}
!6577 = !{!6578, !6579, !6580, !6581, !6582, !6583, !6584}
!6578 = !DILocalVariable(name: "jump", arg: 1, scope: !6574, file: !3, line: 4956, type: !588)
!6579 = !DILocalVariable(name: "earliest", arg: 2, scope: !6574, file: !3, line: 4956, type: !1657)
!6580 = !DILocalVariable(name: "allow_cc_mode", arg: 3, scope: !6574, file: !3, line: 4956, type: !579)
!6581 = !DILocalVariable(name: "valid_at_insn_p", arg: 4, scope: !6574, file: !3, line: 4956, type: !579)
!6582 = !DILocalVariable(name: "cond", scope: !6574, file: !3, line: 4958, type: !588)
!6583 = !DILocalVariable(name: "reverse", scope: !6574, file: !3, line: 4959, type: !579)
!6584 = !DILocalVariable(name: "set", scope: !6574, file: !3, line: 4960, type: !588)
!6585 = !DILocation(line: 0, scope: !6574)
!6586 = !DILocation(line: 4963, column: 8, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 4963, column: 7)
!6588 = !DILocation(line: 4964, column: 7, scope: !6587)
!6589 = !DILocation(line: 4964, column: 12, scope: !6587)
!6590 = !DILocation(line: 4963, column: 7, scope: !6574)
!6591 = !DILocation(line: 4966, column: 9, scope: !6574)
!6592 = !DILocation(line: 4968, column: 10, scope: !6574)
!6593 = !DILocation(line: 4973, column: 7, scope: !6574)
!6594 = !DILocation(line: 4973, column: 42, scope: !6574)
!6595 = !DILocation(line: 4974, column: 7, scope: !6574)
!6596 = !DILocation(line: 4974, column: 10, scope: !6574)
!6597 = !DILocation(line: 4974, column: 47, scope: !6574)
!6598 = !DILocation(line: 4974, column: 44, scope: !6574)
!6599 = !DILocation(line: 4976, column: 10, scope: !6574)
!6600 = !DILocation(line: 4976, column: 3, scope: !6574)
!6601 = !DILocation(line: 4978, column: 1, scope: !6574)
!6602 = distinct !DISubprogram(name: "truncated_to_mode", scope: !3, file: !3, line: 5029, type: !6603, scopeLine: 5030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6605)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!578, !5, !1673}
!6605 = !{!6606, !6607}
!6606 = !DILocalVariable(name: "mode", arg: 1, scope: !6602, file: !3, line: 5029, type: !5)
!6607 = !DILocalVariable(name: "x", arg: 2, scope: !6602, file: !3, line: 5029, type: !1673)
!6608 = !DILocation(line: 0, scope: !6602)
!6609 = !DILocation(line: 5033, column: 7, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 5033, column: 7)
!6611 = !DILocation(line: 5033, column: 17, scope: !6610)
!6612 = !DILocation(line: 5033, column: 30, scope: !6610)
!6613 = !DILocation(line: 5033, column: 20, scope: !6610)
!6614 = !DILocation(line: 5033, column: 7, scope: !6602)
!6615 = !DILocation(line: 5038, column: 34, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 5038, column: 7)
!6617 = !DILocation(line: 5038, column: 7, scope: !6616)
!6618 = !DILocation(line: 5039, column: 7, scope: !6616)
!6619 = !DILocation(line: 5039, column: 11, scope: !6616)
!6620 = !DILocation(line: 5040, column: 34, scope: !6616)
!6621 = !DILocation(line: 5040, column: 7, scope: !6616)
!6622 = !DILocation(line: 5040, column: 54, scope: !6616)
!6623 = !DILocation(line: 5040, column: 4, scope: !6616)
!6624 = !DILocation(line: 5038, column: 7, scope: !6602)
!6625 = !DILocation(line: 5043, column: 3, scope: !6602)
!6626 = !DILocation(line: 5044, column: 1, scope: !6602)
!6627 = distinct !DISubprogram(name: "init_rtlanal", scope: !3, file: !3, line: 5049, type: !6628, scopeLine: 5050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6630)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{null}
!6630 = !{!6631, !6632, !6636}
!6631 = !DILocalVariable(name: "i", scope: !6627, file: !3, line: 5051, type: !579)
!6632 = !DILocalVariable(name: "format", scope: !6633, file: !3, line: 5054, type: !584)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 5053, column: 5)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 5052, column: 3)
!6635 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 5052, column: 3)
!6636 = !DILocalVariable(name: "first", scope: !6633, file: !3, line: 5055, type: !584)
!6637 = !DILocation(line: 0, scope: !6627)
!6638 = !DILocation(line: 5052, column: 8, scope: !6635)
!6639 = !DILocation(line: 0, scope: !6635)
!6640 = !DILocation(line: 5052, column: 17, scope: !6634)
!6641 = !DILocation(line: 5052, column: 3, scope: !6635)
!6642 = !DILocation(line: 5054, column: 28, scope: !6633)
!6643 = !DILocation(line: 0, scope: !6633)
!6644 = !DILocation(line: 5055, column: 27, scope: !6633)
!6645 = !DILocation(line: 5056, column: 38, scope: !6633)
!6646 = !DILocation(line: 5056, column: 7, scope: !6633)
!6647 = !DILocation(line: 5056, column: 36, scope: !6633)
!6648 = !DILocation(line: 5052, column: 34, scope: !6634)
!6649 = !DILocation(line: 5052, column: 3, scope: !6634)
!6650 = distinct !{!6650, !6641, !6651}
!6651 = !DILocation(line: 5057, column: 5, scope: !6635)
!6652 = !DILocation(line: 5059, column: 3, scope: !6627)
!6653 = !DILocation(line: 5060, column: 1, scope: !6627)
!6654 = distinct !DISubprogram(name: "init_num_sign_bit_copies_in_rep", scope: !3, file: !3, line: 4990, type: !6628, scopeLine: 4991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6655)
!6655 = !{!6656, !6657, !6658, !6664}
!6656 = !DILocalVariable(name: "mode", scope: !6654, file: !3, line: 4992, type: !5)
!6657 = !DILocalVariable(name: "in_mode", scope: !6654, file: !3, line: 4992, type: !5)
!6658 = !DILocalVariable(name: "i", scope: !6659, file: !3, line: 4999, type: !5)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4998, column: 7)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 4996, column: 5)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4996, column: 5)
!6662 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4994, column: 3)
!6663 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 4994, column: 3)
!6664 = !DILocalVariable(name: "wider", scope: !6665, file: !3, line: 5010, type: !5)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 5009, column: 4)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 5008, column: 2)
!6667 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 5008, column: 2)
!6668 = !DILocation(line: 4994, column: 8, scope: !6663)
!6669 = !DILocation(line: 0, scope: !6663)
!6670 = !DILocation(line: 0, scope: !6654)
!6671 = !DILocation(line: 4994, column: 63, scope: !6662)
!6672 = !DILocation(line: 4994, column: 3, scope: !6663)
!6673 = !DILocation(line: 0, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 5012, column: 10)
!6675 = !DILocation(line: 4996, column: 10, scope: !6661)
!6676 = !DILocation(line: 0, scope: !6661)
!6677 = !DILocation(line: 4996, column: 59, scope: !6660)
!6678 = !DILocation(line: 4996, column: 5, scope: !6661)
!6679 = !DILocation(line: 5003, column: 2, scope: !6659)
!6680 = !DILocation(line: 0, scope: !6659)
!6681 = !DILocation(line: 5008, column: 7, scope: !6667)
!6682 = !DILocation(line: 0, scope: !6667)
!6683 = !DILocation(line: 5008, column: 19, scope: !6666)
!6684 = !DILocation(line: 5008, column: 2, scope: !6667)
!6685 = !DILocation(line: 5010, column: 32, scope: !6665)
!6686 = !DILocation(line: 0, scope: !6665)
!6687 = !DILocation(line: 5012, column: 18, scope: !6674)
!6688 = !DILocation(line: 5012, column: 10, scope: !6674)
!6689 = !DILocation(line: 5012, column: 47, scope: !6674)
!6690 = !DILocation(line: 5017, column: 3, scope: !6674)
!6691 = !DILocation(line: 5019, column: 3, scope: !6674)
!6692 = !DILocation(line: 5017, column: 6, scope: !6674)
!6693 = !DILocation(line: 5012, column: 10, scope: !6665)
!6694 = !DILocation(line: 5019, column: 6, scope: !6674)
!6695 = !DILocation(line: 5019, column: 33, scope: !6674)
!6696 = !DILocation(line: 5019, column: 31, scope: !6674)
!6697 = !DILocation(line: 5018, column: 8, scope: !6674)
!6698 = !DILocation(line: 5008, column: 2, scope: !6666)
!6699 = distinct !{!6699, !6684, !6700}
!6700 = !DILocation(line: 5020, column: 4, scope: !6667)
!6701 = !DILocation(line: 4997, column: 10, scope: !6660)
!6702 = !DILocation(line: 4996, column: 5, scope: !6660)
!6703 = distinct !{!6703, !6678, !6704}
!6704 = !DILocation(line: 5021, column: 7, scope: !6661)
!6705 = !DILocation(line: 4995, column: 18, scope: !6662)
!6706 = !DILocation(line: 4994, column: 3, scope: !6662)
!6707 = distinct !{!6707, !6672, !6708}
!6708 = !DILocation(line: 5021, column: 7, scope: !6663)
!6709 = !DILocation(line: 5022, column: 1, scope: !6654)
!6710 = distinct !DISubprogram(name: "constant_pool_constant_p", scope: !3, file: !3, line: 5064, type: !6711, scopeLine: 5065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6713)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{!578, !588}
!6713 = !{!6714}
!6714 = !DILocalVariable(name: "x", arg: 1, scope: !6710, file: !3, line: 5064, type: !588)
!6715 = !DILocation(line: 0, scope: !6710)
!6716 = !DILocation(line: 5066, column: 7, scope: !6710)
!6717 = !DILocation(line: 5067, column: 10, scope: !6710)
!6718 = !DILocation(line: 5067, column: 23, scope: !6710)
!6719 = !DILocation(line: 5067, column: 3, scope: !6710)
!6720 = distinct !DISubprogram(name: "low_bitmask_len", scope: !3, file: !3, line: 5075, type: !6721, scopeLine: 5076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6723)
!6721 = !DISubroutineType(types: !6722)
!6722 = !{!579, !5, !587}
!6723 = !{!6724, !6725}
!6724 = !DILocalVariable(name: "mode", arg: 1, scope: !6720, file: !3, line: 5075, type: !5)
!6725 = !DILocalVariable(name: "m", arg: 2, scope: !6720, file: !3, line: 5075, type: !587)
!6726 = !DILocation(line: 0, scope: !6720)
!6727 = !DILocation(line: 5077, column: 12, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 5077, column: 7)
!6729 = !DILocation(line: 5077, column: 7, scope: !6720)
!6730 = !DILocation(line: 5079, column: 11, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 5079, column: 11)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 5078, column: 5)
!6733 = !DILocation(line: 5079, column: 35, scope: !6731)
!6734 = !DILocation(line: 5079, column: 11, scope: !6732)
!6735 = !DILocation(line: 5081, column: 12, scope: !6732)
!6736 = !DILocation(line: 5081, column: 9, scope: !6732)
!6737 = !DILocation(line: 5082, column: 5, scope: !6732)
!6738 = !DILocation(line: 5084, column: 24, scope: !6720)
!6739 = !DILocation(line: 5084, column: 10, scope: !6720)
!6740 = !DILocation(line: 5084, column: 3, scope: !6720)
!6741 = !DILocation(line: 5085, column: 1, scope: !6720)
!6742 = distinct !DISubprogram(name: "covers_regno_no_parallel_p", scope: !3, file: !3, line: 1601, type: !4331, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6743)
!6743 = !{!6744, !6745, !6746, !6747}
!6744 = !DILocalVariable(name: "dest", arg: 1, scope: !6742, file: !3, line: 1601, type: !1673)
!6745 = !DILocalVariable(name: "test_regno", arg: 2, scope: !6742, file: !3, line: 1601, type: !7)
!6746 = !DILocalVariable(name: "regno", scope: !6742, file: !3, line: 1603, type: !7)
!6747 = !DILocalVariable(name: "endregno", scope: !6742, file: !3, line: 1603, type: !7)
!6748 = !DILocation(line: 0, scope: !6742)
!6749 = !DILocation(line: 1605, column: 7, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 1605, column: 7)
!6751 = !DILocation(line: 1605, column: 23, scope: !6750)
!6752 = !DILocation(line: 1606, column: 7, scope: !6750)
!6753 = !DILocation(line: 1606, column: 13, scope: !6750)
!6754 = !DILocation(line: 1607, column: 23, scope: !6750)
!6755 = !DILocation(line: 1608, column: 9, scope: !6750)
!6756 = !DILocation(line: 1609, column: 26, scope: !6750)
!6757 = !DILocation(line: 1608, column: 4, scope: !6750)
!6758 = !DILocation(line: 1605, column: 7, scope: !6742)
!6759 = !DILocation(line: 1610, column: 5, scope: !6750)
!6760 = !DILocation(line: 1612, column: 8, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 1612, column: 7)
!6762 = !DILocation(line: 1612, column: 7, scope: !6742)
!6763 = !DILocation(line: 1615, column: 11, scope: !6742)
!6764 = !DILocation(line: 1616, column: 14, scope: !6742)
!6765 = !DILocation(line: 1617, column: 22, scope: !6742)
!6766 = !DILocation(line: 1617, column: 31, scope: !6742)
!6767 = !DILocation(line: 1617, column: 10, scope: !6742)
!6768 = !DILocation(line: 1617, column: 3, scope: !6742)
!6769 = !DILocation(line: 1618, column: 1, scope: !6742)
!6770 = distinct !DISubprogram(name: "nonzero_bits1", scope: !3, file: !3, line: 3702, type: !6170, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6771)
!6771 = !{!6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6785, !6787, !6788, !6790, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799, !6800, !6801, !6802, !6805, !6806, !6807, !6808, !6809, !6810, !6811}
!6772 = !DILocalVariable(name: "x", arg: 1, scope: !6770, file: !3, line: 3702, type: !1673)
!6773 = !DILocalVariable(name: "mode", arg: 2, scope: !6770, file: !3, line: 3702, type: !5)
!6774 = !DILocalVariable(name: "known_x", arg: 3, scope: !6770, file: !3, line: 3702, type: !1673)
!6775 = !DILocalVariable(name: "known_mode", arg: 4, scope: !6770, file: !3, line: 3703, type: !5)
!6776 = !DILocalVariable(name: "known_ret", arg: 5, scope: !6770, file: !3, line: 3704, type: !587)
!6777 = !DILocalVariable(name: "nonzero", scope: !6770, file: !3, line: 3706, type: !587)
!6778 = !DILocalVariable(name: "inner_nz", scope: !6770, file: !3, line: 3707, type: !587)
!6779 = !DILocalVariable(name: "code", scope: !6770, file: !3, line: 3708, type: !377)
!6780 = !DILocalVariable(name: "mode_width", scope: !6770, file: !3, line: 3709, type: !7)
!6781 = !DILocalVariable(name: "alignment", scope: !6782, file: !3, line: 3774, type: !587)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 3773, column: 2)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3769, column: 11)
!6784 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3751, column: 5)
!6785 = !DILocalVariable(name: "nonzero_for_hook", scope: !6786, file: !3, line: 3790, type: !587)
!6786 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3789, column: 7)
!6787 = !DILocalVariable(name: "new_rtx", scope: !6786, file: !3, line: 3791, type: !588)
!6788 = !DILocalVariable(name: "nonzero0", scope: !6789, file: !3, line: 3906, type: !587)
!6789 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3905, column: 7)
!6790 = !DILocalVariable(name: "nz0", scope: !6791, file: !3, line: 3928, type: !587)
!6791 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3927, column: 7)
!6792 = !DILocalVariable(name: "nz1", scope: !6791, file: !3, line: 3931, type: !587)
!6793 = !DILocalVariable(name: "sign_index", scope: !6791, file: !3, line: 3934, type: !579)
!6794 = !DILocalVariable(name: "width0", scope: !6791, file: !3, line: 3935, type: !579)
!6795 = !DILocalVariable(name: "width1", scope: !6791, file: !3, line: 3936, type: !579)
!6796 = !DILocalVariable(name: "low0", scope: !6791, file: !3, line: 3937, type: !579)
!6797 = !DILocalVariable(name: "low1", scope: !6791, file: !3, line: 3938, type: !579)
!6798 = !DILocalVariable(name: "op0_maybe_minusp", scope: !6791, file: !3, line: 3939, type: !674)
!6799 = !DILocalVariable(name: "op1_maybe_minusp", scope: !6791, file: !3, line: 3941, type: !674)
!6800 = !DILocalVariable(name: "result_width", scope: !6791, file: !3, line: 3943, type: !7)
!6801 = !DILocalVariable(name: "result_low", scope: !6791, file: !3, line: 3944, type: !579)
!6802 = !DILocalVariable(name: "inner_mode", scope: !6803, file: !3, line: 4073, type: !5)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 4072, column: 2)
!6804 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4068, column: 11)
!6805 = !DILocalVariable(name: "width", scope: !6803, file: !3, line: 4074, type: !7)
!6806 = !DILocalVariable(name: "count", scope: !6803, file: !3, line: 4075, type: !579)
!6807 = !DILocalVariable(name: "mode_mask", scope: !6803, file: !3, line: 4076, type: !587)
!6808 = !DILocalVariable(name: "op_nonzero", scope: !6803, file: !3, line: 4077, type: !587)
!6809 = !DILocalVariable(name: "inner", scope: !6803, file: !3, line: 4080, type: !587)
!6810 = !DILocalVariable(name: "outer", scope: !6803, file: !3, line: 4081, type: !587)
!6811 = !DILocalVariable(name: "nonzero_true", scope: !6812, file: !3, line: 4138, type: !587)
!6812 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4137, column: 7)
!6813 = !DILocation(line: 0, scope: !6770)
!6814 = !DILocation(line: 3706, column: 36, scope: !6770)
!6815 = !DILocation(line: 3709, column: 29, scope: !6770)
!6816 = !DILocation(line: 3712, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3712, column: 7)
!6818 = !DILocation(line: 3712, column: 35, scope: !6817)
!6819 = !DILocation(line: 3712, column: 38, scope: !6817)
!6820 = !DILocation(line: 3713, column: 7, scope: !6817)
!6821 = !DILocation(line: 3713, column: 10, scope: !6817)
!6822 = !DILocation(line: 3713, column: 39, scope: !6817)
!6823 = !DILocation(line: 3713, column: 42, scope: !6817)
!6824 = !DILocation(line: 3712, column: 7, scope: !6770)
!6825 = !DILocation(line: 3717, column: 7, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3717, column: 7)
!6827 = !DILocation(line: 3717, column: 39, scope: !6826)
!6828 = !DILocation(line: 3717, column: 7, scope: !6770)
!6829 = !DILocation(line: 3720, column: 17, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 3718, column: 5)
!6831 = !DILocation(line: 3722, column: 5, scope: !6830)
!6832 = !DILocation(line: 3724, column: 18, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3724, column: 7)
!6834 = !DILocation(line: 3724, column: 7, scope: !6770)
!6835 = !DILocation(line: 3737, column: 7, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3737, column: 7)
!6837 = !DILocation(line: 3737, column: 20, scope: !6836)
!6838 = !DILocation(line: 3737, column: 32, scope: !6836)
!6839 = !DILocation(line: 3737, column: 48, scope: !6836)
!6840 = !DILocation(line: 3738, column: 7, scope: !6836)
!6841 = !DILocation(line: 3738, column: 42, scope: !6836)
!6842 = !DILocation(line: 3739, column: 7, scope: !6836)
!6843 = !DILocation(line: 3740, column: 7, scope: !6836)
!6844 = !DILocation(line: 3740, column: 10, scope: !6836)
!6845 = !DILocation(line: 3740, column: 34, scope: !6836)
!6846 = !DILocation(line: 3737, column: 7, scope: !6770)
!6847 = !DILocation(line: 3742, column: 18, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 3741, column: 5)
!6849 = !DILocation(line: 3744, column: 42, scope: !6848)
!6850 = !DILocation(line: 3744, column: 41, scope: !6848)
!6851 = !DILocation(line: 3744, column: 15, scope: !6848)
!6852 = !DILocation(line: 3745, column: 7, scope: !6848)
!6853 = !DILocation(line: 3750, column: 3, scope: !6770)
!6854 = !DILocation(line: 3769, column: 17, scope: !6783)
!6855 = !DILocation(line: 3769, column: 14, scope: !6783)
!6856 = !DILocation(line: 3770, column: 13, scope: !6783)
!6857 = !DILocation(line: 3770, column: 10, scope: !6783)
!6858 = !DILocation(line: 3770, column: 5, scope: !6783)
!6859 = !DILocation(line: 3771, column: 13, scope: !6783)
!6860 = !DILocation(line: 3771, column: 10, scope: !6783)
!6861 = !DILocation(line: 3772, column: 7, scope: !6783)
!6862 = !DILocation(line: 3769, column: 11, scope: !6784)
!6863 = !DILocation(line: 3775, column: 8, scope: !6782)
!6864 = !DILocation(line: 3775, column: 40, scope: !6782)
!6865 = !DILocation(line: 0, scope: !6782)
!6866 = !DILocation(line: 3781, column: 13, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 3781, column: 8)
!6868 = !DILocation(line: 3781, column: 10, scope: !6867)
!6869 = !DILocation(line: 3781, column: 31, scope: !6867)
!6870 = !DILocation(line: 3781, column: 34, scope: !6867)
!6871 = !DILocation(line: 3781, column: 8, scope: !6782)
!6872 = !DILocation(line: 3782, column: 18, scope: !6867)
!6873 = !DILocation(line: 3782, column: 6, scope: !6867)
!6874 = !DILocation(line: 3786, column: 15, scope: !6782)
!6875 = !DILocation(line: 3786, column: 12, scope: !6782)
!6876 = !DILocation(line: 3787, column: 2, scope: !6782)
!6877 = !DILocation(line: 3790, column: 2, scope: !6786)
!6878 = !DILocation(line: 0, scope: !6786)
!6879 = !DILocation(line: 3790, column: 25, scope: !6786)
!6880 = !DILocation(line: 3791, column: 26, scope: !6786)
!6881 = !DILocation(line: 3791, column: 16, scope: !6786)
!6882 = !DILocation(line: 3795, column: 6, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3795, column: 6)
!6884 = !DILocation(line: 3795, column: 6, scope: !6786)
!6885 = !DILocation(line: 3799, column: 9, scope: !6786)
!6886 = !DILocation(line: 3796, column: 24, scope: !6883)
!6887 = !DILocation(line: 3796, column: 21, scope: !6883)
!6888 = !DILocation(line: 3796, column: 4, scope: !6883)
!6889 = !DILocation(line: 3800, column: 7, scope: !6784)
!6890 = !DILocation(line: 3810, column: 14, scope: !6784)
!6891 = !DILocation(line: 3810, column: 7, scope: !6784)
!6892 = !DILocation(line: 3836, column: 41, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3836, column: 11)
!6894 = !DILocation(line: 3837, column: 18, scope: !6893)
!6895 = !DILocation(line: 3837, column: 4, scope: !6893)
!6896 = !DILocation(line: 3850, column: 40, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3850, column: 11)
!6898 = !DILocation(line: 3850, column: 11, scope: !6784)
!6899 = !DILocation(line: 3851, column: 2, scope: !6897)
!6900 = !DILocation(line: 3865, column: 40, scope: !6784)
!6901 = !DILocation(line: 3865, column: 19, scope: !6784)
!6902 = !DILocation(line: 3867, column: 5, scope: !6784)
!6903 = !DILocation(line: 3868, column: 7, scope: !6784)
!6904 = !DILocation(line: 3871, column: 39, scope: !6784)
!6905 = !DILocation(line: 3871, column: 18, scope: !6784)
!6906 = !DILocation(line: 3871, column: 15, scope: !6784)
!6907 = !DILocation(line: 3873, column: 11, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3873, column: 11)
!6909 = !DILocation(line: 3873, column: 34, scope: !6908)
!6910 = !DILocation(line: 3873, column: 11, scope: !6784)
!6911 = !DILocation(line: 3874, column: 13, scope: !6908)
!6912 = !DILocation(line: 3874, column: 10, scope: !6908)
!6913 = !DILocation(line: 3874, column: 2, scope: !6908)
!6914 = !DILocation(line: 3881, column: 39, scope: !6784)
!6915 = !DILocation(line: 3881, column: 18, scope: !6784)
!6916 = !DILocation(line: 3883, column: 11, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 3883, column: 11)
!6918 = !DILocation(line: 3883, column: 34, scope: !6917)
!6919 = !DILocation(line: 3883, column: 11, scope: !6784)
!6920 = !DILocation(line: 3885, column: 16, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 3884, column: 2)
!6922 = !DILocation(line: 3885, column: 13, scope: !6921)
!6923 = !DILocation(line: 3888, column: 9, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 3886, column: 8)
!6925 = !DILocation(line: 3888, column: 51, scope: !6924)
!6926 = !DILocation(line: 3888, column: 5, scope: !6924)
!6927 = !DILocation(line: 3887, column: 8, scope: !6924)
!6928 = !DILocation(line: 3886, column: 8, scope: !6921)
!6929 = !DILocation(line: 3890, column: 7, scope: !6924)
!6930 = !DILocation(line: 3890, column: 5, scope: !6924)
!6931 = !DILocation(line: 3889, column: 15, scope: !6924)
!6932 = !DILocation(line: 3889, column: 6, scope: !6924)
!6933 = !DILocation(line: 0, scope: !6784)
!6934 = !DILocation(line: 3893, column: 15, scope: !6784)
!6935 = !DILocation(line: 3894, column: 7, scope: !6784)
!6936 = !DILocation(line: 3897, column: 39, scope: !6784)
!6937 = !DILocation(line: 3897, column: 18, scope: !6784)
!6938 = !DILocation(line: 3899, column: 33, scope: !6784)
!6939 = !DILocation(line: 3899, column: 12, scope: !6784)
!6940 = !DILocation(line: 3899, column: 10, scope: !6784)
!6941 = !DILocation(line: 3897, column: 15, scope: !6784)
!6942 = !DILocation(line: 3901, column: 7, scope: !6784)
!6943 = !DILocation(line: 3907, column: 25, scope: !6789)
!6944 = !DILocation(line: 3907, column: 4, scope: !6789)
!6945 = !DILocation(line: 0, scope: !6789)
!6946 = !DILocation(line: 3912, column: 15, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 3912, column: 6)
!6948 = !DILocation(line: 3912, column: 27, scope: !6947)
!6949 = !DILocation(line: 3912, column: 6, scope: !6789)
!6950 = !DILocation(line: 3914, column: 37, scope: !6947)
!6951 = !DILocation(line: 3914, column: 16, scope: !6947)
!6952 = !DILocation(line: 3914, column: 14, scope: !6947)
!6953 = !DILocation(line: 3913, column: 12, scope: !6947)
!6954 = !DILocation(line: 3913, column: 4, scope: !6947)
!6955 = !DILocation(line: 3929, column: 25, scope: !6791)
!6956 = !DILocation(line: 3929, column: 4, scope: !6791)
!6957 = !DILocation(line: 0, scope: !6791)
!6958 = !DILocation(line: 3932, column: 25, scope: !6791)
!6959 = !DILocation(line: 3932, column: 4, scope: !6791)
!6960 = !DILocation(line: 3934, column: 19, scope: !6791)
!6961 = !DILocation(line: 3934, column: 51, scope: !6791)
!6962 = !DILocation(line: 3935, column: 15, scope: !6791)
!6963 = !DILocation(line: 3935, column: 32, scope: !6791)
!6964 = !DILocation(line: 3936, column: 15, scope: !6791)
!6965 = !DILocation(line: 3936, column: 32, scope: !6791)
!6966 = !DILocation(line: 3937, column: 31, scope: !6791)
!6967 = !DILocation(line: 3937, column: 29, scope: !6791)
!6968 = !DILocation(line: 3937, column: 13, scope: !6791)
!6969 = !DILocation(line: 3938, column: 31, scope: !6791)
!6970 = !DILocation(line: 3938, column: 29, scope: !6791)
!6971 = !DILocation(line: 3938, column: 13, scope: !6791)
!6972 = !DILocation(line: 3940, column: 32, scope: !6791)
!6973 = !DILocation(line: 3940, column: 11, scope: !6791)
!6974 = !DILocation(line: 3942, column: 11, scope: !6791)
!6975 = !DILocation(line: 3946, column: 2, scope: !6791)
!6976 = !DILocation(line: 3949, column: 21, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3947, column: 4)
!6978 = !DILocation(line: 3949, column: 42, scope: !6977)
!6979 = !DILocation(line: 3950, column: 19, scope: !6977)
!6980 = !DILocation(line: 3953, column: 19, scope: !6977)
!6981 = !DILocation(line: 3954, column: 6, scope: !6977)
!6982 = !DILocation(line: 3956, column: 28, scope: !6977)
!6983 = !DILocation(line: 3957, column: 24, scope: !6977)
!6984 = !DILocation(line: 3958, column: 6, scope: !6977)
!6985 = !DILocation(line: 3960, column: 17, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3960, column: 10)
!6987 = !DILocation(line: 3960, column: 10, scope: !6977)
!6988 = !DILocation(line: 3962, column: 29, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3962, column: 10)
!6990 = !DILocation(line: 3966, column: 17, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3966, column: 10)
!6992 = !DILocation(line: 0, scope: !6977)
!6993 = !DILocation(line: 3971, column: 17, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3971, column: 10)
!6995 = !DILocation(line: 3971, column: 10, scope: !6977)
!6996 = !DILocation(line: 3973, column: 29, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3973, column: 10)
!6998 = !DILocation(line: 3975, column: 19, scope: !6977)
!6999 = !DILocation(line: 3976, column: 6, scope: !6977)
!7000 = !DILocation(line: 3978, column: 17, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 3978, column: 10)
!7002 = !DILocation(line: 3978, column: 10, scope: !6977)
!7003 = !DILocation(line: 3980, column: 21, scope: !6977)
!7004 = !DILocation(line: 3981, column: 19, scope: !6977)
!7005 = !DILocation(line: 3984, column: 6, scope: !6977)
!7006 = !DILocation(line: 3985, column: 4, scope: !6977)
!7007 = !DILocation(line: 3987, column: 19, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3987, column: 6)
!7009 = !DILocation(line: 3987, column: 6, scope: !6791)
!7010 = !DILocation(line: 3988, column: 34, scope: !7008)
!7011 = !DILocation(line: 3988, column: 51, scope: !7008)
!7012 = !DILocation(line: 3988, column: 12, scope: !7008)
!7013 = !DILocation(line: 3988, column: 4, scope: !7008)
!7014 = !DILocation(line: 3990, column: 17, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3990, column: 6)
!7016 = !DILocation(line: 3990, column: 6, scope: !6791)
!7017 = !DILocation(line: 3991, column: 36, scope: !7015)
!7018 = !DILocation(line: 3991, column: 51, scope: !7015)
!7019 = !DILocation(line: 3991, column: 12, scope: !7015)
!7020 = !DILocation(line: 3991, column: 4, scope: !7015)
!7021 = !DILocation(line: 4010, column: 11, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4010, column: 11)
!7023 = !DILocation(line: 4011, column: 4, scope: !7022)
!7024 = !DILocation(line: 4011, column: 7, scope: !7022)
!7025 = !DILocation(line: 4011, column: 28, scope: !7022)
!7026 = !DILocation(line: 4010, column: 11, scope: !6784)
!7027 = !DILocation(line: 4012, column: 57, scope: !7022)
!7028 = !DILocation(line: 4012, column: 10, scope: !7022)
!7029 = !DILocation(line: 4012, column: 2, scope: !7022)
!7030 = !DILocation(line: 4020, column: 11, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4020, column: 11)
!7032 = !DILocation(line: 4020, column: 37, scope: !7031)
!7033 = !DILocation(line: 4020, column: 40, scope: !7031)
!7034 = !DILocation(line: 4020, column: 11, scope: !6784)
!7035 = !DILocation(line: 4021, column: 12, scope: !7031)
!7036 = !DILocation(line: 4022, column: 28, scope: !7031)
!7037 = !DILocation(line: 4022, column: 7, scope: !7031)
!7038 = !DILocation(line: 4022, column: 5, scope: !7031)
!7039 = !DILocation(line: 4021, column: 2, scope: !7031)
!7040 = !DILocation(line: 4028, column: 11, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 4028, column: 11)
!7042 = !DILocation(line: 4028, column: 56, scope: !7041)
!7043 = !DILocation(line: 4029, column: 4, scope: !7041)
!7044 = !DILocation(line: 4028, column: 11, scope: !6784)
!7045 = !DILocation(line: 4032, column: 15, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 4031, column: 2)
!7047 = !DILocation(line: 4032, column: 12, scope: !7046)
!7048 = !DILocation(line: 4050, column: 12, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 4050, column: 12)
!7050 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 4046, column: 6)
!7051 = !DILocation(line: 4051, column: 7, scope: !7049)
!7052 = !DILocation(line: 4051, column: 5, scope: !7049)
!7053 = !DILocation(line: 4050, column: 12, scope: !7050)
!7054 = !DILocation(line: 4052, column: 15, scope: !7049)
!7055 = !DILocation(line: 4053, column: 11, scope: !7049)
!7056 = !DILocation(line: 4053, column: 10, scope: !7049)
!7057 = !DILocation(line: 4053, column: 8, scope: !7049)
!7058 = !DILocation(line: 4052, column: 11, scope: !7049)
!7059 = !DILocation(line: 4052, column: 3, scope: !7049)
!7060 = !DILocation(line: 4068, column: 11, scope: !6804)
!7061 = !DILocation(line: 4069, column: 4, scope: !6804)
!7062 = !DILocation(line: 4069, column: 7, scope: !6804)
!7063 = !DILocation(line: 4069, column: 28, scope: !6804)
!7064 = !DILocation(line: 4070, column: 4, scope: !6804)
!7065 = !DILocation(line: 4070, column: 28, scope: !6804)
!7066 = !DILocation(line: 4071, column: 4, scope: !6804)
!7067 = !DILocation(line: 4071, column: 30, scope: !6804)
!7068 = !DILocation(line: 4071, column: 28, scope: !6804)
!7069 = !DILocation(line: 4068, column: 11, scope: !6784)
!7070 = !DILocation(line: 0, scope: !6803)
!7071 = !DILocation(line: 4075, column: 16, scope: !6803)
!7072 = !DILocation(line: 4076, column: 39, scope: !6803)
!7073 = !DILocation(line: 4078, column: 27, scope: !6803)
!7074 = !DILocation(line: 4078, column: 6, scope: !6803)
!7075 = !DILocation(line: 4080, column: 46, scope: !6803)
!7076 = !DILocation(line: 4083, column: 19, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 4083, column: 8)
!7078 = !DILocation(line: 4083, column: 8, scope: !6803)
!7079 = !DILocation(line: 4084, column: 26, scope: !7077)
!7080 = !DILocation(line: 4084, column: 38, scope: !7077)
!7081 = !DILocation(line: 4084, column: 36, scope: !7077)
!7082 = !DILocation(line: 4084, column: 6, scope: !7077)
!7083 = !DILocation(line: 4086, column: 8, scope: !6803)
!7084 = !DILocation(line: 4087, column: 12, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 4086, column: 8)
!7086 = !DILocation(line: 4087, column: 6, scope: !7085)
!7087 = !DILocation(line: 4090, column: 14, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 4089, column: 6)
!7089 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 4088, column: 13)
!7090 = !DILocation(line: 4095, column: 53, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 4095, column: 12)
!7092 = !DILocation(line: 4095, column: 39, scope: !7091)
!7093 = !DILocation(line: 4095, column: 18, scope: !7091)
!7094 = !DILocation(line: 4095, column: 12, scope: !7088)
!7095 = !DILocation(line: 4096, column: 42, scope: !7091)
!7096 = !DILocation(line: 4096, column: 57, scope: !7091)
!7097 = !DILocation(line: 4096, column: 47, scope: !7091)
!7098 = !DILocation(line: 4096, column: 9, scope: !7091)
!7099 = !DILocation(line: 4096, column: 3, scope: !7091)
!7100 = !DILocation(line: 4099, column: 12, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 4098, column: 13)
!7102 = !DILocation(line: 4099, column: 6, scope: !7101)
!7103 = !DILocation(line: 4101, column: 32, scope: !7101)
!7104 = !DILocation(line: 4101, column: 22, scope: !7101)
!7105 = !DILocation(line: 4102, column: 28, scope: !7101)
!7106 = !DILocation(line: 4102, column: 18, scope: !7101)
!7107 = !DILocation(line: 4102, column: 9, scope: !7101)
!7108 = !DILocation(line: 4102, column: 49, scope: !7101)
!7109 = !DILocation(line: 0, scope: !7085)
!7110 = !DILocation(line: 4104, column: 22, scope: !6803)
!7111 = !DILocation(line: 4104, column: 12, scope: !6803)
!7112 = !DILocation(line: 4105, column: 2, scope: !6803)
!7113 = !DILocation(line: 4111, column: 52, scope: !6784)
!7114 = !DILocation(line: 4111, column: 40, scope: !6784)
!7115 = !DILocation(line: 4111, column: 36, scope: !6784)
!7116 = !DILocation(line: 4111, column: 66, scope: !6784)
!7117 = !DILocation(line: 4112, column: 7, scope: !6784)
!7118 = !DILocation(line: 4121, column: 7, scope: !6784)
!7119 = !DILocation(line: 4130, column: 7, scope: !6784)
!7120 = !DILocation(line: 4134, column: 7, scope: !6784)
!7121 = !DILocation(line: 4139, column: 25, scope: !6812)
!7122 = !DILocation(line: 4139, column: 4, scope: !6812)
!7123 = !DILocation(line: 0, scope: !6812)
!7124 = !DILocation(line: 4144, column: 15, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 4144, column: 6)
!7126 = !DILocation(line: 4144, column: 31, scope: !7125)
!7127 = !DILocation(line: 4144, column: 6, scope: !6812)
!7128 = !DILocation(line: 4146, column: 37, scope: !7125)
!7129 = !DILocation(line: 4146, column: 16, scope: !7125)
!7130 = !DILocation(line: 4146, column: 14, scope: !7125)
!7131 = !DILocation(line: 4145, column: 12, scope: !7125)
!7132 = !DILocation(line: 4145, column: 4, scope: !7125)
!7133 = !DILocation(line: 4156, column: 1, scope: !6770)
!7134 = distinct !DISubprogram(name: "num_sign_bit_copies1", scope: !3, file: !3, line: 4219, type: !6235, scopeLine: 4222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7135)
!7135 = !{!7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7150, !7151}
!7136 = !DILocalVariable(name: "x", arg: 1, scope: !7134, file: !3, line: 4219, type: !1673)
!7137 = !DILocalVariable(name: "mode", arg: 2, scope: !7134, file: !3, line: 4219, type: !5)
!7138 = !DILocalVariable(name: "known_x", arg: 3, scope: !7134, file: !3, line: 4219, type: !1673)
!7139 = !DILocalVariable(name: "known_mode", arg: 4, scope: !7134, file: !3, line: 4220, type: !5)
!7140 = !DILocalVariable(name: "known_ret", arg: 5, scope: !7134, file: !3, line: 4221, type: !7)
!7141 = !DILocalVariable(name: "code", scope: !7134, file: !3, line: 4223, type: !377)
!7142 = !DILocalVariable(name: "bitwidth", scope: !7134, file: !3, line: 4224, type: !7)
!7143 = !DILocalVariable(name: "num0", scope: !7134, file: !3, line: 4225, type: !579)
!7144 = !DILocalVariable(name: "num1", scope: !7134, file: !3, line: 4225, type: !579)
!7145 = !DILocalVariable(name: "result", scope: !7134, file: !3, line: 4225, type: !579)
!7146 = !DILocalVariable(name: "nonzero", scope: !7134, file: !3, line: 4226, type: !587)
!7147 = !DILocalVariable(name: "copies_for_hook", scope: !7148, file: !3, line: 4285, type: !7)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4284, column: 7)
!7149 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4269, column: 5)
!7150 = !DILocalVariable(name: "copies", scope: !7148, file: !3, line: 4285, type: !7)
!7151 = !DILocalVariable(name: "new_rtx", scope: !7148, file: !3, line: 4286, type: !588)
!7152 = !DILocation(line: 0, scope: !7134)
!7153 = !DILocation(line: 4223, column: 24, scope: !7134)
!7154 = !DILocation(line: 4224, column: 27, scope: !7134)
!7155 = !DILocation(line: 4232, column: 12, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4232, column: 7)
!7157 = !DILocation(line: 4232, column: 7, scope: !7134)
!7158 = !DILocation(line: 4233, column: 12, scope: !7156)
!7159 = !DILocation(line: 4233, column: 5, scope: !7156)
!7160 = !DILocation(line: 4235, column: 12, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4235, column: 7)
!7162 = !DILocation(line: 4235, column: 24, scope: !7161)
!7163 = !DILocation(line: 4235, column: 27, scope: !7161)
!7164 = !DILocation(line: 4235, column: 47, scope: !7161)
!7165 = !DILocation(line: 4235, column: 50, scope: !7161)
!7166 = !DILocation(line: 4236, column: 7, scope: !7161)
!7167 = !DILocation(line: 4236, column: 10, scope: !7161)
!7168 = !DILocation(line: 4236, column: 39, scope: !7161)
!7169 = !DILocation(line: 4236, column: 42, scope: !7161)
!7170 = !DILocation(line: 4235, column: 7, scope: !7134)
!7171 = !DILocation(line: 4240, column: 18, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4240, column: 7)
!7173 = !DILocation(line: 4240, column: 16, scope: !7172)
!7174 = !DILocation(line: 4240, column: 7, scope: !7134)
!7175 = !DILocation(line: 4242, column: 14, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 4241, column: 5)
!7177 = !DILocation(line: 4244, column: 14, scope: !7176)
!7178 = !DILocation(line: 4248, column: 20, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4248, column: 7)
!7180 = !DILocation(line: 4248, column: 32, scope: !7179)
!7181 = !DILocation(line: 4248, column: 44, scope: !7179)
!7182 = !DILocation(line: 4248, column: 7, scope: !7134)
!7183 = !DILocation(line: 4268, column: 3, scope: !7134)
!7184 = !DILocation(line: 4285, column: 2, scope: !7148)
!7185 = !DILocation(line: 0, scope: !7148)
!7186 = !DILocation(line: 4285, column: 15, scope: !7148)
!7187 = !DILocation(line: 4286, column: 26, scope: !7148)
!7188 = !DILocation(line: 4286, column: 16, scope: !7148)
!7189 = !DILocation(line: 4290, column: 6, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 4290, column: 6)
!7191 = !DILocation(line: 4290, column: 6, scope: !7148)
!7192 = !DILocation(line: 4291, column: 13, scope: !7190)
!7193 = !DILocation(line: 4291, column: 4, scope: !7190)
!7194 = !DILocation(line: 4294, column: 20, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 4294, column: 6)
!7196 = !DILocation(line: 4294, column: 17, scope: !7195)
!7197 = !DILocation(line: 4295, column: 11, scope: !7195)
!7198 = !DILocation(line: 4298, column: 7, scope: !7149)
!7199 = !DILocation(line: 4313, column: 17, scope: !7149)
!7200 = !DILocation(line: 4313, column: 30, scope: !7149)
!7201 = !DILocation(line: 4313, column: 28, scope: !7149)
!7202 = !DILocation(line: 4314, column: 20, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4314, column: 11)
!7204 = !DILocation(line: 4315, column: 4, scope: !7203)
!7205 = !DILocation(line: 4315, column: 50, scope: !7203)
!7206 = !DILocation(line: 4315, column: 37, scope: !7203)
!7207 = !DILocation(line: 4315, column: 16, scope: !7203)
!7208 = !DILocation(line: 4315, column: 57, scope: !7203)
!7209 = !DILocation(line: 4314, column: 11, scope: !7149)
!7210 = !DILocation(line: 4316, column: 23, scope: !7203)
!7211 = !DILocation(line: 4316, column: 2, scope: !7203)
!7212 = !DILocation(line: 0, scope: !7149)
!7213 = !DILocation(line: 4318, column: 23, scope: !7149)
!7214 = !DILocation(line: 4318, column: 15, scope: !7149)
!7215 = !DILocation(line: 4318, column: 52, scope: !7149)
!7216 = !DILocation(line: 4318, column: 73, scope: !7149)
!7217 = !DILocation(line: 4325, column: 11, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4325, column: 11)
!7219 = !DILocation(line: 4325, column: 37, scope: !7218)
!7220 = !DILocation(line: 4325, column: 42, scope: !7218)
!7221 = !DILocation(line: 4325, column: 11, scope: !7149)
!7222 = !DILocation(line: 4327, column: 39, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4326, column: 2)
!7224 = !DILocation(line: 4327, column: 11, scope: !7223)
!7225 = !DILocation(line: 4329, column: 11, scope: !7223)
!7226 = !DILocation(line: 4335, column: 23, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4335, column: 11)
!7228 = !DILocation(line: 4335, column: 20, scope: !7227)
!7229 = !DILocation(line: 4335, column: 11, scope: !7149)
!7230 = !DILocation(line: 4337, column: 11, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 4336, column: 2)
!7232 = !DILocation(line: 4339, column: 11, scope: !7231)
!7233 = !DILocation(line: 4367, column: 11, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4367, column: 11)
!7235 = !DILocation(line: 4367, column: 11, scope: !7149)
!7236 = !DILocation(line: 4368, column: 9, scope: !7234)
!7237 = !DILocation(line: 4368, column: 2, scope: !7234)
!7238 = !DILocation(line: 4372, column: 26, scope: !7149)
!7239 = !DILocation(line: 4372, column: 24, scope: !7149)
!7240 = !DILocation(line: 4373, column: 38, scope: !7149)
!7241 = !DILocation(line: 4373, column: 10, scope: !7149)
!7242 = !DILocation(line: 4373, column: 8, scope: !7149)
!7243 = !DILocation(line: 4372, column: 7, scope: !7149)
!7244 = !DILocation(line: 4378, column: 42, scope: !7149)
!7245 = !DILocation(line: 4378, column: 14, scope: !7149)
!7246 = !DILocation(line: 4380, column: 14, scope: !7149)
!7247 = !DILocation(line: 4384, column: 42, scope: !7149)
!7248 = !DILocation(line: 4384, column: 14, scope: !7149)
!7249 = !DILocation(line: 4384, column: 7, scope: !7149)
!7250 = !DILocation(line: 4391, column: 11, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4391, column: 11)
!7252 = !DILocation(line: 4392, column: 4, scope: !7251)
!7253 = !DILocation(line: 4392, column: 7, scope: !7251)
!7254 = !DILocation(line: 4392, column: 28, scope: !7251)
!7255 = !DILocation(line: 4393, column: 4, scope: !7251)
!7256 = !DILocation(line: 4393, column: 30, scope: !7251)
!7257 = !DILocation(line: 4393, column: 28, scope: !7251)
!7258 = !DILocation(line: 4391, column: 11, scope: !7149)
!7259 = !DILocation(line: 4395, column: 39, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 4394, column: 2)
!7261 = !DILocation(line: 4395, column: 11, scope: !7260)
!7262 = !DILocation(line: 4397, column: 11, scope: !7260)
!7263 = !DILocation(line: 4397, column: 4, scope: !7260)
!7264 = !DILocation(line: 4407, column: 42, scope: !7149)
!7265 = !DILocation(line: 4407, column: 14, scope: !7149)
!7266 = !DILocation(line: 4409, column: 20, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4409, column: 11)
!7268 = !DILocation(line: 4409, column: 11, scope: !7149)
!7269 = !DILocation(line: 4410, column: 14, scope: !7267)
!7270 = !DILocation(line: 4410, column: 9, scope: !7267)
!7271 = !DILocation(line: 4412, column: 31, scope: !7149)
!7272 = !DILocation(line: 4412, column: 17, scope: !7149)
!7273 = !DILocation(line: 4413, column: 19, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4413, column: 11)
!7275 = !DILocation(line: 4413, column: 11, scope: !7149)
!7276 = !DILocation(line: 4416, column: 16, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4416, column: 11)
!7278 = !DILocation(line: 4417, column: 4, scope: !7277)
!7279 = !DILocation(line: 4417, column: 40, scope: !7277)
!7280 = !DILocation(line: 4417, column: 27, scope: !7277)
!7281 = !DILocation(line: 4417, column: 46, scope: !7277)
!7282 = !DILocation(line: 4416, column: 11, scope: !7149)
!7283 = !DILocation(line: 4426, column: 42, scope: !7149)
!7284 = !DILocation(line: 4426, column: 14, scope: !7149)
!7285 = !DILocation(line: 4428, column: 42, scope: !7149)
!7286 = !DILocation(line: 4428, column: 14, scope: !7149)
!7287 = !DILocation(line: 4434, column: 16, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4434, column: 11)
!7289 = !DILocation(line: 4435, column: 12, scope: !7288)
!7290 = !DILocation(line: 4435, column: 4, scope: !7288)
!7291 = !DILocation(line: 4436, column: 16, scope: !7288)
!7292 = !DILocation(line: 4437, column: 7, scope: !7288)
!7293 = !DILocation(line: 4438, column: 4, scope: !7288)
!7294 = !DILocation(line: 4438, column: 9, scope: !7288)
!7295 = !DILocation(line: 4438, column: 64, scope: !7288)
!7296 = !DILocation(line: 4438, column: 51, scope: !7288)
!7297 = !DILocation(line: 4438, column: 30, scope: !7288)
!7298 = !DILocation(line: 4434, column: 11, scope: !7149)
!7299 = !DILocation(line: 4442, column: 16, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4442, column: 11)
!7301 = !DILocation(line: 4443, column: 4, scope: !7300)
!7302 = !DILocation(line: 4445, column: 7, scope: !7300)
!7303 = !DILocation(line: 4446, column: 4, scope: !7300)
!7304 = !DILocation(line: 4446, column: 8, scope: !7300)
!7305 = !DILocation(line: 4446, column: 63, scope: !7300)
!7306 = !DILocation(line: 4446, column: 50, scope: !7300)
!7307 = !DILocation(line: 4446, column: 29, scope: !7300)
!7308 = !DILocation(line: 4442, column: 11, scope: !7149)
!7309 = !DILocation(line: 4449, column: 14, scope: !7149)
!7310 = !DILocation(line: 4449, column: 7, scope: !7149)
!7311 = !DILocation(line: 4457, column: 16, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4457, column: 11)
!7313 = !DILocation(line: 4457, column: 24, scope: !7312)
!7314 = !DILocation(line: 4457, column: 27, scope: !7312)
!7315 = !DILocation(line: 4457, column: 42, scope: !7312)
!7316 = !DILocation(line: 4457, column: 39, scope: !7312)
!7317 = !DILocation(line: 4458, column: 16, scope: !7312)
!7318 = !DILocation(line: 4458, column: 4, scope: !7312)
!7319 = !DILocation(line: 4460, column: 28, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 4459, column: 2)
!7321 = !DILocation(line: 4460, column: 14, scope: !7320)
!7322 = !DILocation(line: 4461, column: 41, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 4461, column: 8)
!7324 = !DILocation(line: 4461, column: 28, scope: !7323)
!7325 = !DILocation(line: 4461, column: 47, scope: !7323)
!7326 = !DILocation(line: 4461, column: 58, scope: !7323)
!7327 = !DILocation(line: 4461, column: 8, scope: !7320)
!7328 = !DILocation(line: 4462, column: 27, scope: !7323)
!7329 = !DILocation(line: 4463, column: 20, scope: !7323)
!7330 = !DILocation(line: 4463, column: 41, scope: !7323)
!7331 = !DILocation(line: 4462, column: 14, scope: !7323)
!7332 = !DILocation(line: 4466, column: 42, scope: !7149)
!7333 = !DILocation(line: 4466, column: 14, scope: !7149)
!7334 = !DILocation(line: 4468, column: 42, scope: !7149)
!7335 = !DILocation(line: 4468, column: 14, scope: !7149)
!7336 = !DILocation(line: 4470, column: 16, scope: !7149)
!7337 = !DILocation(line: 4495, column: 42, scope: !7149)
!7338 = !DILocation(line: 4495, column: 14, scope: !7149)
!7339 = !DILocation(line: 4497, column: 42, scope: !7149)
!7340 = !DILocation(line: 4497, column: 14, scope: !7149)
!7341 = !DILocation(line: 4500, column: 45, scope: !7149)
!7342 = !DILocation(line: 4501, column: 18, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4501, column: 11)
!7344 = !DILocation(line: 4502, column: 4, scope: !7343)
!7345 = !DILocation(line: 4502, column: 17, scope: !7343)
!7346 = !DILocation(line: 4503, column: 8, scope: !7343)
!7347 = !DILocation(line: 4503, column: 28, scope: !7343)
!7348 = !DILocation(line: 4503, column: 14, scope: !7343)
!7349 = !DILocation(line: 4504, column: 41, scope: !7343)
!7350 = !DILocation(line: 4504, column: 28, scope: !7343)
!7351 = !DILocation(line: 4504, column: 7, scope: !7343)
!7352 = !DILocation(line: 4504, column: 48, scope: !7343)
!7353 = !DILocation(line: 4505, column: 5, scope: !7343)
!7354 = !DILocation(line: 4505, column: 24, scope: !7343)
!7355 = !DILocation(line: 4505, column: 10, scope: !7343)
!7356 = !DILocation(line: 4506, column: 10, scope: !7343)
!7357 = !DILocation(line: 4506, column: 51, scope: !7343)
!7358 = !DILocation(line: 4501, column: 11, scope: !7149)
!7359 = !DILocation(line: 4507, column: 8, scope: !7343)
!7360 = !DILocation(line: 4507, column: 2, scope: !7343)
!7361 = !DILocation(line: 4509, column: 14, scope: !7149)
!7362 = !DILocation(line: 4509, column: 7, scope: !7149)
!7363 = !DILocation(line: 4515, column: 20, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4515, column: 11)
!7365 = !DILocation(line: 4515, column: 11, scope: !7149)
!7366 = !DILocation(line: 4517, column: 31, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 4517, column: 16)
!7368 = !DILocation(line: 4517, column: 17, scope: !7367)
!7369 = !DILocation(line: 4518, column: 37, scope: !7367)
!7370 = !DILocation(line: 4518, column: 24, scope: !7367)
!7371 = !DILocation(line: 4518, column: 3, scope: !7367)
!7372 = !DILocation(line: 4518, column: 44, scope: !7367)
!7373 = !DILocation(line: 4517, column: 16, scope: !7364)
!7374 = !DILocation(line: 4521, column: 37, scope: !7367)
!7375 = !DILocation(line: 4521, column: 9, scope: !7367)
!7376 = !DILocation(line: 4521, column: 2, scope: !7367)
!7377 = !DILocation(line: 4528, column: 20, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4528, column: 11)
!7379 = !DILocation(line: 4528, column: 11, scope: !7149)
!7380 = !DILocation(line: 4530, column: 31, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 4530, column: 16)
!7382 = !DILocation(line: 4530, column: 17, scope: !7381)
!7383 = !DILocation(line: 4531, column: 37, scope: !7381)
!7384 = !DILocation(line: 4531, column: 24, scope: !7381)
!7385 = !DILocation(line: 4531, column: 3, scope: !7381)
!7386 = !DILocation(line: 4531, column: 44, scope: !7381)
!7387 = !DILocation(line: 4530, column: 16, scope: !7378)
!7388 = !DILocation(line: 4534, column: 37, scope: !7381)
!7389 = !DILocation(line: 4534, column: 9, scope: !7381)
!7390 = !DILocation(line: 4534, column: 2, scope: !7381)
!7391 = !DILocation(line: 4541, column: 44, scope: !7149)
!7392 = !DILocation(line: 4541, column: 16, scope: !7149)
!7393 = !DILocation(line: 4543, column: 18, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4543, column: 11)
!7395 = !DILocation(line: 4544, column: 4, scope: !7394)
!7396 = !DILocation(line: 4544, column: 17, scope: !7394)
!7397 = !DILocation(line: 4545, column: 8, scope: !7394)
!7398 = !DILocation(line: 4545, column: 26, scope: !7394)
!7399 = !DILocation(line: 4545, column: 12, scope: !7394)
!7400 = !DILocation(line: 4546, column: 39, scope: !7394)
!7401 = !DILocation(line: 4546, column: 26, scope: !7394)
!7402 = !DILocation(line: 4546, column: 5, scope: !7394)
!7403 = !DILocation(line: 4546, column: 46, scope: !7394)
!7404 = !DILocation(line: 4543, column: 11, scope: !7149)
!7405 = !DILocation(line: 4547, column: 8, scope: !7394)
!7406 = !DILocation(line: 4547, column: 2, scope: !7394)
!7407 = !DILocation(line: 4552, column: 44, scope: !7149)
!7408 = !DILocation(line: 4552, column: 16, scope: !7149)
!7409 = !DILocation(line: 4554, column: 18, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4554, column: 11)
!7411 = !DILocation(line: 4555, column: 4, scope: !7410)
!7412 = !DILocation(line: 4555, column: 17, scope: !7410)
!7413 = !DILocation(line: 4556, column: 8, scope: !7410)
!7414 = !DILocation(line: 4556, column: 26, scope: !7410)
!7415 = !DILocation(line: 4556, column: 12, scope: !7410)
!7416 = !DILocation(line: 4557, column: 39, scope: !7410)
!7417 = !DILocation(line: 4557, column: 26, scope: !7410)
!7418 = !DILocation(line: 4557, column: 5, scope: !7410)
!7419 = !DILocation(line: 4557, column: 46, scope: !7410)
!7420 = !DILocation(line: 4554, column: 11, scope: !7149)
!7421 = !DILocation(line: 4558, column: 8, scope: !7410)
!7422 = !DILocation(line: 4558, column: 2, scope: !7410)
!7423 = !DILocation(line: 4565, column: 42, scope: !7149)
!7424 = !DILocation(line: 4565, column: 14, scope: !7149)
!7425 = !DILocation(line: 4567, column: 11, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4567, column: 11)
!7427 = !DILocation(line: 4568, column: 4, scope: !7426)
!7428 = !DILocation(line: 4568, column: 7, scope: !7426)
!7429 = !DILocation(line: 4568, column: 28, scope: !7426)
!7430 = !DILocation(line: 4569, column: 4, scope: !7426)
!7431 = !DILocation(line: 4569, column: 30, scope: !7426)
!7432 = !DILocation(line: 4569, column: 28, scope: !7426)
!7433 = !DILocation(line: 4567, column: 11, scope: !7149)
!7434 = !DILocation(line: 4570, column: 9, scope: !7426)
!7435 = !DILocation(line: 4570, column: 2, scope: !7426)
!7436 = !DILocation(line: 4576, column: 12, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4576, column: 11)
!7438 = !DILocation(line: 4577, column: 4, scope: !7437)
!7439 = !DILocation(line: 4577, column: 7, scope: !7437)
!7440 = !DILocation(line: 4577, column: 28, scope: !7437)
!7441 = !DILocation(line: 4578, column: 4, scope: !7437)
!7442 = !DILocation(line: 4578, column: 31, scope: !7437)
!7443 = !DILocation(line: 4578, column: 28, scope: !7437)
!7444 = !DILocation(line: 4579, column: 4, scope: !7437)
!7445 = !DILocation(line: 4579, column: 31, scope: !7437)
!7446 = !DILocation(line: 4579, column: 28, scope: !7437)
!7447 = !DILocation(line: 4576, column: 11, scope: !7149)
!7448 = !DILocation(line: 4582, column: 42, scope: !7149)
!7449 = !DILocation(line: 4582, column: 14, scope: !7149)
!7450 = !DILocation(line: 4584, column: 14, scope: !7149)
!7451 = !DILocation(line: 4584, column: 7, scope: !7149)
!7452 = !DILocation(line: 4587, column: 42, scope: !7149)
!7453 = !DILocation(line: 4587, column: 14, scope: !7149)
!7454 = !DILocation(line: 4589, column: 42, scope: !7149)
!7455 = !DILocation(line: 4589, column: 14, scope: !7149)
!7456 = !DILocation(line: 4591, column: 14, scope: !7149)
!7457 = !DILocation(line: 4591, column: 7, scope: !7149)
!7458 = !DILocation(line: 4601, column: 4, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4600, column: 11)
!7460 = !DILocation(line: 4600, column: 11, scope: !7149)
!7461 = !DILocation(line: 4604, column: 52, scope: !7149)
!7462 = !DILocation(line: 4604, column: 73, scope: !7149)
!7463 = !DILocation(line: 4604, column: 15, scope: !7149)
!7464 = !DILocation(line: 4615, column: 14, scope: !7134)
!7465 = !DILocation(line: 4616, column: 16, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4616, column: 7)
!7467 = !DILocation(line: 4616, column: 7, scope: !7134)
!7468 = !DILocation(line: 4619, column: 13, scope: !7134)
!7469 = !DILocation(line: 4620, column: 52, scope: !7134)
!7470 = !DILocation(line: 4620, column: 39, scope: !7134)
!7471 = !DILocation(line: 4620, column: 18, scope: !7134)
!7472 = !DILocation(line: 4620, column: 10, scope: !7134)
!7473 = !DILocation(line: 4621, column: 20, scope: !7134)
!7474 = !DILocation(line: 4621, column: 41, scope: !7134)
!7475 = !DILocation(line: 4622, column: 1, scope: !7134)
