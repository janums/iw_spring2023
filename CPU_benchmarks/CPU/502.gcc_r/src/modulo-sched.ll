; ModuleID = 'modulo-sched.bc'
source_filename = "modulo-sched.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type { %struct.basic_block_def*, i32, i32, i32, i32, %struct.ddg_node*, %struct.ddg_node*, i32, i32, %struct.ddg_edge** }
%struct.ddg_node = type { i32, %struct.rtx_def*, %struct.rtx_def*, %struct.ddg_edge*, %struct.ddg_edge*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %union.anon.1 }
%struct.ddg_edge = type { %struct.ddg_node*, %struct.ddg_node*, i32, i32, i32, i32, %struct.ddg_edge*, %struct.ddg_edge*, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%union.anon.1 = type { i8* }
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.gcov_ctr_summary = type { i32, i32, i64, i64, i64 }
%struct.node_sched_params = type { i32, i32, %struct.rtx_def*, i32, i32, i32, i32 }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.partial_schedule = type { i32, i32, %struct.ps_insn**, i32, i32, %struct.ddg* }
%struct.ps_insn = type { %struct.ddg_node*, i32, %struct.ps_insn*, %struct.ps_insn*, i32 }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.undo_replace_buff_elem = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.undo_replace_buff_elem* }
%struct.ddg_all_sccs = type { %struct.ddg_scc**, i32, %struct.ddg* }
%struct.ddg_scc = type { %struct.simple_bitmap_def*, %struct.ddg_edge**, i32, i32 }
%struct.node_order_params = type { i32, i32, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.sbitmap_iterator = type { i64*, i32, i32, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [13 x i8] c"\0A[ROW %d ]: \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d, \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"sms\00", align 1
@pass_sms = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8 ()* @gate_handle_sms, i32 ()* @rest_of_handle_sms, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 144, i32 0, i32 0, i32 0, i32 1, i32 132099 } }, align 8, !dbg !0
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_modulo_sched = external dso_local local_unnamed_addr global i32, align 4
@max_regno = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@issue_rate = external dso_local local_unnamed_addr global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"\0A\0ASMS analysis phase\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"===================\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"SMS reached max limit... \0A\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"SMS loop num: %d, file: %s, line: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"SMS not loop_single_full_bb_p\0A\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"modulo-sched.c\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.10 = private unnamed_addr constant [21 x i8] c" %s %d (file, line)\0A\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"SMS single-bb-loop\0A\00", align 1
@profile_info = external dso_local local_unnamed_addr global %struct.gcov_ctr_summary*, align 8
@flag_branch_probabilities = external dso_local local_unnamed_addr global i32, align 4
@.str.12 = private unnamed_addr constant [16 x i8] c"SMS loop-count \00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"SMS trip-count \00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"SMS profile-sum-max \00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"SMS doloop_register_get failed\0A\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"SMS loop-with-call\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"SMS loop-with-barrier\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"SMS loop-with-not-single-set\0A\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"SMS loop with subreg in lhs\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"SMS create_ddg failed\0A\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"...OK\0A\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"\0ASMS transformation phase\0A\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"=========================\0A\0A\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"SMS doloop\0A\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"SMS built-ddg %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"SMS num-loads %d\0A\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"SMS num-stores %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"SMS const-doloop \00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"SMS iis %d %d %d (rec_mii, mii, maxii)\0A\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"SMS failed... \0A\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"SMS sched-failed (stage-count=%d, loop-count=\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c", trip-count=\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"SMS succeeded %d %d (with ii, sc)\0A\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"SMS Branch (%d) will later be scheduled at cycle %d.\0A\00", align 1
@flag_resched_modulo_sched = external dso_local local_unnamed_addr global i32, align 4
@node_sched_params = internal unnamed_addr global %struct.node_sched_params* null, align 8, !dbg !2190
@sms_common_sched_info = internal global %struct.common_sched_info_def zeroinitializer, align 8, !dbg !2071
@haifa_common_sched_info = external dso_local constant %struct.common_sched_info_def, align 8
@common_sched_info = external dso_local local_unnamed_addr global %struct.common_sched_info_def*, align 8
@sms_sched_deps_info = internal global %struct.sched_deps_info_def { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* @compute_jump_reg_dependencies, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (%struct.rtx_def*)* null, void ()* null, void (i32)* null, void (i32)* null, void (i32)* null, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* null, void (%struct.rtx_def*, i32)* null, i8 0 }, align 8, !dbg !2092
@sched_deps_info = external dso_local local_unnamed_addr global %struct.sched_deps_info_def*, align 8
@sms_sched_info = internal global %struct.haifa_sched_info { void ()* null, i32 (%struct.rtx_def*)* null, i32 ()* null, i32 (%struct.rtx_def*, i32)* null, i32 (%struct.rtx_def*, %struct.rtx_def*)* null, i8* (%struct.rtx_def*, i32)* @sms_print_insn, i32 (%struct.rtx_def*, %struct.rtx_def*)* null, i8 (%struct.rtx_def*)* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* null, i8 0, i32 0, void (%struct.rtx_def*, i32)* null, void (%struct.rtx_def*, %struct.rtx_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* null, i32 0 }, align 8, !dbg !2132
@current_sched_info = external dso_local local_unnamed_addr global %struct.haifa_sched_info*, align 8
@sms_print_insn.tmp = internal global [80 x i8] zeroinitializer, align 16, !dbg !2181
@.str.38 = private unnamed_addr constant [5 x i8] c"i%4d\00", align 1
@.str.39 = private unnamed_addr constant [31 x i8] c"SMS loop inner or !loop_outer\0A\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"SMS loop many exits \00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"SMS loop many BBs. \00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"\0AOrder params\0A\00", align 1
@.str.43 = private unnamed_addr constant [41 x i8] c"node %d, ASAP: %d, ALAP: %d, HEIGHT: %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"SMS final nodes order: \0A\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"Starting with ii=%d\0A\00", align 1
@.str.47 = private unnamed_addr constant [86 x i8] c"\0ATrying to schedule node %d                         INSN = %d  in (%d .. %d) step %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"num_splits=%d\0A\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"\0AProcessing edge: \00", align 1
@.str.50 = private unnamed_addr constant [59 x i8] c"\0AScheduling %d (%d) in psp_not_empty, checking p %d (%d): \00", align 1
@.str.51 = private unnamed_addr constant [44 x i8] c"pred st = %d; early_start = %d; latency: %d\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"the node is not scheduled\0A\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"\0AScheduling %d (%d) in a window (%d..%d) with step %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"\0AProcessing edge:\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"\0AScheduling %d (%d) in pss_not_empty, checking s %d (%d): \00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"succ st = %d; late_start = %d; latency = %d\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"end = %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [63 x i8] c"\0AScheduling %d (%d) in psp_pss_not_empty, checking p %d (%d): \00", align 1
@.str.59 = private unnamed_addr constant [45 x i8] c"pred st = %d; early_start = %d; latency = %d\00", align 1
@.str.60 = private unnamed_addr constant [63 x i8] c"\0AScheduling %d (%d) in psp_pss_not_empty, checking s %d (%d): \00", align 1
@.str.61 = private unnamed_addr constant [42 x i8] c"\0AEmpty window: start=%d, end=%d, step=%d\0A\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"\0Amust_precede: \00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"\0Amust_follow: \00", align 1
@.str.64 = private unnamed_addr constant [27 x i8] c"Scheduled w/o split in %d\0A\00", align 1
@curr_state = external dso_local local_unnamed_addr global i8*, align 8
@sched_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@sched_verbose = external dso_local local_unnamed_addr global i32, align 4
@.str.65 = private unnamed_addr constant [39 x i8] c"Both crit_pred and crit_succ are NULL\0A\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"split_row=%d\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"min_cycle=%d, max_cycle=%d\0A\00", align 1
@.str.68 = private unnamed_addr constant [57 x i8] c"crr_insn->node=%d, crr_insn->cycle=%d,\09\09   min_cycle=%d\0A\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"Node = %d; INSN = %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c" asap = %d:\0A\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c" time = %d:\0A\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c" nreg_moves = %d:\0A\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c" reg_move = \00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2222 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2235, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2236, metadata !DIExpression()), !dbg !2237
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2238
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2239
  ret i32 %call, !dbg !2240
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2241 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2243
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2244
  ret i32 %call, !dbg !2245
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2246 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2301, metadata !DIExpression()), !dbg !2302
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2303
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2303
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2303
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2303
  %cmp = icmp uge i8* %0, %1, !dbg !2303
  %conv1 = zext i1 %cmp to i64, !dbg !2303
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2303
  %tobool = icmp eq i64 %expval, 0, !dbg !2303
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2303

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2303
  br label %cond.end, !dbg !2303

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2303
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2303
  %2 = load i8, i8* %0, align 1, !dbg !2303
  %conv3 = zext i8 %2 to i32, !dbg !2303
  br label %cond.end, !dbg !2303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2303
  ret i32 %cond, !dbg !2304
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2305 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2307, metadata !DIExpression()), !dbg !2308
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2309
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2309
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2309
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2309
  %cmp = icmp uge i8* %0, %1, !dbg !2309
  %conv1 = zext i1 %cmp to i64, !dbg !2309
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2309
  %tobool = icmp eq i64 %expval, 0, !dbg !2309
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2309

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2309
  br label %cond.end, !dbg !2309

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2309
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2309
  %2 = load i8, i8* %0, align 1, !dbg !2309
  %conv3 = zext i8 %2 to i32, !dbg !2309
  br label %cond.end, !dbg !2309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2309
  ret i32 %cond, !dbg !2310
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2311 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2312
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2312
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2312
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2312
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2312
  %cmp = icmp uge i8* %1, %2, !dbg !2312
  %conv1 = zext i1 %cmp to i64, !dbg !2312
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2312
  %tobool = icmp eq i64 %expval, 0, !dbg !2312
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2312

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2312
  br label %cond.end, !dbg !2312

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2312
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2312
  %3 = load i8, i8* %1, align 1, !dbg !2312
  %conv3 = zext i8 %3 to i32, !dbg !2312
  br label %cond.end, !dbg !2312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2312
  ret i32 %cond, !dbg !2313
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2314 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2318, metadata !DIExpression()), !dbg !2319
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2320
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2321
  ret i32 %call, !dbg !2322
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2323 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2328, metadata !DIExpression()), !dbg !2329
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2330
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2330
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2330
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2330
  %cmp = icmp uge i8* %0, %1, !dbg !2330
  %conv1 = zext i1 %cmp to i64, !dbg !2330
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2330
  %tobool = icmp eq i64 %expval, 0, !dbg !2330
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2330

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2330
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2330
  br label %cond.end, !dbg !2330

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2330
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2330
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2330
  store i8 %conv2, i8* %0, align 1, !dbg !2330
  %conv6 = and i32 %__c, 255, !dbg !2330
  br label %cond.end, !dbg !2330

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2330
  ret i32 %cond, !dbg !2331
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2332 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2334, metadata !DIExpression()), !dbg !2336
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2335, metadata !DIExpression()), !dbg !2336
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2337
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2337
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2337
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2337
  %cmp = icmp uge i8* %0, %1, !dbg !2337
  %conv1 = zext i1 %cmp to i64, !dbg !2337
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2337
  %tobool = icmp eq i64 %expval, 0, !dbg !2337
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2337

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2337
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2337
  br label %cond.end, !dbg !2337

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2337
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2337
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2337
  store i8 %conv2, i8* %0, align 1, !dbg !2337
  %conv6 = and i32 %__c, 255, !dbg !2337
  br label %cond.end, !dbg !2337

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2337
  ret i32 %cond, !dbg !2338
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2341, metadata !DIExpression()), !dbg !2342
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2343
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2343
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2343
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2343
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2343
  %cmp = icmp uge i8* %1, %2, !dbg !2343
  %conv1 = zext i1 %cmp to i64, !dbg !2343
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2343
  %tobool = icmp eq i64 %expval, 0, !dbg !2343
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2343

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2343
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2343
  br label %cond.end, !dbg !2343

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2343
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2343
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2343
  store i8 %conv4, i8* %1, align 1, !dbg !2343
  %conv6 = and i32 %__c, 255, !dbg !2343
  br label %cond.end, !dbg !2343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2343
  ret i32 %cond, !dbg !2344
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2351, metadata !DIExpression()), !dbg !2354
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2352, metadata !DIExpression()), !dbg !2354
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2353, metadata !DIExpression()), !dbg !2354
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2355
  ret i64 %call, !dbg !2356
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2357 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2359, metadata !DIExpression()), !dbg !2360
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2361
  %0 = load i32, i32* %_flags, align 8, !dbg !2361
  %and = lshr i32 %0, 4, !dbg !2361
  %and.lobit = and i32 %and, 1, !dbg !2361
  ret i32 %and.lobit, !dbg !2362
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2363 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2365, metadata !DIExpression()), !dbg !2366
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2367
  %0 = load i32, i32* %_flags, align 8, !dbg !2367
  %and = lshr i32 %0, 5, !dbg !2367
  %and.lobit = and i32 %and, 1, !dbg !2367
  ret i32 %and.lobit, !dbg !2368
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2372, metadata !DIExpression()), !dbg !2373
  %__c.off = add i32 %__c, 128, !dbg !2374
  %0 = icmp ult i32 %__c.off, 384, !dbg !2374
  br i1 %0, label %cond.true, label %cond.end, !dbg !2374

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2375
  %1 = load i32*, i32** %call, align 8, !dbg !2376
  %idxprom = sext i32 %__c to i64, !dbg !2377
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2377
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2377
  br label %cond.end, !dbg !2378

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2378
  ret i32 %cond, !dbg !2379
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2380 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2382, metadata !DIExpression()), !dbg !2383
  %__c.off = add i32 %__c, 128, !dbg !2384
  %0 = icmp ult i32 %__c.off, 384, !dbg !2384
  br i1 %0, label %cond.true, label %cond.end, !dbg !2384

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2385
  %1 = load i32*, i32** %call, align 8, !dbg !2386
  %idxprom = sext i32 %__c to i64, !dbg !2387
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2387
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2387
  br label %cond.end, !dbg !2388

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2388
  ret i32 %cond, !dbg !2389
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2390 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2395, metadata !DIExpression()), !dbg !2396
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2397
  %conv = trunc i64 %call to i32, !dbg !2398
  ret i32 %conv, !dbg !2399
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2400 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2404, metadata !DIExpression()), !dbg !2405
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2406
  ret i64 %call, !dbg !2407
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2408 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2413, metadata !DIExpression()), !dbg !2414
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2415
  ret i64 %call, !dbg !2416
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2417 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2423, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2424, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2425, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2426, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2427, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 0, metadata !2428, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2429, metadata !DIExpression()), !dbg !2433
  br label %while.cond, !dbg !2434

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2435
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2429, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2428, metadata !DIExpression()), !dbg !2433
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2436
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2434

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2437
  %div = lshr i64 %add, 1, !dbg !2439
  call void @llvm.dbg.value(metadata i64 %div, metadata !2430, metadata !DIExpression()), !dbg !2433
  %mul = mul i64 %div, %__size, !dbg !2440
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2441
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2431, metadata !DIExpression()), !dbg !2433
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2442
  call void @llvm.dbg.value(metadata i32 %call, metadata !2432, metadata !DIExpression()), !dbg !2433
  %cmp1 = icmp slt i32 %call, 0, !dbg !2443
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2445

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2446
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2448

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2449
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2428, metadata !DIExpression()), !dbg !2433
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2433
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2429, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2428, metadata !DIExpression()), !dbg !2433
  br label %while.cond, !dbg !2434, !llvm.loop !2450

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2433
  ret i8* %retval.0, !dbg !2452
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2453 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2459, metadata !DIExpression()), !dbg !2460
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2461
  ret double %call, !dbg !2462
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2463 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2472, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2473, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 %base, metadata !2474, metadata !DIExpression()), !dbg !2475
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2476
  ret i64 %call, !dbg !2477
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2478 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2484, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2485, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i32 %base, metadata !2486, metadata !DIExpression()), !dbg !2487
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2488
  ret i64 %call, !dbg !2489
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2501, metadata !DIExpression()), !dbg !2504
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2502, metadata !DIExpression()), !dbg !2504
  call void @llvm.dbg.value(metadata i32 %base, metadata !2503, metadata !DIExpression()), !dbg !2504
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2505
  ret i64 %call, !dbg !2506
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2507 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2511, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2512, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata i32 %base, metadata !2513, metadata !DIExpression()), !dbg !2514
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2515
  ret i64 %call, !dbg !2516
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2517 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2557, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2558, metadata !DIExpression()), !dbg !2559
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2560
  ret i32 %call, !dbg !2561
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2562 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2564, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2565, metadata !DIExpression()), !dbg !2566
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2567
  ret i32 %call, !dbg !2568
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2569 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2573, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2574, metadata !DIExpression()), !dbg !2575
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2576
  ret i32 %call, !dbg !2577
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2578 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2582, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2583, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2584, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2585, metadata !DIExpression()), !dbg !2586
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2587
  ret i32 %call, !dbg !2588
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2589 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2593, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2594, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2595, metadata !DIExpression()), !dbg !2596
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2595, metadata !DIExpression(DW_OP_deref)), !dbg !2596
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2597
  ret i32 %call, !dbg !2598
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2599 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2603, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2604, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2605, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2606, metadata !DIExpression()), !dbg !2607
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2606, metadata !DIExpression(DW_OP_deref)), !dbg !2607
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2608
  ret i32 %call, !dbg !2609
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2610 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2634, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2635, metadata !DIExpression()), !dbg !2636
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2637
  ret i32 %call, !dbg !2638
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2639 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2641, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2642, metadata !DIExpression()), !dbg !2643
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2644
  ret i32 %call, !dbg !2645
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2646 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2650, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2651, metadata !DIExpression()), !dbg !2652
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2653
  ret i32 %call, !dbg !2654
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2655 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2659, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2660, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2661, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2662, metadata !DIExpression()), !dbg !2663
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2664
  ret i32 %call, !dbg !2665
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @print_partial_schedule(%struct.partial_schedule* %ps, %struct._IO_FILE* %dump) local_unnamed_addr #4 !dbg !2666 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !2670, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %dump, metadata !2671, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata i32 0, metadata !2672, metadata !DIExpression()), !dbg !2677
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !2678
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !2679
  br label %for.cond, !dbg !2680

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2681
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2672, metadata !DIExpression()), !dbg !2677
  %0 = load i32, i32* %ii, align 8, !dbg !2682
  %1 = sext i32 %0 to i64, !dbg !2683
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !2683
  br i1 %cmp, label %for.body, label %for.end, !dbg !2684

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !2685
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %indvars.iv, !dbg !2686
  %3 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx, align 8, !dbg !2686
  call void @llvm.dbg.value(metadata %struct.ps_insn* %3, metadata !2673, metadata !DIExpression()), !dbg !2679
  %4 = trunc i64 %indvars.iv to i32, !dbg !2687
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 %4) #6, !dbg !2687
  br label %while.cond, !dbg !2688

while.cond:                                       ; preds = %while.body, %for.body
  %ps_i.0 = phi %struct.ps_insn* [ %3, %for.body ], [ %8, %while.body ], !dbg !2679
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_i.0, metadata !2673, metadata !DIExpression()), !dbg !2679
  %tobool = icmp eq %struct.ps_insn* %ps_i.0, null, !dbg !2688
  br i1 %tobool, label %for.inc, label %while.body, !dbg !2688

while.body:                                       ; preds = %while.cond
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i.0, i64 0, i32 0, !dbg !2689
  %5 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !2689
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %5, i64 0, i32 1, !dbg !2689
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2689
  %arrayidx1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2689
  %rt_int = bitcast %union.rtunion_def* %arrayidx1 to i32*, !dbg !2689
  %7 = load i32, i32* %rt_int, align 8, !dbg !2689
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 %7) #6, !dbg !2691
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i.0, i64 0, i32 2, !dbg !2692
  %8 = load %struct.ps_insn*, %struct.ps_insn** %next_in_row, align 8, !dbg !2692
  call void @llvm.dbg.value(metadata %struct.ps_insn* %8, metadata !2673, metadata !DIExpression()), !dbg !2679
  br label %while.cond, !dbg !2688, !llvm.loop !2693

for.inc:                                          ; preds = %while.cond
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2695
  call void @llvm.dbg.value(metadata i32 undef, metadata !2672, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2677
  br label %for.cond, !dbg !2696, !llvm.loop !2697

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2699
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_sms() #4 !dbg !2700 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2701
  %cmp = icmp sgt i32 %0, 0, !dbg !2702
  %1 = load i32, i32* @flag_modulo_sched, align 4, !dbg !2703
  %tobool = icmp ne i32 %1, 0, !dbg !2703
  %2 = and i1 %cmp, %tobool, !dbg !2703
  %conv = zext i1 %2 to i8, !dbg !2704
  ret i8 %conv, !dbg !2705
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_sms() #4 !dbg !2706 {
entry:
  tail call void @cfg_layout_initialize(i32 0) #6, !dbg !2709
  tail call fastcc void @sms_schedule() #7, !dbg !2710
  %call = tail call i32 @max_reg_num() #6, !dbg !2711
  store i32 %call, i32* @max_regno, align 4, !dbg !2712
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2713
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2713
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2713
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2713
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2713
  %bb.0.in.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 6, !dbg !2715
  %bb.0.pre = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in.phi.trans.insert, align 8, !dbg !2715
  br label %for.cond, !dbg !2713

for.cond:                                         ; preds = %for.inc, %entry
  %.pre3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre, %for.inc ]
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre, %for.inc ], !dbg !2716
  %bb.0 = phi %struct.basic_block_def* [ %bb.0.pre, %entry ], [ %bb.02, %for.inc ], !dbg !2715
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2708, metadata !DIExpression()), !dbg !2718
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2716
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2716
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !2716
  br i1 %cmp, label %for.end, label %for.body, !dbg !2713

for.body:                                         ; preds = %for.cond
  %next_bb3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !2719
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb3, align 8, !dbg !2719
  %cmp7 = icmp eq %struct.basic_block_def* %5, %4, !dbg !2721
  br i1 %cmp7, label %for.inc, label %if.then, !dbg !2722

if.then:                                          ; preds = %for.body
  %6 = ptrtoint %struct.basic_block_def* %5 to i64, !dbg !2722
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !2723
  %7 = bitcast i8** %aux to i64*, !dbg !2724
  store i64 %6, i64* %7, align 8, !dbg !2724
  %.pre.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2716
  br label %for.inc, !dbg !2725

for.inc:                                          ; preds = %for.body, %if.then
  %.pre = phi %struct.control_flow_graph* [ %.pre3, %for.body ], [ %.pre.pre, %if.then ], !dbg !2716
  %bb.02 = phi %struct.basic_block_def* [ %4, %for.body ], [ %5, %if.then ]
  br label %for.cond, !dbg !2716, !llvm.loop !2726

for.end:                                          ; preds = %for.cond
  tail call void @free_dominance_info(i32 1) #6, !dbg !2728
  tail call void @cfg_layout_finalize() #6, !dbg !2729
  ret i32 0, !dbg !2730
}

declare dso_local void @cfg_layout_initialize(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @sms_schedule() unnamed_addr #4 !dbg !2731 {
entry:
  %max_asap = alloca i32, align 4
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  %head409 = alloca %struct.rtx_def*, align 8
  %tail410 = alloca %struct.rtx_def*, align 8
  %0 = bitcast i32* %max_asap to i8*, !dbg !2791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2791
  %1 = bitcast %struct.loop_iterator* %li to i8*, !dbg !2792
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2792
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !2746, metadata !DIExpression()), !dbg !2793
  %2 = bitcast %struct.loop** %loop to i8*, !dbg !2794
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !2794
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !2748, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i64 0, metadata !2750, metadata !DIExpression()), !dbg !2793
  tail call void @loop_optimizer_init(i32 9) #6, !dbg !2795
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !2796
  %cmp = icmp ult i32 %call, 2, !dbg !2798
  br i1 %cmp, label %if.then, label %if.end, !dbg !2799

if.then:                                          ; preds = %entry
  tail call void @loop_optimizer_finalize() #6, !dbg !2800
  br label %cleanup655, !dbg !2802

if.end:                                           ; preds = %entry
  %3 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 2), align 8, !dbg !2803
  %tobool = icmp eq i32 ()* %3, null, !dbg !2804
  br i1 %tobool, label %if.else, label %if.then1, !dbg !2805

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* @reload_completed, align 4, !dbg !2806
  call void @llvm.dbg.value(metadata i32 %4, metadata !2751, metadata !DIExpression()), !dbg !2807
  store i32 1, i32* @reload_completed, align 4, !dbg !2808
  %call2 = tail call i32 %3() #6, !dbg !2809
  store i32 %call2, i32* @issue_rate, align 4, !dbg !2810
  store i32 %4, i32* @reload_completed, align 4, !dbg !2811
  br label %if.end3, !dbg !2812

if.else:                                          ; preds = %if.end
  store i32 1, i32* @issue_rate, align 4, !dbg !2813
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1
  tail call fastcc void @setup_sched_infos() #7, !dbg !2814
  tail call void @haifa_sched_init() #6, !dbg !2815
  %call4 = tail call fastcc i32 @number_of_loops() #7, !dbg !2816
  %conv = zext i32 %call4 to i64, !dbg !2816
  %call5 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !2816
  %5 = bitcast i8* %call5 to %struct.ddg**, !dbg !2816
  call void @llvm.dbg.value(metadata %struct.ddg** %5, metadata !2734, metadata !DIExpression()), !dbg !2793
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2817
  %tobool6 = icmp eq %struct._IO_FILE* %6, null, !dbg !2817
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !2819

if.then7:                                         ; preds = %if.end3
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2820
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2822
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2823
  br label %if.end10, !dbg !2824

if.end10:                                         ; preds = %if.end3, %if.then7
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2739, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !2825
  %8 = bitcast %struct.rtx_def** %head to i8*, !dbg !2826
  %9 = bitcast %struct.rtx_def** %tail to i8*, !dbg !2826
  br label %for.cond, !dbg !2825

for.cond:                                         ; preds = %for.inc399, %if.end10
  %trip_count.0 = phi i64 [ 0, %if.end10 ], [ %trip_count.2, %for.inc399 ], !dbg !2827
  %bb.0 = phi %struct.basic_block_def* [ null, %if.end10 ], [ %bb.1, %for.inc399 ], !dbg !2828
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2746, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.0, metadata !2750, metadata !DIExpression()), !dbg !2793
  %10 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2829
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !2747, metadata !DIExpression()), !dbg !2793
  %tobool11 = icmp eq %struct.loop* %10, null, !dbg !2825
  br i1 %tobool11, label %for.end400, label %for.body, !dbg !2825

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !2830
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !2830
  %call12 = call zeroext i8 @dbg_cnt(i32 34) #6, !dbg !2831
  %cmp14 = icmp eq i8 %call12, 0, !dbg !2833
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2826
  %tobool17 = icmp ne %struct._IO_FILE* %11, null, !dbg !2826
  br i1 %cmp14, label %if.then16, label %if.end21, !dbg !2834

if.then16:                                        ; preds = %for.body
  br i1 %tobool17, label %if.then18, label %cleanup394, !dbg !2835

if.then18:                                        ; preds = %if.then16
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2837
  br label %cleanup394, !dbg !2837

if.end21:                                         ; preds = %for.body
  br i1 %tobool17, label %if.then23, label %if.end28, !dbg !2839

if.then23:                                        ; preds = %if.end21
  %12 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2840
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2747, metadata !DIExpression()), !dbg !2793
  %header = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 2, !dbg !2840
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !2840
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 7, !dbg !2840
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2840
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2840
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !2840
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2840
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !2760, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2747, metadata !DIExpression()), !dbg !2793
  %num = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !2842
  %16 = load i32, i32* %num, align 8, !dbg !2842
  %call25 = call i8* @insn_file(%struct.rtx_def* %15) #6, !dbg !2843
  %call26 = call i32 @insn_line(%struct.rtx_def* %15) #6, !dbg !2844
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 %16, i8* %call25, i32 %call26) #6, !dbg !2845
  br label %if.end28, !dbg !2846

if.end28:                                         ; preds = %if.then23, %if.end21
  %17 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2847
  call void @llvm.dbg.value(metadata %struct.loop* %17, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call29 = call fastcc zeroext i8 @loop_canon_p(%struct.loop* %17) #7, !dbg !2849
  %tobool30 = icmp eq i8 %call29, 0, !dbg !2849
  br i1 %tobool30, label %cleanup394, label %if.end32, !dbg !2850

if.end32:                                         ; preds = %if.end28
  %18 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2851
  call void @llvm.dbg.value(metadata %struct.loop* %18, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call33 = call fastcc zeroext i8 @loop_single_full_bb_p(%struct.loop* %18) #7, !dbg !2853
  %tobool34 = icmp eq i8 %call33, 0, !dbg !2853
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !2854

if.then35:                                        ; preds = %if.end32
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2855
  %tobool36 = icmp eq %struct._IO_FILE* %19, null, !dbg !2855
  br i1 %tobool36, label %cleanup394, label %if.then37, !dbg !2858

if.then37:                                        ; preds = %if.then35
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2859
  br label %cleanup394, !dbg !2859

if.end40:                                         ; preds = %if.end32
  %20 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2860
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !2747, metadata !DIExpression()), !dbg !2793
  %header41 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 2, !dbg !2861
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %header41, align 8, !dbg !2861
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %21, metadata !2746, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !2754, metadata !DIExpression(DW_OP_deref)), !dbg !2826
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !2758, metadata !DIExpression(DW_OP_deref)), !dbg !2826
  call void @get_ebb_head_tail(%struct.basic_block_def* %21, %struct.basic_block_def* %21, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !2862
  %22 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2863
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call42 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %22) #6, !dbg !2864
  call void @llvm.dbg.value(metadata %struct.edge_def* %call42, metadata !2749, metadata !DIExpression()), !dbg !2793
  %23 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2865
  call void @llvm.dbg.value(metadata %struct.loop* %23, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call43 = call %struct.edge_def* @single_exit(%struct.loop* %23) #6, !dbg !2865
  %tobool44 = icmp eq %struct.edge_def* %call43, null, !dbg !2865
  br i1 %tobool44, label %cond.true, label %cond.end, !dbg !2865

cond.true:                                        ; preds = %if.end40
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 971, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2865
  br label %cond.end, !dbg !2865

cond.end:                                         ; preds = %if.end40, %cond.true
  %24 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2866
  call void @llvm.dbg.value(metadata %struct.loop* %24, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call45 = call %struct.edge_def* @single_exit(%struct.loop* %24) #6, !dbg !2868
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call45, i64 0, i32 9, !dbg !2869
  %25 = load i64, i64* %count, align 8, !dbg !2869
  %tobool46 = icmp eq i64 %25, 0, !dbg !2868
  br i1 %tobool46, label %if.end51, label %if.then47, !dbg !2870

if.then47:                                        ; preds = %cond.end
  %count48 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call42, i64 0, i32 9, !dbg !2871
  %26 = load i64, i64* %count48, align 8, !dbg !2871
  %27 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2872
  call void @llvm.dbg.value(metadata %struct.loop* %27, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call49 = call %struct.edge_def* @single_exit(%struct.loop* %27) #6, !dbg !2873
  %count50 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call49, i64 0, i32 9, !dbg !2874
  %28 = load i64, i64* %count50, align 8, !dbg !2874
  %div = sdiv i64 %26, %28, !dbg !2875
  call void @llvm.dbg.value(metadata i64 %div, metadata !2750, metadata !DIExpression()), !dbg !2793
  br label %if.end51, !dbg !2876

if.end51:                                         ; preds = %cond.end, %if.then47
  %trip_count.1 = phi i64 [ %div, %if.then47 ], [ %trip_count.0, %cond.end ], !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.1, metadata !2750, metadata !DIExpression()), !dbg !2793
  %count52 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call42, i64 0, i32 9, !dbg !2877
  %29 = load i64, i64* %count52, align 8, !dbg !2877
  %tobool53 = icmp eq i64 %29, 0, !dbg !2879
  br i1 %tobool53, label %if.end83, label %land.lhs.true, !dbg !2880

land.lhs.true:                                    ; preds = %if.end51
  %30 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2881
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call55 = call %struct.edge_def* @single_exit(%struct.loop* %30) #6, !dbg !2882
  %count56 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call55, i64 0, i32 9, !dbg !2883
  %31 = load i64, i64* %count56, align 8, !dbg !2883
  %32 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !2884
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %32, i64 41, i32 1, !dbg !2884
  %33 = load i32, i32* %value, align 8, !dbg !2884
  %conv57 = sext i32 %33 to i64, !dbg !2884
  %mul = mul nsw i64 %31, %conv57, !dbg !2885
  %cmp58 = icmp slt i64 %29, %mul, !dbg !2886
  br i1 %cmp58, label %if.then60, label %if.end83, !dbg !2887

if.then60:                                        ; preds = %land.lhs.true
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2888
  %tobool61 = icmp eq %struct._IO_FILE* %34, null, !dbg !2888
  br i1 %tobool61, label %cleanup394, label %if.then62, !dbg !2891

if.then62:                                        ; preds = %if.then60
  %35 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !2892
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !2758, metadata !DIExpression()), !dbg !2826
  %call63 = call i8* @insn_file(%struct.rtx_def* %35) #6, !dbg !2894
  %36 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !2895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !2758, metadata !DIExpression()), !dbg !2826
  %call64 = call i32 @insn_line(%struct.rtx_def* %36) #6, !dbg !2896
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8* %call63, i32 %call64) #6, !dbg !2897
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2898
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2899
  %38 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !2900
  %tobool67 = icmp ne %struct.gcov_ctr_summary* %38, null, !dbg !2900
  %39 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !2902
  %tobool69 = icmp ne i32 %39, 0, !dbg !2902
  %or.cond = and i1 %tobool67, %tobool69, !dbg !2903
  br i1 %or.cond, label %if.then70, label %cleanup394, !dbg !2903

if.then70:                                        ; preds = %if.then62
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2904
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !2906
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2907
  %count72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 8, !dbg !2908
  %42 = load i64, i64* %count72, align 8, !dbg !2908
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %42) #6, !dbg !2909
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2910
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2911
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2912
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2913
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2914
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %trip_count.1) #6, !dbg !2915
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2916
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2917
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2918
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !2919
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2920
  %49 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !2921
  %sum_max = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %49, i64 0, i32 4, !dbg !2922
  %50 = load i64, i64* %sum_max, align 8, !dbg !2922
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %50) #6, !dbg !2923
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2924
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2925
  br label %cleanup394, !dbg !2926

if.end83:                                         ; preds = %if.end51, %land.lhs.true
  %52 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !2927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !2754, metadata !DIExpression()), !dbg !2826
  %53 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !2929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !2758, metadata !DIExpression()), !dbg !2826
  %call84 = call fastcc %struct.rtx_def* @doloop_register_get(%struct.rtx_def* %52, %struct.rtx_def* %53) #7, !dbg !2930
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2759, metadata !DIExpression()), !dbg !2826
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2931
  %tobool87 = icmp eq %struct._IO_FILE* %54, null, !dbg !2931
  br i1 %tobool87, label %cleanup394, label %if.then88, !dbg !2934

if.then88:                                        ; preds = %if.end83
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !2935
  br label %cleanup394, !dbg !2935

cleanup394:                                       ; preds = %if.then60, %if.end83, %if.then35, %if.end28, %if.then88, %if.then70, %if.then62, %if.then37, %if.then16, %if.then18
  %trip_count.2 = phi i64 [ %trip_count.0, %if.then18 ], [ %trip_count.0, %if.then16 ], [ %trip_count.0, %if.end28 ], [ %trip_count.0, %if.then37 ], [ %trip_count.0, %if.then35 ], [ %trip_count.1, %if.then62 ], [ %trip_count.1, %if.then70 ], [ %trip_count.1, %if.then60 ], [ %trip_count.1, %if.then88 ], [ %trip_count.1, %if.end83 ], !dbg !2793
  %bb.1 = phi %struct.basic_block_def* [ %bb.0, %if.then18 ], [ %bb.0, %if.then16 ], [ %bb.0, %if.end28 ], [ %bb.0, %if.then37 ], [ %bb.0, %if.then35 ], [ %21, %if.then62 ], [ %21, %if.then70 ], [ %21, %if.then60 ], [ %21, %if.then88 ], [ %21, %if.end83 ], !dbg !2793
  %cleanup.dest.slot.1 = phi i1 [ true, %if.then18 ], [ true, %if.then16 ], [ false, %if.end28 ], [ false, %if.then37 ], [ false, %if.then35 ], [ false, %if.then62 ], [ false, %if.then70 ], [ false, %if.then60 ], [ false, %if.then88 ], [ false, %if.end83 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !2746, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.2, metadata !2750, metadata !DIExpression()), !dbg !2793
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !2936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !2936
  br i1 %cleanup.dest.slot.1, label %for.end400, label %for.inc399

for.inc399:                                       ; preds = %cleanup394
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2739, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !2829
  br label %for.cond, !dbg !2829, !llvm.loop !2937

for.end400:                                       ; preds = %for.cond, %cleanup394
  %trip_count.3 = phi i64 [ %trip_count.2, %cleanup394 ], [ %trip_count.0, %for.cond ], !dbg !2827
  %bb.2 = phi %struct.basic_block_def* [ %bb.1, %cleanup394 ], [ %bb.0, %for.cond ], !dbg !2828
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !2746, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.3, metadata !2750, metadata !DIExpression()), !dbg !2793
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2939
  %tobool401 = icmp eq %struct._IO_FILE* %55, null, !dbg !2939
  br i1 %tobool401, label %if.end405, label %if.then402, !dbg !2941

if.then402:                                       ; preds = %for.end400
  %call403 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %55, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !2942
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2944
  %call404 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !2945
  br label %if.end405, !dbg !2946

if.end405:                                        ; preds = %for.end400, %if.then402
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2739, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !2947
  %57 = bitcast %struct.rtx_def** %head409 to i8*, !dbg !2948
  %58 = bitcast %struct.rtx_def** %tail410 to i8*, !dbg !2948
  %count459 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 8, !dbg !2949
  br label %for.cond406, !dbg !2947

for.cond406:                                      ; preds = %cleanup643, %if.end405
  %trip_count.4 = phi i64 [ %trip_count.3, %if.end405 ], [ %trip_count.6, %cleanup643 ], !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.4, metadata !2750, metadata !DIExpression()), !dbg !2793
  %59 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2954
  call void @llvm.dbg.value(metadata %struct.loop* %59, metadata !2747, metadata !DIExpression()), !dbg !2793
  %tobool407 = icmp eq %struct.loop* %59, null, !dbg !2947
  br i1 %tobool407, label %for.end654, label %for.body408, !dbg !2947

for.body408:                                      ; preds = %for.cond406
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8, !dbg !2955
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8, !dbg !2955
  call void @llvm.dbg.value(metadata i32 0, metadata !2776, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i64 0, metadata !2777, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.loop* %59, metadata !2747, metadata !DIExpression()), !dbg !2793
  %num412 = getelementptr inbounds %struct.loop, %struct.loop* %59, i64 0, i32 0, !dbg !2956
  %60 = load i32, i32* %num412, align 8, !dbg !2956
  %idxprom413 = sext i32 %60 to i64, !dbg !2958
  %arrayidx414 = getelementptr inbounds %struct.ddg*, %struct.ddg** %5, i64 %idxprom413, !dbg !2958
  %61 = load %struct.ddg*, %struct.ddg** %arrayidx414, align 8, !dbg !2958
  call void @llvm.dbg.value(metadata %struct.ddg* %61, metadata !2735, metadata !DIExpression()), !dbg !2793
  %tobool415 = icmp eq %struct.ddg* %61, null, !dbg !2959
  br i1 %tobool415, label %cleanup643, label %if.end417, !dbg !2960

if.end417:                                        ; preds = %for.body408
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2961
  %tobool418 = icmp eq %struct._IO_FILE* %62, null, !dbg !2961
  br i1 %tobool418, label %if.end429, label %if.then419, !dbg !2962

if.then419:                                       ; preds = %if.end417
  call void @llvm.dbg.value(metadata %struct.loop* %59, metadata !2747, metadata !DIExpression()), !dbg !2793
  %header421 = getelementptr inbounds %struct.loop, %struct.loop* %59, i64 0, i32 2, !dbg !2963
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %header421, align 8, !dbg !2963
  %il422 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %63, i64 0, i32 7, !dbg !2963
  %rtl423 = bitcast %union.basic_block_il_dependent* %il422 to %struct.rtl_bb_info**, !dbg !2963
  %64 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl423, align 8, !dbg !2963
  %end_424 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %64, i64 0, i32 1, !dbg !2963
  %65 = load %struct.rtx_def*, %struct.rtx_def** %end_424, align 8, !dbg !2963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %65, metadata !2778, metadata !DIExpression()), !dbg !2964
  call void @llvm.dbg.value(metadata %struct.loop* %59, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call426 = call i8* @insn_file(%struct.rtx_def* %65) #6, !dbg !2965
  %call427 = call i32 @insn_line(%struct.rtx_def* %65) #6, !dbg !2966
  %call428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %62, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 %60, i8* %call426, i32 %call427) #6, !dbg !2967
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2968
  call void @print_ddg(%struct._IO_FILE* %66, %struct.ddg* nonnull %61) #6, !dbg !2969
  %.pre = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2970
  br label %if.end429, !dbg !2971

if.end429:                                        ; preds = %if.end417, %if.then419
  %67 = phi %struct.loop* [ %59, %if.end417 ], [ %.pre, %if.then419 ], !dbg !2970
  call void @llvm.dbg.value(metadata %struct.loop* %67, metadata !2747, metadata !DIExpression()), !dbg !2793
  %header430 = getelementptr inbounds %struct.loop, %struct.loop* %67, i64 0, i32 2, !dbg !2972
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %header430, align 8, !dbg !2972
  call void @llvm.dbg.value(metadata %struct.loop* %67, metadata !2747, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head409, metadata !2767, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail410, metadata !2771, metadata !DIExpression(DW_OP_deref)), !dbg !2948
  call void @get_ebb_head_tail(%struct.basic_block_def* %68, %struct.basic_block_def* %68, %struct.rtx_def** nonnull %head409, %struct.rtx_def** nonnull %tail410) #6, !dbg !2973
  %69 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2974
  call void @llvm.dbg.value(metadata %struct.loop* %69, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call432 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %69) #6, !dbg !2975
  call void @llvm.dbg.value(metadata %struct.edge_def* %call432, metadata !2749, metadata !DIExpression()), !dbg !2793
  %70 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2976
  call void @llvm.dbg.value(metadata %struct.loop* %70, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call433 = call %struct.edge_def* @single_exit(%struct.loop* %70) #6, !dbg !2976
  %tobool434 = icmp eq %struct.edge_def* %call433, null, !dbg !2976
  br i1 %tobool434, label %cond.true435, label %cond.end437, !dbg !2976

cond.true435:                                     ; preds = %if.end429
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2976
  br label %cond.end437, !dbg !2976

cond.end437:                                      ; preds = %if.end429, %cond.true435
  %71 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2977
  call void @llvm.dbg.value(metadata %struct.loop* %71, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call439 = call %struct.edge_def* @single_exit(%struct.loop* %71) #6, !dbg !2979
  %count440 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call439, i64 0, i32 9, !dbg !2980
  %72 = load i64, i64* %count440, align 8, !dbg !2980
  %tobool441 = icmp eq i64 %72, 0, !dbg !2979
  br i1 %tobool441, label %if.end447, label %if.then442, !dbg !2981

if.then442:                                       ; preds = %cond.end437
  %count443 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call432, i64 0, i32 9, !dbg !2982
  %73 = load i64, i64* %count443, align 8, !dbg !2982
  %74 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2983
  call void @llvm.dbg.value(metadata %struct.loop* %74, metadata !2747, metadata !DIExpression()), !dbg !2793
  %call444 = call %struct.edge_def* @single_exit(%struct.loop* %74) #6, !dbg !2984
  %count445 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call444, i64 0, i32 9, !dbg !2985
  %75 = load i64, i64* %count445, align 8, !dbg !2985
  %div446 = sdiv i64 %73, %75, !dbg !2986
  call void @llvm.dbg.value(metadata i64 %div446, metadata !2750, metadata !DIExpression()), !dbg !2793
  br label %if.end447, !dbg !2987

if.end447:                                        ; preds = %cond.end437, %if.then442
  %trip_count.5 = phi i64 [ %div446, %if.then442 ], [ %trip_count.4, %cond.end437 ], !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.5, metadata !2750, metadata !DIExpression()), !dbg !2793
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2988
  %tobool448 = icmp eq %struct._IO_FILE* %76, null, !dbg !2988
  br i1 %tobool448, label %if.end471, label %if.then449, !dbg !2989

if.then449:                                       ; preds = %if.end447
  %77 = load %struct.rtx_def*, %struct.rtx_def** %tail410, align 8, !dbg !2990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %77, metadata !2771, metadata !DIExpression()), !dbg !2948
  %call450 = call i8* @insn_file(%struct.rtx_def* %77) #6, !dbg !2991
  %78 = load %struct.rtx_def*, %struct.rtx_def** %tail410, align 8, !dbg !2992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %78, metadata !2771, metadata !DIExpression()), !dbg !2948
  %call451 = call i32 @insn_line(%struct.rtx_def* %78) #6, !dbg !2993
  %call452 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %76, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8* %call450, i32 %call451) #6, !dbg !2994
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2995
  %call453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2996
  %80 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !2997
  %tobool454 = icmp ne %struct.gcov_ctr_summary* %80, null, !dbg !2997
  %81 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !2998
  %tobool456 = icmp ne i32 %81, 0, !dbg !2998
  %or.cond1 = and i1 %tobool454, %tobool456, !dbg !2999
  br i1 %or.cond1, label %if.then457, label %if.end466, !dbg !2999

if.then457:                                       ; preds = %if.then449
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3000
  %call458 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3001
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3002
  %84 = load i64, i64* %count459, align 8, !dbg !3003
  %call460 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %84) #6, !dbg !3004
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3005
  %call461 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3006
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3007
  %call462 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3008
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3009
  %88 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !3010
  %sum_max463 = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %88, i64 0, i32 4, !dbg !3011
  %89 = load i64, i64* %sum_max463, align 8, !dbg !3011
  %call464 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %89) #6, !dbg !3012
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3013
  %call465 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3014
  br label %if.end466, !dbg !3015

if.end466:                                        ; preds = %if.then457, %if.then449
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3016
  %call467 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !3017
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3018
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 1, !dbg !3019
  %93 = load i32, i32* %num_nodes, align 8, !dbg !3019
  %call468 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i32 %93) #6, !dbg !3020
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3021
  %num_loads = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 2, !dbg !3022
  %95 = load i32, i32* %num_loads, align 4, !dbg !3022
  %call469 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i32 %95) #6, !dbg !3023
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3024
  %num_stores = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 3, !dbg !3025
  %97 = load i32, i32* %num_stores, align 8, !dbg !3025
  %call470 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i32 %97) #6, !dbg !3026
  br label %if.end471, !dbg !3027

if.end471:                                        ; preds = %if.end447, %if.end466
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2773, metadata !DIExpression()), !dbg !2948
  %98 = load %struct.rtx_def*, %struct.rtx_def** %head409, align 8, !dbg !3028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %98, metadata !2767, metadata !DIExpression()), !dbg !2948
  %99 = load %struct.rtx_def*, %struct.rtx_def** %tail410, align 8, !dbg !3029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %99, metadata !2771, metadata !DIExpression()), !dbg !2948
  %call472 = call fastcc %struct.rtx_def* @doloop_register_get(%struct.rtx_def* %98, %struct.rtx_def* %99) #7, !dbg !3030
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2772, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2773, metadata !DIExpression()), !dbg !2948
  br i1 true, label %cond.true479, label %if.end471.cond.end481_crit_edge, !dbg !3031

if.end471.cond.end481_crit_edge:                  ; preds = %if.end471
  br label %cond.end481, !dbg !3031

cond.true479:                                     ; preds = %if.end471
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3031
  br label %cond.end481, !dbg !3031

cond.end481:                                      ; preds = %if.end471.cond.end481_crit_edge, %cond.true479
  %num_nodes491 = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 1, !dbg !3032
  %100 = load i32, i32* %num_nodes491, align 8, !dbg !3032
  %conv492 = sext i32 %100 to i64, !dbg !3032
  %mul493 = shl nsw i64 %conv492, 2, !dbg !3032
  %call494 = call i8* @xmalloc(i64 %mul493) #6, !dbg !3032
  %101 = bitcast i8* %call494 to i32*, !dbg !3032
  call void @llvm.dbg.value(metadata i32* %101, metadata !2736, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i32 1, metadata !2774, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32* %max_asap, metadata !2738, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  %call495 = call fastcc i32 @sms_order_nodes(%struct.ddg* nonnull %61, i32 1, i32* %101, i32* nonnull %max_asap) #7, !dbg !3033
  call void @llvm.dbg.value(metadata i32 %call495, metadata !2775, metadata !DIExpression()), !dbg !2948
  %call496 = call fastcc i32 @res_MII(%struct.ddg* nonnull %61) #7, !dbg !3034
  %cmp497 = icmp sgt i32 %call496, %call495, !dbg !3034
  br i1 %cmp497, label %cond.true499, label %cond.end502, !dbg !3034

cond.true499:                                     ; preds = %cond.end481
  %call500 = call fastcc i32 @res_MII(%struct.ddg* nonnull %61) #7, !dbg !3034
  br label %cond.end502, !dbg !3034

cond.end502:                                      ; preds = %cond.end481, %cond.true499
  %cond503 = phi i32 [ %call500, %cond.true499 ], [ %call495, %cond.end481 ], !dbg !3034
  call void @llvm.dbg.value(metadata i32 %cond503, metadata !2774, metadata !DIExpression()), !dbg !2948
  %102 = load i32, i32* %max_asap, align 4, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %102, metadata !2738, metadata !DIExpression()), !dbg !2793
  %mul504 = shl nsw i32 %cond503, 1, !dbg !3035
  %cmp505 = icmp sgt i32 %102, %mul504, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %102, metadata !2738, metadata !DIExpression()), !dbg !2793
  %cond511 = select i1 %cmp505, i32 %102, i32 %mul504, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %cond511, metadata !2737, metadata !DIExpression()), !dbg !2793
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3036
  %tobool512 = icmp eq %struct._IO_FILE* %103, null, !dbg !3036
  br i1 %tobool512, label %if.end515, label %if.then513, !dbg !3038

if.then513:                                       ; preds = %cond.end502
  %call514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %103, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0), i32 %call495, i32 %cond503, i32 %cond511) #6, !dbg !3039
  br label %if.end515, !dbg !3039

if.end515:                                        ; preds = %cond.end502, %if.then513
  call fastcc void @set_node_sched_params(%struct.ddg* nonnull %61) #7, !dbg !3040
  %call516 = call fastcc %struct.partial_schedule* @sms_schedule_by_order(%struct.ddg* nonnull %61, i32 %cond503, i32 %cond511, i32* %101) #7, !dbg !3041
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %call516, metadata !2745, metadata !DIExpression()), !dbg !2793
  %tobool517 = icmp eq %struct.partial_schedule* %call516, null, !dbg !3042
  br i1 %tobool517, label %if.end529, label %if.then518, !dbg !3044

if.then518:                                       ; preds = %if.end515
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 4, !dbg !3045
  %104 = load i32, i32* %max_cycle, align 4, !dbg !3045
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 3, !dbg !3045
  %105 = load i32, i32* %min_cycle, align 8, !dbg !3045
  %sub = sub nsw i32 %104, %105, !dbg !3045
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 0, !dbg !3045
  %106 = load i32, i32* %ii, align 8, !dbg !3045
  %sub520 = add i32 %sub, %106, !dbg !3045
  %div522 = sdiv i32 %sub520, %106, !dbg !3045
  call void @llvm.dbg.value(metadata i32 %div522, metadata !2776, metadata !DIExpression()), !dbg !2948
  %cmp523 = icmp eq i32 %div522, 0, !dbg !3047
  br i1 %cmp523, label %cond.true525, label %if.end529, !dbg !3047

cond.true525:                                     ; preds = %if.then518
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3047
  br label %if.end529, !dbg !3047

if.end529:                                        ; preds = %if.then518, %if.end515, %cond.true525
  %stage_count.0 = phi i32 [ 0, %if.end515 ], [ %div522, %if.then518 ], [ 0, %cond.true525 ], !dbg !2948
  call void @llvm.dbg.value(metadata i32 %stage_count.0, metadata !2776, metadata !DIExpression()), !dbg !2948
  %cmp530 = icmp ult i32 %stage_count.0, 2, !dbg !3048
  br i1 %cmp530, label %if.then544, label %lor.lhs.false532, !dbg !3049

lor.lhs.false532:                                 ; preds = %if.end529
  %107 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !3050
  %tobool539 = icmp ne i32 %107, 0, !dbg !3050
  %conv541 = zext i32 %stage_count.0 to i64, !dbg !3051
  %cmp542 = icmp sle i64 %trip_count.5, %conv541, !dbg !3052
  %or.cond3 = and i1 %tobool539, %cmp542, !dbg !3053
  br i1 %or.cond3, label %if.then544, label %if.else554, !dbg !3053

if.then544:                                       ; preds = %lor.lhs.false532, %if.end529
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3054
  %tobool545 = icmp eq %struct._IO_FILE* %108, null, !dbg !3054
  br i1 %tobool545, label %cleanup643, label %if.then546, !dbg !3057

if.then546:                                       ; preds = %if.then544
  %call547 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %108, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3058
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3060
  %call548 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i64 0, i64 0), i32 %stage_count.0) #6, !dbg !3061
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3062
  call void @llvm.dbg.value(metadata i64 0, metadata !2777, metadata !DIExpression()), !dbg !2948
  %call549 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 0) #6, !dbg !3063
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3064
  %call550 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3065
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3066
  %call551 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 %trip_count.5) #6, !dbg !3067
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3068
  %call552 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3069
  br label %cleanup643, !dbg !3070

if.else554:                                       ; preds = %lor.lhs.false532
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3071
  %tobool555 = icmp eq %struct._IO_FILE* %114, null, !dbg !3071
  br i1 %tobool555, label %if.end562, label %if.then556, !dbg !3073

if.then556:                                       ; preds = %if.else554
  %ii557 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 0, !dbg !3074
  %115 = load i32, i32* %ii557, align 8, !dbg !3074
  %call558 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %114, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0), i32 %115, i32 %stage_count.0) #6, !dbg !3076
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3077
  call void @print_partial_schedule(%struct.partial_schedule* %call516, %struct._IO_FILE* %116) #7, !dbg !3078
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3079
  %closing_branch = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 6, !dbg !3080
  %118 = load %struct.ddg_node*, %struct.ddg_node** %closing_branch, align 8, !dbg !3080
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %118, i64 0, i32 0, !dbg !3081
  %119 = load i32, i32* %cuid, align 8, !dbg !3081
  %min_cycle559 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 3, !dbg !3082
  %120 = load i32, i32* %min_cycle559, align 8, !dbg !3082
  %sub560 = add nsw i32 %120, -1, !dbg !3083
  %call561 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0), i32 %119, i32 %sub560) #6, !dbg !3084
  br label %if.end562, !dbg !3085

if.end562:                                        ; preds = %if.else554, %if.then556
  call fastcc void @normalize_sched_times(%struct.partial_schedule* %call516) #7, !dbg !3086
  %min_cycle563 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call516, i64 0, i32 3, !dbg !3087
  %121 = load i32, i32* %min_cycle563, align 8, !dbg !3087
  call fastcc void @rotate_partial_schedule(%struct.partial_schedule* %call516, i32 %121) #7, !dbg !3088
  call fastcc void @set_columns_for_ps(%struct.partial_schedule* %call516) #7, !dbg !3089
  %122 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3090
  call void @llvm.dbg.value(metadata %struct.loop* %122, metadata !2747, metadata !DIExpression()), !dbg !2793
  call fastcc void @canon_loop(%struct.loop* %122) #7, !dbg !3091
  %closing_branch631 = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 6, !dbg !3092
  %123 = load %struct.ddg_node*, %struct.ddg_node** %closing_branch631, align 8, !dbg !3092
  %first_note = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %123, i64 0, i32 2, !dbg !3093
  %124 = load %struct.rtx_def*, %struct.rtx_def** %first_note, align 8, !dbg !3093
  call fastcc void @permute_partial_schedule(%struct.partial_schedule* %call516, %struct.rtx_def* %124) #7, !dbg !3094
  %125 = load i32, i32* @flag_resched_modulo_sched, align 4, !dbg !3095
  %tobool632 = icmp eq i32 %125, 0, !dbg !3095
  br i1 %tobool632, label %if.then633, label %if.end635, !dbg !3097

if.then633:                                       ; preds = %if.end562
  %bb634 = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 0, !dbg !3098
  %126 = load %struct.basic_block_def*, %struct.basic_block_def** %bb634, align 8, !dbg !3098
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %126, i64 0, i32 13, !dbg !3099
  %127 = load i32, i32* %flags, align 8, !dbg !3100
  %or = or i32 %127, 16, !dbg !3100
  store i32 %or, i32* %flags, align 8, !dbg !3100
  br label %if.end635, !dbg !3101

if.end635:                                        ; preds = %if.end562, %if.then633
  %bb636 = getelementptr inbounds %struct.ddg, %struct.ddg* %61, i64 0, i32 0, !dbg !3102
  %128 = load %struct.basic_block_def*, %struct.basic_block_def** %bb636, align 8, !dbg !3102
  call void @df_set_bb_dirty(%struct.basic_block_def* %128) #6, !dbg !3103
  %call637 = call fastcc %struct.undo_replace_buff_elem* @generate_reg_moves(%struct.partial_schedule* %call516, i8 zeroext 1) #7, !dbg !3104
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %call637, metadata !2784, metadata !DIExpression()), !dbg !3105
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3106
  %tobool638 = icmp eq %struct._IO_FILE* %129, null, !dbg !3106
  br i1 %tobool638, label %if.end641, label %if.then639, !dbg !3108

if.then639:                                       ; preds = %if.end635
  %130 = load i32, i32* %num_nodes491, align 8, !dbg !3109
  call fastcc void @print_node_sched_params(%struct._IO_FILE* nonnull %129, i32 %130, %struct.ddg* nonnull %61) #7, !dbg !3110
  br label %if.end641, !dbg !3110

if.end641:                                        ; preds = %if.end635, %if.then639
  %131 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3111
  call void @llvm.dbg.value(metadata %struct.loop* %131, metadata !2747, metadata !DIExpression()), !dbg !2793
  call fastcc void @generate_prolog_epilog(%struct.partial_schedule* %call516, %struct.loop* %131, %struct.rtx_def* null, %struct.rtx_def* null) #7, !dbg !3112
  call fastcc void @free_undo_replace_buff(%struct.undo_replace_buff_elem* %call637) #7, !dbg !3113
  call fastcc void @free_partial_schedule(%struct.partial_schedule* %call516) #7, !dbg !3114
  %132 = load i8*, i8** bitcast (%struct.node_sched_params** @node_sched_params to i8**), align 8, !dbg !3115
  call void @free(i8* %132) #6, !dbg !3116
  call void @free(i8* %call494) #6, !dbg !3117
  call void @free_ddg(%struct.ddg* nonnull %61) #6, !dbg !3118
  br label %cleanup643, !dbg !3119

cleanup643:                                       ; preds = %if.then544, %for.body408, %if.then546, %if.end641
  %trip_count.6 = phi i64 [ %trip_count.5, %if.end641 ], [ %trip_count.4, %for.body408 ], [ %trip_count.5, %if.then546 ], [ %trip_count.5, %if.then544 ], !dbg !2793
  call void @llvm.dbg.value(metadata i64 %trip_count.6, metadata !2750, metadata !DIExpression()), !dbg !2793
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8, !dbg !3119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8, !dbg !3119
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2739, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2793
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !2954
  br label %for.cond406, !dbg !2954, !llvm.loop !3120

for.end654:                                       ; preds = %for.cond406
  call void @free(i8* %call5) #6, !dbg !3122
  call void @haifa_sched_finish() #6, !dbg !3123
  call void @loop_optimizer_finalize() #6, !dbg !3124
  br label %cleanup655, !dbg !3125

cleanup655:                                       ; preds = %for.end654, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3125
  ret void, !dbg !3125
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #1

declare dso_local void @cfg_layout_finalize() local_unnamed_addr #1

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3126 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3127
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3127
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3127
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3127
  br i1 %tobool, label %return, label %if.end, !dbg !3129

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3130
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3130
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3130
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3130

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3130
  br label %cond.end, !dbg !3130

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3130
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3130
  br label %return, !dbg !3131

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3132
  ret i32 %retval.0, !dbg !3133
}

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_sched_infos() unnamed_addr #4 !dbg !3134 {
entry:
  %call = tail call i8* @memcpy(i8* bitcast (%struct.common_sched_info_def* @sms_common_sched_info to i8*), i8* bitcast (%struct.common_sched_info_def* @haifa_common_sched_info to i8*), i64 40) #6, !dbg !3135
  store i32 3, i32* getelementptr inbounds (%struct.common_sched_info_def, %struct.common_sched_info_def* @sms_common_sched_info, i64 0, i32 4), align 8, !dbg !3136
  store %struct.common_sched_info_def* @sms_common_sched_info, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !3137
  store %struct.sched_deps_info_def* @sms_sched_deps_info, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3138
  store %struct.haifa_sched_info* @sms_sched_info, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3139
  ret void, !dbg !3140
}

declare dso_local void @haifa_sched_init() local_unnamed_addr #1

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !3141 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3147, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3148, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata i32 0, metadata !3149, metadata !DIExpression()), !dbg !3153
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3154
  store i32 0, i32* %idx, align 8, !dbg !3155
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3156
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3156
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3156
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3156
  br i1 %tobool, label %if.then, label %if.end, !dbg !3158

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3159
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3161
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3162
  br label %cleanup, !dbg !3163

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !3164
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !3164
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3165
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3166
  call void @llvm.dbg.value(metadata i32 1, metadata !3152, metadata !DIExpression()), !dbg !3153
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3167
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !3167
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !3167
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !3167
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !3167
  br label %while.cond79, !dbg !3170

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !3172
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !3150, metadata !DIExpression()), !dbg !3153
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !3175
  %13 = load i32, i32* %num81, align 8, !dbg !3175
  %cmp82 = icmp slt i32 %13, 1, !dbg !3176
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !3177

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3178
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !3178
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !3178

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !3178
  br label %cond.end90, !dbg !3178

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !3178
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !3150, metadata !DIExpression()), !dbg !3153
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !3178
  %15 = load i32, i32* %num92, align 8, !dbg !3178
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #7, !dbg !3178
  br label %if.end94, !dbg !3178

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !3150, metadata !DIExpression()), !dbg !3153
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !3179
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !3179
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !3181
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !3182

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !3183

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !3150, metadata !DIExpression()), !dbg !3153
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !3185
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !3185
  br label %if.end111, !dbg !3186

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !3187
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3150, metadata !DIExpression()), !dbg !3153
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !3188
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !3189

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !3150, metadata !DIExpression()), !dbg !3153
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !3190
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !3190
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !3191
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !3192
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !3150, metadata !DIExpression()), !dbg !3153
  br i1 %23, label %while.body104, label %while.end106, !dbg !3183

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #7, !dbg !3193
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !3150, metadata !DIExpression()), !dbg !3153
  br label %while.cond100, !dbg !3183, !llvm.loop !3194

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !3196
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !3198

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !3150, metadata !DIExpression()), !dbg !3153
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !3199
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !3199
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !3170, !llvm.loop !3200

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !3202
  br label %cleanup, !dbg !3203

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !3203
}

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #1

declare dso_local i8* @insn_file(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @insn_line(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_canon_p(%struct.loop* %loop) unnamed_addr #4 !dbg !3204 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3208, metadata !DIExpression()), !dbg !3219
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3220
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3220
  %tobool = icmp eq %struct.loop* %0, null, !dbg !3222
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3223

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #7, !dbg !3224
  %tobool1 = icmp eq %struct.loop* %call, null, !dbg !3224
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !3225

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3226
  %tobool2 = icmp eq %struct._IO_FILE* %1, null, !dbg !3226
  br i1 %tobool2, label %return, label %if.then3, !dbg !3229

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !3230
  br label %return, !dbg !3230

if.end5:                                          ; preds = %lor.lhs.false
  %call6 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3231
  %tobool7 = icmp eq %struct.edge_def* %call6, null, !dbg !3231
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !3232

if.then8:                                         ; preds = %if.end5
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3233
  %tobool9 = icmp eq %struct._IO_FILE* %2, null, !dbg !3233
  br i1 %tobool9, label %return, label %if.then10, !dbg !3234

if.then10:                                        ; preds = %if.then8
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3235
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3235
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 7, !dbg !3235
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3235
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3235
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !3235
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3209, metadata !DIExpression()), !dbg !3236
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !3237
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3238
  %call12 = tail call i8* @insn_file(%struct.rtx_def* %5) #6, !dbg !3239
  %call13 = tail call i32 @insn_line(%struct.rtx_def* %5) #6, !dbg !3240
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8* %call12, i32 %call13) #6, !dbg !3241
  br label %return, !dbg !3242

if.end16:                                         ; preds = %if.end5
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3243
  %7 = load i32, i32* %num_nodes, align 4, !dbg !3243
  %cmp = icmp ult i32 %7, 3, !dbg !3243
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true34, !dbg !3243

land.lhs.true:                                    ; preds = %if.end16
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3243
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3243
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 0, !dbg !3243
  %9 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3243
  %tobool17 = icmp eq %struct.VEC_edge_gc* %9, null, !dbg !3243
  br i1 %tobool17, label %cond.end, label %cond.true, !dbg !3243

cond.true:                                        ; preds = %land.lhs.true
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !3243
  br label %cond.end, !dbg !3243

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true ], !dbg !3243
  %call20 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3243
  %cmp21 = icmp eq i32 %call20, 1, !dbg !3243
  br i1 %cmp21, label %land.lhs.true22, label %land.lhs.true34, !dbg !3243

land.lhs.true22:                                  ; preds = %cond.end
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3243
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 1, !dbg !3243
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3243
  %tobool24 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !3243
  br i1 %tobool24, label %cond.end30, label %cond.true25, !dbg !3243

cond.true25:                                      ; preds = %land.lhs.true22
  %base28 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !3243
  br label %cond.end30, !dbg !3243

cond.end30:                                       ; preds = %land.lhs.true22, %cond.true25
  %cond31 = phi %struct.VEC_edge_base* [ %base28, %cond.true25 ], [ null, %land.lhs.true22 ], !dbg !3243
  %call32 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond31) #7, !dbg !3243
  %cmp33 = icmp eq i32 %call32, 1, !dbg !3243
  br i1 %cmp33, label %return, label %land.lhs.true34, !dbg !3244

land.lhs.true34:                                  ; preds = %cond.end30, %cond.end, %if.end16
  %call35 = tail call fastcc zeroext i8 @loop_single_full_bb_p(%struct.loop* %loop) #7, !dbg !3245
  %tobool36 = icmp eq i8 %call35, 0, !dbg !3245
  br i1 %tobool36, label %if.then37, label %return, !dbg !3246

if.then37:                                        ; preds = %land.lhs.true34
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3247
  %tobool38 = icmp eq %struct._IO_FILE* %12, null, !dbg !3247
  br i1 %tobool38, label %return, label %if.then39, !dbg !3248

if.then39:                                        ; preds = %if.then37
  %header41 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3249
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %header41, align 8, !dbg !3249
  %il42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 7, !dbg !3249
  %rtl43 = bitcast %union.basic_block_il_dependent* %il42 to %struct.rtl_bb_info**, !dbg !3249
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl43, align 8, !dbg !3249
  %end_44 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !3249
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_44, align 8, !dbg !3249
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !3214, metadata !DIExpression()), !dbg !3250
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !3251
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3252
  %call46 = tail call i8* @insn_file(%struct.rtx_def* %15) #6, !dbg !3253
  %call47 = tail call i32 @insn_line(%struct.rtx_def* %15) #6, !dbg !3254
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8* %call46, i32 %call47) #6, !dbg !3255
  br label %return, !dbg !3256

return:                                           ; preds = %if.then37, %land.lhs.true34, %if.then8, %if.then, %cond.end30, %if.then39, %if.then10, %if.then3
  %retval.0 = phi i8 [ 0, %if.then3 ], [ 0, %if.then ], [ 0, %if.then10 ], [ 0, %if.then8 ], [ 0, %if.then39 ], [ 0, %if.then37 ], [ 1, %land.lhs.true34 ], [ 1, %cond.end30 ], !dbg !3219
  ret i8 %retval.0, !dbg !3257
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_single_full_bb_p(%struct.loop* %loop) unnamed_addr #4 !dbg !3258 {
entry:
  %head = alloca %struct.rtx_def*, align 8
  %tail = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3260, metadata !DIExpression()), !dbg !3270
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3271
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !3262, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 0, metadata !3261, metadata !DIExpression()), !dbg !3270
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3272
  %0 = bitcast %struct.rtx_def** %head to i8*, !dbg !3273
  %1 = bitcast %struct.rtx_def** %tail to i8*, !dbg !3273
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3274
  %2 = bitcast %struct.rtx_def** %head to i64*, !dbg !3276
  %3 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3279
  br label %for.cond, !dbg !3282

for.cond:                                         ; preds = %for.inc47, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc47 ], [ 0, %entry ], !dbg !3283
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3261, metadata !DIExpression()), !dbg !3270
  %4 = load i32, i32* %num_nodes, align 4, !dbg !3284
  %5 = zext i32 %4 to i64, !dbg !3285
  %cmp = icmp ult i64 %indvars.iv, %5, !dbg !3285
  br i1 %cmp, label %for.body, label %for.end48, !dbg !3286

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3287
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3287
  call void @llvm.dbg.value(metadata i8 1, metadata !3269, metadata !DIExpression()), !dbg !3273
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !3288
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3288
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3289
  %cmp1 = icmp eq %struct.basic_block_def* %6, %7, !dbg !3290
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !3291

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def** %head, metadata !3264, metadata !DIExpression(DW_OP_deref)), !dbg !3273
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tail, metadata !3268, metadata !DIExpression(DW_OP_deref)), !dbg !3273
  call void @get_ebb_head_tail(%struct.basic_block_def* %6, %struct.basic_block_def* %6, %struct.rtx_def** nonnull %head, %struct.rtx_def** nonnull %tail) #6, !dbg !3292
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %head, align 8, !dbg !3293
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %tail, align 8, !dbg !3294
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3276
  %rt_rtx.phi.trans.insert = bitcast %union.rtunion_def* %.phi.trans.insert to %struct.rtx_def**, !dbg !3276
  %.pre2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.phi.trans.insert, align 8, !dbg !3294
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre, i64 0, i32 0, !dbg !3295
  br label %for.cond6, !dbg !3295

for.cond6:                                        ; preds = %for.inc, %if.end
  %9 = phi %struct.rtx_def* [ %22, %for.inc ], [ %.pre, %if.end ]
  %10 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %11 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %12 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %13 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %14 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %15 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %16 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %17 = phi i32* [ %23, %for.inc ], [ %8, %if.end ]
  %18 = phi %struct.rtx_def* [ %22, %for.inc ], [ %.pre, %if.end ], !dbg !3293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !3264, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.pre1, metadata !3268, metadata !DIExpression()), !dbg !3273
  %cmp8 = icmp eq %struct.rtx_def* %18, %.pre2, !dbg !3296
  br i1 %cmp8, label %for.end, label %for.body9, !dbg !3297

for.body9:                                        ; preds = %for.cond6
  %bf.load = load i32, i32* %17, align 8, !dbg !3298
  %bf.clear = and i32 %bf.load, 65535, !dbg !3298
  %cmp10 = icmp eq i32 %bf.clear, 13, !dbg !3298
  br i1 %cmp10, label %for.inc, label %lor.lhs.false, !dbg !3301

lor.lhs.false:                                    ; preds = %for.body9
  %bf.load11 = load i32, i32* %16, align 8, !dbg !3302
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !3302
  %cmp13 = icmp eq i32 %bf.clear12, 12, !dbg !3302
  br i1 %cmp13, label %for.inc, label %lor.lhs.false14, !dbg !3303

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %bf.load15 = load i32, i32* %15, align 8, !dbg !3304
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3304
  %cmp17 = icmp eq i32 %bf.clear16, 8, !dbg !3304
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !3304

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %bf.load19 = load i32, i32* %14, align 8, !dbg !3304
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !3304
  %cmp21 = icmp eq i32 %bf.clear20, 7, !dbg !3304
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false22, !dbg !3304

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %bf.load23 = load i32, i32* %13, align 8, !dbg !3304
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3304
  %cmp25 = icmp eq i32 %bf.clear24, 9, !dbg !3304
  br i1 %cmp25, label %land.lhs.true, label %lor.lhs.false26, !dbg !3304

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %bf.load27 = load i32, i32* %12, align 8, !dbg !3304
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3304
  %cmp29 = icmp eq i32 %bf.clear28, 10, !dbg !3304
  br i1 %cmp29, label %land.lhs.true, label %for.end, !dbg !3305

land.lhs.true:                                    ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false14
  %bf.load30 = load i32, i32* %11, align 8, !dbg !3306
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !3306
  %cmp32 = icmp eq i32 %bf.clear31, 7, !dbg !3306
  br i1 %cmp32, label %for.inc, label %lor.lhs.false33, !dbg !3307

lor.lhs.false33:                                  ; preds = %land.lhs.true
  %bf.load34 = load i32, i32* %10, align 8, !dbg !3308
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !3308
  %cmp36 = icmp eq i32 %bf.clear35, 9, !dbg !3308
  br i1 %cmp36, label %for.inc, label %for.end, !dbg !3309

for.inc:                                          ; preds = %for.body9, %lor.lhs.false, %land.lhs.true, %lor.lhs.false33
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !3264, metadata !DIExpression()), !dbg !3273
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3310
  %20 = bitcast %union.rtunion_def* %19 to i64*, !dbg !3310
  %21 = load i64, i64* %20, align 8, !dbg !3310
  store i64 %21, i64* %2, align 8, !dbg !3311
  %22 = inttoptr i64 %21 to %struct.rtx_def*, !dbg !3312
  %23 = inttoptr i64 %21 to i32*, !dbg !3312
  br label %for.cond6, !dbg !3312, !llvm.loop !3313

for.end:                                          ; preds = %for.cond6, %lor.lhs.false26, %lor.lhs.false33
  %empty_bb.0 = phi i1 [ true, %for.cond6 ], [ false, %lor.lhs.false33 ], [ false, %lor.lhs.false26 ]
  br i1 %empty_bb.0, label %cleanup, label %if.then43, !dbg !3315

if.then43:                                        ; preds = %for.end
  call void @free(i8* %3) #6, !dbg !3316
  br label %cleanup, !dbg !3317

cleanup:                                          ; preds = %for.end, %for.body, %if.then43
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then43 ], [ 4, %for.body ], [ 0, %for.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3318
  switch i32 %cleanup.dest.slot.0, label %cleanup49.loopexit [
    i32 0, label %for.inc47
    i32 4, label %for.inc47
  ]

for.inc47:                                        ; preds = %cleanup, %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3319
  br label %for.cond, !dbg !3320, !llvm.loop !3321

for.end48:                                        ; preds = %for.cond
  call void @free(i8* %3) #6, !dbg !3323
  br label %cleanup49, !dbg !3324

cleanup49.loopexit:                               ; preds = %cleanup
  br label %cleanup49, !dbg !3325

cleanup49:                                        ; preds = %cleanup49.loopexit, %for.end48
  %retval.2 = phi i8 [ 1, %for.end48 ], [ 0, %cleanup49.loopexit ]
  ret i8 %retval.2, !dbg !3325
}

declare dso_local void @get_ebb_head_tail(%struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #1

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @doloop_register_get(%struct.rtx_def* %head, %struct.rtx_def* %tail) unnamed_addr #4 !dbg !3326 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3330, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !3331, metadata !DIExpression()), !dbg !3332
  ret %struct.rtx_def* undef, !dbg !3333
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @print_rtl_single(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.ddg* @create_ddg(%struct.basic_block_def*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3334 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3338, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3339, metadata !DIExpression()), !dbg !3341
  %0 = bitcast i32* %anum to i8*, !dbg !3342
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3342
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3341
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3341
  br label %while.cond, !dbg !3343

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3344
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3344
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3344

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3344
  br label %cond.end, !dbg !3344

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3344
  %2 = load i32, i32* %idx, align 8, !dbg !3344
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3340, metadata !DIExpression(DW_OP_deref)), !dbg !3341
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3344
  %tobool2 = icmp eq i32 %call, 0, !dbg !3343
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3343

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3345
  %inc = add i32 %3, 1, !dbg !3345
  store i32 %inc, i32* %idx, align 8, !dbg !3345
  %4 = load i32, i32* %anum, align 4, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %4, metadata !3340, metadata !DIExpression()), !dbg !3341
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3348
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3349
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3350
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3352, !llvm.loop !3353

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3355
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3356
  br label %cleanup, !dbg !3357

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3357

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3357
  ret void, !dbg !3357
}

declare dso_local void @print_ddg(%struct._IO_FILE*, %struct.ddg*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @const_iteration_count(%struct.rtx_def* %count_reg, %struct.basic_block_def* %pre_header, i64* %count) unnamed_addr #4 !dbg !3358 {
entry:
  unreachable
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sms_order_nodes(%struct.ddg* %g, i32 %mii, i32* %node_order, i32* %pmax_asap) unnamed_addr #4 !dbg !3374 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !3378, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 1, metadata !3379, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32* %node_order, metadata !3380, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32* %pmax_asap, metadata !3381, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 0, metadata !3383, metadata !DIExpression()), !dbg !3406
  %call = tail call %struct.ddg_all_sccs* @create_ddg_all_sccs(%struct.ddg* %g) #6, !dbg !3407
  call void @llvm.dbg.value(metadata %struct.ddg_all_sccs* %call, metadata !3384, metadata !DIExpression()), !dbg !3406
  %call1 = tail call fastcc %struct.node_order_params* @calculate_order_params(%struct.ddg* %g, i32 1, i32* %pmax_asap) #7, !dbg !3408
  call void @llvm.dbg.value(metadata %struct.node_order_params* %call1, metadata !3401, metadata !DIExpression()), !dbg !3406
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3409
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !3409
  br i1 %tobool, label %if.end, label %if.then, !dbg !3411

if.then:                                          ; preds = %entry
  tail call void @print_sccs(%struct._IO_FILE* nonnull %0, %struct.ddg_all_sccs* %call, %struct.ddg* %g) #6, !dbg !3412
  br label %if.end, !dbg !3412

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @order_nodes_of_sccs(%struct.ddg_all_sccs* %call, i32* %node_order) #7, !dbg !3413
  %num_sccs = getelementptr inbounds %struct.ddg_all_sccs, %struct.ddg_all_sccs* %call, i64 0, i32 1, !dbg !3414
  %1 = load i32, i32* %num_sccs, align 8, !dbg !3414
  %cmp = icmp sgt i32 %1, 0, !dbg !3416
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !3417

if.then2:                                         ; preds = %if.end
  %sccs3 = getelementptr inbounds %struct.ddg_all_sccs, %struct.ddg_all_sccs* %call, i64 0, i32 0, !dbg !3418
  %2 = load %struct.ddg_scc**, %struct.ddg_scc*** %sccs3, align 8, !dbg !3418
  %3 = load %struct.ddg_scc*, %struct.ddg_scc** %2, align 8, !dbg !3419
  %recurrence_length = getelementptr inbounds %struct.ddg_scc, %struct.ddg_scc* %3, i64 0, i32 3, !dbg !3420
  %4 = load i32, i32* %recurrence_length, align 4, !dbg !3420
  call void @llvm.dbg.value(metadata i32 %4, metadata !3383, metadata !DIExpression()), !dbg !3406
  br label %if.end4, !dbg !3421

if.end4:                                          ; preds = %if.then2, %if.end
  %rec_mii.0 = phi i32 [ %4, %if.then2 ], [ 0, %if.end ], !dbg !3406
  call void @llvm.dbg.value(metadata i32 %rec_mii.0, metadata !3383, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 0, metadata !3382, metadata !DIExpression()), !dbg !3406
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !3422
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !3423
  br label %for.cond, !dbg !3424

for.cond:                                         ; preds = %for.body, %if.end4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end4 ], !dbg !3425
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3382, metadata !DIExpression()), !dbg !3406
  %5 = load i32, i32* %num_nodes, align 8, !dbg !3426
  %6 = sext i32 %5 to i64, !dbg !3427
  %cmp5 = icmp slt i64 %indvars.iv, %6, !dbg !3427
  br i1 %cmp5, label %for.body, label %for.end, !dbg !3428

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !3429
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !3402, metadata !DIExpression()), !dbg !3423
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %7, i64 %indvars.iv, i32 7, i32 0, !dbg !3430
  %8 = bitcast i8** %info to %struct.node_order_params**, !dbg !3430
  %9 = load %struct.node_order_params*, %struct.node_order_params** %8, align 8, !dbg !3430
  %asap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %9, i64 0, i32 0, !dbg !3430
  %10 = load i32, i32* %asap, align 4, !dbg !3430
  %aux7 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %7, i64 %indvars.iv, i32 7, !dbg !3431
  %count = bitcast %union.anon.1* %aux7 to i32*, !dbg !3432
  store i32 %10, i32* %count, align 8, !dbg !3433
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3434
  call void @llvm.dbg.value(metadata i32 undef, metadata !3382, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3406
  br label %for.cond, !dbg !3435, !llvm.loop !3436

for.end:                                          ; preds = %for.cond
  %11 = bitcast %struct.node_order_params* %call1 to i8*, !dbg !3438
  tail call void @free(i8* %11) #6, !dbg !3439
  tail call void @free_ddg_all_sccs(%struct.ddg_all_sccs* %call) #6, !dbg !3440
  %12 = load i32, i32* %num_nodes, align 8, !dbg !3441
  tail call fastcc void @check_nodes_order(i32* %node_order, i32 %12) #7, !dbg !3442
  ret i32 %rec_mii.0, !dbg !3443
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @res_MII(%struct.ddg* %g) unnamed_addr #4 !dbg !3444 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !3448, metadata !DIExpression()), !dbg !3449
  %0 = load i32 (%struct.ddg*)*, i32 (%struct.ddg*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 36), align 8, !dbg !3450
  %tobool = icmp eq i32 (%struct.ddg*)* %0, null, !dbg !3452
  br i1 %tobool, label %if.end, label %if.then, !dbg !3453

if.then:                                          ; preds = %entry
  %call = tail call i32 %0(%struct.ddg* %g) #6, !dbg !3454
  br label %return, !dbg !3455

if.end:                                           ; preds = %entry
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !3456
  %1 = load i32, i32* %num_nodes, align 8, !dbg !3456
  %num_debug = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 4, !dbg !3457
  %2 = load i32, i32* %num_debug, align 4, !dbg !3457
  %sub = sub nsw i32 %1, %2, !dbg !3458
  %3 = load i32, i32* @issue_rate, align 4, !dbg !3459
  %div = sdiv i32 %sub, %3, !dbg !3460
  br label %return, !dbg !3461

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %div, %if.end ], !dbg !3449
  ret i32 %retval.0, !dbg !3462
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_node_sched_params(%struct.ddg* %g) unnamed_addr #4 !dbg !3463 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !3467, metadata !DIExpression()), !dbg !3469
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !3470
  %0 = load i32, i32* %num_nodes, align 8, !dbg !3470
  %conv = sext i32 %0 to i64, !dbg !3471
  %call = tail call i8* @xcalloc(i64 %conv, i64 32) #6, !dbg !3472
  store i8* %call, i8** bitcast (%struct.node_sched_params** @node_sched_params to i8**), align 8, !dbg !3473
  call void @llvm.dbg.value(metadata i32 0, metadata !3468, metadata !DIExpression()), !dbg !3469
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !3474
  br label %for.cond, !dbg !3478

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !3479
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3468, metadata !DIExpression()), !dbg !3469
  %1 = load i32, i32* %num_nodes, align 8, !dbg !3480
  %2 = sext i32 %1 to i64, !dbg !3481
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !3481
  br i1 %cmp, label %for.body, label %for.end, !dbg !3482

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !3483
  %aux = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 %indvars.iv, i32 7, !dbg !3484
  %count = bitcast %union.anon.1* %aux to i32*, !dbg !3485
  %4 = load i32, i32* %count, align 8, !dbg !3485
  %5 = load %struct.node_sched_params*, %struct.node_sched_params** @node_sched_params, align 8, !dbg !3486
  %asap = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %5, i64 %indvars.iv, i32 0, !dbg !3487
  store i32 %4, i32* %asap, align 8, !dbg !3488
  %6 = load %struct.node_sched_params*, %struct.node_sched_params** @node_sched_params, align 8, !dbg !3489
  %arrayidx6 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 %indvars.iv, !dbg !3489
  %7 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !3490
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %7, i64 %indvars.iv, i32 7, i32 0, !dbg !3491
  %8 = bitcast i8** %info to %struct.node_sched_params**, !dbg !3492
  store %struct.node_sched_params* %arrayidx6, %struct.node_sched_params** %8, align 8, !dbg !3492
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3493
  call void @llvm.dbg.value(metadata i32 undef, metadata !3468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3469
  br label %for.cond, !dbg !3494, !llvm.loop !3495

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3497
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.partial_schedule* @sms_schedule_by_order(%struct.ddg* %g, i32 %mii, i32 %maxii, i32* %nodes_order) unnamed_addr #4 !dbg !3498 {
entry:
  %num_splits = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %step = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !3502, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %mii, metadata !3503, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %maxii, metadata !3504, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32* %nodes_order, metadata !3505, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %mii, metadata !3506, metadata !DIExpression()), !dbg !3538
  %0 = bitcast i32* %num_splits to i8*, !dbg !3539
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3539
  call void @llvm.dbg.value(metadata i32 0, metadata !3510, metadata !DIExpression()), !dbg !3538
  store i32 0, i32* %num_splits, align 4, !dbg !3540
  call void @llvm.dbg.value(metadata i32 1, metadata !3511, metadata !DIExpression()), !dbg !3538
  %num_nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !3541
  %1 = load i32, i32* %num_nodes1, align 8, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %1, metadata !3512, metadata !DIExpression()), !dbg !3538
  %2 = bitcast i32* %start to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3542
  %3 = bitcast i32* %end to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3542
  %4 = bitcast i32* %step to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !3542
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !3516, metadata !DIExpression()), !dbg !3538
  %call2 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !3544
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call2, metadata !3517, metadata !DIExpression()), !dbg !3538
  %call3 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !3545
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call3, metadata !3518, metadata !DIExpression()), !dbg !3538
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !3546
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !3519, metadata !DIExpression()), !dbg !3538
  %5 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3547
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %5, i64 40, i32 1, !dbg !3547
  %6 = load i32, i32* %value, align 8, !dbg !3547
  %call5 = tail call fastcc %struct.partial_schedule* @create_partial_schedule(i32 %mii, %struct.ddg* %g, i32 %6) #7, !dbg !3548
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %call5, metadata !3520, metadata !DIExpression()), !dbg !3538
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call4) #6, !dbg !3549
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !3550
  %g10 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call5, i64 0, i32 5, !dbg !3551
  %nodes46 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !3552
  %ii102 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %call5, i64 0, i32 0, !dbg !3554
  br label %while.cond, !dbg !3556

while.cond:                                       ; preds = %for.end120, %entry
  %flush_and_start_over.0 = phi i32 [ 1, %entry ], [ %flush_and_start_over.5, %for.end120 ], !dbg !3538
  %ii.0 = phi i32 [ %mii, %entry ], [ %ii.4, %for.end120 ], !dbg !3557
  call void @llvm.dbg.value(metadata i32 %ii.0, metadata !3506, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.0, metadata !3511, metadata !DIExpression()), !dbg !3538
  %tobool = icmp ne i32 %flush_and_start_over.0, 0, !dbg !3558
  %cmp = icmp slt i32 %ii.0, %maxii, !dbg !3559
  %spec.select = and i1 %cmp, %tobool, !dbg !3560
  br i1 %spec.select, label %while.body, label %while.end, !dbg !3556

while.body:                                       ; preds = %while.cond
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3561
  %tobool6 = icmp eq %struct._IO_FILE* %7, null, !dbg !3561
  br i1 %tobool6, label %if.end, label %if.then, !dbg !3563

if.then:                                          ; preds = %while.body
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 %ii.0) #6, !dbg !3564
  br label %if.end, !dbg !3564

if.end:                                           ; preds = %while.body, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !3511, metadata !DIExpression()), !dbg !3538
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !3565
  call void @llvm.dbg.value(metadata i32 0, metadata !3507, metadata !DIExpression()), !dbg !3538
  br label %for.cond, !dbg !3566

for.cond:                                         ; preds = %for.inc118, %if.end
  %flush_and_start_over.1 = phi i32 [ 0, %if.end ], [ %flush_and_start_over.4, %for.inc118 ], !dbg !3567
  %i.0 = phi i32 [ 0, %if.end ], [ %inc119, %for.inc118 ], !dbg !3568
  %ii.1 = phi i32 [ %ii.0, %if.end ], [ %ii.3, %for.inc118 ], !dbg !3557
  call void @llvm.dbg.value(metadata i32 %ii.1, metadata !3506, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3507, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.1, metadata !3511, metadata !DIExpression()), !dbg !3538
  %cmp8 = icmp slt i32 %i.0, %1, !dbg !3569
  br i1 %cmp8, label %for.body, label %for.end120, !dbg !3570

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !3571
  %arrayidx9 = getelementptr inbounds i32, i32* %nodes_order, i64 %idxprom, !dbg !3571
  %8 = load i32, i32* %arrayidx9, align 4, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %8, metadata !3521, metadata !DIExpression()), !dbg !3551
  %9 = load %struct.ddg*, %struct.ddg** %g10, align 8, !dbg !3572
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %9, i64 0, i32 5, !dbg !3573
  %10 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !3573
  %idxprom11 = sext i32 %8 to i64, !dbg !3574
  %arrayidx12 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %10, i64 %idxprom11, !dbg !3574
  call void @llvm.dbg.value(metadata %struct.ddg_node* %arrayidx12, metadata !3526, metadata !DIExpression()), !dbg !3551
  %insn13 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %10, i64 %idxprom11, i32 1, !dbg !3575
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn13, align 8, !dbg !3575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !3527, metadata !DIExpression()), !dbg !3551
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !3576
  %bf.load = load i32, i32* %12, align 8, !dbg !3576
  %bf.clear = and i32 %bf.load, 65535, !dbg !3576
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !3576
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false, !dbg !3576

lor.lhs.false:                                    ; preds = %for.body
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !3576
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !3576

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i32 %bf.clear, 9, !dbg !3576
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false22, !dbg !3576

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !3576
  br i1 %cmp25, label %land.lhs.true, label %if.then29, !dbg !3576

land.lhs.true:                                    ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %for.body
  %cmp28 = icmp eq i32 %bf.clear, 7, !dbg !3576
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !3578

if.then29:                                        ; preds = %land.lhs.true, %lor.lhs.false22
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call4, i32 %8) #7, !dbg !3579
  br label %cleanup113, !dbg !3581

if.end30:                                         ; preds = %land.lhs.true
  %cmp33 = icmp eq i32 %bf.clear, 9, !dbg !3582
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !3584

if.then34:                                        ; preds = %if.end30
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call4, i32 %8) #7, !dbg !3585
  br label %cleanup113, !dbg !3587

if.end35:                                         ; preds = %if.end30
  %div = lshr i32 %8, 6, !dbg !3588
  %idxprom36 = zext i32 %div to i64, !dbg !3588
  %arrayidx37 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 3, i64 %idxprom36, !dbg !3588
  %13 = load i64, i64* %arrayidx37, align 8, !dbg !3588
  %rem = and i32 %8, 63, !dbg !3588
  %sh_prom = zext i32 %rem to i64, !dbg !3588
  %14 = shl i64 1, %sh_prom, !dbg !3588
  %15 = and i64 %13, %14, !dbg !3588
  %tobool38 = icmp eq i64 %15, 0, !dbg !3588
  br i1 %tobool38, label %if.end40, label %cleanup113, !dbg !3590

if.end40:                                         ; preds = %if.end35
  call void @llvm.dbg.value(metadata i32 0, metadata !3509, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32* %start, metadata !3513, metadata !DIExpression(DW_OP_deref)), !dbg !3538
  call void @llvm.dbg.value(metadata i32* %end, metadata !3514, metadata !DIExpression(DW_OP_deref)), !dbg !3538
  call void @llvm.dbg.value(metadata i32* %step, metadata !3515, metadata !DIExpression(DW_OP_deref)), !dbg !3538
  %call41 = call fastcc i32 @get_sched_window(%struct.partial_schedule* %call5, i32* %nodes_order, i32 %i.0, %struct.simple_bitmap_def* %call, i32 %ii.1, i32* nonnull %start, i32* nonnull %step, i32* nonnull %end) #7, !dbg !3591
  %cmp42 = icmp eq i32 %call41, 0, !dbg !3592
  br i1 %cmp42, label %if.then43, label %if.end82, !dbg !3593

if.then43:                                        ; preds = %if.end40
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3594
  %tobool44 = icmp eq %struct._IO_FILE* %16, null, !dbg !3594
  br i1 %tobool44, label %if.end53, label %if.then45, !dbg !3595

if.then45:                                        ; preds = %if.then43
  %17 = load %struct.ddg_node*, %struct.ddg_node** %nodes46, align 8, !dbg !3596
  %insn49 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %17, i64 %idxprom11, i32 1, !dbg !3596
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn49, align 8, !dbg !3596
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3596
  %rt_int = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !3596
  %19 = load i32, i32* %rt_int, align 8, !dbg !3596
  %20 = load i32, i32* %start, align 4, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %20, metadata !3513, metadata !DIExpression()), !dbg !3538
  %21 = load i32, i32* %end, align 4, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %21, metadata !3514, metadata !DIExpression()), !dbg !3538
  %22 = load i32, i32* %step, align 4, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %22, metadata !3515, metadata !DIExpression()), !dbg !3538
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.47, i64 0, i64 0), i32 %8, i32 %19, i32 %20, i32 %21, i32 %22) #6, !dbg !3600
  br label %if.end53, !dbg !3600

if.end53:                                         ; preds = %if.then43, %if.then45
  %23 = load i32, i32* %step, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %23, metadata !3515, metadata !DIExpression()), !dbg !3538
  %cmp54 = icmp sgt i32 %23, 0, !dbg !3601
  br i1 %cmp54, label %land.lhs.true55, label %lor.lhs.false57, !dbg !3601

land.lhs.true55:                                  ; preds = %if.end53
  %24 = load i32, i32* %start, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %24, metadata !3513, metadata !DIExpression()), !dbg !3538
  %25 = load i32, i32* %end, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %25, metadata !3514, metadata !DIExpression()), !dbg !3538
  %cmp56 = icmp slt i32 %24, %25, !dbg !3601
  br i1 %cmp56, label %cond.end, label %lor.lhs.false57, !dbg !3601

lor.lhs.false57:                                  ; preds = %land.lhs.true55, %if.end53
  call void @llvm.dbg.value(metadata i32 %23, metadata !3515, metadata !DIExpression()), !dbg !3538
  %cmp58 = icmp slt i32 %23, 0, !dbg !3601
  br i1 %cmp58, label %land.lhs.true59, label %cond.true, !dbg !3601

land.lhs.true59:                                  ; preds = %lor.lhs.false57
  %26 = load i32, i32* %start, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %26, metadata !3513, metadata !DIExpression()), !dbg !3538
  %27 = load i32, i32* %end, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %27, metadata !3514, metadata !DIExpression()), !dbg !3538
  %cmp60 = icmp sgt i32 %26, %27, !dbg !3601
  br i1 %cmp60, label %cond.end, label %cond.true, !dbg !3601

cond.true:                                        ; preds = %land.lhs.true59, %lor.lhs.false57
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1783, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3601
  %.pre = load i32, i32* %start, align 4, !dbg !3602
  %.pre2 = load i32, i32* %end, align 4, !dbg !3603
  %.pre3 = load i32, i32* %step, align 4, !dbg !3604
  br label %cond.end, !dbg !3601

cond.end:                                         ; preds = %land.lhs.true55, %land.lhs.true59, %cond.true
  %28 = phi i32 [ %23, %land.lhs.true55 ], [ %23, %land.lhs.true59 ], [ %.pre3, %cond.true ], !dbg !3604
  %29 = phi i32 [ %25, %land.lhs.true55 ], [ %27, %land.lhs.true59 ], [ %.pre2, %cond.true ], !dbg !3603
  %30 = phi i32 [ %24, %land.lhs.true55 ], [ %26, %land.lhs.true59 ], [ %.pre, %cond.true ], !dbg !3602
  call void @llvm.dbg.value(metadata i32 %30, metadata !3513, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %29, metadata !3514, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %28, metadata !3515, metadata !DIExpression()), !dbg !3538
  call fastcc void @calculate_must_precede_follow(%struct.ddg_node* %arrayidx12, i32 %30, i32 %29, i32 %28, i32 %ii.1, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %call3) #7, !dbg !3605
  %31 = load i32, i32* %start, align 4, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %31, metadata !3513, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %31, metadata !3508, metadata !DIExpression()), !dbg !3538
  br label %for.cond61, !dbg !3607

for.cond61:                                       ; preds = %for.inc, %cond.end
  %success.0 = phi i32 [ 0, %cond.end ], [ %conv, %for.inc ], !dbg !3551
  %c.0 = phi i32 [ %31, %cond.end ], [ %add, %for.inc ], !dbg !3608
  call void @llvm.dbg.value(metadata i32 %c.0, metadata !3508, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %success.0, metadata !3509, metadata !DIExpression()), !dbg !3538
  %32 = load i32, i32* %end, align 4, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %32, metadata !3514, metadata !DIExpression()), !dbg !3538
  %cmp62 = icmp eq i32 %c.0, %32, !dbg !3610
  br i1 %cmp62, label %for.end, label %for.body63, !dbg !3611

for.body63:                                       ; preds = %for.cond61
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* null, metadata !3528, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* null, metadata !3534, metadata !DIExpression()), !dbg !3612
  %33 = load i32, i32* %start, align 4, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %33, metadata !3513, metadata !DIExpression()), !dbg !3538
  %cmp64 = icmp eq i32 %c.0, %33, !dbg !3615
  br i1 %cmp64, label %if.then65, label %for.body63.if.end69_crit_edge, !dbg !3616

for.body63.if.end69_crit_edge:                    ; preds = %for.body63
  %.pre4 = load i32, i32* %step, align 4, !dbg !3617
  br label %if.end69, !dbg !3616

if.then65:                                        ; preds = %for.body63
  %34 = load i32, i32* %step, align 4, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %34, metadata !3515, metadata !DIExpression()), !dbg !3538
  %cmp66 = icmp eq i32 %34, 1, !dbg !3622
  %call2. = select i1 %cmp66, %struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* null
  %.call3 = select i1 %cmp66, %struct.simple_bitmap_def* null, %struct.simple_bitmap_def* %call3
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %.call3, metadata !3534, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call2., metadata !3528, metadata !DIExpression()), !dbg !3612
  br label %if.end69, !dbg !3623

if.end69:                                         ; preds = %for.body63.if.end69_crit_edge, %if.then65
  %35 = phi i32 [ %34, %if.then65 ], [ %.pre4, %for.body63.if.end69_crit_edge ], !dbg !3617
  %tmp_precede.1 = phi %struct.simple_bitmap_def* [ %call2., %if.then65 ], [ null, %for.body63.if.end69_crit_edge ], !dbg !3612
  %tmp_follow.1 = phi %struct.simple_bitmap_def* [ %.call3, %if.then65 ], [ null, %for.body63.if.end69_crit_edge ], !dbg !3624
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %tmp_follow.1, metadata !3534, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %tmp_precede.1, metadata !3528, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata i32 %32, metadata !3514, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %35, metadata !3515, metadata !DIExpression()), !dbg !3538
  %sub = sub nsw i32 %32, %35, !dbg !3625
  %cmp70 = icmp eq i32 %c.0, %sub, !dbg !3626
  br i1 %cmp70, label %if.then71, label %if.end76, !dbg !3627

if.then71:                                        ; preds = %if.end69
  call void @llvm.dbg.value(metadata i32 %35, metadata !3515, metadata !DIExpression()), !dbg !3538
  %cmp72 = icmp eq i32 %35, 1, !dbg !3628
  %tmp_precede.1.call2 = select i1 %cmp72, %struct.simple_bitmap_def* %tmp_precede.1, %struct.simple_bitmap_def* %call2
  %call3.tmp_follow.1 = select i1 %cmp72, %struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %tmp_follow.1
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call3.tmp_follow.1, metadata !3534, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %tmp_precede.1.call2, metadata !3528, metadata !DIExpression()), !dbg !3612
  br label %if.end76, !dbg !3631

if.end76:                                         ; preds = %if.then71, %if.end69
  %tmp_precede.3 = phi %struct.simple_bitmap_def* [ %tmp_precede.1.call2, %if.then71 ], [ %tmp_precede.1, %if.end69 ], !dbg !3632
  %tmp_follow.3 = phi %struct.simple_bitmap_def* [ %call3.tmp_follow.1, %if.then71 ], [ %tmp_follow.1, %if.end69 ], !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %tmp_follow.3, metadata !3534, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %tmp_precede.3, metadata !3528, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.value(metadata i32* %num_splits, metadata !3510, metadata !DIExpression(DW_OP_deref)), !dbg !3538
  %call77 = call fastcc zeroext i8 @try_scheduling_node_in_cycle(%struct.partial_schedule* %call5, %struct.ddg_node* %arrayidx12, i32 %8, i32 %c.0, %struct.simple_bitmap_def* %call, i32* nonnull %num_splits, %struct.simple_bitmap_def* %tmp_precede.3, %struct.simple_bitmap_def* %tmp_follow.3) #7, !dbg !3633
  %conv = zext i8 %call77 to i32, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3509, metadata !DIExpression()), !dbg !3538
  %tobool78 = icmp eq i8 %call77, 0, !dbg !3634
  br i1 %tobool78, label %for.inc, label %for.end

for.inc:                                          ; preds = %if.end76
  %36 = load i32, i32* %step, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %36, metadata !3515, metadata !DIExpression()), !dbg !3538
  %add = add nsw i32 %c.0, %36, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %add, metadata !3508, metadata !DIExpression()), !dbg !3538
  br label %for.cond61, !dbg !3638, !llvm.loop !3639

for.end:                                          ; preds = %if.end76, %for.cond61
  %success.1 = phi i32 [ %conv, %if.end76 ], [ %success.0, %for.cond61 ], !dbg !3551
  call void @llvm.dbg.value(metadata i32 %success.1, metadata !3509, metadata !DIExpression()), !dbg !3538
  call fastcc void @verify_partial_schedule(%struct.partial_schedule* %call5, %struct.simple_bitmap_def* %call) #7, !dbg !3641
  br label %if.end82, !dbg !3642

if.end82:                                         ; preds = %for.end, %if.end40
  %success.2 = phi i32 [ %success.1, %for.end ], [ 0, %if.end40 ], !dbg !3551
  call void @llvm.dbg.value(metadata i32 %success.2, metadata !3509, metadata !DIExpression()), !dbg !3538
  %tobool83 = icmp eq i32 %success.2, 0, !dbg !3643
  br i1 %tobool83, label %if.then84, label %if.end112, !dbg !3644

if.then84:                                        ; preds = %if.end82
  %inc = add nsw i32 %ii.1, 1, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3506, metadata !DIExpression()), !dbg !3538
  %cmp85 = icmp eq i32 %ii.1, %maxii, !dbg !3647
  br i1 %cmp85, label %cleanup109, label %if.end88, !dbg !3648

if.end88:                                         ; preds = %if.then84
  %37 = load i32, i32* %num_splits, align 4, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %37, metadata !3510, metadata !DIExpression()), !dbg !3538
  %cmp89 = icmp sgt i32 %37, 9, !dbg !3651
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !3652

if.then91:                                        ; preds = %if.end88
  call void @llvm.dbg.value(metadata i32 0, metadata !3510, metadata !DIExpression()), !dbg !3538
  store i32 0, i32* %num_splits, align 4, !dbg !3653
  call void @llvm.dbg.value(metadata i32 1, metadata !3511, metadata !DIExpression()), !dbg !3538
  call fastcc void @verify_partial_schedule(%struct.partial_schedule* %call5, %struct.simple_bitmap_def* %call) #7, !dbg !3655
  call fastcc void @reset_partial_schedule(%struct.partial_schedule* %call5, i32 %inc) #7, !dbg !3656
  call fastcc void @verify_partial_schedule(%struct.partial_schedule* %call5, %struct.simple_bitmap_def* %call) #7, !dbg !3657
  br label %cleanup109, !dbg !3658

if.end92:                                         ; preds = %if.end88
  call void @llvm.dbg.value(metadata i32 %37, metadata !3510, metadata !DIExpression()), !dbg !3538
  %inc93 = add nsw i32 %37, 1, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %inc93, metadata !3510, metadata !DIExpression()), !dbg !3538
  store i32 %inc93, i32* %num_splits, align 4, !dbg !3659
  %38 = load i32, i32* %step, align 4, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %38, metadata !3515, metadata !DIExpression()), !dbg !3538
  %cmp94 = icmp eq i32 %38, 1, !dbg !3661
  br i1 %cmp94, label %if.then96, label %if.else100, !dbg !3662

if.then96:                                        ; preds = %if.end92
  %39 = load i32, i32* %start, align 4, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %39, metadata !3513, metadata !DIExpression()), !dbg !3538
  %40 = load i32, i32* %end, align 4, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %40, metadata !3514, metadata !DIExpression()), !dbg !3538
  %sub97 = add nsw i32 %40, -1, !dbg !3665
  %41 = load i32, i32* %ii102, align 8, !dbg !3666
  %call99 = call fastcc i32 @compute_split_row(%struct.simple_bitmap_def* %call, i32 %39, i32 %sub97, i32 %41, %struct.ddg_node* %arrayidx12) #7, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %call99, metadata !3535, metadata !DIExpression()), !dbg !3668
  br label %if.end104, !dbg !3669

if.else100:                                       ; preds = %if.end92
  %42 = load i32, i32* %end, align 4, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %42, metadata !3514, metadata !DIExpression()), !dbg !3538
  %add101 = add nsw i32 %42, 1, !dbg !3671
  %43 = load i32, i32* %start, align 4, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %43, metadata !3513, metadata !DIExpression()), !dbg !3538
  %44 = load i32, i32* %ii102, align 8, !dbg !3673
  %call103 = call fastcc i32 @compute_split_row(%struct.simple_bitmap_def* %call, i32 %add101, i32 %43, i32 %44, %struct.ddg_node* %arrayidx12) #7, !dbg !3674
  call void @llvm.dbg.value(metadata i32 %call103, metadata !3535, metadata !DIExpression()), !dbg !3668
  br label %if.end104

if.end104:                                        ; preds = %if.else100, %if.then96
  %split_row.0 = phi i32 [ %call99, %if.then96 ], [ %call103, %if.else100 ], !dbg !3554
  call void @llvm.dbg.value(metadata i32 %split_row.0, metadata !3535, metadata !DIExpression()), !dbg !3668
  call fastcc void @ps_insert_empty_row(%struct.partial_schedule* %call5, i32 %split_row.0, %struct.simple_bitmap_def* %call) #7, !dbg !3675
  %dec = add nsw i32 %i.0, -1, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3507, metadata !DIExpression()), !dbg !3538
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3677
  %tobool105 = icmp eq %struct._IO_FILE* %45, null, !dbg !3677
  br i1 %tobool105, label %cleanup109, label %if.then106, !dbg !3679

if.then106:                                       ; preds = %if.end104
  %46 = load i32, i32* %num_splits, align 4, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %46, metadata !3510, metadata !DIExpression()), !dbg !3538
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i64 0, i64 0), i32 %46) #6, !dbg !3681
  br label %cleanup109, !dbg !3681

cleanup109:                                       ; preds = %if.end104, %if.then106, %if.then84, %if.then91
  %flush_and_start_over.2 = phi i32 [ 1, %if.then91 ], [ %flush_and_start_over.1, %if.then84 ], [ %flush_and_start_over.1, %if.then106 ], [ %flush_and_start_over.1, %if.end104 ], !dbg !3682
  %i.1 = phi i32 [ %i.0, %if.then91 ], [ %i.0, %if.then84 ], [ %dec, %if.then106 ], [ %dec, %if.end104 ], !dbg !3568
  %cleanup.dest.slot.1 = phi i32 [ 4, %if.then91 ], [ 4, %if.then84 ], [ 0, %if.then106 ], [ 0, %if.end104 ]
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3507, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.2, metadata !3511, metadata !DIExpression()), !dbg !3538
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end112, label %cleanup113

if.end112:                                        ; preds = %if.end82, %cleanup109
  %flush_and_start_over.3 = phi i32 [ %flush_and_start_over.1, %if.end82 ], [ %flush_and_start_over.2, %cleanup109 ], !dbg !3567
  %i.2 = phi i32 [ %i.0, %if.end82 ], [ %i.1, %cleanup109 ], !dbg !3683
  %ii.2 = phi i32 [ %ii.1, %if.end82 ], [ %inc, %cleanup109 ], !dbg !3538
  call void @llvm.dbg.value(metadata i32 %ii.2, metadata !3506, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !3507, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.3, metadata !3511, metadata !DIExpression()), !dbg !3538
  br label %cleanup113, !dbg !3684

cleanup113:                                       ; preds = %if.end35, %cleanup109, %if.end112, %if.then34, %if.then29
  %flush_and_start_over.4 = phi i32 [ %flush_and_start_over.1, %if.then29 ], [ %flush_and_start_over.1, %if.then34 ], [ %flush_and_start_over.3, %if.end112 ], [ %flush_and_start_over.2, %cleanup109 ], [ %flush_and_start_over.1, %if.end35 ], !dbg !3567
  %i.3 = phi i32 [ %i.0, %if.then29 ], [ %i.0, %if.then34 ], [ %i.2, %if.end112 ], [ %i.1, %cleanup109 ], [ %i.0, %if.end35 ], !dbg !3683
  %ii.3 = phi i32 [ %ii.1, %if.then29 ], [ %ii.1, %if.then34 ], [ %ii.2, %if.end112 ], [ %inc, %cleanup109 ], [ %ii.1, %if.end35 ], !dbg !3538
  %cleanup.dest.slot.2 = phi i32 [ 6, %if.then29 ], [ 6, %if.then34 ], [ 0, %if.end112 ], [ %cleanup.dest.slot.1, %cleanup109 ], [ 6, %if.end35 ]
  call void @llvm.dbg.value(metadata i32 %ii.3, metadata !3506, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !3507, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.4, metadata !3511, metadata !DIExpression()), !dbg !3538
  %switch = icmp eq i32 %cleanup.dest.slot.2, 4
  br i1 %switch, label %for.end120, label %for.inc118

for.inc118:                                       ; preds = %cleanup113
  %inc119 = add nsw i32 %i.3, 1, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %inc119, metadata !3507, metadata !DIExpression()), !dbg !3538
  br label %for.cond, !dbg !3686, !llvm.loop !3687

for.end120:                                       ; preds = %cleanup113, %for.cond
  %flush_and_start_over.5 = phi i32 [ %flush_and_start_over.4, %cleanup113 ], [ %flush_and_start_over.1, %for.cond ], !dbg !3567
  %ii.4 = phi i32 [ %ii.3, %cleanup113 ], [ %ii.1, %for.cond ], !dbg !3557
  call void @llvm.dbg.value(metadata i32 %ii.4, metadata !3506, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %flush_and_start_over.5, metadata !3511, metadata !DIExpression()), !dbg !3538
  br label %while.cond, !dbg !3556, !llvm.loop !3689

while.end:                                        ; preds = %while.cond
  %cmp.lcssa = phi i1 [ %cmp, %while.cond ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %ii.0, metadata !3506, metadata !DIExpression()), !dbg !3538
  br i1 %cmp.lcssa, label %if.else124, label %if.then123, !dbg !3691

if.then123:                                       ; preds = %while.end
  call fastcc void @free_partial_schedule(%struct.partial_schedule* %call5) #7, !dbg !3692
  call void @llvm.dbg.value(metadata %struct.partial_schedule* null, metadata !3520, metadata !DIExpression()), !dbg !3538
  br label %if.end131, !dbg !3695

if.else124:                                       ; preds = %while.end
  %call125 = call i32 @sbitmap_equal(%struct.simple_bitmap_def* %call4, %struct.simple_bitmap_def* %call) #6, !dbg !3696
  %tobool126 = icmp eq i32 %call125, 0, !dbg !3696
  br i1 %tobool126, label %cond.true127, label %if.end131, !dbg !3696

cond.true127:                                     ; preds = %if.else124
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3696
  br label %if.end131, !dbg !3696

if.end131:                                        ; preds = %if.else124, %cond.true127, %if.then123
  %ps.0 = phi %struct.partial_schedule* [ null, %if.then123 ], [ %call5, %if.else124 ], [ %call5, %cond.true127 ], !dbg !3538
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps.0, metadata !3520, metadata !DIExpression()), !dbg !3538
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !3697
  %47 = load i8*, i8** %popcount, align 8, !dbg !3697
  call void @free(i8* %47) #6, !dbg !3697
  %48 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !3697
  call void @free(i8* %48) #6, !dbg !3697
  %popcount132 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call2, i64 0, i32 0, !dbg !3698
  %49 = load i8*, i8** %popcount132, align 8, !dbg !3698
  call void @free(i8* %49) #6, !dbg !3698
  %50 = bitcast %struct.simple_bitmap_def* %call2 to i8*, !dbg !3698
  call void @free(i8* %50) #6, !dbg !3698
  %popcount133 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call3, i64 0, i32 0, !dbg !3699
  %51 = load i8*, i8** %popcount133, align 8, !dbg !3699
  call void @free(i8* %51) #6, !dbg !3699
  %52 = bitcast %struct.simple_bitmap_def* %call3 to i8*, !dbg !3699
  call void @free(i8* %52) #6, !dbg !3699
  %popcount134 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !3700
  %53 = load i8*, i8** %popcount134, align 8, !dbg !3700
  call void @free(i8* %53) #6, !dbg !3700
  %54 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !3700
  call void @free(i8* %54) #6, !dbg !3700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !3701
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3701
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3701
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3701
  ret %struct.partial_schedule* %ps.0, !dbg !3702
}

; Function Attrs: nounwind uwtable
define internal fastcc void @normalize_sched_times(%struct.partial_schedule* %ps) unnamed_addr #4 !dbg !3703 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !3707, metadata !DIExpression()), !dbg !3719
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !3720
  %0 = load i32, i32* %min_cycle, align 8, !dbg !3720
  call void @llvm.dbg.value(metadata i32 %0, metadata !3709, metadata !DIExpression()), !dbg !3719
  %ii1 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !3721
  %1 = load i32, i32* %ii1, align 8, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %1, metadata !3710, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 0, metadata !3708, metadata !DIExpression()), !dbg !3719
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !3722
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !3723
  %2 = sext i32 %1 to i64, !dbg !3724
  br label %for.cond, !dbg !3724

for.cond:                                         ; preds = %for.inc31, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc31 ], [ 0, %entry ], !dbg !3725
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3708, metadata !DIExpression()), !dbg !3719
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !3726
  br i1 %cmp, label %for.body, label %for.end32, !dbg !3727

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !3728
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %3, i64 %indvars.iv, !dbg !3729
  br label %for.cond2, !dbg !3730

for.cond2:                                        ; preds = %cond.end21, %for.body
  %crr_insn.0.in = phi %struct.ps_insn** [ %arrayidx, %for.body ], [ %next_in_row, %cond.end21 ]
  %crr_insn.0 = load %struct.ps_insn*, %struct.ps_insn** %crr_insn.0.in, align 8, !dbg !3722
  call void @llvm.dbg.value(metadata %struct.ps_insn* %crr_insn.0, metadata !3711, metadata !DIExpression()), !dbg !3719
  %tobool = icmp eq %struct.ps_insn* %crr_insn.0, null, !dbg !3731
  br i1 %tobool, label %for.inc31, label %for.body3, !dbg !3731

for.body3:                                        ; preds = %for.cond2
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 0, !dbg !3732
  %4 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !3732
  call void @llvm.dbg.value(metadata %struct.ddg_node* %4, metadata !3712, metadata !DIExpression()), !dbg !3723
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %4, i64 0, i32 7, i32 0, !dbg !3733
  %5 = bitcast i8** %info to %struct.node_sched_params**, !dbg !3733
  %6 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3733
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 0, i32 1, !dbg !3733
  %7 = load i32, i32* %time, align 4, !dbg !3733
  %sub = sub nsw i32 %7, %0, !dbg !3734
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3718, metadata !DIExpression()), !dbg !3723
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3735
  %tobool4 = icmp eq %struct._IO_FILE* %8, null, !dbg !3735
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3737

if.then:                                          ; preds = %for.body3
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %4, i64 0, i32 0, !dbg !3738
  %9 = load i32, i32* %cuid, align 8, !dbg !3738
  %10 = load i32, i32* %min_cycle, align 8, !dbg !3739
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.68, i64 0, i64 0), i32 %9, i32 %7, i32 %10) #6, !dbg !3740
  %.pre = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3741
  %time12.phi.trans.insert = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %.pre, i64 0, i32 1, !dbg !3723
  %.pre1 = load i32, i32* %time12.phi.trans.insert, align 4, !dbg !3741
  br label %if.end, !dbg !3740

if.end:                                           ; preds = %for.body3, %if.then
  %11 = phi i32 [ %7, %for.body3 ], [ %.pre1, %if.then ], !dbg !3741
  %12 = phi %struct.node_sched_params* [ %6, %for.body3 ], [ %.pre, %if.then ], !dbg !3741
  %13 = load i32, i32* %min_cycle, align 8, !dbg !3741
  %cmp14 = icmp slt i32 %11, %13, !dbg !3741
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !3741

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 592, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3741
  %.pre2 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3742
  %time17.phi.trans.insert = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %.pre2, i64 0, i32 1, !dbg !3723
  %.pre3 = load i32, i32* %time17.phi.trans.insert, align 4, !dbg !3742
  br label %cond.end, !dbg !3741

cond.end:                                         ; preds = %if.end, %cond.true
  %14 = phi i32 [ %11, %if.end ], [ %.pre3, %cond.true ], !dbg !3742
  %15 = phi %struct.node_sched_params* [ %12, %if.end ], [ %.pre2, %cond.true ], !dbg !3742
  %16 = load i32, i32* %max_cycle, align 4, !dbg !3742
  %cmp18 = icmp sgt i32 %14, %16, !dbg !3742
  br i1 %cmp18, label %cond.true19, label %cond.end21, !dbg !3742

cond.true19:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 593, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3742
  %.pre4 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3743
  br label %cond.end21, !dbg !3742

cond.end21:                                       ; preds = %cond.end, %cond.true19
  %17 = phi %struct.node_sched_params* [ %15, %cond.end ], [ %.pre4, %cond.true19 ], !dbg !3743
  %time25 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %17, i64 0, i32 1, !dbg !3743
  store i32 %sub, i32* %time25, align 4, !dbg !3744
  %rem = srem i32 %sub, %1, !dbg !3745
  %18 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3746
  %row28 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %18, i64 0, i32 4, !dbg !3746
  store i32 %rem, i32* %row28, align 4, !dbg !3747
  %div = sdiv i32 %sub, %1, !dbg !3748
  %19 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !3749
  %stage = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %19, i64 0, i32 5, !dbg !3749
  store i32 %div, i32* %stage, align 8, !dbg !3750
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 2, !dbg !3751
  br label %for.cond2, !dbg !3752, !llvm.loop !3753

for.inc31:                                        ; preds = %for.cond2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3755
  call void @llvm.dbg.value(metadata i32 undef, metadata !3708, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3719
  br label %for.cond, !dbg !3756, !llvm.loop !3757

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !3759
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rotate_partial_schedule(%struct.partial_schedule* %ps, i32 %start_cycle) unnamed_addr #4 !dbg !3760 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !3764, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %start_cycle, metadata !3765, metadata !DIExpression()), !dbg !3774
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !3775
  %0 = load i32, i32* %ii, align 8, !dbg !3775
  %sub = add nsw i32 %0, -1, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3769, metadata !DIExpression()), !dbg !3774
  %cmp = icmp eq i32 %start_cycle, 0, !dbg !3777
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3779

if.end:                                           ; preds = %entry
  %rem = srem i32 %start_cycle, %0, !dbg !3780
  %cmp2 = icmp slt i32 %rem, 0, !dbg !3780
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !3780

cond.true:                                        ; preds = %if.end
  %add = add nsw i32 %rem, %0, !dbg !3780
  br label %cond.end, !dbg !3780

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %if.end ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3768, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3766, metadata !DIExpression()), !dbg !3774
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !3781
  %1 = bitcast %struct.ps_insn*** %rows to i64**, !dbg !3781
  %idxprom19 = sext i32 %sub to i64, !dbg !3781
  %2 = sext i32 %sub to i64, !dbg !3782
  br label %for.cond, !dbg !3782

for.cond:                                         ; preds = %for.end, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc22, %for.end ], !dbg !3783
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3766, metadata !DIExpression()), !dbg !3774
  %cmp8 = icmp slt i32 %i.0, %cond, !dbg !3784
  br i1 %cmp8, label %for.body, label %for.end23, !dbg !3785

for.body:                                         ; preds = %for.cond
  %3 = load i64*, i64** %1, align 8, !dbg !3786
  %4 = load i64, i64* %3, align 8, !dbg !3787
  call void @llvm.dbg.value(metadata i32 0, metadata !3767, metadata !DIExpression()), !dbg !3774
  %5 = bitcast i64* %3 to %struct.ps_insn**, !dbg !3788
  br label %for.cond9, !dbg !3788

for.cond9:                                        ; preds = %for.body11, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body11 ], [ 0, %for.body ]
  %6 = phi %struct.ps_insn** [ %.pre, %for.body11 ], [ %5, %for.body ]
  %7 = phi %struct.ps_insn** [ %.pre, %for.body11 ], [ %5, %for.body ], !dbg !3781
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3767, metadata !DIExpression()), !dbg !3774
  %cmp10 = icmp slt i64 %indvars.iv, %2, !dbg !3790
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !3792

for.body11:                                       ; preds = %for.cond9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3793
  %arrayidx14 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %7, i64 %indvars.iv.next, !dbg !3794
  %8 = bitcast %struct.ps_insn** %arrayidx14 to i64*, !dbg !3794
  %9 = load i64, i64* %8, align 8, !dbg !3794
  %arrayidx17 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %6, i64 %indvars.iv, !dbg !3795
  %10 = bitcast %struct.ps_insn** %arrayidx17 to i64*, !dbg !3796
  store i64 %9, i64* %10, align 8, !dbg !3796
  call void @llvm.dbg.value(metadata i32 undef, metadata !3767, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3774
  %.pre = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !3781
  br label %for.cond9, !dbg !3797, !llvm.loop !3798

for.end:                                          ; preds = %for.cond9
  %.lcssa = phi %struct.ps_insn** [ %7, %for.cond9 ], !dbg !3781
  %arrayidx20 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %.lcssa, i64 %idxprom19, !dbg !3800
  %11 = bitcast %struct.ps_insn** %arrayidx20 to i64*, !dbg !3801
  store i64 %4, i64* %11, align 8, !dbg !3801
  %inc22 = add nuw nsw i32 %i.0, 1, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %inc22, metadata !3766, metadata !DIExpression()), !dbg !3774
  br label %for.cond, !dbg !3803, !llvm.loop !3804

for.end23:                                        ; preds = %for.cond
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !3806
  %12 = load i32, i32* %max_cycle, align 4, !dbg !3807
  %sub24 = sub nsw i32 %12, %start_cycle, !dbg !3807
  store i32 %sub24, i32* %max_cycle, align 4, !dbg !3807
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !3808
  %13 = load i32, i32* %min_cycle, align 8, !dbg !3809
  %sub25 = sub nsw i32 %13, %start_cycle, !dbg !3809
  store i32 %sub25, i32* %min_cycle, align 8, !dbg !3809
  br label %cleanup.cont, !dbg !3810

cleanup.cont:                                     ; preds = %for.end23, %entry
  ret void, !dbg !3810
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_columns_for_ps(%struct.partial_schedule* %ps) unnamed_addr #4 !dbg !3811 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !3813, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 0, metadata !3814, metadata !DIExpression()), !dbg !3820
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !3821
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !3822
  br label %for.cond, !dbg !3823

for.cond:                                         ; preds = %for.inc4, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc4 ], [ 0, %entry ], !dbg !3824
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3814, metadata !DIExpression()), !dbg !3820
  %0 = load i32, i32* %ii, align 8, !dbg !3825
  %1 = sext i32 %0 to i64, !dbg !3826
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !3826
  br i1 %cmp, label %for.body, label %for.end6, !dbg !3827

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !3828
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %indvars.iv, !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3819, metadata !DIExpression()), !dbg !3822
  br label %for.cond1, !dbg !3830

for.cond1:                                        ; preds = %for.body2, %for.body
  %cur_insn.0.in = phi %struct.ps_insn** [ %arrayidx, %for.body ], [ %next_in_row, %for.body2 ]
  %column.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body2 ], !dbg !3822
  %cur_insn.0 = load %struct.ps_insn*, %struct.ps_insn** %cur_insn.0.in, align 8, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %column.0, metadata !3819, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata %struct.ps_insn* %cur_insn.0, metadata !3815, metadata !DIExpression()), !dbg !3822
  %tobool = icmp eq %struct.ps_insn* %cur_insn.0, null, !dbg !3831
  br i1 %tobool, label %for.inc4, label %for.body2, !dbg !3831

for.body2:                                        ; preds = %for.cond1
  %inc = add nuw nsw i32 %column.0, 1, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3819, metadata !DIExpression()), !dbg !3822
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %cur_insn.0, i64 0, i32 0, !dbg !3835
  %3 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !3835
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 7, i32 0, !dbg !3835
  %4 = bitcast i8** %info to %struct.node_sched_params**, !dbg !3835
  %5 = load %struct.node_sched_params*, %struct.node_sched_params** %4, align 8, !dbg !3835
  %column3 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %5, i64 0, i32 6, !dbg !3835
  store i32 %column.0, i32* %column3, align 4, !dbg !3836
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %cur_insn.0, i64 0, i32 2, !dbg !3837
  br label %for.cond1, !dbg !3838, !llvm.loop !3839

for.inc4:                                         ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3841
  call void @llvm.dbg.value(metadata i32 undef, metadata !3814, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3820
  br label %for.cond, !dbg !3842, !llvm.loop !3843

for.end6:                                         ; preds = %for.cond
  ret void, !dbg !3845
}

; Function Attrs: nounwind uwtable
define internal fastcc void @canon_loop(%struct.loop* %loop) unnamed_addr #4 !dbg !3846 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %i = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp22 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3850, metadata !DIExpression()), !dbg !3859
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3860
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3860
  %1 = bitcast %struct.edge_iterator* %i to i8*, !dbg !3861
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3861
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3862
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3862
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3862
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3862
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3862
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !3862
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3862
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 0, !dbg !3862
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !3862
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3862
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3862
  store i32 %7, i32* %6, align 8, !dbg !3862
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3862
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3862
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !3862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3862
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3862
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3864
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3864
  br label %for.cond, !dbg !3862

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %10, align 8, !dbg !3866
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !3859
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !3866
  %tobool = icmp eq i8 %call1, 0, !dbg !3862
  br i1 %tobool, label %for.end, label %for.body, !dbg !3862

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3867
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !3851, metadata !DIExpression()), !dbg !3859
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 7, !dbg !3869
  %15 = load i32, i32* %flags, align 8, !dbg !3869
  %and = and i32 %15, 1, !dbg !3870
  %tobool2 = icmp eq i32 %and, 0, !dbg !3870
  br i1 %tobool2, label %for.inc, label %land.lhs.true, !dbg !3871

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !3851, metadata !DIExpression()), !dbg !3859
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 0, !dbg !3872
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3872
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 1, !dbg !3872
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3872
  %tobool3 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !3872
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3872

cond.true:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !3851, metadata !DIExpression()), !dbg !3859
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !3872
  br label %cond.end, !dbg !3872

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.lhs.true ], !dbg !3872
  %call6 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3872
  %cmp = icmp ugt i32 %call6, 1, !dbg !3873
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3874

if.then:                                          ; preds = %cond.end
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3875
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !3851, metadata !DIExpression()), !dbg !3859
  %call7 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %18) #6, !dbg !3876
  br label %for.inc, !dbg !3876

for.inc:                                          ; preds = %for.body, %cond.end, %if.then
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3852, metadata !DIExpression(DW_OP_deref)), !dbg !3859
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %i) #7, !dbg !3866
  br label %for.cond, !dbg !3866, !llvm.loop !3877

for.end:                                          ; preds = %for.cond
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3879
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3879
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3881
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3881
  %cmp8 = icmp eq %struct.basic_block_def* %19, %20, !dbg !3882
  br i1 %cmp8, label %if.then21, label %lor.lhs.false, !dbg !3883

lor.lhs.false:                                    ; preds = %for.end
  %succs10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 1, !dbg !3884
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs10, align 8, !dbg !3884
  %tobool11 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !3884
  br i1 %tobool11, label %cond.end17, label %cond.true12, !dbg !3884

cond.true12:                                      ; preds = %lor.lhs.false
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !3884
  br label %cond.end17, !dbg !3884

cond.end17:                                       ; preds = %lor.lhs.false, %cond.true12
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true12 ], [ null, %lor.lhs.false ], !dbg !3884
  %call19 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond18) #7, !dbg !3884
  %cmp20 = icmp ugt i32 %call19, 1, !dbg !3885
  br i1 %cmp20, label %cond.end17.if.then21_crit_edge, label %if.end38, !dbg !3886

cond.end17.if.then21_crit_edge:                   ; preds = %cond.end17
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3887
  br label %if.then21, !dbg !3886

if.then21:                                        ; preds = %cond.end17.if.then21_crit_edge, %for.end
  %22 = phi %struct.basic_block_def* [ %.pre, %cond.end17.if.then21_crit_edge ], [ %19, %for.end ], !dbg !3887
  %23 = bitcast %struct.edge_iterator* %tmp22 to i8*, !dbg !3887
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8, !dbg !3887
  %preds24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 0, !dbg !3887
  %call25 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds24) #7, !dbg !3887
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp22, i64 0, i32 0, !dbg !3887
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call25, 0, !dbg !3887
  store i32 %25, i32* %24, align 8, !dbg !3887
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp22, i64 0, i32 1, !dbg !3887
  %27 = extractvalue { i32, %struct.VEC_edge_gc** } %call25, 1, !dbg !3887
  store %struct.VEC_edge_gc** %27, %struct.VEC_edge_gc*** %26, align 8, !dbg !3887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %23, i64 16, i1 false), !dbg !3887
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8, !dbg !3887
  br label %for.cond26, !dbg !3887

for.cond26:                                       ; preds = %for.inc35, %if.then21
  %28 = load i32, i32* %10, align 8, !dbg !3890
  %29 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !3890
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !3859
  %call27 = call fastcc zeroext i8 @ei_cond(i32 %28, %struct.VEC_edge_gc** %29, %struct.edge_def** nonnull %e) #7, !dbg !3890
  %tobool28 = icmp eq i8 %call27, 0, !dbg !3887
  br i1 %tobool28, label %for.cond26.for.end36_crit_edge, label %for.body29, !dbg !3887

for.cond26.for.end36_crit_edge:                   ; preds = %for.cond26
  %.pre1 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3892
  br label %for.end36, !dbg !3887

for.body29:                                       ; preds = %for.cond26
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3893
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !3851, metadata !DIExpression()), !dbg !3859
  %src30 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 0, !dbg !3895
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %src30, align 8, !dbg !3895
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3896
  %cmp32 = icmp eq %struct.basic_block_def* %31, %32, !dbg !3897
  br i1 %cmp32, label %for.end36.loopexit, label %for.inc35, !dbg !3898

for.inc35:                                        ; preds = %for.body29
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3852, metadata !DIExpression(DW_OP_deref)), !dbg !3859
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %i) #7, !dbg !3890
  br label %for.cond26, !dbg !3890, !llvm.loop !3899

for.end36.loopexit:                               ; preds = %for.body29
  %.lcssa = phi %struct.edge_def* [ %30, %for.body29 ], !dbg !3893
  br label %for.end36, !dbg !3901

for.end36:                                        ; preds = %for.end36.loopexit, %for.cond26.for.end36_crit_edge
  %33 = phi %struct.edge_def* [ %.pre1, %for.cond26.for.end36_crit_edge ], [ %.lcssa, %for.end36.loopexit ], !dbg !3892
  call void @llvm.dbg.value(metadata %struct.edge_def* %33, metadata !3851, metadata !DIExpression()), !dbg !3859
  %call37 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %33) #6, !dbg !3901
  br label %if.end38, !dbg !3902

if.end38:                                         ; preds = %for.end36, %cond.end17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3903
  ret void, !dbg !3903
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local %struct.loop* @loop_version(%struct.loop*, i8*, %struct.basic_block_def**, i32, i32, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @permute_partial_schedule(%struct.partial_schedule* %ps, %struct.rtx_def* %last) unnamed_addr #4 !dbg !3904 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !3908, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !3909, metadata !DIExpression()), !dbg !3913
  %ii1 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !3914
  %0 = load i32, i32* %ii1, align 8, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %0, metadata !3910, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 0, metadata !3911, metadata !DIExpression()), !dbg !3913
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !3915
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3919
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3919
  %2 = sext i32 %0 to i64, !dbg !3922
  br label %for.cond, !dbg !3922

for.cond:                                         ; preds = %for.inc13, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc13 ], [ 0, %entry ], !dbg !3923
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3911, metadata !DIExpression()), !dbg !3913
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !3924
  br i1 %cmp, label %for.body, label %for.end14, !dbg !3925

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !3926
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %3, i64 %indvars.iv, !dbg !3927
  br label %for.cond2, !dbg !3928

for.cond2:                                        ; preds = %for.inc, %for.body
  %ps_ij.0.in = phi %struct.ps_insn** [ %arrayidx, %for.body ], [ %next_in_row, %for.inc ]
  %ps_ij.0 = load %struct.ps_insn*, %struct.ps_insn** %ps_ij.0.in, align 8, !dbg !3915
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_ij.0, metadata !3912, metadata !DIExpression()), !dbg !3913
  %tobool = icmp eq %struct.ps_insn* %ps_ij.0, null, !dbg !3929
  br i1 %tobool, label %for.inc13, label %for.body3, !dbg !3929

for.body3:                                        ; preds = %for.cond2
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3930
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0, i64 0, i32 0, !dbg !3931
  %5 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !3931
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %5, i64 0, i32 1, !dbg !3932
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3932
  %cmp5 = icmp eq %struct.rtx_def* %4, %6, !dbg !3933
  br i1 %cmp5, label %for.inc, label %if.then, !dbg !3934

if.then:                                          ; preds = %for.body3
  %first_note = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %5, i64 0, i32 2, !dbg !3935
  %7 = load %struct.rtx_def*, %struct.rtx_def** %first_note, align 8, !dbg !3935
  tail call void @reorder_insns_nobb(%struct.rtx_def* %7, %struct.rtx_def* %6, %struct.rtx_def* %4) #6, !dbg !3936
  br label %for.inc, !dbg !3936

for.inc:                                          ; preds = %for.body3, %if.then
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0, i64 0, i32 2, !dbg !3937
  br label %for.cond2, !dbg !3938, !llvm.loop !3939

for.inc13:                                        ; preds = %for.cond2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3941
  call void @llvm.dbg.value(metadata i32 undef, metadata !3911, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3913
  br label %for.cond, !dbg !3942, !llvm.loop !3943

for.end14:                                        ; preds = %for.cond
  ret void, !dbg !3945
}

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.undo_replace_buff_elem* @generate_reg_moves(%struct.partial_schedule* %ps, i8 zeroext %rescan) unnamed_addr #4 !dbg !3946 {
entry:
  %i_use = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !3950, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i8 1, metadata !3951, metadata !DIExpression()), !dbg !3999
  %g1 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 5, !dbg !4000
  %0 = load %struct.ddg*, %struct.ddg** %g1, align 8, !dbg !4000
  call void @llvm.dbg.value(metadata %struct.ddg* %0, metadata !3952, metadata !DIExpression()), !dbg !3999
  %ii2 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !4001
  %1 = load i32, i32* %ii2, align 8, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %1, metadata !3953, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* null, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3999
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %0, i64 0, i32 1, !dbg !4002
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %0, i64 0, i32 5, !dbg !4003
  %2 = bitcast i32* %i_use to i8*, !dbg !4004
  %3 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4004
  br label %for.cond, !dbg !4005

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %cleanup ], [ 0, %entry ], !dbg !4006
  %reg_move_replaces.0 = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.4, %cleanup ], [ null, %entry ], !dbg !4006
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3954, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.0, metadata !3955, metadata !DIExpression()), !dbg !3999
  %4 = load i32, i32* %num_nodes, align 8, !dbg !4007
  %5 = sext i32 %4 to i64, !dbg !4008
  %cmp = icmp slt i64 %indvars.iv2, %5, !dbg !4008
  br i1 %cmp, label %for.body, label %for.end224, !dbg !4009

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !3956, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 0, metadata !3961, metadata !DIExpression()), !dbg !4003
  %out = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv2, i32 4, !dbg !4011
  br label %for.cond3, !dbg !4012

for.cond3:                                        ; preds = %for.inc, %for.body
  %nreg_moves.0 = phi i32 [ 0, %for.body ], [ %nreg_moves.1, %for.inc ], !dbg !4003
  %e.0.in = phi %struct.ddg_edge** [ %out, %for.body ], [ %next_out, %for.inc ]
  %e.0 = load %struct.ddg_edge*, %struct.ddg_edge** %e.0.in, align 8, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.0, metadata !3960, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %nreg_moves.0, metadata !3961, metadata !DIExpression()), !dbg !4003
  %tobool = icmp eq %struct.ddg_edge* %e.0, null, !dbg !4014
  br i1 %tobool, label %for.end, label %for.body4, !dbg !4014

for.body4:                                        ; preds = %for.cond3
  %type = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 2, !dbg !4015
  %7 = load i32, i32* %type, align 8, !dbg !4015
  %cmp5 = icmp eq i32 %7, 0, !dbg !4016
  br i1 %cmp5, label %land.lhs.true, label %for.inc, !dbg !4017

land.lhs.true:                                    ; preds = %for.body4
  %dest = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 1, !dbg !4018
  %8 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !4018
  %src = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 0, !dbg !4019
  %9 = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !4019
  %cmp6 = icmp eq %struct.ddg_node* %8, %9, !dbg !4020
  br i1 %cmp6, label %for.inc, label %if.then, !dbg !4021

if.then:                                          ; preds = %land.lhs.true
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 7, i32 0, !dbg !4022
  %10 = bitcast i8** %info to %struct.node_sched_params**, !dbg !4022
  %11 = load %struct.node_sched_params*, %struct.node_sched_params** %10, align 8, !dbg !4022
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %11, i64 0, i32 1, !dbg !4022
  %12 = load i32, i32* %time, align 4, !dbg !4022
  %info10 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %9, i64 0, i32 7, i32 0, !dbg !4023
  %13 = bitcast i8** %info10 to %struct.node_sched_params**, !dbg !4023
  %14 = load %struct.node_sched_params*, %struct.node_sched_params** %13, align 8, !dbg !4023
  %time11 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %14, i64 0, i32 1, !dbg !4023
  %15 = load i32, i32* %time11, align 4, !dbg !4023
  %sub = sub nsw i32 %12, %15, !dbg !4024
  %distance = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 5, !dbg !4025
  %16 = load i32, i32* %distance, align 4, !dbg !4025
  %cmp12 = icmp eq i32 %16, 1, !dbg !4027
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !4028

if.then13:                                        ; preds = %if.then
  %add = add nsw i32 %sub, %1, !dbg !4029
  br label %if.end, !dbg !4030

if.end:                                           ; preds = %if.then13, %if.then
  %add.pn = phi i32 [ %add, %if.then13 ], [ %sub, %if.then ]
  %nreg_moves4e.0 = sdiv i32 %add.pn, %1, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %nreg_moves4e.0, metadata !3968, metadata !DIExpression()), !dbg !4031
  %row = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %11, i64 0, i32 4, !dbg !4032
  %17 = load i32, i32* %row, align 4, !dbg !4032
  %row30 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %14, i64 0, i32 4, !dbg !4034
  %18 = load i32, i32* %row30, align 4, !dbg !4034
  %cmp31 = icmp eq i32 %17, %18, !dbg !4035
  br i1 %cmp31, label %land.lhs.true32, label %if.end42, !dbg !4036

land.lhs.true32:                                  ; preds = %if.end
  %column = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %11, i64 0, i32 6, !dbg !4037
  %19 = load i32, i32* %column, align 4, !dbg !4037
  %column39 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %14, i64 0, i32 6, !dbg !4038
  %20 = load i32, i32* %column39, align 4, !dbg !4038
  %cmp40 = icmp slt i32 %19, %20, !dbg !4039
  %21 = zext i1 %cmp40 to i32, !dbg !4040
  %spec.select = sub i32 %nreg_moves4e.0, %21, !dbg !4040
  br label %if.end42, !dbg !4040

if.end42:                                         ; preds = %land.lhs.true32, %if.end
  %nreg_moves4e.1 = phi i32 [ %nreg_moves4e.0, %if.end ], [ %spec.select, %land.lhs.true32 ], !dbg !4031
  call void @llvm.dbg.value(metadata i32 %nreg_moves4e.1, metadata !3968, metadata !DIExpression()), !dbg !4031
  %cmp43 = icmp sgt i32 %nreg_moves.0, %nreg_moves4e.1, !dbg !4041
  %nreg_moves.0.nreg_moves4e.1 = select i1 %cmp43, i32 %nreg_moves.0, i32 %nreg_moves4e.1, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %nreg_moves.0.nreg_moves4e.1, metadata !3961, metadata !DIExpression()), !dbg !4003
  br label %for.inc, !dbg !4042

for.inc:                                          ; preds = %land.lhs.true, %for.body4, %if.end42
  %nreg_moves.1 = phi i32 [ %nreg_moves.0.nreg_moves4e.1, %if.end42 ], [ %nreg_moves.0, %land.lhs.true ], [ %nreg_moves.0, %for.body4 ], !dbg !4003
  call void @llvm.dbg.value(metadata i32 %nreg_moves.1, metadata !3961, metadata !DIExpression()), !dbg !4003
  %next_out = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 7, !dbg !4043
  br label %for.cond3, !dbg !4044, !llvm.loop !4045

for.end:                                          ; preds = %for.cond3
  %nreg_moves.0.lcssa = phi i32 [ %nreg_moves.0, %for.cond3 ], !dbg !4003
  call void @llvm.dbg.value(metadata i32 %nreg_moves.0.lcssa, metadata !3961, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %nreg_moves.0.lcssa, metadata !3961, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %nreg_moves.0.lcssa, metadata !3961, metadata !DIExpression()), !dbg !4003
  %cmp45 = icmp eq i32 %nreg_moves.0.lcssa, 0, !dbg !4047
  br i1 %cmp45, label %cleanup, label %if.end47, !dbg !4049

if.end47:                                         ; preds = %for.end
  %call = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %nreg_moves.0.lcssa, i32 %4) #6, !dbg !4050
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %call, metadata !3963, metadata !DIExpression()), !dbg !4003
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call, i32 %nreg_moves.0.lcssa) #6, !dbg !4051
  br label %for.cond50, !dbg !4052

for.cond50:                                       ; preds = %for.inc115, %if.end47
  %e.1.in = phi %struct.ddg_edge** [ %out, %if.end47 ], [ %next_out116, %for.inc115 ]
  %e.1 = load %struct.ddg_edge*, %struct.ddg_edge** %e.1.in, align 8, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.1, metadata !3960, metadata !DIExpression()), !dbg !4003
  %tobool51 = icmp eq %struct.ddg_edge* %e.1, null, !dbg !4054
  br i1 %tobool51, label %for.end117, label %for.body52, !dbg !4054

for.body52:                                       ; preds = %for.cond50
  %type53 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 2, !dbg !4055
  %22 = load i32, i32* %type53, align 8, !dbg !4055
  %cmp54 = icmp eq i32 %22, 0, !dbg !4056
  br i1 %cmp54, label %land.lhs.true55, label %for.inc115, !dbg !4057

land.lhs.true55:                                  ; preds = %for.body52
  %dest56 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 1, !dbg !4058
  %23 = load %struct.ddg_node*, %struct.ddg_node** %dest56, align 8, !dbg !4058
  %src57 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 0, !dbg !4059
  %24 = load %struct.ddg_node*, %struct.ddg_node** %src57, align 8, !dbg !4059
  %cmp58 = icmp eq %struct.ddg_node* %23, %24, !dbg !4060
  br i1 %cmp58, label %for.inc115, label %if.then59, !dbg !4061

if.then59:                                        ; preds = %land.lhs.true55
  %info62 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %23, i64 0, i32 7, i32 0, !dbg !4062
  %25 = bitcast i8** %info62 to %struct.node_sched_params**, !dbg !4062
  %26 = load %struct.node_sched_params*, %struct.node_sched_params** %25, align 8, !dbg !4062
  %time63 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %26, i64 0, i32 1, !dbg !4062
  %27 = load i32, i32* %time63, align 4, !dbg !4062
  %info66 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %24, i64 0, i32 7, i32 0, !dbg !4063
  %28 = bitcast i8** %info66 to %struct.node_sched_params**, !dbg !4063
  %29 = load %struct.node_sched_params*, %struct.node_sched_params** %28, align 8, !dbg !4063
  %time67 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %29, i64 0, i32 1, !dbg !4063
  %30 = load i32, i32* %time67, align 4, !dbg !4063
  %sub68 = sub nsw i32 %27, %30, !dbg !4064
  %distance70 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 5, !dbg !4065
  %31 = load i32, i32* %distance70, align 4, !dbg !4065
  %cmp71 = icmp eq i32 %31, 1, !dbg !4067
  br i1 %cmp71, label %if.then72, label %if.end84, !dbg !4068

if.then72:                                        ; preds = %if.then59
  %add82 = add nsw i32 %sub68, %1, !dbg !4069
  br label %if.end84, !dbg !4070

if.end84:                                         ; preds = %if.then72, %if.then59
  %add82.pn = phi i32 [ %add82, %if.then72 ], [ %sub68, %if.then59 ]
  %dest_copy.0 = sdiv i32 %add82.pn, %1, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %dest_copy.0, metadata !3973, metadata !DIExpression()), !dbg !4071
  %row88 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %26, i64 0, i32 4, !dbg !4072
  %32 = load i32, i32* %row88, align 4, !dbg !4072
  %row92 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %29, i64 0, i32 4, !dbg !4074
  %33 = load i32, i32* %row92, align 4, !dbg !4074
  %cmp93 = icmp eq i32 %32, %33, !dbg !4075
  br i1 %cmp93, label %land.lhs.true94, label %if.end106, !dbg !4076

land.lhs.true94:                                  ; preds = %if.end84
  %column98 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %26, i64 0, i32 6, !dbg !4077
  %34 = load i32, i32* %column98, align 4, !dbg !4077
  %column102 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %29, i64 0, i32 6, !dbg !4078
  %35 = load i32, i32* %column102, align 4, !dbg !4078
  %cmp103 = icmp slt i32 %34, %35, !dbg !4079
  %36 = zext i1 %cmp103 to i32, !dbg !4080
  %spec.select1 = sub i32 %dest_copy.0, %36, !dbg !4080
  br label %if.end106, !dbg !4080

if.end106:                                        ; preds = %land.lhs.true94, %if.end84
  %dest_copy.1 = phi i32 [ %dest_copy.0, %if.end84 ], [ %spec.select1, %land.lhs.true94 ], !dbg !4071
  call void @llvm.dbg.value(metadata i32 %dest_copy.1, metadata !3973, metadata !DIExpression()), !dbg !4071
  %tobool107 = icmp eq i32 %dest_copy.1, 0, !dbg !4081
  br i1 %tobool107, label %for.inc115, label %if.then108, !dbg !4083

if.then108:                                       ; preds = %if.end106
  %sub109 = add nsw i32 %dest_copy.1, -1, !dbg !4084
  %idxprom110 = sext i32 %sub109 to i64, !dbg !4085
  %arrayidx111 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %call, i64 %idxprom110, !dbg !4085
  %37 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx111, align 8, !dbg !4085
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %23, i64 0, i32 0, !dbg !4086
  %38 = load i32, i32* %cuid, align 8, !dbg !4086
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %37, i32 %38) #7, !dbg !4087
  br label %for.inc115, !dbg !4087

for.inc115:                                       ; preds = %if.end106, %land.lhs.true55, %for.body52, %if.then108
  %next_out116 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 7, !dbg !4088
  br label %for.cond50, !dbg !4089, !llvm.loop !4090

for.end117:                                       ; preds = %for.cond50
  %info119 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv2, i32 7, i32 0, !dbg !4092
  %39 = bitcast i8** %info119 to %struct.node_sched_params**, !dbg !4092
  %40 = load %struct.node_sched_params*, %struct.node_sched_params** %39, align 8, !dbg !4092
  %nreg_moves120 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %40, i64 0, i32 3, !dbg !4092
  store i32 %nreg_moves.0.lcssa, i32* %nreg_moves120, align 8, !dbg !4093
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv2, i32 1, !dbg !4094
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4094
  br label %cond.true136, !dbg !4094

lor.lhs.false:                                    ; No predecessors!
  unreachable, !dbg !4094

lor.lhs.false126:                                 ; No predecessors!
  unreachable, !dbg !4094

lor.lhs.false131:                                 ; No predecessors!
  unreachable, !dbg !4094

cond.true136:                                     ; preds = %for.end117
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, !dbg !4094
  %42 = getelementptr inbounds %union.u, %union.u* %u138, i64 1, i32 0, i32 0, i64 0, !dbg !4094
  %43 = bitcast %union.rtunion_def* %42 to i32**, !dbg !4094
  %44 = load i32*, i32** %43, align 8, !dbg !4094
  %bf.load140 = load i32, i32* %44, align 8, !dbg !4094
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !4094
  %cmp142 = icmp eq i32 %bf.clear141, 23, !dbg !4094
  %45 = bitcast i32* %44 to %struct.rtx_def*, !dbg !4094
  br i1 %cmp142, label %cond.true143, label %cond.false149, !dbg !4094

cond.true143:                                     ; preds = %cond.true136
  br label %cond.end160, !dbg !4094

cond.false149:                                    ; preds = %cond.true136
  %call156 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %41, %struct.rtx_def* %45) #6, !dbg !4094
  br label %cond.end160, !dbg !4094

cond.end160:                                      ; preds = %cond.true143, %cond.false149
  %cond161 = phi %struct.rtx_def* [ %45, %cond.true143 ], [ %call156, %cond.false149 ], !dbg !4094
  %arrayidx164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond161, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4094
  %rt_rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !4094
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !4094
  %call166 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %46) #6, !dbg !4095
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call166, metadata !3966, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call166, metadata !3967, metadata !DIExpression()), !dbg !4003
  %first_note = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv2, i32 2, !dbg !4096
  %47 = load %struct.rtx_def*, %struct.rtx_def** %first_note, align 8, !dbg !4096
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !3965, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 0, metadata !3962, metadata !DIExpression()), !dbg !4003
  %48 = sext i32 %nreg_moves.0.lcssa to i64, !dbg !4097
  br label %for.cond167, !dbg !4097

for.cond167:                                      ; preds = %for.end212.us-lcssa, %cond.end160
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end212.us-lcssa ], [ 0, %cond.end160 ], !dbg !4098
  %last_reg_move.0 = phi %struct.rtx_def* [ %call173, %for.end212.us-lcssa ], [ %47, %cond.end160 ], !dbg !4003
  %reg_move_replaces.1 = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.2.lcssa, %for.end212.us-lcssa ], [ %reg_move_replaces.0, %cond.end160 ], !dbg !4006
  %prev_reg.0 = phi %struct.rtx_def* [ %call172, %for.end212.us-lcssa ], [ %call166, %cond.end160 ], !dbg !4003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_reg.0, metadata !3966, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.1, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_reg_move.0, metadata !3965, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3962, metadata !DIExpression()), !dbg !4003
  %cmp168 = icmp slt i64 %indvars.iv, %48, !dbg !4099
  br i1 %cmp168, label %for.body169, label %for.end214, !dbg !4100

for.body169:                                      ; preds = %for.cond167
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4101
  call void @llvm.dbg.value(metadata i32 0, metadata !3978, metadata !DIExpression()), !dbg !4004
  store i32 0, i32* %i_use, align 4, !dbg !4102
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_reg.0, i64 0, i32 0, !dbg !4103
  %bf.load170 = load i32, i32* %49, align 8, !dbg !4103
  %bf.lshr = lshr i32 %bf.load170, 16, !dbg !4103
  %bf.clear171 = and i32 %bf.lshr, 255, !dbg !4103
  %call172 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear171) #6, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call172, metadata !3982, metadata !DIExpression()), !dbg !4004
  %call173 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %call172, %struct.rtx_def* %prev_reg.0) #6, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call173, metadata !3983, metadata !DIExpression()), !dbg !4004
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !4106
  call void @add_insn_before(%struct.rtx_def* %call173, %struct.rtx_def* %last_reg_move.0, %struct.basic_block_def* null) #6, !dbg !4107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call173, metadata !3965, metadata !DIExpression()), !dbg !4003
  %50 = load %struct.node_sched_params*, %struct.node_sched_params** %39, align 8, !dbg !4108
  %first_reg_move = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %50, i64 0, i32 2, !dbg !4108
  %51 = load %struct.rtx_def*, %struct.rtx_def** %first_reg_move, align 8, !dbg !4108
  %tobool176 = icmp eq %struct.rtx_def* %51, null, !dbg !4108
  br i1 %tobool176, label %if.then177, label %if.end181, !dbg !4110

if.then177:                                       ; preds = %for.body169
  store %struct.rtx_def* %call173, %struct.rtx_def** %first_reg_move, align 8, !dbg !4111
  br label %if.end181, !dbg !4112

if.end181:                                        ; preds = %for.body169, %if.then177
  %arrayidx183 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %call, i64 %indvars.iv, !dbg !4113
  %52 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx183, align 8, !dbg !4113
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3984, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %52, i32 0) #7, !dbg !4113
  br label %for.cond184, !dbg !4113

for.cond184:                                      ; preds = %if.end197, %if.end181
  %reg_move_replaces.2 = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.1, %if.end181 ], [ %53, %if.end197 ], !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.2, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32* %i_use, metadata !3978, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3984, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  %call185 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i_use) #7, !dbg !4114
  %tobool186 = icmp eq i8 %call185, 0, !dbg !4113
  br i1 %tobool186, label %for.end212.us-lcssa, label %for.body187, !dbg !4113

for.body187:                                      ; preds = %for.cond184
  %call188 = call i8* @xcalloc(i64 1, i64 32) #6, !dbg !4115
  %53 = bitcast i8* %call188 to %struct.undo_replace_buff_elem*, !dbg !4116
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %53, metadata !3995, metadata !DIExpression()), !dbg !4117
  %54 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4118
  %55 = load i32, i32* %i_use, align 4, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %55, metadata !3978, metadata !DIExpression()), !dbg !4004
  %idxprom190 = zext i32 %55 to i64, !dbg !4120
  %insn192 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %54, i64 %idxprom190, i32 1, !dbg !4121
  %56 = bitcast %struct.rtx_def** %insn192 to i64*, !dbg !4121
  %57 = load i64, i64* %56, align 8, !dbg !4121
  %58 = bitcast i8* %call188 to i64*, !dbg !4122
  store i64 %57, i64* %58, align 8, !dbg !4122
  %orig_reg = getelementptr inbounds i8, i8* %call188, i64 8, !dbg !4123
  %59 = bitcast i8* %orig_reg to %struct.rtx_def**, !dbg !4123
  store %struct.rtx_def* %call166, %struct.rtx_def** %59, align 8, !dbg !4124
  %new_reg194 = getelementptr inbounds i8, i8* %call188, i64 16, !dbg !4125
  %60 = bitcast i8* %new_reg194 to %struct.rtx_def**, !dbg !4125
  store %struct.rtx_def* %call172, %struct.rtx_def** %60, align 8, !dbg !4126
  %tobool195 = icmp eq %struct.undo_replace_buff_elem* %reg_move_replaces.2, null, !dbg !4127
  br i1 %tobool195, label %if.end197, label %if.else, !dbg !4129

if.else:                                          ; preds = %for.body187
  %next = getelementptr inbounds i8, i8* %call188, i64 24, !dbg !4130
  %61 = bitcast i8* %next to %struct.undo_replace_buff_elem**, !dbg !4130
  store %struct.undo_replace_buff_elem* %reg_move_replaces.2, %struct.undo_replace_buff_elem** %61, align 8, !dbg !4132
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %53, metadata !3955, metadata !DIExpression()), !dbg !3999
  br label %if.end197

if.end197:                                        ; preds = %for.body187, %if.else
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %53, metadata !3955, metadata !DIExpression()), !dbg !3999
  %62 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %55, metadata !3978, metadata !DIExpression()), !dbg !4004
  %insn201 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %62, i64 %idxprom190, i32 1, !dbg !4134
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn201, align 8, !dbg !4134
  %call202 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %63, %struct.rtx_def* %call166, %struct.rtx_def* %call172) #6, !dbg !4135
  %64 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4136
  %65 = load i32, i32* %i_use, align 4, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %65, metadata !3978, metadata !DIExpression()), !dbg !4004
  %idxprom206 = zext i32 %65 to i64, !dbg !4139
  %insn208 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %64, i64 %idxprom206, i32 1, !dbg !4140
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn208, align 8, !dbg !4140
  %call209 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %66) #6, !dbg !4141
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3984, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4114
  br label %for.cond184, !dbg !4114, !llvm.loop !4142

for.end212.us-lcssa:                              ; preds = %for.cond184
  %reg_move_replaces.2.lcssa = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.2, %for.cond184 ], !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.2.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.2.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.2.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call172, metadata !3966, metadata !DIExpression()), !dbg !4003
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !4144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4144
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4145
  call void @llvm.dbg.value(metadata i32 undef, metadata !3962, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4003
  br label %for.cond167, !dbg !4146, !llvm.loop !4147

for.end214:                                       ; preds = %for.cond167
  %reg_move_replaces.1.lcssa = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.1, %for.cond167 ], !dbg !4006
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.1.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.1.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.1.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  %67 = bitcast %struct.simple_bitmap_def** %call to i8*, !dbg !4149
  call void @free(i8* %67) #6, !dbg !4149
  br label %cleanup, !dbg !4150

cleanup:                                          ; preds = %for.end, %for.end214
  %reg_move_replaces.4 = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.1.lcssa, %for.end214 ], [ %reg_move_replaces.0, %for.end ], !dbg !4006
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.4, metadata !3955, metadata !DIExpression()), !dbg !3999
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !4151
  call void @llvm.dbg.value(metadata i32 undef, metadata !3954, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3999
  br label %for.cond, !dbg !4152, !llvm.loop !4153

for.end224:                                       ; preds = %for.cond
  %reg_move_replaces.0.lcssa = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces.0, %for.cond ], !dbg !4006
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.0.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.0.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.0.lcssa, metadata !3955, metadata !DIExpression()), !dbg !3999
  ret %struct.undo_replace_buff_elem* %reg_move_replaces.0.lcssa, !dbg !4155
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_node_sched_params(%struct._IO_FILE* %file, i32 %num_nodes, %struct.ddg* %g) unnamed_addr #4 !dbg !4156 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4160, metadata !DIExpression()), !dbg !4170
  call void @llvm.dbg.value(metadata i32 %num_nodes, metadata !4161, metadata !DIExpression()), !dbg !4170
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4162, metadata !DIExpression()), !dbg !4170
  %tobool = icmp eq %struct._IO_FILE* %file, null, !dbg !4171
  br i1 %tobool, label %cleanup.cont, label %for.cond.preheader, !dbg !4173

for.cond.preheader:                               ; preds = %entry
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4174
  %0 = sext i32 %num_nodes to i64, !dbg !4175
  br label %for.cond, !dbg !4175

for.cond:                                         ; preds = %for.cond.preheader, %for.inc16
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc16 ], !dbg !4176
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4163, metadata !DIExpression()), !dbg !4170
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !4177
  br i1 %cmp, label %for.body, label %cleanup.cont.loopexit, !dbg !4175

for.body:                                         ; preds = %for.cond
  %1 = load %struct.node_sched_params*, %struct.node_sched_params** @node_sched_params, align 8, !dbg !4178
  call void @llvm.dbg.value(metadata %struct.node_sched_params* undef, metadata !4164, metadata !DIExpression()), !dbg !4174
  %first_reg_move = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %1, i64 %indvars.iv, i32 2, !dbg !4179
  %2 = load %struct.rtx_def*, %struct.rtx_def** %first_reg_move, align 8, !dbg !4179
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4168, metadata !DIExpression()), !dbg !4174
  %3 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4180
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 %indvars.iv, i32 1, !dbg !4180
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4180
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4180
  %rt_int = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !4180
  %5 = load i32, i32* %rt_int, align 8, !dbg !4180
  %6 = trunc i64 %indvars.iv to i32, !dbg !4181
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i64 0, i64 0), i32 %6, i32 %5) #6, !dbg !4181
  %asap = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %1, i64 %indvars.iv, i32 0, !dbg !4182
  %7 = load i32, i32* %asap, align 8, !dbg !4182
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i32 %7) #6, !dbg !4183
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %1, i64 %indvars.iv, i32 1, !dbg !4184
  %8 = load i32, i32* %time, align 4, !dbg !4184
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0), i32 %8) #6, !dbg !4185
  %nreg_moves = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %1, i64 %indvars.iv, i32 3, !dbg !4186
  %9 = load i32, i32* %nreg_moves, align 8, !dbg !4186
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i64 0, i64 0), i32 %9) #6, !dbg !4187
  call void @llvm.dbg.value(metadata i32 0, metadata !4169, metadata !DIExpression()), !dbg !4174
  br label %for.cond7, !dbg !4188

for.cond7:                                        ; preds = %for.body10, %for.body
  %reg_move.0 = phi %struct.rtx_def* [ %2, %for.body ], [ %12, %for.body10 ], !dbg !4174
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body10 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4169, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.0, metadata !4168, metadata !DIExpression()), !dbg !4174
  %10 = load i32, i32* %nreg_moves, align 8, !dbg !4191
  %cmp9 = icmp slt i32 %j.0, %10, !dbg !4193
  br i1 %cmp9, label %for.body10, label %for.inc16, !dbg !4194

for.body10:                                       ; preds = %for.cond7
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !4195
  %call12 = tail call i32 @print_rtl_single(%struct._IO_FILE* nonnull %file, %struct.rtx_def* %reg_move.0) #6, !dbg !4197
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4198
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4198
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4168, metadata !DIExpression()), !dbg !4174
  %inc = add nuw nsw i32 %j.0, 1, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4169, metadata !DIExpression()), !dbg !4174
  br label %for.cond7, !dbg !4200, !llvm.loop !4201

for.inc16:                                        ; preds = %for.cond7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4203
  call void @llvm.dbg.value(metadata i32 undef, metadata !4163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4170
  br label %for.cond, !dbg !4204, !llvm.loop !4205

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !4207

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !4207
}

; Function Attrs: nounwind uwtable
define internal fastcc void @generate_prolog_epilog(%struct.partial_schedule* %ps, %struct.loop* %loop, %struct.rtx_def* %count_reg, %struct.rtx_def* %count_init) unnamed_addr #4 !dbg !4208 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !4212, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4213, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4214, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4215, metadata !DIExpression()), !dbg !4222
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !4223
  %0 = load i32, i32* %max_cycle, align 4, !dbg !4223
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !4223
  %1 = load i32, i32* %min_cycle, align 8, !dbg !4223
  %sub = sub nsw i32 %0, %1, !dbg !4223
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !4223
  %2 = load i32, i32* %ii, align 8, !dbg !4223
  %sub2 = add i32 %sub, %2, !dbg !4223
  %div = sdiv i32 %sub2, %2, !dbg !4223
  %sub4 = add nsw i32 %div, -1, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %sub4, metadata !4217, metadata !DIExpression()), !dbg !4222
  tail call void @start_sequence() #6, !dbg !4225
  br i1 true, label %if.then, label %entry.if.end15_crit_edge, !dbg !4226

entry.if.end15_crit_edge:                         ; preds = %entry
  br label %if.end15, !dbg !4226

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4219, metadata !DIExpression()), !dbg !4227
  %conv = sext i32 %sub4 to i64, !dbg !4228
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !4228
  %call5 = tail call %struct.rtx_def* @expand_simple_binop(i32 0, i32 50, %struct.rtx_def* null, %struct.rtx_def* %call, %struct.rtx_def* null, i32 1, i32 0) #6, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !4219, metadata !DIExpression()), !dbg !4227
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call5, i64 0, i32 0, !dbg !4230
  %bf.load6 = load i32, i32* %3, align 8, !dbg !4230
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !4230
  %cmp = icmp eq i32 %bf.clear7, 37, !dbg !4230
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4230

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 723, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4230
  br label %cond.end, !dbg !4230

cond.end:                                         ; preds = %if.then, %cond.true
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call5) #7, !dbg !4231
  %call10 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* null) #7, !dbg !4233
  %cmp11 = icmp eq i32 %call9, %call10, !dbg !4234
  br i1 %cmp11, label %if.end15, label %if.then13, !dbg !4235

if.then13:                                        ; preds = %cond.end
  %call14 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* null, %struct.rtx_def* %call5) #6, !dbg !4236
  br label %if.end15, !dbg !4236

if.end15:                                         ; preds = %entry.if.end15_crit_edge, %cond.end, %if.then13
  call void @llvm.dbg.value(metadata i32 0, metadata !4216, metadata !DIExpression()), !dbg !4222
  br label %for.cond, !dbg !4237

for.cond:                                         ; preds = %for.body, %if.end15
  %i.0 = phi i32 [ 0, %if.end15 ], [ %inc, %for.body ], !dbg !4239
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4216, metadata !DIExpression()), !dbg !4222
  %cmp16 = icmp slt i32 %i.0, %sub4, !dbg !4240
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4242

for.body:                                         ; preds = %for.cond
  tail call fastcc void @duplicate_insns_of_cycles(%struct.partial_schedule* %ps, i32 0, i32 %i.0, i32 1, %struct.rtx_def* null) #7, !dbg !4243
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4216, metadata !DIExpression()), !dbg !4222
  br label %for.cond, !dbg !4245, !llvm.loop !4246

for.end:                                          ; preds = %for.cond
  %call18 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4248
  call void @llvm.dbg.value(metadata %struct.edge_def* %call18, metadata !4218, metadata !DIExpression()), !dbg !4222
  %call19 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4249
  %call20 = tail call %struct.basic_block_def* @split_edge_and_insert(%struct.edge_def* %call18, %struct.rtx_def* %call19) #6, !dbg !4250
  tail call void @end_sequence() #6, !dbg !4251
  tail call void @start_sequence() #6, !dbg !4252
  call void @llvm.dbg.value(metadata i32 0, metadata !4216, metadata !DIExpression()), !dbg !4222
  br label %for.cond21, !dbg !4253

for.cond21:                                       ; preds = %for.body24, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %add25, %for.body24 ], !dbg !4255
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4216, metadata !DIExpression()), !dbg !4222
  %cmp22 = icmp slt i32 %i.1, %sub4, !dbg !4256
  br i1 %cmp22, label %for.body24, label %for.end28, !dbg !4258

for.body24:                                       ; preds = %for.cond21
  %add25 = add nuw nsw i32 %i.1, 1, !dbg !4259
  tail call fastcc void @duplicate_insns_of_cycles(%struct.partial_schedule* %ps, i32 %add25, i32 %sub4, i32 0, %struct.rtx_def* null) #7, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %add25, metadata !4216, metadata !DIExpression()), !dbg !4222
  br label %for.cond21, !dbg !4261, !llvm.loop !4262

for.end28:                                        ; preds = %for.cond21
  %call29 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !4264
  %tobool30 = icmp eq %struct.edge_def* %call29, null, !dbg !4264
  br i1 %tobool30, label %cond.true31, label %cond.end33, !dbg !4264

cond.true31:                                      ; preds = %for.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 744, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4264
  br label %cond.end33, !dbg !4264

cond.end33:                                       ; preds = %for.end28, %cond.true31
  %call35 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !4265
  call void @llvm.dbg.value(metadata %struct.edge_def* %call35, metadata !4218, metadata !DIExpression()), !dbg !4222
  %call36 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4266
  %call37 = tail call %struct.basic_block_def* @split_edge_and_insert(%struct.edge_def* %call35, %struct.rtx_def* %call36) #6, !dbg !4267
  tail call void @end_sequence() #6, !dbg !4268
  ret void, !dbg !4269
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_undo_replace_buff(%struct.undo_replace_buff_elem* %reg_move_replaces) unnamed_addr #4 !dbg !4270 {
entry:
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces, metadata !4274, metadata !DIExpression()), !dbg !4277
  br label %while.cond, !dbg !4278

while.cond:                                       ; preds = %while.body, %entry
  %reg_move_replaces.addr.0 = phi %struct.undo_replace_buff_elem* [ %reg_move_replaces, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.addr.0, metadata !4274, metadata !DIExpression()), !dbg !4277
  %tobool = icmp eq %struct.undo_replace_buff_elem* %reg_move_replaces.addr.0, null, !dbg !4278
  br i1 %tobool, label %while.end, label %while.body, !dbg !4278

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %reg_move_replaces.addr.0, metadata !4275, metadata !DIExpression()), !dbg !4279
  %next = getelementptr inbounds %struct.undo_replace_buff_elem, %struct.undo_replace_buff_elem* %reg_move_replaces.addr.0, i64 0, i32 3, !dbg !4280
  %0 = load %struct.undo_replace_buff_elem*, %struct.undo_replace_buff_elem** %next, align 8, !dbg !4280
  call void @llvm.dbg.value(metadata %struct.undo_replace_buff_elem* %0, metadata !4274, metadata !DIExpression()), !dbg !4277
  %1 = bitcast %struct.undo_replace_buff_elem* %reg_move_replaces.addr.0 to i8*, !dbg !4281
  tail call void @free(i8* nonnull %1) #6, !dbg !4282
  br label %while.cond, !dbg !4278, !llvm.loop !4283

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4285
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_partial_schedule(%struct.partial_schedule* %ps) unnamed_addr #4 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !4288, metadata !DIExpression()), !dbg !4289
  %tobool = icmp eq %struct.partial_schedule* %ps, null, !dbg !4290
  br i1 %tobool, label %return, label %if.end, !dbg !4292

if.end:                                           ; preds = %entry
  tail call fastcc void @free_ps_insns(%struct.partial_schedule* nonnull %ps) #7, !dbg !4293
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !4294
  %0 = bitcast %struct.ps_insn*** %rows to i8**, !dbg !4294
  %1 = load i8*, i8** %0, align 8, !dbg !4294
  tail call void @free(i8* %1) #6, !dbg !4295
  %2 = bitcast %struct.partial_schedule* %ps to i8*, !dbg !4296
  tail call void @free(i8* nonnull %2) #6, !dbg !4297
  br label %return, !dbg !4298

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !4298
}

declare dso_local void @free(i8*) local_unnamed_addr #1

declare dso_local void @free_ddg(%struct.ddg*) local_unnamed_addr #1

declare dso_local void @haifa_sched_finish() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !4299 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4305, metadata !DIExpression()), !dbg !4306
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !4307
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4307

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !4307
  %0 = load i32, i32* %num, align 8, !dbg !4307
  br label %cond.end, !dbg !4307

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4307
  ret i32 %cond, !dbg !4307
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @compute_jump_reg_dependencies(%struct.rtx_def* %insn, %struct.bitmap_head_def* %cond_exec, %struct.bitmap_head_def* %used, %struct.bitmap_head_def* %set) #4 !dbg !4308 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4310, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %cond_exec, metadata !4311, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %used, metadata !4312, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !4313, metadata !DIExpression()), !dbg !4314
  ret void, !dbg !4315
}

; Function Attrs: nounwind uwtable
define internal i8* @sms_print_insn(%struct.rtx_def* %insn, i32 %aligned) #4 !dbg !2183 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2185, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.value(metadata i32 %aligned, metadata !2186, metadata !DIExpression()), !dbg !4316
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4317
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4317
  %0 = load i32, i32* %rt_int, align 8, !dbg !4317
  %call = tail call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @sms_print_insn.tmp, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i32 %0) #6, !dbg !4318
  ret i8* getelementptr inbounds ([80 x i8], [80 x i8]* @sms_print_insn.tmp, i64 0, i64 0), !dbg !4319
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4320 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4324, metadata !DIExpression()), !dbg !4325
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !4326
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !4326
  ret %struct.VEC_int_heap* %0, !dbg !4326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !4327 {
entry:
  unreachable, !dbg !4334
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !4335 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4340, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !4341, metadata !DIExpression()), !dbg !4343
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4344
  %0 = load i32, i32* %num1, align 4, !dbg !4344
  %inc = add i32 %0, 1, !dbg !4344
  store i32 %inc, i32* %num1, align 4, !dbg !4344
  %idxprom = zext i32 %0 to i64, !dbg !4344
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4344
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !4342, metadata !DIExpression()), !dbg !4343
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !4344
  ret i32* %arrayidx, !dbg !4344
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !4345 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4351, metadata !DIExpression()), !dbg !4353
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !4354
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !4354
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !4354
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4354

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !4354
  br label %cond.end, !dbg !4354

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4354
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %call, metadata !4352, metadata !DIExpression()), !dbg !4353
  %cmp = icmp eq i32 %call, 0, !dbg !4355
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4357

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !4358
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !4358
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !4358

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !4358
  br label %cond.end8, !dbg !4358

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !4358
  %sub = add i32 %call, -1, !dbg !4358
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !4358
  br label %cleanup, !dbg !4359

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !4353
  ret %struct.loop* %retval.0, !dbg !4360
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4361 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4365, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4366, metadata !DIExpression()), !dbg !4367
  br label %land.end, !dbg !4368

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4368
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4368
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4368
  ret %struct.loop* %0, !dbg !4368
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4369 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4375, metadata !DIExpression()), !dbg !4376
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4377
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4377

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4377
  %0 = load i32, i32* %num, align 8, !dbg !4377
  br label %cond.end, !dbg !4377

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4377
  ret i32 %cond, !dbg !4377
}

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !4378 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4384, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4385, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !4386, metadata !DIExpression()), !dbg !4387
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !4388
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4388

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4388
  %0 = load i32, i32* %num, align 4, !dbg !4388
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4388
  br i1 %cmp, label %if.then, label %if.else, !dbg !4390

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4391
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4391
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4391
  br label %return, !dbg !4391

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4393

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !4395
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4395
  store i32 %storemerge, i32* %ptr, align 4, !dbg !4395
  ret i32 %retval.0, !dbg !4390
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !4396 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !4400, metadata !DIExpression()), !dbg !4401
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4402
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4402
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4402
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !4402
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !4402
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !4402
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4402

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !4402
  br label %cond.end, !dbg !4402

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4402
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !4402
  ret %struct.loop* %call, !dbg !4403
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !4404 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !4409, metadata !DIExpression()), !dbg !4410
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !4411
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !4411
  br i1 %tobool, label %if.end, label %if.then, !dbg !4413

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !4413
  tail call void @free(i8* nonnull %1) #6, !dbg !4411
  br label %if.end, !dbg !4411

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !4413
  ret void, !dbg !4413
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.ddg_all_sccs* @create_ddg_all_sccs(%struct.ddg*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.node_order_params* @calculate_order_params(%struct.ddg* %g, i32 %mii, i32* %pmax_asap) unnamed_addr #4 !dbg !4414 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4418, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %mii, metadata !4419, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32* %pmax_asap, metadata !4420, metadata !DIExpression()), !dbg !4440
  %num_nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !4441
  %0 = load i32, i32* %num_nodes1, align 8, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %0, metadata !4423, metadata !DIExpression()), !dbg !4440
  %conv = sext i32 %0 to i64, !dbg !4442
  %call = tail call i8* @xcalloc(i64 %conv, i64 12) #6, !dbg !4443
  %1 = bitcast i8* %call to %struct.node_order_params*, !dbg !4444
  call void @llvm.dbg.value(metadata %struct.node_order_params* %1, metadata !4425, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 0, metadata !4421, metadata !DIExpression()), !dbg !4440
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4445
  %2 = sext i32 %0 to i64, !dbg !4448
  br label %for.cond, !dbg !4448

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !4449
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !4421, metadata !DIExpression()), !dbg !4440
  %cmp = icmp slt i64 %indvars.iv5, %2, !dbg !4450
  br i1 %cmp, label %for.body, label %for.cond5.preheader, !dbg !4451

for.cond5.preheader:                              ; preds = %for.cond
  %3 = sext i32 %0 to i64, !dbg !4452
  br label %for.cond5, !dbg !4452

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %1, i64 %indvars.iv5, !dbg !4453
  %4 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4454
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %4, i64 %indvars.iv5, i32 7, i32 0, !dbg !4455
  %5 = bitcast i8** %info to %struct.node_order_params**, !dbg !4456
  store %struct.node_order_params* %arrayidx, %struct.node_order_params** %5, align 8, !dbg !4456
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !4457
  call void @llvm.dbg.value(metadata i32 undef, metadata !4421, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4440
  br label %for.cond, !dbg !4458, !llvm.loop !4459

for.cond5:                                        ; preds = %for.cond5.preheader, %for.inc52
  %indvars.iv3 = phi i64 [ 0, %for.cond5.preheader ], [ %indvars.iv.next4, %for.inc52 ], !dbg !4461
  %max_asap.0 = phi i32 [ 0, %for.cond5.preheader ], [ %cond51, %for.inc52 ], !dbg !4440
  call void @llvm.dbg.value(metadata i32 %max_asap.0, metadata !4422, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !4421, metadata !DIExpression()), !dbg !4440
  %cmp6 = icmp slt i64 %indvars.iv3, %3, !dbg !4462
  br i1 %cmp6, label %for.body8, label %for.end54, !dbg !4452

for.body8:                                        ; preds = %for.cond5
  %6 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4463
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4426, metadata !DIExpression()), !dbg !4464
  %info13 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv3, i32 7, i32 0, !dbg !4465
  %7 = bitcast i8** %info13 to %struct.node_order_params**, !dbg !4465
  %8 = load %struct.node_order_params*, %struct.node_order_params** %7, align 8, !dbg !4465
  %asap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %8, i64 0, i32 0, !dbg !4465
  store i32 0, i32* %asap, align 4, !dbg !4466
  %in = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %6, i64 %indvars.iv3, i32 3, !dbg !4467
  br label %for.cond14, !dbg !4469

for.cond14:                                       ; preds = %for.inc38, %for.body8
  %e.0.in = phi %struct.ddg_edge** [ %in, %for.body8 ], [ %next_in, %for.inc38 ]
  %e.0 = load %struct.ddg_edge*, %struct.ddg_edge** %e.0.in, align 8, !dbg !4470
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.0, metadata !4424, metadata !DIExpression()), !dbg !4440
  %tobool = icmp eq %struct.ddg_edge* %e.0, null, !dbg !4471
  br i1 %tobool, label %for.end39, label %for.body15, !dbg !4471

for.body15:                                       ; preds = %for.cond14
  %distance = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 5, !dbg !4472
  %9 = load i32, i32* %distance, align 4, !dbg !4472
  %cmp16 = icmp eq i32 %9, 0, !dbg !4475
  br i1 %cmp16, label %if.then, label %for.inc38, !dbg !4476

if.then:                                          ; preds = %for.body15
  %10 = load %struct.node_order_params*, %struct.node_order_params** %7, align 8, !dbg !4477
  %asap20 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %10, i64 0, i32 0, !dbg !4477
  %11 = load i32, i32* %asap20, align 4, !dbg !4477
  %src = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 0, !dbg !4477
  %12 = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !4477
  %info22 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %12, i64 0, i32 7, i32 0, !dbg !4477
  %13 = bitcast i8** %info22 to %struct.node_order_params**, !dbg !4477
  %14 = load %struct.node_order_params*, %struct.node_order_params** %13, align 8, !dbg !4477
  %asap23 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %14, i64 0, i32 0, !dbg !4477
  %15 = load i32, i32* %asap23, align 4, !dbg !4477
  %latency = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 4, !dbg !4477
  %16 = load i32, i32* %latency, align 8, !dbg !4477
  %add = add nsw i32 %15, %16, !dbg !4477
  %cmp24 = icmp sgt i32 %11, %add, !dbg !4477
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !4477

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4477

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4477

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %add, %cond.false ], !dbg !4477
  store i32 %cond, i32* %asap20, align 4, !dbg !4478
  br label %for.inc38, !dbg !4479

for.inc38:                                        ; preds = %for.body15, %cond.end
  %next_in = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 6, !dbg !4480
  br label %for.cond14, !dbg !4481, !llvm.loop !4482

for.end39:                                        ; preds = %for.cond14
  %17 = load %struct.node_order_params*, %struct.node_order_params** %7, align 8, !dbg !4484
  %asap42 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %17, i64 0, i32 0, !dbg !4484
  %18 = load i32, i32* %asap42, align 4, !dbg !4484
  %cmp43 = icmp sgt i32 %max_asap.0, %18, !dbg !4484
  br i1 %cmp43, label %for.inc52, label %cond.false46, !dbg !4484

cond.false46:                                     ; preds = %for.end39
  br label %for.inc52, !dbg !4484

for.inc52:                                        ; preds = %cond.false46, %for.end39
  %cond51 = phi i32 [ %18, %cond.false46 ], [ %max_asap.0, %for.end39 ], !dbg !4484
  call void @llvm.dbg.value(metadata i32 %cond51, metadata !4422, metadata !DIExpression()), !dbg !4440
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !4485
  call void @llvm.dbg.value(metadata i32 undef, metadata !4421, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4440
  br label %for.cond5, !dbg !4486, !llvm.loop !4487

for.end54:                                        ; preds = %for.cond5
  %max_asap.0.lcssa = phi i32 [ %max_asap.0, %for.cond5 ], !dbg !4440
  call void @llvm.dbg.value(metadata i32 %max_asap.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %max_asap.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %max_asap.0.lcssa, metadata !4422, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %0, metadata !4421, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4440
  %19 = sext i32 %0 to i64, !dbg !4489
  br label %for.cond55, !dbg !4489

for.cond55:                                       ; preds = %for.inc130, %for.end54
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc130 ], [ %19, %for.end54 ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !4490
  call void @llvm.dbg.value(metadata i32 undef, metadata !4421, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4440
  %cmp56 = icmp sgt i64 %indvars.iv1, 0, !dbg !4491
  br i1 %cmp56, label %for.body58, label %for.end131, !dbg !4492

for.body58:                                       ; preds = %for.cond55
  %20 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4493
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4430, metadata !DIExpression()), !dbg !4494
  %info64 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %20, i64 %indvars.iv.next2, i32 7, i32 0, !dbg !4495
  %21 = bitcast i8** %info64 to %struct.node_order_params**, !dbg !4495
  %22 = load %struct.node_order_params*, %struct.node_order_params** %21, align 8, !dbg !4495
  %alap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %22, i64 0, i32 1, !dbg !4495
  store i32 %max_asap.0.lcssa, i32* %alap, align 4, !dbg !4496
  %23 = load %struct.node_order_params*, %struct.node_order_params** %21, align 8, !dbg !4497
  %height = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %23, i64 0, i32 2, !dbg !4497
  store i32 0, i32* %height, align 4, !dbg !4498
  %out = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %20, i64 %indvars.iv.next2, i32 4, !dbg !4499
  br label %for.cond67, !dbg !4501

for.cond67:                                       ; preds = %for.inc128, %for.body58
  %e.1.in = phi %struct.ddg_edge** [ %out, %for.body58 ], [ %next_out, %for.inc128 ]
  %e.1 = load %struct.ddg_edge*, %struct.ddg_edge** %e.1.in, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.1, metadata !4424, metadata !DIExpression()), !dbg !4440
  %tobool68 = icmp eq %struct.ddg_edge* %e.1, null, !dbg !4503
  br i1 %tobool68, label %for.inc130, label %for.body69, !dbg !4503

for.body69:                                       ; preds = %for.cond67
  %distance70 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 5, !dbg !4504
  %24 = load i32, i32* %distance70, align 4, !dbg !4504
  %cmp71 = icmp eq i32 %24, 0, !dbg !4507
  br i1 %cmp71, label %if.then73, label %for.inc128, !dbg !4508

if.then73:                                        ; preds = %for.body69
  %25 = load %struct.node_order_params*, %struct.node_order_params** %21, align 8, !dbg !4509
  %alap76 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %25, i64 0, i32 1, !dbg !4509
  %26 = load i32, i32* %alap76, align 4, !dbg !4509
  %dest = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 1, !dbg !4509
  %27 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !4509
  %info78 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %27, i64 0, i32 7, i32 0, !dbg !4509
  %28 = bitcast i8** %info78 to %struct.node_order_params**, !dbg !4509
  %29 = load %struct.node_order_params*, %struct.node_order_params** %28, align 8, !dbg !4509
  %alap79 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %29, i64 0, i32 1, !dbg !4509
  %30 = load i32, i32* %alap79, align 4, !dbg !4509
  %latency80 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 4, !dbg !4509
  %31 = load i32, i32* %latency80, align 8, !dbg !4509
  %sub81 = sub nsw i32 %30, %31, !dbg !4509
  %cmp82 = icmp slt i32 %26, %sub81, !dbg !4509
  br i1 %cmp82, label %cond.true84, label %cond.false88, !dbg !4509

cond.true84:                                      ; preds = %if.then73
  br label %cond.end95, !dbg !4509

cond.false88:                                     ; preds = %if.then73
  br label %cond.end95, !dbg !4509

cond.end95:                                       ; preds = %cond.false88, %cond.true84
  %cond96 = phi i32 [ %26, %cond.true84 ], [ %sub81, %cond.false88 ], !dbg !4509
  store i32 %cond96, i32* %alap76, align 4, !dbg !4511
  %32 = load %struct.node_order_params*, %struct.node_order_params** %21, align 8, !dbg !4512
  %height102 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %32, i64 0, i32 2, !dbg !4512
  %33 = load i32, i32* %height102, align 4, !dbg !4512
  %34 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !4512
  %info105 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %34, i64 0, i32 7, i32 0, !dbg !4512
  %35 = bitcast i8** %info105 to %struct.node_order_params**, !dbg !4512
  %36 = load %struct.node_order_params*, %struct.node_order_params** %35, align 8, !dbg !4512
  %height106 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %36, i64 0, i32 2, !dbg !4512
  %37 = load i32, i32* %height106, align 4, !dbg !4512
  %38 = load i32, i32* %latency80, align 8, !dbg !4512
  %add108 = add nsw i32 %37, %38, !dbg !4512
  %cmp109 = icmp sgt i32 %33, %add108, !dbg !4512
  br i1 %cmp109, label %cond.true111, label %cond.false115, !dbg !4512

cond.true111:                                     ; preds = %cond.end95
  br label %cond.end122, !dbg !4512

cond.false115:                                    ; preds = %cond.end95
  br label %cond.end122, !dbg !4512

cond.end122:                                      ; preds = %cond.false115, %cond.true111
  %cond123 = phi i32 [ %33, %cond.true111 ], [ %add108, %cond.false115 ], !dbg !4512
  store i32 %cond123, i32* %height102, align 4, !dbg !4513
  br label %for.inc128, !dbg !4514

for.inc128:                                       ; preds = %for.body69, %cond.end122
  %next_out = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 7, !dbg !4515
  br label %for.cond67, !dbg !4516, !llvm.loop !4517

for.inc130:                                       ; preds = %for.cond67
  call void @llvm.dbg.value(metadata i32 undef, metadata !4421, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4440
  br label %for.cond55, !dbg !4519, !llvm.loop !4520

for.end131:                                       ; preds = %for.cond55
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4522
  %tobool132 = icmp eq %struct._IO_FILE* %39, null, !dbg !4522
  br i1 %tobool132, label %if.end156, label %if.then133, !dbg !4523

if.then133:                                       ; preds = %for.end131
  %call134 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !4524
  call void @llvm.dbg.value(metadata i32 0, metadata !4421, metadata !DIExpression()), !dbg !4440
  %40 = sext i32 %0 to i64, !dbg !4525
  br label %for.cond135, !dbg !4525

for.cond135:                                      ; preds = %for.body138, %if.then133
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body138 ], [ 0, %if.then133 ], !dbg !4526
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4421, metadata !DIExpression()), !dbg !4440
  %cmp136 = icmp slt i64 %indvars.iv, %40, !dbg !4527
  br i1 %cmp136, label %for.body138, label %if.end156.loopexit, !dbg !4528

for.body138:                                      ; preds = %for.cond135
  %41 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !4529
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4434, metadata !DIExpression()), !dbg !4530
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4531
  %info144 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %41, i64 %indvars.iv, i32 7, i32 0, !dbg !4532
  %43 = bitcast i8** %info144 to %struct.node_order_params**, !dbg !4532
  %44 = load %struct.node_order_params*, %struct.node_order_params** %43, align 8, !dbg !4532
  %asap145 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %44, i64 0, i32 0, !dbg !4532
  %45 = load i32, i32* %asap145, align 4, !dbg !4532
  %alap148 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %44, i64 0, i32 1, !dbg !4533
  %46 = load i32, i32* %alap148, align 4, !dbg !4533
  %height151 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %44, i64 0, i32 2, !dbg !4534
  %47 = load i32, i32* %height151, align 4, !dbg !4534
  %48 = trunc i64 %indvars.iv to i32, !dbg !4535
  %call152 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i64 0, i64 0), i32 %48, i32 %45, i32 %46, i32 %47) #6, !dbg !4535
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4536
  call void @llvm.dbg.value(metadata i32 undef, metadata !4421, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4440
  br label %for.cond135, !dbg !4537, !llvm.loop !4538

if.end156.loopexit:                               ; preds = %for.cond135
  br label %if.end156, !dbg !4540

if.end156:                                        ; preds = %if.end156.loopexit, %for.end131
  store i32 %max_asap.0.lcssa, i32* %pmax_asap, align 4, !dbg !4540
  ret %struct.node_order_params* %1, !dbg !4541
}

declare dso_local void @print_sccs(%struct._IO_FILE*, %struct.ddg_all_sccs*, %struct.ddg*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @order_nodes_of_sccs(%struct.ddg_all_sccs* %all_sccs, i32* %node_order) unnamed_addr #4 !dbg !4542 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg_all_sccs* %all_sccs, metadata !4546, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.value(metadata i32* %node_order, metadata !4547, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.value(metadata i32 0, metadata !4549, metadata !DIExpression()), !dbg !4560
  %ddg = getelementptr inbounds %struct.ddg_all_sccs, %struct.ddg_all_sccs* %all_sccs, i64 0, i32 2, !dbg !4561
  %0 = load %struct.ddg*, %struct.ddg** %ddg, align 8, !dbg !4561
  call void @llvm.dbg.value(metadata %struct.ddg* %0, metadata !4550, metadata !DIExpression()), !dbg !4560
  %num_nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %0, i64 0, i32 1, !dbg !4562
  %1 = load i32, i32* %num_nodes1, align 8, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %1, metadata !4551, metadata !DIExpression()), !dbg !4560
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !4563
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !4552, metadata !DIExpression()), !dbg !4560
  %call2 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !4564
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call2, metadata !4553, metadata !DIExpression()), !dbg !4560
  %call3 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !4565
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call3, metadata !4554, metadata !DIExpression()), !dbg !4560
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !4566
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !4555, metadata !DIExpression()), !dbg !4560
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !4567
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call4) #6, !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4548, metadata !DIExpression()), !dbg !4560
  %num_sccs = getelementptr inbounds %struct.ddg_all_sccs, %struct.ddg_all_sccs* %all_sccs, i64 0, i32 1, !dbg !4569
  %sccs = getelementptr inbounds %struct.ddg_all_sccs, %struct.ddg_all_sccs* %all_sccs, i64 0, i32 0, !dbg !4570
  br label %for.cond, !dbg !4571

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4572
  %pos.0 = phi i32 [ %call9, %for.body ], [ 0, %entry ], !dbg !4560
  call void @llvm.dbg.value(metadata i32 %pos.0, metadata !4549, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4548, metadata !DIExpression()), !dbg !4560
  %2 = load i32, i32* %num_sccs, align 8, !dbg !4573
  %3 = sext i32 %2 to i64, !dbg !4574
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !4574
  br i1 %cmp, label %for.body, label %while.cond.preheader, !dbg !4575

while.cond.preheader:                             ; preds = %for.cond
  %pos.0.lcssa = phi i32 [ %pos.0, %for.cond ], !dbg !4560
  call void @llvm.dbg.value(metadata i32 %pos.0.lcssa, metadata !4549, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.value(metadata i32 %pos.0.lcssa, metadata !4549, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.value(metadata i32 %pos.0.lcssa, metadata !4549, metadata !DIExpression()), !dbg !4560
  br label %while.cond, !dbg !4576

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ddg_scc**, %struct.ddg_scc*** %sccs, align 8, !dbg !4577
  %arrayidx = getelementptr inbounds %struct.ddg_scc*, %struct.ddg_scc** %4, i64 %indvars.iv, !dbg !4578
  %5 = load %struct.ddg_scc*, %struct.ddg_scc** %arrayidx, align 8, !dbg !4578
  call void @llvm.dbg.value(metadata %struct.ddg_scc* %5, metadata !4556, metadata !DIExpression()), !dbg !4570
  %nodes = getelementptr inbounds %struct.ddg_scc, %struct.ddg_scc* %5, i64 0, i32 0, !dbg !4579
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %nodes, align 8, !dbg !4579
  %call5 = tail call i32 @find_nodes_on_paths(%struct.simple_bitmap_def* %call2, %struct.ddg* %0, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %6) #6, !dbg !4580
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %nodes, align 8, !dbg !4581
  tail call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %7, %struct.simple_bitmap_def* %call2) #6, !dbg !4582
  %8 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %nodes, align 8, !dbg !4583
  %call8 = tail call i32 @find_nodes_on_paths(%struct.simple_bitmap_def* %call2, %struct.ddg* %0, %struct.simple_bitmap_def* %8, %struct.simple_bitmap_def* %call) #6, !dbg !4584
  tail call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %call2) #6, !dbg !4585
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %call) #6, !dbg !4586
  %call9 = tail call fastcc i32 @order_nodes_in_scc(%struct.ddg* %0, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call3, i32* %node_order, i32 %pos.0) #7, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %call9, metadata !4549, metadata !DIExpression()), !dbg !4560
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4588
  call void @llvm.dbg.value(metadata i32 undef, metadata !4548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4560
  br label %for.cond, !dbg !4589, !llvm.loop !4590

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %pos.1 = phi i32 [ %call12, %while.body ], [ %pos.0.lcssa, %while.cond.preheader ], !dbg !4560
  call void @llvm.dbg.value(metadata i32 %pos.1, metadata !4549, metadata !DIExpression()), !dbg !4560
  %9 = load i32, i32* %num_nodes1, align 8, !dbg !4592
  %cmp11 = icmp slt i32 %pos.1, %9, !dbg !4593
  br i1 %cmp11, label %while.body, label %while.end, !dbg !4576

while.body:                                       ; preds = %while.cond
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def* %call4, %struct.simple_bitmap_def* %call) #6, !dbg !4594
  %call12 = tail call fastcc i32 @order_nodes_in_scc(%struct.ddg* %0, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call3, i32* %node_order, i32 %pos.1) #7, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %call12, metadata !4549, metadata !DIExpression()), !dbg !4560
  br label %while.cond, !dbg !4576, !llvm.loop !4597

while.end:                                        ; preds = %while.cond
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !4599
  %10 = load i8*, i8** %popcount, align 8, !dbg !4599
  tail call void @free(i8* %10) #6, !dbg !4599
  %11 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !4599
  tail call void @free(i8* %11) #6, !dbg !4599
  %popcount13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call2, i64 0, i32 0, !dbg !4600
  %12 = load i8*, i8** %popcount13, align 8, !dbg !4600
  tail call void @free(i8* %12) #6, !dbg !4600
  %13 = bitcast %struct.simple_bitmap_def* %call2 to i8*, !dbg !4600
  tail call void @free(i8* %13) #6, !dbg !4600
  %popcount14 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call3, i64 0, i32 0, !dbg !4601
  %14 = load i8*, i8** %popcount14, align 8, !dbg !4601
  tail call void @free(i8* %14) #6, !dbg !4601
  %15 = bitcast %struct.simple_bitmap_def* %call3 to i8*, !dbg !4601
  tail call void @free(i8* %15) #6, !dbg !4601
  %popcount15 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !4602
  %16 = load i8*, i8** %popcount15, align 8, !dbg !4602
  tail call void @free(i8* %16) #6, !dbg !4602
  %17 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !4602
  tail call void @free(i8* %17) #6, !dbg !4602
  ret void, !dbg !4603
}

declare dso_local void @free_ddg_all_sccs(%struct.ddg_all_sccs*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @check_nodes_order(i32* %node_order, i32 %num_nodes) unnamed_addr #4 !dbg !4604 {
entry:
  call void @llvm.dbg.value(metadata i32* %node_order, metadata !4608, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata i32 %num_nodes, metadata !4609, metadata !DIExpression()), !dbg !4616
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %num_nodes) #6, !dbg !4617
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !4611, metadata !DIExpression()), !dbg !4616
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !4618
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4619
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4619
  br i1 %tobool, label %if.end, label %if.then, !dbg !4621

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !4622
  br label %if.end, !dbg !4622

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !4610, metadata !DIExpression()), !dbg !4616
  %1 = sext i32 %num_nodes to i64, !dbg !4623
  br label %for.cond, !dbg !4623

for.cond:                                         ; preds = %cond.end, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end ], [ 0, %if.end ], !dbg !4624
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4610, metadata !DIExpression()), !dbg !4616
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !4625
  br i1 %cmp, label %for.body, label %for.end, !dbg !4626

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %node_order, i64 %indvars.iv, !dbg !4627
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %2, metadata !4612, metadata !DIExpression()), !dbg !4628
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4629
  %tobool2 = icmp eq %struct._IO_FILE* %3, null, !dbg !4629
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !4631

if.then3:                                         ; preds = %for.body
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i32 %2) #6, !dbg !4632
  br label %if.end5, !dbg !4632

if.end5:                                          ; preds = %for.body, %if.then3
  %cmp6 = icmp slt i32 %2, %num_nodes, !dbg !4633
  %cmp7 = icmp sgt i32 %2, -1, !dbg !4633
  %or.cond = and i1 %cmp6, %cmp7, !dbg !4633
  br i1 %or.cond, label %land.lhs.true8, label %cond.true, !dbg !4633

land.lhs.true8:                                   ; preds = %if.end5
  %div = lshr i32 %2, 6, !dbg !4633
  %idxprom9 = zext i32 %div to i64, !dbg !4633
  %arrayidx10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 3, i64 %idxprom9, !dbg !4633
  %4 = load i64, i64* %arrayidx10, align 8, !dbg !4633
  %rem = and i32 %2, 63, !dbg !4633
  %sh_prom = zext i32 %rem to i64, !dbg !4633
  %5 = shl i64 1, %sh_prom, !dbg !4633
  %6 = and i64 %4, %5, !dbg !4633
  %tobool11 = icmp eq i64 %6, 0, !dbg !4633
  br i1 %tobool11, label %cond.end, label %cond.true, !dbg !4633

cond.true:                                        ; preds = %land.lhs.true8, %if.end5
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 2079, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4633
  br label %cond.end, !dbg !4633

cond.end:                                         ; preds = %land.lhs.true8, %cond.true
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call, i32 %2) #7, !dbg !4634
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4635
  call void @llvm.dbg.value(metadata i32 undef, metadata !4610, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4616
  br label %for.cond, !dbg !4636, !llvm.loop !4637

for.end:                                          ; preds = %for.cond
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4639
  %tobool12 = icmp eq %struct._IO_FILE* %7, null, !dbg !4639
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4641

if.then13:                                        ; preds = %for.end
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4642
  br label %if.end15, !dbg !4642

if.end15:                                         ; preds = %for.end, %if.then13
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !4643
  %8 = load i8*, i8** %popcount, align 8, !dbg !4643
  tail call void @free(i8* %8) #6, !dbg !4643
  %9 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !4643
  tail call void @free(i8* %9) #6, !dbg !4643
  ret void, !dbg !4644
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #1

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local i32 @find_nodes_on_paths(%struct.simple_bitmap_def*, %struct.ddg*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_a_or_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_difference(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @order_nodes_in_scc(%struct.ddg* %g, %struct.simple_bitmap_def* %nodes_ordered, %struct.simple_bitmap_def* %scc, i32* %node_order, i32 %pos) unnamed_addr #4 !dbg !4645 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4649, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %nodes_ordered, metadata !4650, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %scc, metadata !4651, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32* %node_order, metadata !4652, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %pos, metadata !4653, metadata !DIExpression()), !dbg !4670
  %num_nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 1, !dbg !4671
  %0 = load i32, i32* %num_nodes1, align 8, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %0, metadata !4655, metadata !DIExpression()), !dbg !4670
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !4672
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !4656, metadata !DIExpression()), !dbg !4670
  %call2 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !4673
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call2, metadata !4657, metadata !DIExpression()), !dbg !4670
  %call3 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !4674
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call3, metadata !4658, metadata !DIExpression()), !dbg !4670
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !4675
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !4659, metadata !DIExpression()), !dbg !4670
  %call5 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call5, metadata !4660, metadata !DIExpression()), !dbg !4670
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !4677
  tail call void @find_predecessors(%struct.simple_bitmap_def* %call4, %struct.ddg* %g, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4678
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call5) #6, !dbg !4679
  tail call void @find_successors(%struct.simple_bitmap_def* %call5, %struct.ddg* %g, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4680
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call2) #6, !dbg !4681
  %call6 = tail call zeroext i8 @sbitmap_a_and_b_cg(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %call4, %struct.simple_bitmap_def* %scc) #6, !dbg !4682
  %tobool = icmp eq i8 %call6, 0, !dbg !4682
  br i1 %tobool, label %if.else, label %if.then, !dbg !4683

if.then:                                          ; preds = %entry
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call2) #6, !dbg !4684
  call void @llvm.dbg.value(metadata i32 0, metadata !4654, metadata !DIExpression()), !dbg !4670
  br label %if.end14, !dbg !4686

if.else:                                          ; preds = %entry
  %call7 = tail call zeroext i8 @sbitmap_a_and_b_cg(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %call5, %struct.simple_bitmap_def* %scc) #6, !dbg !4687
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4687
  br i1 %tobool8, label %if.else10, label %if.then9, !dbg !4688

if.then9:                                         ; preds = %if.else
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call2) #6, !dbg !4689
  call void @llvm.dbg.value(metadata i32 1, metadata !4654, metadata !DIExpression()), !dbg !4670
  br label %if.end14, !dbg !4691

if.else10:                                        ; preds = %if.else
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !4692
  %call11 = tail call fastcc i32 @find_max_asap(%struct.ddg* %g, %struct.simple_bitmap_def* %scc) #7, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %call11, metadata !4661, metadata !DIExpression()), !dbg !4695
  %cmp = icmp sgt i32 %call11, -1, !dbg !4696
  br i1 %cmp, label %if.then12, label %if.end14, !dbg !4697

if.then12:                                        ; preds = %if.else10
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call, i32 %call11) #7, !dbg !4698
  br label %if.end14, !dbg !4698

if.end14:                                         ; preds = %if.then9, %if.then12, %if.else10, %if.then
  %dir.1 = phi i32 [ 0, %if.then ], [ 1, %if.then9 ], [ 0, %if.then12 ], [ 0, %if.else10 ], !dbg !4699
  call void @llvm.dbg.value(metadata i32 %dir.1, metadata !4654, metadata !DIExpression()), !dbg !4670
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call3) #6, !dbg !4700
  %nodes35 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4701
  br label %while.cond, !dbg !4705

while.cond:                                       ; preds = %if.end43, %if.end14
  %pos.addr.0 = phi i32 [ %pos, %if.end14 ], [ %pos.addr.3, %if.end43 ]
  %dir.2 = phi i32 [ %dir.1, %if.end14 ], [ %dir.3, %if.end43 ], !dbg !4670
  call void @llvm.dbg.value(metadata i32 %dir.2, metadata !4654, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %pos.addr.0, metadata !4653, metadata !DIExpression()), !dbg !4670
  %call15 = tail call i32 @sbitmap_equal(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call3) #6, !dbg !4706
  %tobool16 = icmp eq i32 %call15, 0, !dbg !4707
  br i1 %tobool16, label %while.body, label %while.end44, !dbg !4705

while.body:                                       ; preds = %while.cond
  %cmp17 = icmp eq i32 %dir.2, 1, !dbg !4708
  br i1 %cmp17, label %while.cond19.preheader, label %while.cond29.preheader, !dbg !4709

while.cond29.preheader:                           ; preds = %while.body
  %1 = sext i32 %pos.addr.0 to i64, !dbg !4710
  br label %while.cond29, !dbg !4710

while.cond19.preheader:                           ; preds = %while.body
  %2 = sext i32 %pos.addr.0 to i64, !dbg !4711
  br label %while.cond19, !dbg !4711

while.cond19:                                     ; preds = %while.cond19.preheader, %while.body23
  %indvars.iv1 = phi i64 [ %2, %while.cond19.preheader ], [ %indvars.iv.next2, %while.body23 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4653, metadata !DIExpression()), !dbg !4670
  %call20 = tail call i32 @sbitmap_equal(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call3) #6, !dbg !4713
  %tobool21 = icmp eq i32 %call20, 0, !dbg !4714
  br i1 %tobool21, label %while.body23, label %while.end, !dbg !4711

while.body23:                                     ; preds = %while.cond19
  %call24 = tail call fastcc i32 @find_max_hv_min_mob(%struct.ddg* %g, %struct.simple_bitmap_def* %call) #7, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %call24, metadata !4665, metadata !DIExpression()), !dbg !4717
  %3 = load %struct.ddg_node*, %struct.ddg_node** %nodes35, align 8, !dbg !4718
  %idxprom = sext i32 %call24 to i64, !dbg !4719
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4667, metadata !DIExpression()), !dbg !4717
  %indvars.iv.next2 = add i64 %indvars.iv1, 1, !dbg !4720
  call void @llvm.dbg.value(metadata i32 undef, metadata !4653, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4670
  %arrayidx26 = getelementptr inbounds i32, i32* %node_order, i64 %indvars.iv1, !dbg !4721
  store i32 %call24, i32* %arrayidx26, align 4, !dbg !4722
  %successors27 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 %idxprom, i32 5, !dbg !4723
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %successors27, align 8, !dbg !4723
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %4, metadata !4669, metadata !DIExpression()), !dbg !4717
  tail call void @sbitmap_a_and_b(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %4, %struct.simple_bitmap_def* %scc) #6, !dbg !4724
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4725
  tail call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call2) #6, !dbg !4726
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call, i32 %call24) #7, !dbg !4727
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %nodes_ordered, i32 %call24) #7, !dbg !4728
  br label %while.cond19, !dbg !4711, !llvm.loop !4729

while.end:                                        ; preds = %while.cond19
  %indvars.iv1.lcssa = phi i64 [ %indvars.iv1, %while.cond19 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv1.lcssa, metadata !4653, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 0, metadata !4654, metadata !DIExpression()), !dbg !4670
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !4731
  tail call void @find_predecessors(%struct.simple_bitmap_def* %call4, %struct.ddg* %g, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4732
  tail call void @sbitmap_a_and_b(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call4, %struct.simple_bitmap_def* %scc) #6, !dbg !4733
  br label %if.end43, !dbg !4734

while.cond29:                                     ; preds = %while.cond29.preheader, %while.body33
  %indvars.iv = phi i64 [ %1, %while.cond29.preheader ], [ %indvars.iv.next, %while.body33 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4653, metadata !DIExpression()), !dbg !4670
  %call30 = tail call i32 @sbitmap_equal(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call3) #6, !dbg !4735
  %tobool31 = icmp eq i32 %call30, 0, !dbg !4736
  br i1 %tobool31, label %while.body33, label %while.end42, !dbg !4710

while.body33:                                     ; preds = %while.cond29
  %call34 = tail call fastcc i32 @find_max_dv_min_mob(%struct.ddg* %g, %struct.simple_bitmap_def* %call) #7, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %call34, metadata !4665, metadata !DIExpression()), !dbg !4717
  %5 = load %struct.ddg_node*, %struct.ddg_node** %nodes35, align 8, !dbg !4738
  %idxprom36 = sext i32 %call34 to i64, !dbg !4739
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4667, metadata !DIExpression()), !dbg !4717
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !4740
  call void @llvm.dbg.value(metadata i32 undef, metadata !4653, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4670
  %arrayidx40 = getelementptr inbounds i32, i32* %node_order, i64 %indvars.iv, !dbg !4741
  store i32 %call34, i32* %arrayidx40, align 4, !dbg !4742
  %predecessors41 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %5, i64 %idxprom36, i32 6, !dbg !4743
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %predecessors41, align 8, !dbg !4743
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %6, metadata !4668, metadata !DIExpression()), !dbg !4717
  tail call void @sbitmap_a_and_b(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %6, %struct.simple_bitmap_def* %scc) #6, !dbg !4744
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4745
  tail call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call2) #6, !dbg !4746
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call, i32 %call34) #7, !dbg !4747
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %nodes_ordered, i32 %call34) #7, !dbg !4748
  br label %while.cond29, !dbg !4710, !llvm.loop !4749

while.end42:                                      ; preds = %while.cond29
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %while.cond29 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !4653, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 1, metadata !4654, metadata !DIExpression()), !dbg !4670
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call5) #6, !dbg !4751
  tail call void @find_successors(%struct.simple_bitmap_def* %call5, %struct.ddg* %g, %struct.simple_bitmap_def* %nodes_ordered) #6, !dbg !4752
  tail call void @sbitmap_a_and_b(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %call5, %struct.simple_bitmap_def* %scc) #6, !dbg !4753
  br label %if.end43

if.end43:                                         ; preds = %while.end42, %while.end
  %pos.addr.3.in = phi i64 [ %indvars.iv1.lcssa, %while.end ], [ %indvars.iv.lcssa, %while.end42 ]
  %dir.3 = phi i32 [ 0, %while.end ], [ 1, %while.end42 ], !dbg !4754
  %pos.addr.3 = trunc i64 %pos.addr.3.in to i32, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %dir.3, metadata !4654, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %pos.addr.3, metadata !4653, metadata !DIExpression()), !dbg !4670
  br label %while.cond, !dbg !4705, !llvm.loop !4755

while.end44:                                      ; preds = %while.cond
  %pos.addr.0.lcssa = phi i32 [ %pos.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata i32 %pos.addr.0.lcssa, metadata !4653, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %pos.addr.0.lcssa, metadata !4653, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %pos.addr.0.lcssa, metadata !4653, metadata !DIExpression()), !dbg !4670
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call2, i64 0, i32 0, !dbg !4757
  %7 = load i8*, i8** %popcount, align 8, !dbg !4757
  tail call void @free(i8* %7) #6, !dbg !4757
  %8 = bitcast %struct.simple_bitmap_def* %call2 to i8*, !dbg !4757
  tail call void @free(i8* %8) #6, !dbg !4757
  %popcount45 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !4758
  %9 = load i8*, i8** %popcount45, align 8, !dbg !4758
  tail call void @free(i8* %9) #6, !dbg !4758
  %10 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !4758
  tail call void @free(i8* %10) #6, !dbg !4758
  %popcount46 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call3, i64 0, i32 0, !dbg !4759
  %11 = load i8*, i8** %popcount46, align 8, !dbg !4759
  tail call void @free(i8* %11) #6, !dbg !4759
  %12 = bitcast %struct.simple_bitmap_def* %call3 to i8*, !dbg !4759
  tail call void @free(i8* %12) #6, !dbg !4759
  %popcount47 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !4760
  %13 = load i8*, i8** %popcount47, align 8, !dbg !4760
  tail call void @free(i8* %13) #6, !dbg !4760
  %14 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !4760
  tail call void @free(i8* %14) #6, !dbg !4760
  %popcount48 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call5, i64 0, i32 0, !dbg !4761
  %15 = load i8*, i8** %popcount48, align 8, !dbg !4761
  tail call void @free(i8* %15) #6, !dbg !4761
  %16 = bitcast %struct.simple_bitmap_def* %call5 to i8*, !dbg !4761
  tail call void @free(i8* %16) #6, !dbg !4761
  ret i32 %pos.addr.0.lcssa, !dbg !4762
}

declare dso_local void @find_predecessors(%struct.simple_bitmap_def*, %struct.ddg*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @find_successors(%struct.simple_bitmap_def*, %struct.ddg*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @sbitmap_a_and_b_cg(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_max_asap(%struct.ddg* %g, %struct.simple_bitmap_def* %nodes) unnamed_addr #4 !dbg !4763 {
entry:
  %u = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4767, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %nodes, metadata !4768, metadata !DIExpression()), !dbg !4777
  %0 = bitcast i32* %u to i8*, !dbg !4778
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4769, metadata !DIExpression()), !dbg !4777
  store i32 0, i32* %u, align 4, !dbg !4779
  call void @llvm.dbg.value(metadata i32 -1, metadata !4770, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 -1, metadata !4771, metadata !DIExpression()), !dbg !4777
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4780
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4780
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4772, metadata !DIExpression(DW_OP_deref)), !dbg !4777
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %nodes, i32 0) #7, !dbg !4781
  %nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4782
  br label %for.cond, !dbg !4781

for.cond:                                         ; preds = %for.inc, %entry
  %max_asap.0 = phi i32 [ -1, %entry ], [ %max_asap.1, %for.inc ], !dbg !4777
  %result.0 = phi i32 [ -1, %entry ], [ %result.1, %for.inc ], !dbg !4777
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !4771, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %max_asap.0, metadata !4770, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32* %u, metadata !4769, metadata !DIExpression(DW_OP_deref)), !dbg !4777
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4772, metadata !DIExpression(DW_OP_deref)), !dbg !4777
  %call = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %u) #7, !dbg !4783
  %tobool = icmp eq i8 %call, 0, !dbg !4781
  br i1 %tobool, label %for.end, label %for.body, !dbg !4781

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ddg_node*, %struct.ddg_node** %nodes1, align 8, !dbg !4784
  %3 = load i32, i32* %u, align 4, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %3, metadata !4769, metadata !DIExpression()), !dbg !4777
  %idxprom = zext i32 %3 to i64, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4773, metadata !DIExpression()), !dbg !4782
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom, i32 7, i32 0, !dbg !4787
  %4 = bitcast i8** %info to %struct.node_order_params**, !dbg !4787
  %5 = load %struct.node_order_params*, %struct.node_order_params** %4, align 8, !dbg !4787
  %asap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 0, !dbg !4787
  %6 = load i32, i32* %asap, align 4, !dbg !4787
  %cmp = icmp slt i32 %max_asap.0, %6, !dbg !4789
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4790

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %6, metadata !4770, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %3, metadata !4769, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %3, metadata !4771, metadata !DIExpression()), !dbg !4777
  br label %for.inc, !dbg !4791

for.inc:                                          ; preds = %for.body, %if.then
  %max_asap.1 = phi i32 [ %6, %if.then ], [ %max_asap.0, %for.body ], !dbg !4777
  %result.1 = phi i32 [ %3, %if.then ], [ %result.0, %for.body ], !dbg !4777
  call void @llvm.dbg.value(metadata i32 %result.1, metadata !4771, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %max_asap.1, metadata !4770, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4772, metadata !DIExpression(DW_OP_deref)), !dbg !4777
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4783
  br label %for.cond, !dbg !4783, !llvm.loop !4793

for.end:                                          ; preds = %for.cond
  %result.0.lcssa = phi i32 [ %result.0, %for.cond ], !dbg !4777
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4771, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4771, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4771, metadata !DIExpression()), !dbg !4777
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4795
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4795
  ret i32 %result.0.lcssa, !dbg !4796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4797 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4801, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4802, metadata !DIExpression()), !dbg !4806
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4807
  %0 = load i8*, i8** %popcount, align 8, !dbg !4807
  %tobool = icmp eq i8* %0, null, !dbg !4808
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4809

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4810
  %.pre2 = zext i32 %.pre to i64, !dbg !4811
  %.pre3 = shl i64 1, %.pre2, !dbg !4811
  %.pre4 = lshr i32 %bitno, 6, !dbg !4812
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4813
  br label %if.end7, !dbg !4809

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4814
  %idxprom = zext i32 %div to i64, !dbg !4814
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4814
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4814
  %rem = and i32 %bitno, 63, !dbg !4814
  %sh_prom = zext i32 %rem to i64, !dbg !4814
  %2 = shl i64 1, %sh_prom, !dbg !4815
  %3 = and i64 %1, %2, !dbg !4815
  %tobool1 = icmp eq i64 %3, 0, !dbg !4815
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !4817

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4818
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4819
  %inc = add i8 %4, 1, !dbg !4819
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !4819
  br label %if.end7, !dbg !4818

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4813
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4811
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4813
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4820
  %or = or i64 %5, %shl.pre-phi, !dbg !4820
  store i64 %or, i64* %arrayidx13, align 8, !dbg !4820
  ret void, !dbg !4821
}

declare dso_local i32 @sbitmap_equal(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_max_hv_min_mob(%struct.ddg* %g, %struct.simple_bitmap_def* %nodes) unnamed_addr #4 !dbg !4822 {
entry:
  %u = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4824, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %nodes, metadata !4825, metadata !DIExpression()), !dbg !4835
  %0 = bitcast i32* %u to i8*, !dbg !4836
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4836
  call void @llvm.dbg.value(metadata i32 0, metadata !4826, metadata !DIExpression()), !dbg !4835
  store i32 0, i32* %u, align 4, !dbg !4837
  call void @llvm.dbg.value(metadata i32 -1, metadata !4827, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !4828, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 -1, metadata !4829, metadata !DIExpression()), !dbg !4835
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4838
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4838
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4830, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %nodes, i32 0) #7, !dbg !4839
  %nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4840
  br label %for.cond, !dbg !4839

for.cond:                                         ; preds = %for.inc, %entry
  %max_hv.0 = phi i32 [ -1, %entry ], [ %max_hv.1, %for.inc ], !dbg !4835
  %min_mob.0 = phi i32 [ 2147483647, %entry ], [ %min_mob.2, %for.inc ], !dbg !4835
  %result.0 = phi i32 [ -1, %entry ], [ %result.2, %for.inc ], !dbg !4835
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !4829, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %min_mob.0, metadata !4828, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %max_hv.0, metadata !4827, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32* %u, metadata !4826, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4830, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  %call = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %u) #7, !dbg !4841
  %tobool = icmp eq i8 %call, 0, !dbg !4839
  br i1 %tobool, label %for.end, label %for.body, !dbg !4839

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ddg_node*, %struct.ddg_node** %nodes1, align 8, !dbg !4842
  %3 = load i32, i32* %u, align 4, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %3, metadata !4826, metadata !DIExpression()), !dbg !4835
  %idxprom = zext i32 %3 to i64, !dbg !4844
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4831, metadata !DIExpression()), !dbg !4840
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom, i32 7, i32 0, !dbg !4845
  %4 = bitcast i8** %info to %struct.node_order_params**, !dbg !4845
  %5 = load %struct.node_order_params*, %struct.node_order_params** %4, align 8, !dbg !4845
  %height = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 2, !dbg !4845
  %6 = load i32, i32* %height, align 4, !dbg !4845
  %cmp = icmp slt i32 %max_hv.0, %6, !dbg !4847
  br i1 %cmp, label %if.then, label %if.else, !dbg !4848

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %6, metadata !4827, metadata !DIExpression()), !dbg !4835
  %alap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 1, !dbg !4849
  %7 = load i32, i32* %alap, align 4, !dbg !4849
  %asap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 0, !dbg !4849
  %8 = load i32, i32* %asap, align 4, !dbg !4849
  %sub = sub nsw i32 %7, %8, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4828, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %3, metadata !4826, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %3, metadata !4829, metadata !DIExpression()), !dbg !4835
  br label %for.inc, !dbg !4851

if.else:                                          ; preds = %for.body
  %cmp12 = icmp eq i32 %max_hv.0, %6, !dbg !4852
  br i1 %cmp12, label %land.lhs.true, label %for.inc, !dbg !4854

land.lhs.true:                                    ; preds = %if.else
  %alap15 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 1, !dbg !4855
  %9 = load i32, i32* %alap15, align 4, !dbg !4855
  %asap18 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 0, !dbg !4855
  %10 = load i32, i32* %asap18, align 4, !dbg !4855
  %sub19 = sub nsw i32 %9, %10, !dbg !4855
  %cmp20 = icmp sgt i32 %min_mob.0, %sub19, !dbg !4856
  br i1 %cmp20, label %if.then21, label %for.inc, !dbg !4857

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 %sub19, metadata !4828, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %3, metadata !4826, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %3, metadata !4829, metadata !DIExpression()), !dbg !4835
  br label %for.inc, !dbg !4858

for.inc:                                          ; preds = %if.then, %if.then21, %land.lhs.true, %if.else
  %max_hv.1 = phi i32 [ %6, %if.then ], [ %max_hv.0, %if.then21 ], [ %max_hv.0, %land.lhs.true ], [ %max_hv.0, %if.else ], !dbg !4835
  %min_mob.2 = phi i32 [ %sub, %if.then ], [ %sub19, %if.then21 ], [ %min_mob.0, %land.lhs.true ], [ %min_mob.0, %if.else ], !dbg !4860
  %result.2 = phi i32 [ %3, %if.then ], [ %3, %if.then21 ], [ %result.0, %land.lhs.true ], [ %result.0, %if.else ], !dbg !4860
  call void @llvm.dbg.value(metadata i32 %result.2, metadata !4829, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %min_mob.2, metadata !4828, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %max_hv.1, metadata !4827, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4830, metadata !DIExpression(DW_OP_deref)), !dbg !4835
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4841
  br label %for.cond, !dbg !4841, !llvm.loop !4861

for.end:                                          ; preds = %for.cond
  %result.0.lcssa = phi i32 [ %result.0, %for.cond ], !dbg !4835
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4829, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4829, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4829, metadata !DIExpression()), !dbg !4835
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4863
  ret i32 %result.0.lcssa, !dbg !4864
}

declare dso_local void @sbitmap_a_and_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4865 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4867, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4868, metadata !DIExpression()), !dbg !4872
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4873
  %0 = load i8*, i8** %popcount, align 8, !dbg !4873
  %tobool = icmp eq i8* %0, null, !dbg !4874
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4875

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4876
  %.pre2 = zext i32 %.pre to i64, !dbg !4877
  %.pre3 = shl i64 1, %.pre2, !dbg !4877
  %.pre4 = lshr i32 %bitno, 6, !dbg !4878
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4879
  br label %if.end7, !dbg !4875

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4880
  %idxprom = zext i32 %div to i64, !dbg !4880
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4880
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4880
  %rem = and i32 %bitno, 63, !dbg !4880
  %sh_prom = zext i32 %rem to i64, !dbg !4880
  %2 = shl i64 1, %sh_prom, !dbg !4881
  %3 = and i64 %1, %2, !dbg !4881
  %tobool1 = icmp eq i64 %3, 0, !dbg !4881
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !4883

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4884
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4885
  %dec = add i8 %4, -1, !dbg !4885
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !4885
  br label %if.end7, !dbg !4884

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4879
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4877
  %neg = xor i64 %shl.pre-phi, -1, !dbg !4886
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4879
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4887
  %and14 = and i64 %5, %neg, !dbg !4887
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !4887
  ret void, !dbg !4888
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_max_dv_min_mob(%struct.ddg* %g, %struct.simple_bitmap_def* %nodes) unnamed_addr #4 !dbg !4889 {
entry:
  %u = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !4891, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %nodes, metadata !4892, metadata !DIExpression()), !dbg !4902
  %0 = bitcast i32* %u to i8*, !dbg !4903
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4903
  call void @llvm.dbg.value(metadata i32 0, metadata !4893, metadata !DIExpression()), !dbg !4902
  store i32 0, i32* %u, align 4, !dbg !4904
  call void @llvm.dbg.value(metadata i32 -1, metadata !4894, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 -1, metadata !4896, metadata !DIExpression()), !dbg !4902
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4905
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4905
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4897, metadata !DIExpression(DW_OP_deref)), !dbg !4902
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %nodes, i32 0) #7, !dbg !4906
  %nodes1 = getelementptr inbounds %struct.ddg, %struct.ddg* %g, i64 0, i32 5, !dbg !4907
  br label %for.cond, !dbg !4906

for.cond:                                         ; preds = %for.inc, %entry
  %max_dv.0 = phi i32 [ -1, %entry ], [ %max_dv.1, %for.inc ], !dbg !4902
  %min_mob.0 = phi i32 [ 2147483647, %entry ], [ %min_mob.2, %for.inc ], !dbg !4902
  %result.0 = phi i32 [ -1, %entry ], [ %result.2, %for.inc ], !dbg !4902
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %min_mob.0, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %max_dv.0, metadata !4894, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32* %u, metadata !4893, metadata !DIExpression(DW_OP_deref)), !dbg !4902
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4897, metadata !DIExpression(DW_OP_deref)), !dbg !4902
  %call = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %u) #7, !dbg !4908
  %tobool = icmp eq i8 %call, 0, !dbg !4906
  br i1 %tobool, label %for.end, label %for.body, !dbg !4906

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ddg_node*, %struct.ddg_node** %nodes1, align 8, !dbg !4909
  %3 = load i32, i32* %u, align 4, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %3, metadata !4893, metadata !DIExpression()), !dbg !4902
  %idxprom = zext i32 %3 to i64, !dbg !4911
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !4898, metadata !DIExpression()), !dbg !4907
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom, i32 7, i32 0, !dbg !4912
  %4 = bitcast i8** %info to %struct.node_order_params**, !dbg !4912
  %5 = load %struct.node_order_params*, %struct.node_order_params** %4, align 8, !dbg !4912
  %asap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 0, !dbg !4912
  %6 = load i32, i32* %asap, align 4, !dbg !4912
  %cmp = icmp slt i32 %max_dv.0, %6, !dbg !4914
  br i1 %cmp, label %if.then, label %if.else, !dbg !4915

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %6, metadata !4894, metadata !DIExpression()), !dbg !4902
  %alap = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 1, !dbg !4916
  %7 = load i32, i32* %alap, align 4, !dbg !4916
  %sub = sub nsw i32 %7, %6, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %3, metadata !4893, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %3, metadata !4896, metadata !DIExpression()), !dbg !4902
  br label %for.inc, !dbg !4918

if.else:                                          ; preds = %for.body
  %cmp13 = icmp eq i32 %max_dv.0, %6, !dbg !4919
  br i1 %cmp13, label %land.lhs.true, label %for.inc, !dbg !4921

land.lhs.true:                                    ; preds = %if.else
  %alap16 = getelementptr inbounds %struct.node_order_params, %struct.node_order_params* %5, i64 0, i32 1, !dbg !4922
  %8 = load i32, i32* %alap16, align 4, !dbg !4922
  %sub20 = sub nsw i32 %8, %max_dv.0, !dbg !4922
  %cmp21 = icmp sgt i32 %min_mob.0, %sub20, !dbg !4923
  br i1 %cmp21, label %if.then22, label %for.inc, !dbg !4924

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 %sub20, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %3, metadata !4893, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %3, metadata !4896, metadata !DIExpression()), !dbg !4902
  br label %for.inc, !dbg !4925

for.inc:                                          ; preds = %if.then, %if.then22, %land.lhs.true, %if.else
  %max_dv.1 = phi i32 [ %6, %if.then ], [ %max_dv.0, %if.then22 ], [ %max_dv.0, %land.lhs.true ], [ %max_dv.0, %if.else ], !dbg !4902
  %min_mob.2 = phi i32 [ %sub, %if.then ], [ %sub20, %if.then22 ], [ %min_mob.0, %land.lhs.true ], [ %min_mob.0, %if.else ], !dbg !4927
  %result.2 = phi i32 [ %3, %if.then ], [ %3, %if.then22 ], [ %result.0, %land.lhs.true ], [ %result.0, %if.else ], !dbg !4927
  call void @llvm.dbg.value(metadata i32 %result.2, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %min_mob.2, metadata !4895, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %max_dv.1, metadata !4894, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4897, metadata !DIExpression(DW_OP_deref)), !dbg !4902
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4908
  br label %for.cond, !dbg !4908, !llvm.loop !4928

for.end:                                          ; preds = %for.cond
  %result.0.lcssa = phi i32 [ %result.0, %for.cond ], !dbg !4902
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4930
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4930
  ret i32 %result.0.lcssa, !dbg !4931
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* %i, %struct.simple_bitmap_def* %bmp, i32 %min) unnamed_addr #0 !dbg !4932 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !4940, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %bmp, metadata !4941, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i32 0, metadata !4942, metadata !DIExpression()), !dbg !4943
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !4944
  store i32 0, i32* %word_num, align 4, !dbg !4945
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !4946
  store i32 0, i32* %bit_num, align 8, !dbg !4947
  %size = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 2, !dbg !4948
  %0 = load i32, i32* %size, align 4, !dbg !4948
  %size1 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !4949
  store i32 %0, i32* %size1, align 8, !dbg !4950
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 3, i64 0, !dbg !4951
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !4952
  store i64* %arraydecay, i64** %ptr, align 8, !dbg !4953
  %cmp = icmp eq i32 %0, 0, !dbg !4954
  br i1 %cmp, label %if.then, label %if.else, !dbg !4956

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !4957
  store i64 0, i64* %word, align 8, !dbg !4958
  br label %if.end, !dbg !4959

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %arraydecay, align 8, !dbg !4960
  %word7 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !4961
  store i64 %1, i64* %word7, align 8, !dbg !4962
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* %i, i32* %n) unnamed_addr #0 !dbg !4964 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !4969, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32* %n, metadata !4970, metadata !DIExpression()), !dbg !4971
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !4972
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !4975
  %size = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !4977
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !4975
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !4972
  %.pre = load i64, i64* %word, align 8, !dbg !4979
  br label %for.cond, !dbg !4980

for.cond:                                         ; preds = %if.end, %entry
  %0 = phi i64 [ %4, %if.end ], [ %.pre, %entry ], !dbg !4979
  %cmp = icmp eq i64 %0, 0, !dbg !4981
  br i1 %cmp, label %for.body, label %for.cond6.preheader, !dbg !4982

for.cond6.preheader:                              ; preds = %for.cond
  %.lcssa4 = phi i64 [ %0, %for.cond ], !dbg !4979
  %.pre1 = load i32, i32* %bit_num, align 8, !dbg !4971
  br label %for.cond6, !dbg !4983

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %word_num, align 4, !dbg !4985
  %inc = add i32 %1, 1, !dbg !4985
  store i32 %inc, i32* %word_num, align 4, !dbg !4985
  %2 = load i32, i32* %size, align 8, !dbg !4986
  %cmp2 = icmp ult i32 %inc, %2, !dbg !4987
  br i1 %cmp2, label %if.end, label %return.loopexit, !dbg !4988

if.end:                                           ; preds = %for.body
  %mul = shl i32 %inc, 6, !dbg !4989
  store i32 %mul, i32* %bit_num, align 8, !dbg !4990
  %3 = load i64*, i64** %ptr, align 8, !dbg !4991
  %idxprom = zext i32 %inc to i64, !dbg !4992
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !4992
  %4 = load i64, i64* %arrayidx, align 8, !dbg !4992
  store i64 %4, i64* %word, align 8, !dbg !4993
  br label %for.cond, !dbg !4994, !llvm.loop !4995

for.cond6:                                        ; preds = %for.cond6.preheader, %for.body9
  %5 = phi i32 [ %.pre1, %for.cond6.preheader ], [ %inc11, %for.body9 ], !dbg !4971
  %6 = phi i64 [ %.lcssa4, %for.cond6.preheader ], [ %shr, %for.body9 ], !dbg !4997
  %and = and i64 %6, 1, !dbg !4999
  %cmp8 = icmp eq i64 %and, 0, !dbg !5000
  br i1 %cmp8, label %for.body9, label %for.end14, !dbg !4983

for.body9:                                        ; preds = %for.cond6
  %inc11 = add i32 %5, 1, !dbg !5001
  store i32 %inc11, i32* %bit_num, align 8, !dbg !5001
  %shr = lshr i64 %6, 1, !dbg !5002
  store i64 %shr, i64* %word, align 8, !dbg !5002
  br label %for.cond6, !dbg !5003, !llvm.loop !5004

for.end14:                                        ; preds = %for.cond6
  %.lcssa = phi i32 [ %5, %for.cond6 ], !dbg !4971
  store i32 %.lcssa, i32* %n, align 4, !dbg !5006
  br label %return, !dbg !5007

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !5008

return:                                           ; preds = %return.loopexit, %for.end14
  %retval.0 = phi i8 [ 1, %for.end14 ], [ 0, %return.loopexit ], !dbg !4971
  ret i8 %retval.0, !dbg !5008
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* %i) unnamed_addr #0 !dbg !5009 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !5013, metadata !DIExpression()), !dbg !5014
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !5015
  %0 = load i64, i64* %word, align 8, !dbg !5016
  %shr = lshr i64 %0, 1, !dbg !5016
  store i64 %shr, i64* %word, align 8, !dbg !5016
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !5017
  %1 = load i32, i32* %bit_num, align 8, !dbg !5018
  %inc = add i32 %1, 1, !dbg !5018
  store i32 %inc, i32* %bit_num, align 8, !dbg !5018
  ret void, !dbg !5019
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.partial_schedule* @create_partial_schedule(i32 %ii, %struct.ddg* %g, i32 %history) unnamed_addr #4 !dbg !5020 {
entry:
  call void @llvm.dbg.value(metadata i32 %ii, metadata !5024, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata %struct.ddg* %g, metadata !5025, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i32 %history, metadata !5026, metadata !DIExpression()), !dbg !5028
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !5029
  %0 = bitcast i8* %call to %struct.partial_schedule*, !dbg !5029
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %0, metadata !5027, metadata !DIExpression()), !dbg !5028
  %conv = sext i32 %ii to i64, !dbg !5030
  %call1 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !5031
  %rows = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5032
  %1 = bitcast i8* %rows to i8**, !dbg !5033
  store i8* %call1, i8** %1, align 8, !dbg !5033
  %ii2 = bitcast i8* %call to i32*, !dbg !5034
  store i32 %ii, i32* %ii2, align 8, !dbg !5035
  %history3 = getelementptr inbounds i8, i8* %call, i64 4, !dbg !5036
  %2 = bitcast i8* %history3 to i32*, !dbg !5036
  store i32 %history, i32* %2, align 4, !dbg !5037
  %min_cycle = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5038
  %3 = bitcast i8* %min_cycle to i32*, !dbg !5038
  store i32 2147483647, i32* %3, align 8, !dbg !5039
  %max_cycle = getelementptr inbounds i8, i8* %call, i64 20, !dbg !5040
  %4 = bitcast i8* %max_cycle to i32*, !dbg !5040
  store i32 -2147483648, i32* %4, align 4, !dbg !5041
  %g4 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5042
  %5 = bitcast i8* %g4 to %struct.ddg**, !dbg !5042
  store %struct.ddg* %g, %struct.ddg** %5, align 8, !dbg !5043
  ret %struct.partial_schedule* %0, !dbg !5044
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_sched_window(%struct.partial_schedule* %ps, i32* %nodes_order, i32 %i, %struct.simple_bitmap_def* %sched_nodes, i32 %ii, i32* %start_p, i32* %step_p, i32* %end_p) unnamed_addr #4 !dbg !5045 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5049, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32* %nodes_order, metadata !5050, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %i, metadata !5051, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5052, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %ii, metadata !5053, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32* %start_p, metadata !5054, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32* %step_p, metadata !5055, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32* %end_p, metadata !5056, metadata !DIExpression()), !dbg !5112
  %idxprom = sext i32 %i to i64, !dbg !5113
  %arrayidx = getelementptr inbounds i32, i32* %nodes_order, i64 %idxprom, !dbg !5113
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %0, metadata !5061, metadata !DIExpression()), !dbg !5112
  %g = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 5, !dbg !5114
  %1 = load %struct.ddg*, %struct.ddg** %g, align 8, !dbg !5114
  %nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %1, i64 0, i32 5, !dbg !5115
  %2 = load %struct.ddg_node*, %struct.ddg_node** %nodes, align 8, !dbg !5115
  %idxprom1 = sext i32 %0 to i64, !dbg !5116
  %arrayidx2 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, !dbg !5116
  call void @llvm.dbg.value(metadata %struct.ddg_node* %arrayidx2, metadata !5062, metadata !DIExpression()), !dbg !5112
  %num_nodes = getelementptr inbounds %struct.ddg, %struct.ddg* %1, i64 0, i32 1, !dbg !5117
  %3 = load i32, i32* %num_nodes, align 8, !dbg !5117
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %3) #6, !dbg !5118
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !5063, metadata !DIExpression()), !dbg !5112
  %4 = load %struct.ddg*, %struct.ddg** %g, align 8, !dbg !5119
  %num_nodes5 = getelementptr inbounds %struct.ddg, %struct.ddg* %4, i64 0, i32 1, !dbg !5120
  %5 = load i32, i32* %num_nodes5, align 8, !dbg !5120
  %call6 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %5) #6, !dbg !5121
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call6, metadata !5064, metadata !DIExpression()), !dbg !5112
  %predecessors = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 6, !dbg !5122
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %predecessors, align 8, !dbg !5122
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %6, metadata !5065, metadata !DIExpression()), !dbg !5112
  %successors = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 5, !dbg !5123
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %successors, align 8, !dbg !5123
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %7, metadata !5066, metadata !DIExpression()), !dbg !5112
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !5124
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call6) #6, !dbg !5125
  %call7 = tail call zeroext i8 @sbitmap_a_and_b_cg(%struct.simple_bitmap_def* %call, %struct.simple_bitmap_def* %6, %struct.simple_bitmap_def* %sched_nodes) #6, !dbg !5126
  call void @llvm.dbg.value(metadata i8 %call7, metadata !5067, metadata !DIExpression()), !dbg !5112
  %call8 = tail call zeroext i8 @sbitmap_a_and_b_cg(%struct.simple_bitmap_def* %call6, %struct.simple_bitmap_def* %7, %struct.simple_bitmap_def* %sched_nodes) #6, !dbg !5127
  call void @llvm.dbg.value(metadata i8 %call8, metadata !5068, metadata !DIExpression()), !dbg !5112
  %tobool = icmp eq i8 %call7, 0, !dbg !5128
  %tobool10 = icmp ne i8 %call8, 0, !dbg !5129
  %or.cond = or i1 %tobool, %tobool10, !dbg !5130
  br i1 %or.cond, label %if.else85, label %if.then, !dbg !5130

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !5059, metadata !DIExpression()), !dbg !5112
  %in = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 3, !dbg !5132
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %arrayidx2, i64 0, i32 0, !dbg !5133
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 1, !dbg !5133
  br label %for.cond, !dbg !5136

for.cond:                                         ; preds = %for.inc, %if.then
  %end.0 = phi i32 [ 2147483647, %if.then ], [ %end.2, %for.inc ], !dbg !5131
  %e.0.in = phi %struct.ddg_edge** [ %in, %if.then ], [ %next_in, %for.inc ]
  %early_start.0 = phi i32 [ -2147483648, %if.then ], [ %early_start.1, %for.inc ], !dbg !5131
  %e.0 = load %struct.ddg_edge*, %struct.ddg_edge** %e.0.in, align 8, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %early_start.0, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.0, metadata !5060, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %end.0, metadata !5059, metadata !DIExpression()), !dbg !5112
  %cmp = icmp eq %struct.ddg_edge* %e.0, null, !dbg !5138
  br i1 %cmp, label %for.end, label %for.body, !dbg !5139

for.body:                                         ; preds = %for.cond
  %src = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 0, !dbg !5140
  %8 = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !5140
  call void @llvm.dbg.value(metadata %struct.ddg_node* %8, metadata !5072, metadata !DIExpression()), !dbg !5141
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5142
  %tobool12 = icmp eq %struct._IO_FILE* %9, null, !dbg !5142
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !5143

if.then13:                                        ; preds = %for.body
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !5144
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5145
  tail call void @print_ddg_edge(%struct._IO_FILE* %10, %struct.ddg_edge* nonnull %e.0) #6, !dbg !5146
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5147
  %12 = load i32, i32* %cuid, align 8, !dbg !5148
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5149
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5149
  %rt_int = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !5149
  %14 = load i32, i32* %rt_int, align 8, !dbg !5149
  %cuid17 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 0, !dbg !5150
  %15 = load i32, i32* %cuid17, align 8, !dbg !5150
  %insn18 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 1, !dbg !5151
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn18, align 8, !dbg !5151
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5151
  %rt_int22 = bitcast %union.rtunion_def* %arrayidx21 to i32*, !dbg !5151
  %17 = load i32, i32* %rt_int22, align 8, !dbg !5151
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.50, i64 0, i64 0), i32 %12, i32 %14, i32 %15, i32 %17) #6, !dbg !5152
  br label %if.end, !dbg !5153

if.end:                                           ; preds = %for.body, %if.then13
  %cuid24 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 0, !dbg !5154
  %18 = load i32, i32* %cuid24, align 8, !dbg !5154
  %div = lshr i32 %18, 6, !dbg !5154
  %idxprom25 = zext i32 %div to i64, !dbg !5154
  %arrayidx26 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom25, !dbg !5154
  %19 = load i64, i64* %arrayidx26, align 8, !dbg !5154
  %rem = and i32 %18, 63, !dbg !5154
  %sh_prom = zext i32 %rem to i64, !dbg !5154
  %20 = shl i64 1, %sh_prom, !dbg !5154
  %21 = and i64 %19, %20, !dbg !5154
  %tobool28 = icmp eq i64 %21, 0, !dbg !5154
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !5155

if.then29:                                        ; preds = %if.end
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 7, i32 0, !dbg !5156
  %22 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5156
  %23 = load %struct.node_sched_params*, %struct.node_sched_params** %22, align 8, !dbg !5156
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %23, i64 0, i32 1, !dbg !5156
  %24 = load i32, i32* %time, align 4, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %24, metadata !5076, metadata !DIExpression()), !dbg !5157
  %latency = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 4, !dbg !5158
  %25 = load i32, i32* %latency, align 8, !dbg !5158
  %add = add nsw i32 %24, %25, !dbg !5158
  %distance = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 5, !dbg !5158
  %26 = load i32, i32* %distance, align 4, !dbg !5158
  %mul = mul nsw i32 %26, %ii, !dbg !5158
  %sub = sub nsw i32 %add, %mul, !dbg !5158
  %cmp30 = icmp sgt i32 %early_start.0, %sub, !dbg !5158
  br i1 %cmp30, label %cond.end, label %cond.false, !dbg !5158

cond.false:                                       ; preds = %if.then29
  br label %cond.end, !dbg !5158

cond.end:                                         ; preds = %if.then29, %cond.false
  %cond = phi i32 [ %sub, %cond.false ], [ %early_start.0, %if.then29 ], !dbg !5158
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5069, metadata !DIExpression()), !dbg !5131
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5159
  %tobool37 = icmp eq %struct._IO_FILE* %27, null, !dbg !5159
  br i1 %tobool37, label %if.end41, label %if.then38, !dbg !5161

if.then38:                                        ; preds = %cond.end
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0), i32 %24, i32 %cond, i32 %25) #6, !dbg !5162
  br label %if.end41, !dbg !5162

if.end41:                                         ; preds = %cond.end, %if.then38
  %data_type = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 3, !dbg !5163
  %28 = load i32, i32* %data_type, align 4, !dbg !5163
  %cmp42 = icmp eq i32 %28, 2, !dbg !5165
  br i1 %cmp42, label %if.then44, label %for.inc, !dbg !5166

if.then44:                                        ; preds = %if.end41
  %29 = load %struct.node_sched_params*, %struct.node_sched_params** %22, align 8, !dbg !5167
  %time47 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %29, i64 0, i32 1, !dbg !5167
  %30 = load i32, i32* %time47, align 4, !dbg !5167
  %add48 = add nsw i32 %30, %ii, !dbg !5167
  %sub49 = add nsw i32 %add48, -1, !dbg !5167
  %cmp50 = icmp slt i32 %end.0, %sub49, !dbg !5167
  br i1 %cmp50, label %for.inc, label %cond.false53, !dbg !5167

cond.false53:                                     ; preds = %if.then44
  br label %for.inc, !dbg !5167

if.else:                                          ; preds = %if.end
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5168
  %tobool62 = icmp eq %struct._IO_FILE* %31, null, !dbg !5168
  br i1 %tobool62, label %for.inc, label %if.then63, !dbg !5170

if.then63:                                        ; preds = %if.else
  %call64 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !5171
  br label %for.inc, !dbg !5171

for.inc:                                          ; preds = %if.else, %cond.false53, %if.then44, %if.end41, %if.then63
  %end.2 = phi i32 [ %end.0, %if.end41 ], [ %sub49, %cond.false53 ], [ %end.0, %if.then44 ], [ %end.0, %if.then63 ], [ %end.0, %if.else ], !dbg !5131
  %early_start.1 = phi i32 [ %cond, %if.end41 ], [ %cond, %cond.false53 ], [ %cond, %if.then44 ], [ %early_start.0, %if.then63 ], [ %early_start.0, %if.else ], !dbg !5131
  call void @llvm.dbg.value(metadata i32 %early_start.1, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %end.2, metadata !5059, metadata !DIExpression()), !dbg !5112
  %next_in = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 6, !dbg !5172
  br label %for.cond, !dbg !5173, !llvm.loop !5174

for.end:                                          ; preds = %for.cond
  %end.0.lcssa = phi i32 [ %end.0, %for.cond ], !dbg !5131
  %early_start.0.lcssa = phi i32 [ %early_start.0, %for.cond ], !dbg !5131
  call void @llvm.dbg.value(metadata i32 %end.0.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start.0.lcssa, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %end.0.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start.0.lcssa, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %end.0.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start.0.lcssa, metadata !5069, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %early_start.0.lcssa, metadata !5057, metadata !DIExpression()), !dbg !5112
  %add67 = add nsw i32 %early_start.0.lcssa, %ii, !dbg !5176
  %cmp68 = icmp slt i32 %end.0.lcssa, %add67, !dbg !5176
  %cond74 = select i1 %cmp68, i32 %end.0.lcssa, i32 %add67, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %cond74, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 1, metadata !5058, metadata !DIExpression()), !dbg !5112
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5177
  %tobool75 = icmp eq %struct._IO_FILE* %32, null, !dbg !5177
  br i1 %tobool75, label %if.end450, label %if.then76, !dbg !5179

if.then76:                                        ; preds = %for.end
  %33 = load i32, i32* %cuid, align 8, !dbg !5180
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5181
  %arrayidx81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5181
  %rt_int82 = bitcast %union.rtunion_def* %arrayidx81 to i32*, !dbg !5181
  %35 = load i32, i32* %rt_int82, align 8, !dbg !5181
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 %33, i32 %35, i32 %early_start.0.lcssa, i32 %cond74, i32 1) #6, !dbg !5182
  br label %if.end450, !dbg !5182

if.else85:                                        ; preds = %entry
  %or.cond1 = and i1 %tobool, %tobool10, !dbg !5183
  br i1 %or.cond1, label %if.then89, label %if.else199, !dbg !5183

if.then89:                                        ; preds = %if.else85
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !5059, metadata !DIExpression()), !dbg !5112
  %out = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 4, !dbg !5185
  %cuid98 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %arrayidx2, i64 0, i32 0, !dbg !5186
  %insn99 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 1, !dbg !5186
  br label %for.cond90, !dbg !5189

for.cond90:                                       ; preds = %for.inc179, %if.then89
  %end.3 = phi i32 [ -2147483648, %if.then89 ], [ %end.5, %for.inc179 ], !dbg !5184
  %e.1.in = phi %struct.ddg_edge** [ %out, %if.then89 ], [ %next_out, %for.inc179 ]
  %late_start.0 = phi i32 [ 2147483647, %if.then89 ], [ %late_start.1, %for.inc179 ], !dbg !5184
  %e.1 = load %struct.ddg_edge*, %struct.ddg_edge** %e.1.in, align 8, !dbg !5190
  call void @llvm.dbg.value(metadata i32 %late_start.0, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.1, metadata !5060, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %end.3, metadata !5059, metadata !DIExpression()), !dbg !5112
  %cmp91 = icmp eq %struct.ddg_edge* %e.1, null, !dbg !5191
  br i1 %cmp91, label %for.end180, label %for.body93, !dbg !5192

for.body93:                                       ; preds = %for.cond90
  %dest = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 1, !dbg !5193
  %36 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !5193
  call void @llvm.dbg.value(metadata %struct.ddg_node* %36, metadata !5082, metadata !DIExpression()), !dbg !5194
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5195
  %tobool95 = icmp eq %struct._IO_FILE* %37, null, !dbg !5195
  br i1 %tobool95, label %if.end111, label %if.then96, !dbg !5196

if.then96:                                        ; preds = %for.body93
  %call97 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !5197
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5198
  tail call void @print_ddg_edge(%struct._IO_FILE* %38, %struct.ddg_edge* nonnull %e.1) #6, !dbg !5199
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5200
  %40 = load i32, i32* %cuid98, align 8, !dbg !5201
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn99, align 8, !dbg !5202
  %arrayidx102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5202
  %rt_int103 = bitcast %union.rtunion_def* %arrayidx102 to i32*, !dbg !5202
  %42 = load i32, i32* %rt_int103, align 8, !dbg !5202
  %cuid104 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %36, i64 0, i32 0, !dbg !5203
  %43 = load i32, i32* %cuid104, align 8, !dbg !5203
  %insn105 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %36, i64 0, i32 1, !dbg !5204
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn105, align 8, !dbg !5204
  %arrayidx108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5204
  %rt_int109 = bitcast %union.rtunion_def* %arrayidx108 to i32*, !dbg !5204
  %45 = load i32, i32* %rt_int109, align 8, !dbg !5204
  %call110 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0), i32 %40, i32 %42, i32 %43, i32 %45) #6, !dbg !5205
  br label %if.end111, !dbg !5206

if.end111:                                        ; preds = %for.body93, %if.then96
  %cuid113 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %36, i64 0, i32 0, !dbg !5207
  %46 = load i32, i32* %cuid113, align 8, !dbg !5207
  %div114 = lshr i32 %46, 6, !dbg !5207
  %idxprom115 = zext i32 %div114 to i64, !dbg !5207
  %arrayidx116 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom115, !dbg !5207
  %47 = load i64, i64* %arrayidx116, align 8, !dbg !5207
  %rem118 = and i32 %46, 63, !dbg !5207
  %sh_prom119 = zext i32 %rem118 to i64, !dbg !5207
  %48 = shl i64 1, %sh_prom119, !dbg !5207
  %49 = and i64 %47, %48, !dbg !5207
  %tobool122 = icmp eq i64 %49, 0, !dbg !5207
  br i1 %tobool122, label %if.else173, label %if.then123, !dbg !5208

if.then123:                                       ; preds = %if.end111
  %info125 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %36, i64 0, i32 7, i32 0, !dbg !5209
  %50 = bitcast i8** %info125 to %struct.node_sched_params**, !dbg !5209
  %51 = load %struct.node_sched_params*, %struct.node_sched_params** %50, align 8, !dbg !5209
  %time126 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %51, i64 0, i32 1, !dbg !5209
  %52 = load i32, i32* %time126, align 4, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %52, metadata !5086, metadata !DIExpression()), !dbg !5210
  %latency127 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 4, !dbg !5211
  %53 = load i32, i32* %latency127, align 8, !dbg !5211
  %sub128 = sub nsw i32 %52, %53, !dbg !5211
  %distance129 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 5, !dbg !5211
  %54 = load i32, i32* %distance129, align 4, !dbg !5211
  %mul130 = mul nsw i32 %54, %ii, !dbg !5211
  %add131 = add nsw i32 %sub128, %mul130, !dbg !5211
  %cmp132 = icmp slt i32 %late_start.0, %add131, !dbg !5211
  br i1 %cmp132, label %cond.end141, label %cond.false135, !dbg !5211

cond.false135:                                    ; preds = %if.then123
  br label %cond.end141, !dbg !5211

cond.end141:                                      ; preds = %if.then123, %cond.false135
  %cond142 = phi i32 [ %add131, %cond.false135 ], [ %late_start.0, %if.then123 ], !dbg !5211
  call void @llvm.dbg.value(metadata i32 %cond142, metadata !5079, metadata !DIExpression()), !dbg !5184
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5212
  %tobool143 = icmp eq %struct._IO_FILE* %55, null, !dbg !5212
  br i1 %tobool143, label %if.end147, label %if.then144, !dbg !5214

if.then144:                                       ; preds = %cond.end141
  %call146 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %55, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i32 %52, i32 %cond142, i32 %53) #6, !dbg !5215
  br label %if.end147, !dbg !5215

if.end147:                                        ; preds = %cond.end141, %if.then144
  %data_type148 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 3, !dbg !5216
  %56 = load i32, i32* %data_type148, align 4, !dbg !5216
  %cmp149 = icmp eq i32 %56, 2, !dbg !5218
  br i1 %cmp149, label %if.then151, label %if.end168, !dbg !5219

if.then151:                                       ; preds = %if.end147
  %57 = load %struct.node_sched_params*, %struct.node_sched_params** %50, align 8, !dbg !5220
  %time154 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %57, i64 0, i32 1, !dbg !5220
  %58 = load i32, i32* %time154, align 4, !dbg !5220
  %sub155 = sub nsw i32 %58, %ii, !dbg !5220
  %add156 = add nsw i32 %sub155, 1, !dbg !5220
  %cmp157 = icmp sgt i32 %end.3, %add156, !dbg !5220
  br i1 %cmp157, label %if.end168, label %cond.false160, !dbg !5220

cond.false160:                                    ; preds = %if.then151
  br label %if.end168, !dbg !5220

if.end168:                                        ; preds = %cond.false160, %if.then151, %if.end147
  %end.4 = phi i32 [ %end.3, %if.end147 ], [ %add156, %cond.false160 ], [ %end.3, %if.then151 ], !dbg !5184
  call void @llvm.dbg.value(metadata i32 %end.4, metadata !5059, metadata !DIExpression()), !dbg !5112
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5221
  %tobool169 = icmp eq %struct._IO_FILE* %59, null, !dbg !5221
  br i1 %tobool169, label %for.inc179, label %if.then170, !dbg !5223

if.then170:                                       ; preds = %if.end168
  %call171 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %59, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0), i32 %end.4) #6, !dbg !5224
  br label %for.inc179, !dbg !5224

if.else173:                                       ; preds = %if.end111
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5225
  %tobool174 = icmp eq %struct._IO_FILE* %60, null, !dbg !5225
  br i1 %tobool174, label %for.inc179, label %if.then175, !dbg !5227

if.then175:                                       ; preds = %if.else173
  %call176 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %60, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !5228
  br label %for.inc179, !dbg !5228

for.inc179:                                       ; preds = %if.end168, %if.else173, %if.then170, %if.then175
  %end.5 = phi i32 [ %end.4, %if.then170 ], [ %end.4, %if.end168 ], [ %end.3, %if.then175 ], [ %end.3, %if.else173 ], !dbg !5184
  %late_start.1 = phi i32 [ %cond142, %if.then170 ], [ %cond142, %if.end168 ], [ %late_start.0, %if.then175 ], [ %late_start.0, %if.else173 ], !dbg !5184
  call void @llvm.dbg.value(metadata i32 %late_start.1, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %end.5, metadata !5059, metadata !DIExpression()), !dbg !5112
  %next_out = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 7, !dbg !5229
  br label %for.cond90, !dbg !5230, !llvm.loop !5231

for.end180:                                       ; preds = %for.cond90
  %end.3.lcssa = phi i32 [ %end.3, %for.cond90 ], !dbg !5184
  %late_start.0.lcssa = phi i32 [ %late_start.0, %for.cond90 ], !dbg !5184
  call void @llvm.dbg.value(metadata i32 %end.3.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start.0.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %end.3.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start.0.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %end.3.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start.0.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %late_start.0.lcssa, metadata !5057, metadata !DIExpression()), !dbg !5112
  %sub181 = sub nsw i32 %late_start.0.lcssa, %ii, !dbg !5233
  %cmp182 = icmp sgt i32 %end.3.lcssa, %sub181, !dbg !5233
  %cond188 = select i1 %cmp182, i32 %end.3.lcssa, i32 %sub181, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %cond188, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 -1, metadata !5058, metadata !DIExpression()), !dbg !5112
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5234
  %tobool189 = icmp eq %struct._IO_FILE* %61, null, !dbg !5234
  br i1 %tobool189, label %if.end450, label %if.then190, !dbg !5236

if.then190:                                       ; preds = %for.end180
  %62 = load i32, i32* %cuid98, align 8, !dbg !5237
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn99, align 8, !dbg !5238
  %arrayidx195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5238
  %rt_int196 = bitcast %union.rtunion_def* %arrayidx195 to i32*, !dbg !5238
  %64 = load i32, i32* %rt_int196, align 8, !dbg !5238
  %call197 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %61, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 %62, i32 %64, i32 %late_start.0.lcssa, i32 %cond188, i32 -1) #6, !dbg !5239
  br label %if.end450, !dbg !5239

if.else199:                                       ; preds = %if.else85
  %tobool200 = icmp ne i8 %call7, 0, !dbg !5240
  %or.cond2 = and i1 %tobool200, %tobool10, !dbg !5241
  br i1 %or.cond2, label %if.then203, label %if.else444, !dbg !5241

if.then203:                                       ; preds = %if.else199
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 0, metadata !5093, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 0, metadata !5094, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !5057, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !5059, metadata !DIExpression()), !dbg !5112
  %in206 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 3, !dbg !5243
  %cuid216 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %arrayidx2, i64 0, i32 0, !dbg !5244
  %insn217 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 1, !dbg !5244
  br label %for.cond207, !dbg !5247

for.cond207:                                      ; preds = %for.inc302, %if.then203
  %end.6 = phi i32 [ 2147483647, %if.then203 ], [ %end.8, %for.inc302 ], !dbg !5242
  %e.2.in = phi %struct.ddg_edge** [ %in206, %if.then203 ], [ %next_in303, %for.inc302 ]
  %early_start204.0 = phi i32 [ -2147483648, %if.then203 ], [ %early_start204.1, %for.inc302 ], !dbg !5242
  %count_preds.0 = phi i32 [ 0, %if.then203 ], [ %count_preds.2, %for.inc302 ], !dbg !5242
  %e.2 = load %struct.ddg_edge*, %struct.ddg_edge** %e.2.in, align 8, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %count_preds.0, metadata !5093, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %early_start204.0, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.2, metadata !5060, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %end.6, metadata !5059, metadata !DIExpression()), !dbg !5112
  %cmp208 = icmp eq %struct.ddg_edge* %e.2, null, !dbg !5249
  br i1 %cmp208, label %for.end304, label %for.body210, !dbg !5250

for.body210:                                      ; preds = %for.cond207
  %src212 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 0, !dbg !5251
  %65 = load %struct.ddg_node*, %struct.ddg_node** %src212, align 8, !dbg !5251
  call void @llvm.dbg.value(metadata %struct.ddg_node* %65, metadata !5095, metadata !DIExpression()), !dbg !5252
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5253
  %tobool213 = icmp eq %struct._IO_FILE* %66, null, !dbg !5253
  br i1 %tobool213, label %if.end229, label %if.then214, !dbg !5254

if.then214:                                       ; preds = %for.body210
  %call215 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !5255
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5256
  tail call void @print_ddg_edge(%struct._IO_FILE* %67, %struct.ddg_edge* nonnull %e.2) #6, !dbg !5257
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5258
  %69 = load i32, i32* %cuid216, align 8, !dbg !5259
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn217, align 8, !dbg !5260
  %arrayidx220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5260
  %rt_int221 = bitcast %union.rtunion_def* %arrayidx220 to i32*, !dbg !5260
  %71 = load i32, i32* %rt_int221, align 8, !dbg !5260
  %cuid222 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %65, i64 0, i32 0, !dbg !5261
  %72 = load i32, i32* %cuid222, align 8, !dbg !5261
  %insn223 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %65, i64 0, i32 1, !dbg !5262
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn223, align 8, !dbg !5262
  %arrayidx226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5262
  %rt_int227 = bitcast %union.rtunion_def* %arrayidx226 to i32*, !dbg !5262
  %74 = load i32, i32* %rt_int227, align 8, !dbg !5262
  %call228 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.58, i64 0, i64 0), i32 %69, i32 %71, i32 %72, i32 %74) #6, !dbg !5263
  br label %if.end229, !dbg !5264

if.end229:                                        ; preds = %for.body210, %if.then214
  %cuid231 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %65, i64 0, i32 0, !dbg !5265
  %75 = load i32, i32* %cuid231, align 8, !dbg !5265
  %div232 = lshr i32 %75, 6, !dbg !5265
  %idxprom233 = zext i32 %div232 to i64, !dbg !5265
  %arrayidx234 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom233, !dbg !5265
  %76 = load i64, i64* %arrayidx234, align 8, !dbg !5265
  %rem236 = and i32 %75, 63, !dbg !5265
  %sh_prom237 = zext i32 %rem236 to i64, !dbg !5265
  %77 = shl i64 1, %sh_prom237, !dbg !5265
  %78 = and i64 %76, %77, !dbg !5265
  %tobool240 = icmp eq i64 %78, 0, !dbg !5265
  br i1 %tobool240, label %if.else296, label %if.then241, !dbg !5266

if.then241:                                       ; preds = %if.end229
  %info244 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %65, i64 0, i32 7, i32 0, !dbg !5267
  %79 = bitcast i8** %info244 to %struct.node_sched_params**, !dbg !5267
  %80 = load %struct.node_sched_params*, %struct.node_sched_params** %79, align 8, !dbg !5267
  %time245 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %80, i64 0, i32 1, !dbg !5267
  %81 = load i32, i32* %time245, align 4, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %81, metadata !5099, metadata !DIExpression()), !dbg !5268
  %latency246 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 4, !dbg !5269
  %82 = load i32, i32* %latency246, align 8, !dbg !5269
  %add247 = add nsw i32 %81, %82, !dbg !5269
  %distance248 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 5, !dbg !5269
  %83 = load i32, i32* %distance248, align 4, !dbg !5269
  %mul249 = mul nsw i32 %83, %ii, !dbg !5269
  %sub250 = sub nsw i32 %add247, %mul249, !dbg !5269
  %cmp251 = icmp sgt i32 %early_start204.0, %sub250, !dbg !5269
  br i1 %cmp251, label %cond.end260, label %cond.false254, !dbg !5269

cond.false254:                                    ; preds = %if.then241
  br label %cond.end260, !dbg !5269

cond.end260:                                      ; preds = %if.then241, %cond.false254
  %cond261 = phi i32 [ %sub250, %cond.false254 ], [ %early_start204.0, %if.then241 ], !dbg !5269
  call void @llvm.dbg.value(metadata i32 %cond261, metadata !5089, metadata !DIExpression()), !dbg !5242
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5270
  %tobool262 = icmp eq %struct._IO_FILE* %84, null, !dbg !5270
  br i1 %tobool262, label %if.end266, label %if.then263, !dbg !5272

if.then263:                                       ; preds = %cond.end260
  %call265 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %84, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.59, i64 0, i64 0), i32 %81, i32 %cond261, i32 %82) #6, !dbg !5273
  br label %if.end266, !dbg !5273

if.end266:                                        ; preds = %cond.end260, %if.then263
  %type = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 2, !dbg !5274
  %85 = load i32, i32* %type, align 8, !dbg !5274
  %cmp267 = icmp eq i32 %85, 0, !dbg !5276
  br i1 %cmp267, label %land.lhs.true269, label %if.end266.if.end274_crit_edge, !dbg !5277

if.end266.if.end274_crit_edge:                    ; preds = %if.end266
  %data_type275.phi.trans.insert = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 3, !dbg !5278
  %.pre = load i32, i32* %data_type275.phi.trans.insert, align 4, !dbg !5280
  br label %if.end274, !dbg !5277

land.lhs.true269:                                 ; preds = %if.end266
  %data_type270 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 3, !dbg !5281
  %86 = load i32, i32* %data_type270, align 4, !dbg !5281
  %cmp271 = icmp eq i32 %86, 1, !dbg !5282
  %inc = zext i1 %cmp271 to i32, !dbg !5283
  %spec.select = add nsw i32 %count_preds.0, %inc, !dbg !5283
  br label %if.end274, !dbg !5283

if.end274:                                        ; preds = %if.end266.if.end274_crit_edge, %land.lhs.true269
  %87 = phi i32 [ %.pre, %if.end266.if.end274_crit_edge ], [ %86, %land.lhs.true269 ], !dbg !5280
  %count_preds.1 = phi i32 [ %count_preds.0, %if.end266.if.end274_crit_edge ], [ %spec.select, %land.lhs.true269 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_preds.1, metadata !5093, metadata !DIExpression()), !dbg !5242
  %cmp276 = icmp eq i32 %87, 2, !dbg !5284
  br i1 %cmp276, label %if.then278, label %for.inc302, !dbg !5285

if.then278:                                       ; preds = %if.end274
  %88 = load %struct.node_sched_params*, %struct.node_sched_params** %79, align 8, !dbg !5286
  %time281 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %88, i64 0, i32 1, !dbg !5286
  %89 = load i32, i32* %time281, align 4, !dbg !5286
  %add282 = add nsw i32 %89, %ii, !dbg !5286
  %sub283 = add nsw i32 %add282, -1, !dbg !5286
  %cmp284 = icmp slt i32 %end.6, %sub283, !dbg !5286
  br i1 %cmp284, label %for.inc302, label %cond.false287, !dbg !5286

cond.false287:                                    ; preds = %if.then278
  br label %for.inc302, !dbg !5286

if.else296:                                       ; preds = %if.end229
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5287
  %tobool297 = icmp eq %struct._IO_FILE* %90, null, !dbg !5287
  br i1 %tobool297, label %for.inc302, label %if.then298, !dbg !5289

if.then298:                                       ; preds = %if.else296
  %call299 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %90, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !5290
  br label %for.inc302, !dbg !5290

for.inc302:                                       ; preds = %if.else296, %cond.false287, %if.then278, %if.end274, %if.then298
  %end.8 = phi i32 [ %end.6, %if.end274 ], [ %sub283, %cond.false287 ], [ %end.6, %if.then278 ], [ %end.6, %if.then298 ], [ %end.6, %if.else296 ], !dbg !5242
  %early_start204.1 = phi i32 [ %cond261, %if.end274 ], [ %cond261, %cond.false287 ], [ %cond261, %if.then278 ], [ %early_start204.0, %if.then298 ], [ %early_start204.0, %if.else296 ], !dbg !5242
  %count_preds.2 = phi i32 [ %count_preds.1, %if.end274 ], [ %count_preds.1, %cond.false287 ], [ %count_preds.1, %if.then278 ], [ %count_preds.0, %if.then298 ], [ %count_preds.0, %if.else296 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_preds.2, metadata !5093, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %early_start204.1, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %end.8, metadata !5059, metadata !DIExpression()), !dbg !5112
  %next_in303 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.2, i64 0, i32 6, !dbg !5291
  br label %for.cond207, !dbg !5292, !llvm.loop !5293

for.end304:                                       ; preds = %for.cond207
  %end.6.lcssa = phi i32 [ %end.6, %for.cond207 ], !dbg !5242
  %early_start204.0.lcssa = phi i32 [ %early_start204.0, %for.cond207 ], !dbg !5242
  %count_preds.0.lcssa = phi i32 [ %count_preds.0, %for.cond207 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %end.6.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start204.0.lcssa, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_preds.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %end.6.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start204.0.lcssa, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_preds.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %end.6.lcssa, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %early_start204.0.lcssa, metadata !5089, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_preds.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5242
  %out305 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 4, !dbg !5295
  br label %for.cond306, !dbg !5296

for.cond306:                                      ; preds = %for.inc403, %for.end304
  %start.0 = phi i32 [ -2147483648, %for.end304 ], [ %start.2, %for.inc403 ], !dbg !5242
  %e.3.in = phi %struct.ddg_edge** [ %out305, %for.end304 ], [ %next_out404, %for.inc403 ]
  %late_start205.0 = phi i32 [ 2147483647, %for.end304 ], [ %late_start205.1, %for.inc403 ], !dbg !5242
  %count_succs.0 = phi i32 [ 0, %for.end304 ], [ %count_succs.2, %for.inc403 ], !dbg !5242
  %e.3 = load %struct.ddg_edge*, %struct.ddg_edge** %e.3.in, align 8, !dbg !5297
  call void @llvm.dbg.value(metadata i32 %count_succs.0, metadata !5094, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %late_start205.0, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.3, metadata !5060, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !5057, metadata !DIExpression()), !dbg !5112
  %cmp307 = icmp eq %struct.ddg_edge* %e.3, null, !dbg !5298
  br i1 %cmp307, label %for.end405, label %for.body309, !dbg !5299

for.body309:                                      ; preds = %for.cond306
  %dest311 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 1, !dbg !5300
  %91 = load %struct.ddg_node*, %struct.ddg_node** %dest311, align 8, !dbg !5300
  call void @llvm.dbg.value(metadata %struct.ddg_node* %91, metadata !5102, metadata !DIExpression()), !dbg !5301
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5302
  %tobool312 = icmp eq %struct._IO_FILE* %92, null, !dbg !5302
  br i1 %tobool312, label %if.end328, label %if.then313, !dbg !5304

if.then313:                                       ; preds = %for.body309
  %call314 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %92, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !5305
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5307
  tail call void @print_ddg_edge(%struct._IO_FILE* %93, %struct.ddg_edge* nonnull %e.3) #6, !dbg !5308
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5309
  %95 = load i32, i32* %cuid216, align 8, !dbg !5310
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn217, align 8, !dbg !5311
  %arrayidx319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5311
  %rt_int320 = bitcast %union.rtunion_def* %arrayidx319 to i32*, !dbg !5311
  %97 = load i32, i32* %rt_int320, align 8, !dbg !5311
  %cuid321 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %91, i64 0, i32 0, !dbg !5312
  %98 = load i32, i32* %cuid321, align 8, !dbg !5312
  %insn322 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %91, i64 0, i32 1, !dbg !5313
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn322, align 8, !dbg !5313
  %arrayidx325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5313
  %rt_int326 = bitcast %union.rtunion_def* %arrayidx325 to i32*, !dbg !5313
  %100 = load i32, i32* %rt_int326, align 8, !dbg !5313
  %call327 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.60, i64 0, i64 0), i32 %95, i32 %97, i32 %98, i32 %100) #6, !dbg !5314
  br label %if.end328, !dbg !5315

if.end328:                                        ; preds = %for.body309, %if.then313
  %cuid330 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %91, i64 0, i32 0, !dbg !5316
  %101 = load i32, i32* %cuid330, align 8, !dbg !5316
  %div331 = lshr i32 %101, 6, !dbg !5316
  %idxprom332 = zext i32 %div331 to i64, !dbg !5316
  %arrayidx333 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom332, !dbg !5316
  %102 = load i64, i64* %arrayidx333, align 8, !dbg !5316
  %rem335 = and i32 %101, 63, !dbg !5316
  %sh_prom336 = zext i32 %rem335 to i64, !dbg !5316
  %103 = shl i64 1, %sh_prom336, !dbg !5316
  %104 = and i64 %102, %103, !dbg !5316
  %tobool339 = icmp eq i64 %104, 0, !dbg !5316
  br i1 %tobool339, label %if.else397, label %if.then340, !dbg !5317

if.then340:                                       ; preds = %if.end328
  %info343 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %91, i64 0, i32 7, i32 0, !dbg !5318
  %105 = bitcast i8** %info343 to %struct.node_sched_params**, !dbg !5318
  %106 = load %struct.node_sched_params*, %struct.node_sched_params** %105, align 8, !dbg !5318
  %time344 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %106, i64 0, i32 1, !dbg !5318
  %107 = load i32, i32* %time344, align 4, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %107, metadata !5106, metadata !DIExpression()), !dbg !5319
  %latency345 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 4, !dbg !5320
  %108 = load i32, i32* %latency345, align 8, !dbg !5320
  %sub346 = sub nsw i32 %107, %108, !dbg !5320
  %distance347 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 5, !dbg !5320
  %109 = load i32, i32* %distance347, align 4, !dbg !5320
  %mul348 = mul nsw i32 %109, %ii, !dbg !5320
  %add349 = add nsw i32 %sub346, %mul348, !dbg !5320
  %cmp350 = icmp slt i32 %late_start205.0, %add349, !dbg !5320
  br i1 %cmp350, label %cond.end359, label %cond.false353, !dbg !5320

cond.false353:                                    ; preds = %if.then340
  br label %cond.end359, !dbg !5320

cond.end359:                                      ; preds = %if.then340, %cond.false353
  %cond360 = phi i32 [ %add349, %cond.false353 ], [ %late_start205.0, %if.then340 ], !dbg !5320
  call void @llvm.dbg.value(metadata i32 %cond360, metadata !5092, metadata !DIExpression()), !dbg !5242
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5321
  %tobool361 = icmp eq %struct._IO_FILE* %110, null, !dbg !5321
  br i1 %tobool361, label %if.end365, label %if.then362, !dbg !5323

if.then362:                                       ; preds = %cond.end359
  %call364 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %110, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i32 %107, i32 %cond360, i32 %108) #6, !dbg !5324
  br label %if.end365, !dbg !5324

if.end365:                                        ; preds = %cond.end359, %if.then362
  %type366 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 2, !dbg !5325
  %111 = load i32, i32* %type366, align 8, !dbg !5325
  %cmp367 = icmp eq i32 %111, 0, !dbg !5327
  br i1 %cmp367, label %land.lhs.true369, label %if.end365.if.end375_crit_edge, !dbg !5328

if.end365.if.end375_crit_edge:                    ; preds = %if.end365
  %data_type376.phi.trans.insert = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 3, !dbg !5329
  %.pre6 = load i32, i32* %data_type376.phi.trans.insert, align 4, !dbg !5331
  br label %if.end375, !dbg !5328

land.lhs.true369:                                 ; preds = %if.end365
  %data_type370 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 3, !dbg !5332
  %112 = load i32, i32* %data_type370, align 4, !dbg !5332
  %cmp371 = icmp eq i32 %112, 1, !dbg !5333
  %inc374 = zext i1 %cmp371 to i32, !dbg !5334
  %spec.select3 = add nsw i32 %count_succs.0, %inc374, !dbg !5334
  br label %if.end375, !dbg !5334

if.end375:                                        ; preds = %if.end365.if.end375_crit_edge, %land.lhs.true369
  %113 = phi i32 [ %.pre6, %if.end365.if.end375_crit_edge ], [ %112, %land.lhs.true369 ], !dbg !5331
  %count_succs.1 = phi i32 [ %count_succs.0, %if.end365.if.end375_crit_edge ], [ %spec.select3, %land.lhs.true369 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_succs.1, metadata !5094, metadata !DIExpression()), !dbg !5242
  %cmp377 = icmp eq i32 %113, 2, !dbg !5335
  br i1 %cmp377, label %if.then379, label %for.inc403, !dbg !5336

if.then379:                                       ; preds = %if.end375
  %114 = load %struct.node_sched_params*, %struct.node_sched_params** %105, align 8, !dbg !5337
  %time382 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %114, i64 0, i32 1, !dbg !5337
  %115 = load i32, i32* %time382, align 4, !dbg !5337
  %sub383 = sub nsw i32 %115, %ii, !dbg !5337
  %add384 = add nsw i32 %sub383, 1, !dbg !5337
  %cmp385 = icmp sgt i32 %start.0, %add384, !dbg !5337
  br i1 %cmp385, label %for.inc403, label %cond.false388, !dbg !5337

cond.false388:                                    ; preds = %if.then379
  br label %for.inc403, !dbg !5337

if.else397:                                       ; preds = %if.end328
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5338
  %tobool398 = icmp eq %struct._IO_FILE* %116, null, !dbg !5338
  br i1 %tobool398, label %for.inc403, label %if.then399, !dbg !5340

if.then399:                                       ; preds = %if.else397
  %call400 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %116, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !5341
  br label %for.inc403, !dbg !5341

for.inc403:                                       ; preds = %if.else397, %cond.false388, %if.then379, %if.end375, %if.then399
  %start.2 = phi i32 [ %start.0, %if.end375 ], [ %add384, %cond.false388 ], [ %start.0, %if.then379 ], [ %start.0, %if.then399 ], [ %start.0, %if.else397 ], !dbg !5242
  %late_start205.1 = phi i32 [ %cond360, %if.end375 ], [ %cond360, %cond.false388 ], [ %cond360, %if.then379 ], [ %late_start205.0, %if.then399 ], [ %late_start205.0, %if.else397 ], !dbg !5242
  %count_succs.2 = phi i32 [ %count_succs.1, %if.end375 ], [ %count_succs.1, %cond.false388 ], [ %count_succs.1, %if.then379 ], [ %count_succs.0, %if.then399 ], [ %count_succs.0, %if.else397 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_succs.2, metadata !5094, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %late_start205.1, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %start.2, metadata !5057, metadata !DIExpression()), !dbg !5112
  %next_out404 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.3, i64 0, i32 7, !dbg !5342
  br label %for.cond306, !dbg !5343, !llvm.loop !5344

for.end405:                                       ; preds = %for.cond306
  %start.0.lcssa = phi i32 [ %start.0, %for.cond306 ], !dbg !5242
  %late_start205.0.lcssa = phi i32 [ %late_start205.0, %for.cond306 ], !dbg !5242
  %count_succs.0.lcssa = phi i32 [ %count_succs.0, %for.cond306 ], !dbg !5242
  call void @llvm.dbg.value(metadata i32 %start.0.lcssa, metadata !5057, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start205.0.lcssa, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_succs.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %start.0.lcssa, metadata !5057, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start205.0.lcssa, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_succs.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %start.0.lcssa, metadata !5057, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %late_start205.0.lcssa, metadata !5092, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %count_succs.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5242
  %cmp406 = icmp sgt i32 %start.0.lcssa, %early_start204.0.lcssa, !dbg !5346
  %start.0.early_start204.0 = select i1 %cmp406, i32 %start.0.lcssa, i32 %early_start204.0.lcssa, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %start.0.early_start204.0, metadata !5057, metadata !DIExpression()), !dbg !5112
  %add412 = add nsw i32 %early_start204.0.lcssa, %ii, !dbg !5347
  %cmp414 = icmp sgt i32 %add412, %late_start205.0.lcssa, !dbg !5347
  %add419 = add nsw i32 %late_start205.0.lcssa, 1, !dbg !5347
  %cond421 = select i1 %cmp414, i32 %add419, i32 %add412, !dbg !5347
  %cmp422 = icmp slt i32 %end.6.lcssa, %cond421, !dbg !5347
  br i1 %cmp422, label %cond.end436, label %cond.false425, !dbg !5347

cond.false425:                                    ; preds = %for.end405
  br label %cond.end436, !dbg !5347

cond.end436:                                      ; preds = %cond.false425, %for.end405
  %cond437 = phi i32 [ %end.6.lcssa, %for.end405 ], [ %cond421, %cond.false425 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %cond437, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 1, metadata !5058, metadata !DIExpression()), !dbg !5112
  %cmp438 = icmp sge i32 %count_succs.0.lcssa, %count_preds.0.lcssa, !dbg !5348
  %sub441 = add nsw i32 %cond437, -1, !dbg !5349
  %sub442 = add nsw i32 %start.0.early_start204.0, -1, !dbg !5349
  %end.9 = select i1 %cmp438, i32 %sub442, i32 %cond437, !dbg !5349
  %step.0 = select i1 %cmp438, i32 -1, i32 1, !dbg !5349
  %start.3 = select i1 %cmp438, i32 %sub441, i32 %start.0.early_start204.0, !dbg !5349
  br label %if.end450, !dbg !5349

if.else444:                                       ; preds = %if.else199
  %info446 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %2, i64 %idxprom1, i32 7, i32 0, !dbg !5350
  %117 = bitcast i8** %info446 to %struct.node_sched_params**, !dbg !5350
  %118 = load %struct.node_sched_params*, %struct.node_sched_params** %117, align 8, !dbg !5350
  %asap = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %118, i64 0, i32 0, !dbg !5350
  %119 = load i32, i32* %asap, align 8, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %119, metadata !5057, metadata !DIExpression()), !dbg !5112
  %add447 = add nsw i32 %119, %ii, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %add447, metadata !5059, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 1, metadata !5058, metadata !DIExpression()), !dbg !5112
  br label %if.end450

if.end450:                                        ; preds = %for.end180, %for.end, %if.then190, %cond.end436, %if.else444, %if.then76
  %end.12 = phi i32 [ %cond74, %if.then76 ], [ %cond74, %for.end ], [ %cond188, %if.then190 ], [ %cond188, %for.end180 ], [ %add447, %if.else444 ], [ %end.9, %cond.end436 ], !dbg !5353
  %step.3 = phi i32 [ 1, %if.then76 ], [ 1, %for.end ], [ -1, %if.then190 ], [ -1, %for.end180 ], [ 1, %if.else444 ], [ %step.0, %cond.end436 ], !dbg !5353
  %start.6 = phi i32 [ %early_start.0.lcssa, %if.then76 ], [ %early_start.0.lcssa, %for.end ], [ %late_start.0.lcssa, %if.then190 ], [ %late_start.0.lcssa, %for.end180 ], [ %119, %if.else444 ], [ %start.3, %cond.end436 ], !dbg !5353
  call void @llvm.dbg.value(metadata i32 %start.6, metadata !5057, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %step.3, metadata !5058, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.value(metadata i32 %end.12, metadata !5059, metadata !DIExpression()), !dbg !5112
  store i32 %start.6, i32* %start_p, align 4, !dbg !5354
  store i32 %step.3, i32* %step_p, align 4, !dbg !5355
  store i32 %end.12, i32* %end_p, align 4, !dbg !5356
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !5357
  %120 = load i8*, i8** %popcount, align 8, !dbg !5357
  tail call void @free(i8* %120) #6, !dbg !5357
  %121 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !5357
  tail call void @free(i8* %121) #6, !dbg !5357
  %popcount451 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call6, i64 0, i32 0, !dbg !5358
  %122 = load i8*, i8** %popcount451, align 8, !dbg !5358
  tail call void @free(i8* %122) #6, !dbg !5358
  %123 = bitcast %struct.simple_bitmap_def* %call6 to i8*, !dbg !5358
  tail call void @free(i8* %123) #6, !dbg !5358
  %cmp452 = icmp sge i32 %start.6, %end.12, !dbg !5359
  %cmp455 = icmp eq i32 %step.3, 1, !dbg !5361
  %or.cond4 = and i1 %cmp452, %cmp455, !dbg !5362
  br i1 %or.cond4, label %if.then462, label %lor.lhs.false, !dbg !5362

lor.lhs.false:                                    ; preds = %if.end450
  %cmp457 = icmp sle i32 %start.6, %end.12, !dbg !5363
  %cmp460 = icmp eq i32 %step.3, -1, !dbg !5364
  %or.cond5 = and i1 %cmp457, %cmp460, !dbg !5365
  br i1 %or.cond5, label %if.then462, label %cleanup, !dbg !5365

if.then462:                                       ; preds = %lor.lhs.false, %if.end450
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5366
  %tobool463 = icmp eq %struct._IO_FILE* %124, null, !dbg !5366
  br i1 %tobool463, label %cleanup, label %if.then464, !dbg !5369

if.then464:                                       ; preds = %if.then462
  %call465 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %124, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.61, i64 0, i64 0), i32 %start.6, i32 %end.12, i32 %step.3) #6, !dbg !5370
  br label %cleanup, !dbg !5370

cleanup:                                          ; preds = %if.then462, %lor.lhs.false, %if.then464
  %retval.0 = phi i32 [ -1, %if.then464 ], [ -1, %if.then462 ], [ 0, %lor.lhs.false ], !dbg !5112
  ret i32 %retval.0, !dbg !5371
}

; Function Attrs: nounwind uwtable
define internal fastcc void @calculate_must_precede_follow(%struct.ddg_node* %u_node, i32 %start, i32 %end, i32 %step, i32 %ii, %struct.simple_bitmap_def* %sched_nodes, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !5372 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg_node* %u_node, metadata !5376, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i32 %start, metadata !5377, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i32 %end, metadata !5378, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i32 %step, metadata !5379, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i32 %ii, metadata !5380, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5381, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_precede, metadata !5382, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !5383, metadata !DIExpression()), !dbg !5387
  %tobool = icmp ne %struct.simple_bitmap_def* %must_precede, null, !dbg !5388
  %tobool1 = icmp ne %struct.simple_bitmap_def* %must_follow, null, !dbg !5388
  %or.cond = and i1 %tobool, %tobool1, !dbg !5388
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !5388

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5388
  br label %cond.end, !dbg !5388

cond.end:                                         ; preds = %entry, %cond.true
  %cmp = icmp eq i32 %step, 1, !dbg !5389
  %sub = sub nsw i32 %end, %step, !dbg !5390
  %cond5 = select i1 %cmp, i32 %start, i32 %sub, !dbg !5390
  call void @llvm.dbg.value(metadata i32 %cond5, metadata !5385, metadata !DIExpression()), !dbg !5387
  %cond11 = select i1 %cmp, i32 %sub, i32 %start, !dbg !5391
  call void @llvm.dbg.value(metadata i32 %cond11, metadata !5386, metadata !DIExpression()), !dbg !5387
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %must_precede) #6, !dbg !5392
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %must_follow) #6, !dbg !5393
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5394
  %tobool12 = icmp eq %struct._IO_FILE* %0, null, !dbg !5394
  br i1 %tobool12, label %if.end, label %if.then, !dbg !5396

if.then:                                          ; preds = %cond.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !5397
  br label %if.end, !dbg !5397

if.end:                                           ; preds = %cond.end, %if.then
  %in = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %u_node, i64 0, i32 3, !dbg !5398
  br label %for.cond, !dbg !5400

for.cond:                                         ; preds = %for.inc, %if.end
  %e.0.in = phi %struct.ddg_edge** [ %in, %if.end ], [ %next_in, %for.inc ]
  %e.0 = load %struct.ddg_edge*, %struct.ddg_edge** %e.0.in, align 8, !dbg !5401
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.0, metadata !5384, metadata !DIExpression()), !dbg !5387
  %cmp13 = icmp eq %struct.ddg_edge* %e.0, null, !dbg !5402
  br i1 %cmp13, label %for.end, label %for.body, !dbg !5404

for.body:                                         ; preds = %for.cond
  %src = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 0, !dbg !5405
  %1 = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !5405
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %1, i64 0, i32 0, !dbg !5405
  %2 = load i32, i32* %cuid, align 8, !dbg !5405
  %div = lshr i32 %2, 6, !dbg !5405
  %idxprom = zext i32 %div to i64, !dbg !5405
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom, !dbg !5405
  %3 = load i64, i64* %arrayidx, align 8, !dbg !5405
  %rem = and i32 %2, 63, !dbg !5405
  %sh_prom = zext i32 %rem to i64, !dbg !5405
  %4 = shl i64 1, %sh_prom, !dbg !5405
  %5 = and i64 %3, %4, !dbg !5405
  %tobool16 = icmp eq i64 %5, 0, !dbg !5405
  br i1 %tobool16, label %for.inc, label %land.lhs.true17, !dbg !5407

land.lhs.true17:                                  ; preds = %for.body
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %1, i64 0, i32 7, i32 0, !dbg !5408
  %6 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5408
  %7 = load %struct.node_sched_params*, %struct.node_sched_params** %6, align 8, !dbg !5408
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %7, i64 0, i32 1, !dbg !5408
  %8 = load i32, i32* %time, align 4, !dbg !5408
  %distance = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 5, !dbg !5409
  %9 = load i32, i32* %distance, align 4, !dbg !5409
  %mul = mul nsw i32 %9, %ii, !dbg !5410
  %sub19 = sub nsw i32 %8, %mul, !dbg !5411
  %cmp20 = icmp eq i32 %sub19, %cond5, !dbg !5412
  br i1 %cmp20, label %if.then21, label %for.inc, !dbg !5413

if.then21:                                        ; preds = %land.lhs.true17
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5414
  %tobool22 = icmp eq %struct._IO_FILE* %10, null, !dbg !5414
  br i1 %tobool22, label %if.end27, label %if.then23, !dbg !5417

if.then23:                                        ; preds = %if.then21
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i32 %2) #6, !dbg !5418
  %.pre = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !5419
  %cuid29.phi.trans.insert = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %.pre, i64 0, i32 0, !dbg !5420
  %.pre1 = load i32, i32* %cuid29.phi.trans.insert, align 8, !dbg !5421
  br label %if.end27, !dbg !5418

if.end27:                                         ; preds = %if.then21, %if.then23
  %11 = phi i32 [ %2, %if.then21 ], [ %.pre1, %if.then23 ], !dbg !5421
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %must_precede, i32 %11) #7, !dbg !5422
  br label %for.inc, !dbg !5423

for.inc:                                          ; preds = %for.body, %land.lhs.true17, %if.end27
  %next_in = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 6, !dbg !5424
  br label %for.cond, !dbg !5425, !llvm.loop !5426

for.end:                                          ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5428
  %tobool31 = icmp eq %struct._IO_FILE* %12, null, !dbg !5428
  br i1 %tobool31, label %if.end34, label %if.then32, !dbg !5430

if.then32:                                        ; preds = %for.end
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !5431
  br label %if.end34, !dbg !5431

if.end34:                                         ; preds = %for.end, %if.then32
  %out = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %u_node, i64 0, i32 4, !dbg !5432
  br label %for.cond35, !dbg !5434

for.cond35:                                       ; preds = %for.inc68, %if.end34
  %e.1.in = phi %struct.ddg_edge** [ %out, %if.end34 ], [ %next_out, %for.inc68 ]
  %e.1 = load %struct.ddg_edge*, %struct.ddg_edge** %e.1.in, align 8, !dbg !5435
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.1, metadata !5384, metadata !DIExpression()), !dbg !5387
  %cmp36 = icmp eq %struct.ddg_edge* %e.1, null, !dbg !5436
  br i1 %cmp36, label %for.end69, label %for.body37, !dbg !5438

for.body37:                                       ; preds = %for.cond35
  %dest = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 1, !dbg !5439
  %13 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !5439
  %cuid39 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %13, i64 0, i32 0, !dbg !5439
  %14 = load i32, i32* %cuid39, align 8, !dbg !5439
  %div40 = lshr i32 %14, 6, !dbg !5439
  %idxprom41 = zext i32 %div40 to i64, !dbg !5439
  %arrayidx42 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom41, !dbg !5439
  %15 = load i64, i64* %arrayidx42, align 8, !dbg !5439
  %rem45 = and i32 %14, 63, !dbg !5439
  %sh_prom46 = zext i32 %rem45 to i64, !dbg !5439
  %16 = shl i64 1, %sh_prom46, !dbg !5439
  %17 = and i64 %15, %16, !dbg !5439
  %tobool49 = icmp eq i64 %17, 0, !dbg !5439
  br i1 %tobool49, label %for.inc68, label %land.lhs.true50, !dbg !5441

land.lhs.true50:                                  ; preds = %for.body37
  %info53 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %13, i64 0, i32 7, i32 0, !dbg !5442
  %18 = bitcast i8** %info53 to %struct.node_sched_params**, !dbg !5442
  %19 = load %struct.node_sched_params*, %struct.node_sched_params** %18, align 8, !dbg !5442
  %time54 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %19, i64 0, i32 1, !dbg !5442
  %20 = load i32, i32* %time54, align 4, !dbg !5442
  %distance55 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 5, !dbg !5443
  %21 = load i32, i32* %distance55, align 4, !dbg !5443
  %mul56 = mul nsw i32 %21, %ii, !dbg !5444
  %add = add nsw i32 %20, %mul56, !dbg !5445
  %cmp57 = icmp eq i32 %add, %cond11, !dbg !5446
  br i1 %cmp57, label %if.then58, label %for.inc68, !dbg !5447

if.then58:                                        ; preds = %land.lhs.true50
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5448
  %tobool59 = icmp eq %struct._IO_FILE* %22, null, !dbg !5448
  br i1 %tobool59, label %if.end64, label %if.then60, !dbg !5451

if.then60:                                        ; preds = %if.then58
  %call63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i32 %14) #6, !dbg !5452
  %.pre2 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !5453
  %cuid66.phi.trans.insert = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %.pre2, i64 0, i32 0, !dbg !5454
  %.pre3 = load i32, i32* %cuid66.phi.trans.insert, align 8, !dbg !5455
  br label %if.end64, !dbg !5452

if.end64:                                         ; preds = %if.then58, %if.then60
  %23 = phi i32 [ %14, %if.then58 ], [ %.pre3, %if.then60 ], !dbg !5455
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %must_follow, i32 %23) #7, !dbg !5456
  br label %for.inc68, !dbg !5457

for.inc68:                                        ; preds = %for.body37, %land.lhs.true50, %if.end64
  %next_out = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 7, !dbg !5458
  br label %for.cond35, !dbg !5459, !llvm.loop !5460

for.end69:                                        ; preds = %for.cond35
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5462
  %tobool70 = icmp eq %struct._IO_FILE* %24, null, !dbg !5462
  br i1 %tobool70, label %if.end73, label %if.then71, !dbg !5464

if.then71:                                        ; preds = %for.end69
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5465
  br label %if.end73, !dbg !5465

if.end73:                                         ; preds = %for.end69, %if.then71
  ret void, !dbg !5466
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_scheduling_node_in_cycle(%struct.partial_schedule* %ps, %struct.ddg_node* %u_node, i32 %u, i32 %cycle, %struct.simple_bitmap_def* %sched_nodes, i32* %num_splits, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !5467 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5471, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.ddg_node* %u_node, metadata !5472, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %u, metadata !5473, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !5474, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5475, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32* %num_splits, metadata !5476, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_precede, metadata !5477, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !5478, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 0, metadata !5480, metadata !DIExpression()), !dbg !5481
  tail call fastcc void @verify_partial_schedule(%struct.partial_schedule* %ps, %struct.simple_bitmap_def* %sched_nodes) #7, !dbg !5482
  %call = tail call fastcc %struct.ps_insn* @ps_add_node_check_conflicts(%struct.partial_schedule* %ps, %struct.ddg_node* %u_node, i32 %cycle, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) #7, !dbg !5483
  call void @llvm.dbg.value(metadata %struct.ps_insn* %call, metadata !5479, metadata !DIExpression()), !dbg !5481
  %tobool = icmp eq %struct.ps_insn* %call, null, !dbg !5484
  br i1 %tobool, label %if.end4, label %if.then, !dbg !5486

if.then:                                          ; preds = %entry
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %u_node, i64 0, i32 7, i32 0, !dbg !5487
  %0 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5487
  %1 = load %struct.node_sched_params*, %struct.node_sched_params** %0, align 8, !dbg !5487
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %1, i64 0, i32 1, !dbg !5487
  store i32 %cycle, i32* %time, align 4, !dbg !5489
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %sched_nodes, i32 %u) #7, !dbg !5490
  call void @llvm.dbg.value(metadata i8 1, metadata !5480, metadata !DIExpression()), !dbg !5481
  store i32 0, i32* %num_splits, align 4, !dbg !5491
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5492
  %tobool1 = icmp eq %struct._IO_FILE* %2, null, !dbg !5492
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !5494

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.64, i64 0, i64 0), i32 %cycle) #6, !dbg !5495
  br label %if.end4, !dbg !5495

if.end4:                                          ; preds = %if.then, %entry, %if.then2
  %success.0 = phi i8 [ 0, %entry ], [ 1, %if.then2 ], [ 1, %if.then ], !dbg !5481
  call void @llvm.dbg.value(metadata i8 %success.0, metadata !5480, metadata !DIExpression()), !dbg !5481
  ret i8 %success.0, !dbg !5496
}

; Function Attrs: nounwind uwtable
define internal fastcc void @verify_partial_schedule(%struct.partial_schedule* %ps, %struct.simple_bitmap_def* %sched_nodes) unnamed_addr #4 !dbg !5497 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5501, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5502, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 0, metadata !5503, metadata !DIExpression()), !dbg !5511
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5512
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5513
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !5514
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !5514
  br label %for.cond, !dbg !5515

for.cond:                                         ; preds = %for.inc20, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc20 ], [ 0, %entry ], !dbg !5516
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5503, metadata !DIExpression()), !dbg !5511
  %0 = load i32, i32* %ii, align 8, !dbg !5517
  %1 = sext i32 %0 to i64, !dbg !5518
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5518
  br i1 %cmp, label %for.body, label %for.end21, !dbg !5519

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5520
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %indvars.iv, !dbg !5521
  br label %for.cond1, !dbg !5522

for.cond1:                                        ; preds = %for.inc, %for.body
  %crr_insn.0.in = phi %struct.ps_insn** [ %arrayidx, %for.body ], [ %next_in_row, %for.inc ]
  %crr_insn.0 = load %struct.ps_insn*, %struct.ps_insn** %crr_insn.0.in, align 8, !dbg !5513
  call void @llvm.dbg.value(metadata %struct.ps_insn* %crr_insn.0, metadata !5504, metadata !DIExpression()), !dbg !5511
  %tobool = icmp eq %struct.ps_insn* %crr_insn.0, null, !dbg !5523
  br i1 %tobool, label %for.inc20, label %for.body2, !dbg !5523

for.body2:                                        ; preds = %for.cond1
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 0, !dbg !5524
  %3 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !5524
  call void @llvm.dbg.value(metadata %struct.ddg_node* %3, metadata !5505, metadata !DIExpression()), !dbg !5514
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 0, !dbg !5525
  %4 = load i32, i32* %cuid, align 8, !dbg !5525
  %div = lshr i32 %4, 6, !dbg !5525
  %idxprom3 = zext i32 %div to i64, !dbg !5525
  %arrayidx4 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom3, !dbg !5525
  %5 = load i64, i64* %arrayidx4, align 8, !dbg !5525
  %rem = and i32 %4, 63, !dbg !5525
  %sh_prom = zext i32 %rem to i64, !dbg !5525
  %6 = shl i64 1, %sh_prom, !dbg !5525
  %7 = and i64 %5, %6, !dbg !5525
  %tobool6 = icmp eq i64 %7, 0, !dbg !5525
  br i1 %tobool6, label %cond.true, label %cond.end, !dbg !5525

cond.true:                                        ; preds = %for.body2
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 2023, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5525
  br label %cond.end, !dbg !5525

cond.end:                                         ; preds = %for.body2, %cond.true
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 7, i32 0, !dbg !5526
  %8 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5526
  %9 = load %struct.node_sched_params*, %struct.node_sched_params** %8, align 8, !dbg !5526
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %9, i64 0, i32 1, !dbg !5526
  %10 = load i32, i32* %time, align 4, !dbg !5526
  %11 = load i32, i32* %min_cycle, align 8, !dbg !5526
  %cmp7 = icmp slt i32 %10, %11, !dbg !5526
  br i1 %cmp7, label %cond.true8, label %cond.end10, !dbg !5526

cond.true8:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 2026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5526
  %.pre = load %struct.node_sched_params*, %struct.node_sched_params** %8, align 8, !dbg !5527
  %time14.phi.trans.insert = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %.pre, i64 0, i32 1, !dbg !5514
  %.pre1 = load i32, i32* %time14.phi.trans.insert, align 4, !dbg !5527
  br label %cond.end10, !dbg !5526

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %12 = phi i32 [ %10, %cond.end ], [ %.pre1, %cond.true8 ], !dbg !5527
  %13 = load i32, i32* %max_cycle, align 4, !dbg !5527
  %cmp15 = icmp sgt i32 %12, %13, !dbg !5527
  br i1 %cmp15, label %cond.true16, label %for.inc, !dbg !5527

cond.true16:                                      ; preds = %cond.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 2027, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5527
  br label %for.inc, !dbg !5527

for.inc:                                          ; preds = %cond.end10, %cond.true16
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 2, !dbg !5528
  br label %for.cond1, !dbg !5529, !llvm.loop !5530

for.inc20:                                        ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5532
  call void @llvm.dbg.value(metadata i32 undef, metadata !5503, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5511
  br label %for.cond, !dbg !5533, !llvm.loop !5534

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !5536
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reset_partial_schedule(%struct.partial_schedule* %ps, i32 %new_ii) unnamed_addr #4 !dbg !5537 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5539, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 %new_ii, metadata !5540, metadata !DIExpression()), !dbg !5541
  %tobool = icmp eq %struct.partial_schedule* %ps, null, !dbg !5542
  br i1 %tobool, label %return, label %if.end, !dbg !5544

if.end:                                           ; preds = %entry
  tail call fastcc void @free_ps_insns(%struct.partial_schedule* nonnull %ps) #7, !dbg !5545
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5546
  %0 = load i32, i32* %ii, align 8, !dbg !5546
  %cmp = icmp eq i32 %0, %new_ii, !dbg !5548
  br i1 %cmp, label %return, label %if.end2, !dbg !5549

if.end2:                                          ; preds = %if.end
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5550
  %1 = bitcast %struct.ps_insn*** %rows to i8**, !dbg !5550
  %2 = load i8*, i8** %1, align 8, !dbg !5550
  %conv = sext i32 %new_ii to i64, !dbg !5551
  %mul = shl nsw i64 %conv, 3, !dbg !5552
  %call = tail call i8* @xrealloc(i8* %2, i64 %mul) #6, !dbg !5553
  store i8* %call, i8** %1, align 8, !dbg !5554
  %call7 = tail call i8* @memset(i8* %call, i32 0, i64 %mul) #6, !dbg !5555
  store i32 %new_ii, i32* %ii, align 8, !dbg !5556
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !5557
  store i32 2147483647, i32* %min_cycle, align 8, !dbg !5558
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !5559
  store i32 -2147483648, i32* %max_cycle, align 4, !dbg !5560
  br label %return, !dbg !5561

return:                                           ; preds = %entry, %if.end, %if.end2
  ret void, !dbg !5561
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @compute_split_row(%struct.simple_bitmap_def* %sched_nodes, i32 %low, i32 %up, i32 %ii, %struct.ddg_node* %u_node) unnamed_addr #4 !dbg !5562 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5566, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %low, metadata !5567, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %up, metadata !5568, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %ii, metadata !5569, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %u_node, metadata !5570, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !5572, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !5573, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* null, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* null, metadata !5575, metadata !DIExpression()), !dbg !5585
  %in = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %u_node, i64 0, i32 3, !dbg !5586
  br label %for.cond, !dbg !5587

for.cond:                                         ; preds = %for.inc, %entry
  %lower.0 = phi i32 [ -2147483648, %entry ], [ %lower.2, %for.inc ], !dbg !5585
  %e.0.in = phi %struct.ddg_edge** [ %in, %entry ], [ %next_in, %for.inc ]
  %crit_pred.0 = phi %struct.ddg_node* [ null, %entry ], [ %crit_pred.2, %for.inc ], !dbg !5585
  %e.0 = load %struct.ddg_edge*, %struct.ddg_edge** %e.0.in, align 8, !dbg !5588
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_pred.0, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.0, metadata !5571, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %lower.0, metadata !5572, metadata !DIExpression()), !dbg !5585
  %cmp = icmp eq %struct.ddg_edge* %e.0, null, !dbg !5589
  br i1 %cmp, label %for.end, label %for.body, !dbg !5590

for.body:                                         ; preds = %for.cond
  %src = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 0, !dbg !5591
  %0 = load %struct.ddg_node*, %struct.ddg_node** %src, align 8, !dbg !5591
  call void @llvm.dbg.value(metadata %struct.ddg_node* %0, metadata !5577, metadata !DIExpression()), !dbg !5592
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %0, i64 0, i32 0, !dbg !5593
  %1 = load i32, i32* %cuid, align 8, !dbg !5593
  %div = lshr i32 %1, 6, !dbg !5593
  %idxprom = zext i32 %div to i64, !dbg !5593
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom, !dbg !5593
  %2 = load i64, i64* %arrayidx, align 8, !dbg !5593
  %rem = and i32 %1, 63, !dbg !5593
  %sh_prom = zext i32 %rem to i64, !dbg !5593
  %3 = shl i64 1, %sh_prom, !dbg !5593
  %4 = and i64 %2, %3, !dbg !5593
  %tobool = icmp eq i64 %4, 0, !dbg !5593
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !5595

land.lhs.true:                                    ; preds = %for.body
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %0, i64 0, i32 7, i32 0, !dbg !5596
  %5 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5596
  %6 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !5596
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 0, i32 1, !dbg !5596
  %7 = load i32, i32* %time, align 4, !dbg !5596
  %latency = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 4, !dbg !5597
  %8 = load i32, i32* %latency, align 8, !dbg !5597
  %add = add nsw i32 %7, %8, !dbg !5598
  %distance = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 5, !dbg !5599
  %9 = load i32, i32* %distance, align 4, !dbg !5599
  %mul = mul nsw i32 %9, %ii, !dbg !5600
  %sub = sub nsw i32 %add, %mul, !dbg !5601
  %cmp2 = icmp eq i32 %sub, %low, !dbg !5602
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !5603

if.then:                                          ; preds = %land.lhs.true
  %cmp6 = icmp sgt i32 %7, %lower.0, !dbg !5604
  br i1 %cmp6, label %if.then7, label %for.inc, !dbg !5606

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.ddg_node* %0, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %7, metadata !5572, metadata !DIExpression()), !dbg !5585
  br label %for.inc, !dbg !5607

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then7, %if.then
  %lower.2 = phi i32 [ %lower.0, %land.lhs.true ], [ %lower.0, %for.body ], [ %7, %if.then7 ], [ %lower.0, %if.then ], !dbg !5585
  %crit_pred.2 = phi %struct.ddg_node* [ %crit_pred.0, %land.lhs.true ], [ %crit_pred.0, %for.body ], [ %0, %if.then7 ], [ %crit_pred.0, %if.then ], !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_pred.2, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %lower.2, metadata !5572, metadata !DIExpression()), !dbg !5585
  %next_in = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.0, i64 0, i32 6, !dbg !5609
  br label %for.cond, !dbg !5610, !llvm.loop !5611

for.end:                                          ; preds = %for.cond
  %crit_pred.0.lcssa = phi %struct.ddg_node* [ %crit_pred.0, %for.cond ], !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_pred.0.lcssa, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_pred.0.lcssa, metadata !5574, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_pred.0.lcssa, metadata !5574, metadata !DIExpression()), !dbg !5585
  %cmp12 = icmp eq %struct.ddg_node* %crit_pred.0.lcssa, null, !dbg !5613
  br i1 %cmp12, label %if.end23, label %if.then13, !dbg !5615

if.then13:                                        ; preds = %for.end
  %info15 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %crit_pred.0.lcssa, i64 0, i32 7, i32 0, !dbg !5616
  %10 = bitcast i8** %info15 to %struct.node_sched_params**, !dbg !5616
  %11 = load %struct.node_sched_params*, %struct.node_sched_params** %10, align 8, !dbg !5616
  %time16 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %11, i64 0, i32 1, !dbg !5616
  %12 = load i32, i32* %time16, align 4, !dbg !5616
  %add17 = add nsw i32 %12, 1, !dbg !5618
  call void @llvm.dbg.value(metadata i32 %add17, metadata !5576, metadata !DIExpression()), !dbg !5585
  %rem18 = srem i32 %add17, %ii, !dbg !5619
  %cmp19 = icmp slt i32 %rem18, 0, !dbg !5619
  %add21 = select i1 %cmp19, i32 %ii, i32 0, !dbg !5619
  %cond = add nsw i32 %rem18, %add21, !dbg !5619
  br label %cleanup, !dbg !5619

if.end23:                                         ; preds = %for.end
  %out = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %u_node, i64 0, i32 4, !dbg !5620
  br label %for.cond24, !dbg !5621

for.cond24:                                       ; preds = %for.inc60, %if.end23
  %e.1.in = phi %struct.ddg_edge** [ %out, %if.end23 ], [ %next_out, %for.inc60 ]
  %upper.0 = phi i32 [ 2147483647, %if.end23 ], [ %upper.2, %for.inc60 ], !dbg !5585
  %crit_succ.0 = phi %struct.ddg_node* [ null, %if.end23 ], [ %crit_succ.2, %for.inc60 ], !dbg !5585
  %e.1 = load %struct.ddg_edge*, %struct.ddg_edge** %e.1.in, align 8, !dbg !5622
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_succ.0, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %upper.0, metadata !5573, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_edge* %e.1, metadata !5571, metadata !DIExpression()), !dbg !5585
  %cmp25 = icmp eq %struct.ddg_edge* %e.1, null, !dbg !5623
  br i1 %cmp25, label %for.end61, label %for.body26, !dbg !5624

for.body26:                                       ; preds = %for.cond24
  %dest = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 1, !dbg !5625
  %13 = load %struct.ddg_node*, %struct.ddg_node** %dest, align 8, !dbg !5625
  call void @llvm.dbg.value(metadata %struct.ddg_node* %13, metadata !5581, metadata !DIExpression()), !dbg !5626
  %cuid29 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %13, i64 0, i32 0, !dbg !5627
  %14 = load i32, i32* %cuid29, align 8, !dbg !5627
  %div30 = lshr i32 %14, 6, !dbg !5627
  %idxprom31 = zext i32 %div30 to i64, !dbg !5627
  %arrayidx32 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %sched_nodes, i64 0, i32 3, i64 %idxprom31, !dbg !5627
  %15 = load i64, i64* %arrayidx32, align 8, !dbg !5627
  %rem34 = and i32 %14, 63, !dbg !5627
  %sh_prom35 = zext i32 %rem34 to i64, !dbg !5627
  %16 = shl i64 1, %sh_prom35, !dbg !5627
  %17 = and i64 %15, %16, !dbg !5627
  %tobool38 = icmp eq i64 %17, 0, !dbg !5627
  br i1 %tobool38, label %for.inc60, label %land.lhs.true39, !dbg !5629

land.lhs.true39:                                  ; preds = %for.body26
  %info41 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %13, i64 0, i32 7, i32 0, !dbg !5630
  %18 = bitcast i8** %info41 to %struct.node_sched_params**, !dbg !5630
  %19 = load %struct.node_sched_params*, %struct.node_sched_params** %18, align 8, !dbg !5630
  %time42 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %19, i64 0, i32 1, !dbg !5630
  %20 = load i32, i32* %time42, align 4, !dbg !5630
  %latency43 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 4, !dbg !5631
  %21 = load i32, i32* %latency43, align 8, !dbg !5631
  %sub44 = sub nsw i32 %20, %21, !dbg !5632
  %distance45 = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 5, !dbg !5633
  %22 = load i32, i32* %distance45, align 4, !dbg !5633
  %mul46 = mul nsw i32 %22, %ii, !dbg !5634
  %add47 = add nsw i32 %sub44, %mul46, !dbg !5635
  %cmp48 = icmp eq i32 %add47, %up, !dbg !5636
  br i1 %cmp48, label %if.then49, label %for.inc60, !dbg !5637

if.then49:                                        ; preds = %land.lhs.true39
  %cmp53 = icmp slt i32 %20, %upper.0, !dbg !5638
  br i1 %cmp53, label %if.then54, label %for.inc60, !dbg !5640

if.then54:                                        ; preds = %if.then49
  call void @llvm.dbg.value(metadata %struct.ddg_node* %13, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %20, metadata !5573, metadata !DIExpression()), !dbg !5585
  br label %for.inc60, !dbg !5641

for.inc60:                                        ; preds = %for.body26, %land.lhs.true39, %if.then54, %if.then49
  %upper.2 = phi i32 [ %upper.0, %land.lhs.true39 ], [ %upper.0, %for.body26 ], [ %20, %if.then54 ], [ %upper.0, %if.then49 ], !dbg !5585
  %crit_succ.2 = phi %struct.ddg_node* [ %crit_succ.0, %land.lhs.true39 ], [ %crit_succ.0, %for.body26 ], [ %13, %if.then54 ], [ %crit_succ.0, %if.then49 ], !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_succ.2, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %upper.2, metadata !5573, metadata !DIExpression()), !dbg !5585
  %next_out = getelementptr inbounds %struct.ddg_edge, %struct.ddg_edge* %e.1, i64 0, i32 7, !dbg !5643
  br label %for.cond24, !dbg !5644, !llvm.loop !5645

for.end61:                                        ; preds = %for.cond24
  %crit_succ.0.lcssa = phi %struct.ddg_node* [ %crit_succ.0, %for.cond24 ], !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_succ.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_succ.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.ddg_node* %crit_succ.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  %cmp62 = icmp eq %struct.ddg_node* %crit_succ.0.lcssa, null, !dbg !5647
  br i1 %cmp62, label %if.end76, label %if.then63, !dbg !5649

if.then63:                                        ; preds = %for.end61
  %info65 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %crit_succ.0.lcssa, i64 0, i32 7, i32 0, !dbg !5650
  %23 = bitcast i8** %info65 to %struct.node_sched_params**, !dbg !5650
  %24 = load %struct.node_sched_params*, %struct.node_sched_params** %23, align 8, !dbg !5650
  %time66 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %24, i64 0, i32 1, !dbg !5650
  %25 = load i32, i32* %time66, align 4, !dbg !5650
  call void @llvm.dbg.value(metadata i32 %25, metadata !5576, metadata !DIExpression()), !dbg !5585
  %rem67 = srem i32 %25, %ii, !dbg !5652
  %cmp68 = icmp slt i32 %rem67, 0, !dbg !5652
  %add71 = select i1 %cmp68, i32 %ii, i32 0, !dbg !5652
  %cond75 = add nsw i32 %rem67, %add71, !dbg !5652
  br label %cleanup, !dbg !5652

if.end76:                                         ; preds = %for.end61
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5653
  %tobool77 = icmp eq %struct._IO_FILE* %26, null, !dbg !5653
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !5655

if.then78:                                        ; preds = %if.end76
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.65, i64 0, i64 0)) #6, !dbg !5656
  br label %if.end79, !dbg !5656

if.end79:                                         ; preds = %if.end76, %if.then78
  %add80 = add nsw i32 %low, %up, !dbg !5657
  %add81 = add nsw i32 %add80, 1, !dbg !5657
  %div82 = sdiv i32 %add81, 2, !dbg !5657
  %rem83 = srem i32 %div82, %ii, !dbg !5657
  %cmp84 = icmp slt i32 %rem83, 0, !dbg !5657
  %add90 = select i1 %cmp84, i32 %ii, i32 0, !dbg !5657
  %cond97 = add nsw i32 %rem83, %add90, !dbg !5657
  br label %cleanup, !dbg !5657

cleanup:                                          ; preds = %if.end79, %if.then63, %if.then13
  %retval.0 = phi i32 [ %cond, %if.then13 ], [ %cond75, %if.then63 ], [ %cond97, %if.end79 ], !dbg !5585
  ret i32 %retval.0, !dbg !5658
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ps_insert_empty_row(%struct.partial_schedule* %ps, i32 %split_row, %struct.simple_bitmap_def* %sched_nodes) unnamed_addr #4 !dbg !5659 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5663, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i32 %split_row, metadata !5664, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %sched_nodes, metadata !5665, metadata !DIExpression()), !dbg !5687
  %ii1 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5688
  %0 = load i32, i32* %ii1, align 8, !dbg !5688
  call void @llvm.dbg.value(metadata i32 %0, metadata !5668, metadata !DIExpression()), !dbg !5687
  %add = add nsw i32 %0, 1, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %add, metadata !5669, metadata !DIExpression()), !dbg !5687
  tail call fastcc void @verify_partial_schedule(%struct.partial_schedule* %ps, %struct.simple_bitmap_def* %sched_nodes) #7, !dbg !5690
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !5691
  %1 = load i32, i32* %min_cycle, align 8, !dbg !5691
  %sub = sub nsw i32 %split_row, %1, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5664, metadata !DIExpression()), !dbg !5687
  %rem = srem i32 %sub, %0, !dbg !5693
  %cmp = icmp slt i32 %rem, 0, !dbg !5693
  %add3 = select i1 %cmp, i32 %0, i32 0, !dbg !5693
  %cond = add nsw i32 %rem, %add3, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5664, metadata !DIExpression()), !dbg !5687
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5694
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !5694
  br i1 %tobool, label %if.end, label %if.then, !dbg !5696

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), i32 %cond) #6, !dbg !5697
  br label %if.end, !dbg !5697

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @normalize_sched_times(%struct.partial_schedule* %ps) #7, !dbg !5698
  %3 = load i32, i32* %min_cycle, align 8, !dbg !5699
  tail call fastcc void @rotate_partial_schedule(%struct.partial_schedule* %ps, i32 %3) #7, !dbg !5700
  %conv = sext i32 %add to i64, !dbg !5701
  %call6 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !5702
  %4 = bitcast i8* %call6 to %struct.ps_insn**, !dbg !5703
  call void @llvm.dbg.value(metadata %struct.ps_insn** %4, metadata !5667, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i32 0, metadata !5670, metadata !DIExpression()), !dbg !5687
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5704
  %5 = sext i32 %cond to i64, !dbg !5705
  br label %for.cond, !dbg !5705

for.cond:                                         ; preds = %for.inc33, %if.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc33 ], [ 0, %if.end ], !dbg !5706
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !5670, metadata !DIExpression()), !dbg !5687
  %cmp7 = icmp slt i64 %indvars.iv1, %5, !dbg !5707
  br i1 %cmp7, label %for.body, label %for.end34, !dbg !5708

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5709
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %6, i64 %indvars.iv1, !dbg !5710
  %7 = bitcast %struct.ps_insn** %arrayidx to i64*, !dbg !5710
  %8 = load i64, i64* %7, align 8, !dbg !5710
  %arrayidx10 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %4, i64 %indvars.iv1, !dbg !5711
  %9 = bitcast %struct.ps_insn** %arrayidx10 to i64*, !dbg !5712
  store i64 %8, i64* %9, align 8, !dbg !5712
  %10 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5713
  %arrayidx13 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %10, i64 %indvars.iv1, !dbg !5714
  store %struct.ps_insn* null, %struct.ps_insn** %arrayidx13, align 8, !dbg !5715
  br label %for.cond16, !dbg !5716

for.cond16:                                       ; preds = %for.body18, %for.body
  %crr_insn.0.in = phi %struct.ps_insn** [ %arrayidx10, %for.body ], [ %next_in_row, %for.body18 ]
  %crr_insn.0 = load %struct.ps_insn*, %struct.ps_insn** %crr_insn.0.in, align 8, !dbg !5717
  call void @llvm.dbg.value(metadata %struct.ps_insn* %crr_insn.0, metadata !5666, metadata !DIExpression()), !dbg !5687
  %tobool17 = icmp eq %struct.ps_insn* %crr_insn.0, null, !dbg !5718
  br i1 %tobool17, label %for.inc33, label %for.body18, !dbg !5718

for.body18:                                       ; preds = %for.cond16
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 0, !dbg !5719
  %11 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !5719
  call void @llvm.dbg.value(metadata %struct.ddg_node* %11, metadata !5671, metadata !DIExpression()), !dbg !5720
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %11, i64 0, i32 7, i32 0, !dbg !5721
  %12 = bitcast i8** %info to %struct.node_sched_params**, !dbg !5721
  %13 = load %struct.node_sched_params*, %struct.node_sched_params** %12, align 8, !dbg !5721
  %time = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %13, i64 0, i32 1, !dbg !5721
  %14 = load i32, i32* %time, align 4, !dbg !5721
  %div = sdiv i32 %14, %0, !dbg !5722
  %add22 = add nsw i32 %14, %div, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %add22, metadata !5678, metadata !DIExpression()), !dbg !5720
  store i32 %add22, i32* %time, align 4, !dbg !5724
  %cycle = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 1, !dbg !5725
  store i32 %add22, i32* %cycle, align 8, !dbg !5726
  %rem26 = srem i32 %add22, %add, !dbg !5727
  %15 = load %struct.node_sched_params*, %struct.node_sched_params** %12, align 8, !dbg !5728
  %row29 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %15, i64 0, i32 4, !dbg !5728
  store i32 %rem26, i32* %row29, align 4, !dbg !5729
  %div30 = sdiv i32 %add22, %add, !dbg !5730
  %16 = load %struct.node_sched_params*, %struct.node_sched_params** %12, align 8, !dbg !5731
  %stage = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %16, i64 0, i32 5, !dbg !5731
  store i32 %div30, i32* %stage, align 8, !dbg !5732
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 2, !dbg !5733
  br label %for.cond16, !dbg !5734, !llvm.loop !5735

for.inc33:                                        ; preds = %for.cond16
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5737
  call void @llvm.dbg.value(metadata i32 undef, metadata !5670, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5687
  br label %for.cond, !dbg !5738, !llvm.loop !5739

for.end34:                                        ; preds = %for.cond
  %idxprom35 = sext i32 %cond to i64, !dbg !5741
  %arrayidx36 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %4, i64 %idxprom35, !dbg !5741
  store %struct.ps_insn* null, %struct.ps_insn** %arrayidx36, align 8, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5670, metadata !DIExpression()), !dbg !5687
  %17 = add i32 %add3, %rem, !dbg !5743
  %18 = sext i32 %17 to i64, !dbg !5743
  %19 = sext i32 %0 to i64, !dbg !5743
  br label %for.cond37, !dbg !5743

for.cond37:                                       ; preds = %for.inc83, %for.end34
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc83 ], [ %18, %for.end34 ], !dbg !5744
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5670, metadata !DIExpression()), !dbg !5687
  %cmp38 = icmp slt i64 %indvars.iv, %19, !dbg !5745
  br i1 %cmp38, label %for.body40, label %for.end85, !dbg !5746

for.body40:                                       ; preds = %for.cond37
  %20 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5747
  %arrayidx43 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %20, i64 %indvars.iv, !dbg !5748
  %21 = bitcast %struct.ps_insn** %arrayidx43 to i64*, !dbg !5748
  %22 = load i64, i64* %21, align 8, !dbg !5748
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5749
  %arrayidx46 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %4, i64 %indvars.iv.next, !dbg !5750
  %23 = bitcast %struct.ps_insn** %arrayidx46 to i64*, !dbg !5751
  store i64 %22, i64* %23, align 8, !dbg !5751
  %24 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5752
  %arrayidx49 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %24, i64 %indvars.iv, !dbg !5753
  store %struct.ps_insn* null, %struct.ps_insn** %arrayidx49, align 8, !dbg !5754
  br label %for.cond53, !dbg !5755

for.cond53:                                       ; preds = %for.body55, %for.body40
  %crr_insn.1.in = phi %struct.ps_insn** [ %arrayidx46, %for.body40 ], [ %next_in_row81, %for.body55 ]
  %crr_insn.1 = load %struct.ps_insn*, %struct.ps_insn** %crr_insn.1.in, align 8, !dbg !5756
  call void @llvm.dbg.value(metadata %struct.ps_insn* %crr_insn.1, metadata !5666, metadata !DIExpression()), !dbg !5687
  %tobool54 = icmp eq %struct.ps_insn* %crr_insn.1, null, !dbg !5757
  br i1 %tobool54, label %for.inc83, label %for.body55, !dbg !5757

for.body55:                                       ; preds = %for.cond53
  %node57 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.1, i64 0, i32 0, !dbg !5758
  %25 = load %struct.ddg_node*, %struct.ddg_node** %node57, align 8, !dbg !5758
  call void @llvm.dbg.value(metadata %struct.ddg_node* %25, metadata !5679, metadata !DIExpression()), !dbg !5759
  %info60 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %25, i64 0, i32 7, i32 0, !dbg !5760
  %26 = bitcast i8** %info60 to %struct.node_sched_params**, !dbg !5760
  %27 = load %struct.node_sched_params*, %struct.node_sched_params** %26, align 8, !dbg !5760
  %time61 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %27, i64 0, i32 1, !dbg !5760
  %28 = load i32, i32* %time61, align 4, !dbg !5760
  %div65 = sdiv i32 %28, %0, !dbg !5761
  %add66 = add nsw i32 %28, %div65, !dbg !5762
  %add67 = add nsw i32 %add66, 1, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %add67, metadata !5686, metadata !DIExpression()), !dbg !5759
  store i32 %add67, i32* %time61, align 4, !dbg !5764
  %cycle71 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.1, i64 0, i32 1, !dbg !5765
  store i32 %add67, i32* %cycle71, align 8, !dbg !5766
  %rem72 = srem i32 %add67, %add, !dbg !5767
  %29 = load %struct.node_sched_params*, %struct.node_sched_params** %26, align 8, !dbg !5768
  %row75 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %29, i64 0, i32 4, !dbg !5768
  store i32 %rem72, i32* %row75, align 4, !dbg !5769
  %div76 = sdiv i32 %add67, %add, !dbg !5770
  %30 = load %struct.node_sched_params*, %struct.node_sched_params** %26, align 8, !dbg !5771
  %stage79 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %30, i64 0, i32 5, !dbg !5771
  store i32 %div76, i32* %stage79, align 8, !dbg !5772
  %next_in_row81 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.1, i64 0, i32 2, !dbg !5773
  br label %for.cond53, !dbg !5774, !llvm.loop !5775

for.inc83:                                        ; preds = %for.cond53
  call void @llvm.dbg.value(metadata i32 undef, metadata !5670, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5687
  br label %for.cond37, !dbg !5777, !llvm.loop !5778

for.end85:                                        ; preds = %for.cond37
  %31 = load i32, i32* %min_cycle, align 8, !dbg !5780
  %div88 = sdiv i32 %31, %0, !dbg !5781
  %add89 = add nsw i32 %31, %div88, !dbg !5782
  %rem91 = srem i32 %31, %0, !dbg !5783
  %cmp92 = icmp slt i32 %rem91, 0, !dbg !5783
  %add97 = select i1 %cmp92, i32 %0, i32 0, !dbg !5783
  %cond102 = add nsw i32 %rem91, %add97, !dbg !5783
  %cmp103 = icmp sge i32 %cond102, %cond, !dbg !5784
  %cond105 = zext i1 %cmp103 to i32, !dbg !5783
  %add106 = add nsw i32 %add89, %cond105, !dbg !5785
  store i32 %add106, i32* %min_cycle, align 8, !dbg !5786
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !5787
  %32 = load i32, i32* %max_cycle, align 4, !dbg !5787
  %div109 = sdiv i32 %32, %0, !dbg !5788
  %add110 = add nsw i32 %32, %div109, !dbg !5789
  %rem112 = srem i32 %32, %0, !dbg !5790
  %cmp113 = icmp slt i32 %rem112, 0, !dbg !5790
  %add118 = select i1 %cmp113, i32 %0, i32 0, !dbg !5790
  %cond123 = add nsw i32 %rem112, %add118, !dbg !5790
  %cmp124 = icmp sge i32 %cond123, %cond, !dbg !5791
  %cond126 = zext i1 %cmp124 to i32, !dbg !5790
  %add127 = add nsw i32 %add110, %cond126, !dbg !5792
  store i32 %add127, i32* %max_cycle, align 4, !dbg !5793
  %33 = bitcast %struct.ps_insn*** %rows to i8**, !dbg !5794
  %34 = load i8*, i8** %33, align 8, !dbg !5794
  tail call void @free(i8* %34) #6, !dbg !5795
  store i8* %call6, i8** %33, align 8, !dbg !5796
  store i32 %add, i32* %ii1, align 8, !dbg !5797
  %35 = load i32, i32* %min_cycle, align 8, !dbg !5798
  %cmp133 = icmp sgt i32 %35, -1, !dbg !5798
  br i1 %cmp133, label %cond.end137, label %cond.true135, !dbg !5798

cond.true135:                                     ; preds = %for.end85
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1945, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5798
  br label %cond.end137, !dbg !5798

cond.end137:                                      ; preds = %for.end85, %cond.true135
  tail call fastcc void @verify_partial_schedule(%struct.partial_schedule* %ps, %struct.simple_bitmap_def* %sched_nodes) #7, !dbg !5799
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5800
  %tobool139 = icmp eq %struct._IO_FILE* %36, null, !dbg !5800
  br i1 %tobool139, label %if.end144, label %if.then140, !dbg !5802

if.then140:                                       ; preds = %cond.end137
  %37 = load i32, i32* %min_cycle, align 8, !dbg !5803
  %38 = load i32, i32* %max_cycle, align 4, !dbg !5804
  %call143 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i32 %37, i32 %38) #6, !dbg !5805
  br label %if.end144, !dbg !5805

if.end144:                                        ; preds = %cond.end137, %if.then140
  ret void, !dbg !5806
}

declare dso_local void @print_ddg_edge(%struct._IO_FILE*, %struct.ddg_edge*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ps_insn* @ps_add_node_check_conflicts(%struct.partial_schedule* %ps, %struct.ddg_node* %n, i32 %c, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !5807 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5811, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata %struct.ddg_node* %n, metadata !5812, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %c, metadata !5813, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_precede, metadata !5814, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !5815, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 0, metadata !5816, metadata !DIExpression()), !dbg !5818
  %call = tail call fastcc %struct.ps_insn* @add_node_to_ps(%struct.partial_schedule* %ps, %struct.ddg_node* %n, i32 %c, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) #7, !dbg !5819
  call void @llvm.dbg.value(metadata %struct.ps_insn* %call, metadata !5817, metadata !DIExpression()), !dbg !5818
  %tobool = icmp eq %struct.ps_insn* %call, null, !dbg !5821
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5822

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @ps_has_conflicts(%struct.partial_schedule* %ps, i32 %c, i32 %c) #7, !dbg !5823
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5823
  br i1 %tobool2, label %lor.rhs, label %lor.end, !dbg !5824

lor.rhs:                                          ; preds = %if.end
  %history = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 1, !dbg !5825
  %0 = load i32, i32* %history, align 4, !dbg !5825
  %cmp = icmp sgt i32 %0, 0, !dbg !5826
  br i1 %cmp, label %land.rhs, label %lor.end, !dbg !5827

land.rhs:                                         ; preds = %lor.rhs
  %sub = sub nsw i32 %c, %0, !dbg !5828
  %add = add nsw i32 %0, %c, !dbg !5829
  %call5 = tail call fastcc i32 @ps_has_conflicts(%struct.partial_schedule* %ps, i32 %sub, i32 %add) #7, !dbg !5830
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5827
  %phitmp = zext i1 %tobool6 to i32
  br label %lor.end

lor.end:                                          ; preds = %if.end, %lor.rhs, %land.rhs
  %1 = phi i32 [ 1, %if.end ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i32 %1, metadata !5816, metadata !DIExpression()), !dbg !5818
  %history15 = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 1, !dbg !5831
  br label %while.cond, !dbg !5833

while.cond:                                       ; preds = %lor.end25, %lor.end
  %has_conflicts.0 = phi i32 [ %1, %lor.end ], [ %lor.ext26, %lor.end25 ], !dbg !5818
  call void @llvm.dbg.value(metadata i32 %has_conflicts.0, metadata !5816, metadata !DIExpression()), !dbg !5818
  %cond1 = icmp eq i32 %has_conflicts.0, 0, !dbg !5833
  br i1 %cond1, label %if.end30.loopexit, label %while.body, !dbg !5833

while.body:                                       ; preds = %while.cond
  %call8 = tail call fastcc i32 @ps_insn_advance_column(%struct.partial_schedule* %ps, %struct.ps_insn* nonnull %call, %struct.simple_bitmap_def* %must_follow) #7, !dbg !5834
  %tobool9 = icmp eq i32 %call8, 0, !dbg !5834
  br i1 %tobool9, label %while.end, label %if.end11, !dbg !5836

if.end11:                                         ; preds = %while.body
  %call12 = tail call fastcc i32 @ps_has_conflicts(%struct.partial_schedule* %ps, i32 %c, i32 %c) #7, !dbg !5837
  %tobool13 = icmp eq i32 %call12, 0, !dbg !5837
  br i1 %tobool13, label %lor.rhs14, label %lor.end25, !dbg !5838

lor.rhs14:                                        ; preds = %if.end11
  %2 = load i32, i32* %history15, align 4, !dbg !5839
  %cmp16 = icmp sgt i32 %2, 0, !dbg !5840
  br i1 %cmp16, label %land.rhs17, label %lor.end25, !dbg !5841

land.rhs17:                                       ; preds = %lor.rhs14
  %sub19 = sub nsw i32 %c, %2, !dbg !5842
  %add21 = add nsw i32 %2, %c, !dbg !5843
  %call22 = tail call fastcc i32 @ps_has_conflicts(%struct.partial_schedule* %ps, i32 %sub19, i32 %add21) #7, !dbg !5844
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5841
  br label %lor.end25

lor.end25:                                        ; preds = %if.end11, %lor.rhs14, %land.rhs17
  %3 = phi i1 [ true, %if.end11 ], [ false, %lor.rhs14 ], [ %tobool23, %land.rhs17 ]
  %lor.ext26 = zext i1 %3 to i32, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %lor.ext26, metadata !5816, metadata !DIExpression()), !dbg !5818
  br label %while.cond, !dbg !5833, !llvm.loop !5845

while.end:                                        ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 %has_conflicts.0, metadata !5816, metadata !DIExpression()), !dbg !5818
  br i1 false, label %while.end.if.end30_crit_edge, label %if.then28, !dbg !5847

while.end.if.end30_crit_edge:                     ; preds = %while.end
  br label %if.end30, !dbg !5847

if.then28:                                        ; preds = %while.end
  %call29 = tail call fastcc zeroext i8 @remove_node_from_ps(%struct.partial_schedule* %ps, %struct.ps_insn* nonnull %call) #7, !dbg !5848
  br label %cleanup, !dbg !5851

if.end30.loopexit:                                ; preds = %while.cond
  br label %if.end30, !dbg !5852

if.end30:                                         ; preds = %while.end.if.end30_crit_edge, %if.end30.loopexit
  %min_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 3, !dbg !5852
  %4 = load i32, i32* %min_cycle, align 8, !dbg !5852
  %cmp31 = icmp slt i32 %4, %c, !dbg !5852
  br i1 %cmp31, label %cond.true, label %cond.end, !dbg !5852

cond.true:                                        ; preds = %if.end30
  br label %cond.end, !dbg !5852

cond.end:                                         ; preds = %if.end30, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %c, %if.end30 ], !dbg !5852
  store i32 %cond, i32* %min_cycle, align 8, !dbg !5853
  %max_cycle = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 4, !dbg !5854
  %5 = load i32, i32* %max_cycle, align 4, !dbg !5854
  %cmp34 = icmp sgt i32 %5, %c, !dbg !5854
  br i1 %cmp34, label %cond.true35, label %cond.end38, !dbg !5854

cond.true35:                                      ; preds = %cond.end
  br label %cond.end38, !dbg !5854

cond.end38:                                       ; preds = %cond.end, %cond.true35
  %cond39 = phi i32 [ %5, %cond.true35 ], [ %c, %cond.end ], !dbg !5854
  store i32 %cond39, i32* %max_cycle, align 4, !dbg !5855
  br label %cleanup, !dbg !5856

cleanup:                                          ; preds = %entry, %cond.end38, %if.then28
  %retval.0 = phi %struct.ps_insn* [ null, %if.then28 ], [ %call, %cond.end38 ], [ null, %entry ], !dbg !5818
  ret %struct.ps_insn* %retval.0, !dbg !5857
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ps_insn* @add_node_to_ps(%struct.partial_schedule* %ps, %struct.ddg_node* %node, i32 %cycle, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !5858 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %struct.ddg_node* %node, metadata !5861, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !5862, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_precede, metadata !5863, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !5864, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 1, metadata !5866, metadata !DIExpression()), !dbg !5868
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5869
  %0 = load i32, i32* %ii, align 8, !dbg !5869
  %rem = srem i32 %cycle, %0, !dbg !5869
  %cmp = icmp slt i32 %rem, 0, !dbg !5869
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5869

cond.true:                                        ; preds = %entry
  %add = add nsw i32 %rem, %0, !dbg !5869
  br label %cond.end, !dbg !5869

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %entry ], !dbg !5869
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5867, metadata !DIExpression()), !dbg !5868
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5870
  %1 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5870
  %idxprom = sext i32 %cond to i64, !dbg !5872
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %1, i64 %idxprom, !dbg !5872
  %2 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx, align 8, !dbg !5872
  %tobool = icmp eq %struct.ps_insn* %2, null, !dbg !5872
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5873

land.lhs.true:                                    ; preds = %cond.end
  %row_rest_count = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 4, !dbg !5874
  %3 = load i32, i32* %row_rest_count, align 8, !dbg !5874
  %4 = load i32, i32* @issue_rate, align 4, !dbg !5875
  %cmp9 = icmp slt i32 %3, %4, !dbg !5876
  br i1 %cmp9, label %if.end, label %cleanup, !dbg !5877

if.end:                                           ; preds = %land.lhs.true, %cond.end
  br i1 %tobool, label %if.end20, label %if.then14, !dbg !5878

if.then14:                                        ; preds = %if.end
  %row_rest_count18 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 4, !dbg !5879
  %5 = load i32, i32* %row_rest_count18, align 8, !dbg !5879
  %add19 = add nsw i32 %5, 1, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %add19, metadata !5866, metadata !DIExpression()), !dbg !5868
  br label %if.end20, !dbg !5882

if.end20:                                         ; preds = %if.end, %if.then14
  %rest_count.0 = phi i32 [ %add19, %if.then14 ], [ 1, %if.end ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %rest_count.0, metadata !5866, metadata !DIExpression()), !dbg !5868
  %call = tail call fastcc %struct.ps_insn* @create_ps_insn(%struct.ddg_node* %node, i32 %rest_count.0, i32 %cycle) #7, !dbg !5883
  call void @llvm.dbg.value(metadata %struct.ps_insn* %call, metadata !5865, metadata !DIExpression()), !dbg !5868
  %call21 = tail call fastcc zeroext i8 @ps_insn_find_column(%struct.partial_schedule* %ps, %struct.ps_insn* %call, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) #7, !dbg !5884
  %tobool22 = icmp eq i8 %call21, 0, !dbg !5884
  br i1 %tobool22, label %if.then23, label %cleanup, !dbg !5886

if.then23:                                        ; preds = %if.end20
  %6 = bitcast %struct.ps_insn* %call to i8*, !dbg !5887
  tail call void @free(i8* %6) #6, !dbg !5889
  br label %cleanup, !dbg !5890

cleanup:                                          ; preds = %land.lhs.true, %if.end20, %if.then23
  %retval.0 = phi %struct.ps_insn* [ null, %if.then23 ], [ null, %land.lhs.true ], [ %call, %if.end20 ], !dbg !5868
  ret %struct.ps_insn* %retval.0, !dbg !5891
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ps_has_conflicts(%struct.partial_schedule* %ps, i32 %from, i32 %to) unnamed_addr #4 !dbg !5892 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5896, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i32 %from, metadata !5897, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i32 %to, metadata !5898, metadata !DIExpression()), !dbg !5909
  %0 = load i8*, i8** @curr_state, align 8, !dbg !5910
  tail call void @state_reset(i8* %0) #6, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %from, metadata !5899, metadata !DIExpression()), !dbg !5909
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5912
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5912
  br label %for.cond, !dbg !5913

for.cond:                                         ; preds = %for.inc56, %entry
  %cycle.0 = phi i32 [ %from, %entry ], [ %inc, %for.inc56 ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %cycle.0, metadata !5899, metadata !DIExpression()), !dbg !5909
  %cmp = icmp sgt i32 %cycle.0, %to, !dbg !5915
  br i1 %cmp, label %cleanup58, label %for.body, !dbg !5916

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* @issue_rate, align 4, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %1, metadata !5904, metadata !DIExpression()), !dbg !5918
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5919
  %3 = load i32, i32* %ii, align 8, !dbg !5920
  %rem = srem i32 %cycle.0, %3, !dbg !5920
  %cmp1 = icmp slt i32 %rem, 0, !dbg !5920
  br i1 %cmp1, label %cond.true, label %cond.end, !dbg !5920

cond.true:                                        ; preds = %for.body
  %add = add nsw i32 %rem, %3, !dbg !5920
  br label %cond.end, !dbg !5920

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %for.body ], !dbg !5920
  %idxprom = sext i32 %cond to i64, !dbg !5921
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %idxprom, !dbg !5921
  br label %for.cond7, !dbg !5922

for.cond7:                                        ; preds = %for.inc, %cond.end
  %crr_insn.0.in = phi %struct.ps_insn** [ %arrayidx, %cond.end ], [ %next_in_row, %for.inc ]
  %can_issue_more.0 = phi i32 [ %1, %cond.end ], [ %can_issue_more.3, %for.inc ], !dbg !5923
  %crr_insn.0 = load %struct.ps_insn*, %struct.ps_insn** %crr_insn.0.in, align 8, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %can_issue_more.0, metadata !5904, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.value(metadata %struct.ps_insn* %crr_insn.0, metadata !5900, metadata !DIExpression()), !dbg !5918
  %tobool = icmp eq %struct.ps_insn* %crr_insn.0, null, !dbg !5924
  br i1 %tobool, label %for.end, label %for.body8, !dbg !5924

for.body8:                                        ; preds = %for.cond7
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 0, !dbg !5925
  %4 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !5925
  %insn9 = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %4, i64 0, i32 1, !dbg !5926
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn9, align 8, !dbg !5926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5905, metadata !DIExpression()), !dbg !5927
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !5928
  %bf.load = load i32, i32* %6, align 8, !dbg !5928
  %bf.clear = and i32 %bf.load, 65535, !dbg !5928
  %cmp10 = icmp eq i32 %bf.clear, 8, !dbg !5928
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false, !dbg !5928

lor.lhs.false:                                    ; preds = %for.body8
  %cmp13 = icmp eq i32 %bf.clear, 7, !dbg !5928
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false14, !dbg !5928

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %cmp17 = icmp eq i32 %bf.clear, 9, !dbg !5928
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !5928

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %cmp21 = icmp eq i32 %bf.clear, 10, !dbg !5928
  br i1 %cmp21, label %land.lhs.true, label %cleanup, !dbg !5928

land.lhs.true:                                    ; preds = %lor.lhs.false18, %lor.lhs.false14, %lor.lhs.false, %for.body8
  %cmp24 = icmp eq i32 %bf.clear, 7, !dbg !5928
  br i1 %cmp24, label %cleanup, label %if.end, !dbg !5930

if.end:                                           ; preds = %land.lhs.true
  %tobool25 = icmp eq i32 %can_issue_more.0, 0, !dbg !5931
  br i1 %tobool25, label %cleanup, label %lor.lhs.false26, !dbg !5933

lor.lhs.false26:                                  ; preds = %if.end
  %7 = load i8*, i8** @curr_state, align 8, !dbg !5934
  %call = tail call i32 @state_dead_lock_p(i8* %7) #6, !dbg !5935
  %tobool27 = icmp eq i32 %call, 0, !dbg !5935
  br i1 %tobool27, label %if.end29, label %cleanup, !dbg !5936

if.end29:                                         ; preds = %lor.lhs.false26
  %8 = load i8*, i8** @curr_state, align 8, !dbg !5937
  %call30 = tail call i32 @state_transition(i8* %8, %struct.rtx_def* %5) #6, !dbg !5939
  %cmp31 = icmp sgt i32 %call30, -1, !dbg !5940
  br i1 %cmp31, label %cleanup, label %if.end33, !dbg !5941

if.end33:                                         ; preds = %if.end29
  %9 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !dbg !5942
  %tobool34 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %9, null, !dbg !5944
  br i1 %tobool34, label %if.else, label %if.then35, !dbg !5945

if.then35:                                        ; preds = %if.end33
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5946
  %11 = load i32, i32* @sched_verbose, align 4, !dbg !5947
  %call36 = tail call i32 %9(%struct._IO_FILE* %10, i32 %11, %struct.rtx_def* %5, i32 %can_issue_more.0) #6, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %call36, metadata !5904, metadata !DIExpression()), !dbg !5918
  br label %cleanup, !dbg !5949

if.else:                                          ; preds = %if.end33
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !5950
  %12 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5950
  %13 = bitcast %union.rtunion_def* %12 to i32**, !dbg !5950
  %14 = load i32*, i32** %13, align 8, !dbg !5950
  %bf.load38 = load i32, i32* %14, align 8, !dbg !5950
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !5950
  %cmp40 = icmp eq i32 %bf.clear39, 24, !dbg !5952
  br i1 %cmp40, label %cleanup, label %land.lhs.true41, !dbg !5953

land.lhs.true41:                                  ; preds = %if.else
  %cmp48 = icmp ne i32 %bf.clear39, 25, !dbg !5954
  %15 = zext i1 %cmp48 to i32, !dbg !5955
  %spec.select = sub i32 %can_issue_more.0, %15, !dbg !5955
  br label %cleanup, !dbg !5955

cleanup:                                          ; preds = %if.else, %lor.lhs.false26, %if.end, %land.lhs.true41, %if.then35, %if.end29, %lor.lhs.false18, %land.lhs.true
  %can_issue_more.3 = phi i32 [ %can_issue_more.0, %land.lhs.true ], [ %can_issue_more.0, %lor.lhs.false18 ], [ %can_issue_more.0, %lor.lhs.false26 ], [ 0, %if.end ], [ %can_issue_more.0, %if.end29 ], [ %call36, %if.then35 ], [ %can_issue_more.0, %if.else ], [ %spec.select, %land.lhs.true41 ], !dbg !5918
  %cleanup.dest.slot.0 = phi i32 [ 7, %land.lhs.true ], [ 7, %lor.lhs.false18 ], [ 1, %lor.lhs.false26 ], [ 1, %if.end ], [ 1, %if.end29 ], [ 0, %if.then35 ], [ 0, %if.else ], [ 0, %land.lhs.true41 ]
  call void @llvm.dbg.value(metadata i32 %can_issue_more.3, metadata !5904, metadata !DIExpression()), !dbg !5918
  switch i32 %cleanup.dest.slot.0, label %cleanup52.loopexit [
    i32 0, label %for.inc
    i32 7, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %crr_insn.0, i64 0, i32 2, !dbg !5956
  br label %for.cond7, !dbg !5957, !llvm.loop !5958

for.end:                                          ; preds = %for.cond7
  tail call fastcc void @advance_one_cycle() #7, !dbg !5960
  br label %cleanup52, !dbg !5961

cleanup52.loopexit:                               ; preds = %cleanup
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup52

cleanup52:                                        ; preds = %cleanup52.loopexit, %for.end
  %cleanup.dest.slot.1 = phi i32 [ 0, %for.end ], [ %cleanup.dest.slot.0.lcssa, %cleanup52.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %for.inc56, label %cleanup58

for.inc56:                                        ; preds = %cleanup52
  %inc = add nsw i32 %cycle.0, 1, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5899, metadata !DIExpression()), !dbg !5909
  br label %for.cond, !dbg !5963, !llvm.loop !5964

cleanup58:                                        ; preds = %for.cond, %cleanup52
  %retval.4 = phi i32 [ 1, %cleanup52 ], [ 0, %for.cond ]
  ret i32 %retval.4, !dbg !5966
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ps_insn_advance_column(%struct.partial_schedule* %ps, %struct.ps_insn* %ps_i, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !5967 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !5971, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_i, metadata !5972, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !5973, metadata !DIExpression()), !dbg !5978
  %tobool = icmp ne %struct.partial_schedule* %ps, null, !dbg !5979
  %tobool1 = icmp ne %struct.ps_insn* %ps_i, null, !dbg !5981
  %or.cond = and i1 %tobool, %tobool1, !dbg !5982
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !5982

if.end:                                           ; preds = %entry
  %cycle = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 1, !dbg !5983
  %0 = load i32, i32* %cycle, align 8, !dbg !5983
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !5983
  %1 = load i32, i32* %ii, align 8, !dbg !5983
  %rem = srem i32 %0, %1, !dbg !5983
  %cmp = icmp slt i32 %rem, 0, !dbg !5983
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5983

cond.true:                                        ; preds = %if.end
  %add = add nsw i32 %rem, %1, !dbg !5983
  br label %cond.end, !dbg !5983

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %if.end ], !dbg !5983
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5976, metadata !DIExpression()), !dbg !5978
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 2, !dbg !5984
  %2 = load %struct.ps_insn*, %struct.ps_insn** %next_in_row, align 8, !dbg !5984
  %tobool9 = icmp eq %struct.ps_insn* %2, null, !dbg !5986
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !5987

if.end11:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.ddg_node* undef, metadata !5977, metadata !DIExpression()), !dbg !5978
  %tobool13 = icmp eq %struct.simple_bitmap_def* %must_follow, null, !dbg !5988
  br i1 %tobool13, label %if.end18, label %land.lhs.true, !dbg !5990

land.lhs.true:                                    ; preds = %if.end11
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 0, !dbg !5991
  %3 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !5991
  call void @llvm.dbg.value(metadata %struct.ddg_node* %3, metadata !5977, metadata !DIExpression()), !dbg !5978
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 0, !dbg !5992
  %4 = load i32, i32* %cuid, align 8, !dbg !5992
  %div = lshr i32 %4, 6, !dbg !5992
  %idxprom = zext i32 %div to i64, !dbg !5992
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %must_follow, i64 0, i32 3, i64 %idxprom, !dbg !5992
  %5 = load i64, i64* %arrayidx, align 8, !dbg !5992
  %rem15 = and i32 %4, 63, !dbg !5992
  %sh_prom = zext i32 %rem15 to i64, !dbg !5992
  %6 = shl i64 1, %sh_prom, !dbg !5992
  %7 = and i64 %5, %6, !dbg !5992
  %tobool16 = icmp eq i64 %7, 0, !dbg !5992
  br i1 %tobool16, label %if.end18, label %cleanup, !dbg !5993

if.end18:                                         ; preds = %land.lhs.true, %if.end11
  %prev_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 3, !dbg !5994
  %8 = load %struct.ps_insn*, %struct.ps_insn** %prev_in_row, align 8, !dbg !5994
  call void @llvm.dbg.value(metadata %struct.ps_insn* %8, metadata !5974, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %struct.ps_insn* %2, metadata !5975, metadata !DIExpression()), !dbg !5978
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !5995
  %9 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !5995
  %idxprom20 = sext i32 %cond to i64, !dbg !5997
  %arrayidx21 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %9, i64 %idxprom20, !dbg !5997
  %10 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx21, align 8, !dbg !5997
  %cmp22 = icmp eq %struct.ps_insn* %10, %ps_i, !dbg !5998
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !5999

if.then23:                                        ; preds = %if.end18
  store %struct.ps_insn* %2, %struct.ps_insn** %arrayidx21, align 8, !dbg !6000
  br label %if.end27, !dbg !6001

if.end27:                                         ; preds = %if.then23, %if.end18
  %next_in_row28 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 2, !dbg !6002
  %11 = bitcast %struct.ps_insn** %next_in_row28 to i64*, !dbg !6002
  %12 = load i64, i64* %11, align 8, !dbg !6002
  %13 = bitcast %struct.ps_insn** %next_in_row to i64*, !dbg !6003
  store i64 %12, i64* %13, align 8, !dbg !6003
  %14 = load %struct.ps_insn*, %struct.ps_insn** %next_in_row28, align 8, !dbg !6004
  %tobool31 = icmp eq %struct.ps_insn* %14, null, !dbg !6006
  br i1 %tobool31, label %if.end35, label %if.then32, !dbg !6007

if.then32:                                        ; preds = %if.end27
  %prev_in_row34 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %14, i64 0, i32 3, !dbg !6008
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %prev_in_row34, align 8, !dbg !6009
  br label %if.end35, !dbg !6010

if.end35:                                         ; preds = %if.end27, %if.then32
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %next_in_row28, align 8, !dbg !6011
  store %struct.ps_insn* %2, %struct.ps_insn** %prev_in_row, align 8, !dbg !6012
  %prev_in_row38 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 3, !dbg !6013
  store %struct.ps_insn* %8, %struct.ps_insn** %prev_in_row38, align 8, !dbg !6014
  %tobool39 = icmp eq %struct.ps_insn* %8, null, !dbg !6015
  br i1 %tobool39, label %cleanup, label %if.then40, !dbg !6017

if.then40:                                        ; preds = %if.end35
  %next_in_row41 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %8, i64 0, i32 2, !dbg !6018
  store %struct.ps_insn* %2, %struct.ps_insn** %next_in_row41, align 8, !dbg !6019
  br label %cleanup, !dbg !6020

cleanup:                                          ; preds = %land.lhs.true, %if.end35, %cond.end, %if.then40, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %cond.end ], [ 0, %land.lhs.true ], [ 1, %if.then40 ], [ 1, %if.end35 ], !dbg !5978
  ret i32 %retval.0, !dbg !6021
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @remove_node_from_ps(%struct.partial_schedule* %ps, %struct.ps_insn* %ps_i) unnamed_addr #4 !dbg !6022 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !6026, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_i, metadata !6027, metadata !DIExpression()), !dbg !6029
  %tobool = icmp ne %struct.partial_schedule* %ps, null, !dbg !6030
  %tobool1 = icmp ne %struct.ps_insn* %ps_i, null, !dbg !6032
  %or.cond = and i1 %tobool, %tobool1, !dbg !6033
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !6033

if.end:                                           ; preds = %entry
  %cycle = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 1, !dbg !6034
  %0 = load i32, i32* %cycle, align 8, !dbg !6034
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !6034
  %1 = load i32, i32* %ii, align 8, !dbg !6034
  %rem = srem i32 %0, %1, !dbg !6034
  %cmp = icmp slt i32 %rem, 0, !dbg !6034
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6034

cond.true:                                        ; preds = %if.end
  %add = add nsw i32 %rem, %1, !dbg !6034
  br label %cond.end, !dbg !6034

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %if.end ], !dbg !6034
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6028, metadata !DIExpression()), !dbg !6029
  %prev_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 3, !dbg !6035
  %2 = load %struct.ps_insn*, %struct.ps_insn** %prev_in_row, align 8, !dbg !6035
  %tobool9 = icmp eq %struct.ps_insn* %2, null, !dbg !6037
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6038

if.then10:                                        ; preds = %cond.end
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !6039
  %3 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6039
  %idxprom = sext i32 %cond to i64, !dbg !6042
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %3, i64 %idxprom, !dbg !6042
  %4 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx, align 8, !dbg !6042
  %cmp11 = icmp eq %struct.ps_insn* %4, %ps_i, !dbg !6043
  br i1 %cmp11, label %if.end13, label %cleanup, !dbg !6044

if.end13:                                         ; preds = %if.then10
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 2, !dbg !6045
  %5 = bitcast %struct.ps_insn** %next_in_row to i64*, !dbg !6045
  %6 = load i64, i64* %5, align 8, !dbg !6045
  %7 = bitcast %struct.ps_insn** %arrayidx to i64*, !dbg !6046
  store i64 %6, i64* %7, align 8, !dbg !6046
  %8 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6047
  %arrayidx19 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %8, i64 %idxprom, !dbg !6049
  %9 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx19, align 8, !dbg !6049
  %tobool20 = icmp eq %struct.ps_insn* %9, null, !dbg !6049
  br i1 %tobool20, label %if.end37, label %if.then21, !dbg !6050

if.then21:                                        ; preds = %if.end13
  %prev_in_row25 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %9, i64 0, i32 3, !dbg !6051
  store %struct.ps_insn* null, %struct.ps_insn** %prev_in_row25, align 8, !dbg !6052
  br label %if.end37, !dbg !6053

if.else:                                          ; preds = %cond.end
  %next_in_row27 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 2, !dbg !6054
  %10 = bitcast %struct.ps_insn** %next_in_row27 to i64*, !dbg !6054
  %11 = load i64, i64* %10, align 8, !dbg !6054
  %next_in_row29 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %2, i64 0, i32 2, !dbg !6056
  %12 = bitcast %struct.ps_insn** %next_in_row29 to i64*, !dbg !6057
  store i64 %11, i64* %12, align 8, !dbg !6057
  %13 = load %struct.ps_insn*, %struct.ps_insn** %next_in_row27, align 8, !dbg !6058
  %tobool31 = icmp eq %struct.ps_insn* %13, null, !dbg !6060
  br i1 %tobool31, label %if.end37, label %if.then32, !dbg !6061

if.then32:                                        ; preds = %if.else
  %14 = bitcast %struct.ps_insn** %prev_in_row to i64*, !dbg !6062
  %15 = load i64, i64* %14, align 8, !dbg !6062
  %prev_in_row35 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %13, i64 0, i32 3, !dbg !6063
  %16 = bitcast %struct.ps_insn** %prev_in_row35 to i64*, !dbg !6064
  store i64 %15, i64* %16, align 8, !dbg !6064
  br label %if.end37, !dbg !6065

if.end37:                                         ; preds = %if.else, %if.end13, %if.then32, %if.then21
  %17 = bitcast %struct.ps_insn* %ps_i to i8*, !dbg !6066
  tail call void @free(i8* nonnull %17) #6, !dbg !6067
  br label %cleanup, !dbg !6068

cleanup:                                          ; preds = %if.then10, %entry, %if.end37
  %retval.0 = phi i8 [ 1, %if.end37 ], [ 0, %entry ], [ 0, %if.then10 ], !dbg !6029
  ret i8 %retval.0, !dbg !6069
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ps_insn* @create_ps_insn(%struct.ddg_node* %node, i32 %rest_count, i32 %cycle) unnamed_addr #4 !dbg !6070 {
entry:
  call void @llvm.dbg.value(metadata %struct.ddg_node* %node, metadata !6074, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 %rest_count, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 %cycle, metadata !6076, metadata !DIExpression()), !dbg !6078
  %call = tail call i8* @xmalloc(i64 40) #6, !dbg !6079
  %0 = bitcast i8* %call to %struct.ps_insn*, !dbg !6079
  call void @llvm.dbg.value(metadata %struct.ps_insn* %0, metadata !6077, metadata !DIExpression()), !dbg !6078
  %node1 = bitcast i8* %call to %struct.ddg_node**, !dbg !6080
  store %struct.ddg_node* %node, %struct.ddg_node** %node1, align 8, !dbg !6081
  %next_in_row = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6082
  %1 = bitcast i8* %next_in_row to %struct.ps_insn**, !dbg !6082
  store %struct.ps_insn* null, %struct.ps_insn** %1, align 8, !dbg !6083
  %prev_in_row = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6084
  %2 = bitcast i8* %prev_in_row to %struct.ps_insn**, !dbg !6084
  store %struct.ps_insn* null, %struct.ps_insn** %2, align 8, !dbg !6085
  %row_rest_count = getelementptr inbounds i8, i8* %call, i64 32, !dbg !6086
  %3 = bitcast i8* %row_rest_count to i32*, !dbg !6086
  store i32 %rest_count, i32* %3, align 8, !dbg !6087
  %cycle2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6088
  %4 = bitcast i8* %cycle2 to i32*, !dbg !6088
  store i32 %cycle, i32* %4, align 8, !dbg !6089
  ret %struct.ps_insn* %0, !dbg !6090
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ps_insn_find_column(%struct.partial_schedule* %ps, %struct.ps_insn* %ps_i, %struct.simple_bitmap_def* %must_precede, %struct.simple_bitmap_def* %must_follow) unnamed_addr #4 !dbg !6091 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !6095, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_i, metadata !6096, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_precede, metadata !6097, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %must_follow, metadata !6098, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6101, metadata !DIExpression()), !dbg !6103
  %tobool = icmp eq %struct.ps_insn* %ps_i, null, !dbg !6104
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6106

if.end:                                           ; preds = %entry
  %cycle = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 1, !dbg !6107
  %0 = load i32, i32* %cycle, align 8, !dbg !6107
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !6107
  %1 = load i32, i32* %ii, align 8, !dbg !6107
  %rem = srem i32 %0, %1, !dbg !6107
  %cmp = icmp slt i32 %rem, 0, !dbg !6107
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6107

cond.true:                                        ; preds = %if.end
  %add = add nsw i32 %rem, %1, !dbg !6107
  br label %cond.end, !dbg !6107

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %rem, %if.end ], !dbg !6107
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6102, metadata !DIExpression()), !dbg !6103
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !6108
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6108
  %idxprom = sext i32 %cond to i64, !dbg !6110
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %idxprom, !dbg !6110
  %tobool9 = icmp eq %struct.simple_bitmap_def* %must_follow, null, !dbg !6111
  %tobool20 = icmp eq %struct.simple_bitmap_def* %must_precede, null, !dbg !6115
  br i1 %tobool9, label %cond.end.split.us, label %cond.end.cond.end.split_crit_edge, !dbg !6117

cond.end.cond.end.split_crit_edge:                ; preds = %cond.end
  br label %for.cond, !dbg !6117

cond.end.split.us:                                ; preds = %cond.end
  br i1 %tobool20, label %cond.end.split.us.split.us, label %cond.end.split.us.cond.end.split.us.split_crit_edge, !dbg !6117

cond.end.split.us.cond.end.split.us.split_crit_edge: ; preds = %cond.end.split.us
  br label %for.cond.us, !dbg !6117

cond.end.split.us.split.us:                       ; preds = %cond.end.split.us
  br label %for.cond.us.us, !dbg !6117

for.cond.us.us:                                   ; preds = %for.body.us.us, %cond.end.split.us.split.us
  %next_ps_i.0.in.us.us = phi %struct.ps_insn** [ %arrayidx, %cond.end.split.us.split.us ], [ %next_in_row.us.us, %for.body.us.us ]
  %next_ps_i.0.us.us = load %struct.ps_insn*, %struct.ps_insn** %next_ps_i.0.in.us.us, align 8, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %next_ps_i.0.us.us, metadata !6099, metadata !DIExpression()), !dbg !6103
  %tobool8.us.us = icmp eq %struct.ps_insn* %next_ps_i.0.us.us, null, !dbg !6119
  br i1 %tobool8.us.us, label %for.end.us-lcssa.us.us-lcssa.us, label %for.body.us.us, !dbg !6119

for.body.us.us:                                   ; preds = %for.cond.us.us
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6101, metadata !DIExpression()), !dbg !6103
  %next_in_row.us.us = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %next_ps_i.0.us.us, i64 0, i32 2, !dbg !6120
  br label %for.cond.us.us, !dbg !6121, !llvm.loop !6122

for.end.us-lcssa.us.us-lcssa.us:                  ; preds = %for.cond.us.us
  br label %for.end.us-lcssa.us, !dbg !6124

for.cond.us:                                      ; preds = %for.inc.us, %cond.end.split.us.cond.end.split.us.split_crit_edge
  %next_ps_i.0.in.us = phi %struct.ps_insn** [ %arrayidx, %cond.end.split.us.cond.end.split.us.split_crit_edge ], [ %next_in_row.us, %for.inc.us ]
  %last_must_precede.0.us = phi %struct.ps_insn* [ null, %cond.end.split.us.cond.end.split.us.split_crit_edge ], [ %last_must_precede.1.us, %for.inc.us ], !dbg !6103
  %next_ps_i.0.us = load %struct.ps_insn*, %struct.ps_insn** %next_ps_i.0.in.us, align 8, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.us, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %next_ps_i.0.us, metadata !6099, metadata !DIExpression()), !dbg !6103
  %tobool8.us = icmp eq %struct.ps_insn* %next_ps_i.0.us, null, !dbg !6119
  br i1 %tobool8.us, label %for.end.us-lcssa.us.us-lcssa, label %for.body.us, !dbg !6119

for.body.us:                                      ; preds = %for.cond.us
  call void @llvm.dbg.value(metadata %struct.ps_insn* null, metadata !6100, metadata !DIExpression()), !dbg !6103
  %node23.us = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %next_ps_i.0.us, i64 0, i32 0, !dbg !6126
  %3 = load %struct.ddg_node*, %struct.ddg_node** %node23.us, align 8, !dbg !6126
  %cuid24.us = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 0, !dbg !6126
  %4 = load i32, i32* %cuid24.us, align 8, !dbg !6126
  %div25.us = lshr i32 %4, 6, !dbg !6126
  %idxprom26.us = zext i32 %div25.us to i64, !dbg !6126
  %arrayidx27.us = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %must_precede, i64 0, i32 3, i64 %idxprom26.us, !dbg !6126
  %5 = load i64, i64* %arrayidx27.us, align 8, !dbg !6126
  %rem30.us = and i32 %4, 63, !dbg !6126
  %sh_prom31.us = zext i32 %rem30.us to i64, !dbg !6126
  %6 = shl i64 1, %sh_prom31.us, !dbg !6126
  %7 = and i64 %5, %6, !dbg !6126
  %tobool34.us = icmp eq i64 %7, 0, !dbg !6126
  br i1 %tobool34.us, label %for.inc.us, label %if.then35.us, !dbg !6127

if.then35.us:                                     ; preds = %for.body.us
  br label %for.inc.us, !dbg !6128

for.inc.us:                                       ; preds = %if.then35.us, %for.body.us
  %last_must_precede.1.us = phi %struct.ps_insn* [ %last_must_precede.0.us, %for.body.us ], [ %next_ps_i.0.us, %if.then35.us ], !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.1.us, metadata !6101, metadata !DIExpression()), !dbg !6103
  %next_in_row.us = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %next_ps_i.0.us, i64 0, i32 2, !dbg !6120
  br label %for.cond.us, !dbg !6121, !llvm.loop !6122

for.end.us-lcssa.us.us-lcssa:                     ; preds = %for.cond.us
  %last_must_precede.0.us.lcssa = phi %struct.ps_insn* [ %last_must_precede.0.us, %for.cond.us ], !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.us.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.us.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6103
  br label %for.end.us-lcssa.us, !dbg !6124

for.end.us-lcssa.us:                              ; preds = %for.end.us-lcssa.us.us-lcssa.us, %for.end.us-lcssa.us.us-lcssa
  %last_must_precede.0.lcssa.ph.us = phi %struct.ps_insn* [ %last_must_precede.0.us.lcssa, %for.end.us-lcssa.us.us-lcssa ], [ null, %for.end.us-lcssa.us.us-lcssa.us ]
  br label %for.end, !dbg !6124

for.cond:                                         ; preds = %for.inc, %cond.end.cond.end.split_crit_edge
  %next_ps_i.0.in = phi %struct.ps_insn** [ %arrayidx, %cond.end.cond.end.split_crit_edge ], [ %next_in_row, %for.inc ]
  %first_must_follow.0 = phi %struct.ps_insn* [ null, %cond.end.cond.end.split_crit_edge ], [ %spec.select, %for.inc ], !dbg !6130
  %last_must_precede.0 = phi %struct.ps_insn* [ null, %cond.end.cond.end.split_crit_edge ], [ %last_must_precede.1, %for.inc ], !dbg !6103
  %next_ps_i.0 = load %struct.ps_insn*, %struct.ps_insn** %next_ps_i.0.in, align 8, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %first_must_follow.0, metadata !6100, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %next_ps_i.0, metadata !6099, metadata !DIExpression()), !dbg !6103
  %tobool8 = icmp eq %struct.ps_insn* %next_ps_i.0, null, !dbg !6119
  br i1 %tobool8, label %for.end.us-lcssa, label %for.body, !dbg !6119

for.body:                                         ; preds = %for.cond
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %next_ps_i.0, i64 0, i32 0, !dbg !6131
  %8 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !6131
  %cuid = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %8, i64 0, i32 0, !dbg !6131
  %9 = load i32, i32* %cuid, align 8, !dbg !6131
  %div = lshr i32 %9, 6, !dbg !6131
  %idxprom10 = zext i32 %div to i64, !dbg !6131
  %arrayidx11 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %must_follow, i64 0, i32 3, i64 %idxprom10, !dbg !6131
  %10 = load i64, i64* %arrayidx11, align 8, !dbg !6131
  %rem14 = and i32 %9, 63, !dbg !6131
  %sh_prom = zext i32 %rem14 to i64, !dbg !6131
  %11 = shl i64 1, %sh_prom, !dbg !6131
  %12 = and i64 %10, %11, !dbg !6131
  %tobool15 = icmp eq i64 %12, 0, !dbg !6131
  %tobool17 = icmp ne %struct.ps_insn* %first_must_follow.0, null, !dbg !6132
  %or.cond = or i1 %tobool15, %tobool17, !dbg !6133
  %spec.select = select i1 %or.cond, %struct.ps_insn* %first_must_follow.0, %struct.ps_insn* %next_ps_i.0, !dbg !6133
  call void @llvm.dbg.value(metadata %struct.ps_insn* %spec.select, metadata !6100, metadata !DIExpression()), !dbg !6103
  br i1 %tobool20, label %for.inc, label %land.lhs.true21, !dbg !6134

land.lhs.true21:                                  ; preds = %for.body
  %arrayidx27 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %must_precede, i64 0, i32 3, i64 %idxprom10, !dbg !6126
  %13 = load i64, i64* %arrayidx27, align 8, !dbg !6126
  %14 = and i64 %13, %11, !dbg !6126
  %tobool34 = icmp eq i64 %14, 0, !dbg !6126
  br i1 %tobool34, label %for.inc, label %if.then35, !dbg !6127

if.then35:                                        ; preds = %land.lhs.true21
  %tobool36 = icmp eq %struct.ps_insn* %spec.select, null, !dbg !6135
  br i1 %tobool36, label %for.inc, label %cleanup.loopexit.us-lcssa, !dbg !6128

for.inc:                                          ; preds = %if.then35, %land.lhs.true21, %for.body
  %last_must_precede.1 = phi %struct.ps_insn* [ %last_must_precede.0, %land.lhs.true21 ], [ %last_must_precede.0, %for.body ], [ %next_ps_i.0, %if.then35 ], !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.1, metadata !6101, metadata !DIExpression()), !dbg !6103
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %next_ps_i.0, i64 0, i32 2, !dbg !6120
  br label %for.cond, !dbg !6121, !llvm.loop !6122

for.end.us-lcssa:                                 ; preds = %for.cond
  %last_must_precede.0.lcssa4 = phi %struct.ps_insn* [ %last_must_precede.0, %for.cond ], !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.lcssa4, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.lcssa4, metadata !6101, metadata !DIExpression()), !dbg !6103
  br label %for.end, !dbg !6124

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %last_must_precede.0.lcssa = phi %struct.ps_insn* [ %last_must_precede.0.lcssa4, %for.end.us-lcssa ], [ %last_must_precede.0.lcssa.ph.us, %for.end.us-lcssa.us ], !dbg !6103
  call void @llvm.dbg.value(metadata %struct.ps_insn* %last_must_precede.0.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6103
  %tobool40 = icmp eq %struct.ps_insn* %last_must_precede.0.lcssa, null, !dbg !6124
  br i1 %tobool40, label %if.then41, label %if.else55, !dbg !6137

if.then41:                                        ; preds = %for.end
  %15 = bitcast %struct.ps_insn** %arrayidx to i64*, !dbg !6138
  %16 = load i64, i64* %15, align 8, !dbg !6138
  %next_in_row45 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 2, !dbg !6140
  %17 = bitcast %struct.ps_insn** %next_in_row45 to i64*, !dbg !6141
  store i64 %16, i64* %17, align 8, !dbg !6141
  %prev_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 3, !dbg !6142
  store %struct.ps_insn* null, %struct.ps_insn** %prev_in_row, align 8, !dbg !6143
  %tobool47 = icmp eq i64 %16, 0, !dbg !6144
  br i1 %tobool47, label %if.end51, label %if.then48, !dbg !6146

if.then48:                                        ; preds = %if.then41
  %18 = inttoptr i64 %16 to %struct.ps_insn*, !dbg !6146
  %prev_in_row50 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %18, i64 0, i32 3, !dbg !6147
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %prev_in_row50, align 8, !dbg !6148
  br label %if.end51, !dbg !6149

if.end51:                                         ; preds = %if.then41, %if.then48
  %19 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6150
  %arrayidx54 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %19, i64 %idxprom, !dbg !6151
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %arrayidx54, align 8, !dbg !6152
  br label %cleanup, !dbg !6153

if.else55:                                        ; preds = %for.end
  %next_in_row56 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %last_must_precede.0.lcssa, i64 0, i32 2, !dbg !6154
  %20 = bitcast %struct.ps_insn** %next_in_row56 to i64*, !dbg !6154
  %21 = load i64, i64* %20, align 8, !dbg !6154
  %next_in_row57 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 2, !dbg !6156
  %22 = bitcast %struct.ps_insn** %next_in_row57 to i64*, !dbg !6157
  store i64 %21, i64* %22, align 8, !dbg !6157
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %next_in_row56, align 8, !dbg !6158
  %prev_in_row59 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_i, i64 0, i32 3, !dbg !6159
  store %struct.ps_insn* %last_must_precede.0.lcssa, %struct.ps_insn** %prev_in_row59, align 8, !dbg !6160
  %23 = load %struct.ps_insn*, %struct.ps_insn** %next_in_row57, align 8, !dbg !6161
  %tobool61 = icmp eq %struct.ps_insn* %23, null, !dbg !6163
  br i1 %tobool61, label %cleanup, label %if.then62, !dbg !6164

if.then62:                                        ; preds = %if.else55
  %prev_in_row64 = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %23, i64 0, i32 3, !dbg !6165
  store %struct.ps_insn* %ps_i, %struct.ps_insn** %prev_in_row64, align 8, !dbg !6166
  br label %cleanup, !dbg !6167

cleanup.loopexit.us-lcssa:                        ; preds = %if.then35
  br label %cleanup, !dbg !6168

cleanup:                                          ; preds = %cleanup.loopexit.us-lcssa, %if.else55, %entry, %if.end51, %if.then62
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.else55 ], [ 1, %if.then62 ], [ 1, %if.end51 ], [ 0, %cleanup.loopexit.us-lcssa ], !dbg !6103
  ret i8 %retval.0, !dbg !6168
}

declare dso_local void @state_reset(i8*) local_unnamed_addr #1

declare dso_local i32 @state_dead_lock_p(i8*) local_unnamed_addr #1

declare dso_local i32 @state_transition(i8*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @advance_one_cycle() unnamed_addr #4 !dbg !6169 {
entry:
  %0 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 12), align 8, !dbg !6170
  %tobool = icmp eq %struct.rtx_def* ()* %0, null, !dbg !6172
  br i1 %tobool, label %if.end, label %if.then, !dbg !6173

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @curr_state, align 8, !dbg !6174
  %call = tail call %struct.rtx_def* %0() #6, !dbg !6175
  %call1 = tail call i32 @state_transition(i8* %1, %struct.rtx_def* %call) #6, !dbg !6176
  br label %if.end, !dbg !6176

if.end:                                           ; preds = %entry, %if.then
  %2 = load i8*, i8** @curr_state, align 8, !dbg !6177
  %call2 = tail call i32 @state_transition(i8* %2, %struct.rtx_def* null) #6, !dbg !6178
  %3 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 14), align 8, !dbg !6179
  %tobool3 = icmp eq %struct.rtx_def* ()* %3, null, !dbg !6181
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !6182

if.then4:                                         ; preds = %if.end
  %4 = load i8*, i8** @curr_state, align 8, !dbg !6183
  %call5 = tail call %struct.rtx_def* %3() #6, !dbg !6184
  %call6 = tail call i32 @state_transition(i8* %4, %struct.rtx_def* %call5) #6, !dbg !6185
  br label %if.end7, !dbg !6185

if.end7:                                          ; preds = %if.end, %if.then4
  ret void, !dbg !6186
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_ps_insns(%struct.partial_schedule* %ps) unnamed_addr #4 !dbg !6187 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !6189, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32 0, metadata !6190, metadata !DIExpression()), !dbg !6196
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !6197
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !6198
  br label %for.cond, !dbg !6199

for.cond:                                         ; preds = %while.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.end ], [ 0, %entry ], !dbg !6200
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6190, metadata !DIExpression()), !dbg !6196
  %0 = load i32, i32* %ii, align 8, !dbg !6201
  %1 = sext i32 %0 to i64, !dbg !6202
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !6202
  br i1 %cmp, label %while.cond.preheader, label %for.end, !dbg !6203

while.cond.preheader:                             ; preds = %for.cond
  br label %while.cond, !dbg !6204

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6205
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %indvars.iv, !dbg !6206
  %3 = load %struct.ps_insn*, %struct.ps_insn** %arrayidx, align 8, !dbg !6206
  %tobool = icmp eq %struct.ps_insn* %3, null, !dbg !6204
  br i1 %tobool, label %while.end, label %while.body, !dbg !6204

while.body:                                       ; preds = %while.cond
  %4 = bitcast %struct.ps_insn* %3 to i8*, !dbg !6204
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %3, i64 0, i32 2, !dbg !6207
  %5 = bitcast %struct.ps_insn** %next_in_row to i64*, !dbg !6207
  %6 = load i64, i64* %5, align 8, !dbg !6207
  tail call void @free(i8* nonnull %4) #6, !dbg !6208
  %7 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6209
  %arrayidx9 = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %7, i64 %indvars.iv, !dbg !6210
  %8 = bitcast %struct.ps_insn** %arrayidx9 to i64*, !dbg !6211
  store i64 %6, i64* %8, align 8, !dbg !6211
  br label %while.cond, !dbg !6204, !llvm.loop !6212

while.end:                                        ; preds = %while.cond
  %arrayidx.lcssa = phi %struct.ps_insn** [ %arrayidx, %while.cond ], !dbg !6206
  store %struct.ps_insn* null, %struct.ps_insn** %arrayidx.lcssa, align 8, !dbg !6214
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6215
  call void @llvm.dbg.value(metadata i32 undef, metadata !6190, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6196
  br label %for.cond, !dbg !6216, !llvm.loop !6217

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6219
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6220 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6224, metadata !DIExpression()), !dbg !6226
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6227
  store i32 0, i32* %index, align 8, !dbg !6228
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6229
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6230
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6231
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6231
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6231
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6232 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6238, metadata !DIExpression()), !dbg !6239
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6240
  %tobool = icmp eq i8 %call, 0, !dbg !6240
  br i1 %tobool, label %if.then, label %if.else, !dbg !6242

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6243
  br label %return, !dbg !6245

if.else:                                          ; preds = %entry
  br label %return, !dbg !6246

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6248
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6248
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6248
  ret i8 %retval.0, !dbg !6249
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6250 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6255, metadata !DIExpression()), !dbg !6256
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6257
  %0 = load i32, i32* %index, align 8, !dbg !6257
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6257
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6257
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6257
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6257
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6257

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6257
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6257
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6257
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6257
  br label %cond.end, !dbg !6257

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6257
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6257
  %cmp = icmp ult i32 %0, %call2, !dbg !6257
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6257

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !6257
  br label %cond.end5, !dbg !6257

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6258
  %inc = add i32 %5, 1, !dbg !6258
  store i32 %inc, i32* %index, align 8, !dbg !6258
  ret void, !dbg !6259
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6260 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6265
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6265
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6265

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6265
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6265
  br label %cond.end, !dbg !6265

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6265
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6265
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6266
  %conv3 = zext i1 %cmp to i8, !dbg !6267
  ret i8 %conv3, !dbg !6268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6269 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6274
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6274
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6274

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6274
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6274
  br label %cond.end, !dbg !6274

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6274
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6274
  ret %struct.edge_def* %call2, !dbg !6275
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6276 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6281
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6281

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !6281
  br label %cond.end, !dbg !6281

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6282
  ret %struct.VEC_edge_gc* %0, !dbg !6283
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6284 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6288, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6289, metadata !DIExpression()), !dbg !6290
  br label %land.end, !dbg !6291

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6291
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6291
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6291
  ret %struct.edge_def* %0, !dbg !6291
}

declare dso_local void @reorder_insns_nobb(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) local_unnamed_addr #1

declare dso_local void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @add_insn_before(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !6292 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6296, metadata !DIExpression()), !dbg !6297
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6298
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6298
  %0 = load i32, i32* %rt_uint, align 8, !dbg !6298
  ret i32 %0, !dbg !6299
}

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @duplicate_insns_of_cycles(%struct.partial_schedule* %ps, i32 %from_stage, i32 %to_stage, i32 %for_prolog, %struct.rtx_def* %count_reg) unnamed_addr #4 !dbg !6300 {
entry:
  call void @llvm.dbg.value(metadata %struct.partial_schedule* %ps, metadata !6304, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 %from_stage, metadata !6305, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 %to_stage, metadata !6306, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 %for_prolog, metadata !6307, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6308, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 0, metadata !6309, metadata !DIExpression()), !dbg !6320
  %ii = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 0, !dbg !6321
  %rows = getelementptr inbounds %struct.partial_schedule, %struct.partial_schedule* %ps, i64 0, i32 2, !dbg !6322
  %tobool4 = icmp eq i32 %for_prolog, 0, !dbg !6323
  br label %for.cond, !dbg !6325

for.cond:                                         ; preds = %for.inc104, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc104 ], [ 0, %entry ], !dbg !6326
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6309, metadata !DIExpression()), !dbg !6320
  %0 = load i32, i32* %ii, align 8, !dbg !6327
  %1 = sext i32 %0 to i64, !dbg !6328
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !6328
  br i1 %cmp, label %for.body, label %for.end106, !dbg !6329

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ps_insn**, %struct.ps_insn*** %rows, align 8, !dbg !6330
  %arrayidx = getelementptr inbounds %struct.ps_insn*, %struct.ps_insn** %2, i64 %indvars.iv, !dbg !6331
  br i1 %tobool4, label %for.body.split.us, label %for.body.for.body.split_crit_edge, !dbg !6332

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br label %for.cond1, !dbg !6332

for.body.split.us:                                ; preds = %for.body
  br label %for.cond1.us, !dbg !6332

for.cond1.us:                                     ; preds = %cleanup.us, %for.body.split.us
  %ps_ij.0.in.us = phi %struct.ps_insn** [ %arrayidx, %for.body.split.us ], [ %next_in_row.us, %cleanup.us ]
  %ps_ij.0.us = load %struct.ps_insn*, %struct.ps_insn** %ps_ij.0.in.us, align 8, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_ij.0.us, metadata !6310, metadata !DIExpression()), !dbg !6320
  %tobool.us = icmp eq %struct.ps_insn* %ps_ij.0.us, null, !dbg !6333
  br i1 %tobool.us, label %for.inc104.us-lcssa.us, label %for.body2.us, !dbg !6333

for.body2.us:                                     ; preds = %for.cond1.us
  %node.us = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0.us, i64 0, i32 0, !dbg !6334
  %3 = load %struct.ddg_node*, %struct.ddg_node** %node.us, align 8, !dbg !6334
  call void @llvm.dbg.value(metadata %struct.ddg_node* %3, metadata !6311, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6319, metadata !DIExpression()), !dbg !6335
  %insn.us = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 1, !dbg !6336
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !6336
  %call.us = tail call i32 @reg_mentioned_p(%struct.rtx_def* null, %struct.rtx_def* %4) #6, !dbg !6338
  %tobool3.us = icmp eq i32 %call.us, 0, !dbg !6338
  br i1 %tobool3.us, label %if.end.us, label %cleanup.us, !dbg !6339

if.end.us:                                        ; preds = %for.body2.us
  %info.us = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 7, i32 0, !dbg !6323
  %5 = bitcast i8** %info.us to %struct.node_sched_params**, !dbg !6323
  %6 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !6323
  %nreg_moves28.us = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 0, i32 3, !dbg !6340
  %7 = load i32, i32* %nreg_moves28.us, align 8, !dbg !6340
  %stage31.us = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 0, i32 5, !dbg !6342
  %8 = load i32, i32* %stage31.us, align 8, !dbg !6342
  %9 = xor i32 %8, -1, !dbg !6343
  %sub33.us = add i32 %9, %from_stage, !dbg !6343
  %sub34.us = sub nsw i32 %7, %sub33.us, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %sub34.us, metadata !6318, metadata !DIExpression()), !dbg !6335
  %cmp35.us = icmp sgt i32 %sub34.us, 0, !dbg !6345
  %sub34..us = select i1 %cmp35.us, i32 %sub34.us, i32 0, !dbg !6345
  call void @llvm.dbg.value(metadata i32 %sub34..us, metadata !6318, metadata !DIExpression()), !dbg !6335
  %cmp43.us = icmp slt i32 %sub34..us, %7, !dbg !6346
  br i1 %cmp43.us, label %cond.end49.us, label %cond.false45.us, !dbg !6346

cond.false45.us:                                  ; preds = %if.end.us
  br label %cond.end49.us, !dbg !6346

cond.end49.us:                                    ; preds = %cond.false45.us, %if.end.us
  %cond50.us = phi i32 [ %7, %cond.false45.us ], [ %sub34..us, %if.end.us ], !dbg !6346
  call void @llvm.dbg.value(metadata i32 %cond50.us, metadata !6318, metadata !DIExpression()), !dbg !6335
  %tobool51.us = icmp eq i32 %cond50.us, 0, !dbg !6347
  br i1 %tobool51.us, label %if.end70.us, label %if.then52.us, !dbg !6349

if.then52.us:                                     ; preds = %cond.end49.us
  %first_reg_move55.us = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %6, i64 0, i32 2, !dbg !6350
  call void @llvm.dbg.value(metadata i32 1, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond56.us, !dbg !6352

for.cond56.us:                                    ; preds = %for.body61.us, %if.then52.us
  %j.1.us = phi i32 [ 1, %if.then52.us ], [ %inc67.us, %for.body61.us ], !dbg !6354
  %reg_move.2.in.us = phi %struct.rtx_def** [ %first_reg_move55.us, %if.then52.us ], [ %rt_rtx65.us, %for.body61.us ]
  %reg_move.2.us = load %struct.rtx_def*, %struct.rtx_def** %reg_move.2.in.us, align 8, !dbg !6355
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.2.us, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %j.1.us, metadata !6317, metadata !DIExpression()), !dbg !6335
  %cmp60.us = icmp slt i32 %j.1.us, %7, !dbg !6356
  br i1 %cmp60.us, label %for.body61.us, label %if.end70.loopexit.us, !dbg !6358

for.body61.us:                                    ; preds = %for.cond56.us
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.2.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6359
  %rt_rtx65.us = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6359
  %inc67.us = add nuw nsw i32 %j.1.us, 1, !dbg !6360
  call void @llvm.dbg.value(metadata i32 %inc67.us, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond56.us, !dbg !6361, !llvm.loop !6362

if.end70.us:                                      ; preds = %if.end70.loopexit.us, %cond.end49.us
  %reg_move.4.us = phi %struct.rtx_def* [ null, %cond.end49.us ], [ %reg_move.2.us.lcssa, %if.end70.loopexit.us ], !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.4.us, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %cond50.us, metadata !6318, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond71.us, !dbg !6364

for.cond71.us:                                    ; preds = %for.body73.us, %if.end70.us
  %j.2.us = phi i32 [ 0, %if.end70.us ], [ %inc81.us, %for.body73.us ], !dbg !6366
  %reg_move.5.us = phi %struct.rtx_def* [ %reg_move.4.us, %if.end70.us ], [ %18, %for.body73.us ], !dbg !6335
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.5.us, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %j.2.us, metadata !6317, metadata !DIExpression()), !dbg !6335
  %cmp72.us = icmp slt i32 %j.2.us, %cond50.us, !dbg !6367
  br i1 %cmp72.us, label %for.body73.us, label %for.end86.us, !dbg !6369

for.end86.us:                                     ; preds = %for.cond71.us
  %11 = load %struct.node_sched_params*, %struct.node_sched_params** %5, align 8, !dbg !6370
  %stage89.us = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %11, i64 0, i32 5, !dbg !6370
  %12 = load i32, i32* %stage89.us, align 8, !dbg !6370
  %cmp90.us = icmp slt i32 %12, %from_stage, !dbg !6372
  br i1 %cmp90.us, label %cleanup.us, label %land.lhs.true.us, !dbg !6373

land.lhs.true.us:                                 ; preds = %for.end86.us
  %cmp94.us = icmp sgt i32 %12, %to_stage, !dbg !6374
  br i1 %cmp94.us, label %cleanup.us, label %if.then95.us, !dbg !6375

if.then95.us:                                     ; preds = %land.lhs.true.us
  %first_note.us = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %3, i64 0, i32 2, !dbg !6376
  %13 = load %struct.rtx_def*, %struct.rtx_def** %first_note.us, align 8, !dbg !6376
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !6377
  %call97.us = tail call %struct.rtx_def* @duplicate_insn_chain(%struct.rtx_def* %13, %struct.rtx_def* %14) #6, !dbg !6378
  br label %cleanup.us, !dbg !6378

cleanup.us:                                       ; preds = %if.then95.us, %land.lhs.true.us, %for.end86.us, %for.body2.us
  %next_in_row.us = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0.us, i64 0, i32 2, !dbg !6379
  br label %for.cond1.us, !dbg !6380, !llvm.loop !6381

for.body73.us:                                    ; preds = %for.cond71.us
  %u74.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.5.us, i64 0, i32 1, !dbg !6383
  %15 = getelementptr inbounds %union.u, %union.u* %u74.us, i64 1, i32 0, i32 0, i64 0, !dbg !6383
  %rt_rtx77.us = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !6383
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77.us, align 8, !dbg !6383
  %call78.us = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %16) #6, !dbg !6384
  %call79.us = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call78.us) #6, !dbg !6385
  %inc81.us = add nuw nsw i32 %j.2.us, 1, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %inc81.us, metadata !6317, metadata !DIExpression()), !dbg !6335
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.5.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6387
  %rt_rtx85.us = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !6387
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85.us, align 8, !dbg !6387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6319, metadata !DIExpression()), !dbg !6335
  br label %for.cond71.us, !dbg !6388, !llvm.loop !6389

if.end70.loopexit.us:                             ; preds = %for.cond56.us
  %reg_move.2.us.lcssa = phi %struct.rtx_def* [ %reg_move.2.us, %for.cond56.us ], !dbg !6355
  br label %if.end70.us, !dbg !6364

for.inc104.us-lcssa.us:                           ; preds = %for.cond1.us
  br label %for.inc104, !dbg !6391

for.cond1:                                        ; preds = %cleanup, %for.body.for.body.split_crit_edge
  %ps_ij.0.in = phi %struct.ps_insn** [ %arrayidx, %for.body.for.body.split_crit_edge ], [ %next_in_row, %cleanup ]
  %ps_ij.0 = load %struct.ps_insn*, %struct.ps_insn** %ps_ij.0.in, align 8, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.ps_insn* %ps_ij.0, metadata !6310, metadata !DIExpression()), !dbg !6320
  %tobool = icmp eq %struct.ps_insn* %ps_ij.0, null, !dbg !6333
  br i1 %tobool, label %for.inc104.us-lcssa, label %for.body2, !dbg !6333

for.body2:                                        ; preds = %for.cond1
  %node = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0, i64 0, i32 0, !dbg !6334
  %19 = load %struct.ddg_node*, %struct.ddg_node** %node, align 8, !dbg !6334
  call void @llvm.dbg.value(metadata %struct.ddg_node* %19, metadata !6311, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6319, metadata !DIExpression()), !dbg !6335
  %insn = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %19, i64 0, i32 1, !dbg !6336
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6336
  %call = tail call i32 @reg_mentioned_p(%struct.rtx_def* null, %struct.rtx_def* %20) #6, !dbg !6338
  %tobool3 = icmp eq i32 %call, 0, !dbg !6338
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !6339

if.end:                                           ; preds = %for.body2
  %info = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %19, i64 0, i32 7, i32 0, !dbg !6323
  %21 = bitcast i8** %info to %struct.node_sched_params**, !dbg !6323
  %22 = load %struct.node_sched_params*, %struct.node_sched_params** %21, align 8, !dbg !6323
  %stage = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %22, i64 0, i32 5, !dbg !6392
  %23 = load i32, i32* %stage, align 8, !dbg !6392
  %sub = sub nsw i32 %to_stage, %23, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6318, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6335
  %24 = icmp sgt i32 %sub, -1, !dbg !6395
  %25 = select i1 %24, i32 %sub, i32 -1, !dbg !6395
  %add. = add nsw i32 %25, 1, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %add., metadata !6318, metadata !DIExpression()), !dbg !6335
  %nreg_moves = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %22, i64 0, i32 3, !dbg !6396
  %26 = load i32, i32* %nreg_moves, align 8, !dbg !6396
  %cmp9 = icmp slt i32 %add., %26, !dbg !6396
  br i1 %cmp9, label %cond.end15, label %cond.false11, !dbg !6396

cond.false11:                                     ; preds = %if.end
  br label %cond.end15, !dbg !6396

cond.end15:                                       ; preds = %if.end, %cond.false11
  %cond16 = phi i32 [ %26, %cond.false11 ], [ %add., %if.end ], !dbg !6396
  call void @llvm.dbg.value(metadata i32 %cond16, metadata !6318, metadata !DIExpression()), !dbg !6335
  %tobool17 = icmp eq i32 %cond16, 0, !dbg !6397
  br i1 %tobool17, label %if.end70, label %if.then18, !dbg !6399

if.then18:                                        ; preds = %cond.end15
  %first_reg_move = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %22, i64 0, i32 2, !dbg !6400
  call void @llvm.dbg.value(metadata i32 1, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond21, !dbg !6402

for.cond21:                                       ; preds = %for.body23, %if.then18
  %j.0 = phi i32 [ 1, %if.then18 ], [ %inc, %for.body23 ], !dbg !6404
  %reg_move.0.in = phi %struct.rtx_def** [ %first_reg_move, %if.then18 ], [ %rt_rtx, %for.body23 ]
  %reg_move.0 = load %struct.rtx_def*, %struct.rtx_def** %reg_move.0.in, align 8, !dbg !6405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.0, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6317, metadata !DIExpression()), !dbg !6335
  %cmp22 = icmp slt i32 %j.0, %cond16, !dbg !6406
  br i1 %cmp22, label %for.body23, label %if.end70.loopexit1, !dbg !6408

for.body23:                                       ; preds = %for.cond21
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6409
  %rt_rtx = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !6409
  %inc = add nuw nsw i32 %j.0, 1, !dbg !6410
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond21, !dbg !6411, !llvm.loop !6412

if.end70.loopexit1:                               ; preds = %for.cond21
  %reg_move.0.lcssa = phi %struct.rtx_def* [ %reg_move.0, %for.cond21 ], !dbg !6405
  br label %if.end70, !dbg !6364

if.end70:                                         ; preds = %if.end70.loopexit1, %cond.end15
  %reg_move.4 = phi %struct.rtx_def* [ null, %cond.end15 ], [ %reg_move.0.lcssa, %if.end70.loopexit1 ], !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.4, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %cond16, metadata !6318, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()), !dbg !6335
  br label %for.cond71, !dbg !6364

for.cond71:                                       ; preds = %for.body73, %if.end70
  %j.2 = phi i32 [ 0, %if.end70 ], [ %inc81, %for.body73 ], !dbg !6366
  %reg_move.5 = phi %struct.rtx_def* [ %reg_move.4, %if.end70 ], [ %31, %for.body73 ], !dbg !6335
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg_move.5, metadata !6319, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !6317, metadata !DIExpression()), !dbg !6335
  %cmp72 = icmp slt i32 %j.2, %cond16, !dbg !6367
  br i1 %cmp72, label %for.body73, label %for.end86, !dbg !6369

for.body73:                                       ; preds = %for.cond71
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.5, i64 0, i32 1, !dbg !6383
  %28 = getelementptr inbounds %union.u, %union.u* %u74, i64 1, i32 0, i32 0, i64 0, !dbg !6383
  %rt_rtx77 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !6383
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !6383
  %call78 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %29) #6, !dbg !6384
  %call79 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call78) #6, !dbg !6385
  %inc81 = add nuw nsw i32 %j.2, 1, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %inc81, metadata !6317, metadata !DIExpression()), !dbg !6335
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg_move.5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6387
  %rt_rtx85 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !6387
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !6387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !6319, metadata !DIExpression()), !dbg !6335
  br label %for.cond71, !dbg !6388, !llvm.loop !6389

for.end86:                                        ; preds = %for.cond71
  %32 = load %struct.node_sched_params*, %struct.node_sched_params** %21, align 8, !dbg !6370
  %stage89 = getelementptr inbounds %struct.node_sched_params, %struct.node_sched_params* %32, i64 0, i32 5, !dbg !6370
  %33 = load i32, i32* %stage89, align 8, !dbg !6370
  %cmp90 = icmp slt i32 %33, %from_stage, !dbg !6372
  br i1 %cmp90, label %cleanup, label %land.lhs.true, !dbg !6373

land.lhs.true:                                    ; preds = %for.end86
  %cmp94 = icmp sgt i32 %33, %to_stage, !dbg !6374
  br i1 %cmp94, label %cleanup, label %if.then95, !dbg !6375

if.then95:                                        ; preds = %land.lhs.true
  %first_note = getelementptr inbounds %struct.ddg_node, %struct.ddg_node* %19, i64 0, i32 2, !dbg !6376
  %34 = load %struct.rtx_def*, %struct.rtx_def** %first_note, align 8, !dbg !6376
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6377
  %call97 = tail call %struct.rtx_def* @duplicate_insn_chain(%struct.rtx_def* %34, %struct.rtx_def* %35) #6, !dbg !6378
  br label %cleanup, !dbg !6378

cleanup:                                          ; preds = %land.lhs.true, %for.end86, %for.body2, %if.then95
  %next_in_row = getelementptr inbounds %struct.ps_insn, %struct.ps_insn* %ps_ij.0, i64 0, i32 2, !dbg !6379
  br label %for.cond1, !dbg !6380, !llvm.loop !6381

for.inc104.us-lcssa:                              ; preds = %for.cond1
  br label %for.inc104, !dbg !6391

for.inc104:                                       ; preds = %for.inc104.us-lcssa.us, %for.inc104.us-lcssa
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6391
  call void @llvm.dbg.value(metadata i32 undef, metadata !6309, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6320
  br label %for.cond, !dbg !6414, !llvm.loop !6415

for.end106:                                       ; preds = %for.cond
  ret void, !dbg !6417
}

declare dso_local %struct.basic_block_def* @split_edge_and_insert(%struct.edge_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @duplicate_insn_chain(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2218, !2219, !2220}
!llvm.ident = !{!2221}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_sms", scope: !2, file: !3, line: 2885, type: !2192, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !747, globals: !2070, nameTableKind: None)
!3 = !DIFile(filename: "modulo-sched.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !403, !409, !416, !592, !735, !743}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !398, line: 37, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./ddg.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402}
!400 = !DIEnumerator(name: "TRUE_DEP", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "OUTPUT_DEP", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "ANTI_DEP", value: 2, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !398, line: 38, baseType: !7, size: 32, elements: !404)
!404 = !{!405, !406, !407, !408}
!405 = !DIEnumerator(name: "REG_OR_MEM_DEP", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "REG_DEP", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "MEM_DEP", value: 2, isUnsigned: true)
!408 = !DIEnumerator(name: "REG_AND_MEM_DEP", value: 3, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !410, line: 104, baseType: !7, size: 32, elements: !411)
!410 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!411 = !{!412, !413, !414, !415}
!412 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!413 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!414 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!415 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!416 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !417, line: 74, baseType: !7, size: 32, elements: !418)
!417 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!419 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!591 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!592 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !593, line: 45, baseType: !7, size: 32, elements: !594)
!593 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734}
!595 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!596 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!597 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!598 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!599 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!600 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!601 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!602 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!603 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!604 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!605 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!606 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!607 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!608 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!609 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!610 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!611 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!612 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!613 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!614 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!615 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!616 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!617 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!618 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!619 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!620 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!621 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!622 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!623 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!624 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!625 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!626 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!627 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!628 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!629 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!630 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!631 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!632 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!633 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!634 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!635 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!636 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!637 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!638 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!639 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!640 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!641 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!642 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!643 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!644 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!645 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!646 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!647 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!648 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!649 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!650 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!651 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!652 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!653 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!654 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!655 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!656 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!657 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!658 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!659 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!660 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!661 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!662 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!663 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!664 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!665 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!666 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!667 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!668 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!669 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!670 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!671 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!672 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!673 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!674 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!675 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!676 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!677 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!678 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!679 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!680 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!681 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!682 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!683 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!684 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!685 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!686 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!687 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!688 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!689 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!690 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!691 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!692 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!693 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!694 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!695 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!696 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!697 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!698 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!699 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!700 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!701 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!702 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!703 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!704 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!705 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!706 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!707 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!708 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!709 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!710 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!711 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!712 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!713 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!714 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!715 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!716 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!717 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!718 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!719 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!720 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!721 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!722 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!723 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!724 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!725 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!726 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!727 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!728 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!729 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!730 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!731 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!732 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!733 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!734 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sched_pass_id_t", file: !736, line: 37, baseType: !7, size: 32, elements: !737)
!736 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!737 = !{!738, !739, !740, !741, !742}
!738 = !DIEnumerator(name: "SCHED_PASS_UNKNOWN", value: 0, isUnsigned: true)
!739 = !DIEnumerator(name: "SCHED_RGN_PASS", value: 1, isUnsigned: true)
!740 = !DIEnumerator(name: "SCHED_EBB_PASS", value: 2, isUnsigned: true)
!741 = !DIEnumerator(name: "SCHED_SMS_PASS", value: 3, isUnsigned: true)
!742 = !DIEnumerator(name: "SCHED_SEL_PASS", value: 4, isUnsigned: true)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sms_direction", file: !3, line: 2052, baseType: !7, size: 32, elements: !744)
!744 = !{!745, !746}
!745 = !DIEnumerator(name: "BOTTOMUP", value: 0, isUnsigned: true)
!746 = !DIEnumerator(name: "TOPDOWN", value: 1, isUnsigned: true)
!747 = !{!748, !749, !750, !751, !754, !755, !757, !881, !592, !795, !2012, !2013, !2033, !1375, !2045, !2051, !7, !864, !2052, !2014, !2020, !2022, !5, !2063}
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!750 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddg_ptr", file: !398, line: 33, baseType: !759)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ddg", file: !398, line: 112, size: 448, elements: !761)
!761 = !{!762, !1957, !1958, !1959, !1960, !1961, !2007, !2008, !2009, !2010}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !760, file: !398, line: 115, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !764, line: 111, baseType: !765)
!764 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !767)
!767 = !{!768, !1924, !1925, !1926, !1927, !1931, !1932, !1933, !1951, !1952, !1953, !1954, !1955, !1956}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !766, file: !155, line: 219, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !772)
!772 = !{!773}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !771, file: !155, line: 151, baseType: !774, size: 128)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !775)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !776)
!776 = !{!777, !778, !779}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !775, file: !155, line: 150, baseType: !7, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !775, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !775, file: !155, line: 150, baseType: !780, size: 64, offset: 64)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 64, elements: !829)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !764, line: 108, baseType: !782)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !784)
!784 = !{!785, !786, !787, !1916, !1917, !1918, !1919, !1920, !1921, !1922}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !783, file: !155, line: 124, baseType: !765, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !783, file: !155, line: 125, baseType: !765, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !783, file: !155, line: 131, baseType: !788, size: 64, offset: 128)
!788 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !789)
!789 = !{!790, !794}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !788, file: !155, line: 129, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !764, line: 66, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !764, line: 65, flags: DIFlagFwdDecl)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !788, file: !155, line: 130, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !764, line: 50, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !593, line: 240, size: 384, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !797, file: !593, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !797, file: !593, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !797, file: !593, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !797, file: !593, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !797, file: !593, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !797, file: !593, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !797, file: !593, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !797, file: !593, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !797, file: !593, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !797, file: !593, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !797, file: !593, line: 321, baseType: !810, size: 320, offset: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !593, line: 315, size: 320, elements: !811)
!811 = !{!812, !1883, !1885, !1914, !1915}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !810, file: !593, line: 316, baseType: !813, size: 64)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !814, size: 64, elements: !829)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !593, line: 183, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !593, line: 166, size: 64, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !831, !832, !844, !847, !909, !1861, !1862, !1873, !1880}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !815, file: !593, line: 168, baseType: !750, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !815, file: !593, line: 169, baseType: !7, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !815, file: !593, line: 170, baseType: !755, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !815, file: !593, line: 171, baseType: !795, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !815, file: !593, line: 172, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !764, line: 53, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !593, line: 359, size: 128, elements: !825)
!825 = !{!826, !827}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !824, file: !593, line: 360, baseType: !750, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !824, file: !593, line: 361, baseType: !828, size: 64, offset: 64)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !795, size: 64, elements: !829)
!829 = !{!830}
!830 = !DISubrange(count: 1)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !815, file: !593, line: 173, baseType: !5, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !815, file: !593, line: 174, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !593, line: 133, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !593, line: 115, size: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !834, file: !593, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !834, file: !593, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !834, file: !593, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !834, file: !593, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !834, file: !593, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !834, file: !593, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !834, file: !593, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !834, file: !593, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !815, file: !593, line: 175, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !593, line: 175, flags: DIFlagFwdDecl)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !815, file: !593, line: 176, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !850, line: 75, size: 256, elements: !851)
!850 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!851 = !{!852, !867, !868, !869}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !849, file: !850, line: 76, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !850, line: 68, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !850, line: 63, size: 320, elements: !856)
!856 = !{!857, !859, !860, !861}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !855, file: !850, line: 64, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !855, file: !850, line: 65, baseType: !858, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !855, file: !850, line: 66, baseType: !7, size: 32, offset: 128)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !855, file: !850, line: 67, baseType: !862, size: 128, offset: 192)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 128, elements: !865)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !850, line: 29, baseType: !864)
!864 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!865 = !{!866}
!866 = !DISubrange(count: 2)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !849, file: !850, line: 77, baseType: !853, size: 64, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !849, file: !850, line: 78, baseType: !7, size: 32, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !849, file: !850, line: 79, baseType: !870, size: 64, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !850, line: 49, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !850, line: 45, size: 832, elements: !873)
!873 = !{!874, !875, !876}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !872, file: !850, line: 46, baseType: !858, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !872, file: !850, line: 47, baseType: !848, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !872, file: !850, line: 48, baseType: !877, size: 704, offset: 128)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !878, line: 164, size: 704, elements: !879)
!878 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!879 = !{!880, !882, !892, !893, !894, !895, !896, !897, !901, !905, !906, !907, !908}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !877, file: !878, line: 166, baseType: !881, size: 64)
!881 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !877, file: !878, line: 167, baseType: !883, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !878, line: 157, size: 192, elements: !885)
!885 = !{!886, !887, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !884, file: !878, line: 159, baseType: !752, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !884, file: !878, line: 160, baseType: !883, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !884, file: !878, line: 161, baseType: !889, size: 32, offset: 128)
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 32, elements: !890)
!890 = !{!891}
!891 = !DISubrange(count: 4)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !877, file: !878, line: 168, baseType: !752, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !877, file: !878, line: 169, baseType: !752, size: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !877, file: !878, line: 170, baseType: !752, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !877, file: !878, line: 171, baseType: !881, size: 64, offset: 320)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !877, file: !878, line: 172, baseType: !750, size: 32, offset: 384)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !877, file: !878, line: 176, baseType: !898, size: 64, offset: 448)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!883, !754, !881}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !877, file: !878, line: 177, baseType: !902, size: 64, offset: 512)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{null, !754, !883}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !877, file: !878, line: 178, baseType: !754, size: 64, offset: 576)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !877, file: !878, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !877, file: !878, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !877, file: !878, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !815, file: !593, line: 177, baseType: !910, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !764, line: 56, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !913)
!913 = !{!914, !947, !953, !964, !983, !994, !999, !1006, !1012, !1025, !1037, !1075, !1080, !1108, !1116, !1117, !1122, !1131, !1137, !1142, !1146, !1150, !1500, !1549, !1555, !1561, !1568, !1591, !1605, !1622, !1634, !1656, !1671, !1843}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !912, file: !171, line: 3372, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !916)
!916 = !{!917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !915, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !915, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !915, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !915, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !915, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !915, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !915, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !915, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !915, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !915, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !915, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !915, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !915, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !915, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !915, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !915, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !915, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !915, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !915, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !915, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !915, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !915, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !915, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !915, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !915, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !915, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !915, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !915, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !915, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !915, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !912, file: !171, line: 3373, baseType: !948, size: 192)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !949)
!949 = !{!950, !951, !952}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !948, file: !171, line: 403, baseType: !915, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !948, file: !171, line: 404, baseType: !910, size: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !948, file: !171, line: 405, baseType: !910, size: 64, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !912, file: !171, line: 3374, baseType: !954, size: 320)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !954, file: !171, line: 1385, baseType: !948, size: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !954, file: !171, line: 1386, baseType: !958, size: 128, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !959, line: 58, baseType: !960)
!959 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !959, line: 54, size: 128, elements: !961)
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !960, file: !959, line: 56, baseType: !864, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !960, file: !959, line: 57, baseType: !881, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !912, file: !171, line: 3375, baseType: !965, size: 256)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !965, file: !171, line: 1398, baseType: !948, size: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !965, file: !171, line: 1399, baseType: !969, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !971, line: 52, size: 256, elements: !972)
!971 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!972 = !{!973, !974, !975, !976, !977, !978, !979}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !970, file: !971, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !970, file: !971, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !970, file: !971, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !970, file: !971, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !970, file: !971, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !970, file: !971, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !970, file: !971, line: 62, baseType: !980, size: 192, offset: 64)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 192, elements: !981)
!981 = !{!982}
!982 = !DISubrange(count: 3)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !912, file: !171, line: 3376, baseType: !984, size: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !984, file: !171, line: 1409, baseType: !948, size: 192)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !984, file: !171, line: 1410, baseType: !988, size: 64, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !990, line: 27, size: 192, elements: !991)
!990 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!991 = !{!992, !993}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !989, file: !990, line: 29, baseType: !958, size: 128)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !989, file: !990, line: 30, baseType: !5, size: 32, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !912, file: !171, line: 3377, baseType: !995, size: 256)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !996)
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !995, file: !171, line: 1438, baseType: !948, size: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !995, file: !171, line: 1439, baseType: !910, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !912, file: !171, line: 3378, baseType: !1000, size: 256)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1000, file: !171, line: 1419, baseType: !948, size: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1000, file: !171, line: 1420, baseType: !750, size: 32, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1000, file: !171, line: 1421, baseType: !1005, size: 8, offset: 224)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 8, elements: !829)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !912, file: !171, line: 3379, baseType: !1007, size: 320)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !1008)
!1008 = !{!1009, !1010, !1011}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1007, file: !171, line: 1429, baseType: !948, size: 192)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1007, file: !171, line: 1430, baseType: !910, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1007, file: !171, line: 1431, baseType: !910, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !912, file: !171, line: 3380, baseType: !1013, size: 320)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1013, file: !171, line: 1461, baseType: !948, size: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1013, file: !171, line: 1462, baseType: !1017, size: 128, offset: 192)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1018, line: 31, size: 128, elements: !1019)
!1018 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1019 = !{!1020, !1023, !1024}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1017, file: !1018, line: 32, baseType: !1021, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1017, file: !1018, line: 33, baseType: !7, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1017, file: !1018, line: 34, baseType: !7, size: 32, offset: 96)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !912, file: !171, line: 3381, baseType: !1026, size: 384)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !1027)
!1027 = !{!1028, !1029, !1034, !1035, !1036}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1026, file: !171, line: 2508, baseType: !948, size: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1026, file: !171, line: 2509, baseType: !1030, size: 32, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1031, line: 58, baseType: !1032)
!1031 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1033, line: 44, baseType: !7)
!1033 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1026, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1026, file: !171, line: 2511, baseType: !910, size: 64, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1026, file: !171, line: 2512, baseType: !910, size: 64, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !912, file: !171, line: 3382, baseType: !1038, size: 896)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1038, file: !171, line: 2653, baseType: !1026, size: 384)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1038, file: !171, line: 2654, baseType: !910, size: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1038, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1038, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1038, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1038, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1038, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1038, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1038, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1038, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1038, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1038, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1038, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1038, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1038, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1038, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1038, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1038, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1038, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1038, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1038, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1038, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1038, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1038, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1038, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1038, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1038, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1038, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1038, file: !171, line: 2705, baseType: !910, size: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1038, file: !171, line: 2706, baseType: !910, size: 64, offset: 640)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1038, file: !171, line: 2707, baseType: !910, size: 64, offset: 704)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1038, file: !171, line: 2708, baseType: !910, size: 64, offset: 768)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1038, file: !171, line: 2711, baseType: !1073, size: 64, offset: 832)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !912, file: !171, line: 3383, baseType: !1076, size: 960)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1076, file: !171, line: 2757, baseType: !1038, size: 896)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1076, file: !171, line: 2758, baseType: !795, size: 64, offset: 896)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !912, file: !171, line: 3384, baseType: !1081, size: 1472)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !1082)
!1082 = !{!1083, !1104, !1105, !1106, !1107}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1081, file: !171, line: 3115, baseType: !1084, size: 1216)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1084, file: !171, line: 2985, baseType: !1076, size: 960)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1084, file: !171, line: 2986, baseType: !910, size: 64, offset: 960)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1084, file: !171, line: 2987, baseType: !910, size: 64, offset: 1024)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1084, file: !171, line: 2988, baseType: !910, size: 64, offset: 1088)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1084, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1084, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1084, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1084, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1084, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1084, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1084, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1084, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1084, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1084, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1084, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1084, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1084, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1084, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1081, file: !171, line: 3117, baseType: !910, size: 64, offset: 1216)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1081, file: !171, line: 3119, baseType: !910, size: 64, offset: 1280)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1081, file: !171, line: 3121, baseType: !910, size: 64, offset: 1344)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1081, file: !171, line: 3123, baseType: !910, size: 64, offset: 1408)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !912, file: !171, line: 3385, baseType: !1109, size: 1088)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !1110)
!1110 = !{!1111, !1112, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1109, file: !171, line: 2875, baseType: !1076, size: 960)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1109, file: !171, line: 2876, baseType: !795, size: 64, offset: 960)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1109, file: !171, line: 2877, baseType: !1114, size: 64, offset: 1024)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !912, file: !171, line: 3386, baseType: !1084, size: 1216)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !912, file: !171, line: 3387, baseType: !1118, size: 1280)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1118, file: !171, line: 3094, baseType: !1084, size: 1216)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1118, file: !171, line: 3095, baseType: !1114, size: 64, offset: 1216)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !912, file: !171, line: 3388, baseType: !1123, size: 1216)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129, !1130}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1123, file: !171, line: 2825, baseType: !1038, size: 896)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1123, file: !171, line: 2827, baseType: !910, size: 64, offset: 896)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1123, file: !171, line: 2828, baseType: !910, size: 64, offset: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1123, file: !171, line: 2829, baseType: !910, size: 64, offset: 1024)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1123, file: !171, line: 2830, baseType: !910, size: 64, offset: 1088)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1123, file: !171, line: 2831, baseType: !910, size: 64, offset: 1152)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !912, file: !171, line: 3389, baseType: !1132, size: 1024)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !1133)
!1133 = !{!1134, !1135, !1136}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1132, file: !171, line: 2851, baseType: !1076, size: 960)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1132, file: !171, line: 2852, baseType: !750, size: 32, offset: 960)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1132, file: !171, line: 2853, baseType: !750, size: 32, offset: 992)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !912, file: !171, line: 3390, baseType: !1138, size: 1024)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !1139)
!1139 = !{!1140, !1141}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1138, file: !171, line: 2858, baseType: !1076, size: 960)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1138, file: !171, line: 2859, baseType: !1114, size: 64, offset: 960)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !912, file: !171, line: 3391, baseType: !1143, size: 960)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !1144)
!1144 = !{!1145}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1143, file: !171, line: 2863, baseType: !1076, size: 960)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !912, file: !171, line: 3392, baseType: !1147, size: 1472)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !1148)
!1148 = !{!1149}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1147, file: !171, line: 3305, baseType: !1081, size: 1472)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !912, file: !171, line: 3393, baseType: !1151, size: 1792)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1152)
!1152 = !{!1153, !1154, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1151, file: !171, line: 3249, baseType: !1081, size: 1472)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1151, file: !171, line: 3251, baseType: !1155, size: 64, offset: 1472)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1157, line: 463, size: 1152, elements: !1158)
!1157 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1158 = !{!1159, !1323, !1353, !1354, !1357, !1423, !1424, !1425, !1426, !1427, !1428, !1452, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1156, file: !1157, line: 464, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1162)
!1162 = !{!1163, !1212, !1225, !1239, !1291, !1304}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1161, file: !135, line: 197, baseType: !1164, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1165)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1200, !1209, !1210, !1211}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1166, file: !135, line: 119, baseType: !1165, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1166, file: !135, line: 122, baseType: !1165, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1166, file: !135, line: 123, baseType: !1165, size: 64, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1166, file: !135, line: 126, baseType: !750, size: 32, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1166, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1166, file: !135, line: 165, baseType: !1174, size: 192, offset: 256)
!1174 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1175)
!1175 = !{!1176, !1189, !1195}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1174, file: !135, line: 137, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1178)
!1178 = !{!1179, !1188}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1177, file: !135, line: 135, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1187}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1181, file: !135, line: 96, baseType: !1180, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1181, file: !135, line: 97, baseType: !1180, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1181, file: !135, line: 101, baseType: !910, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1181, file: !135, line: 106, baseType: !910, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1181, file: !135, line: 111, baseType: !910, size: 64, offset: 256)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1177, file: !135, line: 136, baseType: !1180, size: 64, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1174, file: !135, line: 151, baseType: !1190, size: 192)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1191)
!1191 = !{!1192, !1193, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1190, file: !135, line: 141, baseType: !910, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1190, file: !135, line: 145, baseType: !910, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1190, file: !135, line: 150, baseType: !750, size: 32, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1174, file: !135, line: 164, baseType: !1196, size: 128)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1197)
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1196, file: !135, line: 161, baseType: !910, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1196, file: !135, line: 163, baseType: !1030, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1166, file: !135, line: 168, baseType: !1201, size: 64, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1208}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1202, file: !135, line: 70, baseType: !1201, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1202, file: !135, line: 73, baseType: !1165, size: 64, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1202, file: !135, line: 78, baseType: !910, size: 64, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1202, file: !135, line: 85, baseType: !795, size: 64, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1202, file: !135, line: 88, baseType: !750, size: 32, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1166, file: !135, line: 173, baseType: !795, size: 64, offset: 512)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1166, file: !135, line: 173, baseType: !795, size: 64, offset: 576)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1166, file: !135, line: 177, baseType: !749, size: 8, offset: 640)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1161, file: !135, line: 200, baseType: !1213, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1215, file: !135, line: 185, baseType: !1218, size: 128)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1220)
!1220 = !{!1221, !1222, !1223}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1219, file: !135, line: 184, baseType: !7, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1219, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1219, file: !135, line: 184, baseType: !1224, size: 64, offset: 64)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 64, elements: !829)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1161, file: !135, line: 203, baseType: !1226, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1228, file: !135, line: 189, baseType: !1231, size: 128)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1232, file: !135, line: 188, baseType: !7, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1232, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1232, file: !135, line: 188, baseType: !1237, size: 64, offset: 64)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 64, elements: !829)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1201)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1161, file: !135, line: 207, baseType: !1240, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1241, line: 144, baseType: !1242)
!1241 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1241, line: 100, size: 896, elements: !1244)
!1244 = !{!1245, !1253, !1258, !1263, !1265, !1268, !1269, !1270, !1271, !1272, !1277, !1279, !1280, !1285, !1290}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1243, file: !1241, line: 102, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1241, line: 52, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!1250, !1251}
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1241, line: 47, baseType: !7)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1243, file: !1241, line: 105, baseType: !1254, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1241, line: 59, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!750, !1251, !1251}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1243, file: !1241, line: 108, baseType: !1259, size: 64, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1241, line: 63, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !754}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1243, file: !1241, line: 111, baseType: !1264, size: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1243, file: !1241, line: 114, baseType: !1266, size: 64, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1267, line: 46, baseType: !864)
!1267 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1243, file: !1241, line: 117, baseType: !1266, size: 64, offset: 320)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1243, file: !1241, line: 120, baseType: !1266, size: 64, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1243, file: !1241, line: 124, baseType: !7, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1243, file: !1241, line: 128, baseType: !7, size: 32, offset: 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1243, file: !1241, line: 131, baseType: !1273, size: 64, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1241, line: 75, baseType: !1274)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!754, !1266, !1266}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1243, file: !1241, line: 132, baseType: !1278, size: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1241, line: 78, baseType: !1260)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1243, file: !1241, line: 135, baseType: !754, size: 64, offset: 640)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1243, file: !1241, line: 136, baseType: !1281, size: 64, offset: 704)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1241, line: 82, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!754, !754, !1266, !1266}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1243, file: !1241, line: 137, baseType: !1286, size: 64, offset: 768)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1241, line: 83, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{null, !754, !754}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1243, file: !1241, line: 141, baseType: !7, size: 32, offset: 832)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1161, file: !135, line: 211, baseType: !1292, size: 64, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1295)
!1295 = !{!1296}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1294, file: !171, line: 183, baseType: !1297, size: 128)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1299)
!1299 = !{!1300, !1301, !1302}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1298, file: !171, line: 182, baseType: !7, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1298, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1298, file: !171, line: 182, baseType: !1303, size: 64, offset: 64)
!1303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 64, elements: !829)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1161, file: !135, line: 220, baseType: !1305, size: 64, offset: 320)
!1305 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1306)
!1306 = !{!1307, !1308}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1305, file: !135, line: 218, baseType: !1292, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1305, file: !135, line: 219, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1311, line: 29, baseType: !1312)
!1311 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1311, line: 29, size: 96, elements: !1313)
!1313 = !{!1314}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1312, file: !1311, line: 29, baseType: !1315, size: 96)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1311, line: 27, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1311, line: 27, size: 96, elements: !1317)
!1317 = !{!1318, !1319, !1320}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1316, file: !1311, line: 27, baseType: !7, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1316, file: !1311, line: 27, baseType: !7, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1316, file: !1311, line: 27, baseType: !1321, size: 8, offset: 64)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1322, size: 8, elements: !829)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1311, line: 26, baseType: !749)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1156, file: !1157, line: 467, baseType: !1324, size: 64, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1342, !1343, !1344, !1345, !1346, !1347, !1349, !1351, !1352}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1325, file: !155, line: 377, baseType: !763, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1325, file: !155, line: 378, baseType: !763, size: 64, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1325, file: !155, line: 381, baseType: !1330, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1333)
!1333 = !{!1334}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1332, file: !155, line: 282, baseType: !1335, size: 128)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1337)
!1337 = !{!1338, !1339, !1340}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1336, file: !155, line: 281, baseType: !7, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1336, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1336, file: !155, line: 281, baseType: !1341, size: 64, offset: 64)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !763, size: 64, elements: !829)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1325, file: !155, line: 384, baseType: !750, size: 32, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1325, file: !155, line: 387, baseType: !750, size: 32, offset: 224)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1325, file: !155, line: 390, baseType: !750, size: 32, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1325, file: !155, line: 394, baseType: !1330, size: 64, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1325, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1325, file: !155, line: 399, baseType: !1348, size: 64, offset: 416)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !865)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1325, file: !155, line: 402, baseType: !1350, size: 64, offset: 480)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !865)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1325, file: !155, line: 406, baseType: !750, size: 32, offset: 544)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1325, file: !155, line: 409, baseType: !750, size: 32, offset: 576)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1156, file: !1157, line: 470, baseType: !792, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1156, file: !1157, line: 473, baseType: !1355, size: 64, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1157, line: 166, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1156, file: !1157, line: 476, baseType: !1358, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1360)
!1360 = !{!1361, !1362, !1421, !1422}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1359, file: !142, line: 189, baseType: !750, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1359, file: !142, line: 192, baseType: !1363, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1366)
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1365, file: !142, line: 87, baseType: !1368, size: 128)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1370)
!1370 = !{!1371, !1372, !1373}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1369, file: !142, line: 85, baseType: !7, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1369, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1369, file: !142, line: 85, baseType: !1374, size: 64, offset: 64)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 64, elements: !829)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1378)
!1378 = !{!1379, !1380, !1381, !1382, !1383, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1411, !1419, !1420}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1377, file: !142, line: 102, baseType: !750, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1377, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1377, file: !142, line: 108, baseType: !765, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1377, file: !142, line: 111, baseType: !765, size: 64, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1377, file: !142, line: 114, baseType: !1384, size: 64, offset: 192)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1384, file: !142, line: 42, baseType: !141, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1384, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1377, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1377, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1377, file: !142, line: 123, baseType: !1363, size: 64, offset: 320)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1377, file: !142, line: 126, baseType: !1376, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1377, file: !142, line: 129, baseType: !1376, size: 64, offset: 448)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1377, file: !142, line: 132, baseType: !754, size: 64, offset: 512)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1377, file: !142, line: 139, baseType: !910, size: 64, offset: 576)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1377, file: !142, line: 143, baseType: !958, size: 128, offset: 640)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1377, file: !142, line: 146, baseType: !958, size: 128, offset: 768)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1377, file: !142, line: 148, baseType: !749, size: 8, offset: 896)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1377, file: !142, line: 149, baseType: !749, size: 8, offset: 904)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1377, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1377, file: !142, line: 156, baseType: !1401, size: 64, offset: 960)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1403)
!1403 = !{!1404, !1408, !1409, !1410}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1402, file: !142, line: 50, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !764, line: 58, baseType: !1406)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !764, line: 57, flags: DIFlagFwdDecl)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1402, file: !142, line: 59, baseType: !958, size: 128, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1402, file: !142, line: 64, baseType: !749, size: 8, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1402, file: !142, line: 67, baseType: !1401, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1377, file: !142, line: 159, baseType: !1412, size: 64, offset: 1024)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1413, file: !142, line: 74, baseType: !782, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1413, file: !142, line: 77, baseType: !1412, size: 64, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1413, file: !142, line: 78, baseType: !1412, size: 64, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1413, file: !142, line: 81, baseType: !1412, size: 64, offset: 192)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1377, file: !142, line: 162, baseType: !749, size: 8, offset: 1088)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1377, file: !142, line: 166, baseType: !910, size: 64, offset: 1152)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1359, file: !142, line: 197, baseType: !1240, size: 64, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1359, file: !142, line: 200, baseType: !1376, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1156, file: !1157, line: 479, baseType: !1240, size: 64, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1156, file: !1157, line: 484, baseType: !910, size: 64, offset: 384)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1156, file: !1157, line: 488, baseType: !910, size: 64, offset: 448)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1156, file: !1157, line: 493, baseType: !910, size: 64, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1156, file: !1157, line: 496, baseType: !910, size: 64, offset: 576)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1156, file: !1157, line: 501, baseType: !1429, size: 64, offset: 640)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1431)
!1431 = !{!1432, !1435, !1436, !1437, !1438, !1440, !1441, !1446, !1447, !1448, !1449, !1450, !1451}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1430, file: !166, line: 2356, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1430, file: !166, line: 2357, baseType: !755, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1430, file: !166, line: 2358, baseType: !750, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1430, file: !166, line: 2359, baseType: !750, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1430, file: !166, line: 2360, baseType: !1439, size: 128, offset: 192)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 128, elements: !890)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1430, file: !166, line: 2364, baseType: !750, size: 32, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1430, file: !166, line: 2367, baseType: !1442, size: 128, offset: 384)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1442, file: !166, line: 2351, baseType: !795, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1442, file: !166, line: 2352, baseType: !881, size: 64, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1430, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1430, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1430, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1430, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1430, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1430, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1156, file: !1157, line: 504, baseType: !1453, size: 64, offset: 704)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1157, line: 504, flags: DIFlagFwdDecl)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1156, file: !1157, line: 507, baseType: !1240, size: 64, offset: 768)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1156, file: !1157, line: 510, baseType: !750, size: 32, offset: 832)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1156, file: !1157, line: 513, baseType: !750, size: 32, offset: 864)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1156, file: !1157, line: 516, baseType: !1030, size: 32, offset: 896)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1156, file: !1157, line: 519, baseType: !1030, size: 32, offset: 928)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1156, file: !1157, line: 522, baseType: !7, size: 32, offset: 960)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1156, file: !1157, line: 523, baseType: !7, size: 32, offset: 992)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1156, file: !1157, line: 528, baseType: !755, size: 64, offset: 1024)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1156, file: !1157, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1156, file: !1157, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1156, file: !1157, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1156, file: !1157, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1156, file: !1157, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1156, file: !1157, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1156, file: !1157, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1156, file: !1157, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1156, file: !1157, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1156, file: !1157, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1156, file: !1157, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1156, file: !1157, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1156, file: !1157, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1156, file: !1157, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1156, file: !1157, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1156, file: !1157, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1151, file: !171, line: 3254, baseType: !910, size: 64, offset: 1536)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1151, file: !171, line: 3257, baseType: !910, size: 64, offset: 1600)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1151, file: !171, line: 3258, baseType: !910, size: 64, offset: 1664)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1151, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1151, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1151, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1151, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1151, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1151, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1151, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1151, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1151, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1151, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1151, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1151, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1151, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1151, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1151, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1151, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1151, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1151, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !912, file: !171, line: 3394, baseType: !1501, size: 1344)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1528, !1529, !1530, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1501, file: !171, line: 2280, baseType: !948, size: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1501, file: !171, line: 2281, baseType: !910, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1501, file: !171, line: 2282, baseType: !910, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1501, file: !171, line: 2283, baseType: !910, size: 64, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1501, file: !171, line: 2284, baseType: !910, size: 64, offset: 384)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1501, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1501, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1501, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1501, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1501, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1501, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1501, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1501, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1501, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1501, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1501, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1501, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1501, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1501, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1501, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1501, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1501, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1501, file: !171, line: 2306, baseType: !1526, size: 32, offset: 544)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1527, line: 31, baseType: !750)
!1527 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1501, file: !171, line: 2307, baseType: !910, size: 64, offset: 576)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1501, file: !171, line: 2308, baseType: !910, size: 64, offset: 640)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1501, file: !171, line: 2314, baseType: !1531, size: 64, offset: 704)
!1531 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1532)
!1532 = !{!1533, !1534, !1535}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1531, file: !171, line: 2310, baseType: !750, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1531, file: !171, line: 2311, baseType: !755, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1531, file: !171, line: 2312, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1501, file: !171, line: 2315, baseType: !910, size: 64, offset: 768)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1501, file: !171, line: 2316, baseType: !910, size: 64, offset: 832)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1501, file: !171, line: 2317, baseType: !910, size: 64, offset: 896)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1501, file: !171, line: 2318, baseType: !910, size: 64, offset: 960)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1501, file: !171, line: 2319, baseType: !910, size: 64, offset: 1024)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1501, file: !171, line: 2320, baseType: !910, size: 64, offset: 1088)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1501, file: !171, line: 2321, baseType: !910, size: 64, offset: 1152)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1501, file: !171, line: 2322, baseType: !910, size: 64, offset: 1216)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1501, file: !171, line: 2324, baseType: !1547, size: 64, offset: 1280)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !912, file: !171, line: 3395, baseType: !1550, size: 320)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1551)
!1551 = !{!1552, !1553, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1550, file: !171, line: 1470, baseType: !948, size: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1550, file: !171, line: 1471, baseType: !910, size: 64, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1550, file: !171, line: 1472, baseType: !910, size: 64, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !912, file: !171, line: 3396, baseType: !1556, size: 320)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1557)
!1557 = !{!1558, !1559, !1560}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1556, file: !171, line: 1483, baseType: !948, size: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1556, file: !171, line: 1484, baseType: !750, size: 32, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1556, file: !171, line: 1485, baseType: !1303, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !912, file: !171, line: 3397, baseType: !1562, size: 384)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1562, file: !171, line: 1830, baseType: !948, size: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1562, file: !171, line: 1831, baseType: !1030, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1562, file: !171, line: 1832, baseType: !910, size: 64, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1562, file: !171, line: 1835, baseType: !1303, size: 64, offset: 320)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !912, file: !171, line: 3398, baseType: !1569, size: 704)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1575, !1578}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1569, file: !171, line: 1899, baseType: !948, size: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1569, file: !171, line: 1902, baseType: !910, size: 64, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1569, file: !171, line: 1905, baseType: !1405, size: 64, offset: 256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1569, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1569, file: !171, line: 1911, baseType: !1576, size: 64, offset: 384)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1569, file: !171, line: 1914, baseType: !1579, size: 256, offset: 448)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1580)
!1580 = !{!1581, !1583, !1584, !1589}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1579, file: !171, line: 1884, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1579, file: !171, line: 1885, baseType: !1582, size: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1579, file: !171, line: 1891, baseType: !1585, size: 64, offset: 128)
!1585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1579, file: !171, line: 1891, size: 64, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1585, file: !171, line: 1891, baseType: !1405, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1585, file: !171, line: 1891, baseType: !910, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1579, file: !171, line: 1892, baseType: !1590, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !912, file: !171, line: 3399, baseType: !1592, size: 704)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1592, file: !171, line: 2009, baseType: !948, size: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1592, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1592, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1592, file: !171, line: 2014, baseType: !1030, size: 32, offset: 224)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1592, file: !171, line: 2016, baseType: !910, size: 64, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1592, file: !171, line: 2017, baseType: !1292, size: 64, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1592, file: !171, line: 2019, baseType: !910, size: 64, offset: 384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1592, file: !171, line: 2020, baseType: !910, size: 64, offset: 448)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1592, file: !171, line: 2021, baseType: !910, size: 64, offset: 512)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1592, file: !171, line: 2022, baseType: !910, size: 64, offset: 576)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1592, file: !171, line: 2023, baseType: !910, size: 64, offset: 640)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !912, file: !171, line: 3400, baseType: !1606, size: 832)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1606, file: !171, line: 2431, baseType: !948, size: 192)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1606, file: !171, line: 2433, baseType: !910, size: 64, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1606, file: !171, line: 2434, baseType: !910, size: 64, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1606, file: !171, line: 2435, baseType: !910, size: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1606, file: !171, line: 2436, baseType: !910, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1606, file: !171, line: 2437, baseType: !1292, size: 64, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1606, file: !171, line: 2438, baseType: !910, size: 64, offset: 512)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1606, file: !171, line: 2440, baseType: !910, size: 64, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1606, file: !171, line: 2441, baseType: !910, size: 64, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1606, file: !171, line: 2443, baseType: !1618, size: 128, offset: 704)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1620)
!1620 = !{!1621}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1619, file: !171, line: 182, baseType: !1297, size: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !912, file: !171, line: 3401, baseType: !1623, size: 320)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1624)
!1624 = !{!1625, !1626, !1633}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1623, file: !171, line: 3329, baseType: !948, size: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1623, file: !171, line: 3330, baseType: !1627, size: 64, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1629)
!1629 = !{!1630, !1631, !1632}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1628, file: !171, line: 3322, baseType: !1627, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1628, file: !171, line: 3323, baseType: !1627, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1628, file: !171, line: 3324, baseType: !910, size: 64, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1623, file: !171, line: 3331, baseType: !1627, size: 64, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !912, file: !171, line: 3402, baseType: !1635, size: 256)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1635, file: !171, line: 1541, baseType: !948, size: 192)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1635, file: !171, line: 1542, baseType: !1639, size: 64, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1642)
!1642 = !{!1643}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1641, file: !171, line: 1538, baseType: !1644, size: 192)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1646)
!1646 = !{!1647, !1648, !1649}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1645, file: !171, line: 1537, baseType: !7, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1645, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1645, file: !171, line: 1537, baseType: !1650, size: 128, offset: 64)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 128, elements: !829)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1652, file: !171, line: 1533, baseType: !910, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1652, file: !171, line: 1534, baseType: !910, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !912, file: !171, line: 3403, baseType: !1657, size: 512)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1668, !1669, !1670}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1657, file: !171, line: 1939, baseType: !948, size: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1657, file: !171, line: 1940, baseType: !1030, size: 32, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1657, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1657, file: !171, line: 1946, baseType: !1663, size: 32, offset: 256)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1664)
!1664 = !{!1665, !1666, !1667}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1663, file: !171, line: 1943, baseType: !189, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1663, file: !171, line: 1944, baseType: !196, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1663, file: !171, line: 1945, baseType: !203, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1657, file: !171, line: 1950, baseType: !791, size: 64, offset: 320)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1657, file: !171, line: 1951, baseType: !791, size: 64, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1657, file: !171, line: 1953, baseType: !1303, size: 64, offset: 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !912, file: !171, line: 3404, baseType: !1672, size: 1664)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1672, file: !171, line: 3338, baseType: !948, size: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1672, file: !171, line: 3341, baseType: !1676, size: 1472, offset: 192)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1677, line: 410, size: 1472, elements: !1678)
!1677 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1676, file: !1677, line: 412, baseType: !750, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1676, file: !1677, line: 413, baseType: !750, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1676, file: !1677, line: 414, baseType: !750, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1676, file: !1677, line: 415, baseType: !750, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1676, file: !1677, line: 416, baseType: !750, size: 32, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1676, file: !1677, line: 417, baseType: !750, size: 32, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1676, file: !1677, line: 418, baseType: !749, size: 8, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1676, file: !1677, line: 419, baseType: !749, size: 8, offset: 200)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1676, file: !1677, line: 420, baseType: !1688, size: 8, offset: 208)
!1688 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1676, file: !1677, line: 421, baseType: !1688, size: 8, offset: 216)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1676, file: !1677, line: 422, baseType: !1688, size: 8, offset: 224)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1676, file: !1677, line: 423, baseType: !1688, size: 8, offset: 232)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1676, file: !1677, line: 424, baseType: !1688, size: 8, offset: 240)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1676, file: !1677, line: 425, baseType: !1688, size: 8, offset: 248)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1676, file: !1677, line: 426, baseType: !1688, size: 8, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1676, file: !1677, line: 427, baseType: !1688, size: 8, offset: 264)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1676, file: !1677, line: 428, baseType: !1688, size: 8, offset: 272)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1676, file: !1677, line: 429, baseType: !1688, size: 8, offset: 280)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1676, file: !1677, line: 430, baseType: !1688, size: 8, offset: 288)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1676, file: !1677, line: 431, baseType: !1688, size: 8, offset: 296)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1676, file: !1677, line: 432, baseType: !1688, size: 8, offset: 304)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1676, file: !1677, line: 433, baseType: !1688, size: 8, offset: 312)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1676, file: !1677, line: 434, baseType: !1688, size: 8, offset: 320)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1676, file: !1677, line: 435, baseType: !1688, size: 8, offset: 328)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1676, file: !1677, line: 436, baseType: !1688, size: 8, offset: 336)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1676, file: !1677, line: 437, baseType: !1688, size: 8, offset: 344)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1676, file: !1677, line: 438, baseType: !1688, size: 8, offset: 352)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1676, file: !1677, line: 439, baseType: !1688, size: 8, offset: 360)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1676, file: !1677, line: 440, baseType: !1688, size: 8, offset: 368)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1676, file: !1677, line: 441, baseType: !1688, size: 8, offset: 376)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1676, file: !1677, line: 442, baseType: !1688, size: 8, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1676, file: !1677, line: 443, baseType: !1688, size: 8, offset: 392)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1676, file: !1677, line: 444, baseType: !1688, size: 8, offset: 400)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1676, file: !1677, line: 445, baseType: !1688, size: 8, offset: 408)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1676, file: !1677, line: 446, baseType: !1688, size: 8, offset: 416)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1676, file: !1677, line: 447, baseType: !1688, size: 8, offset: 424)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1676, file: !1677, line: 448, baseType: !1688, size: 8, offset: 432)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1676, file: !1677, line: 449, baseType: !1688, size: 8, offset: 440)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1676, file: !1677, line: 450, baseType: !1688, size: 8, offset: 448)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1676, file: !1677, line: 451, baseType: !1688, size: 8, offset: 456)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1676, file: !1677, line: 452, baseType: !1688, size: 8, offset: 464)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1676, file: !1677, line: 453, baseType: !1688, size: 8, offset: 472)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1676, file: !1677, line: 454, baseType: !1688, size: 8, offset: 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1676, file: !1677, line: 455, baseType: !1688, size: 8, offset: 488)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1676, file: !1677, line: 456, baseType: !1688, size: 8, offset: 496)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1676, file: !1677, line: 457, baseType: !1688, size: 8, offset: 504)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1676, file: !1677, line: 458, baseType: !1688, size: 8, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1676, file: !1677, line: 459, baseType: !1688, size: 8, offset: 520)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1676, file: !1677, line: 460, baseType: !1688, size: 8, offset: 528)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1676, file: !1677, line: 461, baseType: !1688, size: 8, offset: 536)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1676, file: !1677, line: 462, baseType: !1688, size: 8, offset: 544)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1676, file: !1677, line: 463, baseType: !1688, size: 8, offset: 552)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1676, file: !1677, line: 464, baseType: !1688, size: 8, offset: 560)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1676, file: !1677, line: 465, baseType: !1688, size: 8, offset: 568)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1676, file: !1677, line: 466, baseType: !1688, size: 8, offset: 576)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1676, file: !1677, line: 467, baseType: !1688, size: 8, offset: 584)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1676, file: !1677, line: 468, baseType: !1688, size: 8, offset: 592)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1676, file: !1677, line: 469, baseType: !1688, size: 8, offset: 600)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1676, file: !1677, line: 470, baseType: !1688, size: 8, offset: 608)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1676, file: !1677, line: 471, baseType: !1688, size: 8, offset: 616)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1676, file: !1677, line: 472, baseType: !1688, size: 8, offset: 624)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1676, file: !1677, line: 473, baseType: !1688, size: 8, offset: 632)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1676, file: !1677, line: 474, baseType: !1688, size: 8, offset: 640)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1676, file: !1677, line: 475, baseType: !1688, size: 8, offset: 648)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1676, file: !1677, line: 476, baseType: !1688, size: 8, offset: 656)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1676, file: !1677, line: 477, baseType: !1688, size: 8, offset: 664)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1676, file: !1677, line: 478, baseType: !1688, size: 8, offset: 672)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1676, file: !1677, line: 479, baseType: !1688, size: 8, offset: 680)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1676, file: !1677, line: 480, baseType: !1688, size: 8, offset: 688)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1676, file: !1677, line: 481, baseType: !1688, size: 8, offset: 696)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1676, file: !1677, line: 482, baseType: !1688, size: 8, offset: 704)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1676, file: !1677, line: 483, baseType: !1688, size: 8, offset: 712)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1676, file: !1677, line: 484, baseType: !1688, size: 8, offset: 720)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1676, file: !1677, line: 485, baseType: !1688, size: 8, offset: 728)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1676, file: !1677, line: 486, baseType: !1688, size: 8, offset: 736)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1676, file: !1677, line: 487, baseType: !1688, size: 8, offset: 744)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1676, file: !1677, line: 488, baseType: !1688, size: 8, offset: 752)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1676, file: !1677, line: 489, baseType: !1688, size: 8, offset: 760)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1676, file: !1677, line: 490, baseType: !1688, size: 8, offset: 768)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1676, file: !1677, line: 491, baseType: !1688, size: 8, offset: 776)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1676, file: !1677, line: 492, baseType: !1688, size: 8, offset: 784)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1676, file: !1677, line: 493, baseType: !1688, size: 8, offset: 792)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1676, file: !1677, line: 494, baseType: !1688, size: 8, offset: 800)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1676, file: !1677, line: 495, baseType: !1688, size: 8, offset: 808)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1676, file: !1677, line: 496, baseType: !1688, size: 8, offset: 816)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1676, file: !1677, line: 497, baseType: !1688, size: 8, offset: 824)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1676, file: !1677, line: 498, baseType: !1688, size: 8, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1676, file: !1677, line: 499, baseType: !1688, size: 8, offset: 840)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1676, file: !1677, line: 500, baseType: !1688, size: 8, offset: 848)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1676, file: !1677, line: 501, baseType: !1688, size: 8, offset: 856)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1676, file: !1677, line: 502, baseType: !1688, size: 8, offset: 864)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1676, file: !1677, line: 503, baseType: !1688, size: 8, offset: 872)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1676, file: !1677, line: 504, baseType: !1688, size: 8, offset: 880)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1676, file: !1677, line: 505, baseType: !1688, size: 8, offset: 888)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1676, file: !1677, line: 506, baseType: !1688, size: 8, offset: 896)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1676, file: !1677, line: 507, baseType: !1688, size: 8, offset: 904)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1676, file: !1677, line: 508, baseType: !1688, size: 8, offset: 912)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1676, file: !1677, line: 509, baseType: !1688, size: 8, offset: 920)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1676, file: !1677, line: 510, baseType: !1688, size: 8, offset: 928)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1676, file: !1677, line: 511, baseType: !1688, size: 8, offset: 936)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1676, file: !1677, line: 512, baseType: !1688, size: 8, offset: 944)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1676, file: !1677, line: 513, baseType: !1688, size: 8, offset: 952)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1676, file: !1677, line: 514, baseType: !1688, size: 8, offset: 960)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1676, file: !1677, line: 515, baseType: !1688, size: 8, offset: 968)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1676, file: !1677, line: 516, baseType: !1688, size: 8, offset: 976)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1676, file: !1677, line: 517, baseType: !1688, size: 8, offset: 984)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1676, file: !1677, line: 518, baseType: !1688, size: 8, offset: 992)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1676, file: !1677, line: 519, baseType: !1688, size: 8, offset: 1000)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1676, file: !1677, line: 520, baseType: !1688, size: 8, offset: 1008)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1676, file: !1677, line: 521, baseType: !1688, size: 8, offset: 1016)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1676, file: !1677, line: 522, baseType: !1688, size: 8, offset: 1024)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1676, file: !1677, line: 523, baseType: !1688, size: 8, offset: 1032)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1676, file: !1677, line: 524, baseType: !1688, size: 8, offset: 1040)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1676, file: !1677, line: 525, baseType: !1688, size: 8, offset: 1048)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1676, file: !1677, line: 526, baseType: !1688, size: 8, offset: 1056)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1676, file: !1677, line: 527, baseType: !1688, size: 8, offset: 1064)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1676, file: !1677, line: 528, baseType: !1688, size: 8, offset: 1072)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1676, file: !1677, line: 529, baseType: !1688, size: 8, offset: 1080)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1676, file: !1677, line: 530, baseType: !1688, size: 8, offset: 1088)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1676, file: !1677, line: 531, baseType: !1688, size: 8, offset: 1096)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1676, file: !1677, line: 532, baseType: !1688, size: 8, offset: 1104)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1676, file: !1677, line: 533, baseType: !1688, size: 8, offset: 1112)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1676, file: !1677, line: 534, baseType: !1688, size: 8, offset: 1120)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1676, file: !1677, line: 535, baseType: !1688, size: 8, offset: 1128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1676, file: !1677, line: 536, baseType: !1688, size: 8, offset: 1136)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1676, file: !1677, line: 537, baseType: !1688, size: 8, offset: 1144)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1676, file: !1677, line: 538, baseType: !1688, size: 8, offset: 1152)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1676, file: !1677, line: 539, baseType: !1688, size: 8, offset: 1160)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1676, file: !1677, line: 540, baseType: !1688, size: 8, offset: 1168)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1676, file: !1677, line: 541, baseType: !1688, size: 8, offset: 1176)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1676, file: !1677, line: 542, baseType: !1688, size: 8, offset: 1184)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1676, file: !1677, line: 543, baseType: !1688, size: 8, offset: 1192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1676, file: !1677, line: 544, baseType: !1688, size: 8, offset: 1200)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1676, file: !1677, line: 545, baseType: !1688, size: 8, offset: 1208)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1676, file: !1677, line: 546, baseType: !1688, size: 8, offset: 1216)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1676, file: !1677, line: 547, baseType: !1688, size: 8, offset: 1224)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1676, file: !1677, line: 548, baseType: !1688, size: 8, offset: 1232)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1676, file: !1677, line: 549, baseType: !1688, size: 8, offset: 1240)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1676, file: !1677, line: 550, baseType: !1688, size: 8, offset: 1248)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1676, file: !1677, line: 551, baseType: !1688, size: 8, offset: 1256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1676, file: !1677, line: 552, baseType: !1688, size: 8, offset: 1264)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1676, file: !1677, line: 553, baseType: !1688, size: 8, offset: 1272)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1676, file: !1677, line: 554, baseType: !1688, size: 8, offset: 1280)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1676, file: !1677, line: 555, baseType: !1688, size: 8, offset: 1288)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1676, file: !1677, line: 556, baseType: !1688, size: 8, offset: 1296)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1676, file: !1677, line: 557, baseType: !1688, size: 8, offset: 1304)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1676, file: !1677, line: 558, baseType: !1688, size: 8, offset: 1312)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1676, file: !1677, line: 559, baseType: !1688, size: 8, offset: 1320)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1676, file: !1677, line: 560, baseType: !1688, size: 8, offset: 1328)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1676, file: !1677, line: 561, baseType: !1688, size: 8, offset: 1336)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1676, file: !1677, line: 562, baseType: !1688, size: 8, offset: 1344)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1676, file: !1677, line: 563, baseType: !1688, size: 8, offset: 1352)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1676, file: !1677, line: 564, baseType: !1688, size: 8, offset: 1360)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1676, file: !1677, line: 565, baseType: !1688, size: 8, offset: 1368)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1676, file: !1677, line: 566, baseType: !1688, size: 8, offset: 1376)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1676, file: !1677, line: 567, baseType: !1688, size: 8, offset: 1384)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1676, file: !1677, line: 568, baseType: !1688, size: 8, offset: 1392)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1676, file: !1677, line: 569, baseType: !1688, size: 8, offset: 1400)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1676, file: !1677, line: 570, baseType: !1688, size: 8, offset: 1408)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1676, file: !1677, line: 571, baseType: !1688, size: 8, offset: 1416)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1676, file: !1677, line: 572, baseType: !1688, size: 8, offset: 1424)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1676, file: !1677, line: 573, baseType: !1688, size: 8, offset: 1432)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1676, file: !1677, line: 574, baseType: !1688, size: 8, offset: 1440)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !912, file: !171, line: 3405, baseType: !1844, size: 384)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1845)
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1844, file: !171, line: 3353, baseType: !948, size: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1844, file: !171, line: 3356, baseType: !1848, size: 192, offset: 192)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1677, line: 578, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1848, file: !1677, line: 580, baseType: !750, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1848, file: !1677, line: 581, baseType: !750, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1848, file: !1677, line: 582, baseType: !750, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1848, file: !1677, line: 583, baseType: !750, size: 32, offset: 96)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1848, file: !1677, line: 584, baseType: !749, size: 8, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1848, file: !1677, line: 585, baseType: !749, size: 8, offset: 136)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1848, file: !1677, line: 586, baseType: !749, size: 8, offset: 144)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1848, file: !1677, line: 587, baseType: !749, size: 8, offset: 152)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1848, file: !1677, line: 588, baseType: !749, size: 8, offset: 160)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1848, file: !1677, line: 589, baseType: !749, size: 8, offset: 168)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1848, file: !1677, line: 590, baseType: !749, size: 8, offset: 176)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !815, file: !593, line: 178, baseType: !765, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !815, file: !593, line: 179, baseType: !1863, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !593, line: 150, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !593, line: 142, size: 320, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1865, file: !593, line: 144, baseType: !910, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1865, file: !593, line: 145, baseType: !795, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1865, file: !593, line: 146, baseType: !795, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1865, file: !593, line: 147, baseType: !1526, size: 32, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1865, file: !593, line: 148, baseType: !7, size: 32, offset: 224)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1865, file: !593, line: 149, baseType: !749, size: 8, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !815, file: !593, line: 180, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !593, line: 162, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !593, line: 159, size: 128, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1876, file: !593, line: 160, baseType: !910, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1876, file: !593, line: 161, baseType: !881, size: 64, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !815, file: !593, line: 181, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !593, line: 181, flags: DIFlagFwdDecl)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !810, file: !593, line: 317, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !881, size: 64, elements: !829)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !810, file: !593, line: 318, baseType: !1886, size: 320)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !593, line: 188, size: 320, elements: !1887)
!1887 = !{!1888, !1890, !1913}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1886, file: !593, line: 190, baseType: !1889, size: 192)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !814, size: 192, elements: !981)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1886, file: !593, line: 193, baseType: !1891, size: 64, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !593, line: 206, size: 320, elements: !1893)
!1893 = !{!1894, !1898, !1899, !1900, !1912}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1892, file: !593, line: 208, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !764, line: 62, baseType: !1897)
!1897 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !764, line: 61, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1892, file: !593, line: 211, baseType: !7, size: 32, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1892, file: !593, line: 214, baseType: !881, size: 64, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1892, file: !593, line: 224, baseType: !1901, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !593, line: 202, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !593, line: 202, size: 128, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1903, file: !593, line: 202, baseType: !1906, size: 128)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !593, line: 200, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !593, line: 200, size: 128, elements: !1908)
!1908 = !{!1909, !1910, !1911}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1907, file: !593, line: 200, baseType: !7, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1907, file: !593, line: 200, baseType: !7, size: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1907, file: !593, line: 200, baseType: !828, size: 64, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1892, file: !593, line: 234, baseType: !1901, size: 64, offset: 256)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1886, file: !593, line: 197, baseType: !881, size: 64, offset: 256)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !810, file: !593, line: 319, baseType: !970, size: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !810, file: !593, line: 320, baseType: !989, size: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !783, file: !155, line: 134, baseType: !754, size: 64, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !783, file: !155, line: 137, baseType: !910, size: 64, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !783, file: !155, line: 138, baseType: !1030, size: 32, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !783, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !783, file: !155, line: 144, baseType: !750, size: 32, offset: 384)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !783, file: !155, line: 145, baseType: !750, size: 32, offset: 416)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !783, file: !155, line: 146, baseType: !1923, size: 64, offset: 448)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !881)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !766, file: !155, line: 220, baseType: !769, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !766, file: !155, line: 223, baseType: !754, size: 64, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !766, file: !155, line: 226, baseType: !1376, size: 64, offset: 192)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !766, file: !155, line: 229, baseType: !1928, size: 128, offset: 256)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 128, elements: !865)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !766, file: !155, line: 232, baseType: !765, size: 64, offset: 384)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !766, file: !155, line: 233, baseType: !765, size: 64, offset: 448)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !766, file: !155, line: 238, baseType: !1934, size: 64, offset: 512)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1935)
!1935 = !{!1936, !1942}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1934, file: !155, line: 236, baseType: !1937, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1939)
!1939 = !{!1940, !1941}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1938, file: !155, line: 275, baseType: !791, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1938, file: !155, line: 278, baseType: !791, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1934, file: !155, line: 237, baseType: !1943, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1944, file: !155, line: 261, baseType: !795, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1944, file: !155, line: 262, baseType: !795, size: 64, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1944, file: !155, line: 266, baseType: !795, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1944, file: !155, line: 267, baseType: !795, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1944, file: !155, line: 270, baseType: !750, size: 32, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !766, file: !155, line: 241, baseType: !1923, size: 64, offset: 576)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !766, file: !155, line: 244, baseType: !750, size: 32, offset: 640)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !766, file: !155, line: 247, baseType: !750, size: 32, offset: 672)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !766, file: !155, line: 250, baseType: !750, size: 32, offset: 704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !766, file: !155, line: 253, baseType: !750, size: 32, offset: 736)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !766, file: !155, line: 256, baseType: !750, size: 32, offset: 768)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !760, file: !398, line: 118, baseType: !750, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "num_loads", scope: !760, file: !398, line: 121, baseType: !750, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "num_stores", scope: !760, file: !398, line: 122, baseType: !750, size: 32, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "num_debug", scope: !760, file: !398, line: 125, baseType: !750, size: 32, offset: 160)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !760, file: !398, line: 129, baseType: !1962, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddg_node_ptr", file: !398, line: 31, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ddg_node", file: !398, line: 48, size: 512, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1969, !1989, !1990, !2001, !2002}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cuid", scope: !1964, file: !398, line: 53, baseType: !750, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1964, file: !398, line: 56, baseType: !795, size: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "first_note", scope: !1964, file: !398, line: 62, baseType: !795, size: 64, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1964, file: !398, line: 65, baseType: !1970, size: 64, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddg_edge_ptr", file: !398, line: 32, baseType: !1971)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ddg_edge", file: !398, line: 81, size: 448, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1978, !1980, !1981, !1982, !1983, !1984}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1972, file: !398, line: 84, baseType: !1962, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1972, file: !398, line: 85, baseType: !1962, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1972, file: !398, line: 88, baseType: !1977, size: 32, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_type", file: !398, line: 37, baseType: !397)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1972, file: !398, line: 91, baseType: !1979, size: 32, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_data_type", file: !398, line: 39, baseType: !403)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !1972, file: !398, line: 94, baseType: !750, size: 32, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1972, file: !398, line: 97, baseType: !750, size: 32, offset: 224)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !1972, file: !398, line: 101, baseType: !1970, size: 64, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !1972, file: !398, line: 102, baseType: !1970, size: 64, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1972, file: !398, line: 108, baseType: !1985, size: 64, offset: 384)
!1985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1972, file: !398, line: 105, size: 64, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1985, file: !398, line: 106, baseType: !750, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1985, file: !398, line: 107, baseType: !754, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1964, file: !398, line: 66, baseType: !1970, size: 64, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "successors", scope: !1964, file: !398, line: 70, baseType: !1991, size: 64, offset: 320)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !1992, line: 45, baseType: !1993)
!1992 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !1992, line: 39, size: 192, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !1994, file: !1992, line: 41, baseType: !748, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !1994, file: !1992, line: 42, baseType: !7, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1994, file: !1992, line: 43, baseType: !7, size: 32, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !1994, file: !1992, line: 44, baseType: !2000, size: 64, offset: 128)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 64, elements: !829)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "predecessors", scope: !1964, file: !398, line: 71, baseType: !1991, size: 64, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1964, file: !398, line: 77, baseType: !2003, size: 64, offset: 448)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1964, file: !398, line: 74, size: 64, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2003, file: !398, line: 75, baseType: !750, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2003, file: !398, line: 76, baseType: !754, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "closing_branch", scope: !760, file: !398, line: 132, baseType: !1962, size: 64, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "closing_branch_deps", scope: !760, file: !398, line: 137, baseType: !750, size: 32, offset: 320)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "num_backarcs", scope: !760, file: !398, line: 140, baseType: !750, size: 32, offset: 352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "backarcs", scope: !760, file: !398, line: 141, baseType: !2011, size: 64, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "partial_schedule_ptr", file: !3, line: 105, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partial_schedule", file: !3, line: 143, size: 256, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2030, !2031, !2032}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ii", scope: !2015, file: !3, line: 145, baseType: !750, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !2015, file: !3, line: 146, baseType: !750, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !2015, file: !3, line: 149, baseType: !2020, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "ps_insn_ptr", file: !3, line: 106, baseType: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ps_insn", file: !3, line: 123, size: 320, elements: !2024)
!2024 = !{!2025, !2026, !2027, !2028, !2029}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2023, file: !3, line: 126, baseType: !1962, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !2023, file: !3, line: 130, baseType: !750, size: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "next_in_row", scope: !2023, file: !3, line: 133, baseType: !2021, size: 64, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "prev_in_row", scope: !2023, file: !3, line: 134, baseType: !2021, size: 64, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "row_rest_count", scope: !2023, file: !3, line: 137, baseType: !750, size: 32, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "min_cycle", scope: !2015, file: !3, line: 152, baseType: !750, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "max_cycle", scope: !2015, file: !3, line: 155, baseType: !750, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2015, file: !3, line: 157, baseType: !758, size: 64, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1311, line: 32, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1311, line: 32, size: 96, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2035, file: !1311, line: 32, baseType: !2038, size: 96)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1311, line: 31, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1311, line: 31, size: 96, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2039, file: !1311, line: 31, baseType: !7, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2039, file: !1311, line: 31, baseType: !7, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2039, file: !1311, line: 31, baseType: !2044, size: 32, offset: 64)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 32, elements: !829)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "node_order_params", file: !3, line: 2054, size: 96, elements: !2047)
!2047 = !{!2048, !2049, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "asap", scope: !2046, file: !3, line: 2056, baseType: !750, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "alap", scope: !2046, file: !3, line: 2057, baseType: !750, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2046, file: !3, line: 2058, baseType: !750, size: 32, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "nopa", file: !3, line: 2043, baseType: !2045)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "node_sched_params_ptr", file: !3, line: 231, baseType: !2053)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "node_sched_params", file: !3, line: 210, size: 256, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "asap", scope: !2054, file: !3, line: 212, baseType: !750, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2054, file: !3, line: 213, baseType: !750, size: 32, offset: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "first_reg_move", scope: !2054, file: !3, line: 219, baseType: !795, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "nreg_moves", scope: !2054, file: !3, line: 223, baseType: !750, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "row", scope: !2054, file: !3, line: 225, baseType: !750, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "stage", scope: !2054, file: !3, line: 226, baseType: !750, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !2054, file: !3, line: 230, baseType: !750, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "undo_replace_buff_elem", file: !3, line: 162, size: 256, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2069}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2064, file: !3, line: 164, baseType: !795, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "orig_reg", scope: !2064, file: !3, line: 165, baseType: !795, size: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "new_reg", scope: !2064, file: !3, line: 166, baseType: !795, size: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2064, file: !3, line: 167, baseType: !2063, size: 64, offset: 192)
!2070 = !{!0, !2071, !2092, !2132, !2181, !2190}
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "sms_common_sched_info", scope: !2, file: !3, line: 254, type: !2073, isLocal: true, isDefinition: true)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "common_sched_info_def", file: !736, line: 81, size: 320, elements: !2074)
!2074 = !{!2075, !2079, !2083, !2087, !2091}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fix_recovery_cfg", scope: !2073, file: !736, line: 89, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !750, !750, !750}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "add_block", scope: !2073, file: !736, line: 96, baseType: !2080, size: 64, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !763, !763}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_number_of_insns", scope: !2073, file: !736, line: 99, baseType: !2084, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!750, !763}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "luid_for_non_insn", scope: !2073, file: !736, line: 105, baseType: !2088, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!750, !795}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "sched_pass_id", scope: !2073, file: !736, line: 108, baseType: !735, size: 32, offset: 256)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "sms_sched_deps_info", scope: !2, file: !3, line: 256, type: !2094, isLocal: true, isDefinition: true)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_deps_info_def", file: !736, line: 1149, size: 832, elements: !2095)
!2095 = !{!2096, !2102, !2106, !2110, !2111, !2112, !2113, !2114, !2118, !2119, !2120, !2125, !2129, !2130, !2131}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "compute_jump_reg_dependencies", scope: !2094, file: !736, line: 1154, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !795, !2100, !2100, !2100}
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !155, line: 37, baseType: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !764, line: 47, baseType: !848)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "start_insn", scope: !2094, file: !736, line: 1157, baseType: !2103, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !795}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "finish_insn", scope: !2094, file: !736, line: 1160, baseType: !2107, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "start_lhs", scope: !2094, file: !736, line: 1163, baseType: !2103, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "finish_lhs", scope: !2094, file: !736, line: 1166, baseType: !2107, size: 64, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "start_rhs", scope: !2094, file: !736, line: 1169, baseType: !2103, size: 64, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "finish_rhs", scope: !2094, file: !736, line: 1172, baseType: !2107, size: 64, offset: 384)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_set", scope: !2094, file: !736, line: 1175, baseType: !2115, size: 64, offset: 448)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{null, !750}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_clobber", scope: !2094, file: !736, line: 1178, baseType: !2115, size: 64, offset: 512)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_use", scope: !2094, file: !736, line: 1181, baseType: !2115, size: 64, offset: 576)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "note_mem_dep", scope: !2094, file: !736, line: 1185, baseType: !2121, size: 64, offset: 640)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !795, !795, !795, !2124}
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !736, line: 218, baseType: !750)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "note_dep", scope: !2094, file: !736, line: 1188, baseType: !2126, size: 64, offset: 704)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{null, !795, !2124}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "use_cselib", scope: !2094, file: !736, line: 1194, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "use_deps_list", scope: !2094, file: !736, line: 1198, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "generate_spec_deps", scope: !2094, file: !736, line: 1202, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "sms_sched_info", scope: !2, file: !3, line: 264, type: !2134, isLocal: true, isDefinition: true)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "haifa_sched_info", file: !736, line: 556, size: 1088, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2142, !2146, !2150, !2157, !2158, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2172, !2176, !2180}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "init_ready_list", scope: !2134, file: !736, line: 560, baseType: !2107, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "can_schedule_ready_p", scope: !2134, file: !736, line: 563, baseType: !2088, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_more_p", scope: !2134, file: !736, line: 565, baseType: !2139, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!750}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "new_ready", scope: !2134, file: !736, line: 571, baseType: !2143, size: 64, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!2124, !795, !2124}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !2134, file: !736, line: 575, baseType: !2147, size: 64, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!750, !795, !795}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "print_insn", scope: !2134, file: !736, line: 580, baseType: !2151, size: 64, offset: 320)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!755, !2154, !750}
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !764, line: 51, baseType: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "contributes_to_priority", scope: !2134, file: !736, line: 583, baseType: !2147, size: 64, offset: 384)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "insn_finishes_block_p", scope: !2134, file: !736, line: 587, baseType: !2159, size: 64, offset: 448)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!749, !795}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "prev_head", scope: !2134, file: !736, line: 590, baseType: !795, size: 64, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "next_tail", scope: !2134, file: !736, line: 590, baseType: !795, size: 64, offset: 576)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2134, file: !736, line: 594, baseType: !795, size: 64, offset: 640)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2134, file: !736, line: 594, baseType: !795, size: 64, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "queue_must_finish_empty", scope: !2134, file: !736, line: 597, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "sched_max_insns_priority", scope: !2134, file: !736, line: 600, baseType: !750, size: 32, offset: 800)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "add_remove_insn", scope: !2134, file: !736, line: 606, baseType: !2169, size: 64, offset: 832)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !795, !750}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "begin_schedule_ready", scope: !2134, file: !736, line: 611, baseType: !2173, size: 64, offset: 896)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !795, !795}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "advance_target_bb", scope: !2134, file: !736, line: 617, baseType: !2177, size: 64, offset: 960)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!763, !763, !795}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2134, file: !736, line: 621, baseType: !7, size: 32, offset: 1024)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "tmp", scope: !2183, file: !3, line: 240, type: !2187, isLocal: true, isDefinition: true)
!2183 = distinct !DISubprogram(name: "sms_print_insn", scope: !3, file: !3, line: 238, type: !2152, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2184 = !{!2185, !2186}
!2185 = !DILocalVariable(name: "insn", arg: 1, scope: !2183, file: !3, line: 238, type: !2154)
!2186 = !DILocalVariable(name: "aligned", arg: 2, scope: !2183, file: !3, line: 238, type: !750)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 640, elements: !2188)
!2188 = !{!2189}
!2189 = !DISubrange(count: 80)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "node_sched_params", scope: !2, file: !3, line: 383, type: !2052, isLocal: true, isDefinition: true)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !410, line: 162, size: 640, elements: !2193)
!2193 = !{!2194}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2192, file: !410, line: 164, baseType: !2195, size: 640)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !410, line: 114, size: 640, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2203, !2207, !2209, !2210, !2211, !2213, !2214, !2215, !2216, !2217}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2195, file: !410, line: 117, baseType: !409, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2195, file: !410, line: 121, baseType: !755, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2195, file: !410, line: 125, baseType: !2200, size: 64, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!749}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2195, file: !410, line: 130, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!7}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2195, file: !410, line: 133, baseType: !2208, size: 64, offset: 256)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2195, file: !410, line: 136, baseType: !2208, size: 64, offset: 320)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2195, file: !410, line: 139, baseType: !750, size: 32, offset: 384)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2195, file: !410, line: 143, baseType: !2212, size: 32, offset: 416)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !417, line: 80, baseType: !416)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2195, file: !410, line: 146, baseType: !7, size: 32, offset: 448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2195, file: !410, line: 147, baseType: !7, size: 32, offset: 480)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2195, file: !410, line: 148, baseType: !7, size: 32, offset: 512)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2195, file: !410, line: 151, baseType: !7, size: 32, offset: 544)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2195, file: !410, line: 152, baseType: !7, size: 32, offset: 576)
!2218 = !{i32 2, !"Dwarf Version", i32 4}
!2219 = !{i32 2, !"Debug Info Version", i32 3}
!2220 = !{i32 1, !"wchar_size", i32 4}
!2221 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2222 = distinct !DISubprogram(name: "vprintf", scope: !2223, file: !2223, line: 39, type: !2224, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2234)
!2223 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!750, !2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !755)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2228, file: !3, baseType: !7, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2228, file: !3, baseType: !7, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2228, file: !3, baseType: !754, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2228, file: !3, baseType: !754, size: 64, offset: 128)
!2234 = !{!2235, !2236}
!2235 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2222, file: !2223, line: 39, type: !2226)
!2236 = !DILocalVariable(name: "__arg", arg: 2, scope: !2222, file: !2223, line: 39, type: !2227)
!2237 = !DILocation(line: 0, scope: !2222)
!2238 = !DILocation(line: 41, column: 20, scope: !2222)
!2239 = !DILocation(line: 41, column: 10, scope: !2222)
!2240 = !DILocation(line: 41, column: 3, scope: !2222)
!2241 = distinct !DISubprogram(name: "getchar", scope: !2223, file: !2223, line: 47, type: !2140, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!2242 = !{}
!2243 = !DILocation(line: 49, column: 16, scope: !2241)
!2244 = !DILocation(line: 49, column: 10, scope: !2241)
!2245 = !DILocation(line: 49, column: 3, scope: !2241)
!2246 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2223, file: !2223, line: 56, type: !2247, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2300)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!750, !2249}
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2251, line: 7, baseType: !2252)
!2251 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2253, line: 49, size: 1728, elements: !2254)
!2253 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2270, !2272, !2273, !2274, !2277, !2279, !2280, !2281, !2284, !2286, !2289, !2292, !2293, !2294, !2295, !2296}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2252, file: !2253, line: 51, baseType: !750, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2252, file: !2253, line: 54, baseType: !752, size: 64, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2252, file: !2253, line: 55, baseType: !752, size: 64, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2252, file: !2253, line: 56, baseType: !752, size: 64, offset: 192)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2252, file: !2253, line: 57, baseType: !752, size: 64, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2252, file: !2253, line: 58, baseType: !752, size: 64, offset: 320)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2252, file: !2253, line: 59, baseType: !752, size: 64, offset: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2252, file: !2253, line: 60, baseType: !752, size: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2252, file: !2253, line: 61, baseType: !752, size: 64, offset: 512)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2252, file: !2253, line: 64, baseType: !752, size: 64, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2252, file: !2253, line: 65, baseType: !752, size: 64, offset: 640)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2252, file: !2253, line: 66, baseType: !752, size: 64, offset: 704)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2252, file: !2253, line: 68, baseType: !2268, size: 64, offset: 768)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2253, line: 36, flags: DIFlagFwdDecl)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2252, file: !2253, line: 70, baseType: !2271, size: 64, offset: 832)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2252, file: !2253, line: 72, baseType: !750, size: 32, offset: 896)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2252, file: !2253, line: 73, baseType: !750, size: 32, offset: 928)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2252, file: !2253, line: 74, baseType: !2275, size: 64, offset: 960)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2276, line: 152, baseType: !881)
!2276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2252, file: !2253, line: 77, baseType: !2278, size: 16, offset: 1024)
!2278 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2252, file: !2253, line: 78, baseType: !1688, size: 8, offset: 1040)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2252, file: !2253, line: 79, baseType: !1005, size: 8, offset: 1048)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2252, file: !2253, line: 81, baseType: !2282, size: 64, offset: 1088)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2253, line: 43, baseType: null)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2252, file: !2253, line: 89, baseType: !2285, size: 64, offset: 1152)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2276, line: 153, baseType: !881)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2252, file: !2253, line: 91, baseType: !2287, size: 64, offset: 1216)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2253, line: 37, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2252, file: !2253, line: 92, baseType: !2290, size: 64, offset: 1280)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2253, line: 38, flags: DIFlagFwdDecl)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2252, file: !2253, line: 93, baseType: !2271, size: 64, offset: 1344)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2252, file: !2253, line: 94, baseType: !754, size: 64, offset: 1408)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2252, file: !2253, line: 95, baseType: !1266, size: 64, offset: 1472)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2252, file: !2253, line: 96, baseType: !750, size: 32, offset: 1536)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2252, file: !2253, line: 98, baseType: !2297, size: 160, offset: 1568)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 160, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 20)
!2300 = !{!2301}
!2301 = !DILocalVariable(name: "__fp", arg: 1, scope: !2246, file: !2223, line: 56, type: !2249)
!2302 = !DILocation(line: 0, scope: !2246)
!2303 = !DILocation(line: 58, column: 10, scope: !2246)
!2304 = !DILocation(line: 58, column: 3, scope: !2246)
!2305 = distinct !DISubprogram(name: "getc_unlocked", scope: !2223, file: !2223, line: 66, type: !2247, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2306 = !{!2307}
!2307 = !DILocalVariable(name: "__fp", arg: 1, scope: !2305, file: !2223, line: 66, type: !2249)
!2308 = !DILocation(line: 0, scope: !2305)
!2309 = !DILocation(line: 68, column: 10, scope: !2305)
!2310 = !DILocation(line: 68, column: 3, scope: !2305)
!2311 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2223, file: !2223, line: 73, type: !2140, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!2312 = !DILocation(line: 75, column: 10, scope: !2311)
!2313 = !DILocation(line: 75, column: 3, scope: !2311)
!2314 = distinct !DISubprogram(name: "putchar", scope: !2223, file: !2223, line: 82, type: !2315, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2317)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!750, !750}
!2317 = !{!2318}
!2318 = !DILocalVariable(name: "__c", arg: 1, scope: !2314, file: !2223, line: 82, type: !750)
!2319 = !DILocation(line: 0, scope: !2314)
!2320 = !DILocation(line: 84, column: 21, scope: !2314)
!2321 = !DILocation(line: 84, column: 10, scope: !2314)
!2322 = !DILocation(line: 84, column: 3, scope: !2314)
!2323 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2223, file: !2223, line: 91, type: !2324, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!750, !750, !2249}
!2326 = !{!2327, !2328}
!2327 = !DILocalVariable(name: "__c", arg: 1, scope: !2323, file: !2223, line: 91, type: !750)
!2328 = !DILocalVariable(name: "__stream", arg: 2, scope: !2323, file: !2223, line: 91, type: !2249)
!2329 = !DILocation(line: 0, scope: !2323)
!2330 = !DILocation(line: 93, column: 10, scope: !2323)
!2331 = !DILocation(line: 93, column: 3, scope: !2323)
!2332 = distinct !DISubprogram(name: "putc_unlocked", scope: !2223, file: !2223, line: 101, type: !2324, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2333)
!2333 = !{!2334, !2335}
!2334 = !DILocalVariable(name: "__c", arg: 1, scope: !2332, file: !2223, line: 101, type: !750)
!2335 = !DILocalVariable(name: "__stream", arg: 2, scope: !2332, file: !2223, line: 101, type: !2249)
!2336 = !DILocation(line: 0, scope: !2332)
!2337 = !DILocation(line: 103, column: 10, scope: !2332)
!2338 = !DILocation(line: 103, column: 3, scope: !2332)
!2339 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2223, file: !2223, line: 108, type: !2315, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2340)
!2340 = !{!2341}
!2341 = !DILocalVariable(name: "__c", arg: 1, scope: !2339, file: !2223, line: 108, type: !750)
!2342 = !DILocation(line: 0, scope: !2339)
!2343 = !DILocation(line: 110, column: 10, scope: !2339)
!2344 = !DILocation(line: 110, column: 3, scope: !2339)
!2345 = distinct !DISubprogram(name: "getline", scope: !2223, file: !2223, line: 118, type: !2346, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2350)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!2348, !751, !2349, !2249}
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2276, line: 193, baseType: !881)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!2350 = !{!2351, !2352, !2353}
!2351 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2345, file: !2223, line: 118, type: !751)
!2352 = !DILocalVariable(name: "__n", arg: 2, scope: !2345, file: !2223, line: 118, type: !2349)
!2353 = !DILocalVariable(name: "__stream", arg: 3, scope: !2345, file: !2223, line: 118, type: !2249)
!2354 = !DILocation(line: 0, scope: !2345)
!2355 = !DILocation(line: 120, column: 10, scope: !2345)
!2356 = !DILocation(line: 120, column: 3, scope: !2345)
!2357 = distinct !DISubprogram(name: "feof_unlocked", scope: !2223, file: !2223, line: 128, type: !2247, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2358)
!2358 = !{!2359}
!2359 = !DILocalVariable(name: "__stream", arg: 1, scope: !2357, file: !2223, line: 128, type: !2249)
!2360 = !DILocation(line: 0, scope: !2357)
!2361 = !DILocation(line: 130, column: 10, scope: !2357)
!2362 = !DILocation(line: 130, column: 3, scope: !2357)
!2363 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2223, file: !2223, line: 135, type: !2247, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2364)
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "__stream", arg: 1, scope: !2363, file: !2223, line: 135, type: !2249)
!2366 = !DILocation(line: 0, scope: !2363)
!2367 = !DILocation(line: 137, column: 10, scope: !2363)
!2368 = !DILocation(line: 137, column: 3, scope: !2363)
!2369 = distinct !DISubprogram(name: "tolower", scope: !2370, file: !2370, line: 207, type: !2315, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2371)
!2370 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2371 = !{!2372}
!2372 = !DILocalVariable(name: "__c", arg: 1, scope: !2369, file: !2370, line: 207, type: !750)
!2373 = !DILocation(line: 0, scope: !2369)
!2374 = !DILocation(line: 209, column: 22, scope: !2369)
!2375 = !DILocation(line: 209, column: 39, scope: !2369)
!2376 = !DILocation(line: 209, column: 38, scope: !2369)
!2377 = !DILocation(line: 209, column: 37, scope: !2369)
!2378 = !DILocation(line: 209, column: 10, scope: !2369)
!2379 = !DILocation(line: 209, column: 3, scope: !2369)
!2380 = distinct !DISubprogram(name: "toupper", scope: !2370, file: !2370, line: 213, type: !2315, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2381 = !{!2382}
!2382 = !DILocalVariable(name: "__c", arg: 1, scope: !2380, file: !2370, line: 213, type: !750)
!2383 = !DILocation(line: 0, scope: !2380)
!2384 = !DILocation(line: 215, column: 22, scope: !2380)
!2385 = !DILocation(line: 215, column: 39, scope: !2380)
!2386 = !DILocation(line: 215, column: 38, scope: !2380)
!2387 = !DILocation(line: 215, column: 37, scope: !2380)
!2388 = !DILocation(line: 215, column: 10, scope: !2380)
!2389 = !DILocation(line: 215, column: 3, scope: !2380)
!2390 = distinct !DISubprogram(name: "atoi", scope: !2391, file: !2391, line: 361, type: !2392, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2394)
!2391 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!750, !755}
!2394 = !{!2395}
!2395 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2390, file: !2391, line: 361, type: !755)
!2396 = !DILocation(line: 0, scope: !2390)
!2397 = !DILocation(line: 363, column: 16, scope: !2390)
!2398 = !DILocation(line: 363, column: 10, scope: !2390)
!2399 = !DILocation(line: 363, column: 3, scope: !2390)
!2400 = distinct !DISubprogram(name: "atol", scope: !2391, file: !2391, line: 366, type: !2401, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2403)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!881, !755}
!2403 = !{!2404}
!2404 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2400, file: !2391, line: 366, type: !755)
!2405 = !DILocation(line: 0, scope: !2400)
!2406 = !DILocation(line: 368, column: 10, scope: !2400)
!2407 = !DILocation(line: 368, column: 3, scope: !2400)
!2408 = distinct !DISubprogram(name: "atoll", scope: !2391, file: !2391, line: 373, type: !2409, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2412)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!2411, !755}
!2411 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2412 = !{!2413}
!2413 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2408, file: !2391, line: 373, type: !755)
!2414 = !DILocation(line: 0, scope: !2408)
!2415 = !DILocation(line: 375, column: 10, scope: !2408)
!2416 = !DILocation(line: 375, column: 3, scope: !2408)
!2417 = distinct !DISubprogram(name: "bsearch", scope: !2418, file: !2418, line: 20, type: !2419, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2418 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!754, !1251, !1251, !1266, !1266, !2421}
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2391, line: 808, baseType: !1255)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432}
!2423 = !DILocalVariable(name: "__key", arg: 1, scope: !2417, file: !2418, line: 20, type: !1251)
!2424 = !DILocalVariable(name: "__base", arg: 2, scope: !2417, file: !2418, line: 20, type: !1251)
!2425 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2417, file: !2418, line: 20, type: !1266)
!2426 = !DILocalVariable(name: "__size", arg: 4, scope: !2417, file: !2418, line: 20, type: !1266)
!2427 = !DILocalVariable(name: "__compar", arg: 5, scope: !2417, file: !2418, line: 21, type: !2421)
!2428 = !DILocalVariable(name: "__l", scope: !2417, file: !2418, line: 23, type: !1266)
!2429 = !DILocalVariable(name: "__u", scope: !2417, file: !2418, line: 23, type: !1266)
!2430 = !DILocalVariable(name: "__idx", scope: !2417, file: !2418, line: 23, type: !1266)
!2431 = !DILocalVariable(name: "__p", scope: !2417, file: !2418, line: 24, type: !1251)
!2432 = !DILocalVariable(name: "__comparison", scope: !2417, file: !2418, line: 25, type: !750)
!2433 = !DILocation(line: 0, scope: !2417)
!2434 = !DILocation(line: 29, column: 3, scope: !2417)
!2435 = !DILocation(line: 27, column: 7, scope: !2417)
!2436 = !DILocation(line: 29, column: 14, scope: !2417)
!2437 = !DILocation(line: 31, column: 20, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2417, file: !2418, line: 30, column: 5)
!2439 = !DILocation(line: 31, column: 27, scope: !2438)
!2440 = !DILocation(line: 32, column: 56, scope: !2438)
!2441 = !DILocation(line: 32, column: 47, scope: !2438)
!2442 = !DILocation(line: 33, column: 22, scope: !2438)
!2443 = !DILocation(line: 34, column: 24, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2438, file: !2418, line: 34, column: 11)
!2445 = !DILocation(line: 34, column: 11, scope: !2438)
!2446 = !DILocation(line: 36, column: 29, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2444, file: !2418, line: 36, column: 16)
!2448 = !DILocation(line: 36, column: 16, scope: !2444)
!2449 = !DILocation(line: 37, column: 14, scope: !2447)
!2450 = distinct !{!2450, !2434, !2451}
!2451 = !DILocation(line: 40, column: 5, scope: !2417)
!2452 = !DILocation(line: 43, column: 1, scope: !2417)
!2453 = distinct !DISubprogram(name: "atof", scope: !2454, file: !2454, line: 25, type: !2455, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2454 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!2457, !755}
!2457 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2453, file: !2454, line: 25, type: !755)
!2460 = !DILocation(line: 0, scope: !2453)
!2461 = !DILocation(line: 27, column: 10, scope: !2453)
!2462 = !DILocation(line: 27, column: 3, scope: !2453)
!2463 = distinct !DISubprogram(name: "strtoimax", scope: !2464, file: !2464, line: 324, type: !2465, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2471)
!2464 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!2467, !2226, !2470, !750}
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2468, line: 101, baseType: !2469)
!2468 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2276, line: 72, baseType: !881)
!2470 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !751)
!2471 = !{!2472, !2473, !2474}
!2472 = !DILocalVariable(name: "nptr", arg: 1, scope: !2463, file: !2464, line: 324, type: !2226)
!2473 = !DILocalVariable(name: "endptr", arg: 2, scope: !2463, file: !2464, line: 324, type: !2470)
!2474 = !DILocalVariable(name: "base", arg: 3, scope: !2463, file: !2464, line: 324, type: !750)
!2475 = !DILocation(line: 0, scope: !2463)
!2476 = !DILocation(line: 327, column: 10, scope: !2463)
!2477 = !DILocation(line: 327, column: 3, scope: !2463)
!2478 = distinct !DISubprogram(name: "strtoumax", scope: !2464, file: !2464, line: 336, type: !2479, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2483)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!2481, !2226, !2470, !750}
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2468, line: 102, baseType: !2482)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2276, line: 73, baseType: !864)
!2483 = !{!2484, !2485, !2486}
!2484 = !DILocalVariable(name: "nptr", arg: 1, scope: !2478, file: !2464, line: 336, type: !2226)
!2485 = !DILocalVariable(name: "endptr", arg: 2, scope: !2478, file: !2464, line: 336, type: !2470)
!2486 = !DILocalVariable(name: "base", arg: 3, scope: !2478, file: !2464, line: 336, type: !750)
!2487 = !DILocation(line: 0, scope: !2478)
!2488 = !DILocation(line: 339, column: 10, scope: !2478)
!2489 = !DILocation(line: 339, column: 3, scope: !2478)
!2490 = distinct !DISubprogram(name: "wcstoimax", scope: !2464, file: !2464, line: 348, type: !2491, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2500)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!2467, !2493, !2497, !750}
!2493 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2494)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2496)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2464, line: 34, baseType: !750)
!2497 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2498)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2500 = !{!2501, !2502, !2503}
!2501 = !DILocalVariable(name: "nptr", arg: 1, scope: !2490, file: !2464, line: 348, type: !2493)
!2502 = !DILocalVariable(name: "endptr", arg: 2, scope: !2490, file: !2464, line: 348, type: !2497)
!2503 = !DILocalVariable(name: "base", arg: 3, scope: !2490, file: !2464, line: 348, type: !750)
!2504 = !DILocation(line: 0, scope: !2490)
!2505 = !DILocation(line: 351, column: 10, scope: !2490)
!2506 = !DILocation(line: 351, column: 3, scope: !2490)
!2507 = distinct !DISubprogram(name: "wcstoumax", scope: !2464, file: !2464, line: 362, type: !2508, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2510)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!2481, !2493, !2497, !750}
!2510 = !{!2511, !2512, !2513}
!2511 = !DILocalVariable(name: "nptr", arg: 1, scope: !2507, file: !2464, line: 362, type: !2493)
!2512 = !DILocalVariable(name: "endptr", arg: 2, scope: !2507, file: !2464, line: 362, type: !2497)
!2513 = !DILocalVariable(name: "base", arg: 3, scope: !2507, file: !2464, line: 362, type: !750)
!2514 = !DILocation(line: 0, scope: !2507)
!2515 = !DILocation(line: 365, column: 10, scope: !2507)
!2516 = !DILocation(line: 365, column: 3, scope: !2507)
!2517 = distinct !DISubprogram(name: "stat", scope: !2518, file: !2518, line: 453, type: !2519, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2556)
!2518 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!750, !755, !2521}
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2523, line: 46, size: 1152, elements: !2524)
!2523 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2524 = !{!2525, !2527, !2529, !2531, !2533, !2535, !2537, !2538, !2539, !2540, !2542, !2544, !2552, !2553, !2554}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2522, file: !2523, line: 48, baseType: !2526, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2276, line: 145, baseType: !864)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2522, file: !2523, line: 53, baseType: !2528, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2276, line: 148, baseType: !864)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2522, file: !2523, line: 61, baseType: !2530, size: 64, offset: 128)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2276, line: 151, baseType: !864)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2522, file: !2523, line: 62, baseType: !2532, size: 32, offset: 192)
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2276, line: 150, baseType: !7)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2522, file: !2523, line: 64, baseType: !2534, size: 32, offset: 224)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2276, line: 146, baseType: !7)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2522, file: !2523, line: 65, baseType: !2536, size: 32, offset: 256)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2276, line: 147, baseType: !7)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2522, file: !2523, line: 67, baseType: !750, size: 32, offset: 288)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2522, file: !2523, line: 69, baseType: !2526, size: 64, offset: 320)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2522, file: !2523, line: 74, baseType: !2275, size: 64, offset: 384)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2522, file: !2523, line: 78, baseType: !2541, size: 64, offset: 448)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2276, line: 174, baseType: !881)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2522, file: !2523, line: 80, baseType: !2543, size: 64, offset: 512)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2276, line: 179, baseType: !881)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2522, file: !2523, line: 91, baseType: !2545, size: 128, offset: 576)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2546, line: 10, size: 128, elements: !2547)
!2546 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2547 = !{!2548, !2550}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2545, file: !2546, line: 12, baseType: !2549, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2276, line: 160, baseType: !881)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2545, file: !2546, line: 16, baseType: !2551, size: 64, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2276, line: 196, baseType: !881)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2522, file: !2523, line: 92, baseType: !2545, size: 128, offset: 704)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2522, file: !2523, line: 93, baseType: !2545, size: 128, offset: 832)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2522, file: !2523, line: 106, baseType: !2555, size: 192, offset: 960)
!2555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2551, size: 192, elements: !981)
!2556 = !{!2557, !2558}
!2557 = !DILocalVariable(name: "__path", arg: 1, scope: !2517, file: !2518, line: 453, type: !755)
!2558 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2517, file: !2518, line: 453, type: !2521)
!2559 = !DILocation(line: 0, scope: !2517)
!2560 = !DILocation(line: 455, column: 10, scope: !2517)
!2561 = !DILocation(line: 455, column: 3, scope: !2517)
!2562 = distinct !DISubprogram(name: "lstat", scope: !2518, file: !2518, line: 460, type: !2519, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2563)
!2563 = !{!2564, !2565}
!2564 = !DILocalVariable(name: "__path", arg: 1, scope: !2562, file: !2518, line: 460, type: !755)
!2565 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2562, file: !2518, line: 460, type: !2521)
!2566 = !DILocation(line: 0, scope: !2562)
!2567 = !DILocation(line: 462, column: 10, scope: !2562)
!2568 = !DILocation(line: 462, column: 3, scope: !2562)
!2569 = distinct !DISubprogram(name: "fstat", scope: !2518, file: !2518, line: 467, type: !2570, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2572)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!750, !750, !2521}
!2572 = !{!2573, !2574}
!2573 = !DILocalVariable(name: "__fd", arg: 1, scope: !2569, file: !2518, line: 467, type: !750)
!2574 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2569, file: !2518, line: 467, type: !2521)
!2575 = !DILocation(line: 0, scope: !2569)
!2576 = !DILocation(line: 469, column: 10, scope: !2569)
!2577 = !DILocation(line: 469, column: 3, scope: !2569)
!2578 = distinct !DISubprogram(name: "fstatat", scope: !2518, file: !2518, line: 474, type: !2579, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2581)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!750, !750, !755, !2521, !750}
!2581 = !{!2582, !2583, !2584, !2585}
!2582 = !DILocalVariable(name: "__fd", arg: 1, scope: !2578, file: !2518, line: 474, type: !750)
!2583 = !DILocalVariable(name: "__filename", arg: 2, scope: !2578, file: !2518, line: 474, type: !755)
!2584 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2578, file: !2518, line: 474, type: !2521)
!2585 = !DILocalVariable(name: "__flag", arg: 4, scope: !2578, file: !2518, line: 474, type: !750)
!2586 = !DILocation(line: 0, scope: !2578)
!2587 = !DILocation(line: 477, column: 10, scope: !2578)
!2588 = !DILocation(line: 477, column: 3, scope: !2578)
!2589 = distinct !DISubprogram(name: "mknod", scope: !2518, file: !2518, line: 483, type: !2590, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2592)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!750, !755, !2532, !2526}
!2592 = !{!2593, !2594, !2595}
!2593 = !DILocalVariable(name: "__path", arg: 1, scope: !2589, file: !2518, line: 483, type: !755)
!2594 = !DILocalVariable(name: "__mode", arg: 2, scope: !2589, file: !2518, line: 483, type: !2532)
!2595 = !DILocalVariable(name: "__dev", arg: 3, scope: !2589, file: !2518, line: 483, type: !2526)
!2596 = !DILocation(line: 0, scope: !2589)
!2597 = !DILocation(line: 485, column: 10, scope: !2589)
!2598 = !DILocation(line: 485, column: 3, scope: !2589)
!2599 = distinct !DISubprogram(name: "mknodat", scope: !2518, file: !2518, line: 491, type: !2600, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2602)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!750, !750, !755, !2532, !2526}
!2602 = !{!2603, !2604, !2605, !2606}
!2603 = !DILocalVariable(name: "__fd", arg: 1, scope: !2599, file: !2518, line: 491, type: !750)
!2604 = !DILocalVariable(name: "__path", arg: 2, scope: !2599, file: !2518, line: 491, type: !755)
!2605 = !DILocalVariable(name: "__mode", arg: 3, scope: !2599, file: !2518, line: 491, type: !2532)
!2606 = !DILocalVariable(name: "__dev", arg: 4, scope: !2599, file: !2518, line: 491, type: !2526)
!2607 = !DILocation(line: 0, scope: !2599)
!2608 = !DILocation(line: 494, column: 10, scope: !2599)
!2609 = !DILocation(line: 494, column: 3, scope: !2599)
!2610 = distinct !DISubprogram(name: "stat64", scope: !2518, file: !2518, line: 502, type: !2611, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2633)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!750, !755, !2613}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2523, line: 119, size: 1152, elements: !2615)
!2615 = !{!2616, !2617, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2629, !2630, !2631, !2632}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2614, file: !2523, line: 121, baseType: !2526, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2614, file: !2523, line: 123, baseType: !2618, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2276, line: 149, baseType: !864)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2614, file: !2523, line: 124, baseType: !2530, size: 64, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2614, file: !2523, line: 125, baseType: !2532, size: 32, offset: 192)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2614, file: !2523, line: 132, baseType: !2534, size: 32, offset: 224)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2614, file: !2523, line: 133, baseType: !2536, size: 32, offset: 256)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2614, file: !2523, line: 135, baseType: !750, size: 32, offset: 288)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2614, file: !2523, line: 136, baseType: !2526, size: 64, offset: 320)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2614, file: !2523, line: 137, baseType: !2275, size: 64, offset: 384)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2614, file: !2523, line: 143, baseType: !2541, size: 64, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2614, file: !2523, line: 144, baseType: !2628, size: 64, offset: 512)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2276, line: 180, baseType: !881)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2614, file: !2523, line: 152, baseType: !2545, size: 128, offset: 576)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2614, file: !2523, line: 153, baseType: !2545, size: 128, offset: 704)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2614, file: !2523, line: 154, baseType: !2545, size: 128, offset: 832)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2614, file: !2523, line: 164, baseType: !2555, size: 192, offset: 960)
!2633 = !{!2634, !2635}
!2634 = !DILocalVariable(name: "__path", arg: 1, scope: !2610, file: !2518, line: 502, type: !755)
!2635 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2610, file: !2518, line: 502, type: !2613)
!2636 = !DILocation(line: 0, scope: !2610)
!2637 = !DILocation(line: 504, column: 10, scope: !2610)
!2638 = !DILocation(line: 504, column: 3, scope: !2610)
!2639 = distinct !DISubprogram(name: "lstat64", scope: !2518, file: !2518, line: 509, type: !2611, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2640)
!2640 = !{!2641, !2642}
!2641 = !DILocalVariable(name: "__path", arg: 1, scope: !2639, file: !2518, line: 509, type: !755)
!2642 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2639, file: !2518, line: 509, type: !2613)
!2643 = !DILocation(line: 0, scope: !2639)
!2644 = !DILocation(line: 511, column: 10, scope: !2639)
!2645 = !DILocation(line: 511, column: 3, scope: !2639)
!2646 = distinct !DISubprogram(name: "fstat64", scope: !2518, file: !2518, line: 516, type: !2647, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2649)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!750, !750, !2613}
!2649 = !{!2650, !2651}
!2650 = !DILocalVariable(name: "__fd", arg: 1, scope: !2646, file: !2518, line: 516, type: !750)
!2651 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2646, file: !2518, line: 516, type: !2613)
!2652 = !DILocation(line: 0, scope: !2646)
!2653 = !DILocation(line: 518, column: 10, scope: !2646)
!2654 = !DILocation(line: 518, column: 3, scope: !2646)
!2655 = distinct !DISubprogram(name: "fstatat64", scope: !2518, file: !2518, line: 523, type: !2656, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!750, !750, !755, !2613, !750}
!2658 = !{!2659, !2660, !2661, !2662}
!2659 = !DILocalVariable(name: "__fd", arg: 1, scope: !2655, file: !2518, line: 523, type: !750)
!2660 = !DILocalVariable(name: "__filename", arg: 2, scope: !2655, file: !2518, line: 523, type: !755)
!2661 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2655, file: !2518, line: 523, type: !2613)
!2662 = !DILocalVariable(name: "__flag", arg: 4, scope: !2655, file: !2518, line: 523, type: !750)
!2663 = !DILocation(line: 0, scope: !2655)
!2664 = !DILocation(line: 526, column: 10, scope: !2655)
!2665 = !DILocation(line: 526, column: 3, scope: !2655)
!2666 = distinct !DISubprogram(name: "print_partial_schedule", scope: !3, file: !3, line: 2497, type: !2667, scopeLine: 2498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2669)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{null, !2013, !2249}
!2669 = !{!2670, !2671, !2672, !2673}
!2670 = !DILocalVariable(name: "ps", arg: 1, scope: !2666, file: !3, line: 2497, type: !2013)
!2671 = !DILocalVariable(name: "dump", arg: 2, scope: !2666, file: !3, line: 2497, type: !2249)
!2672 = !DILocalVariable(name: "i", scope: !2666, file: !3, line: 2499, type: !750)
!2673 = !DILocalVariable(name: "ps_i", scope: !2674, file: !3, line: 2503, type: !2021)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 2502, column: 5)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 2501, column: 3)
!2676 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 2501, column: 3)
!2677 = !DILocation(line: 0, scope: !2666)
!2678 = !DILocation(line: 0, scope: !2675)
!2679 = !DILocation(line: 0, scope: !2674)
!2680 = !DILocation(line: 2501, column: 8, scope: !2676)
!2681 = !DILocation(line: 0, scope: !2676)
!2682 = !DILocation(line: 2501, column: 23, scope: !2675)
!2683 = !DILocation(line: 2501, column: 17, scope: !2675)
!2684 = !DILocation(line: 2501, column: 3, scope: !2676)
!2685 = !DILocation(line: 2503, column: 30, scope: !2674)
!2686 = !DILocation(line: 2503, column: 26, scope: !2674)
!2687 = !DILocation(line: 2505, column: 7, scope: !2674)
!2688 = !DILocation(line: 2506, column: 7, scope: !2674)
!2689 = !DILocation(line: 2509, column: 6, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 2507, column: 2)
!2691 = !DILocation(line: 2508, column: 4, scope: !2690)
!2692 = !DILocation(line: 2510, column: 17, scope: !2690)
!2693 = distinct !{!2693, !2688, !2694}
!2694 = !DILocation(line: 2511, column: 2, scope: !2674)
!2695 = !DILocation(line: 2501, column: 28, scope: !2675)
!2696 = !DILocation(line: 2501, column: 3, scope: !2675)
!2697 = distinct !{!2697, !2684, !2698}
!2698 = !DILocation(line: 2512, column: 5, scope: !2676)
!2699 = !DILocation(line: 2513, column: 1, scope: !2666)
!2700 = distinct !DISubprogram(name: "gate_handle_sms", scope: !3, file: !3, line: 2854, type: !2201, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!2701 = !DILocation(line: 2856, column: 11, scope: !2700)
!2702 = !DILocation(line: 2856, column: 20, scope: !2700)
!2703 = !DILocation(line: 2856, column: 24, scope: !2700)
!2704 = !DILocation(line: 2856, column: 10, scope: !2700)
!2705 = !DILocation(line: 2856, column: 3, scope: !2700)
!2706 = distinct !DISubprogram(name: "rest_of_handle_sms", scope: !3, file: !3, line: 2863, type: !2205, scopeLine: 2864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2707)
!2707 = !{!2708}
!2708 = !DILocalVariable(name: "bb", scope: !2706, file: !3, line: 2866, type: !763)
!2709 = !DILocation(line: 2869, column: 3, scope: !2706)
!2710 = !DILocation(line: 2870, column: 3, scope: !2706)
!2711 = !DILocation(line: 2873, column: 15, scope: !2706)
!2712 = !DILocation(line: 2873, column: 13, scope: !2706)
!2713 = !DILocation(line: 2876, column: 3, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 2876, column: 3)
!2715 = !DILocation(line: 0, scope: !2714)
!2716 = !DILocation(line: 2876, column: 3, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 2876, column: 3)
!2718 = !DILocation(line: 0, scope: !2706)
!2719 = !DILocation(line: 2877, column: 13, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 2877, column: 9)
!2721 = !DILocation(line: 2877, column: 21, scope: !2720)
!2722 = !DILocation(line: 2877, column: 9, scope: !2717)
!2723 = !DILocation(line: 2878, column: 11, scope: !2720)
!2724 = !DILocation(line: 2878, column: 15, scope: !2720)
!2725 = !DILocation(line: 2878, column: 7, scope: !2720)
!2726 = distinct !{!2726, !2713, !2727}
!2727 = !DILocation(line: 2878, column: 21, scope: !2714)
!2728 = !DILocation(line: 2879, column: 3, scope: !2706)
!2729 = !DILocation(line: 2880, column: 3, scope: !2706)
!2730 = !DILocation(line: 2882, column: 3, scope: !2706)
!2731 = distinct !DISubprogram(name: "sms_schedule", scope: !3, file: !3, line: 884, type: !2108, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2732)
!2732 = !{!2733, !2734, !2735, !2736, !2737, !2738, !2739, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2754, !2758, !2759, !2760, !2763, !2767, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2781, !2784, !2787, !2790}
!2733 = !DILocalVariable(name: "insn", scope: !2731, file: !3, line: 886, type: !795)
!2734 = !DILocalVariable(name: "g_arr", scope: !2731, file: !3, line: 887, type: !757)
!2735 = !DILocalVariable(name: "g", scope: !2731, file: !3, line: 887, type: !758)
!2736 = !DILocalVariable(name: "node_order", scope: !2731, file: !3, line: 888, type: !2012)
!2737 = !DILocalVariable(name: "maxii", scope: !2731, file: !3, line: 889, type: !750)
!2738 = !DILocalVariable(name: "max_asap", scope: !2731, file: !3, line: 889, type: !750)
!2739 = !DILocalVariable(name: "li", scope: !2731, file: !3, line: 890, type: !2740)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !142, line: 515, baseType: !2741)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 508, size: 128, elements: !2742)
!2742 = !{!2743, !2744}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !2741, file: !142, line: 511, baseType: !2033, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !2741, file: !142, line: 514, baseType: !7, size: 32, offset: 64)
!2745 = !DILocalVariable(name: "ps", scope: !2731, file: !3, line: 891, type: !2013)
!2746 = !DILocalVariable(name: "bb", scope: !2731, file: !3, line: 892, type: !763)
!2747 = !DILocalVariable(name: "loop", scope: !2731, file: !3, line: 893, type: !1376)
!2748 = !DILocalVariable(name: "condition_bb", scope: !2731, file: !3, line: 894, type: !763)
!2749 = !DILocalVariable(name: "latch_edge", scope: !2731, file: !3, line: 895, type: !781)
!2750 = !DILocalVariable(name: "trip_count", scope: !2731, file: !3, line: 896, type: !1923)
!2751 = !DILocalVariable(name: "temp", scope: !2752, file: !3, line: 909, type: !750)
!2752 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 908, column: 5)
!2753 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 907, column: 7)
!2754 = !DILocalVariable(name: "head", scope: !2755, file: !3, line: 936, type: !795)
!2755 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 935, column: 5)
!2756 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 934, column: 3)
!2757 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 934, column: 3)
!2758 = !DILocalVariable(name: "tail", scope: !2755, file: !3, line: 936, type: !795)
!2759 = !DILocalVariable(name: "count_reg", scope: !2755, file: !3, line: 937, type: !795)
!2760 = !DILocalVariable(name: "insn", scope: !2761, file: !3, line: 950, type: !795)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 949, column: 7)
!2762 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 948, column: 11)
!2763 = !DILocalVariable(name: "set", scope: !2764, file: !3, line: 1019, type: !795)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 1018, column: 7)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 1017, column: 6)
!2766 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 1017, column: 6)
!2767 = !DILocalVariable(name: "head", scope: !2768, file: !3, line: 1073, type: !795)
!2768 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 1072, column: 5)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 1071, column: 3)
!2770 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1071, column: 3)
!2771 = !DILocalVariable(name: "tail", scope: !2768, file: !3, line: 1073, type: !795)
!2772 = !DILocalVariable(name: "count_reg", scope: !2768, file: !3, line: 1074, type: !795)
!2773 = !DILocalVariable(name: "count_init", scope: !2768, file: !3, line: 1074, type: !795)
!2774 = !DILocalVariable(name: "mii", scope: !2768, file: !3, line: 1075, type: !750)
!2775 = !DILocalVariable(name: "rec_mii", scope: !2768, file: !3, line: 1075, type: !750)
!2776 = !DILocalVariable(name: "stage_count", scope: !2768, file: !3, line: 1076, type: !7)
!2777 = !DILocalVariable(name: "loop_count", scope: !2768, file: !3, line: 1077, type: !881)
!2778 = !DILocalVariable(name: "insn", scope: !2779, file: !3, line: 1084, type: !795)
!2779 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 1083, column: 7)
!2780 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1082, column: 11)
!2781 = !DILocalVariable(name: "pre_header", scope: !2782, file: !3, line: 1127, type: !763)
!2782 = distinct !DILexicalBlock(scope: !2783, file: !3, line: 1126, column: 2)
!2783 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1125, column: 11)
!2784 = !DILocalVariable(name: "reg_move_replaces", scope: !2785, file: !3, line: 1184, type: !2063)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 1183, column: 2)
!2786 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1167, column: 11)
!2787 = !DILocalVariable(name: "comp_rtx", scope: !2788, file: !3, line: 1214, type: !795)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 1213, column: 13)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 1212, column: 8)
!2790 = !DILocalVariable(name: "prob", scope: !2788, file: !3, line: 1216, type: !7)
!2791 = !DILocation(line: 889, column: 3, scope: !2731)
!2792 = !DILocation(line: 890, column: 3, scope: !2731)
!2793 = !DILocation(line: 0, scope: !2731)
!2794 = !DILocation(line: 893, column: 3, scope: !2731)
!2795 = !DILocation(line: 898, column: 3, scope: !2731)
!2796 = !DILocation(line: 900, column: 7, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 900, column: 7)
!2798 = !DILocation(line: 900, column: 26, scope: !2797)
!2799 = !DILocation(line: 900, column: 7, scope: !2731)
!2800 = !DILocation(line: 902, column: 7, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 901, column: 5)
!2802 = !DILocation(line: 903, column: 7, scope: !2801)
!2803 = !DILocation(line: 907, column: 21, scope: !2753)
!2804 = !DILocation(line: 907, column: 7, scope: !2753)
!2805 = !DILocation(line: 907, column: 7, scope: !2731)
!2806 = !DILocation(line: 909, column: 18, scope: !2752)
!2807 = !DILocation(line: 0, scope: !2752)
!2808 = !DILocation(line: 911, column: 24, scope: !2752)
!2809 = !DILocation(line: 912, column: 20, scope: !2752)
!2810 = !DILocation(line: 912, column: 18, scope: !2752)
!2811 = !DILocation(line: 913, column: 24, scope: !2752)
!2812 = !DILocation(line: 914, column: 5, scope: !2752)
!2813 = !DILocation(line: 916, column: 16, scope: !2753)
!2814 = !DILocation(line: 919, column: 3, scope: !2731)
!2815 = !DILocation(line: 920, column: 3, scope: !2731)
!2816 = !DILocation(line: 924, column: 11, scope: !2731)
!2817 = !DILocation(line: 926, column: 7, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 926, column: 7)
!2819 = !DILocation(line: 926, column: 7, scope: !2731)
!2820 = !DILocation(line: 928, column: 5, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 927, column: 3)
!2822 = !DILocation(line: 929, column: 14, scope: !2821)
!2823 = !DILocation(line: 929, column: 5, scope: !2821)
!2824 = !DILocation(line: 930, column: 3, scope: !2821)
!2825 = !DILocation(line: 934, column: 3, scope: !2757)
!2826 = !DILocation(line: 0, scope: !2755)
!2827 = !DILocation(line: 896, column: 13, scope: !2731)
!2828 = !DILocation(line: 892, column: 15, scope: !2731)
!2829 = !DILocation(line: 934, column: 3, scope: !2756)
!2830 = !DILocation(line: 936, column: 7, scope: !2755)
!2831 = !DILocation(line: 940, column: 11, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 940, column: 11)
!2833 = !DILocation(line: 940, column: 36, scope: !2832)
!2834 = !DILocation(line: 940, column: 11, scope: !2755)
!2835 = !DILocation(line: 942, column: 15, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 941, column: 9)
!2837 = !DILocation(line: 943, column: 13, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 942, column: 15)
!2839 = !DILocation(line: 948, column: 11, scope: !2755)
!2840 = !DILocation(line: 950, column: 21, scope: !2761)
!2841 = !DILocation(line: 0, scope: !2761)
!2842 = !DILocation(line: 953, column: 25, scope: !2761)
!2843 = !DILocation(line: 953, column: 30, scope: !2761)
!2844 = !DILocation(line: 953, column: 48, scope: !2761)
!2845 = !DILocation(line: 952, column: 10, scope: !2761)
!2846 = !DILocation(line: 955, column: 7, scope: !2761)
!2847 = !DILocation(line: 957, column: 27, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 957, column: 11)
!2849 = !DILocation(line: 957, column: 13, scope: !2848)
!2850 = !DILocation(line: 957, column: 11, scope: !2755)
!2851 = !DILocation(line: 960, column: 36, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 960, column: 11)
!2853 = !DILocation(line: 960, column: 13, scope: !2852)
!2854 = !DILocation(line: 960, column: 11, scope: !2755)
!2855 = !DILocation(line: 962, column: 13, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 962, column: 13)
!2857 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 961, column: 7)
!2858 = !DILocation(line: 962, column: 13, scope: !2857)
!2859 = !DILocation(line: 963, column: 11, scope: !2856)
!2860 = !DILocation(line: 967, column: 12, scope: !2755)
!2861 = !DILocation(line: 967, column: 18, scope: !2755)
!2862 = !DILocation(line: 969, column: 7, scope: !2755)
!2863 = !DILocation(line: 970, column: 37, scope: !2755)
!2864 = !DILocation(line: 970, column: 20, scope: !2755)
!2865 = !DILocation(line: 971, column: 7, scope: !2755)
!2866 = !DILocation(line: 972, column: 24, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 972, column: 11)
!2868 = !DILocation(line: 972, column: 11, scope: !2867)
!2869 = !DILocation(line: 972, column: 31, scope: !2867)
!2870 = !DILocation(line: 972, column: 11, scope: !2755)
!2871 = !DILocation(line: 973, column: 27, scope: !2867)
!2872 = !DILocation(line: 973, column: 48, scope: !2867)
!2873 = !DILocation(line: 973, column: 35, scope: !2867)
!2874 = !DILocation(line: 973, column: 55, scope: !2867)
!2875 = !DILocation(line: 973, column: 33, scope: !2867)
!2876 = !DILocation(line: 973, column: 2, scope: !2867)
!2877 = !DILocation(line: 977, column: 24, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 977, column: 12)
!2879 = !DILocation(line: 977, column: 12, scope: !2878)
!2880 = !DILocation(line: 978, column: 11, scope: !2878)
!2881 = !DILocation(line: 978, column: 48, scope: !2878)
!2882 = !DILocation(line: 978, column: 35, scope: !2878)
!2883 = !DILocation(line: 978, column: 55, scope: !2878)
!2884 = !DILocation(line: 978, column: 63, scope: !2878)
!2885 = !DILocation(line: 978, column: 61, scope: !2878)
!2886 = !DILocation(line: 978, column: 33, scope: !2878)
!2887 = !DILocation(line: 977, column: 12, scope: !2755)
!2888 = !DILocation(line: 980, column: 8, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 980, column: 8)
!2890 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 979, column: 2)
!2891 = !DILocation(line: 980, column: 8, scope: !2890)
!2892 = !DILocation(line: 983, column: 21, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 981, column: 6)
!2894 = !DILocation(line: 983, column: 10, scope: !2893)
!2895 = !DILocation(line: 983, column: 39, scope: !2893)
!2896 = !DILocation(line: 983, column: 28, scope: !2893)
!2897 = !DILocation(line: 982, column: 8, scope: !2893)
!2898 = !DILocation(line: 984, column: 17, scope: !2893)
!2899 = !DILocation(line: 984, column: 8, scope: !2893)
!2900 = !DILocation(line: 985, column: 12, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 985, column: 12)
!2902 = !DILocation(line: 985, column: 28, scope: !2901)
!2903 = !DILocation(line: 985, column: 25, scope: !2901)
!2904 = !DILocation(line: 987, column: 20, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 986, column: 7)
!2906 = !DILocation(line: 987, column: 11, scope: !2905)
!2907 = !DILocation(line: 988, column: 20, scope: !2905)
!2908 = !DILocation(line: 989, column: 41, scope: !2905)
!2909 = !DILocation(line: 988, column: 11, scope: !2905)
!2910 = !DILocation(line: 990, column: 20, scope: !2905)
!2911 = !DILocation(line: 990, column: 11, scope: !2905)
!2912 = !DILocation(line: 991, column: 28, scope: !2905)
!2913 = !DILocation(line: 991, column: 19, scope: !2905)
!2914 = !DILocation(line: 992, column: 28, scope: !2905)
!2915 = !DILocation(line: 992, column: 19, scope: !2905)
!2916 = !DILocation(line: 994, column: 28, scope: !2905)
!2917 = !DILocation(line: 994, column: 19, scope: !2905)
!2918 = !DILocation(line: 995, column: 20, scope: !2905)
!2919 = !DILocation(line: 995, column: 11, scope: !2905)
!2920 = !DILocation(line: 996, column: 20, scope: !2905)
!2921 = !DILocation(line: 997, column: 34, scope: !2905)
!2922 = !DILocation(line: 997, column: 48, scope: !2905)
!2923 = !DILocation(line: 996, column: 11, scope: !2905)
!2924 = !DILocation(line: 998, column: 20, scope: !2905)
!2925 = !DILocation(line: 998, column: 11, scope: !2905)
!2926 = !DILocation(line: 999, column: 7, scope: !2905)
!2927 = !DILocation(line: 1005, column: 47, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 1005, column: 12)
!2929 = !DILocation(line: 1005, column: 53, scope: !2928)
!2930 = !DILocation(line: 1005, column: 26, scope: !2928)
!2931 = !DILocation(line: 1007, column: 13, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1007, column: 13)
!2933 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 1006, column: 7)
!2934 = !DILocation(line: 1007, column: 13, scope: !2933)
!2935 = !DILocation(line: 1008, column: 11, scope: !2932)
!2936 = !DILocation(line: 1063, column: 5, scope: !2756)
!2937 = distinct !{!2937, !2825, !2938}
!2938 = !DILocation(line: 1063, column: 5, scope: !2757)
!2939 = !DILocation(line: 1064, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1064, column: 7)
!2941 = !DILocation(line: 1064, column: 7, scope: !2731)
!2942 = !DILocation(line: 1066, column: 5, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 1065, column: 3)
!2944 = !DILocation(line: 1067, column: 14, scope: !2943)
!2945 = !DILocation(line: 1067, column: 5, scope: !2943)
!2946 = !DILocation(line: 1068, column: 3, scope: !2943)
!2947 = !DILocation(line: 1071, column: 3, scope: !2770)
!2948 = !DILocation(line: 0, scope: !2768)
!2949 = !DILocation(line: 0, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 1105, column: 6)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 1104, column: 8)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 1100, column: 2)
!2953 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1099, column: 11)
!2954 = !DILocation(line: 1071, column: 3, scope: !2769)
!2955 = !DILocation(line: 1073, column: 7, scope: !2768)
!2956 = !DILocation(line: 1079, column: 30, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1079, column: 11)
!2958 = !DILocation(line: 1079, column: 18, scope: !2957)
!2959 = !DILocation(line: 1079, column: 16, scope: !2957)
!2960 = !DILocation(line: 1079, column: 11, scope: !2768)
!2961 = !DILocation(line: 1082, column: 11, scope: !2780)
!2962 = !DILocation(line: 1082, column: 11, scope: !2768)
!2963 = !DILocation(line: 1084, column: 21, scope: !2779)
!2964 = !DILocation(line: 0, scope: !2779)
!2965 = !DILocation(line: 1087, column: 30, scope: !2779)
!2966 = !DILocation(line: 1087, column: 48, scope: !2779)
!2967 = !DILocation(line: 1086, column: 10, scope: !2779)
!2968 = !DILocation(line: 1089, column: 21, scope: !2779)
!2969 = !DILocation(line: 1089, column: 10, scope: !2779)
!2970 = !DILocation(line: 1092, column: 26, scope: !2768)
!2971 = !DILocation(line: 1090, column: 7, scope: !2779)
!2972 = !DILocation(line: 1092, column: 32, scope: !2768)
!2973 = !DILocation(line: 1092, column: 7, scope: !2768)
!2974 = !DILocation(line: 1094, column: 37, scope: !2768)
!2975 = !DILocation(line: 1094, column: 20, scope: !2768)
!2976 = !DILocation(line: 1095, column: 7, scope: !2768)
!2977 = !DILocation(line: 1096, column: 24, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1096, column: 11)
!2979 = !DILocation(line: 1096, column: 11, scope: !2978)
!2980 = !DILocation(line: 1096, column: 31, scope: !2978)
!2981 = !DILocation(line: 1096, column: 11, scope: !2768)
!2982 = !DILocation(line: 1097, column: 27, scope: !2978)
!2983 = !DILocation(line: 1097, column: 48, scope: !2978)
!2984 = !DILocation(line: 1097, column: 35, scope: !2978)
!2985 = !DILocation(line: 1097, column: 55, scope: !2978)
!2986 = !DILocation(line: 1097, column: 33, scope: !2978)
!2987 = !DILocation(line: 1097, column: 2, scope: !2978)
!2988 = !DILocation(line: 1099, column: 11, scope: !2953)
!2989 = !DILocation(line: 1099, column: 11, scope: !2768)
!2990 = !DILocation(line: 1102, column: 17, scope: !2952)
!2991 = !DILocation(line: 1102, column: 6, scope: !2952)
!2992 = !DILocation(line: 1102, column: 35, scope: !2952)
!2993 = !DILocation(line: 1102, column: 24, scope: !2952)
!2994 = !DILocation(line: 1101, column: 4, scope: !2952)
!2995 = !DILocation(line: 1103, column: 13, scope: !2952)
!2996 = !DILocation(line: 1103, column: 4, scope: !2952)
!2997 = !DILocation(line: 1104, column: 8, scope: !2951)
!2998 = !DILocation(line: 1104, column: 24, scope: !2951)
!2999 = !DILocation(line: 1104, column: 21, scope: !2951)
!3000 = !DILocation(line: 1106, column: 17, scope: !2950)
!3001 = !DILocation(line: 1106, column: 8, scope: !2950)
!3002 = !DILocation(line: 1107, column: 17, scope: !2950)
!3003 = !DILocation(line: 1108, column: 39, scope: !2950)
!3004 = !DILocation(line: 1107, column: 8, scope: !2950)
!3005 = !DILocation(line: 1109, column: 17, scope: !2950)
!3006 = !DILocation(line: 1109, column: 8, scope: !2950)
!3007 = !DILocation(line: 1110, column: 17, scope: !2950)
!3008 = !DILocation(line: 1110, column: 8, scope: !2950)
!3009 = !DILocation(line: 1111, column: 17, scope: !2950)
!3010 = !DILocation(line: 1112, column: 35, scope: !2950)
!3011 = !DILocation(line: 1112, column: 49, scope: !2950)
!3012 = !DILocation(line: 1111, column: 8, scope: !2950)
!3013 = !DILocation(line: 1113, column: 17, scope: !2950)
!3014 = !DILocation(line: 1113, column: 8, scope: !2950)
!3015 = !DILocation(line: 1114, column: 6, scope: !2950)
!3016 = !DILocation(line: 1115, column: 13, scope: !2952)
!3017 = !DILocation(line: 1115, column: 4, scope: !2952)
!3018 = !DILocation(line: 1116, column: 13, scope: !2952)
!3019 = !DILocation(line: 1116, column: 49, scope: !2952)
!3020 = !DILocation(line: 1116, column: 4, scope: !2952)
!3021 = !DILocation(line: 1117, column: 20, scope: !2952)
!3022 = !DILocation(line: 1117, column: 56, scope: !2952)
!3023 = !DILocation(line: 1117, column: 11, scope: !2952)
!3024 = !DILocation(line: 1118, column: 20, scope: !2952)
!3025 = !DILocation(line: 1118, column: 57, scope: !2952)
!3026 = !DILocation(line: 1118, column: 11, scope: !2952)
!3027 = !DILocation(line: 1119, column: 2, scope: !2952)
!3028 = !DILocation(line: 1125, column: 45, scope: !2783)
!3029 = !DILocation(line: 1125, column: 51, scope: !2783)
!3030 = !DILocation(line: 1125, column: 24, scope: !2783)
!3031 = !DILocation(line: 1133, column: 7, scope: !2768)
!3032 = !DILocation(line: 1143, column: 20, scope: !2768)
!3033 = !DILocation(line: 1146, column: 17, scope: !2768)
!3034 = !DILocation(line: 1147, column: 13, scope: !2768)
!3035 = !DILocation(line: 1148, column: 15, scope: !2768)
!3036 = !DILocation(line: 1150, column: 11, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1150, column: 11)
!3038 = !DILocation(line: 1150, column: 11, scope: !2768)
!3039 = !DILocation(line: 1151, column: 2, scope: !3037)
!3040 = !DILocation(line: 1156, column: 7, scope: !2768)
!3041 = !DILocation(line: 1158, column: 12, scope: !2768)
!3042 = !DILocation(line: 1160, column: 11, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 1160, column: 11)
!3044 = !DILocation(line: 1160, column: 11, scope: !2768)
!3045 = !DILocation(line: 1161, column: 16, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 1160, column: 14)
!3047 = !DILocation(line: 1162, column: 9, scope: !3046)
!3048 = !DILocation(line: 1167, column: 23, scope: !2786)
!3049 = !DILocation(line: 1168, column: 4, scope: !2786)
!3050 = !DILocation(line: 1169, column: 8, scope: !2786)
!3051 = !DILocation(line: 1169, column: 52, scope: !2786)
!3052 = !DILocation(line: 1169, column: 49, scope: !2786)
!3053 = !DILocation(line: 1169, column: 34, scope: !2786)
!3054 = !DILocation(line: 1171, column: 8, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1171, column: 8)
!3056 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 1170, column: 2)
!3057 = !DILocation(line: 1171, column: 8, scope: !3056)
!3058 = !DILocation(line: 1173, column: 8, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1172, column: 6)
!3060 = !DILocation(line: 1174, column: 17, scope: !3059)
!3061 = !DILocation(line: 1174, column: 8, scope: !3059)
!3062 = !DILocation(line: 1175, column: 17, scope: !3059)
!3063 = !DILocation(line: 1175, column: 8, scope: !3059)
!3064 = !DILocation(line: 1176, column: 17, scope: !3059)
!3065 = !DILocation(line: 1176, column: 8, scope: !3059)
!3066 = !DILocation(line: 1177, column: 17, scope: !3059)
!3067 = !DILocation(line: 1177, column: 8, scope: !3059)
!3068 = !DILocation(line: 1178, column: 17, scope: !3059)
!3069 = !DILocation(line: 1178, column: 8, scope: !3059)
!3070 = !DILocation(line: 1179, column: 6, scope: !3059)
!3071 = !DILocation(line: 1186, column: 8, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 1186, column: 8)
!3073 = !DILocation(line: 1186, column: 8, scope: !2785)
!3074 = !DILocation(line: 1189, column: 53, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 1187, column: 6)
!3076 = !DILocation(line: 1188, column: 8, scope: !3075)
!3077 = !DILocation(line: 1191, column: 36, scope: !3075)
!3078 = !DILocation(line: 1191, column: 8, scope: !3075)
!3079 = !DILocation(line: 1192, column: 17, scope: !3075)
!3080 = !DILocation(line: 1194, column: 13, scope: !3075)
!3081 = !DILocation(line: 1194, column: 29, scope: !3075)
!3082 = !DILocation(line: 1194, column: 35, scope: !3075)
!3083 = !DILocation(line: 1194, column: 53, scope: !3075)
!3084 = !DILocation(line: 1192, column: 8, scope: !3075)
!3085 = !DILocation(line: 1195, column: 6, scope: !3075)
!3086 = !DILocation(line: 1205, column: 4, scope: !2785)
!3087 = !DILocation(line: 1206, column: 33, scope: !2785)
!3088 = !DILocation(line: 1206, column: 4, scope: !2785)
!3089 = !DILocation(line: 1207, column: 4, scope: !2785)
!3090 = !DILocation(line: 1209, column: 16, scope: !2785)
!3091 = !DILocation(line: 1209, column: 4, scope: !2785)
!3092 = !DILocation(line: 1230, column: 37, scope: !2785)
!3093 = !DILocation(line: 1230, column: 53, scope: !2785)
!3094 = !DILocation(line: 1230, column: 4, scope: !2785)
!3095 = !DILocation(line: 1234, column: 10, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 1234, column: 8)
!3097 = !DILocation(line: 1234, column: 8, scope: !2785)
!3098 = !DILocation(line: 1235, column: 9, scope: !3096)
!3099 = !DILocation(line: 1235, column: 13, scope: !3096)
!3100 = !DILocation(line: 1235, column: 19, scope: !3096)
!3101 = !DILocation(line: 1235, column: 6, scope: !3096)
!3102 = !DILocation(line: 1237, column: 24, scope: !2785)
!3103 = !DILocation(line: 1237, column: 4, scope: !2785)
!3104 = !DILocation(line: 1239, column: 24, scope: !2785)
!3105 = !DILocation(line: 0, scope: !2785)
!3106 = !DILocation(line: 1240, column: 8, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 1240, column: 8)
!3108 = !DILocation(line: 1240, column: 8, scope: !2785)
!3109 = !DILocation(line: 1241, column: 45, scope: !3107)
!3110 = !DILocation(line: 1241, column: 6, scope: !3107)
!3111 = !DILocation(line: 1243, column: 39, scope: !2785)
!3112 = !DILocation(line: 1243, column: 11, scope: !2785)
!3113 = !DILocation(line: 1245, column: 4, scope: !2785)
!3114 = !DILocation(line: 1248, column: 7, scope: !2768)
!3115 = !DILocation(line: 1249, column: 13, scope: !2768)
!3116 = !DILocation(line: 1249, column: 7, scope: !2768)
!3117 = !DILocation(line: 1250, column: 7, scope: !2768)
!3118 = !DILocation(line: 1251, column: 7, scope: !2768)
!3119 = !DILocation(line: 1252, column: 5, scope: !2769)
!3120 = distinct !{!3120, !2947, !3121}
!3121 = !DILocation(line: 1252, column: 5, scope: !2770)
!3122 = !DILocation(line: 1254, column: 3, scope: !2731)
!3123 = !DILocation(line: 1257, column: 3, scope: !2731)
!3124 = !DILocation(line: 1258, column: 3, scope: !2731)
!3125 = !DILocation(line: 1259, column: 1, scope: !2731)
!3126 = distinct !DISubprogram(name: "number_of_loops", scope: !142, file: !142, line: 459, type: !2205, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!3127 = !DILocation(line: 461, column: 8, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3126, file: !142, line: 461, column: 7)
!3129 = !DILocation(line: 461, column: 7, scope: !3126)
!3130 = !DILocation(line: 464, column: 10, scope: !3126)
!3131 = !DILocation(line: 464, column: 3, scope: !3126)
!3132 = !DILocation(line: 0, scope: !3126)
!3133 = !DILocation(line: 465, column: 1, scope: !3126)
!3134 = distinct !DISubprogram(name: "setup_sched_infos", scope: !3, file: !3, line: 863, type: !2108, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!3135 = !DILocation(line: 865, column: 3, scope: !3134)
!3136 = !DILocation(line: 867, column: 39, scope: !3134)
!3137 = !DILocation(line: 868, column: 21, scope: !3134)
!3138 = !DILocation(line: 870, column: 19, scope: !3134)
!3139 = !DILocation(line: 871, column: 22, scope: !3134)
!3140 = !DILocation(line: 872, column: 1, scope: !3134)
!3141 = distinct !DISubprogram(name: "fel_init", scope: !142, file: !142, line: 535, type: !3142, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3146)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{null, !3144, !3145, !7}
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!3146 = !{!3147, !3148, !3149, !3150, !3151, !3152}
!3147 = !DILocalVariable(name: "li", arg: 1, scope: !3141, file: !142, line: 535, type: !3144)
!3148 = !DILocalVariable(name: "loop", arg: 2, scope: !3141, file: !142, line: 535, type: !3145)
!3149 = !DILocalVariable(name: "flags", arg: 3, scope: !3141, file: !142, line: 535, type: !7)
!3150 = !DILocalVariable(name: "aloop", scope: !3141, file: !142, line: 537, type: !1376)
!3151 = !DILocalVariable(name: "i", scope: !3141, file: !142, line: 538, type: !7)
!3152 = !DILocalVariable(name: "mn", scope: !3141, file: !142, line: 539, type: !750)
!3153 = !DILocation(line: 0, scope: !3141)
!3154 = !DILocation(line: 541, column: 7, scope: !3141)
!3155 = !DILocation(line: 541, column: 11, scope: !3141)
!3156 = !DILocation(line: 542, column: 8, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3141, file: !142, line: 542, column: 7)
!3158 = !DILocation(line: 542, column: 7, scope: !3141)
!3159 = !DILocation(line: 544, column: 11, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3157, file: !142, line: 543, column: 5)
!3161 = !DILocation(line: 544, column: 20, scope: !3160)
!3162 = !DILocation(line: 545, column: 13, scope: !3160)
!3163 = !DILocation(line: 546, column: 7, scope: !3160)
!3164 = !DILocation(line: 549, column: 18, scope: !3141)
!3165 = !DILocation(line: 549, column: 7, scope: !3141)
!3166 = !DILocation(line: 549, column: 16, scope: !3141)
!3167 = !DILocation(line: 0, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !142, line: 560, column: 12)
!3169 = distinct !DILexicalBlock(scope: !3141, file: !142, line: 552, column: 7)
!3170 = !DILocation(line: 590, column: 7, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !142, line: 587, column: 5)
!3172 = !DILocation(line: 592, column: 8, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3174, file: !142, line: 592, column: 8)
!3174 = distinct !DILexicalBlock(scope: !3171, file: !142, line: 591, column: 2)
!3175 = !DILocation(line: 592, column: 15, scope: !3173)
!3176 = !DILocation(line: 592, column: 19, scope: !3173)
!3177 = !DILocation(line: 592, column: 8, scope: !3174)
!3178 = !DILocation(line: 593, column: 6, scope: !3173)
!3179 = !DILocation(line: 595, column: 15, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3174, file: !142, line: 595, column: 8)
!3181 = !DILocation(line: 595, column: 21, scope: !3180)
!3182 = !DILocation(line: 595, column: 8, scope: !3174)
!3183 = !DILocation(line: 599, column: 8, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3180, file: !142, line: 598, column: 6)
!3185 = !DILocation(line: 596, column: 21, scope: !3180)
!3186 = !DILocation(line: 596, column: 6, scope: !3180)
!3187 = !DILocation(line: 599, column: 15, scope: !3184)
!3188 = !DILocation(line: 599, column: 21, scope: !3184)
!3189 = !DILocation(line: 599, column: 29, scope: !3184)
!3190 = !DILocation(line: 599, column: 39, scope: !3184)
!3191 = !DILocation(line: 599, column: 44, scope: !3184)
!3192 = !DILocation(line: 0, scope: !3184)
!3193 = !DILocation(line: 600, column: 11, scope: !3184)
!3194 = distinct !{!3194, !3183, !3195}
!3195 = !DILocation(line: 600, column: 28, scope: !3184)
!3196 = !DILocation(line: 601, column: 18, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3184, file: !142, line: 601, column: 12)
!3198 = !DILocation(line: 601, column: 12, scope: !3184)
!3199 = !DILocation(line: 603, column: 23, scope: !3184)
!3200 = distinct !{!3200, !3170, !3201}
!3201 = !DILocation(line: 605, column: 2, scope: !3171)
!3202 = !DILocation(line: 608, column: 3, scope: !3141)
!3203 = !DILocation(line: 609, column: 1, scope: !3141)
!3204 = distinct !DISubprogram(name: "loop_canon_p", scope: !3, file: !3, line: 797, type: !3205, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!749, !1376}
!3207 = !{!3208, !3209, !3214}
!3208 = !DILocalVariable(name: "loop", arg: 1, scope: !3204, file: !3, line: 797, type: !1376)
!3209 = !DILocalVariable(name: "insn", scope: !3210, file: !3, line: 811, type: !795)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 810, column: 2)
!3211 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 809, column: 11)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 808, column: 5)
!3213 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 807, column: 7)
!3214 = !DILocalVariable(name: "insn", scope: !3215, file: !3, line: 824, type: !795)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 823, column: 2)
!3216 = distinct !DILexicalBlock(scope: !3217, file: !3, line: 822, column: 11)
!3217 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 821, column: 5)
!3218 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 820, column: 7)
!3219 = !DILocation(line: 0, scope: !3204)
!3220 = !DILocation(line: 800, column: 13, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 800, column: 7)
!3222 = !DILocation(line: 800, column: 7, scope: !3221)
!3223 = !DILocation(line: 800, column: 19, scope: !3221)
!3224 = !DILocation(line: 800, column: 23, scope: !3221)
!3225 = !DILocation(line: 800, column: 7, scope: !3204)
!3226 = !DILocation(line: 802, column: 9, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 802, column: 9)
!3228 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 801, column: 3)
!3229 = !DILocation(line: 802, column: 9, scope: !3228)
!3230 = !DILocation(line: 803, column: 7, scope: !3227)
!3231 = !DILocation(line: 807, column: 8, scope: !3213)
!3232 = !DILocation(line: 807, column: 7, scope: !3204)
!3233 = !DILocation(line: 809, column: 11, scope: !3211)
!3234 = !DILocation(line: 809, column: 11, scope: !3212)
!3235 = !DILocation(line: 811, column: 15, scope: !3210)
!3236 = !DILocation(line: 0, scope: !3210)
!3237 = !DILocation(line: 813, column: 4, scope: !3210)
!3238 = !DILocation(line: 814, column: 16, scope: !3210)
!3239 = !DILocation(line: 815, column: 7, scope: !3210)
!3240 = !DILocation(line: 815, column: 25, scope: !3210)
!3241 = !DILocation(line: 814, column: 7, scope: !3210)
!3242 = !DILocation(line: 816, column: 2, scope: !3210)
!3243 = !DILocation(line: 820, column: 9, scope: !3218)
!3244 = !DILocation(line: 820, column: 34, scope: !3218)
!3245 = !DILocation(line: 820, column: 39, scope: !3218)
!3246 = !DILocation(line: 820, column: 7, scope: !3204)
!3247 = !DILocation(line: 822, column: 11, scope: !3216)
!3248 = !DILocation(line: 822, column: 11, scope: !3217)
!3249 = !DILocation(line: 824, column: 15, scope: !3215)
!3250 = !DILocation(line: 0, scope: !3215)
!3251 = !DILocation(line: 826, column: 4, scope: !3215)
!3252 = !DILocation(line: 827, column: 13, scope: !3215)
!3253 = !DILocation(line: 828, column: 6, scope: !3215)
!3254 = !DILocation(line: 828, column: 24, scope: !3215)
!3255 = !DILocation(line: 827, column: 4, scope: !3215)
!3256 = !DILocation(line: 829, column: 2, scope: !3215)
!3257 = !DILocation(line: 834, column: 1, scope: !3204)
!3258 = distinct !DISubprogram(name: "loop_single_full_bb_p", scope: !3, file: !3, line: 753, type: !3205, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3259)
!3259 = !{!3260, !3261, !3262, !3264, !3268, !3269}
!3260 = !DILocalVariable(name: "loop", arg: 1, scope: !3258, file: !3, line: 753, type: !1376)
!3261 = !DILocalVariable(name: "i", scope: !3258, file: !3, line: 755, type: !7)
!3262 = !DILocalVariable(name: "bbs", scope: !3258, file: !3, line: 756, type: !3263)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!3264 = !DILocalVariable(name: "head", scope: !3265, file: !3, line: 760, type: !795)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 759, column: 5)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 758, column: 3)
!3267 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 758, column: 3)
!3268 = !DILocalVariable(name: "tail", scope: !3265, file: !3, line: 760, type: !795)
!3269 = !DILocalVariable(name: "empty_bb", scope: !3265, file: !3, line: 761, type: !749)
!3270 = !DILocation(line: 0, scope: !3258)
!3271 = !DILocation(line: 756, column: 22, scope: !3258)
!3272 = !DILocation(line: 0, scope: !3266)
!3273 = !DILocation(line: 0, scope: !3265)
!3274 = !DILocation(line: 0, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 763, column: 11)
!3276 = !DILocation(line: 0, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 769, column: 7)
!3278 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 769, column: 7)
!3279 = !DILocation(line: 0, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 779, column: 9)
!3281 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 778, column: 11)
!3282 = !DILocation(line: 758, column: 8, scope: !3267)
!3283 = !DILocation(line: 0, scope: !3267)
!3284 = !DILocation(line: 758, column: 25, scope: !3266)
!3285 = !DILocation(line: 758, column: 17, scope: !3266)
!3286 = !DILocation(line: 758, column: 3, scope: !3267)
!3287 = !DILocation(line: 760, column: 7, scope: !3265)
!3288 = !DILocation(line: 763, column: 11, scope: !3275)
!3289 = !DILocation(line: 763, column: 27, scope: !3275)
!3290 = !DILocation(line: 763, column: 18, scope: !3275)
!3291 = !DILocation(line: 763, column: 11, scope: !3265)
!3292 = !DILocation(line: 768, column: 7, scope: !3265)
!3293 = !DILocation(line: 769, column: 14, scope: !3277)
!3294 = !DILocation(line: 769, column: 22, scope: !3277)
!3295 = !DILocation(line: 769, column: 7, scope: !3265)
!3296 = !DILocation(line: 769, column: 19, scope: !3277)
!3297 = !DILocation(line: 769, column: 7, scope: !3278)
!3298 = !DILocation(line: 771, column: 15, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 771, column: 15)
!3300 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 770, column: 9)
!3301 = !DILocation(line: 771, column: 29, scope: !3299)
!3302 = !DILocation(line: 771, column: 32, scope: !3299)
!3303 = !DILocation(line: 772, column: 9, scope: !3299)
!3304 = !DILocation(line: 772, column: 13, scope: !3299)
!3305 = !DILocation(line: 772, column: 27, scope: !3299)
!3306 = !DILocation(line: 772, column: 31, scope: !3299)
!3307 = !DILocation(line: 772, column: 51, scope: !3299)
!3308 = !DILocation(line: 772, column: 54, scope: !3299)
!3309 = !DILocation(line: 771, column: 15, scope: !3300)
!3310 = !DILocation(line: 769, column: 47, scope: !3277)
!3311 = !DILocation(line: 769, column: 45, scope: !3277)
!3312 = !DILocation(line: 769, column: 7, scope: !3277)
!3313 = distinct !{!3313, !3297, !3314}
!3314 = !DILocation(line: 776, column: 9, scope: !3278)
!3315 = !DILocation(line: 778, column: 11, scope: !3265)
!3316 = !DILocation(line: 780, column: 11, scope: !3280)
!3317 = !DILocation(line: 781, column: 11, scope: !3280)
!3318 = !DILocation(line: 783, column: 5, scope: !3266)
!3319 = !DILocation(line: 758, column: 38, scope: !3266)
!3320 = !DILocation(line: 758, column: 3, scope: !3266)
!3321 = distinct !{!3321, !3286, !3322}
!3322 = !DILocation(line: 783, column: 5, scope: !3267)
!3323 = !DILocation(line: 784, column: 3, scope: !3258)
!3324 = !DILocation(line: 785, column: 3, scope: !3258)
!3325 = !DILocation(line: 786, column: 1, scope: !3258)
!3326 = distinct !DISubprogram(name: "doloop_register_get", scope: !3, file: !3, line: 287, type: !3327, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3329)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!795, !795, !795}
!3329 = !{!3330, !3331}
!3330 = !DILocalVariable(name: "head", arg: 1, scope: !3326, file: !3, line: 287, type: !795)
!3331 = !DILocalVariable(name: "tail", arg: 2, scope: !3326, file: !3, line: 287, type: !795)
!3332 = !DILocation(line: 0, scope: !3326)
!3333 = !DILocation(line: 331, column: 3, scope: !3326)
!3334 = distinct !DISubprogram(name: "fel_next", scope: !142, file: !142, line: 518, type: !3335, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3337)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{null, !3144, !3145}
!3337 = !{!3338, !3339, !3340}
!3338 = !DILocalVariable(name: "li", arg: 1, scope: !3334, file: !142, line: 518, type: !3144)
!3339 = !DILocalVariable(name: "loop", arg: 2, scope: !3334, file: !142, line: 518, type: !3145)
!3340 = !DILocalVariable(name: "anum", scope: !3334, file: !142, line: 520, type: !750)
!3341 = !DILocation(line: 0, scope: !3334)
!3342 = !DILocation(line: 520, column: 3, scope: !3334)
!3343 = !DILocation(line: 522, column: 3, scope: !3334)
!3344 = !DILocation(line: 522, column: 10, scope: !3334)
!3345 = !DILocation(line: 524, column: 14, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3334, file: !142, line: 523, column: 5)
!3347 = !DILocation(line: 525, column: 25, scope: !3346)
!3348 = !DILocation(line: 525, column: 15, scope: !3346)
!3349 = !DILocation(line: 525, column: 13, scope: !3346)
!3350 = !DILocation(line: 526, column: 11, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3346, file: !142, line: 526, column: 11)
!3352 = !DILocation(line: 526, column: 11, scope: !3346)
!3353 = distinct !{!3353, !3343, !3354}
!3354 = !DILocation(line: 528, column: 5, scope: !3334)
!3355 = !DILocation(line: 530, column: 3, scope: !3334)
!3356 = !DILocation(line: 531, column: 9, scope: !3334)
!3357 = !DILocation(line: 532, column: 1, scope: !3334)
!3358 = distinct !DISubprogram(name: "const_iteration_count", scope: !3, file: !3, line: 340, type: !3359, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3362)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!795, !795, !763, !3361}
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!3362 = !{!3363, !3364, !3365, !3366, !3367, !3368, !3369}
!3363 = !DILocalVariable(name: "count_reg", arg: 1, scope: !3358, file: !3, line: 340, type: !795)
!3364 = !DILocalVariable(name: "pre_header", arg: 2, scope: !3358, file: !3, line: 340, type: !763)
!3365 = !DILocalVariable(name: "count", arg: 3, scope: !3358, file: !3, line: 341, type: !3361)
!3366 = !DILocalVariable(name: "insn", scope: !3358, file: !3, line: 343, type: !795)
!3367 = !DILocalVariable(name: "head", scope: !3358, file: !3, line: 344, type: !795)
!3368 = !DILocalVariable(name: "tail", scope: !3358, file: !3, line: 344, type: !795)
!3369 = !DILocalVariable(name: "pat", scope: !3370, file: !3, line: 355, type: !795)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 354, column: 7)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 352, column: 9)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 351, column: 3)
!3373 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 351, column: 3)
!3374 = distinct !DISubprogram(name: "sms_order_nodes", scope: !3, file: !3, line: 2094, type: !3375, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3377)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!750, !758, !750, !2012, !2012}
!3377 = !{!3378, !3379, !3380, !3381, !3382, !3383, !3384, !3401, !3402}
!3378 = !DILocalVariable(name: "g", arg: 1, scope: !3374, file: !3, line: 2094, type: !758)
!3379 = !DILocalVariable(name: "mii", arg: 2, scope: !3374, file: !3, line: 2094, type: !750)
!3380 = !DILocalVariable(name: "node_order", arg: 3, scope: !3374, file: !3, line: 2094, type: !2012)
!3381 = !DILocalVariable(name: "pmax_asap", arg: 4, scope: !3374, file: !3, line: 2094, type: !2012)
!3382 = !DILocalVariable(name: "i", scope: !3374, file: !3, line: 2096, type: !750)
!3383 = !DILocalVariable(name: "rec_mii", scope: !3374, file: !3, line: 2097, type: !750)
!3384 = !DILocalVariable(name: "sccs", scope: !3374, file: !3, line: 2098, type: !3385)
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddg_all_sccs_ptr", file: !398, line: 35, baseType: !3386)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ddg_all_sccs", file: !398, line: 160, size: 192, elements: !3388)
!3388 = !{!3389, !3399, !3400}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sccs", scope: !3387, file: !398, line: 163, baseType: !3390, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddg_scc_ptr", file: !398, line: 34, baseType: !3392)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ddg_scc", file: !398, line: 146, size: 192, elements: !3394)
!3394 = !{!3395, !3396, !3397, !3398}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3393, file: !398, line: 149, baseType: !1991, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "backarcs", scope: !3393, file: !398, line: 152, baseType: !2011, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "num_backarcs", scope: !3393, file: !398, line: 153, baseType: !750, size: 32, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "recurrence_length", scope: !3393, file: !398, line: 156, baseType: !750, size: 32, offset: 160)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "num_sccs", scope: !3387, file: !398, line: 164, baseType: !750, size: 32, offset: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ddg", scope: !3387, file: !398, line: 166, baseType: !758, size: 64, offset: 128)
!3401 = !DILocalVariable(name: "nops", scope: !3374, file: !3, line: 2100, type: !2051)
!3402 = !DILocalVariable(name: "v", scope: !3403, file: !3, line: 2114, type: !1962)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 2113, column: 5)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 2112, column: 3)
!3405 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2112, column: 3)
!3406 = !DILocation(line: 0, scope: !3374)
!3407 = !DILocation(line: 2098, column: 27, scope: !3374)
!3408 = !DILocation(line: 2100, column: 15, scope: !3374)
!3409 = !DILocation(line: 2102, column: 7, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2102, column: 7)
!3411 = !DILocation(line: 2102, column: 7, scope: !3374)
!3412 = !DILocation(line: 2103, column: 5, scope: !3410)
!3413 = !DILocation(line: 2105, column: 3, scope: !3374)
!3414 = !DILocation(line: 2107, column: 13, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2107, column: 7)
!3416 = !DILocation(line: 2107, column: 22, scope: !3415)
!3417 = !DILocation(line: 2107, column: 7, scope: !3374)
!3418 = !DILocation(line: 2109, column: 21, scope: !3415)
!3419 = !DILocation(line: 2109, column: 15, scope: !3415)
!3420 = !DILocation(line: 2109, column: 30, scope: !3415)
!3421 = !DILocation(line: 2109, column: 5, scope: !3415)
!3422 = !DILocation(line: 0, scope: !3404)
!3423 = !DILocation(line: 0, scope: !3403)
!3424 = !DILocation(line: 2112, column: 8, scope: !3405)
!3425 = !DILocation(line: 0, scope: !3405)
!3426 = !DILocation(line: 2112, column: 22, scope: !3404)
!3427 = !DILocation(line: 2112, column: 17, scope: !3404)
!3428 = !DILocation(line: 2112, column: 3, scope: !3405)
!3429 = !DILocation(line: 2114, column: 28, scope: !3403)
!3430 = !DILocation(line: 2115, column: 22, scope: !3403)
!3431 = !DILocation(line: 2115, column: 10, scope: !3403)
!3432 = !DILocation(line: 2115, column: 14, scope: !3403)
!3433 = !DILocation(line: 2115, column: 20, scope: !3403)
!3434 = !DILocation(line: 2112, column: 34, scope: !3404)
!3435 = !DILocation(line: 2112, column: 3, scope: !3404)
!3436 = distinct !{!3436, !3428, !3437}
!3437 = !DILocation(line: 2116, column: 5, scope: !3405)
!3438 = !DILocation(line: 2118, column: 9, scope: !3374)
!3439 = !DILocation(line: 2118, column: 3, scope: !3374)
!3440 = !DILocation(line: 2119, column: 3, scope: !3374)
!3441 = !DILocation(line: 2120, column: 37, scope: !3374)
!3442 = !DILocation(line: 2120, column: 3, scope: !3374)
!3443 = !DILocation(line: 2122, column: 3, scope: !3374)
!3444 = distinct !DISubprogram(name: "res_MII", scope: !3, file: !3, line: 373, type: !3445, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3447)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!750, !758}
!3447 = !{!3448}
!3448 = !DILocalVariable(name: "g", arg: 1, scope: !3444, file: !3, line: 373, type: !758)
!3449 = !DILocation(line: 0, scope: !3444)
!3450 = !DILocation(line: 375, column: 21, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 375, column: 7)
!3452 = !DILocation(line: 375, column: 7, scope: !3451)
!3453 = !DILocation(line: 375, column: 7, scope: !3444)
!3454 = !DILocation(line: 376, column: 12, scope: !3451)
!3455 = !DILocation(line: 376, column: 5, scope: !3451)
!3456 = !DILocation(line: 378, column: 15, scope: !3444)
!3457 = !DILocation(line: 378, column: 30, scope: !3444)
!3458 = !DILocation(line: 378, column: 25, scope: !3444)
!3459 = !DILocation(line: 378, column: 43, scope: !3444)
!3460 = !DILocation(line: 378, column: 41, scope: !3444)
!3461 = !DILocation(line: 378, column: 3, scope: !3444)
!3462 = !DILocation(line: 379, column: 1, scope: !3444)
!3463 = distinct !DISubprogram(name: "set_node_sched_params", scope: !3, file: !3, line: 389, type: !3464, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3466)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{null, !758}
!3466 = !{!3467, !3468}
!3467 = !DILocalVariable(name: "g", arg: 1, scope: !3463, file: !3, line: 389, type: !758)
!3468 = !DILocalVariable(name: "i", scope: !3463, file: !3, line: 391, type: !750)
!3469 = !DILocation(line: 0, scope: !3463)
!3470 = !DILocation(line: 396, column: 22, scope: !3463)
!3471 = !DILocation(line: 396, column: 19, scope: !3463)
!3472 = !DILocation(line: 396, column: 10, scope: !3463)
!3473 = !DILocation(line: 395, column: 21, scope: !3463)
!3474 = !DILocation(line: 0, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 402, column: 5)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 401, column: 3)
!3477 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 401, column: 3)
!3478 = !DILocation(line: 401, column: 8, scope: !3477)
!3479 = !DILocation(line: 0, scope: !3477)
!3480 = !DILocation(line: 401, column: 22, scope: !3476)
!3481 = !DILocation(line: 401, column: 17, scope: !3476)
!3482 = !DILocation(line: 401, column: 3, scope: !3477)
!3483 = !DILocation(line: 404, column: 38, scope: !3475)
!3484 = !DILocation(line: 404, column: 47, scope: !3475)
!3485 = !DILocation(line: 404, column: 51, scope: !3475)
!3486 = !DILocation(line: 404, column: 7, scope: !3475)
!3487 = !DILocation(line: 404, column: 28, scope: !3475)
!3488 = !DILocation(line: 404, column: 33, scope: !3475)
!3489 = !DILocation(line: 405, column: 31, scope: !3475)
!3490 = !DILocation(line: 405, column: 10, scope: !3475)
!3491 = !DILocation(line: 405, column: 23, scope: !3475)
!3492 = !DILocation(line: 405, column: 28, scope: !3475)
!3493 = !DILocation(line: 401, column: 34, scope: !3476)
!3494 = !DILocation(line: 401, column: 3, scope: !3476)
!3495 = distinct !{!3495, !3482, !3496}
!3496 = !DILocation(line: 406, column: 5, scope: !3477)
!3497 = !DILocation(line: 407, column: 1, scope: !3463)
!3498 = distinct !DISubprogram(name: "sms_schedule_by_order", scope: !3, file: !3, line: 1726, type: !3499, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3501)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!2013, !758, !750, !750, !2012}
!3501 = !{!3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3526, !3527, !3528, !3534, !3535}
!3502 = !DILocalVariable(name: "g", arg: 1, scope: !3498, file: !3, line: 1726, type: !758)
!3503 = !DILocalVariable(name: "mii", arg: 2, scope: !3498, file: !3, line: 1726, type: !750)
!3504 = !DILocalVariable(name: "maxii", arg: 3, scope: !3498, file: !3, line: 1726, type: !750)
!3505 = !DILocalVariable(name: "nodes_order", arg: 4, scope: !3498, file: !3, line: 1726, type: !2012)
!3506 = !DILocalVariable(name: "ii", scope: !3498, file: !3, line: 1728, type: !750)
!3507 = !DILocalVariable(name: "i", scope: !3498, file: !3, line: 1729, type: !750)
!3508 = !DILocalVariable(name: "c", scope: !3498, file: !3, line: 1729, type: !750)
!3509 = !DILocalVariable(name: "success", scope: !3498, file: !3, line: 1729, type: !750)
!3510 = !DILocalVariable(name: "num_splits", scope: !3498, file: !3, line: 1729, type: !750)
!3511 = !DILocalVariable(name: "flush_and_start_over", scope: !3498, file: !3, line: 1730, type: !750)
!3512 = !DILocalVariable(name: "num_nodes", scope: !3498, file: !3, line: 1731, type: !750)
!3513 = !DILocalVariable(name: "start", scope: !3498, file: !3, line: 1732, type: !750)
!3514 = !DILocalVariable(name: "end", scope: !3498, file: !3, line: 1732, type: !750)
!3515 = !DILocalVariable(name: "step", scope: !3498, file: !3, line: 1732, type: !750)
!3516 = !DILocalVariable(name: "sched_nodes", scope: !3498, file: !3, line: 1733, type: !1991)
!3517 = !DILocalVariable(name: "must_precede", scope: !3498, file: !3, line: 1734, type: !1991)
!3518 = !DILocalVariable(name: "must_follow", scope: !3498, file: !3, line: 1735, type: !1991)
!3519 = !DILocalVariable(name: "tobe_scheduled", scope: !3498, file: !3, line: 1736, type: !1991)
!3520 = !DILocalVariable(name: "ps", scope: !3498, file: !3, line: 1738, type: !2013)
!3521 = !DILocalVariable(name: "u", scope: !3522, file: !3, line: 1753, type: !750)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 1752, column: 2)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1751, column: 7)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 1751, column: 7)
!3525 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1744, column: 5)
!3526 = !DILocalVariable(name: "u_node", scope: !3522, file: !3, line: 1754, type: !1962)
!3527 = !DILocalVariable(name: "insn", scope: !3522, file: !3, line: 1755, type: !795)
!3528 = !DILocalVariable(name: "tmp_precede", scope: !3529, file: !3, line: 1791, type: !1991)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1790, column: 17)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 1789, column: 15)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 1789, column: 15)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1776, column: 13)
!3533 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1774, column: 14)
!3534 = !DILocalVariable(name: "tmp_follow", scope: !3529, file: !3, line: 1792, type: !1991)
!3535 = !DILocalVariable(name: "split_row", scope: !3536, file: !3, line: 1822, type: !750)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 1821, column: 13)
!3537 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1820, column: 17)
!3538 = !DILocation(line: 0, scope: !3498)
!3539 = !DILocation(line: 1729, column: 3, scope: !3498)
!3540 = !DILocation(line: 1729, column: 22, scope: !3498)
!3541 = !DILocation(line: 1731, column: 22, scope: !3498)
!3542 = !DILocation(line: 1732, column: 3, scope: !3498)
!3543 = !DILocation(line: 1733, column: 25, scope: !3498)
!3544 = !DILocation(line: 1734, column: 26, scope: !3498)
!3545 = !DILocation(line: 1735, column: 25, scope: !3498)
!3546 = !DILocation(line: 1736, column: 28, scope: !3498)
!3547 = !DILocation(line: 1738, column: 61, scope: !3498)
!3548 = !DILocation(line: 1738, column: 29, scope: !3498)
!3549 = !DILocation(line: 1740, column: 3, scope: !3498)
!3550 = !DILocation(line: 1741, column: 3, scope: !3498)
!3551 = !DILocation(line: 0, scope: !3522)
!3552 = !DILocation(line: 0, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 1777, column: 19)
!3554 = !DILocation(line: 0, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1841, column: 19)
!3556 = !DILocation(line: 1743, column: 3, scope: !3498)
!3557 = !DILocation(line: 1728, column: 7, scope: !3498)
!3558 = !DILocation(line: 1743, column: 10, scope: !3498)
!3559 = !DILocation(line: 1743, column: 38, scope: !3498)
!3560 = !DILocation(line: 1743, column: 31, scope: !3498)
!3561 = !DILocation(line: 1746, column: 11, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 1746, column: 11)
!3563 = !DILocation(line: 1746, column: 11, scope: !3525)
!3564 = !DILocation(line: 1747, column: 2, scope: !3562)
!3565 = !DILocation(line: 1749, column: 7, scope: !3525)
!3566 = !DILocation(line: 1751, column: 12, scope: !3524)
!3567 = !DILocation(line: 1748, column: 28, scope: !3525)
!3568 = !DILocation(line: 0, scope: !3524)
!3569 = !DILocation(line: 1751, column: 21, scope: !3523)
!3570 = !DILocation(line: 1751, column: 7, scope: !3524)
!3571 = !DILocation(line: 1753, column: 12, scope: !3522)
!3572 = !DILocation(line: 1754, column: 33, scope: !3522)
!3573 = !DILocation(line: 1754, column: 36, scope: !3522)
!3574 = !DILocation(line: 1754, column: 29, scope: !3522)
!3575 = !DILocation(line: 1755, column: 23, scope: !3522)
!3576 = !DILocation(line: 1757, column: 9, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1757, column: 8)
!3578 = !DILocation(line: 1757, column: 8, scope: !3522)
!3579 = !DILocation(line: 1759, column: 8, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1758, column: 6)
!3581 = !DILocation(line: 1760, column: 8, scope: !3580)
!3582 = !DILocation(line: 1763, column: 8, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1763, column: 8)
!3584 = !DILocation(line: 1763, column: 8, scope: !3522)
!3585 = !DILocation(line: 1765, column: 8, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 1764, column: 6)
!3587 = !DILocation(line: 1766, column: 8, scope: !3586)
!3588 = !DILocation(line: 1769, column: 8, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1769, column: 8)
!3590 = !DILocation(line: 1769, column: 8, scope: !3522)
!3591 = !DILocation(line: 1774, column: 14, scope: !3533)
!3592 = !DILocation(line: 1775, column: 46, scope: !3533)
!3593 = !DILocation(line: 1774, column: 14, scope: !3522)
!3594 = !DILocation(line: 1777, column: 19, scope: !3553)
!3595 = !DILocation(line: 1777, column: 19, scope: !3532)
!3596 = !DILocation(line: 1779, column: 66, scope: !3553)
!3597 = !DILocation(line: 1780, column: 46, scope: !3553)
!3598 = !DILocation(line: 1780, column: 53, scope: !3553)
!3599 = !DILocation(line: 1780, column: 58, scope: !3553)
!3600 = !DILocation(line: 1778, column: 17, scope: !3553)
!3601 = !DILocation(line: 1782, column: 15, scope: !3532)
!3602 = !DILocation(line: 1785, column: 54, scope: !3532)
!3603 = !DILocation(line: 1785, column: 61, scope: !3532)
!3604 = !DILocation(line: 1785, column: 66, scope: !3532)
!3605 = !DILocation(line: 1785, column: 15, scope: !3532)
!3606 = !DILocation(line: 1789, column: 24, scope: !3531)
!3607 = !DILocation(line: 1789, column: 20, scope: !3531)
!3608 = !DILocation(line: 0, scope: !3531)
!3609 = !DILocation(line: 1789, column: 36, scope: !3530)
!3610 = !DILocation(line: 1789, column: 33, scope: !3530)
!3611 = !DILocation(line: 1789, column: 15, scope: !3531)
!3612 = !DILocation(line: 0, scope: !3529)
!3613 = !DILocation(line: 1794, column: 28, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1794, column: 23)
!3615 = !DILocation(line: 1794, column: 25, scope: !3614)
!3616 = !DILocation(line: 1794, column: 23, scope: !3529)
!3617 = !DILocation(line: 1801, column: 34, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1801, column: 23)
!3619 = !DILocation(line: 1796, column: 27, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1796, column: 27)
!3621 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1795, column: 21)
!3622 = !DILocation(line: 1796, column: 32, scope: !3620)
!3623 = !DILocation(line: 1800, column: 21, scope: !3621)
!3624 = !DILocation(line: 1792, column: 27, scope: !3529)
!3625 = !DILocation(line: 1801, column: 32, scope: !3618)
!3626 = !DILocation(line: 1801, column: 25, scope: !3618)
!3627 = !DILocation(line: 1801, column: 23, scope: !3529)
!3628 = !DILocation(line: 1803, column: 32, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 1803, column: 27)
!3630 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 1802, column: 21)
!3631 = !DILocation(line: 1807, column: 21, scope: !3630)
!3632 = !DILocation(line: 1797, column: 37, scope: !3620)
!3633 = !DILocation(line: 1810, column: 21, scope: !3529)
!3634 = !DILocation(line: 1814, column: 23, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1814, column: 23)
!3636 = !DILocation(line: 1789, column: 46, scope: !3530)
!3637 = !DILocation(line: 1789, column: 43, scope: !3530)
!3638 = !DILocation(line: 1789, column: 15, scope: !3530)
!3639 = distinct !{!3639, !3611, !3640}
!3640 = !DILocation(line: 1816, column: 17, scope: !3531)
!3641 = !DILocation(line: 1818, column: 15, scope: !3532)
!3642 = !DILocation(line: 1819, column: 13, scope: !3532)
!3643 = !DILocation(line: 1820, column: 18, scope: !3537)
!3644 = !DILocation(line: 1820, column: 17, scope: !3522)
!3645 = !DILocation(line: 1824, column: 21, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1824, column: 19)
!3647 = !DILocation(line: 1824, column: 24, scope: !3646)
!3648 = !DILocation(line: 1824, column: 19, scope: !3536)
!3649 = !DILocation(line: 1827, column: 19, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1827, column: 19)
!3651 = !DILocation(line: 1827, column: 30, scope: !3650)
!3652 = !DILocation(line: 1827, column: 19, scope: !3536)
!3653 = !DILocation(line: 1829, column: 30, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 1828, column: 17)
!3655 = !DILocation(line: 1831, column: 19, scope: !3654)
!3656 = !DILocation(line: 1832, column: 19, scope: !3654)
!3657 = !DILocation(line: 1833, column: 19, scope: !3654)
!3658 = !DILocation(line: 1834, column: 19, scope: !3654)
!3659 = !DILocation(line: 1837, column: 25, scope: !3536)
!3660 = !DILocation(line: 1841, column: 19, scope: !3555)
!3661 = !DILocation(line: 1841, column: 24, scope: !3555)
!3662 = !DILocation(line: 1841, column: 19, scope: !3536)
!3663 = !DILocation(line: 1842, column: 61, scope: !3555)
!3664 = !DILocation(line: 1842, column: 68, scope: !3555)
!3665 = !DILocation(line: 1842, column: 72, scope: !3555)
!3666 = !DILocation(line: 1843, column: 52, scope: !3555)
!3667 = !DILocation(line: 1842, column: 29, scope: !3555)
!3668 = !DILocation(line: 0, scope: !3536)
!3669 = !DILocation(line: 1842, column: 17, scope: !3555)
!3670 = !DILocation(line: 1845, column: 61, scope: !3555)
!3671 = !DILocation(line: 1845, column: 65, scope: !3555)
!3672 = !DILocation(line: 1845, column: 70, scope: !3555)
!3673 = !DILocation(line: 1846, column: 52, scope: !3555)
!3674 = !DILocation(line: 1845, column: 29, scope: !3555)
!3675 = !DILocation(line: 1848, column: 15, scope: !3536)
!3676 = !DILocation(line: 1849, column: 16, scope: !3536)
!3677 = !DILocation(line: 1851, column: 19, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1851, column: 19)
!3679 = !DILocation(line: 1851, column: 19, scope: !3536)
!3680 = !DILocation(line: 1852, column: 56, scope: !3678)
!3681 = !DILocation(line: 1852, column: 17, scope: !3678)
!3682 = !DILocation(line: 0, scope: !3525)
!3683 = !DILocation(line: 1751, column: 14, scope: !3524)
!3684 = !DILocation(line: 1856, column: 9, scope: !3523)
!3685 = !DILocation(line: 1751, column: 35, scope: !3523)
!3686 = !DILocation(line: 1751, column: 7, scope: !3523)
!3687 = distinct !{!3687, !3570, !3688}
!3688 = !DILocation(line: 1856, column: 9, scope: !3524)
!3689 = distinct !{!3689, !3556, !3690}
!3690 = !DILocation(line: 1857, column: 5, scope: !3498)
!3691 = !DILocation(line: 1858, column: 7, scope: !3498)
!3692 = !DILocation(line: 1860, column: 7, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 1859, column: 5)
!3694 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1858, column: 7)
!3695 = !DILocation(line: 1862, column: 5, scope: !3693)
!3696 = !DILocation(line: 1864, column: 5, scope: !3694)
!3697 = !DILocation(line: 1866, column: 3, scope: !3498)
!3698 = !DILocation(line: 1867, column: 3, scope: !3498)
!3699 = !DILocation(line: 1868, column: 3, scope: !3498)
!3700 = !DILocation(line: 1869, column: 3, scope: !3498)
!3701 = !DILocation(line: 1872, column: 1, scope: !3498)
!3702 = !DILocation(line: 1871, column: 3, scope: !3498)
!3703 = distinct !DISubprogram(name: "normalize_sched_times", scope: !3, file: !3, line: 575, type: !3704, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null, !2013}
!3706 = !{!3707, !3708, !3709, !3710, !3711, !3712, !3718}
!3707 = !DILocalVariable(name: "ps", arg: 1, scope: !3703, file: !3, line: 575, type: !2013)
!3708 = !DILocalVariable(name: "row", scope: !3703, file: !3, line: 577, type: !750)
!3709 = !DILocalVariable(name: "amount", scope: !3703, file: !3, line: 578, type: !750)
!3710 = !DILocalVariable(name: "ii", scope: !3703, file: !3, line: 579, type: !750)
!3711 = !DILocalVariable(name: "crr_insn", scope: !3703, file: !3, line: 580, type: !2021)
!3712 = !DILocalVariable(name: "u", scope: !3713, file: !3, line: 585, type: !1962)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 584, column: 7)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 583, column: 5)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 583, column: 5)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 582, column: 3)
!3717 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 582, column: 3)
!3718 = !DILocalVariable(name: "normalized_time", scope: !3713, file: !3, line: 586, type: !750)
!3719 = !DILocation(line: 0, scope: !3703)
!3720 = !DILocation(line: 578, column: 16, scope: !3703)
!3721 = !DILocation(line: 579, column: 16, scope: !3703)
!3722 = !DILocation(line: 0, scope: !3715)
!3723 = !DILocation(line: 0, scope: !3713)
!3724 = !DILocation(line: 582, column: 8, scope: !3717)
!3725 = !DILocation(line: 0, scope: !3717)
!3726 = !DILocation(line: 582, column: 21, scope: !3716)
!3727 = !DILocation(line: 582, column: 3, scope: !3717)
!3728 = !DILocation(line: 583, column: 25, scope: !3715)
!3729 = !DILocation(line: 583, column: 21, scope: !3715)
!3730 = !DILocation(line: 583, column: 10, scope: !3715)
!3731 = !DILocation(line: 583, column: 5, scope: !3715)
!3732 = !DILocation(line: 585, column: 29, scope: !3713)
!3733 = !DILocation(line: 586, column: 24, scope: !3713)
!3734 = !DILocation(line: 586, column: 39, scope: !3713)
!3735 = !DILocation(line: 588, column: 6, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 588, column: 6)
!3737 = !DILocation(line: 588, column: 6, scope: !3713)
!3738 = !DILocation(line: 590, column: 39, scope: !3736)
!3739 = !DILocation(line: 591, column: 15, scope: !3736)
!3740 = !DILocation(line: 589, column: 4, scope: !3736)
!3741 = !DILocation(line: 592, column: 2, scope: !3713)
!3742 = !DILocation(line: 593, column: 2, scope: !3713)
!3743 = !DILocation(line: 594, column: 2, scope: !3713)
!3744 = !DILocation(line: 594, column: 17, scope: !3713)
!3745 = !DILocation(line: 595, column: 34, scope: !3713)
!3746 = !DILocation(line: 595, column: 2, scope: !3713)
!3747 = !DILocation(line: 595, column: 16, scope: !3713)
!3748 = !DILocation(line: 596, column: 36, scope: !3713)
!3749 = !DILocation(line: 596, column: 2, scope: !3713)
!3750 = !DILocation(line: 596, column: 18, scope: !3713)
!3751 = !DILocation(line: 583, column: 67, scope: !3714)
!3752 = !DILocation(line: 583, column: 5, scope: !3714)
!3753 = distinct !{!3753, !3731, !3754}
!3754 = !DILocation(line: 597, column: 7, scope: !3715)
!3755 = !DILocation(line: 582, column: 30, scope: !3716)
!3756 = !DILocation(line: 582, column: 3, scope: !3716)
!3757 = distinct !{!3757, !3727, !3758}
!3758 = !DILocation(line: 597, column: 7, scope: !3717)
!3759 = !DILocation(line: 598, column: 1, scope: !3703)
!3760 = distinct !DISubprogram(name: "rotate_partial_schedule", scope: !3, file: !3, line: 2826, type: !3761, scopeLine: 2827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3763)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{null, !2013, !750}
!3763 = !{!3764, !3765, !3766, !3767, !3768, !3769, !3770}
!3764 = !DILocalVariable(name: "ps", arg: 1, scope: !3760, file: !3, line: 2826, type: !2013)
!3765 = !DILocalVariable(name: "start_cycle", arg: 2, scope: !3760, file: !3, line: 2826, type: !750)
!3766 = !DILocalVariable(name: "i", scope: !3760, file: !3, line: 2828, type: !750)
!3767 = !DILocalVariable(name: "row", scope: !3760, file: !3, line: 2828, type: !750)
!3768 = !DILocalVariable(name: "backward_rotates", scope: !3760, file: !3, line: 2828, type: !750)
!3769 = !DILocalVariable(name: "last_row", scope: !3760, file: !3, line: 2829, type: !750)
!3770 = !DILocalVariable(name: "first_row", scope: !3771, file: !3, line: 2839, type: !2021)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 2838, column: 5)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2837, column: 3)
!3773 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 2837, column: 3)
!3774 = !DILocation(line: 0, scope: !3760)
!3775 = !DILocation(line: 2829, column: 22, scope: !3760)
!3776 = !DILocation(line: 2829, column: 25, scope: !3760)
!3777 = !DILocation(line: 2831, column: 19, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 2831, column: 7)
!3779 = !DILocation(line: 2831, column: 7, scope: !3760)
!3780 = !DILocation(line: 2834, column: 22, scope: !3760)
!3781 = !DILocation(line: 0, scope: !3771)
!3782 = !DILocation(line: 2837, column: 8, scope: !3773)
!3783 = !DILocation(line: 0, scope: !3773)
!3784 = !DILocation(line: 2837, column: 17, scope: !3772)
!3785 = !DILocation(line: 2837, column: 3, scope: !3773)
!3786 = !DILocation(line: 2839, column: 35, scope: !3771)
!3787 = !DILocation(line: 2839, column: 31, scope: !3771)
!3788 = !DILocation(line: 2841, column: 12, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 2841, column: 7)
!3790 = !DILocation(line: 2841, column: 25, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 2841, column: 7)
!3792 = !DILocation(line: 2841, column: 7, scope: !3789)
!3793 = !DILocation(line: 2842, column: 30, scope: !3791)
!3794 = !DILocation(line: 2842, column: 18, scope: !3791)
!3795 = !DILocation(line: 2842, column: 2, scope: !3791)
!3796 = !DILocation(line: 2842, column: 16, scope: !3791)
!3797 = !DILocation(line: 2841, column: 7, scope: !3791)
!3798 = distinct !{!3798, !3792, !3799}
!3799 = !DILocation(line: 2842, column: 32, scope: !3789)
!3800 = !DILocation(line: 2844, column: 7, scope: !3771)
!3801 = !DILocation(line: 2844, column: 26, scope: !3771)
!3802 = !DILocation(line: 2837, column: 38, scope: !3772)
!3803 = !DILocation(line: 2837, column: 3, scope: !3772)
!3804 = distinct !{!3804, !3785, !3805}
!3805 = !DILocation(line: 2845, column: 5, scope: !3773)
!3806 = !DILocation(line: 2847, column: 7, scope: !3760)
!3807 = !DILocation(line: 2847, column: 17, scope: !3760)
!3808 = !DILocation(line: 2848, column: 7, scope: !3760)
!3809 = !DILocation(line: 2848, column: 17, scope: !3760)
!3810 = !DILocation(line: 2849, column: 1, scope: !3760)
!3811 = distinct !DISubprogram(name: "set_columns_for_ps", scope: !3, file: !3, line: 602, type: !3704, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3812)
!3812 = !{!3813, !3814, !3815, !3819}
!3813 = !DILocalVariable(name: "ps", arg: 1, scope: !3811, file: !3, line: 602, type: !2013)
!3814 = !DILocalVariable(name: "row", scope: !3811, file: !3, line: 604, type: !750)
!3815 = !DILocalVariable(name: "cur_insn", scope: !3816, file: !3, line: 608, type: !2021)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 607, column: 5)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 606, column: 3)
!3818 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 606, column: 3)
!3819 = !DILocalVariable(name: "column", scope: !3816, file: !3, line: 609, type: !750)
!3820 = !DILocation(line: 0, scope: !3811)
!3821 = !DILocation(line: 0, scope: !3817)
!3822 = !DILocation(line: 0, scope: !3816)
!3823 = !DILocation(line: 606, column: 8, scope: !3818)
!3824 = !DILocation(line: 0, scope: !3818)
!3825 = !DILocation(line: 606, column: 27, scope: !3817)
!3826 = !DILocation(line: 606, column: 21, scope: !3817)
!3827 = !DILocation(line: 606, column: 3, scope: !3818)
!3828 = !DILocation(line: 608, column: 34, scope: !3816)
!3829 = !DILocation(line: 608, column: 30, scope: !3816)
!3830 = !DILocation(line: 611, column: 7, scope: !3816)
!3831 = !DILocation(line: 611, column: 7, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 611, column: 7)
!3833 = !DILocation(line: 612, column: 40, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 611, column: 7)
!3835 = !DILocation(line: 612, column: 2, scope: !3834)
!3836 = !DILocation(line: 612, column: 32, scope: !3834)
!3837 = !DILocation(line: 611, column: 45, scope: !3834)
!3838 = !DILocation(line: 611, column: 7, scope: !3834)
!3839 = distinct !{!3839, !3831, !3840}
!3840 = !DILocation(line: 612, column: 40, scope: !3832)
!3841 = !DILocation(line: 606, column: 34, scope: !3817)
!3842 = !DILocation(line: 606, column: 3, scope: !3817)
!3843 = distinct !{!3843, !3827, !3844}
!3844 = !DILocation(line: 613, column: 5, scope: !3818)
!3845 = !DILocation(line: 614, column: 1, scope: !3811)
!3846 = distinct !DISubprogram(name: "canon_loop", scope: !3, file: !3, line: 840, type: !3847, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{null, !1376}
!3849 = !{!3850, !3851, !3852}
!3850 = !DILocalVariable(name: "loop", arg: 1, scope: !3846, file: !3, line: 840, type: !1376)
!3851 = !DILocalVariable(name: "e", scope: !3846, file: !3, line: 842, type: !781)
!3852 = !DILocalVariable(name: "i", scope: !3846, file: !3, line: 843, type: !3853)
!3853 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !3854)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !3855)
!3855 = !{!3856, !3857}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3854, file: !155, line: 680, baseType: !7, size: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3854, file: !155, line: 681, baseType: !3858, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!3859 = !DILocation(line: 0, scope: !3846)
!3860 = !DILocation(line: 842, column: 3, scope: !3846)
!3861 = !DILocation(line: 843, column: 3, scope: !3846)
!3862 = !DILocation(line: 847, column: 3, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 847, column: 3)
!3864 = !DILocation(line: 0, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 847, column: 3)
!3866 = !DILocation(line: 847, column: 3, scope: !3865)
!3867 = !DILocation(line: 848, column: 10, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 848, column: 9)
!3869 = !DILocation(line: 848, column: 13, scope: !3868)
!3870 = !DILocation(line: 848, column: 19, scope: !3868)
!3871 = !DILocation(line: 848, column: 36, scope: !3868)
!3872 = !DILocation(line: 848, column: 40, scope: !3868)
!3873 = !DILocation(line: 848, column: 67, scope: !3868)
!3874 = !DILocation(line: 848, column: 9, scope: !3865)
!3875 = !DILocation(line: 849, column: 19, scope: !3868)
!3876 = !DILocation(line: 849, column: 7, scope: !3868)
!3877 = distinct !{!3877, !3862, !3878}
!3878 = !DILocation(line: 849, column: 20, scope: !3863)
!3879 = !DILocation(line: 851, column: 13, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 851, column: 7)
!3881 = !DILocation(line: 851, column: 28, scope: !3880)
!3882 = !DILocation(line: 851, column: 19, scope: !3880)
!3883 = !DILocation(line: 852, column: 7, scope: !3880)
!3884 = !DILocation(line: 852, column: 10, scope: !3880)
!3885 = !DILocation(line: 852, column: 42, scope: !3880)
!3886 = !DILocation(line: 851, column: 7, scope: !3846)
!3887 = !DILocation(line: 854, column: 7, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 854, column: 7)
!3889 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 853, column: 5)
!3890 = !DILocation(line: 854, column: 7, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 854, column: 7)
!3892 = !DILocation(line: 857, column: 19, scope: !3889)
!3893 = !DILocation(line: 855, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 855, column: 13)
!3895 = !DILocation(line: 855, column: 16, scope: !3894)
!3896 = !DILocation(line: 855, column: 29, scope: !3894)
!3897 = !DILocation(line: 855, column: 20, scope: !3894)
!3898 = !DILocation(line: 855, column: 13, scope: !3891)
!3899 = distinct !{!3899, !3887, !3900}
!3900 = !DILocation(line: 856, column: 11, scope: !3888)
!3901 = !DILocation(line: 857, column: 7, scope: !3889)
!3902 = !DILocation(line: 858, column: 5, scope: !3889)
!3903 = !DILocation(line: 859, column: 1, scope: !3846)
!3904 = distinct !DISubprogram(name: "permute_partial_schedule", scope: !3, file: !3, line: 620, type: !3905, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !2013, !795}
!3907 = !{!3908, !3909, !3910, !3911, !3912}
!3908 = !DILocalVariable(name: "ps", arg: 1, scope: !3904, file: !3, line: 620, type: !2013)
!3909 = !DILocalVariable(name: "last", arg: 2, scope: !3904, file: !3, line: 620, type: !795)
!3910 = !DILocalVariable(name: "ii", scope: !3904, file: !3, line: 622, type: !750)
!3911 = !DILocalVariable(name: "row", scope: !3904, file: !3, line: 623, type: !750)
!3912 = !DILocalVariable(name: "ps_ij", scope: !3904, file: !3, line: 624, type: !2021)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 622, column: 16, scope: !3904)
!3915 = !DILocation(line: 0, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 627, column: 5)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 626, column: 3)
!3918 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 626, column: 3)
!3919 = !DILocation(line: 0, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 628, column: 11)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 627, column: 5)
!3922 = !DILocation(line: 626, column: 8, scope: !3918)
!3923 = !DILocation(line: 0, scope: !3918)
!3924 = !DILocation(line: 626, column: 21, scope: !3917)
!3925 = !DILocation(line: 626, column: 3, scope: !3918)
!3926 = !DILocation(line: 627, column: 22, scope: !3916)
!3927 = !DILocation(line: 627, column: 18, scope: !3916)
!3928 = !DILocation(line: 627, column: 10, scope: !3916)
!3929 = !DILocation(line: 627, column: 5, scope: !3916)
!3930 = !DILocation(line: 628, column: 11, scope: !3920)
!3931 = !DILocation(line: 628, column: 38, scope: !3920)
!3932 = !DILocation(line: 628, column: 44, scope: !3920)
!3933 = !DILocation(line: 628, column: 28, scope: !3920)
!3934 = !DILocation(line: 628, column: 11, scope: !3921)
!3935 = !DILocation(line: 629, column: 41, scope: !3920)
!3936 = !DILocation(line: 629, column: 8, scope: !3920)
!3937 = !DILocation(line: 627, column: 55, scope: !3921)
!3938 = !DILocation(line: 627, column: 5, scope: !3921)
!3939 = distinct !{!3939, !3929, !3940}
!3940 = !DILocation(line: 630, column: 24, scope: !3916)
!3941 = !DILocation(line: 626, column: 31, scope: !3917)
!3942 = !DILocation(line: 626, column: 3, scope: !3917)
!3943 = distinct !{!3943, !3925, !3944}
!3944 = !DILocation(line: 630, column: 24, scope: !3918)
!3945 = !DILocation(line: 631, column: 1, scope: !3904)
!3946 = distinct !DISubprogram(name: "generate_reg_moves", scope: !3, file: !3, line: 448, type: !3947, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3949)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!2063, !2013, !749}
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3960, !3961, !3962, !3963, !3965, !3966, !3967, !3968, !3973, !3978, !3982, !3983, !3984, !3995}
!3950 = !DILocalVariable(name: "ps", arg: 1, scope: !3946, file: !3, line: 448, type: !2013)
!3951 = !DILocalVariable(name: "rescan", arg: 2, scope: !3946, file: !3, line: 448, type: !749)
!3952 = !DILocalVariable(name: "g", scope: !3946, file: !3, line: 450, type: !758)
!3953 = !DILocalVariable(name: "ii", scope: !3946, file: !3, line: 451, type: !750)
!3954 = !DILocalVariable(name: "i", scope: !3946, file: !3, line: 452, type: !750)
!3955 = !DILocalVariable(name: "reg_move_replaces", scope: !3946, file: !3, line: 453, type: !2063)
!3956 = !DILocalVariable(name: "u", scope: !3957, file: !3, line: 457, type: !1962)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 456, column: 5)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 455, column: 3)
!3959 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 455, column: 3)
!3960 = !DILocalVariable(name: "e", scope: !3957, file: !3, line: 458, type: !1970)
!3961 = !DILocalVariable(name: "nreg_moves", scope: !3957, file: !3, line: 459, type: !750)
!3962 = !DILocalVariable(name: "i_reg_move", scope: !3957, file: !3, line: 459, type: !750)
!3963 = !DILocalVariable(name: "uses_of_defs", scope: !3957, file: !3, line: 460, type: !3964)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!3965 = !DILocalVariable(name: "last_reg_move", scope: !3957, file: !3, line: 461, type: !795)
!3966 = !DILocalVariable(name: "prev_reg", scope: !3957, file: !3, line: 462, type: !795)
!3967 = !DILocalVariable(name: "old_reg", scope: !3957, file: !3, line: 462, type: !795)
!3968 = !DILocalVariable(name: "nreg_moves4e", scope: !3969, file: !3, line: 469, type: !750)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 468, column: 4)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 467, column: 6)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 466, column: 7)
!3972 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 466, column: 7)
!3973 = !DILocalVariable(name: "dest_copy", scope: !3974, file: !3, line: 495, type: !750)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 494, column: 4)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 493, column: 6)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 492, column: 7)
!3977 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 492, column: 7)
!3978 = !DILocalVariable(name: "i_use", scope: !3979, file: !3, line: 517, type: !7)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 516, column: 2)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 515, column: 7)
!3981 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 515, column: 7)
!3982 = !DILocalVariable(name: "new_reg", scope: !3979, file: !3, line: 518, type: !795)
!3983 = !DILocalVariable(name: "reg_move", scope: !3979, file: !3, line: 519, type: !795)
!3984 = !DILocalVariable(name: "sbi", scope: !3979, file: !3, line: 520, type: !3985)
!3985 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap_iterator", file: !1992, line: 111, baseType: !3986)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1992, line: 96, size: 256, elements: !3987)
!3987 = !{!3988, !3991, !3992, !3993, !3994}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3986, file: !1992, line: 98, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3986, file: !1992, line: 101, baseType: !7, size: 32, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "word_num", scope: !3986, file: !1992, line: 104, baseType: !7, size: 32, offset: 96)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !3986, file: !1992, line: 107, baseType: !7, size: 32, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3986, file: !1992, line: 110, baseType: !864, size: 64, offset: 192)
!3995 = !DILocalVariable(name: "rep", scope: !3996, file: !3, line: 530, type: !2063)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 529, column: 6)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 528, column: 4)
!3998 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 528, column: 4)
!3999 = !DILocation(line: 0, scope: !3946)
!4000 = !DILocation(line: 450, column: 19, scope: !3946)
!4001 = !DILocation(line: 451, column: 16, scope: !3946)
!4002 = !DILocation(line: 0, scope: !3958)
!4003 = !DILocation(line: 0, scope: !3957)
!4004 = !DILocation(line: 0, scope: !3979)
!4005 = !DILocation(line: 455, column: 8, scope: !3959)
!4006 = !DILocation(line: 453, column: 34, scope: !3946)
!4007 = !DILocation(line: 455, column: 22, scope: !3958)
!4008 = !DILocation(line: 455, column: 17, scope: !3958)
!4009 = !DILocation(line: 455, column: 3, scope: !3959)
!4010 = !DILocation(line: 457, column: 28, scope: !3957)
!4011 = !DILocation(line: 466, column: 19, scope: !3972)
!4012 = !DILocation(line: 466, column: 12, scope: !3972)
!4013 = !DILocation(line: 0, scope: !3972)
!4014 = !DILocation(line: 466, column: 7, scope: !3972)
!4015 = !DILocation(line: 467, column: 9, scope: !3970)
!4016 = !DILocation(line: 467, column: 14, scope: !3970)
!4017 = !DILocation(line: 467, column: 26, scope: !3970)
!4018 = !DILocation(line: 467, column: 32, scope: !3970)
!4019 = !DILocation(line: 467, column: 43, scope: !3970)
!4020 = !DILocation(line: 467, column: 37, scope: !3970)
!4021 = !DILocation(line: 467, column: 6, scope: !3971)
!4022 = !DILocation(line: 469, column: 26, scope: !3969)
!4023 = !DILocation(line: 469, column: 49, scope: !3969)
!4024 = !DILocation(line: 469, column: 47, scope: !3969)
!4025 = !DILocation(line: 471, column: 20, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 471, column: 17)
!4027 = !DILocation(line: 471, column: 29, scope: !4026)
!4028 = !DILocation(line: 471, column: 17, scope: !3969)
!4029 = !DILocation(line: 472, column: 74, scope: !4026)
!4030 = !DILocation(line: 472, column: 15, scope: !4026)
!4031 = !DILocation(line: 0, scope: !3969)
!4032 = !DILocation(line: 476, column: 10, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 476, column: 10)
!4034 = !DILocation(line: 476, column: 33, scope: !4033)
!4035 = !DILocation(line: 476, column: 30, scope: !4033)
!4036 = !DILocation(line: 477, column: 3, scope: !4033)
!4037 = !DILocation(line: 477, column: 6, scope: !4033)
!4038 = !DILocation(line: 477, column: 31, scope: !4033)
!4039 = !DILocation(line: 477, column: 29, scope: !4033)
!4040 = !DILocation(line: 476, column: 10, scope: !3969)
!4041 = !DILocation(line: 480, column: 19, scope: !3969)
!4042 = !DILocation(line: 481, column: 4, scope: !3969)
!4043 = !DILocation(line: 466, column: 34, scope: !3971)
!4044 = !DILocation(line: 466, column: 7, scope: !3971)
!4045 = distinct !{!4045, !4014, !4046}
!4046 = !DILocation(line: 481, column: 4, scope: !3972)
!4047 = !DILocation(line: 483, column: 22, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 483, column: 11)
!4049 = !DILocation(line: 483, column: 11, scope: !3957)
!4050 = !DILocation(line: 490, column: 22, scope: !3957)
!4051 = !DILocation(line: 491, column: 7, scope: !3957)
!4052 = !DILocation(line: 492, column: 12, scope: !3977)
!4053 = !DILocation(line: 0, scope: !3977)
!4054 = !DILocation(line: 492, column: 7, scope: !3977)
!4055 = !DILocation(line: 493, column: 9, scope: !3975)
!4056 = !DILocation(line: 493, column: 14, scope: !3975)
!4057 = !DILocation(line: 493, column: 26, scope: !3975)
!4058 = !DILocation(line: 493, column: 32, scope: !3975)
!4059 = !DILocation(line: 493, column: 43, scope: !3975)
!4060 = !DILocation(line: 493, column: 37, scope: !3975)
!4061 = !DILocation(line: 493, column: 6, scope: !3976)
!4062 = !DILocation(line: 495, column: 23, scope: !3974)
!4063 = !DILocation(line: 495, column: 46, scope: !3974)
!4064 = !DILocation(line: 495, column: 44, scope: !3974)
!4065 = !DILocation(line: 497, column: 13, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 497, column: 10)
!4067 = !DILocation(line: 497, column: 22, scope: !4066)
!4068 = !DILocation(line: 497, column: 10, scope: !3974)
!4069 = !DILocation(line: 498, column: 64, scope: !4066)
!4070 = !DILocation(line: 498, column: 8, scope: !4066)
!4071 = !DILocation(line: 0, scope: !3974)
!4072 = !DILocation(line: 500, column: 10, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 500, column: 10)
!4074 = !DILocation(line: 500, column: 33, scope: !4073)
!4075 = !DILocation(line: 500, column: 30, scope: !4073)
!4076 = !DILocation(line: 501, column: 3, scope: !4073)
!4077 = !DILocation(line: 501, column: 6, scope: !4073)
!4078 = !DILocation(line: 501, column: 31, scope: !4073)
!4079 = !DILocation(line: 501, column: 29, scope: !4073)
!4080 = !DILocation(line: 500, column: 10, scope: !3974)
!4081 = !DILocation(line: 504, column: 10, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 504, column: 10)
!4083 = !DILocation(line: 504, column: 10, scope: !3974)
!4084 = !DILocation(line: 505, column: 40, scope: !4082)
!4085 = !DILocation(line: 505, column: 17, scope: !4082)
!4086 = !DILocation(line: 505, column: 55, scope: !4082)
!4087 = !DILocation(line: 505, column: 8, scope: !4082)
!4088 = !DILocation(line: 492, column: 34, scope: !3976)
!4089 = !DILocation(line: 492, column: 7, scope: !3976)
!4090 = distinct !{!4090, !4054, !4091}
!4091 = !DILocation(line: 506, column: 4, scope: !3977)
!4092 = !DILocation(line: 509, column: 7, scope: !3957)
!4093 = !DILocation(line: 509, column: 28, scope: !3957)
!4094 = !DILocation(line: 510, column: 38, scope: !3957)
!4095 = !DILocation(line: 510, column: 28, scope: !3957)
!4096 = !DILocation(line: 513, column: 26, scope: !3957)
!4097 = !DILocation(line: 515, column: 12, scope: !3981)
!4098 = !DILocation(line: 0, scope: !3981)
!4099 = !DILocation(line: 515, column: 39, scope: !3980)
!4100 = !DILocation(line: 515, column: 7, scope: !3981)
!4101 = !DILocation(line: 517, column: 4, scope: !3979)
!4102 = !DILocation(line: 517, column: 17, scope: !3979)
!4103 = !DILocation(line: 518, column: 31, scope: !3979)
!4104 = !DILocation(line: 518, column: 18, scope: !3979)
!4105 = !DILocation(line: 519, column: 19, scope: !3979)
!4106 = !DILocation(line: 520, column: 4, scope: !3979)
!4107 = !DILocation(line: 522, column: 4, scope: !3979)
!4108 = !DILocation(line: 525, column: 9, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 525, column: 8)
!4110 = !DILocation(line: 525, column: 8, scope: !3979)
!4111 = !DILocation(line: 526, column: 31, scope: !4109)
!4112 = !DILocation(line: 526, column: 6, scope: !4109)
!4113 = !DILocation(line: 528, column: 4, scope: !3998)
!4114 = !DILocation(line: 528, column: 4, scope: !3997)
!4115 = !DILocation(line: 533, column: 7, scope: !3996)
!4116 = !DILocation(line: 532, column: 14, scope: !3996)
!4117 = !DILocation(line: 0, scope: !3996)
!4118 = !DILocation(line: 534, column: 23, scope: !3996)
!4119 = !DILocation(line: 534, column: 29, scope: !3996)
!4120 = !DILocation(line: 534, column: 20, scope: !3996)
!4121 = !DILocation(line: 534, column: 36, scope: !3996)
!4122 = !DILocation(line: 534, column: 18, scope: !3996)
!4123 = !DILocation(line: 535, column: 13, scope: !3996)
!4124 = !DILocation(line: 535, column: 22, scope: !3996)
!4125 = !DILocation(line: 536, column: 13, scope: !3996)
!4126 = !DILocation(line: 536, column: 21, scope: !3996)
!4127 = !DILocation(line: 538, column: 14, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 538, column: 12)
!4129 = !DILocation(line: 538, column: 12, scope: !3996)
!4130 = !DILocation(line: 542, column: 10, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 541, column: 3)
!4132 = !DILocation(line: 542, column: 15, scope: !4131)
!4133 = !DILocation(line: 546, column: 24, scope: !3996)
!4134 = !DILocation(line: 546, column: 37, scope: !3996)
!4135 = !DILocation(line: 546, column: 8, scope: !3996)
!4136 = !DILocation(line: 548, column: 22, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 547, column: 12)
!4138 = !DILocation(line: 548, column: 28, scope: !4137)
!4139 = !DILocation(line: 548, column: 19, scope: !4137)
!4140 = !DILocation(line: 548, column: 35, scope: !4137)
!4141 = !DILocation(line: 548, column: 3, scope: !4137)
!4142 = distinct !{!4142, !4113, !4143}
!4143 = !DILocation(line: 549, column: 6, scope: !3998)
!4144 = !DILocation(line: 552, column: 2, scope: !3980)
!4145 = !DILocation(line: 515, column: 63, scope: !3980)
!4146 = !DILocation(line: 515, column: 7, scope: !3980)
!4147 = distinct !{!4147, !4100, !4148}
!4148 = !DILocation(line: 552, column: 2, scope: !3981)
!4149 = !DILocation(line: 553, column: 7, scope: !3957)
!4150 = !DILocation(line: 554, column: 5, scope: !3958)
!4151 = !DILocation(line: 455, column: 34, scope: !3958)
!4152 = !DILocation(line: 455, column: 3, scope: !3958)
!4153 = distinct !{!4153, !4009, !4154}
!4154 = !DILocation(line: 554, column: 5, scope: !3959)
!4155 = !DILocation(line: 555, column: 3, scope: !3946)
!4156 = distinct !DISubprogram(name: "print_node_sched_params", scope: !3, file: !3, line: 410, type: !4157, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4159)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{null, !2249, !750, !758}
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4168, !4169}
!4160 = !DILocalVariable(name: "file", arg: 1, scope: !4156, file: !3, line: 410, type: !2249)
!4161 = !DILocalVariable(name: "num_nodes", arg: 2, scope: !4156, file: !3, line: 410, type: !750)
!4162 = !DILocalVariable(name: "g", arg: 3, scope: !4156, file: !3, line: 410, type: !758)
!4163 = !DILocalVariable(name: "i", scope: !4156, file: !3, line: 412, type: !750)
!4164 = !DILocalVariable(name: "nsp", scope: !4165, file: !3, line: 418, type: !2052)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 417, column: 5)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 416, column: 3)
!4167 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 416, column: 3)
!4168 = !DILocalVariable(name: "reg_move", scope: !4165, file: !3, line: 419, type: !795)
!4169 = !DILocalVariable(name: "j", scope: !4165, file: !3, line: 420, type: !750)
!4170 = !DILocation(line: 0, scope: !4156)
!4171 = !DILocation(line: 414, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 414, column: 7)
!4173 = !DILocation(line: 414, column: 7, scope: !4156)
!4174 = !DILocation(line: 0, scope: !4165)
!4175 = !DILocation(line: 416, column: 3, scope: !4167)
!4176 = !DILocation(line: 0, scope: !4167)
!4177 = !DILocation(line: 416, column: 17, scope: !4166)
!4178 = !DILocation(line: 418, column: 36, scope: !4165)
!4179 = !DILocation(line: 419, column: 27, scope: !4165)
!4180 = !DILocation(line: 423, column: 10, scope: !4165)
!4181 = !DILocation(line: 422, column: 7, scope: !4165)
!4182 = !DILocation(line: 424, column: 44, scope: !4165)
!4183 = !DILocation(line: 424, column: 7, scope: !4165)
!4184 = !DILocation(line: 425, column: 44, scope: !4165)
!4185 = !DILocation(line: 425, column: 7, scope: !4165)
!4186 = !DILocation(line: 426, column: 50, scope: !4165)
!4187 = !DILocation(line: 426, column: 7, scope: !4165)
!4188 = !DILocation(line: 427, column: 12, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 427, column: 7)
!4190 = !DILocation(line: 0, scope: !4189)
!4191 = !DILocation(line: 427, column: 28, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 427, column: 7)
!4193 = !DILocation(line: 427, column: 21, scope: !4192)
!4194 = !DILocation(line: 427, column: 7, scope: !4189)
!4195 = !DILocation(line: 429, column: 4, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 428, column: 2)
!4197 = !DILocation(line: 430, column: 4, scope: !4196)
!4198 = !DILocation(line: 431, column: 15, scope: !4196)
!4199 = !DILocation(line: 427, column: 41, scope: !4192)
!4200 = !DILocation(line: 427, column: 7, scope: !4192)
!4201 = distinct !{!4201, !4194, !4202}
!4202 = !DILocation(line: 432, column: 2, scope: !4189)
!4203 = !DILocation(line: 416, column: 31, scope: !4166)
!4204 = !DILocation(line: 416, column: 3, scope: !4166)
!4205 = distinct !{!4205, !4175, !4206}
!4206 = !DILocation(line: 433, column: 5, scope: !4167)
!4207 = !DILocation(line: 434, column: 1, scope: !4156)
!4208 = distinct !DISubprogram(name: "generate_prolog_epilog", scope: !3, file: !3, line: 702, type: !4209, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{null, !2013, !1376, !795, !795}
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219}
!4212 = !DILocalVariable(name: "ps", arg: 1, scope: !4208, file: !3, line: 702, type: !2013)
!4213 = !DILocalVariable(name: "loop", arg: 2, scope: !4208, file: !3, line: 702, type: !1376)
!4214 = !DILocalVariable(name: "count_reg", arg: 3, scope: !4208, file: !3, line: 703, type: !795)
!4215 = !DILocalVariable(name: "count_init", arg: 4, scope: !4208, file: !3, line: 703, type: !795)
!4216 = !DILocalVariable(name: "i", scope: !4208, file: !3, line: 705, type: !750)
!4217 = !DILocalVariable(name: "last_stage", scope: !4208, file: !3, line: 706, type: !750)
!4218 = !DILocalVariable(name: "e", scope: !4208, file: !3, line: 707, type: !781)
!4219 = !DILocalVariable(name: "sub_reg", scope: !4220, file: !3, line: 718, type: !795)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 713, column: 5)
!4221 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 712, column: 7)
!4222 = !DILocation(line: 0, scope: !4208)
!4223 = !DILocation(line: 706, column: 20, scope: !4208)
!4224 = !DILocation(line: 706, column: 40, scope: !4208)
!4225 = !DILocation(line: 710, column: 3, scope: !4208)
!4226 = !DILocation(line: 712, column: 7, scope: !4208)
!4227 = !DILocation(line: 0, scope: !4220)
!4228 = !DILocation(line: 721, column: 49, scope: !4220)
!4229 = !DILocation(line: 720, column: 17, scope: !4220)
!4230 = !DILocation(line: 723, column: 7, scope: !4220)
!4231 = !DILocation(line: 724, column: 11, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 724, column: 11)
!4233 = !DILocation(line: 724, column: 30, scope: !4232)
!4234 = !DILocation(line: 724, column: 27, scope: !4232)
!4235 = !DILocation(line: 724, column: 11, scope: !4220)
!4236 = !DILocation(line: 725, column: 9, scope: !4232)
!4237 = !DILocation(line: 728, column: 8, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 728, column: 3)
!4239 = !DILocation(line: 0, scope: !4238)
!4240 = !DILocation(line: 728, column: 17, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 728, column: 3)
!4242 = !DILocation(line: 728, column: 3, scope: !4238)
!4243 = !DILocation(line: 729, column: 5, scope: !4241)
!4244 = !DILocation(line: 728, column: 32, scope: !4241)
!4245 = !DILocation(line: 728, column: 3, scope: !4241)
!4246 = distinct !{!4246, !4242, !4247}
!4247 = !DILocation(line: 729, column: 54, scope: !4238)
!4248 = !DILocation(line: 732, column: 7, scope: !4208)
!4249 = !DILocation(line: 733, column: 29, scope: !4208)
!4250 = !DILocation(line: 733, column: 3, scope: !4208)
!4251 = !DILocation(line: 735, column: 3, scope: !4208)
!4252 = !DILocation(line: 738, column: 3, scope: !4208)
!4253 = !DILocation(line: 740, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 740, column: 3)
!4255 = !DILocation(line: 0, scope: !4254)
!4256 = !DILocation(line: 740, column: 17, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 740, column: 3)
!4258 = !DILocation(line: 740, column: 3, scope: !4254)
!4259 = !DILocation(line: 741, column: 38, scope: !4257)
!4260 = !DILocation(line: 741, column: 5, scope: !4257)
!4261 = !DILocation(line: 740, column: 3, scope: !4257)
!4262 = distinct !{!4262, !4258, !4263}
!4263 = !DILocation(line: 741, column: 67, scope: !4254)
!4264 = !DILocation(line: 744, column: 3, scope: !4208)
!4265 = !DILocation(line: 745, column: 7, scope: !4208)
!4266 = !DILocation(line: 746, column: 29, scope: !4208)
!4267 = !DILocation(line: 746, column: 3, scope: !4208)
!4268 = !DILocation(line: 747, column: 3, scope: !4208)
!4269 = !DILocation(line: 748, column: 1, scope: !4208)
!4270 = distinct !DISubprogram(name: "free_undo_replace_buff", scope: !3, file: !3, line: 560, type: !4271, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{null, !2063}
!4273 = !{!4274, !4275}
!4274 = !DILocalVariable(name: "reg_move_replaces", arg: 1, scope: !4270, file: !3, line: 560, type: !2063)
!4275 = !DILocalVariable(name: "rep", scope: !4276, file: !3, line: 565, type: !2063)
!4276 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 564, column: 5)
!4277 = !DILocation(line: 0, scope: !4270)
!4278 = !DILocation(line: 563, column: 3, scope: !4270)
!4279 = !DILocation(line: 0, scope: !4276)
!4280 = !DILocation(line: 567, column: 46, scope: !4276)
!4281 = !DILocation(line: 568, column: 13, scope: !4276)
!4282 = !DILocation(line: 568, column: 7, scope: !4276)
!4283 = distinct !{!4283, !4278, !4284}
!4284 = !DILocation(line: 569, column: 5, scope: !4270)
!4285 = !DILocation(line: 570, column: 1, scope: !4270)
!4286 = distinct !DISubprogram(name: "free_partial_schedule", scope: !3, file: !3, line: 2466, type: !3704, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4287)
!4287 = !{!4288}
!4288 = !DILocalVariable(name: "ps", arg: 1, scope: !4286, file: !3, line: 2466, type: !2013)
!4289 = !DILocation(line: 0, scope: !4286)
!4290 = !DILocation(line: 2468, column: 8, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 2468, column: 7)
!4292 = !DILocation(line: 2468, column: 7, scope: !4286)
!4293 = !DILocation(line: 2470, column: 3, scope: !4286)
!4294 = !DILocation(line: 2471, column: 13, scope: !4286)
!4295 = !DILocation(line: 2471, column: 3, scope: !4286)
!4296 = !DILocation(line: 2472, column: 9, scope: !4286)
!4297 = !DILocation(line: 2472, column: 3, scope: !4286)
!4298 = !DILocation(line: 2473, column: 1, scope: !4286)
!4299 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !142, file: !142, line: 85, type: !4300, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4304)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!7, !4302}
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1368)
!4304 = !{!4305}
!4305 = !DILocalVariable(name: "vec_", arg: 1, scope: !4299, file: !142, line: 85, type: !4302)
!4306 = !DILocation(line: 0, scope: !4299)
!4307 = !DILocation(line: 85, column: 1, scope: !4299)
!4308 = distinct !DISubprogram(name: "compute_jump_reg_dependencies", scope: !3, file: !3, line: 247, type: !2098, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4309)
!4309 = !{!4310, !4311, !4312, !4313}
!4310 = !DILocalVariable(name: "insn", arg: 1, scope: !4308, file: !3, line: 247, type: !795)
!4311 = !DILocalVariable(name: "cond_exec", arg: 2, scope: !4308, file: !3, line: 248, type: !2100)
!4312 = !DILocalVariable(name: "used", arg: 3, scope: !4308, file: !3, line: 249, type: !2100)
!4313 = !DILocalVariable(name: "set", arg: 4, scope: !4308, file: !3, line: 250, type: !2100)
!4314 = !DILocation(line: 0, scope: !4308)
!4315 = !DILocation(line: 252, column: 1, scope: !4308)
!4316 = !DILocation(line: 0, scope: !2183)
!4317 = !DILocation(line: 242, column: 25, scope: !2183)
!4318 = !DILocation(line: 242, column: 3, scope: !2183)
!4319 = !DILocation(line: 243, column: 3, scope: !2183)
!4320 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1311, file: !1311, line: 32, type: !4321, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4323)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!2033, !750}
!4323 = !{!4324}
!4324 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4320, file: !1311, line: 32, type: !750)
!4325 = !DILocation(line: 0, scope: !4320)
!4326 = !DILocation(line: 32, column: 1, scope: !4320)
!4327 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !142, file: !142, line: 85, type: !4328, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4330)
!4328 = !DISubroutineType(types: !4329)
!4329 = !{!750, !4302, !7, !3145}
!4330 = !{!4331, !4332, !4333}
!4331 = !DILocalVariable(name: "vec_", arg: 1, scope: !4327, file: !142, line: 85, type: !4302)
!4332 = !DILocalVariable(name: "ix_", arg: 2, scope: !4327, file: !142, line: 85, type: !7)
!4333 = !DILocalVariable(name: "ptr", arg: 3, scope: !4327, file: !142, line: 85, type: !3145)
!4334 = !DILocation(line: 0, scope: !4327)
!4335 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1311, file: !1311, line: 31, type: !4336, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4339)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!2012, !4338, !750}
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!4339 = !{!4340, !4341, !4342}
!4340 = !DILocalVariable(name: "vec_", arg: 1, scope: !4335, file: !1311, line: 31, type: !4338)
!4341 = !DILocalVariable(name: "obj_", arg: 2, scope: !4335, file: !1311, line: 31, type: !750)
!4342 = !DILocalVariable(name: "slot_", scope: !4335, file: !1311, line: 31, type: !2012)
!4343 = !DILocation(line: 0, scope: !4335)
!4344 = !DILocation(line: 31, column: 1, scope: !4335)
!4345 = distinct !DISubprogram(name: "loop_outer", scope: !142, file: !142, line: 434, type: !4346, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4350)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!1376, !4348}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1377)
!4350 = !{!4351, !4352}
!4351 = !DILocalVariable(name: "loop", arg: 1, scope: !4345, file: !142, line: 434, type: !4348)
!4352 = !DILocalVariable(name: "n", scope: !4345, file: !142, line: 436, type: !7)
!4353 = !DILocation(line: 0, scope: !4345)
!4354 = !DILocation(line: 436, column: 16, scope: !4345)
!4355 = !DILocation(line: 438, column: 9, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4345, file: !142, line: 438, column: 7)
!4357 = !DILocation(line: 438, column: 7, scope: !4345)
!4358 = !DILocation(line: 441, column: 10, scope: !4345)
!4359 = !DILocation(line: 441, column: 3, scope: !4345)
!4360 = !DILocation(line: 442, column: 1, scope: !4345)
!4361 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !142, file: !142, line: 85, type: !4362, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4364)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!1375, !4302, !7}
!4364 = !{!4365, !4366}
!4365 = !DILocalVariable(name: "vec_", arg: 1, scope: !4361, file: !142, line: 85, type: !4302)
!4366 = !DILocalVariable(name: "ix_", arg: 2, scope: !4361, file: !142, line: 85, type: !7)
!4367 = !DILocation(line: 0, scope: !4361)
!4368 = !DILocation(line: 85, column: 1, scope: !4361)
!4369 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !4370, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!7, !4372}
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!4374 = !{!4375}
!4375 = !DILocalVariable(name: "vec_", arg: 1, scope: !4369, file: !155, line: 150, type: !4372)
!4376 = !DILocation(line: 0, scope: !4369)
!4377 = !DILocation(line: 150, column: 1, scope: !4369)
!4378 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1311, file: !1311, line: 31, type: !4379, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4383)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!750, !4381, !7, !2012}
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!4383 = !{!4384, !4385, !4386}
!4384 = !DILocalVariable(name: "vec_", arg: 1, scope: !4378, file: !1311, line: 31, type: !4381)
!4385 = !DILocalVariable(name: "ix_", arg: 2, scope: !4378, file: !1311, line: 31, type: !7)
!4386 = !DILocalVariable(name: "ptr", arg: 3, scope: !4378, file: !1311, line: 31, type: !2012)
!4387 = !DILocation(line: 0, scope: !4378)
!4388 = !DILocation(line: 31, column: 1, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4378, file: !1311, line: 31, column: 1)
!4390 = !DILocation(line: 31, column: 1, scope: !4378)
!4391 = !DILocation(line: 31, column: 1, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4389, file: !1311, line: 31, column: 1)
!4393 = !DILocation(line: 31, column: 1, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4389, file: !1311, line: 31, column: 1)
!4395 = !DILocation(line: 0, scope: !4389)
!4396 = distinct !DISubprogram(name: "get_loop", scope: !142, file: !142, line: 417, type: !4397, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4399)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!1376, !7}
!4399 = !{!4400}
!4400 = !DILocalVariable(name: "num", arg: 1, scope: !4396, file: !142, line: 417, type: !7)
!4401 = !DILocation(line: 0, scope: !4396)
!4402 = !DILocation(line: 419, column: 10, scope: !4396)
!4403 = !DILocation(line: 419, column: 3, scope: !4396)
!4404 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1311, file: !1311, line: 32, type: !4405, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4408)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{null, !4407}
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!4408 = !{!4409}
!4409 = !DILocalVariable(name: "vec_", arg: 1, scope: !4404, file: !1311, line: 32, type: !4407)
!4410 = !DILocation(line: 0, scope: !4404)
!4411 = !DILocation(line: 32, column: 1, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4404, file: !1311, line: 32, column: 1)
!4413 = !DILocation(line: 32, column: 1, scope: !4404)
!4414 = distinct !DISubprogram(name: "calculate_order_params", scope: !3, file: !3, line: 2175, type: !4415, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!2051, !758, !750, !2012}
!4417 = !{!4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4430, !4434}
!4418 = !DILocalVariable(name: "g", arg: 1, scope: !4414, file: !3, line: 2175, type: !758)
!4419 = !DILocalVariable(name: "mii", arg: 2, scope: !4414, file: !3, line: 2175, type: !750)
!4420 = !DILocalVariable(name: "pmax_asap", arg: 3, scope: !4414, file: !3, line: 2175, type: !2012)
!4421 = !DILocalVariable(name: "u", scope: !4414, file: !3, line: 2177, type: !750)
!4422 = !DILocalVariable(name: "max_asap", scope: !4414, file: !3, line: 2178, type: !750)
!4423 = !DILocalVariable(name: "num_nodes", scope: !4414, file: !3, line: 2179, type: !750)
!4424 = !DILocalVariable(name: "e", scope: !4414, file: !3, line: 2180, type: !1970)
!4425 = !DILocalVariable(name: "node_order_params_arr", scope: !4414, file: !3, line: 2182, type: !2051)
!4426 = !DILocalVariable(name: "u_node", scope: !4427, file: !3, line: 2201, type: !1962)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 2200, column: 5)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 2199, column: 3)
!4429 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2199, column: 3)
!4430 = !DILocalVariable(name: "u_node", scope: !4431, file: !3, line: 2213, type: !1962)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 2212, column: 5)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 2211, column: 3)
!4433 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2211, column: 3)
!4434 = !DILocalVariable(name: "u_node", scope: !4435, file: !3, line: 2231, type: !1962)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 2230, column: 7)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 2229, column: 5)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2229, column: 5)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 2227, column: 3)
!4439 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2226, column: 7)
!4440 = !DILocation(line: 0, scope: !4414)
!4441 = !DILocation(line: 2179, column: 22, scope: !4414)
!4442 = !DILocation(line: 2185, column: 43, scope: !4414)
!4443 = !DILocation(line: 2185, column: 34, scope: !4414)
!4444 = !DILocation(line: 2185, column: 27, scope: !4414)
!4445 = !DILocation(line: 0, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 2189, column: 3)
!4447 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2189, column: 3)
!4448 = !DILocation(line: 2189, column: 8, scope: !4447)
!4449 = !DILocation(line: 0, scope: !4447)
!4450 = !DILocation(line: 2189, column: 17, scope: !4446)
!4451 = !DILocation(line: 2189, column: 3, scope: !4447)
!4452 = !DILocation(line: 2199, column: 3, scope: !4429)
!4453 = !DILocation(line: 2190, column: 29, scope: !4446)
!4454 = !DILocation(line: 2190, column: 8, scope: !4446)
!4455 = !DILocation(line: 2190, column: 21, scope: !4446)
!4456 = !DILocation(line: 2190, column: 26, scope: !4446)
!4457 = !DILocation(line: 2189, column: 31, scope: !4446)
!4458 = !DILocation(line: 2189, column: 3, scope: !4446)
!4459 = distinct !{!4459, !4451, !4460}
!4460 = !DILocation(line: 2190, column: 52, scope: !4447)
!4461 = !DILocation(line: 0, scope: !4429)
!4462 = !DILocation(line: 2199, column: 17, scope: !4428)
!4463 = !DILocation(line: 2201, column: 33, scope: !4427)
!4464 = !DILocation(line: 0, scope: !4427)
!4465 = !DILocation(line: 2203, column: 7, scope: !4427)
!4466 = !DILocation(line: 2203, column: 21, scope: !4427)
!4467 = !DILocation(line: 2204, column: 24, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2204, column: 7)
!4469 = !DILocation(line: 2204, column: 12, scope: !4468)
!4470 = !DILocation(line: 0, scope: !4468)
!4471 = !DILocation(line: 2204, column: 7, scope: !4468)
!4472 = !DILocation(line: 2205, column: 9, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 2205, column: 6)
!4474 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 2204, column: 7)
!4475 = !DILocation(line: 2205, column: 18, scope: !4473)
!4476 = !DILocation(line: 2205, column: 6, scope: !4474)
!4477 = !DILocation(line: 2206, column: 20, scope: !4473)
!4478 = !DILocation(line: 2206, column: 18, scope: !4473)
!4479 = !DILocation(line: 2206, column: 4, scope: !4473)
!4480 = !DILocation(line: 2204, column: 38, scope: !4474)
!4481 = !DILocation(line: 2204, column: 7, scope: !4474)
!4482 = distinct !{!4482, !4471, !4483}
!4483 = !DILocation(line: 2206, column: 20, scope: !4468)
!4484 = !DILocation(line: 2208, column: 18, scope: !4427)
!4485 = !DILocation(line: 2199, column: 31, scope: !4428)
!4486 = !DILocation(line: 2199, column: 3, scope: !4428)
!4487 = distinct !{!4487, !4452, !4488}
!4488 = !DILocation(line: 2209, column: 5, scope: !4429)
!4489 = !DILocation(line: 2211, column: 8, scope: !4433)
!4490 = !DILocation(line: 0, scope: !4433)
!4491 = !DILocation(line: 2211, column: 29, scope: !4432)
!4492 = !DILocation(line: 2211, column: 3, scope: !4433)
!4493 = !DILocation(line: 2213, column: 33, scope: !4431)
!4494 = !DILocation(line: 0, scope: !4431)
!4495 = !DILocation(line: 2215, column: 7, scope: !4431)
!4496 = !DILocation(line: 2215, column: 21, scope: !4431)
!4497 = !DILocation(line: 2216, column: 7, scope: !4431)
!4498 = !DILocation(line: 2216, column: 23, scope: !4431)
!4499 = !DILocation(line: 2217, column: 24, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2217, column: 7)
!4501 = !DILocation(line: 2217, column: 12, scope: !4500)
!4502 = !DILocation(line: 0, scope: !4500)
!4503 = !DILocation(line: 2217, column: 7, scope: !4500)
!4504 = !DILocation(line: 2218, column: 9, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 2218, column: 6)
!4506 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2217, column: 7)
!4507 = !DILocation(line: 2218, column: 18, scope: !4505)
!4508 = !DILocation(line: 2218, column: 6, scope: !4506)
!4509 = !DILocation(line: 2220, column: 22, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 2219, column: 4)
!4511 = !DILocation(line: 2220, column: 20, scope: !4510)
!4512 = !DILocation(line: 2222, column: 24, scope: !4510)
!4513 = !DILocation(line: 2222, column: 22, scope: !4510)
!4514 = !DILocation(line: 2224, column: 4, scope: !4510)
!4515 = !DILocation(line: 2217, column: 39, scope: !4506)
!4516 = !DILocation(line: 2217, column: 7, scope: !4506)
!4517 = distinct !{!4517, !4503, !4518}
!4518 = !DILocation(line: 2224, column: 4, scope: !4500)
!4519 = !DILocation(line: 2211, column: 3, scope: !4432)
!4520 = distinct !{!4520, !4492, !4521}
!4521 = !DILocation(line: 2225, column: 5, scope: !4433)
!4522 = !DILocation(line: 2226, column: 7, scope: !4439)
!4523 = !DILocation(line: 2226, column: 7, scope: !4414)
!4524 = !DILocation(line: 2228, column: 5, scope: !4438)
!4525 = !DILocation(line: 2229, column: 10, scope: !4437)
!4526 = !DILocation(line: 0, scope: !4437)
!4527 = !DILocation(line: 2229, column: 19, scope: !4436)
!4528 = !DILocation(line: 2229, column: 5, scope: !4437)
!4529 = !DILocation(line: 2231, column: 35, scope: !4435)
!4530 = !DILocation(line: 0, scope: !4435)
!4531 = !DILocation(line: 2233, column: 18, scope: !4435)
!4532 = !DILocation(line: 2234, column: 18, scope: !4435)
!4533 = !DILocation(line: 2234, column: 33, scope: !4435)
!4534 = !DILocation(line: 2234, column: 48, scope: !4435)
!4535 = !DILocation(line: 2233, column: 9, scope: !4435)
!4536 = !DILocation(line: 2229, column: 33, scope: !4436)
!4537 = !DILocation(line: 2229, column: 5, scope: !4436)
!4538 = distinct !{!4538, !4528, !4539}
!4539 = !DILocation(line: 2235, column: 7, scope: !4437)
!4540 = !DILocation(line: 2238, column: 14, scope: !4414)
!4541 = !DILocation(line: 2239, column: 3, scope: !4414)
!4542 = distinct !DISubprogram(name: "order_nodes_of_sccs", scope: !3, file: !3, line: 2126, type: !4543, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4545)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{null, !3385, !2012}
!4545 = !{!4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556}
!4546 = !DILocalVariable(name: "all_sccs", arg: 1, scope: !4542, file: !3, line: 2126, type: !3385)
!4547 = !DILocalVariable(name: "node_order", arg: 2, scope: !4542, file: !3, line: 2126, type: !2012)
!4548 = !DILocalVariable(name: "i", scope: !4542, file: !3, line: 2128, type: !750)
!4549 = !DILocalVariable(name: "pos", scope: !4542, file: !3, line: 2128, type: !750)
!4550 = !DILocalVariable(name: "g", scope: !4542, file: !3, line: 2129, type: !758)
!4551 = !DILocalVariable(name: "num_nodes", scope: !4542, file: !3, line: 2130, type: !750)
!4552 = !DILocalVariable(name: "prev_sccs", scope: !4542, file: !3, line: 2131, type: !1991)
!4553 = !DILocalVariable(name: "on_path", scope: !4542, file: !3, line: 2132, type: !1991)
!4554 = !DILocalVariable(name: "tmp", scope: !4542, file: !3, line: 2133, type: !1991)
!4555 = !DILocalVariable(name: "ones", scope: !4542, file: !3, line: 2134, type: !1991)
!4556 = !DILocalVariable(name: "scc", scope: !4557, file: !3, line: 2143, type: !3391)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 2142, column: 5)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2141, column: 3)
!4559 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2141, column: 3)
!4560 = !DILocation(line: 0, scope: !4542)
!4561 = !DILocation(line: 2129, column: 25, scope: !4542)
!4562 = !DILocation(line: 2130, column: 22, scope: !4542)
!4563 = !DILocation(line: 2131, column: 23, scope: !4542)
!4564 = !DILocation(line: 2132, column: 21, scope: !4542)
!4565 = !DILocation(line: 2133, column: 17, scope: !4542)
!4566 = !DILocation(line: 2134, column: 18, scope: !4542)
!4567 = !DILocation(line: 2136, column: 3, scope: !4542)
!4568 = !DILocation(line: 2137, column: 3, scope: !4542)
!4569 = !DILocation(line: 0, scope: !4558)
!4570 = !DILocation(line: 0, scope: !4557)
!4571 = !DILocation(line: 2141, column: 8, scope: !4559)
!4572 = !DILocation(line: 0, scope: !4559)
!4573 = !DILocation(line: 2141, column: 29, scope: !4558)
!4574 = !DILocation(line: 2141, column: 17, scope: !4558)
!4575 = !DILocation(line: 2141, column: 3, scope: !4559)
!4576 = !DILocation(line: 2162, column: 3, scope: !4542)
!4577 = !DILocation(line: 2143, column: 35, scope: !4557)
!4578 = !DILocation(line: 2143, column: 25, scope: !4557)
!4579 = !DILocation(line: 2146, column: 56, scope: !4557)
!4580 = !DILocation(line: 2146, column: 7, scope: !4557)
!4581 = !DILocation(line: 2147, column: 33, scope: !4557)
!4582 = !DILocation(line: 2147, column: 7, scope: !4557)
!4583 = !DILocation(line: 2150, column: 45, scope: !4557)
!4584 = !DILocation(line: 2150, column: 7, scope: !4557)
!4585 = !DILocation(line: 2151, column: 7, scope: !4557)
!4586 = !DILocation(line: 2154, column: 7, scope: !4557)
!4587 = !DILocation(line: 2156, column: 13, scope: !4557)
!4588 = !DILocation(line: 2141, column: 40, scope: !4558)
!4589 = !DILocation(line: 2141, column: 3, scope: !4558)
!4590 = distinct !{!4590, !4575, !4591}
!4591 = !DILocation(line: 2158, column: 5, scope: !4559)
!4592 = !DILocation(line: 2162, column: 19, scope: !4542)
!4593 = !DILocation(line: 2162, column: 14, scope: !4542)
!4594 = !DILocation(line: 2164, column: 7, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2163, column: 5)
!4596 = !DILocation(line: 2165, column: 13, scope: !4595)
!4597 = distinct !{!4597, !4576, !4598}
!4598 = !DILocation(line: 2166, column: 5, scope: !4542)
!4599 = !DILocation(line: 2167, column: 3, scope: !4542)
!4600 = !DILocation(line: 2168, column: 3, scope: !4542)
!4601 = !DILocation(line: 2169, column: 3, scope: !4542)
!4602 = !DILocation(line: 2170, column: 3, scope: !4542)
!4603 = !DILocation(line: 2171, column: 1, scope: !4542)
!4604 = distinct !DISubprogram(name: "check_nodes_order", scope: !3, file: !3, line: 2063, type: !4605, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4607)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{null, !2012, !750}
!4607 = !{!4608, !4609, !4610, !4611, !4612}
!4608 = !DILocalVariable(name: "node_order", arg: 1, scope: !4604, file: !3, line: 2063, type: !2012)
!4609 = !DILocalVariable(name: "num_nodes", arg: 2, scope: !4604, file: !3, line: 2063, type: !750)
!4610 = !DILocalVariable(name: "i", scope: !4604, file: !3, line: 2065, type: !750)
!4611 = !DILocalVariable(name: "tmp", scope: !4604, file: !3, line: 2066, type: !1991)
!4612 = !DILocalVariable(name: "u", scope: !4613, file: !3, line: 2075, type: !750)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2074, column: 5)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 2073, column: 3)
!4615 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2073, column: 3)
!4616 = !DILocation(line: 0, scope: !4604)
!4617 = !DILocation(line: 2066, column: 17, scope: !4604)
!4618 = !DILocation(line: 2068, column: 3, scope: !4604)
!4619 = !DILocation(line: 2070, column: 7, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2070, column: 7)
!4621 = !DILocation(line: 2070, column: 7, scope: !4604)
!4622 = !DILocation(line: 2071, column: 5, scope: !4620)
!4623 = !DILocation(line: 2073, column: 8, scope: !4615)
!4624 = !DILocation(line: 0, scope: !4615)
!4625 = !DILocation(line: 2073, column: 17, scope: !4614)
!4626 = !DILocation(line: 2073, column: 3, scope: !4615)
!4627 = !DILocation(line: 2075, column: 15, scope: !4613)
!4628 = !DILocation(line: 0, scope: !4613)
!4629 = !DILocation(line: 2077, column: 11, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 2077, column: 11)
!4631 = !DILocation(line: 2077, column: 11, scope: !4613)
!4632 = !DILocation(line: 2078, column: 9, scope: !4630)
!4633 = !DILocation(line: 2079, column: 7, scope: !4613)
!4634 = !DILocation(line: 2081, column: 7, scope: !4613)
!4635 = !DILocation(line: 2073, column: 31, scope: !4614)
!4636 = !DILocation(line: 2073, column: 3, scope: !4614)
!4637 = distinct !{!4637, !4626, !4638}
!4638 = !DILocation(line: 2082, column: 5, scope: !4615)
!4639 = !DILocation(line: 2084, column: 7, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2084, column: 7)
!4641 = !DILocation(line: 2084, column: 7, scope: !4604)
!4642 = !DILocation(line: 2085, column: 5, scope: !4640)
!4643 = !DILocation(line: 2087, column: 3, scope: !4604)
!4644 = !DILocation(line: 2088, column: 1, scope: !4604)
!4645 = distinct !DISubprogram(name: "order_nodes_in_scc", scope: !3, file: !3, line: 2326, type: !4646, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4648)
!4646 = !DISubroutineType(types: !4647)
!4647 = !{!750, !758, !1991, !1991, !2012, !750}
!4648 = !{!4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4665, !4667, !4668, !4669}
!4649 = !DILocalVariable(name: "g", arg: 1, scope: !4645, file: !3, line: 2326, type: !758)
!4650 = !DILocalVariable(name: "nodes_ordered", arg: 2, scope: !4645, file: !3, line: 2326, type: !1991)
!4651 = !DILocalVariable(name: "scc", arg: 3, scope: !4645, file: !3, line: 2326, type: !1991)
!4652 = !DILocalVariable(name: "node_order", arg: 4, scope: !4645, file: !3, line: 2327, type: !2012)
!4653 = !DILocalVariable(name: "pos", arg: 5, scope: !4645, file: !3, line: 2327, type: !750)
!4654 = !DILocalVariable(name: "dir", scope: !4645, file: !3, line: 2329, type: !743)
!4655 = !DILocalVariable(name: "num_nodes", scope: !4645, file: !3, line: 2330, type: !750)
!4656 = !DILocalVariable(name: "workset", scope: !4645, file: !3, line: 2331, type: !1991)
!4657 = !DILocalVariable(name: "tmp", scope: !4645, file: !3, line: 2332, type: !1991)
!4658 = !DILocalVariable(name: "zero_bitmap", scope: !4645, file: !3, line: 2333, type: !1991)
!4659 = !DILocalVariable(name: "predecessors", scope: !4645, file: !3, line: 2334, type: !1991)
!4660 = !DILocalVariable(name: "successors", scope: !4645, file: !3, line: 2335, type: !1991)
!4661 = !DILocalVariable(name: "u", scope: !4662, file: !3, line: 2356, type: !750)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 2355, column: 5)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 2349, column: 12)
!4664 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2344, column: 7)
!4665 = !DILocalVariable(name: "v", scope: !4666, file: !3, line: 2367, type: !750)
!4666 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2366, column: 5)
!4667 = !DILocalVariable(name: "v_node", scope: !4666, file: !3, line: 2368, type: !1962)
!4668 = !DILocalVariable(name: "v_node_preds", scope: !4666, file: !3, line: 2369, type: !1991)
!4669 = !DILocalVariable(name: "v_node_succs", scope: !4666, file: !3, line: 2370, type: !1991)
!4670 = !DILocation(line: 0, scope: !4645)
!4671 = !DILocation(line: 2330, column: 22, scope: !4645)
!4672 = !DILocation(line: 2331, column: 21, scope: !4645)
!4673 = !DILocation(line: 2332, column: 17, scope: !4645)
!4674 = !DILocation(line: 2333, column: 25, scope: !4645)
!4675 = !DILocation(line: 2334, column: 26, scope: !4645)
!4676 = !DILocation(line: 2335, column: 24, scope: !4645)
!4677 = !DILocation(line: 2337, column: 3, scope: !4645)
!4678 = !DILocation(line: 2338, column: 3, scope: !4645)
!4679 = !DILocation(line: 2340, column: 3, scope: !4645)
!4680 = !DILocation(line: 2341, column: 3, scope: !4645)
!4681 = !DILocation(line: 2343, column: 3, scope: !4645)
!4682 = !DILocation(line: 2344, column: 7, scope: !4664)
!4683 = !DILocation(line: 2344, column: 7, scope: !4645)
!4684 = !DILocation(line: 2346, column: 7, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 2345, column: 5)
!4686 = !DILocation(line: 2348, column: 5, scope: !4685)
!4687 = !DILocation(line: 2349, column: 12, scope: !4663)
!4688 = !DILocation(line: 2349, column: 12, scope: !4664)
!4689 = !DILocation(line: 2351, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 2350, column: 5)
!4691 = !DILocation(line: 2353, column: 5, scope: !4690)
!4692 = !DILocation(line: 2358, column: 7, scope: !4662)
!4693 = !DILocation(line: 2359, column: 16, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 2359, column: 11)
!4695 = !DILocation(line: 0, scope: !4662)
!4696 = !DILocation(line: 2359, column: 40, scope: !4694)
!4697 = !DILocation(line: 2359, column: 11, scope: !4662)
!4698 = !DILocation(line: 2360, column: 2, scope: !4694)
!4699 = !DILocation(line: 0, scope: !4664)
!4700 = !DILocation(line: 2364, column: 3, scope: !4645)
!4701 = !DILocation(line: 0, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 2396, column: 6)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 2394, column: 2)
!4704 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 2372, column: 11)
!4705 = !DILocation(line: 2365, column: 3, scope: !4645)
!4706 = !DILocation(line: 2365, column: 11, scope: !4645)
!4707 = !DILocation(line: 2365, column: 10, scope: !4645)
!4708 = !DILocation(line: 2372, column: 15, scope: !4704)
!4709 = !DILocation(line: 2372, column: 11, scope: !4666)
!4710 = !DILocation(line: 2395, column: 4, scope: !4703)
!4711 = !DILocation(line: 2374, column: 4, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 2373, column: 2)
!4713 = !DILocation(line: 2374, column: 12, scope: !4712)
!4714 = !DILocation(line: 2374, column: 11, scope: !4712)
!4715 = !DILocation(line: 2376, column: 12, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 2375, column: 6)
!4717 = !DILocation(line: 0, scope: !4666)
!4718 = !DILocation(line: 2377, column: 21, scope: !4716)
!4719 = !DILocation(line: 2377, column: 18, scope: !4716)
!4720 = !DILocation(line: 2378, column: 22, scope: !4716)
!4721 = !DILocation(line: 2378, column: 8, scope: !4716)
!4722 = !DILocation(line: 2378, column: 26, scope: !4716)
!4723 = !DILocation(line: 2379, column: 23, scope: !4716)
!4724 = !DILocation(line: 2380, column: 8, scope: !4716)
!4725 = !DILocation(line: 2383, column: 8, scope: !4716)
!4726 = !DILocation(line: 2384, column: 8, scope: !4716)
!4727 = !DILocation(line: 2385, column: 8, scope: !4716)
!4728 = !DILocation(line: 2386, column: 8, scope: !4716)
!4729 = distinct !{!4729, !4711, !4730}
!4730 = !DILocation(line: 2387, column: 6, scope: !4712)
!4731 = !DILocation(line: 2389, column: 4, scope: !4712)
!4732 = !DILocation(line: 2390, column: 4, scope: !4712)
!4733 = !DILocation(line: 2391, column: 4, scope: !4712)
!4734 = !DILocation(line: 2392, column: 2, scope: !4712)
!4735 = !DILocation(line: 2395, column: 12, scope: !4703)
!4736 = !DILocation(line: 2395, column: 11, scope: !4703)
!4737 = !DILocation(line: 2397, column: 12, scope: !4702)
!4738 = !DILocation(line: 2398, column: 21, scope: !4702)
!4739 = !DILocation(line: 2398, column: 18, scope: !4702)
!4740 = !DILocation(line: 2399, column: 22, scope: !4702)
!4741 = !DILocation(line: 2399, column: 8, scope: !4702)
!4742 = !DILocation(line: 2399, column: 26, scope: !4702)
!4743 = !DILocation(line: 2400, column: 23, scope: !4702)
!4744 = !DILocation(line: 2401, column: 8, scope: !4702)
!4745 = !DILocation(line: 2404, column: 8, scope: !4702)
!4746 = !DILocation(line: 2405, column: 8, scope: !4702)
!4747 = !DILocation(line: 2406, column: 8, scope: !4702)
!4748 = !DILocation(line: 2407, column: 8, scope: !4702)
!4749 = distinct !{!4749, !4710, !4750}
!4750 = !DILocation(line: 2408, column: 6, scope: !4703)
!4751 = !DILocation(line: 2410, column: 4, scope: !4703)
!4752 = !DILocation(line: 2411, column: 4, scope: !4703)
!4753 = !DILocation(line: 2412, column: 4, scope: !4703)
!4754 = !DILocation(line: 0, scope: !4704)
!4755 = distinct !{!4755, !4705, !4756}
!4756 = !DILocation(line: 2414, column: 5, scope: !4645)
!4757 = !DILocation(line: 2415, column: 3, scope: !4645)
!4758 = !DILocation(line: 2416, column: 3, scope: !4645)
!4759 = !DILocation(line: 2417, column: 3, scope: !4645)
!4760 = !DILocation(line: 2418, column: 3, scope: !4645)
!4761 = !DILocation(line: 2419, column: 3, scope: !4645)
!4762 = !DILocation(line: 2420, column: 3, scope: !4645)
!4763 = distinct !DISubprogram(name: "find_max_asap", scope: !3, file: !3, line: 2243, type: !4764, scopeLine: 2244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4766)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!750, !758, !1991}
!4766 = !{!4767, !4768, !4769, !4770, !4771, !4772, !4773}
!4767 = !DILocalVariable(name: "g", arg: 1, scope: !4763, file: !3, line: 2243, type: !758)
!4768 = !DILocalVariable(name: "nodes", arg: 2, scope: !4763, file: !3, line: 2243, type: !1991)
!4769 = !DILocalVariable(name: "u", scope: !4763, file: !3, line: 2245, type: !7)
!4770 = !DILocalVariable(name: "max_asap", scope: !4763, file: !3, line: 2246, type: !750)
!4771 = !DILocalVariable(name: "result", scope: !4763, file: !3, line: 2247, type: !750)
!4772 = !DILocalVariable(name: "sbi", scope: !4763, file: !3, line: 2248, type: !3985)
!4773 = !DILocalVariable(name: "u_node", scope: !4774, file: !3, line: 2252, type: !1962)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 2251, column: 5)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 2250, column: 3)
!4776 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2250, column: 3)
!4777 = !DILocation(line: 0, scope: !4763)
!4778 = !DILocation(line: 2245, column: 3, scope: !4763)
!4779 = !DILocation(line: 2245, column: 16, scope: !4763)
!4780 = !DILocation(line: 2248, column: 3, scope: !4763)
!4781 = !DILocation(line: 2250, column: 3, scope: !4776)
!4782 = !DILocation(line: 0, scope: !4774)
!4783 = !DILocation(line: 2250, column: 3, scope: !4775)
!4784 = !DILocation(line: 2252, column: 33, scope: !4774)
!4785 = !DILocation(line: 2252, column: 39, scope: !4774)
!4786 = !DILocation(line: 2252, column: 30, scope: !4774)
!4787 = !DILocation(line: 2254, column: 22, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 2254, column: 11)
!4789 = !DILocation(line: 2254, column: 20, scope: !4788)
!4790 = !DILocation(line: 2254, column: 11, scope: !4774)
!4791 = !DILocation(line: 2258, column: 2, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 2255, column: 2)
!4793 = distinct !{!4793, !4781, !4794}
!4794 = !DILocation(line: 2259, column: 5, scope: !4776)
!4795 = !DILocation(line: 2261, column: 1, scope: !4763)
!4796 = !DILocation(line: 2260, column: 3, scope: !4763)
!4797 = distinct !DISubprogram(name: "SET_BIT", scope: !1992, file: !1992, line: 63, type: !4798, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4800)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{null, !1991, !7}
!4800 = !{!4801, !4802, !4803}
!4801 = !DILocalVariable(name: "map", arg: 1, scope: !4797, file: !1992, line: 63, type: !1991)
!4802 = !DILocalVariable(name: "bitno", arg: 2, scope: !4797, file: !1992, line: 63, type: !7)
!4803 = !DILocalVariable(name: "oldbit", scope: !4804, file: !1992, line: 67, type: !749)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !1992, line: 66, column: 5)
!4805 = distinct !DILexicalBlock(scope: !4797, file: !1992, line: 65, column: 7)
!4806 = !DILocation(line: 0, scope: !4797)
!4807 = !DILocation(line: 65, column: 12, scope: !4805)
!4808 = !DILocation(line: 65, column: 7, scope: !4805)
!4809 = !DILocation(line: 65, column: 7, scope: !4797)
!4810 = !DILocation(line: 73, column: 40, scope: !4797)
!4811 = !DILocation(line: 73, column: 29, scope: !4797)
!4812 = !DILocation(line: 72, column: 19, scope: !4797)
!4813 = !DILocation(line: 72, column: 3, scope: !4797)
!4814 = !DILocation(line: 68, column: 16, scope: !4804)
!4815 = !DILocation(line: 69, column: 12, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4804, file: !1992, line: 69, column: 11)
!4817 = !DILocation(line: 69, column: 11, scope: !4804)
!4818 = !DILocation(line: 70, column: 2, scope: !4816)
!4819 = !DILocation(line: 70, column: 41, scope: !4816)
!4820 = !DILocation(line: 73, column: 5, scope: !4797)
!4821 = !DILocation(line: 74, column: 1, scope: !4797)
!4822 = distinct !DISubprogram(name: "find_max_hv_min_mob", scope: !3, file: !3, line: 2264, type: !4764, scopeLine: 2265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4823)
!4823 = !{!4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831}
!4824 = !DILocalVariable(name: "g", arg: 1, scope: !4822, file: !3, line: 2264, type: !758)
!4825 = !DILocalVariable(name: "nodes", arg: 2, scope: !4822, file: !3, line: 2264, type: !1991)
!4826 = !DILocalVariable(name: "u", scope: !4822, file: !3, line: 2266, type: !7)
!4827 = !DILocalVariable(name: "max_hv", scope: !4822, file: !3, line: 2267, type: !750)
!4828 = !DILocalVariable(name: "min_mob", scope: !4822, file: !3, line: 2268, type: !750)
!4829 = !DILocalVariable(name: "result", scope: !4822, file: !3, line: 2269, type: !750)
!4830 = !DILocalVariable(name: "sbi", scope: !4822, file: !3, line: 2270, type: !3985)
!4831 = !DILocalVariable(name: "u_node", scope: !4832, file: !3, line: 2274, type: !1962)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2273, column: 5)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 2272, column: 3)
!4834 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2272, column: 3)
!4835 = !DILocation(line: 0, scope: !4822)
!4836 = !DILocation(line: 2266, column: 3, scope: !4822)
!4837 = !DILocation(line: 2266, column: 16, scope: !4822)
!4838 = !DILocation(line: 2270, column: 3, scope: !4822)
!4839 = !DILocation(line: 2272, column: 3, scope: !4834)
!4840 = !DILocation(line: 0, scope: !4832)
!4841 = !DILocation(line: 2272, column: 3, scope: !4833)
!4842 = !DILocation(line: 2274, column: 33, scope: !4832)
!4843 = !DILocation(line: 2274, column: 39, scope: !4832)
!4844 = !DILocation(line: 2274, column: 30, scope: !4832)
!4845 = !DILocation(line: 2276, column: 20, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2276, column: 11)
!4847 = !DILocation(line: 2276, column: 18, scope: !4846)
!4848 = !DILocation(line: 2276, column: 11, scope: !4832)
!4849 = !DILocation(line: 2279, column: 14, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2277, column: 2)
!4851 = !DILocation(line: 2281, column: 2, scope: !4850)
!4852 = !DILocation(line: 2282, column: 24, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2282, column: 16)
!4854 = !DILocation(line: 2283, column: 9, scope: !4853)
!4855 = !DILocation(line: 2283, column: 23, scope: !4853)
!4856 = !DILocation(line: 2283, column: 21, scope: !4853)
!4857 = !DILocation(line: 2282, column: 16, scope: !4846)
!4858 = !DILocation(line: 2287, column: 2, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 2284, column: 2)
!4860 = !DILocation(line: 0, scope: !4846)
!4861 = distinct !{!4861, !4839, !4862}
!4862 = !DILocation(line: 2288, column: 5, scope: !4834)
!4863 = !DILocation(line: 2290, column: 1, scope: !4822)
!4864 = !DILocation(line: 2289, column: 3, scope: !4822)
!4865 = distinct !DISubprogram(name: "RESET_BIT", scope: !1992, file: !1992, line: 82, type: !4798, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4866 = !{!4867, !4868, !4869}
!4867 = !DILocalVariable(name: "map", arg: 1, scope: !4865, file: !1992, line: 82, type: !1991)
!4868 = !DILocalVariable(name: "bitno", arg: 2, scope: !4865, file: !1992, line: 82, type: !7)
!4869 = !DILocalVariable(name: "oldbit", scope: !4870, file: !1992, line: 86, type: !749)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !1992, line: 85, column: 5)
!4871 = distinct !DILexicalBlock(scope: !4865, file: !1992, line: 84, column: 7)
!4872 = !DILocation(line: 0, scope: !4865)
!4873 = !DILocation(line: 84, column: 12, scope: !4871)
!4874 = !DILocation(line: 84, column: 7, scope: !4871)
!4875 = !DILocation(line: 84, column: 7, scope: !4865)
!4876 = !DILocation(line: 92, column: 42, scope: !4865)
!4877 = !DILocation(line: 92, column: 31, scope: !4865)
!4878 = !DILocation(line: 91, column: 19, scope: !4865)
!4879 = !DILocation(line: 91, column: 3, scope: !4865)
!4880 = !DILocation(line: 87, column: 16, scope: !4870)
!4881 = !DILocation(line: 88, column: 11, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4870, file: !1992, line: 88, column: 11)
!4883 = !DILocation(line: 88, column: 11, scope: !4870)
!4884 = !DILocation(line: 89, column: 2, scope: !4882)
!4885 = !DILocation(line: 89, column: 41, scope: !4882)
!4886 = !DILocation(line: 92, column: 8, scope: !4865)
!4887 = !DILocation(line: 92, column: 5, scope: !4865)
!4888 = !DILocation(line: 93, column: 1, scope: !4865)
!4889 = distinct !DISubprogram(name: "find_max_dv_min_mob", scope: !3, file: !3, line: 2293, type: !4764, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4890)
!4890 = !{!4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898}
!4891 = !DILocalVariable(name: "g", arg: 1, scope: !4889, file: !3, line: 2293, type: !758)
!4892 = !DILocalVariable(name: "nodes", arg: 2, scope: !4889, file: !3, line: 2293, type: !1991)
!4893 = !DILocalVariable(name: "u", scope: !4889, file: !3, line: 2295, type: !7)
!4894 = !DILocalVariable(name: "max_dv", scope: !4889, file: !3, line: 2296, type: !750)
!4895 = !DILocalVariable(name: "min_mob", scope: !4889, file: !3, line: 2297, type: !750)
!4896 = !DILocalVariable(name: "result", scope: !4889, file: !3, line: 2298, type: !750)
!4897 = !DILocalVariable(name: "sbi", scope: !4889, file: !3, line: 2299, type: !3985)
!4898 = !DILocalVariable(name: "u_node", scope: !4899, file: !3, line: 2303, type: !1962)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2302, column: 5)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 2301, column: 3)
!4901 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 2301, column: 3)
!4902 = !DILocation(line: 0, scope: !4889)
!4903 = !DILocation(line: 2295, column: 3, scope: !4889)
!4904 = !DILocation(line: 2295, column: 16, scope: !4889)
!4905 = !DILocation(line: 2299, column: 3, scope: !4889)
!4906 = !DILocation(line: 2301, column: 3, scope: !4901)
!4907 = !DILocation(line: 0, scope: !4899)
!4908 = !DILocation(line: 2301, column: 3, scope: !4900)
!4909 = !DILocation(line: 2303, column: 33, scope: !4899)
!4910 = !DILocation(line: 2303, column: 39, scope: !4899)
!4911 = !DILocation(line: 2303, column: 30, scope: !4899)
!4912 = !DILocation(line: 2305, column: 20, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2305, column: 11)
!4914 = !DILocation(line: 2305, column: 18, scope: !4913)
!4915 = !DILocation(line: 2305, column: 11, scope: !4899)
!4916 = !DILocation(line: 2308, column: 14, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2306, column: 2)
!4918 = !DILocation(line: 2310, column: 2, scope: !4917)
!4919 = !DILocation(line: 2311, column: 24, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2311, column: 16)
!4921 = !DILocation(line: 2312, column: 9, scope: !4920)
!4922 = !DILocation(line: 2312, column: 23, scope: !4920)
!4923 = !DILocation(line: 2312, column: 21, scope: !4920)
!4924 = !DILocation(line: 2311, column: 16, scope: !4913)
!4925 = !DILocation(line: 2316, column: 2, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 2313, column: 2)
!4927 = !DILocation(line: 0, scope: !4913)
!4928 = distinct !{!4928, !4906, !4929}
!4929 = !DILocation(line: 2317, column: 5, scope: !4901)
!4930 = !DILocation(line: 2319, column: 1, scope: !4889)
!4931 = !DILocation(line: 2318, column: 3, scope: !4889)
!4932 = distinct !DISubprogram(name: "sbitmap_iter_init", scope: !1992, file: !1992, line: 117, type: !4933, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4939)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{null, !4935, !4936, !7}
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!4936 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_sbitmap", file: !1992, line: 46, baseType: !4937)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4938, size: 64)
!4938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!4939 = !{!4940, !4941, !4942}
!4940 = !DILocalVariable(name: "i", arg: 1, scope: !4932, file: !1992, line: 117, type: !4935)
!4941 = !DILocalVariable(name: "bmp", arg: 2, scope: !4932, file: !1992, line: 117, type: !4936)
!4942 = !DILocalVariable(name: "min", arg: 3, scope: !4932, file: !1992, line: 117, type: !7)
!4943 = !DILocation(line: 0, scope: !4932)
!4944 = !DILocation(line: 119, column: 6, scope: !4932)
!4945 = !DILocation(line: 119, column: 15, scope: !4932)
!4946 = !DILocation(line: 120, column: 6, scope: !4932)
!4947 = !DILocation(line: 120, column: 14, scope: !4932)
!4948 = !DILocation(line: 121, column: 18, scope: !4932)
!4949 = !DILocation(line: 121, column: 6, scope: !4932)
!4950 = !DILocation(line: 121, column: 11, scope: !4932)
!4951 = !DILocation(line: 122, column: 12, scope: !4932)
!4952 = !DILocation(line: 122, column: 6, scope: !4932)
!4953 = !DILocation(line: 122, column: 10, scope: !4932)
!4954 = !DILocation(line: 124, column: 19, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4932, file: !1992, line: 124, column: 7)
!4956 = !DILocation(line: 124, column: 7, scope: !4932)
!4957 = !DILocation(line: 125, column: 8, scope: !4955)
!4958 = !DILocation(line: 125, column: 13, scope: !4955)
!4959 = !DILocation(line: 125, column: 5, scope: !4955)
!4960 = !DILocation(line: 127, column: 16, scope: !4955)
!4961 = !DILocation(line: 127, column: 8, scope: !4955)
!4962 = !DILocation(line: 127, column: 13, scope: !4955)
!4963 = !DILocation(line: 129, column: 1, scope: !4932)
!4964 = distinct !DISubprogram(name: "sbitmap_iter_cond", scope: !1992, file: !1992, line: 136, type: !4965, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4968)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!749, !4935, !4967}
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4968 = !{!4969, !4970}
!4969 = !DILocalVariable(name: "i", arg: 1, scope: !4964, file: !1992, line: 136, type: !4935)
!4970 = !DILocalVariable(name: "n", arg: 2, scope: !4964, file: !1992, line: 136, type: !4967)
!4971 = !DILocation(line: 0, scope: !4964)
!4972 = !DILocation(line: 0, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !1992, line: 139, column: 3)
!4974 = distinct !DILexicalBlock(scope: !4964, file: !1992, line: 139, column: 3)
!4975 = !DILocation(line: 0, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4973, file: !1992, line: 140, column: 5)
!4977 = !DILocation(line: 0, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4976, file: !1992, line: 144, column: 11)
!4979 = !DILocation(line: 139, column: 13, scope: !4973)
!4980 = !DILocation(line: 139, column: 3, scope: !4964)
!4981 = !DILocation(line: 139, column: 18, scope: !4973)
!4982 = !DILocation(line: 139, column: 3, scope: !4974)
!4983 = !DILocation(line: 151, column: 3, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4964, file: !1992, line: 151, column: 3)
!4985 = !DILocation(line: 141, column: 18, scope: !4976)
!4986 = !DILocation(line: 144, column: 29, scope: !4978)
!4987 = !DILocation(line: 144, column: 23, scope: !4978)
!4988 = !DILocation(line: 144, column: 11, scope: !4976)
!4989 = !DILocation(line: 147, column: 32, scope: !4976)
!4990 = !DILocation(line: 147, column: 18, scope: !4976)
!4991 = !DILocation(line: 139, column: 37, scope: !4973)
!4992 = !DILocation(line: 139, column: 34, scope: !4973)
!4993 = !DILocation(line: 139, column: 32, scope: !4973)
!4994 = !DILocation(line: 139, column: 3, scope: !4973)
!4995 = distinct !{!4995, !4982, !4996}
!4996 = !DILocation(line: 148, column: 5, scope: !4974)
!4997 = !DILocation(line: 151, column: 14, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4984, file: !1992, line: 151, column: 3)
!4999 = !DILocation(line: 151, column: 19, scope: !4998)
!5000 = !DILocation(line: 151, column: 24, scope: !4998)
!5001 = !DILocation(line: 152, column: 15, scope: !4998)
!5002 = !DILocation(line: 151, column: 38, scope: !4998)
!5003 = !DILocation(line: 151, column: 3, scope: !4998)
!5004 = distinct !{!5004, !4983, !5005}
!5005 = !DILocation(line: 152, column: 15, scope: !4984)
!5006 = !DILocation(line: 154, column: 6, scope: !4964)
!5007 = !DILocation(line: 156, column: 3, scope: !4964)
!5008 = !DILocation(line: 157, column: 1, scope: !4964)
!5009 = distinct !DISubprogram(name: "sbitmap_iter_next", scope: !1992, file: !1992, line: 162, type: !5010, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{null, !4935}
!5012 = !{!5013}
!5013 = !DILocalVariable(name: "i", arg: 1, scope: !5009, file: !1992, line: 162, type: !4935)
!5014 = !DILocation(line: 0, scope: !5009)
!5015 = !DILocation(line: 164, column: 6, scope: !5009)
!5016 = !DILocation(line: 164, column: 11, scope: !5009)
!5017 = !DILocation(line: 165, column: 6, scope: !5009)
!5018 = !DILocation(line: 165, column: 13, scope: !5009)
!5019 = !DILocation(line: 166, column: 1, scope: !5009)
!5020 = distinct !DISubprogram(name: "create_partial_schedule", scope: !3, file: !3, line: 2430, type: !5021, scopeLine: 2431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!2013, !750, !758, !750}
!5023 = !{!5024, !5025, !5026, !5027}
!5024 = !DILocalVariable(name: "ii", arg: 1, scope: !5020, file: !3, line: 2430, type: !750)
!5025 = !DILocalVariable(name: "g", arg: 2, scope: !5020, file: !3, line: 2430, type: !758)
!5026 = !DILocalVariable(name: "history", arg: 3, scope: !5020, file: !3, line: 2430, type: !750)
!5027 = !DILocalVariable(name: "ps", scope: !5020, file: !3, line: 2432, type: !2013)
!5028 = !DILocation(line: 0, scope: !5020)
!5029 = !DILocation(line: 2432, column: 29, scope: !5020)
!5030 = !DILocation(line: 2433, column: 39, scope: !5020)
!5031 = !DILocation(line: 2433, column: 30, scope: !5020)
!5032 = !DILocation(line: 2433, column: 7, scope: !5020)
!5033 = !DILocation(line: 2433, column: 12, scope: !5020)
!5034 = !DILocation(line: 2434, column: 7, scope: !5020)
!5035 = !DILocation(line: 2434, column: 10, scope: !5020)
!5036 = !DILocation(line: 2435, column: 7, scope: !5020)
!5037 = !DILocation(line: 2435, column: 15, scope: !5020)
!5038 = !DILocation(line: 2436, column: 7, scope: !5020)
!5039 = !DILocation(line: 2436, column: 17, scope: !5020)
!5040 = !DILocation(line: 2437, column: 7, scope: !5020)
!5041 = !DILocation(line: 2437, column: 17, scope: !5020)
!5042 = !DILocation(line: 2438, column: 7, scope: !5020)
!5043 = !DILocation(line: 2438, column: 9, scope: !5020)
!5044 = !DILocation(line: 2440, column: 3, scope: !5020)
!5045 = distinct !DISubprogram(name: "get_sched_window", scope: !3, file: !3, line: 1350, type: !5046, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5048)
!5046 = !DISubroutineType(types: !5047)
!5047 = !{!750, !2013, !2012, !750, !1991, !750, !2012, !2012, !2012}
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5072, !5076, !5079, !5082, !5086, !5089, !5092, !5093, !5094, !5095, !5099, !5102, !5106, !5109}
!5049 = !DILocalVariable(name: "ps", arg: 1, scope: !5045, file: !3, line: 1350, type: !2013)
!5050 = !DILocalVariable(name: "nodes_order", arg: 2, scope: !5045, file: !3, line: 1350, type: !2012)
!5051 = !DILocalVariable(name: "i", arg: 3, scope: !5045, file: !3, line: 1350, type: !750)
!5052 = !DILocalVariable(name: "sched_nodes", arg: 4, scope: !5045, file: !3, line: 1351, type: !1991)
!5053 = !DILocalVariable(name: "ii", arg: 5, scope: !5045, file: !3, line: 1351, type: !750)
!5054 = !DILocalVariable(name: "start_p", arg: 6, scope: !5045, file: !3, line: 1351, type: !2012)
!5055 = !DILocalVariable(name: "step_p", arg: 7, scope: !5045, file: !3, line: 1351, type: !2012)
!5056 = !DILocalVariable(name: "end_p", arg: 8, scope: !5045, file: !3, line: 1351, type: !2012)
!5057 = !DILocalVariable(name: "start", scope: !5045, file: !3, line: 1353, type: !750)
!5058 = !DILocalVariable(name: "step", scope: !5045, file: !3, line: 1353, type: !750)
!5059 = !DILocalVariable(name: "end", scope: !5045, file: !3, line: 1353, type: !750)
!5060 = !DILocalVariable(name: "e", scope: !5045, file: !3, line: 1354, type: !1970)
!5061 = !DILocalVariable(name: "u", scope: !5045, file: !3, line: 1355, type: !750)
!5062 = !DILocalVariable(name: "u_node", scope: !5045, file: !3, line: 1356, type: !1962)
!5063 = !DILocalVariable(name: "psp", scope: !5045, file: !3, line: 1357, type: !1991)
!5064 = !DILocalVariable(name: "pss", scope: !5045, file: !3, line: 1358, type: !1991)
!5065 = !DILocalVariable(name: "u_node_preds", scope: !5045, file: !3, line: 1359, type: !1991)
!5066 = !DILocalVariable(name: "u_node_succs", scope: !5045, file: !3, line: 1360, type: !1991)
!5067 = !DILocalVariable(name: "psp_not_empty", scope: !5045, file: !3, line: 1361, type: !750)
!5068 = !DILocalVariable(name: "pss_not_empty", scope: !5045, file: !3, line: 1362, type: !750)
!5069 = !DILocalVariable(name: "early_start", scope: !5070, file: !3, line: 1372, type: !750)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 1371, column: 5)
!5071 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1370, column: 7)
!5072 = !DILocalVariable(name: "v_node", scope: !5073, file: !3, line: 1377, type: !1962)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1376, column: 2)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 1375, column: 7)
!5075 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1375, column: 7)
!5076 = !DILocalVariable(name: "p_st", scope: !5077, file: !3, line: 1392, type: !750)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1391, column: 6)
!5078 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 1390, column: 8)
!5079 = !DILocalVariable(name: "late_start", scope: !5080, file: !3, line: 1421, type: !750)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1420, column: 5)
!5081 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 1419, column: 12)
!5082 = !DILocalVariable(name: "v_node", scope: !5083, file: !3, line: 1426, type: !1962)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 1425, column: 2)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 1424, column: 7)
!5085 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1424, column: 7)
!5086 = !DILocalVariable(name: "s_st", scope: !5087, file: !3, line: 1441, type: !750)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1440, column: 6)
!5088 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 1439, column: 8)
!5089 = !DILocalVariable(name: "early_start", scope: !5090, file: !3, line: 1475, type: !750)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1474, column: 5)
!5091 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1473, column: 12)
!5092 = !DILocalVariable(name: "late_start", scope: !5090, file: !3, line: 1476, type: !750)
!5093 = !DILocalVariable(name: "count_preds", scope: !5090, file: !3, line: 1477, type: !750)
!5094 = !DILocalVariable(name: "count_succs", scope: !5090, file: !3, line: 1478, type: !750)
!5095 = !DILocalVariable(name: "v_node", scope: !5096, file: !3, line: 1484, type: !1962)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1483, column: 2)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1482, column: 7)
!5098 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 1482, column: 7)
!5099 = !DILocalVariable(name: "p_st", scope: !5100, file: !3, line: 1499, type: !750)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1498, column: 6)
!5101 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 1497, column: 8)
!5102 = !DILocalVariable(name: "v_node", scope: !5103, file: !3, line: 1522, type: !1962)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1521, column: 2)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1520, column: 7)
!5105 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 1520, column: 7)
!5106 = !DILocalVariable(name: "s_st", scope: !5107, file: !3, line: 1537, type: !750)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1536, column: 6)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1535, column: 8)
!5109 = !DILocalVariable(name: "old_start", scope: !5110, file: !3, line: 1565, type: !750)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1564, column: 9)
!5111 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 1563, column: 11)
!5112 = !DILocation(line: 0, scope: !5045)
!5113 = !DILocation(line: 1355, column: 11, scope: !5045)
!5114 = !DILocation(line: 1356, column: 30, scope: !5045)
!5115 = !DILocation(line: 1356, column: 33, scope: !5045)
!5116 = !DILocation(line: 1356, column: 26, scope: !5045)
!5117 = !DILocation(line: 1357, column: 39, scope: !5045)
!5118 = !DILocation(line: 1357, column: 17, scope: !5045)
!5119 = !DILocation(line: 1358, column: 36, scope: !5045)
!5120 = !DILocation(line: 1358, column: 39, scope: !5045)
!5121 = !DILocation(line: 1358, column: 17, scope: !5045)
!5122 = !DILocation(line: 1359, column: 26, scope: !5045)
!5123 = !DILocation(line: 1360, column: 26, scope: !5045)
!5124 = !DILocation(line: 1365, column: 3, scope: !5045)
!5125 = !DILocation(line: 1366, column: 3, scope: !5045)
!5126 = !DILocation(line: 1367, column: 19, scope: !5045)
!5127 = !DILocation(line: 1368, column: 19, scope: !5045)
!5128 = !DILocation(line: 1370, column: 7, scope: !5071)
!5129 = !DILocation(line: 1370, column: 25, scope: !5071)
!5130 = !DILocation(line: 1370, column: 21, scope: !5071)
!5131 = !DILocation(line: 0, scope: !5070)
!5132 = !DILocation(line: 1375, column: 24, scope: !5075)
!5133 = !DILocation(line: 0, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 1380, column: 13)
!5135 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 1379, column: 15)
!5136 = !DILocation(line: 1375, column: 12, scope: !5075)
!5137 = !DILocation(line: 0, scope: !5075)
!5138 = !DILocation(line: 1375, column: 30, scope: !5074)
!5139 = !DILocation(line: 1375, column: 7, scope: !5075)
!5140 = !DILocation(line: 1377, column: 29, scope: !5073)
!5141 = !DILocation(line: 0, scope: !5073)
!5142 = !DILocation(line: 1379, column: 15, scope: !5135)
!5143 = !DILocation(line: 1379, column: 15, scope: !5073)
!5144 = !DILocation(line: 1381, column: 8, scope: !5134)
!5145 = !DILocation(line: 1382, column: 31, scope: !5134)
!5146 = !DILocation(line: 1382, column: 15, scope: !5134)
!5147 = !DILocation(line: 1383, column: 17, scope: !5134)
!5148 = !DILocation(line: 1385, column: 43, scope: !5134)
!5149 = !DILocation(line: 1386, column: 10, scope: !5134)
!5150 = !DILocation(line: 1386, column: 43, scope: !5134)
!5151 = !DILocation(line: 1386, column: 49, scope: !5134)
!5152 = !DILocation(line: 1383, column: 8, scope: !5134)
!5153 = !DILocation(line: 1388, column: 13, scope: !5134)
!5154 = !DILocation(line: 1390, column: 8, scope: !5078)
!5155 = !DILocation(line: 1390, column: 8, scope: !5073)
!5156 = !DILocation(line: 1392, column: 26, scope: !5077)
!5157 = !DILocation(line: 0, scope: !5077)
!5158 = !DILocation(line: 1395, column: 17, scope: !5077)
!5159 = !DILocation(line: 1397, column: 19, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1397, column: 19)
!5161 = !DILocation(line: 1397, column: 19, scope: !5077)
!5162 = !DILocation(line: 1398, column: 17, scope: !5160)
!5163 = !DILocation(line: 1402, column: 15, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1402, column: 12)
!5165 = !DILocation(line: 1402, column: 25, scope: !5164)
!5166 = !DILocation(line: 1402, column: 12, scope: !5077)
!5167 = !DILocation(line: 1403, column: 9, scope: !5164)
!5168 = !DILocation(line: 1405, column: 19, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1405, column: 19)
!5170 = !DILocation(line: 1405, column: 19, scope: !5078)
!5171 = !DILocation(line: 1406, column: 13, scope: !5169)
!5172 = !DILocation(line: 1375, column: 43, scope: !5074)
!5173 = !DILocation(line: 1375, column: 7, scope: !5074)
!5174 = distinct !{!5174, !5139, !5175}
!5175 = !DILocation(line: 1407, column: 2, scope: !5075)
!5176 = !DILocation(line: 1409, column: 13, scope: !5070)
!5177 = !DILocation(line: 1413, column: 11, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1413, column: 11)
!5179 = !DILocation(line: 1413, column: 11, scope: !5070)
!5180 = !DILocation(line: 1416, column: 12, scope: !5178)
!5181 = !DILocation(line: 1416, column: 18, scope: !5178)
!5182 = !DILocation(line: 1414, column: 9, scope: !5178)
!5183 = !DILocation(line: 1419, column: 27, scope: !5081)
!5184 = !DILocation(line: 0, scope: !5080)
!5185 = !DILocation(line: 1424, column: 24, scope: !5085)
!5186 = !DILocation(line: 0, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1429, column: 13)
!5188 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 1428, column: 15)
!5189 = !DILocation(line: 1424, column: 12, scope: !5085)
!5190 = !DILocation(line: 0, scope: !5085)
!5191 = !DILocation(line: 1424, column: 31, scope: !5084)
!5192 = !DILocation(line: 1424, column: 7, scope: !5085)
!5193 = !DILocation(line: 1426, column: 29, scope: !5083)
!5194 = !DILocation(line: 0, scope: !5083)
!5195 = !DILocation(line: 1428, column: 15, scope: !5188)
!5196 = !DILocation(line: 1428, column: 15, scope: !5083)
!5197 = !DILocation(line: 1430, column: 15, scope: !5187)
!5198 = !DILocation(line: 1431, column: 31, scope: !5187)
!5199 = !DILocation(line: 1431, column: 15, scope: !5187)
!5200 = !DILocation(line: 1432, column: 24, scope: !5187)
!5201 = !DILocation(line: 1434, column: 57, scope: !5187)
!5202 = !DILocation(line: 1435, column: 24, scope: !5187)
!5203 = !DILocation(line: 1435, column: 57, scope: !5187)
!5204 = !DILocation(line: 1435, column: 63, scope: !5187)
!5205 = !DILocation(line: 1432, column: 15, scope: !5187)
!5206 = !DILocation(line: 1437, column: 13, scope: !5187)
!5207 = !DILocation(line: 1439, column: 8, scope: !5088)
!5208 = !DILocation(line: 1439, column: 8, scope: !5083)
!5209 = !DILocation(line: 1441, column: 26, scope: !5087)
!5210 = !DILocation(line: 0, scope: !5087)
!5211 = !DILocation(line: 1443, column: 28, scope: !5087)
!5212 = !DILocation(line: 1446, column: 19, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1446, column: 19)
!5214 = !DILocation(line: 1446, column: 19, scope: !5087)
!5215 = !DILocation(line: 1447, column: 17, scope: !5213)
!5216 = !DILocation(line: 1451, column: 15, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1451, column: 12)
!5218 = !DILocation(line: 1451, column: 25, scope: !5217)
!5219 = !DILocation(line: 1451, column: 12, scope: !5087)
!5220 = !DILocation(line: 1452, column: 9, scope: !5217)
!5221 = !DILocation(line: 1453, column: 18, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1453, column: 18)
!5223 = !DILocation(line: 1453, column: 18, scope: !5087)
!5224 = !DILocation(line: 1454, column: 18, scope: !5222)
!5225 = !DILocation(line: 1457, column: 20, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1457, column: 20)
!5227 = !DILocation(line: 1457, column: 20, scope: !5088)
!5228 = !DILocation(line: 1458, column: 13, scope: !5226)
!5229 = !DILocation(line: 1424, column: 44, scope: !5084)
!5230 = !DILocation(line: 1424, column: 7, scope: !5084)
!5231 = distinct !{!5231, !5192, !5232}
!5232 = !DILocation(line: 1460, column: 2, scope: !5085)
!5233 = !DILocation(line: 1462, column: 13, scope: !5080)
!5234 = !DILocation(line: 1466, column: 11, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1466, column: 11)
!5236 = !DILocation(line: 1466, column: 11, scope: !5080)
!5237 = !DILocation(line: 1469, column: 26, scope: !5235)
!5238 = !DILocation(line: 1469, column: 32, scope: !5235)
!5239 = !DILocation(line: 1467, column: 9, scope: !5235)
!5240 = !DILocation(line: 1473, column: 12, scope: !5091)
!5241 = !DILocation(line: 1473, column: 26, scope: !5091)
!5242 = !DILocation(line: 0, scope: !5090)
!5243 = !DILocation(line: 1482, column: 24, scope: !5098)
!5244 = !DILocation(line: 0, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1487, column: 6)
!5246 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 1486, column: 8)
!5247 = !DILocation(line: 1482, column: 12, scope: !5098)
!5248 = !DILocation(line: 0, scope: !5098)
!5249 = !DILocation(line: 1482, column: 30, scope: !5097)
!5250 = !DILocation(line: 1482, column: 7, scope: !5098)
!5251 = !DILocation(line: 1484, column: 29, scope: !5096)
!5252 = !DILocation(line: 0, scope: !5096)
!5253 = !DILocation(line: 1486, column: 8, scope: !5246)
!5254 = !DILocation(line: 1486, column: 8, scope: !5096)
!5255 = !DILocation(line: 1488, column: 15, scope: !5245)
!5256 = !DILocation(line: 1489, column: 31, scope: !5245)
!5257 = !DILocation(line: 1489, column: 15, scope: !5245)
!5258 = !DILocation(line: 1490, column: 17, scope: !5245)
!5259 = !DILocation(line: 1492, column: 43, scope: !5245)
!5260 = !DILocation(line: 1492, column: 49, scope: !5245)
!5261 = !DILocation(line: 1493, column: 34, scope: !5245)
!5262 = !DILocation(line: 1493, column: 40, scope: !5245)
!5263 = !DILocation(line: 1490, column: 8, scope: !5245)
!5264 = !DILocation(line: 1495, column: 6, scope: !5245)
!5265 = !DILocation(line: 1497, column: 8, scope: !5101)
!5266 = !DILocation(line: 1497, column: 8, scope: !5096)
!5267 = !DILocation(line: 1499, column: 26, scope: !5100)
!5268 = !DILocation(line: 0, scope: !5100)
!5269 = !DILocation(line: 1501, column: 22, scope: !5100)
!5270 = !DILocation(line: 1505, column: 19, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1505, column: 19)
!5272 = !DILocation(line: 1505, column: 19, scope: !5100)
!5273 = !DILocation(line: 1506, column: 17, scope: !5271)
!5274 = !DILocation(line: 1510, column: 22, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1510, column: 19)
!5276 = !DILocation(line: 1510, column: 27, scope: !5275)
!5277 = !DILocation(line: 1510, column: 39, scope: !5275)
!5278 = !DILocation(line: 0, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1513, column: 12)
!5280 = !DILocation(line: 1513, column: 15, scope: !5279)
!5281 = !DILocation(line: 1510, column: 45, scope: !5275)
!5282 = !DILocation(line: 1510, column: 55, scope: !5275)
!5283 = !DILocation(line: 1510, column: 19, scope: !5100)
!5284 = !DILocation(line: 1513, column: 25, scope: !5279)
!5285 = !DILocation(line: 1513, column: 12, scope: !5100)
!5286 = !DILocation(line: 1514, column: 9, scope: !5279)
!5287 = !DILocation(line: 1516, column: 20, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1516, column: 20)
!5289 = !DILocation(line: 1516, column: 20, scope: !5101)
!5290 = !DILocation(line: 1517, column: 13, scope: !5288)
!5291 = !DILocation(line: 1482, column: 43, scope: !5097)
!5292 = !DILocation(line: 1482, column: 7, scope: !5097)
!5293 = distinct !{!5293, !5250, !5294}
!5294 = !DILocation(line: 1519, column: 2, scope: !5098)
!5295 = !DILocation(line: 1520, column: 24, scope: !5105)
!5296 = !DILocation(line: 1520, column: 12, scope: !5105)
!5297 = !DILocation(line: 0, scope: !5105)
!5298 = !DILocation(line: 1520, column: 31, scope: !5104)
!5299 = !DILocation(line: 1520, column: 7, scope: !5105)
!5300 = !DILocation(line: 1522, column: 29, scope: !5103)
!5301 = !DILocation(line: 0, scope: !5103)
!5302 = !DILocation(line: 1524, column: 8, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1524, column: 8)
!5304 = !DILocation(line: 1524, column: 8, scope: !5103)
!5305 = !DILocation(line: 1526, column: 15, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1525, column: 6)
!5307 = !DILocation(line: 1527, column: 31, scope: !5306)
!5308 = !DILocation(line: 1527, column: 15, scope: !5306)
!5309 = !DILocation(line: 1528, column: 17, scope: !5306)
!5310 = !DILocation(line: 1530, column: 43, scope: !5306)
!5311 = !DILocation(line: 1530, column: 49, scope: !5306)
!5312 = !DILocation(line: 1531, column: 34, scope: !5306)
!5313 = !DILocation(line: 1531, column: 40, scope: !5306)
!5314 = !DILocation(line: 1528, column: 8, scope: !5306)
!5315 = !DILocation(line: 1533, column: 6, scope: !5306)
!5316 = !DILocation(line: 1535, column: 8, scope: !5108)
!5317 = !DILocation(line: 1535, column: 8, scope: !5103)
!5318 = !DILocation(line: 1537, column: 26, scope: !5107)
!5319 = !DILocation(line: 0, scope: !5107)
!5320 = !DILocation(line: 1539, column: 21, scope: !5107)
!5321 = !DILocation(line: 1543, column: 19, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1543, column: 19)
!5323 = !DILocation(line: 1543, column: 19, scope: !5107)
!5324 = !DILocation(line: 1544, column: 17, scope: !5322)
!5325 = !DILocation(line: 1548, column: 23, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1548, column: 20)
!5327 = !DILocation(line: 1548, column: 28, scope: !5326)
!5328 = !DILocation(line: 1548, column: 40, scope: !5326)
!5329 = !DILocation(line: 0, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1551, column: 12)
!5331 = !DILocation(line: 1551, column: 15, scope: !5330)
!5332 = !DILocation(line: 1548, column: 46, scope: !5326)
!5333 = !DILocation(line: 1548, column: 56, scope: !5326)
!5334 = !DILocation(line: 1548, column: 20, scope: !5107)
!5335 = !DILocation(line: 1551, column: 25, scope: !5330)
!5336 = !DILocation(line: 1551, column: 12, scope: !5107)
!5337 = !DILocation(line: 1552, column: 11, scope: !5330)
!5338 = !DILocation(line: 1554, column: 20, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1554, column: 20)
!5340 = !DILocation(line: 1554, column: 20, scope: !5108)
!5341 = !DILocation(line: 1555, column: 13, scope: !5339)
!5342 = !DILocation(line: 1520, column: 44, scope: !5104)
!5343 = !DILocation(line: 1520, column: 7, scope: !5104)
!5344 = distinct !{!5344, !5299, !5345}
!5345 = !DILocation(line: 1557, column: 2, scope: !5105)
!5346 = !DILocation(line: 1558, column: 15, scope: !5090)
!5347 = !DILocation(line: 1559, column: 13, scope: !5090)
!5348 = !DILocation(line: 1563, column: 23, scope: !5111)
!5349 = !DILocation(line: 1563, column: 11, scope: !5090)
!5350 = !DILocation(line: 1574, column: 15, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1573, column: 5)
!5352 = !DILocation(line: 1575, column: 19, scope: !5351)
!5353 = !DILocation(line: 0, scope: !5071)
!5354 = !DILocation(line: 1579, column: 12, scope: !5045)
!5355 = !DILocation(line: 1580, column: 11, scope: !5045)
!5356 = !DILocation(line: 1581, column: 10, scope: !5045)
!5357 = !DILocation(line: 1582, column: 3, scope: !5045)
!5358 = !DILocation(line: 1583, column: 3, scope: !5045)
!5359 = !DILocation(line: 1585, column: 14, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1585, column: 7)
!5361 = !DILocation(line: 1585, column: 29, scope: !5360)
!5362 = !DILocation(line: 1585, column: 21, scope: !5360)
!5363 = !DILocation(line: 1585, column: 45, scope: !5360)
!5364 = !DILocation(line: 1585, column: 60, scope: !5360)
!5365 = !DILocation(line: 1585, column: 52, scope: !5360)
!5366 = !DILocation(line: 1587, column: 11, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1587, column: 11)
!5368 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 1586, column: 5)
!5369 = !DILocation(line: 1587, column: 11, scope: !5368)
!5370 = !DILocation(line: 1588, column: 2, scope: !5367)
!5371 = !DILocation(line: 1594, column: 1, scope: !5045)
!5372 = distinct !DISubprogram(name: "calculate_must_precede_follow", scope: !3, file: !3, line: 1611, type: !5373, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5375)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !1962, !750, !750, !750, !750, !1991, !1991, !1991}
!5375 = !{!5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386}
!5376 = !DILocalVariable(name: "u_node", arg: 1, scope: !5372, file: !3, line: 1611, type: !1962)
!5377 = !DILocalVariable(name: "start", arg: 2, scope: !5372, file: !3, line: 1611, type: !750)
!5378 = !DILocalVariable(name: "end", arg: 3, scope: !5372, file: !3, line: 1611, type: !750)
!5379 = !DILocalVariable(name: "step", arg: 4, scope: !5372, file: !3, line: 1612, type: !750)
!5380 = !DILocalVariable(name: "ii", arg: 5, scope: !5372, file: !3, line: 1612, type: !750)
!5381 = !DILocalVariable(name: "sched_nodes", arg: 6, scope: !5372, file: !3, line: 1612, type: !1991)
!5382 = !DILocalVariable(name: "must_precede", arg: 7, scope: !5372, file: !3, line: 1613, type: !1991)
!5383 = !DILocalVariable(name: "must_follow", arg: 8, scope: !5372, file: !3, line: 1613, type: !1991)
!5384 = !DILocalVariable(name: "e", scope: !5372, file: !3, line: 1615, type: !1970)
!5385 = !DILocalVariable(name: "first_cycle_in_window", scope: !5372, file: !3, line: 1616, type: !750)
!5386 = !DILocalVariable(name: "last_cycle_in_window", scope: !5372, file: !3, line: 1616, type: !750)
!5387 = !DILocation(line: 0, scope: !5372)
!5388 = !DILocation(line: 1618, column: 3, scope: !5372)
!5389 = !DILocation(line: 1627, column: 33, scope: !5372)
!5390 = !DILocation(line: 1627, column: 27, scope: !5372)
!5391 = !DILocation(line: 1628, column: 26, scope: !5372)
!5392 = !DILocation(line: 1630, column: 3, scope: !5372)
!5393 = !DILocation(line: 1631, column: 3, scope: !5372)
!5394 = !DILocation(line: 1633, column: 7, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1633, column: 7)
!5396 = !DILocation(line: 1633, column: 7, scope: !5372)
!5397 = !DILocation(line: 1634, column: 5, scope: !5395)
!5398 = !DILocation(line: 1647, column: 20, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1647, column: 3)
!5400 = !DILocation(line: 1647, column: 8, scope: !5399)
!5401 = !DILocation(line: 0, scope: !5399)
!5402 = !DILocation(line: 1647, column: 26, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 1647, column: 3)
!5404 = !DILocation(line: 1647, column: 3, scope: !5399)
!5405 = !DILocation(line: 1648, column: 9, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 1648, column: 9)
!5407 = !DILocation(line: 1649, column: 2, scope: !5406)
!5408 = !DILocation(line: 1649, column: 7, scope: !5406)
!5409 = !DILocation(line: 1649, column: 33, scope: !5406)
!5410 = !DILocation(line: 1649, column: 42, scope: !5406)
!5411 = !DILocation(line: 1649, column: 27, scope: !5406)
!5412 = !DILocation(line: 1649, column: 49, scope: !5406)
!5413 = !DILocation(line: 1648, column: 9, scope: !5403)
!5414 = !DILocation(line: 1652, column: 6, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1652, column: 6)
!5416 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1651, column: 7)
!5417 = !DILocation(line: 1652, column: 6, scope: !5416)
!5418 = !DILocation(line: 1653, column: 4, scope: !5415)
!5419 = !DILocation(line: 1655, column: 28, scope: !5416)
!5420 = !DILocation(line: 0, scope: !5416)
!5421 = !DILocation(line: 1655, column: 33, scope: !5416)
!5422 = !DILocation(line: 1655, column: 2, scope: !5416)
!5423 = !DILocation(line: 1656, column: 7, scope: !5416)
!5424 = !DILocation(line: 1647, column: 39, scope: !5403)
!5425 = !DILocation(line: 1647, column: 3, scope: !5403)
!5426 = distinct !{!5426, !5404, !5427}
!5427 = !DILocation(line: 1656, column: 7, scope: !5399)
!5428 = !DILocation(line: 1658, column: 7, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1658, column: 7)
!5430 = !DILocation(line: 1658, column: 7, scope: !5372)
!5431 = !DILocation(line: 1659, column: 5, scope: !5429)
!5432 = !DILocation(line: 1672, column: 20, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1672, column: 3)
!5434 = !DILocation(line: 1672, column: 8, scope: !5433)
!5435 = !DILocation(line: 0, scope: !5433)
!5436 = !DILocation(line: 1672, column: 27, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 1672, column: 3)
!5438 = !DILocation(line: 1672, column: 3, scope: !5433)
!5439 = !DILocation(line: 1673, column: 9, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 1673, column: 9)
!5441 = !DILocation(line: 1674, column: 2, scope: !5440)
!5442 = !DILocation(line: 1674, column: 7, scope: !5440)
!5443 = !DILocation(line: 1674, column: 34, scope: !5440)
!5444 = !DILocation(line: 1674, column: 43, scope: !5440)
!5445 = !DILocation(line: 1674, column: 28, scope: !5440)
!5446 = !DILocation(line: 1674, column: 50, scope: !5440)
!5447 = !DILocation(line: 1673, column: 9, scope: !5437)
!5448 = !DILocation(line: 1677, column: 6, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1677, column: 6)
!5450 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1676, column: 7)
!5451 = !DILocation(line: 1677, column: 6, scope: !5450)
!5452 = !DILocation(line: 1678, column: 4, scope: !5449)
!5453 = !DILocation(line: 1680, column: 27, scope: !5450)
!5454 = !DILocation(line: 0, scope: !5450)
!5455 = !DILocation(line: 1680, column: 33, scope: !5450)
!5456 = !DILocation(line: 1680, column: 2, scope: !5450)
!5457 = !DILocation(line: 1681, column: 7, scope: !5450)
!5458 = !DILocation(line: 1672, column: 40, scope: !5437)
!5459 = !DILocation(line: 1672, column: 3, scope: !5437)
!5460 = distinct !{!5460, !5438, !5461}
!5461 = !DILocation(line: 1681, column: 7, scope: !5433)
!5462 = !DILocation(line: 1683, column: 7, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1683, column: 7)
!5464 = !DILocation(line: 1683, column: 7, scope: !5372)
!5465 = !DILocation(line: 1684, column: 5, scope: !5463)
!5466 = !DILocation(line: 1685, column: 1, scope: !5372)
!5467 = distinct !DISubprogram(name: "try_scheduling_node_in_cycle", scope: !3, file: !3, line: 1698, type: !5468, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!749, !2013, !1962, !750, !750, !1991, !2012, !1991, !1991}
!5470 = !{!5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480}
!5471 = !DILocalVariable(name: "ps", arg: 1, scope: !5467, file: !3, line: 1698, type: !2013)
!5472 = !DILocalVariable(name: "u_node", arg: 2, scope: !5467, file: !3, line: 1698, type: !1962)
!5473 = !DILocalVariable(name: "u", arg: 3, scope: !5467, file: !3, line: 1699, type: !750)
!5474 = !DILocalVariable(name: "cycle", arg: 4, scope: !5467, file: !3, line: 1699, type: !750)
!5475 = !DILocalVariable(name: "sched_nodes", arg: 5, scope: !5467, file: !3, line: 1699, type: !1991)
!5476 = !DILocalVariable(name: "num_splits", arg: 6, scope: !5467, file: !3, line: 1700, type: !2012)
!5477 = !DILocalVariable(name: "must_precede", arg: 7, scope: !5467, file: !3, line: 1700, type: !1991)
!5478 = !DILocalVariable(name: "must_follow", arg: 8, scope: !5467, file: !3, line: 1701, type: !1991)
!5479 = !DILocalVariable(name: "psi", scope: !5467, file: !3, line: 1703, type: !2021)
!5480 = !DILocalVariable(name: "success", scope: !5467, file: !3, line: 1704, type: !749)
!5481 = !DILocation(line: 0, scope: !5467)
!5482 = !DILocation(line: 1706, column: 3, scope: !5467)
!5483 = !DILocation(line: 1707, column: 9, scope: !5467)
!5484 = !DILocation(line: 1709, column: 7, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1709, column: 7)
!5486 = !DILocation(line: 1709, column: 7, scope: !5467)
!5487 = !DILocation(line: 1711, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1710, column: 5)
!5489 = !DILocation(line: 1711, column: 27, scope: !5488)
!5490 = !DILocation(line: 1712, column: 7, scope: !5488)
!5491 = !DILocation(line: 1714, column: 19, scope: !5488)
!5492 = !DILocation(line: 1715, column: 11, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1715, column: 11)
!5494 = !DILocation(line: 1715, column: 11, scope: !5488)
!5495 = !DILocation(line: 1716, column: 2, scope: !5493)
!5496 = !DILocation(line: 1720, column: 3, scope: !5467)
!5497 = distinct !DISubprogram(name: "verify_partial_schedule", scope: !3, file: !3, line: 2013, type: !5498, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !2013, !1991}
!5500 = !{!5501, !5502, !5503, !5504, !5505}
!5501 = !DILocalVariable(name: "ps", arg: 1, scope: !5497, file: !3, line: 2013, type: !2013)
!5502 = !DILocalVariable(name: "sched_nodes", arg: 2, scope: !5497, file: !3, line: 2013, type: !1991)
!5503 = !DILocalVariable(name: "row", scope: !5497, file: !3, line: 2015, type: !750)
!5504 = !DILocalVariable(name: "crr_insn", scope: !5497, file: !3, line: 2016, type: !2021)
!5505 = !DILocalVariable(name: "u", scope: !5506, file: !3, line: 2021, type: !1962)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 2020, column: 7)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 2019, column: 5)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 2019, column: 5)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 2018, column: 3)
!5510 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 2018, column: 3)
!5511 = !DILocation(line: 0, scope: !5497)
!5512 = !DILocation(line: 0, scope: !5509)
!5513 = !DILocation(line: 0, scope: !5508)
!5514 = !DILocation(line: 0, scope: !5506)
!5515 = !DILocation(line: 2018, column: 8, scope: !5510)
!5516 = !DILocation(line: 0, scope: !5510)
!5517 = !DILocation(line: 2018, column: 27, scope: !5509)
!5518 = !DILocation(line: 2018, column: 21, scope: !5509)
!5519 = !DILocation(line: 2018, column: 3, scope: !5510)
!5520 = !DILocation(line: 2019, column: 25, scope: !5508)
!5521 = !DILocation(line: 2019, column: 21, scope: !5508)
!5522 = !DILocation(line: 2019, column: 10, scope: !5508)
!5523 = !DILocation(line: 2019, column: 5, scope: !5508)
!5524 = !DILocation(line: 2021, column: 29, scope: !5506)
!5525 = !DILocation(line: 2023, column: 2, scope: !5506)
!5526 = !DILocation(line: 2026, column: 2, scope: !5506)
!5527 = !DILocation(line: 2027, column: 2, scope: !5506)
!5528 = !DILocation(line: 2019, column: 67, scope: !5507)
!5529 = !DILocation(line: 2019, column: 5, scope: !5507)
!5530 = distinct !{!5530, !5523, !5531}
!5531 = !DILocation(line: 2028, column: 7, scope: !5508)
!5532 = !DILocation(line: 2018, column: 34, scope: !5509)
!5533 = !DILocation(line: 2018, column: 3, scope: !5509)
!5534 = distinct !{!5534, !5519, !5535}
!5535 = !DILocation(line: 2028, column: 7, scope: !5510)
!5536 = !DILocation(line: 2029, column: 1, scope: !5497)
!5537 = distinct !DISubprogram(name: "reset_partial_schedule", scope: !3, file: !3, line: 2479, type: !3761, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5538)
!5538 = !{!5539, !5540}
!5539 = !DILocalVariable(name: "ps", arg: 1, scope: !5537, file: !3, line: 2479, type: !2013)
!5540 = !DILocalVariable(name: "new_ii", arg: 2, scope: !5537, file: !3, line: 2479, type: !750)
!5541 = !DILocation(line: 0, scope: !5537)
!5542 = !DILocation(line: 2481, column: 8, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2481, column: 7)
!5544 = !DILocation(line: 2481, column: 7, scope: !5537)
!5545 = !DILocation(line: 2483, column: 3, scope: !5537)
!5546 = !DILocation(line: 2484, column: 21, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 2484, column: 7)
!5548 = !DILocation(line: 2484, column: 14, scope: !5547)
!5549 = !DILocation(line: 2484, column: 7, scope: !5537)
!5550 = !DILocation(line: 2486, column: 44, scope: !5537)
!5551 = !DILocation(line: 2486, column: 50, scope: !5537)
!5552 = !DILocation(line: 2487, column: 8, scope: !5537)
!5553 = !DILocation(line: 2486, column: 30, scope: !5537)
!5554 = !DILocation(line: 2486, column: 12, scope: !5537)
!5555 = !DILocation(line: 2488, column: 3, scope: !5537)
!5556 = !DILocation(line: 2489, column: 10, scope: !5537)
!5557 = !DILocation(line: 2490, column: 7, scope: !5537)
!5558 = !DILocation(line: 2490, column: 17, scope: !5537)
!5559 = !DILocation(line: 2491, column: 7, scope: !5537)
!5560 = !DILocation(line: 2491, column: 17, scope: !5537)
!5561 = !DILocation(line: 2492, column: 1, scope: !5537)
!5562 = distinct !DISubprogram(name: "compute_split_row", scope: !3, file: !3, line: 1960, type: !5563, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!750, !1991, !750, !750, !750, !1962}
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5581}
!5566 = !DILocalVariable(name: "sched_nodes", arg: 1, scope: !5562, file: !3, line: 1960, type: !1991)
!5567 = !DILocalVariable(name: "low", arg: 2, scope: !5562, file: !3, line: 1960, type: !750)
!5568 = !DILocalVariable(name: "up", arg: 3, scope: !5562, file: !3, line: 1960, type: !750)
!5569 = !DILocalVariable(name: "ii", arg: 4, scope: !5562, file: !3, line: 1960, type: !750)
!5570 = !DILocalVariable(name: "u_node", arg: 5, scope: !5562, file: !3, line: 1961, type: !1962)
!5571 = !DILocalVariable(name: "e", scope: !5562, file: !3, line: 1963, type: !1970)
!5572 = !DILocalVariable(name: "lower", scope: !5562, file: !3, line: 1964, type: !750)
!5573 = !DILocalVariable(name: "upper", scope: !5562, file: !3, line: 1964, type: !750)
!5574 = !DILocalVariable(name: "crit_pred", scope: !5562, file: !3, line: 1965, type: !1962)
!5575 = !DILocalVariable(name: "crit_succ", scope: !5562, file: !3, line: 1966, type: !1962)
!5576 = !DILocalVariable(name: "crit_cycle", scope: !5562, file: !3, line: 1967, type: !750)
!5577 = !DILocalVariable(name: "v_node", scope: !5578, file: !3, line: 1971, type: !1962)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1970, column: 5)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 1969, column: 3)
!5580 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 1969, column: 3)
!5581 = !DILocalVariable(name: "v_node", scope: !5582, file: !3, line: 1990, type: !1962)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 1989, column: 5)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1988, column: 3)
!5584 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 1988, column: 3)
!5585 = !DILocation(line: 0, scope: !5562)
!5586 = !DILocation(line: 1969, column: 20, scope: !5580)
!5587 = !DILocation(line: 1969, column: 8, scope: !5580)
!5588 = !DILocation(line: 0, scope: !5580)
!5589 = !DILocation(line: 1969, column: 26, scope: !5579)
!5590 = !DILocation(line: 1969, column: 3, scope: !5580)
!5591 = !DILocation(line: 1971, column: 32, scope: !5578)
!5592 = !DILocation(line: 0, scope: !5578)
!5593 = !DILocation(line: 1973, column: 11, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 1973, column: 11)
!5595 = !DILocation(line: 1974, column: 4, scope: !5594)
!5596 = !DILocation(line: 1974, column: 15, scope: !5594)
!5597 = !DILocation(line: 1974, column: 40, scope: !5594)
!5598 = !DILocation(line: 1974, column: 35, scope: !5594)
!5599 = !DILocation(line: 1974, column: 54, scope: !5594)
!5600 = !DILocation(line: 1974, column: 63, scope: !5594)
!5601 = !DILocation(line: 1974, column: 48, scope: !5594)
!5602 = !DILocation(line: 1974, column: 12, scope: !5594)
!5603 = !DILocation(line: 1973, column: 11, scope: !5578)
!5604 = !DILocation(line: 1975, column: 26, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 1975, column: 6)
!5606 = !DILocation(line: 1975, column: 6, scope: !5594)
!5607 = !DILocation(line: 1979, column: 4, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 1976, column: 4)
!5609 = !DILocation(line: 1969, column: 39, scope: !5579)
!5610 = !DILocation(line: 1969, column: 3, scope: !5579)
!5611 = distinct !{!5611, !5590, !5612}
!5612 = !DILocation(line: 1980, column: 5, scope: !5580)
!5613 = !DILocation(line: 1982, column: 17, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 1982, column: 7)
!5615 = !DILocation(line: 1982, column: 7, scope: !5562)
!5616 = !DILocation(line: 1984, column: 20, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1983, column: 5)
!5618 = !DILocation(line: 1984, column: 43, scope: !5617)
!5619 = !DILocation(line: 1985, column: 14, scope: !5617)
!5620 = !DILocation(line: 1988, column: 20, scope: !5584)
!5621 = !DILocation(line: 1988, column: 8, scope: !5584)
!5622 = !DILocation(line: 0, scope: !5584)
!5623 = !DILocation(line: 1988, column: 27, scope: !5583)
!5624 = !DILocation(line: 1988, column: 3, scope: !5584)
!5625 = !DILocation(line: 1990, column: 32, scope: !5582)
!5626 = !DILocation(line: 0, scope: !5582)
!5627 = !DILocation(line: 1991, column: 11, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 1991, column: 11)
!5629 = !DILocation(line: 1992, column: 4, scope: !5628)
!5630 = !DILocation(line: 1992, column: 14, scope: !5628)
!5631 = !DILocation(line: 1992, column: 39, scope: !5628)
!5632 = !DILocation(line: 1992, column: 34, scope: !5628)
!5633 = !DILocation(line: 1992, column: 53, scope: !5628)
!5634 = !DILocation(line: 1992, column: 62, scope: !5628)
!5635 = !DILocation(line: 1992, column: 47, scope: !5628)
!5636 = !DILocation(line: 1992, column: 11, scope: !5628)
!5637 = !DILocation(line: 1991, column: 11, scope: !5582)
!5638 = !DILocation(line: 1993, column: 26, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1993, column: 6)
!5640 = !DILocation(line: 1993, column: 6, scope: !5628)
!5641 = !DILocation(line: 1997, column: 4, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1994, column: 4)
!5643 = !DILocation(line: 1988, column: 40, scope: !5583)
!5644 = !DILocation(line: 1988, column: 3, scope: !5583)
!5645 = distinct !{!5645, !5624, !5646}
!5646 = !DILocation(line: 1998, column: 5, scope: !5584)
!5647 = !DILocation(line: 2000, column: 17, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 2000, column: 7)
!5649 = !DILocation(line: 2000, column: 7, scope: !5562)
!5650 = !DILocation(line: 2002, column: 20, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 2001, column: 5)
!5652 = !DILocation(line: 2003, column: 14, scope: !5651)
!5653 = !DILocation(line: 2006, column: 7, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 2006, column: 7)
!5655 = !DILocation(line: 2006, column: 7, scope: !5562)
!5656 = !DILocation(line: 2007, column: 5, scope: !5654)
!5657 = !DILocation(line: 2009, column: 10, scope: !5562)
!5658 = !DILocation(line: 2010, column: 1, scope: !5562)
!5659 = distinct !DISubprogram(name: "ps_insert_empty_row", scope: !3, file: !3, line: 1878, type: !5660, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5662)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{null, !2013, !750, !1991}
!5662 = !{!5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5678, !5679, !5686}
!5663 = !DILocalVariable(name: "ps", arg: 1, scope: !5659, file: !3, line: 1878, type: !2013)
!5664 = !DILocalVariable(name: "split_row", arg: 2, scope: !5659, file: !3, line: 1878, type: !750)
!5665 = !DILocalVariable(name: "sched_nodes", arg: 3, scope: !5659, file: !3, line: 1879, type: !1991)
!5666 = !DILocalVariable(name: "crr_insn", scope: !5659, file: !3, line: 1881, type: !2021)
!5667 = !DILocalVariable(name: "rows_new", scope: !5659, file: !3, line: 1882, type: !2020)
!5668 = !DILocalVariable(name: "ii", scope: !5659, file: !3, line: 1883, type: !750)
!5669 = !DILocalVariable(name: "new_ii", scope: !5659, file: !3, line: 1884, type: !750)
!5670 = !DILocalVariable(name: "row", scope: !5659, file: !3, line: 1885, type: !750)
!5671 = !DILocalVariable(name: "u", scope: !5672, file: !3, line: 1907, type: !1962)
!5672 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1906, column: 2)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1904, column: 7)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1904, column: 7)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1901, column: 5)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1900, column: 3)
!5677 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1900, column: 3)
!5678 = !DILocalVariable(name: "new_time", scope: !5672, file: !3, line: 1908, type: !750)
!5679 = !DILocalVariable(name: "u", scope: !5680, file: !3, line: 1927, type: !1962)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 1926, column: 2)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 1924, column: 7)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1924, column: 7)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 1921, column: 5)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1920, column: 3)
!5685 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1920, column: 3)
!5686 = !DILocalVariable(name: "new_time", scope: !5680, file: !3, line: 1928, type: !750)
!5687 = !DILocation(line: 0, scope: !5659)
!5688 = !DILocation(line: 1883, column: 16, scope: !5659)
!5689 = !DILocation(line: 1884, column: 19, scope: !5659)
!5690 = !DILocation(line: 1887, column: 3, scope: !5659)
!5691 = !DILocation(line: 1891, column: 20, scope: !5659)
!5692 = !DILocation(line: 1891, column: 13, scope: !5659)
!5693 = !DILocation(line: 1892, column: 15, scope: !5659)
!5694 = !DILocation(line: 1893, column: 7, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1893, column: 7)
!5696 = !DILocation(line: 1893, column: 7, scope: !5659)
!5697 = !DILocation(line: 1894, column: 5, scope: !5695)
!5698 = !DILocation(line: 1896, column: 3, scope: !5659)
!5699 = !DILocation(line: 1897, column: 36, scope: !5659)
!5700 = !DILocation(line: 1897, column: 3, scope: !5659)
!5701 = !DILocation(line: 1899, column: 39, scope: !5659)
!5702 = !DILocation(line: 1899, column: 30, scope: !5659)
!5703 = !DILocation(line: 1899, column: 14, scope: !5659)
!5704 = !DILocation(line: 0, scope: !5675)
!5705 = !DILocation(line: 1900, column: 8, scope: !5677)
!5706 = !DILocation(line: 0, scope: !5677)
!5707 = !DILocation(line: 1900, column: 21, scope: !5676)
!5708 = !DILocation(line: 1900, column: 3, scope: !5677)
!5709 = !DILocation(line: 1902, column: 27, scope: !5675)
!5710 = !DILocation(line: 1902, column: 23, scope: !5675)
!5711 = !DILocation(line: 1902, column: 7, scope: !5675)
!5712 = !DILocation(line: 1902, column: 21, scope: !5675)
!5713 = !DILocation(line: 1903, column: 11, scope: !5675)
!5714 = !DILocation(line: 1903, column: 7, scope: !5675)
!5715 = !DILocation(line: 1903, column: 21, scope: !5675)
!5716 = !DILocation(line: 1904, column: 12, scope: !5674)
!5717 = !DILocation(line: 0, scope: !5674)
!5718 = !DILocation(line: 1904, column: 7, scope: !5674)
!5719 = !DILocation(line: 1907, column: 31, scope: !5672)
!5720 = !DILocation(line: 0, scope: !5672)
!5721 = !DILocation(line: 1908, column: 19, scope: !5672)
!5722 = !DILocation(line: 1908, column: 52, scope: !5672)
!5723 = !DILocation(line: 1908, column: 34, scope: !5672)
!5724 = !DILocation(line: 1910, column: 19, scope: !5672)
!5725 = !DILocation(line: 1911, column: 14, scope: !5672)
!5726 = !DILocation(line: 1911, column: 20, scope: !5672)
!5727 = !DILocation(line: 1912, column: 29, scope: !5672)
!5728 = !DILocation(line: 1912, column: 4, scope: !5672)
!5729 = !DILocation(line: 1912, column: 18, scope: !5672)
!5730 = !DILocation(line: 1913, column: 31, scope: !5672)
!5731 = !DILocation(line: 1913, column: 4, scope: !5672)
!5732 = !DILocation(line: 1913, column: 20, scope: !5672)
!5733 = !DILocation(line: 1905, column: 36, scope: !5673)
!5734 = !DILocation(line: 1904, column: 7, scope: !5673)
!5735 = distinct !{!5735, !5718, !5736}
!5736 = !DILocation(line: 1914, column: 2, scope: !5674)
!5737 = !DILocation(line: 1900, column: 37, scope: !5676)
!5738 = !DILocation(line: 1900, column: 3, scope: !5676)
!5739 = distinct !{!5739, !5708, !5740}
!5740 = !DILocation(line: 1916, column: 5, scope: !5677)
!5741 = !DILocation(line: 1918, column: 3, scope: !5659)
!5742 = !DILocation(line: 1918, column: 23, scope: !5659)
!5743 = !DILocation(line: 1920, column: 8, scope: !5685)
!5744 = !DILocation(line: 0, scope: !5685)
!5745 = !DILocation(line: 1920, column: 29, scope: !5684)
!5746 = !DILocation(line: 1920, column: 3, scope: !5685)
!5747 = !DILocation(line: 1922, column: 31, scope: !5683)
!5748 = !DILocation(line: 1922, column: 27, scope: !5683)
!5749 = !DILocation(line: 1922, column: 20, scope: !5683)
!5750 = !DILocation(line: 1922, column: 7, scope: !5683)
!5751 = !DILocation(line: 1922, column: 25, scope: !5683)
!5752 = !DILocation(line: 1923, column: 11, scope: !5683)
!5753 = !DILocation(line: 1923, column: 7, scope: !5683)
!5754 = !DILocation(line: 1923, column: 21, scope: !5683)
!5755 = !DILocation(line: 1924, column: 12, scope: !5682)
!5756 = !DILocation(line: 0, scope: !5682)
!5757 = !DILocation(line: 1924, column: 7, scope: !5682)
!5758 = !DILocation(line: 1927, column: 31, scope: !5680)
!5759 = !DILocation(line: 0, scope: !5680)
!5760 = !DILocation(line: 1928, column: 19, scope: !5680)
!5761 = !DILocation(line: 1928, column: 52, scope: !5680)
!5762 = !DILocation(line: 1928, column: 34, scope: !5680)
!5763 = !DILocation(line: 1928, column: 58, scope: !5680)
!5764 = !DILocation(line: 1930, column: 19, scope: !5680)
!5765 = !DILocation(line: 1931, column: 14, scope: !5680)
!5766 = !DILocation(line: 1931, column: 20, scope: !5680)
!5767 = !DILocation(line: 1932, column: 29, scope: !5680)
!5768 = !DILocation(line: 1932, column: 4, scope: !5680)
!5769 = !DILocation(line: 1932, column: 18, scope: !5680)
!5770 = !DILocation(line: 1933, column: 31, scope: !5680)
!5771 = !DILocation(line: 1933, column: 4, scope: !5680)
!5772 = !DILocation(line: 1933, column: 20, scope: !5680)
!5773 = !DILocation(line: 1925, column: 36, scope: !5681)
!5774 = !DILocation(line: 1924, column: 7, scope: !5681)
!5775 = distinct !{!5775, !5757, !5776}
!5776 = !DILocation(line: 1934, column: 2, scope: !5682)
!5777 = !DILocation(line: 1920, column: 3, scope: !5684)
!5778 = distinct !{!5778, !5746, !5779}
!5779 = !DILocation(line: 1935, column: 5, scope: !5685)
!5780 = !DILocation(line: 1938, column: 23, scope: !5659)
!5781 = !DILocation(line: 1938, column: 49, scope: !5659)
!5782 = !DILocation(line: 1938, column: 33, scope: !5659)
!5783 = !DILocation(line: 1939, column: 8, scope: !5659)
!5784 = !DILocation(line: 1939, column: 36, scope: !5659)
!5785 = !DILocation(line: 1939, column: 5, scope: !5659)
!5786 = !DILocation(line: 1938, column: 17, scope: !5659)
!5787 = !DILocation(line: 1940, column: 23, scope: !5659)
!5788 = !DILocation(line: 1940, column: 49, scope: !5659)
!5789 = !DILocation(line: 1940, column: 33, scope: !5659)
!5790 = !DILocation(line: 1941, column: 8, scope: !5659)
!5791 = !DILocation(line: 1941, column: 36, scope: !5659)
!5792 = !DILocation(line: 1941, column: 5, scope: !5659)
!5793 = !DILocation(line: 1940, column: 17, scope: !5659)
!5794 = !DILocation(line: 1942, column: 13, scope: !5659)
!5795 = !DILocation(line: 1942, column: 3, scope: !5659)
!5796 = !DILocation(line: 1943, column: 12, scope: !5659)
!5797 = !DILocation(line: 1944, column: 10, scope: !5659)
!5798 = !DILocation(line: 1945, column: 3, scope: !5659)
!5799 = !DILocation(line: 1947, column: 3, scope: !5659)
!5800 = !DILocation(line: 1949, column: 7, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1949, column: 7)
!5802 = !DILocation(line: 1949, column: 7, scope: !5659)
!5803 = !DILocation(line: 1950, column: 61, scope: !5801)
!5804 = !DILocation(line: 1951, column: 11, scope: !5801)
!5805 = !DILocation(line: 1950, column: 5, scope: !5801)
!5806 = !DILocation(line: 1952, column: 1, scope: !5659)
!5807 = distinct !DISubprogram(name: "ps_add_node_check_conflicts", scope: !3, file: !3, line: 2781, type: !5808, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5810)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{!2021, !2013, !1962, !750, !1991, !1991}
!5810 = !{!5811, !5812, !5813, !5814, !5815, !5816, !5817}
!5811 = !DILocalVariable(name: "ps", arg: 1, scope: !5807, file: !3, line: 2781, type: !2013)
!5812 = !DILocalVariable(name: "n", arg: 2, scope: !5807, file: !3, line: 2781, type: !1962)
!5813 = !DILocalVariable(name: "c", arg: 3, scope: !5807, file: !3, line: 2782, type: !750)
!5814 = !DILocalVariable(name: "must_precede", arg: 4, scope: !5807, file: !3, line: 2782, type: !1991)
!5815 = !DILocalVariable(name: "must_follow", arg: 5, scope: !5807, file: !3, line: 2783, type: !1991)
!5816 = !DILocalVariable(name: "has_conflicts", scope: !5807, file: !3, line: 2785, type: !750)
!5817 = !DILocalVariable(name: "ps_i", scope: !5807, file: !3, line: 2786, type: !2021)
!5818 = !DILocation(line: 0, scope: !5807)
!5819 = !DILocation(line: 2790, column: 17, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2790, column: 7)
!5821 = !DILocation(line: 2790, column: 15, scope: !5820)
!5822 = !DILocation(line: 2790, column: 7, scope: !5807)
!5823 = !DILocation(line: 2793, column: 19, scope: !5807)
!5824 = !DILocation(line: 2794, column: 5, scope: !5807)
!5825 = !DILocation(line: 2794, column: 13, scope: !5807)
!5826 = !DILocation(line: 2794, column: 21, scope: !5807)
!5827 = !DILocation(line: 2795, column: 9, scope: !5807)
!5828 = !DILocation(line: 2796, column: 11, scope: !5807)
!5829 = !DILocation(line: 2797, column: 11, scope: !5807)
!5830 = !DILocation(line: 2795, column: 12, scope: !5807)
!5831 = !DILocation(line: 0, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2802, column: 5)
!5833 = !DILocation(line: 2801, column: 3, scope: !5807)
!5834 = !DILocation(line: 2803, column: 13, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 2803, column: 11)
!5836 = !DILocation(line: 2803, column: 11, scope: !5832)
!5837 = !DILocation(line: 2805, column: 23, scope: !5832)
!5838 = !DILocation(line: 2806, column: 9, scope: !5832)
!5839 = !DILocation(line: 2806, column: 17, scope: !5832)
!5840 = !DILocation(line: 2806, column: 25, scope: !5832)
!5841 = !DILocation(line: 2807, column: 6, scope: !5832)
!5842 = !DILocation(line: 2808, column: 15, scope: !5832)
!5843 = !DILocation(line: 2809, column: 15, scope: !5832)
!5844 = !DILocation(line: 2807, column: 9, scope: !5832)
!5845 = distinct !{!5845, !5833, !5846}
!5846 = !DILocation(line: 2810, column: 5, scope: !5807)
!5847 = !DILocation(line: 2812, column: 7, scope: !5807)
!5848 = !DILocation(line: 2814, column: 7, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 2813, column: 5)
!5850 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2812, column: 7)
!5851 = !DILocation(line: 2815, column: 7, scope: !5849)
!5852 = !DILocation(line: 2818, column: 19, scope: !5807)
!5853 = !DILocation(line: 2818, column: 17, scope: !5807)
!5854 = !DILocation(line: 2819, column: 19, scope: !5807)
!5855 = !DILocation(line: 2819, column: 17, scope: !5807)
!5856 = !DILocation(line: 2820, column: 3, scope: !5807)
!5857 = !DILocation(line: 2821, column: 1, scope: !5807)
!5858 = distinct !DISubprogram(name: "add_node_to_ps", scope: !3, file: !3, line: 2679, type: !5808, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5859)
!5859 = !{!5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867}
!5860 = !DILocalVariable(name: "ps", arg: 1, scope: !5858, file: !3, line: 2679, type: !2013)
!5861 = !DILocalVariable(name: "node", arg: 2, scope: !5858, file: !3, line: 2679, type: !1962)
!5862 = !DILocalVariable(name: "cycle", arg: 3, scope: !5858, file: !3, line: 2679, type: !750)
!5863 = !DILocalVariable(name: "must_precede", arg: 4, scope: !5858, file: !3, line: 2680, type: !1991)
!5864 = !DILocalVariable(name: "must_follow", arg: 5, scope: !5858, file: !3, line: 2680, type: !1991)
!5865 = !DILocalVariable(name: "ps_i", scope: !5858, file: !3, line: 2682, type: !2021)
!5866 = !DILocalVariable(name: "rest_count", scope: !5858, file: !3, line: 2683, type: !750)
!5867 = !DILocalVariable(name: "row", scope: !5858, file: !3, line: 2684, type: !750)
!5868 = !DILocation(line: 0, scope: !5858)
!5869 = !DILocation(line: 2684, column: 13, scope: !5858)
!5870 = !DILocation(line: 2686, column: 11, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2686, column: 7)
!5872 = !DILocation(line: 2686, column: 7, scope: !5871)
!5873 = !DILocation(line: 2687, column: 7, scope: !5871)
!5874 = !DILocation(line: 2687, column: 25, scope: !5871)
!5875 = !DILocation(line: 2687, column: 43, scope: !5871)
!5876 = !DILocation(line: 2687, column: 40, scope: !5871)
!5877 = !DILocation(line: 2686, column: 7, scope: !5858)
!5878 = !DILocation(line: 2690, column: 7, scope: !5858)
!5879 = !DILocation(line: 2691, column: 34, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2690, column: 7)
!5881 = !DILocation(line: 2691, column: 16, scope: !5880)
!5882 = !DILocation(line: 2691, column: 5, scope: !5880)
!5883 = !DILocation(line: 2693, column: 10, scope: !5858)
!5884 = !DILocation(line: 2697, column: 9, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2697, column: 7)
!5886 = !DILocation(line: 2697, column: 7, scope: !5858)
!5887 = !DILocation(line: 2699, column: 13, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 2698, column: 5)
!5889 = !DILocation(line: 2699, column: 7, scope: !5888)
!5890 = !DILocation(line: 2700, column: 7, scope: !5888)
!5891 = !DILocation(line: 2704, column: 1, scope: !5858)
!5892 = distinct !DISubprogram(name: "ps_has_conflicts", scope: !3, file: !3, line: 2727, type: !5893, scopeLine: 2728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!750, !2013, !750, !750}
!5895 = !{!5896, !5897, !5898, !5899, !5900, !5904, !5905}
!5896 = !DILocalVariable(name: "ps", arg: 1, scope: !5892, file: !3, line: 2727, type: !2013)
!5897 = !DILocalVariable(name: "from", arg: 2, scope: !5892, file: !3, line: 2727, type: !750)
!5898 = !DILocalVariable(name: "to", arg: 3, scope: !5892, file: !3, line: 2727, type: !750)
!5899 = !DILocalVariable(name: "cycle", scope: !5892, file: !3, line: 2729, type: !750)
!5900 = !DILocalVariable(name: "crr_insn", scope: !5901, file: !3, line: 2735, type: !2021)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2734, column: 5)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2733, column: 3)
!5903 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2733, column: 3)
!5904 = !DILocalVariable(name: "can_issue_more", scope: !5901, file: !3, line: 2737, type: !750)
!5905 = !DILocalVariable(name: "insn", scope: !5906, file: !3, line: 2744, type: !795)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 2743, column: 2)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2740, column: 7)
!5908 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2740, column: 7)
!5909 = !DILocation(line: 0, scope: !5892)
!5910 = !DILocation(line: 2731, column: 16, scope: !5892)
!5911 = !DILocation(line: 2731, column: 3, scope: !5892)
!5912 = !DILocation(line: 0, scope: !5908)
!5913 = !DILocation(line: 2733, column: 8, scope: !5903)
!5914 = !DILocation(line: 0, scope: !5903)
!5915 = !DILocation(line: 2733, column: 28, scope: !5902)
!5916 = !DILocation(line: 2733, column: 3, scope: !5903)
!5917 = !DILocation(line: 2737, column: 28, scope: !5901)
!5918 = !DILocation(line: 0, scope: !5901)
!5919 = !DILocation(line: 2740, column: 27, scope: !5908)
!5920 = !DILocation(line: 2740, column: 32, scope: !5908)
!5921 = !DILocation(line: 2740, column: 23, scope: !5908)
!5922 = !DILocation(line: 2740, column: 12, scope: !5908)
!5923 = !DILocation(line: 2737, column: 11, scope: !5901)
!5924 = !DILocation(line: 2740, column: 7, scope: !5908)
!5925 = !DILocation(line: 2744, column: 25, scope: !5906)
!5926 = !DILocation(line: 2744, column: 31, scope: !5906)
!5927 = !DILocation(line: 0, scope: !5906)
!5928 = !DILocation(line: 2746, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 2746, column: 8)
!5930 = !DILocation(line: 2746, column: 8, scope: !5906)
!5931 = !DILocation(line: 2750, column: 9, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 2750, column: 8)
!5933 = !DILocation(line: 2750, column: 24, scope: !5932)
!5934 = !DILocation(line: 2750, column: 46, scope: !5932)
!5935 = !DILocation(line: 2750, column: 27, scope: !5932)
!5936 = !DILocation(line: 2750, column: 8, scope: !5906)
!5937 = !DILocation(line: 2755, column: 26, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 2755, column: 8)
!5939 = !DILocation(line: 2755, column: 8, scope: !5938)
!5940 = !DILocation(line: 2755, column: 44, scope: !5938)
!5941 = !DILocation(line: 2755, column: 8, scope: !5906)
!5942 = !DILocation(line: 2758, column: 22, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 2758, column: 8)
!5944 = !DILocation(line: 2758, column: 8, scope: !5943)
!5945 = !DILocation(line: 2758, column: 8, scope: !5906)
!5946 = !DILocation(line: 2760, column: 38, scope: !5943)
!5947 = !DILocation(line: 2760, column: 50, scope: !5943)
!5948 = !DILocation(line: 2760, column: 8, scope: !5943)
!5949 = !DILocation(line: 2759, column: 6, scope: !5943)
!5950 = !DILocation(line: 2764, column: 13, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2764, column: 13)
!5952 = !DILocation(line: 2764, column: 39, scope: !5951)
!5953 = !DILocation(line: 2765, column: 6, scope: !5951)
!5954 = !DILocation(line: 2765, column: 35, scope: !5951)
!5955 = !DILocation(line: 2764, column: 13, scope: !5943)
!5956 = !DILocation(line: 2742, column: 26, scope: !5907)
!5957 = !DILocation(line: 2740, column: 7, scope: !5907)
!5958 = distinct !{!5958, !5924, !5959}
!5959 = !DILocation(line: 2767, column: 2, scope: !5908)
!5960 = !DILocation(line: 2770, column: 7, scope: !5901)
!5961 = !DILocation(line: 2771, column: 5, scope: !5902)
!5962 = !DILocation(line: 2733, column: 40, scope: !5902)
!5963 = !DILocation(line: 2733, column: 3, scope: !5902)
!5964 = distinct !{!5964, !5916, !5965}
!5965 = !DILocation(line: 2771, column: 5, scope: !5903)
!5966 = !DILocation(line: 2773, column: 1, scope: !5892)
!5967 = distinct !DISubprogram(name: "ps_insn_advance_column", scope: !3, file: !3, line: 2629, type: !5968, scopeLine: 2631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!750, !2013, !2021, !1991}
!5970 = !{!5971, !5972, !5973, !5974, !5975, !5976, !5977}
!5971 = !DILocalVariable(name: "ps", arg: 1, scope: !5967, file: !3, line: 2629, type: !2013)
!5972 = !DILocalVariable(name: "ps_i", arg: 2, scope: !5967, file: !3, line: 2629, type: !2021)
!5973 = !DILocalVariable(name: "must_follow", arg: 3, scope: !5967, file: !3, line: 2630, type: !1991)
!5974 = !DILocalVariable(name: "prev", scope: !5967, file: !3, line: 2632, type: !2021)
!5975 = !DILocalVariable(name: "next", scope: !5967, file: !3, line: 2632, type: !2021)
!5976 = !DILocalVariable(name: "row", scope: !5967, file: !3, line: 2633, type: !750)
!5977 = !DILocalVariable(name: "next_node", scope: !5967, file: !3, line: 2634, type: !1962)
!5978 = !DILocation(line: 0, scope: !5967)
!5979 = !DILocation(line: 2636, column: 8, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2636, column: 7)
!5981 = !DILocation(line: 2636, column: 15, scope: !5980)
!5982 = !DILocation(line: 2636, column: 11, scope: !5980)
!5983 = !DILocation(line: 2639, column: 9, scope: !5967)
!5984 = !DILocation(line: 2641, column: 15, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2641, column: 7)
!5986 = !DILocation(line: 2641, column: 9, scope: !5985)
!5987 = !DILocation(line: 2641, column: 7, scope: !5967)
!5988 = !DILocation(line: 2648, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2648, column: 7)
!5990 = !DILocation(line: 2648, column: 19, scope: !5989)
!5991 = !DILocation(line: 2644, column: 34, scope: !5967)
!5992 = !DILocation(line: 2648, column: 22, scope: !5989)
!5993 = !DILocation(line: 2648, column: 7, scope: !5967)
!5994 = !DILocation(line: 2652, column: 16, scope: !5967)
!5995 = !DILocation(line: 2655, column: 19, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2655, column: 7)
!5997 = !DILocation(line: 2655, column: 15, scope: !5996)
!5998 = !DILocation(line: 2655, column: 12, scope: !5996)
!5999 = !DILocation(line: 2655, column: 7, scope: !5967)
!6000 = !DILocation(line: 2656, column: 19, scope: !5996)
!6001 = !DILocation(line: 2656, column: 5, scope: !5996)
!6002 = !DILocation(line: 2658, column: 29, scope: !5967)
!6003 = !DILocation(line: 2658, column: 21, scope: !5967)
!6004 = !DILocation(line: 2660, column: 13, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2660, column: 7)
!6006 = !DILocation(line: 2660, column: 7, scope: !6005)
!6007 = !DILocation(line: 2660, column: 7, scope: !5967)
!6008 = !DILocation(line: 2661, column: 24, scope: !6005)
!6009 = !DILocation(line: 2661, column: 36, scope: !6005)
!6010 = !DILocation(line: 2661, column: 5, scope: !6005)
!6011 = !DILocation(line: 2663, column: 21, scope: !5967)
!6012 = !DILocation(line: 2664, column: 21, scope: !5967)
!6013 = !DILocation(line: 2666, column: 9, scope: !5967)
!6014 = !DILocation(line: 2666, column: 21, scope: !5967)
!6015 = !DILocation(line: 2667, column: 7, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 2667, column: 7)
!6017 = !DILocation(line: 2667, column: 7, scope: !5967)
!6018 = !DILocation(line: 2668, column: 11, scope: !6016)
!6019 = !DILocation(line: 2668, column: 23, scope: !6016)
!6020 = !DILocation(line: 2668, column: 5, scope: !6016)
!6021 = !DILocation(line: 2671, column: 1, scope: !5967)
!6022 = distinct !DISubprogram(name: "remove_node_from_ps", scope: !3, file: !3, line: 2534, type: !6023, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6025)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!749, !2013, !2021}
!6025 = !{!6026, !6027, !6028}
!6026 = !DILocalVariable(name: "ps", arg: 1, scope: !6022, file: !3, line: 2534, type: !2013)
!6027 = !DILocalVariable(name: "ps_i", arg: 2, scope: !6022, file: !3, line: 2534, type: !2021)
!6028 = !DILocalVariable(name: "row", scope: !6022, file: !3, line: 2536, type: !750)
!6029 = !DILocation(line: 0, scope: !6022)
!6030 = !DILocation(line: 2538, column: 8, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 2538, column: 7)
!6032 = !DILocation(line: 2538, column: 15, scope: !6031)
!6033 = !DILocation(line: 2538, column: 11, scope: !6031)
!6034 = !DILocation(line: 2541, column: 9, scope: !6022)
!6035 = !DILocation(line: 2542, column: 15, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 2542, column: 7)
!6037 = !DILocation(line: 2542, column: 9, scope: !6036)
!6038 = !DILocation(line: 2542, column: 7, scope: !6022)
!6039 = !DILocation(line: 2544, column: 23, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 2544, column: 11)
!6041 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 2543, column: 5)
!6042 = !DILocation(line: 2544, column: 19, scope: !6040)
!6043 = !DILocation(line: 2544, column: 16, scope: !6040)
!6044 = !DILocation(line: 2544, column: 11, scope: !6041)
!6045 = !DILocation(line: 2547, column: 29, scope: !6041)
!6046 = !DILocation(line: 2547, column: 21, scope: !6041)
!6047 = !DILocation(line: 2548, column: 15, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 2548, column: 11)
!6049 = !DILocation(line: 2548, column: 11, scope: !6048)
!6050 = !DILocation(line: 2548, column: 11, scope: !6041)
!6051 = !DILocation(line: 2549, column: 17, scope: !6048)
!6052 = !DILocation(line: 2549, column: 29, scope: !6048)
!6053 = !DILocation(line: 2549, column: 2, scope: !6048)
!6054 = !DILocation(line: 2553, column: 46, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 2552, column: 5)
!6056 = !DILocation(line: 2553, column: 26, scope: !6055)
!6057 = !DILocation(line: 2553, column: 38, scope: !6055)
!6058 = !DILocation(line: 2554, column: 17, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2554, column: 11)
!6060 = !DILocation(line: 2554, column: 11, scope: !6059)
!6061 = !DILocation(line: 2554, column: 11, scope: !6055)
!6062 = !DILocation(line: 2555, column: 41, scope: !6059)
!6063 = !DILocation(line: 2555, column: 21, scope: !6059)
!6064 = !DILocation(line: 2555, column: 33, scope: !6059)
!6065 = !DILocation(line: 2555, column: 2, scope: !6059)
!6066 = !DILocation(line: 2557, column: 9, scope: !6022)
!6067 = !DILocation(line: 2557, column: 3, scope: !6022)
!6068 = !DILocation(line: 2558, column: 3, scope: !6022)
!6069 = !DILocation(line: 2559, column: 1, scope: !6022)
!6070 = distinct !DISubprogram(name: "create_ps_insn", scope: !3, file: !3, line: 2517, type: !6071, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6073)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!2021, !1962, !750, !750}
!6073 = !{!6074, !6075, !6076, !6077}
!6074 = !DILocalVariable(name: "node", arg: 1, scope: !6070, file: !3, line: 2517, type: !1962)
!6075 = !DILocalVariable(name: "rest_count", arg: 2, scope: !6070, file: !3, line: 2517, type: !750)
!6076 = !DILocalVariable(name: "cycle", arg: 3, scope: !6070, file: !3, line: 2517, type: !750)
!6077 = !DILocalVariable(name: "ps_i", scope: !6070, file: !3, line: 2519, type: !2021)
!6078 = !DILocation(line: 0, scope: !6070)
!6079 = !DILocation(line: 2519, column: 22, scope: !6070)
!6080 = !DILocation(line: 2521, column: 9, scope: !6070)
!6081 = !DILocation(line: 2521, column: 14, scope: !6070)
!6082 = !DILocation(line: 2522, column: 9, scope: !6070)
!6083 = !DILocation(line: 2522, column: 21, scope: !6070)
!6084 = !DILocation(line: 2523, column: 9, scope: !6070)
!6085 = !DILocation(line: 2523, column: 21, scope: !6070)
!6086 = !DILocation(line: 2524, column: 9, scope: !6070)
!6087 = !DILocation(line: 2524, column: 24, scope: !6070)
!6088 = !DILocation(line: 2525, column: 9, scope: !6070)
!6089 = !DILocation(line: 2525, column: 15, scope: !6070)
!6090 = !DILocation(line: 2527, column: 3, scope: !6070)
!6091 = distinct !DISubprogram(name: "ps_insn_find_column", scope: !3, file: !3, line: 2568, type: !6092, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!749, !2013, !2021, !1991, !1991}
!6094 = !{!6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102}
!6095 = !DILocalVariable(name: "ps", arg: 1, scope: !6091, file: !3, line: 2568, type: !2013)
!6096 = !DILocalVariable(name: "ps_i", arg: 2, scope: !6091, file: !3, line: 2568, type: !2021)
!6097 = !DILocalVariable(name: "must_precede", arg: 3, scope: !6091, file: !3, line: 2569, type: !1991)
!6098 = !DILocalVariable(name: "must_follow", arg: 4, scope: !6091, file: !3, line: 2569, type: !1991)
!6099 = !DILocalVariable(name: "next_ps_i", scope: !6091, file: !3, line: 2571, type: !2021)
!6100 = !DILocalVariable(name: "first_must_follow", scope: !6091, file: !3, line: 2572, type: !2021)
!6101 = !DILocalVariable(name: "last_must_precede", scope: !6091, file: !3, line: 2573, type: !2021)
!6102 = !DILocalVariable(name: "row", scope: !6091, file: !3, line: 2574, type: !750)
!6103 = !DILocation(line: 0, scope: !6091)
!6104 = !DILocation(line: 2576, column: 9, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 2576, column: 7)
!6106 = !DILocation(line: 2576, column: 7, scope: !6091)
!6107 = !DILocation(line: 2579, column: 9, scope: !6091)
!6108 = !DILocation(line: 2584, column: 24, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 2584, column: 3)
!6110 = !DILocation(line: 2584, column: 20, scope: !6109)
!6111 = !DILocation(line: 0, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 2588, column: 11)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 2587, column: 5)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2584, column: 3)
!6115 = !DILocation(line: 0, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 2591, column: 11)
!6117 = !DILocation(line: 2584, column: 8, scope: !6109)
!6118 = !DILocation(line: 0, scope: !6109)
!6119 = !DILocation(line: 2584, column: 3, scope: !6109)
!6120 = !DILocation(line: 2586, column: 31, scope: !6114)
!6121 = !DILocation(line: 2584, column: 3, scope: !6114)
!6122 = distinct !{!6122, !6119, !6123}
!6123 = !DILocation(line: 2600, column: 5, scope: !6109)
!6124 = !DILocation(line: 2604, column: 9, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 2604, column: 7)
!6126 = !DILocation(line: 2591, column: 27, scope: !6116)
!6127 = !DILocation(line: 2591, column: 11, scope: !6113)
!6128 = !DILocation(line: 2595, column: 10, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 2592, column: 9)
!6130 = !DILocation(line: 2572, column: 15, scope: !6091)
!6131 = !DILocation(line: 2588, column: 26, scope: !6112)
!6132 = !DILocation(line: 2589, column: 9, scope: !6112)
!6133 = !DILocation(line: 2589, column: 4, scope: !6112)
!6134 = !DILocation(line: 2591, column: 24, scope: !6116)
!6135 = !DILocation(line: 2595, column: 10, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 2595, column: 10)
!6137 = !DILocation(line: 2604, column: 7, scope: !6091)
!6138 = !DILocation(line: 2606, column: 27, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 2605, column: 5)
!6140 = !DILocation(line: 2606, column: 13, scope: !6139)
!6141 = !DILocation(line: 2606, column: 25, scope: !6139)
!6142 = !DILocation(line: 2607, column: 13, scope: !6139)
!6143 = !DILocation(line: 2607, column: 25, scope: !6139)
!6144 = !DILocation(line: 2608, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2608, column: 11)
!6146 = !DILocation(line: 2608, column: 11, scope: !6139)
!6147 = !DILocation(line: 2609, column: 25, scope: !6145)
!6148 = !DILocation(line: 2609, column: 37, scope: !6145)
!6149 = !DILocation(line: 2609, column: 6, scope: !6145)
!6150 = !DILocation(line: 2610, column: 11, scope: !6139)
!6151 = !DILocation(line: 2610, column: 7, scope: !6139)
!6152 = !DILocation(line: 2610, column: 21, scope: !6139)
!6153 = !DILocation(line: 2611, column: 5, scope: !6139)
!6154 = !DILocation(line: 2614, column: 46, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 2613, column: 5)
!6156 = !DILocation(line: 2614, column: 13, scope: !6155)
!6157 = !DILocation(line: 2614, column: 25, scope: !6155)
!6158 = !DILocation(line: 2615, column: 38, scope: !6155)
!6159 = !DILocation(line: 2616, column: 13, scope: !6155)
!6160 = !DILocation(line: 2616, column: 25, scope: !6155)
!6161 = !DILocation(line: 2617, column: 17, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2617, column: 11)
!6163 = !DILocation(line: 2617, column: 11, scope: !6162)
!6164 = !DILocation(line: 2617, column: 11, scope: !6155)
!6165 = !DILocation(line: 2618, column: 28, scope: !6162)
!6166 = !DILocation(line: 2618, column: 40, scope: !6162)
!6167 = !DILocation(line: 2618, column: 9, scope: !6162)
!6168 = !DILocation(line: 2622, column: 1, scope: !6091)
!6169 = distinct !DISubprogram(name: "advance_one_cycle", scope: !3, file: !3, line: 2708, type: !2108, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!6170 = !DILocation(line: 2710, column: 21, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2710, column: 7)
!6172 = !DILocation(line: 2710, column: 7, scope: !6171)
!6173 = !DILocation(line: 2710, column: 7, scope: !6169)
!6174 = !DILocation(line: 2711, column: 23, scope: !6171)
!6175 = !DILocation(line: 2712, column: 9, scope: !6171)
!6176 = !DILocation(line: 2711, column: 5, scope: !6171)
!6177 = !DILocation(line: 2714, column: 21, scope: !6169)
!6178 = !DILocation(line: 2714, column: 3, scope: !6169)
!6179 = !DILocation(line: 2716, column: 21, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2716, column: 7)
!6181 = !DILocation(line: 2716, column: 7, scope: !6180)
!6182 = !DILocation(line: 2716, column: 7, scope: !6169)
!6183 = !DILocation(line: 2717, column: 23, scope: !6180)
!6184 = !DILocation(line: 2718, column: 9, scope: !6180)
!6185 = !DILocation(line: 2717, column: 5, scope: !6180)
!6186 = !DILocation(line: 2719, column: 1, scope: !6169)
!6187 = distinct !DISubprogram(name: "free_ps_insns", scope: !3, file: !3, line: 2446, type: !3704, scopeLine: 2447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6188)
!6188 = !{!6189, !6190, !6191}
!6189 = !DILocalVariable(name: "ps", arg: 1, scope: !6187, file: !3, line: 2446, type: !2013)
!6190 = !DILocalVariable(name: "i", scope: !6187, file: !3, line: 2448, type: !750)
!6191 = !DILocalVariable(name: "ps_insn", scope: !6192, file: !3, line: 2454, type: !2021)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 2453, column: 2)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 2451, column: 5)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 2450, column: 3)
!6195 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 2450, column: 3)
!6196 = !DILocation(line: 0, scope: !6187)
!6197 = !DILocation(line: 0, scope: !6194)
!6198 = !DILocation(line: 0, scope: !6193)
!6199 = !DILocation(line: 2450, column: 8, scope: !6195)
!6200 = !DILocation(line: 0, scope: !6195)
!6201 = !DILocation(line: 2450, column: 23, scope: !6194)
!6202 = !DILocation(line: 2450, column: 17, scope: !6194)
!6203 = !DILocation(line: 2450, column: 3, scope: !6195)
!6204 = !DILocation(line: 2452, column: 7, scope: !6193)
!6205 = !DILocation(line: 2452, column: 18, scope: !6193)
!6206 = !DILocation(line: 2452, column: 14, scope: !6193)
!6207 = !DILocation(line: 2454, column: 39, scope: !6192)
!6208 = !DILocation(line: 2456, column: 4, scope: !6192)
!6209 = !DILocation(line: 2457, column: 8, scope: !6192)
!6210 = !DILocation(line: 2457, column: 4, scope: !6192)
!6211 = !DILocation(line: 2457, column: 16, scope: !6192)
!6212 = distinct !{!6212, !6204, !6213}
!6213 = !DILocation(line: 2458, column: 2, scope: !6193)
!6214 = !DILocation(line: 2459, column: 19, scope: !6193)
!6215 = !DILocation(line: 2450, column: 28, scope: !6194)
!6216 = !DILocation(line: 2450, column: 3, scope: !6194)
!6217 = distinct !{!6217, !6203, !6218}
!6218 = !DILocation(line: 2460, column: 5, scope: !6195)
!6219 = !DILocation(line: 2461, column: 1, scope: !6187)
!6220 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !6221, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!3853, !3858}
!6223 = !{!6224, !6225}
!6224 = !DILocalVariable(name: "ev", arg: 1, scope: !6220, file: !155, line: 696, type: !3858)
!6225 = !DILocalVariable(name: "i", scope: !6220, file: !155, line: 698, type: !3853)
!6226 = !DILocation(line: 0, scope: !6220)
!6227 = !DILocation(line: 700, column: 5, scope: !6220)
!6228 = !DILocation(line: 700, column: 11, scope: !6220)
!6229 = !DILocation(line: 701, column: 5, scope: !6220)
!6230 = !DILocation(line: 701, column: 15, scope: !6220)
!6231 = !DILocation(line: 703, column: 3, scope: !6220)
!6232 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !6233, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6236)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!749, !3853, !6235}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!6236 = !{!6237, !6238}
!6237 = !DILocalVariable(name: "ei", arg: 1, scope: !6232, file: !155, line: 771, type: !3853)
!6238 = !DILocalVariable(name: "p", arg: 2, scope: !6232, file: !155, line: 771, type: !6235)
!6239 = !DILocation(line: 0, scope: !6232)
!6240 = !DILocation(line: 773, column: 8, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6232, file: !155, line: 773, column: 7)
!6242 = !DILocation(line: 773, column: 7, scope: !6232)
!6243 = !DILocation(line: 775, column: 12, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !155, line: 774, column: 5)
!6245 = !DILocation(line: 776, column: 7, scope: !6244)
!6246 = !DILocation(line: 781, column: 7, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6241, file: !155, line: 779, column: 5)
!6248 = !DILocation(line: 0, scope: !6241)
!6249 = !DILocation(line: 783, column: 1, scope: !6232)
!6250 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !6251, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6254)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{null, !6253}
!6253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!6254 = !{!6255}
!6255 = !DILocalVariable(name: "i", arg: 1, scope: !6250, file: !155, line: 736, type: !6253)
!6256 = !DILocation(line: 0, scope: !6250)
!6257 = !DILocation(line: 738, column: 3, scope: !6250)
!6258 = !DILocation(line: 739, column: 11, scope: !6250)
!6259 = !DILocation(line: 740, column: 1, scope: !6250)
!6260 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !6261, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6263)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{!749, !3853}
!6263 = !{!6264}
!6264 = !DILocalVariable(name: "i", arg: 1, scope: !6260, file: !155, line: 721, type: !3853)
!6265 = !DILocation(line: 723, column: 22, scope: !6260)
!6266 = !DILocation(line: 723, column: 19, scope: !6260)
!6267 = !DILocation(line: 723, column: 10, scope: !6260)
!6268 = !DILocation(line: 723, column: 3, scope: !6260)
!6269 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !6270, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!781, !3853}
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "i", arg: 1, scope: !6269, file: !155, line: 752, type: !3853)
!6274 = !DILocation(line: 754, column: 10, scope: !6269)
!6275 = !DILocation(line: 754, column: 3, scope: !6269)
!6276 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !6277, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!769, !3853}
!6279 = !{!6280}
!6280 = !DILocalVariable(name: "i", arg: 1, scope: !6276, file: !155, line: 685, type: !3853)
!6281 = !DILocation(line: 687, column: 3, scope: !6276)
!6282 = !DILocation(line: 688, column: 10, scope: !6276)
!6283 = !DILocation(line: 688, column: 3, scope: !6276)
!6284 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !6285, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6287)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!781, !4372, !7}
!6287 = !{!6288, !6289}
!6288 = !DILocalVariable(name: "vec_", arg: 1, scope: !6284, file: !155, line: 150, type: !4372)
!6289 = !DILocalVariable(name: "ix_", arg: 2, scope: !6284, file: !155, line: 150, type: !7)
!6290 = !DILocation(line: 0, scope: !6284)
!6291 = !DILocation(line: 150, column: 1, scope: !6284)
!6292 = distinct !DISubprogram(name: "rhs_regno", scope: !593, file: !593, line: 1051, type: !6293, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!7, !2154}
!6295 = !{!6296}
!6296 = !DILocalVariable(name: "x", arg: 1, scope: !6292, file: !593, line: 1051, type: !2154)
!6297 = !DILocation(line: 0, scope: !6292)
!6298 = !DILocation(line: 1053, column: 10, scope: !6292)
!6299 = !DILocation(line: 1053, column: 3, scope: !6292)
!6300 = distinct !DISubprogram(name: "duplicate_insns_of_cycles", scope: !3, file: !3, line: 634, type: !6301, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6303)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{null, !2013, !750, !750, !750, !795}
!6303 = !{!6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6317, !6318, !6319}
!6304 = !DILocalVariable(name: "ps", arg: 1, scope: !6300, file: !3, line: 634, type: !2013)
!6305 = !DILocalVariable(name: "from_stage", arg: 2, scope: !6300, file: !3, line: 634, type: !750)
!6306 = !DILocalVariable(name: "to_stage", arg: 3, scope: !6300, file: !3, line: 635, type: !750)
!6307 = !DILocalVariable(name: "for_prolog", arg: 4, scope: !6300, file: !3, line: 635, type: !750)
!6308 = !DILocalVariable(name: "count_reg", arg: 5, scope: !6300, file: !3, line: 635, type: !795)
!6309 = !DILocalVariable(name: "row", scope: !6300, file: !3, line: 637, type: !750)
!6310 = !DILocalVariable(name: "ps_ij", scope: !6300, file: !3, line: 638, type: !2021)
!6311 = !DILocalVariable(name: "u_node", scope: !6312, file: !3, line: 643, type: !1962)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 642, column: 7)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 641, column: 5)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 641, column: 5)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 640, column: 3)
!6316 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 640, column: 3)
!6317 = !DILocalVariable(name: "j", scope: !6312, file: !3, line: 644, type: !750)
!6318 = !DILocalVariable(name: "i_reg_moves", scope: !6312, file: !3, line: 644, type: !750)
!6319 = !DILocalVariable(name: "reg_move", scope: !6312, file: !3, line: 645, type: !795)
!6320 = !DILocation(line: 0, scope: !6300)
!6321 = !DILocation(line: 0, scope: !6315)
!6322 = !DILocation(line: 0, scope: !6314)
!6323 = !DILocation(line: 0, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 654, column: 6)
!6325 = !DILocation(line: 640, column: 8, scope: !6316)
!6326 = !DILocation(line: 0, scope: !6316)
!6327 = !DILocation(line: 640, column: 27, scope: !6315)
!6328 = !DILocation(line: 640, column: 21, scope: !6315)
!6329 = !DILocation(line: 640, column: 3, scope: !6316)
!6330 = !DILocation(line: 641, column: 22, scope: !6314)
!6331 = !DILocation(line: 641, column: 18, scope: !6314)
!6332 = !DILocation(line: 641, column: 10, scope: !6314)
!6333 = !DILocation(line: 641, column: 5, scope: !6314)
!6334 = !DILocation(line: 643, column: 31, scope: !6312)
!6335 = !DILocation(line: 0, scope: !6312)
!6336 = !DILocation(line: 651, column: 49, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 651, column: 13)
!6338 = !DILocation(line: 651, column: 13, scope: !6337)
!6339 = !DILocation(line: 651, column: 13, scope: !6312)
!6340 = !DILocation(line: 677, column: 20, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 672, column: 4)
!6342 = !DILocation(line: 678, column: 30, scope: !6341)
!6343 = !DILocation(line: 678, column: 51, scope: !6341)
!6344 = !DILocation(line: 678, column: 14, scope: !6341)
!6345 = !DILocation(line: 679, column: 20, scope: !6341)
!6346 = !DILocation(line: 680, column: 20, scope: !6341)
!6347 = !DILocation(line: 683, column: 10, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 683, column: 10)
!6349 = !DILocation(line: 683, column: 10, scope: !6341)
!6350 = !DILocation(line: 685, column: 14, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 684, column: 8)
!6352 = !DILocation(line: 686, column: 8, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 686, column: 3)
!6354 = !DILocation(line: 0, scope: !6353)
!6355 = !DILocation(line: 0, scope: !6351)
!6356 = !DILocation(line: 686, column: 17, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 686, column: 3)
!6358 = !DILocation(line: 686, column: 3, scope: !6353)
!6359 = !DILocation(line: 687, column: 16, scope: !6357)
!6360 = !DILocation(line: 686, column: 47, scope: !6357)
!6361 = !DILocation(line: 686, column: 3, scope: !6357)
!6362 = distinct !{!6362, !6358, !6363}
!6363 = !DILocation(line: 687, column: 16, scope: !6353)
!6364 = !DILocation(line: 691, column: 7, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 691, column: 2)
!6366 = !DILocation(line: 0, scope: !6365)
!6367 = !DILocation(line: 691, column: 16, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 691, column: 2)
!6369 = !DILocation(line: 691, column: 2, scope: !6365)
!6370 = !DILocation(line: 693, column: 6, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 693, column: 6)
!6372 = !DILocation(line: 693, column: 27, scope: !6371)
!6373 = !DILocation(line: 694, column: 6, scope: !6371)
!6374 = !DILocation(line: 694, column: 30, scope: !6371)
!6375 = !DILocation(line: 693, column: 6, scope: !6312)
!6376 = !DILocation(line: 695, column: 34, scope: !6371)
!6377 = !DILocation(line: 695, column: 54, scope: !6371)
!6378 = !DILocation(line: 695, column: 4, scope: !6371)
!6379 = !DILocation(line: 641, column: 55, scope: !6313)
!6380 = !DILocation(line: 641, column: 5, scope: !6313)
!6381 = distinct !{!6381, !6333, !6382}
!6382 = !DILocation(line: 696, column: 7, scope: !6314)
!6383 = !DILocation(line: 692, column: 25, scope: !6368)
!6384 = !DILocation(line: 692, column: 15, scope: !6368)
!6385 = !DILocation(line: 692, column: 4, scope: !6368)
!6386 = !DILocation(line: 691, column: 32, scope: !6368)
!6387 = !DILocation(line: 691, column: 47, scope: !6368)
!6388 = !DILocation(line: 691, column: 2, scope: !6368)
!6389 = distinct !{!6389, !6369, !6390}
!6390 = !DILocation(line: 692, column: 44, scope: !6365)
!6391 = !DILocation(line: 640, column: 34, scope: !6315)
!6392 = !DILocation(line: 659, column: 31, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 655, column: 4)
!6394 = !DILocation(line: 659, column: 29, scope: !6393)
!6395 = !DILocation(line: 660, column: 20, scope: !6393)
!6396 = !DILocation(line: 661, column: 20, scope: !6393)
!6397 = !DILocation(line: 664, column: 10, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 664, column: 10)
!6399 = !DILocation(line: 664, column: 10, scope: !6393)
!6400 = !DILocation(line: 666, column: 14, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 665, column: 8)
!6402 = !DILocation(line: 667, column: 8, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 667, column: 3)
!6404 = !DILocation(line: 0, scope: !6403)
!6405 = !DILocation(line: 0, scope: !6401)
!6406 = !DILocation(line: 667, column: 17, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 667, column: 3)
!6408 = !DILocation(line: 667, column: 3, scope: !6403)
!6409 = !DILocation(line: 668, column: 16, scope: !6407)
!6410 = !DILocation(line: 667, column: 33, scope: !6407)
!6411 = !DILocation(line: 667, column: 3, scope: !6407)
!6412 = distinct !{!6412, !6408, !6413}
!6413 = !DILocation(line: 668, column: 16, scope: !6403)
!6414 = !DILocation(line: 640, column: 3, scope: !6315)
!6415 = distinct !{!6415, !6329, !6416}
!6416 = !DILocation(line: 696, column: 7, scope: !6316)
!6417 = !DILocation(line: 697, column: 1, scope: !6300)
